uint64_t fp_dh_a76f04db3060ff5fa2418d6c88618ee5(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)a1;
  v3 = *(_DWORD *)(a1 + 8)
     - 1779849041 * ((((2 * a1) | 0xEF3696CE) - a1 - 2006666087) ^ 0x42425F1C)
     + 1779849041 * (((&v3 | 0x7FAD482B) + (~&v3 | 0x8052B7D4)) ^ 0x4A745C51)
     + 930082624;
  v4 = v1;
  return fp_dh_55f17434783420b4f6d796b71c2fef45((uint64_t)&v3);
}

uint64_t VLxCLgDpiF(int a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v4;
  _DWORD v5[3];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = fp_dh_b13d31cdf1ea8ad773a4787ac8fb3a84 - fp_dh_d51ab05695ec6d04fed5582cf4664ed2 - (_QWORD)&v4;
  fp_dh_d51ab05695ec6d04fed5582cf4664ed2 = 1465486697 * v1 + 0x12A7059D161F0792;
  fp_dh_b13d31cdf1ea8ad773a4787ac8fb3a84 = 1465486697 * (v1 ^ 0xED58FA62E9E0F86ELL);
  v2 = 2100007649 * ((2 * (v5 & 0x1959C930) - v5 + 1722169038) ^ 0xABA833CF);
  v5[2] = 2800 - v2;
  v5[0] = (a1 ^ 0xDF78FD66) + ((2 * a1) & 0xBEF1FACC) + 1670864896 + v2;
  ((void (*)(_DWORD *))(fp_dh_adf6b0bdffaf5bf87776fbd3008e41e3[((105 * ((fp_dh_b13d31cdf1ea8ad773a4787ac8fb3a84 + 105 * v1 - 110) ^ 0x6E)) ^ fp_dh_c5b460a012d3cc8fb039f9aa3fa12598[fp_dh_4470c1007384f274892b192bec713ec0[(105 * ((fp_dh_b13d31cdf1ea8ad773a4787ac8fb3a84 + 105 * v1 - 110) ^ 0x6E))] ^ 0x9C])
                                                                        + 364]
                                 - 8))(v5);
  return (v5[1] - 1396931083);
}

uint64_t fp_dh_97e44c201330103875b9a8b0d9d9ac9c(uint64_t result)
{
  char v1;
  int v3;

  v1 = 45 * (((result | 0xAE) - result + (result & 0x51)) ^ 0x49);
  if ((*(_BYTE *)(result + 12) - v1) == 30 && ((*(_BYTE *)(result + 4) + v1) & 0xFE) == 92)
    v3 = 1396931083;
  else
    v3 = 1396888996;
  *(_DWORD *)(result + 8) = v3;
  return result;
}

uint64_t fp_dh_dcfad06b75309b8a9971c1fbd85c82ab(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void (*v5)(uint64_t *);
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 ^ (1715670589 * (((a1 | 0xFE51F855) - a1 + (a1 & 0x1AE07AA)) ^ 0xDB6019F7));
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(v2 - 0x352232BE152D8340);
  v4 = v1 - 1000535080;
  v9 = v1
     - 1000535080
     - 1129841929 * ((2 * (&v7 & 0x74B22BA8) - &v7 - 1957833648) ^ 0x70B2829F);
  v8 = v3;
  v5 = (void (*)(uint64_t *))(fp_dh_adf6b0bdffaf5bf87776fbd3008e41e3[v1 ^ 0x3BA300E9] - 12);
  v5(&v7);
  v8 = *(_QWORD *)(v2 - 0x352232BE152D8348);
  v9 = v4
     - 1129841929 * ((-1588865603 - (&v7 | 0xA14BD5BD) + (&v7 | 0x5EB42A42)) ^ 0xA54B7C8D);
  return ((uint64_t (*)(uint64_t *))v5)(&v7);
}

uint64_t fp_dh_a4db484297b8654ff8713b058e7dd5ed(uint64_t a1)
{
  uint64_t v1;
  _DWORD *v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t result;
  int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  uint64_t v86;
  int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_DWORD **)(a1 + 16);
  v87 = (*v2 ^ 0x3EBF770E) - 277157120 + ((2 * *v2) & 0x7D7EEE1C);
  v88 = (v2[1] ^ 0x3EBF770E) - 277157120 + ((2 * v2[1]) & 0x7D7EEE1C);
  v89 = (v2[2] ^ 0x3EBF770E) - 277157120 + ((2 * v2[2]) & 0x7D7EEE1C);
  v90 = (v2[3] ^ 0x3EBF770E) - 277157120 + ((2 * v2[3]) & 0x7D7EEE1C);
  v91 = (v2[4] ^ 0x3EBF770E) - 277157120 + ((2 * v2[4]) & 0x7D7EEE1C);
  v92 = (v2[5] ^ 0x3EBF770E) - 277157120 + ((2 * v2[5]) & 0x7D7EEE1C);
  v93 = (v2[6] ^ 0x3EBF770E) - 277157120 + ((2 * v2[6]) & 0x7D7EEE1C);
  v94 = (v2[7] ^ 0x3EBF770E) - 277157120 + ((2 * v2[7]) & 0x7D7EEE1C);
  v95 = (v2[8] ^ 0x3EBF770E) - 277157120 + ((2 * v2[8]) & 0x7D7EEE1C);
  v96 = (v2[9] ^ 0x3EBF770E) - 277157120 + ((2 * v2[9]) & 0x7D7EEE1C);
  v97 = (v2[10] ^ 0x3EBF770E) - 277157120 + ((2 * v2[10]) & 0x7D7EEE1C);
  v98 = (v2[11] ^ 0x3EBF770E) - 277157120 + ((2 * v2[11]) & 0x7D7EEE1C);
  v99 = (v2[12] ^ 0x3EBF770E) - 277157120 + ((2 * v2[12]) & 0x7D7EEE1C);
  v100 = (v2[13] ^ 0x3EBF770E) - 277157120 + ((2 * v2[13]) & 0x7D7EEE1C);
  v101 = (v2[14] ^ 0x3EBF770E) - 277157120 + ((2 * v2[14]) & 0x7D7EEE1C);
  v102 = (v2[15] ^ 0x3EBF770E) - 277157120 + ((2 * v2[15]) & 0x7D7EEE1C);
  v86 = v1;
  v3 = *(_DWORD *)(v1 - 0xB5807ECF70B8303);
  v4 = *(_DWORD *)(v1 - 0xB5807ECF70B82FFLL);
  v5 = *(_DWORD *)(v1 - 0xB5807ECF70B82FBLL);
  HIDWORD(v6) = *(_DWORD *)(v1 - 0xB5807ECF70B8307) + v87 - 1456455062 + (v4 & v3 | v5 & ~v3);
  LODWORD(v6) = HIDWORD(v6);
  v7 = (v6 >> 25) + v3 - ((2 * ((v6 >> 25) + v3)) & 0x1BC8097A) + 233047229;
  HIDWORD(v6) = v5 + v88 - 1165142712 + (v3 & (v7 ^ 0xDE404BD) | v4 & ~(v7 ^ 0xDE404BD));
  LODWORD(v6) = HIDWORD(v6);
  v8 = (v6 >> 20) + (v7 ^ 0xDE404BD) - ((2 * ((v6 >> 20) + (v7 ^ 0xDE404BD))) & 0x7FC3A5B2) - 1075719463;
  HIDWORD(v6) = v4 + v89 - 169472307 + ((v8 ^ 0xBFE1D2D9) & (v7 ^ (v3 - ((2 * v3) & 0x1BC8097A) + 233047229)) ^ v3);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v8 ^ 0xBFE1D2D9) - ((2 * ((v6 >> 15) + (v8 ^ 0xBFE1D2D9))) & 0xE7111600) - 209155328;
  v9 = v1 ^ 0xF3888B00;
  HIDWORD(v6) = v3
              + v90
              - 1820103456
              + ((((v1 ^ 0xF3888B00) & (v7 ^ 0xB205D664 ^ v8))
                - ((2 * ((v1 ^ 0xF3888B00) & (v7 ^ 0xB205D664 ^ v8))) & 0x1BC8097A)
                + 233047229) ^ v7);
  LODWORD(v6) = HIDWORD(v6);
  v10 = (v6 >> 10) + (v1 ^ 0xF3888B00) - ((2 * ((v6 >> 10) + (v1 ^ 0xF3888B00))) & 0x4080964C) + 541084454;
  HIDWORD(v6) = v91
              + (v7 ^ 0xDE404BD)
              - 951997023
              + ((((v10 ^ 0x20404B26) & (v8 ^ 0x4C6959D9 ^ v1))
                - ((2 * ((v10 ^ 0x20404B26) & (v8 ^ 0x4C6959D9 ^ v1))) & 0x7FC3A5B2)
                - 1075719463) ^ v8);
  LODWORD(v6) = HIDWORD(v6);
  v11 = (v6 >> 25) + (v10 ^ 0x20404B26) - ((2 * ((v6 >> 25) + (v10 ^ 0x20404B26))) & 0xB561F2EA) - 625936011;
  LODWORD(v2) = v11 ^ 0xDAB0F975;
  HIDWORD(v6) = v92
              + (v8 ^ 0xBFE1D2D9)
              + 424502300
              + ((((v11 ^ 0xDAB0F975) & (v1 ^ 0xD3C8C026 ^ v10))
                - ((2 * ((v11 ^ 0xDAB0F975) & (v1 ^ 0xD3C8C026 ^ v10))) & 0xE7111600)
                - 209155328) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 20) + (v11 ^ 0xDAB0F975) - ((2 * ((v6 >> 20) + (v11 ^ 0xDAB0F975))) & 0xAD8A0BC2) - 691730975;
  v12 = v1 ^ 0xD6C505E1;
  HIDWORD(v6) = v93
              + v9
              + 2046157829
              + ((((v1 ^ 0xD6C505E1) & (v10 ^ 0xFAF0B253 ^ v11))
                - ((2 * ((v1 ^ 0xD6C505E1) & (v10 ^ 0xFAF0B253 ^ v11))) & 0x4080964C)
                + 541084454) ^ v10);
  LODWORD(v6) = HIDWORD(v6);
  v13 = (v6 >> 15) + (v1 ^ 0xD6C505E1) - ((2 * ((v6 >> 15) + (v1 ^ 0xD6C505E1))) & 0xA83F01A6) - 736132909;
  HIDWORD(v6) = v94
              + (v10 ^ 0x20404B26)
              - 821284109
              + ((((v13 ^ 0xD41F80D3) & (v11 ^ 0xC75FC94 ^ v1))
                - ((2 * ((v13 ^ 0xD41F80D3) & (v11 ^ 0xC75FC94 ^ v1))) & 0xB561F2EA)
                - 625936011) ^ v11);
  LODWORD(v6) = HIDWORD(v6);
  v14 = (v6 >> 10) + (v13 ^ 0xD41F80D3) - ((2 * ((v6 >> 10) + (v13 ^ 0xD41F80D3))) & 0x578AD10C) + 734357638;
  v15 = v14 ^ 0x2BC56886;
  HIDWORD(v6) = v95
              + (_DWORD)v2
              + 994457290
              + ((((v14 ^ 0x2BC56886) & (v1 ^ 0x2DA8532 ^ v13))
                - ((2 * ((v14 ^ 0x2BC56886) & (v1 ^ 0x2DA8532 ^ v13))) & 0xAD8A0BC2)
                - 691730975) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 25) + (v14 ^ 0x2BC56886) - ((2 * ((v6 >> 25) + (v14 ^ 0x2BC56886))) & 0x3C36262A) + 505090837;
  v16 = v1 ^ 0x1E1B1315;
  HIDWORD(v6) = v96
              + v12
              + 1560974753
              + ((((v1 ^ 0x1E1B1315) & (v13 ^ 0xFFDAE855 ^ v14))
                - ((2 * ((v1 ^ 0x1E1B1315) & (v13 ^ 0xFFDAE855 ^ v14))) & 0xA83F01A6)
                - 736132909) ^ v13);
  LODWORD(v6) = HIDWORD(v6);
  v17 = (v6 >> 20) + (v1 ^ 0x1E1B1315) - ((2 * ((v6 >> 20) + (v1 ^ 0x1E1B1315))) & 0x6B312336) - 1248292453;
  v18 = v17 ^ 0xB598919B;
  HIDWORD(v6) = v97
              + (v13 ^ 0xD41F80D3)
              - 775620189
              + ((((v17 ^ 0xB598919B) & (v14 ^ 0x35DE7B93 ^ v1))
                - ((2 * ((v17 ^ 0xB598919B) & (v14 ^ 0x35DE7B93 ^ v1))) & 0x578AD10C)
                + 734357638) ^ v14);
  LODWORD(v6) = HIDWORD(v6);
  v19 = (v6 >> 15) + (v17 ^ 0xB598919B) - ((2 * ((v6 >> 15) + (v17 ^ 0xB598919B))) & 0xFA69B166) - 46868301;
  v20 = v19 ^ 0xFD34D8B3;
  HIDWORD(v6) = v98
              + v15
              + 1528985008
              + ((((v19 ^ 0xFD34D8B3) & (v1 ^ 0xAB83828E ^ v17))
                - ((2 * ((v19 ^ 0xFD34D8B3) & (v1 ^ 0xAB83828E ^ v17))) & 0x3C36262A)
                + 505090837) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 10) + (v19 ^ 0xFD34D8B3) - ((2 * ((v6 >> 10) + (v19 ^ 0xFD34D8B3))) & 0xB5B9878E) + 1524417479;
  v21 = v1 ^ 0x5ADCC3C7;
  HIDWORD(v6) = v99
              + v16
              + 1029025556
              + ((((v1 ^ 0x5ADCC3C7) & (v17 ^ 0x48AC4928 ^ v19))
                - ((2 * ((v1 ^ 0x5ADCC3C7) & (v17 ^ 0x48AC4928 ^ v19))) & 0x6B312336)
                - 1248292453) ^ v17);
  LODWORD(v6) = HIDWORD(v6);
  v22 = (v6 >> 25) + (v1 ^ 0x5ADCC3C7) - ((2 * ((v6 >> 25) + (v1 ^ 0x5ADCC3C7))) & 0x3B3C68F4) - 1650576262;
  HIDWORD(v6) = v100
              + v18
              - 815919227
              + ((((v22 ^ 0x9D9E347A) & (v19 ^ 0xA7E81B74 ^ v1))
                - ((2 * ((v22 ^ 0x9D9E347A) & (v19 ^ 0xA7E81B74 ^ v1))) & 0xFA69B166)
                - 46868301) ^ v19);
  LODWORD(v6) = HIDWORD(v6);
  v23 = (v6 >> 20) + (v22 ^ 0x9D9E347A) - ((2 * ((v6 >> 20) + (v22 ^ 0x9D9E347A))) & 0x4BC50750) + 635601832;
  v24 = v23 ^ 0x25E283A8;
  HIDWORD(v6) = v101
              + v20
              + 2017386880
              + ((((v23 ^ 0x25E283A8) & (v1 ^ 0xC742F7BD ^ v22))
                - ((2 * ((v23 ^ 0x25E283A8) & (v1 ^ 0xC742F7BD ^ v22))) & 0xB5B9878E)
                + 1524417479) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v23 ^ 0x25E283A8) - ((2 * ((v6 >> 15) + (v23 ^ 0x25E283A8))) & 0x6C75867C) - 1237662914;
  v25 = v1 ^ 0xB63AC33E;
  HIDWORD(v6) = v102
              + v21
              + 460957203
              + ((((v1 ^ 0xB63AC33E) & (v22 ^ 0xB87CB7D2 ^ v23))
                - ((2 * ((v1 ^ 0xB63AC33E) & (v22 ^ 0xB87CB7D2 ^ v23))) & 0x3B3C68F4)
                - 1650576262) ^ v22);
  LODWORD(v6) = HIDWORD(v6);
  v26 = (v6 >> 10) + (v1 ^ 0xB63AC33E) - ((2 * ((v6 >> 10) + (v1 ^ 0xB63AC33E))) & 0x93013980) + 1233165504;
  HIDWORD(v6) = v88
              + (v22 ^ 0x9D9E347A)
              - 941374636
              + ((((v1 ^ 0xFFBA5FFE ^ v26) & v24) - ((2 * ((v1 ^ 0xFFBA5FFE ^ v26) & v24)) & 0x6C75867C) - 1237662914) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v26 ^ 0x49809CC0;
  LODWORD(v1) = (v6 >> 27) + (v26 ^ 0x49809CC0) - ((2 * ((v6 >> 27) + (v26 ^ 0x49809CC0))) & 0x611EE002) + 814706689;
  HIDWORD(v6) = v93
              + v24
              - 1845079758
              + ((((v26 ^ 0x790FECC1 ^ v1) & v25) - ((2 * ((v26 ^ 0x790FECC1 ^ v1) & v25)) & 0x93013980) + 1233165504) ^ v26);
  LODWORD(v6) = HIDWORD(v6);
  v27 = v1 ^ 0x308F7001;
  v28 = (v6 >> 23) + (v1 ^ 0x308F7001) - ((2 * ((v6 >> 23) + (v1 ^ 0x308F7001))) & 0x10882984) + 138679490;
  HIDWORD(v6) = v98
              + v25
              - 131860413
              + ((((v1 ^ 0x38CB64C3 ^ v28) & v2)
                - ((2 * ((v1 ^ 0x38CB64C3 ^ v28) & v2)) & 0x611EE002)
                + 814706689) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v29 = v28 ^ 0x84414C2;
  LODWORD(v1) = (v6 >> 18) + (v28 ^ 0x84414C2) - ((2 * ((v6 >> 18) + (v28 ^ 0x84414C2))) & 0x5AD5CA9C) - 1385503410;
  HIDWORD(v6) = v87
              + (_DWORD)v2
              - 1149475428
              + ((((v28 ^ 0xA52EF18C ^ v1) & v27) - ((2 * ((v28 ^ 0xA52EF18C ^ v1) & v27)) & 0x10882984) + 138679490) ^ v28);
  LODWORD(v6) = HIDWORD(v6);
  v30 = v1 ^ 0xAD6AE54E;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xAD6AE54E) - ((2 * ((v6 >> 12) + (v1 ^ 0xAD6AE54E))) & 0x73798614) - 1178811638;
  HIDWORD(v6) = v92
              + v27
              - 1477136817
              + ((((v1 ^ 0x14D62644 ^ v2) & v29)
                - ((2 * ((v1 ^ 0x14D62644 ^ v2) & v29)) & 0x5AD5CA9C)
                - 1385503410) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v31 = v2 ^ 0xB9BCC30A;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0xB9BCC30A)
              - ((2 * ((v6 >> 27) + (v2 ^ 0xB9BCC30A))) & 0x216FF296)
              + 280492363;
  HIDWORD(v6) = v97
              + v29
              - 737562043
              + ((((v2 ^ 0xA90B3A41 ^ v1) & v30)
                - ((2 * ((v2 ^ 0xA90B3A41 ^ v1) & v30)) & 0x73798614)
                - 1178811638) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v32 = v1 ^ 0x10B7F94B;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x10B7F94B) - ((2 * ((v6 >> 23) + (v1 ^ 0x10B7F94B))) & 0xFC09B12C) + 2114246806;
  HIDWORD(v6) = v102
              + v30
              - 1436056461
              + ((((v1 ^ 0x6EB321DD ^ v2) & v31)
                - ((2 * ((v1 ^ 0x6EB321DD ^ v2) & v31)) & 0x216FF296)
                + 280492363) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v33 = v2 ^ 0x7E04D896;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0x7E04D896)
              - ((2 * ((v6 >> 18) + (v2 ^ 0x7E04D896))) & 0x5C99A17E)
              - 1370697537;
  HIDWORD(v6) = v91
              + v31
              - 1181115974
              + ((((v2 ^ 0xD0480829 ^ v1) & v32)
                - ((2 * ((v2 ^ 0xD0480829 ^ v1) & v32)) & 0xFC09B12C)
                + 2114246806) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v34 = v1 ^ 0xAE4CD0BF;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xAE4CD0BF) - ((2 * ((v6 >> 12) + (v1 ^ 0xAE4CD0BF))) & 0x6D8AF21A) - 1228572403;
  HIDWORD(v6) = v96
              + v32
              - 207131688
              + ((((v1 ^ 0x1889A9B2 ^ v2) & v33)
                - ((2 * ((v1 ^ 0x1889A9B2 ^ v2) & v33)) & 0x5C99A17E)
                - 1370697537) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v35 = v2 ^ 0xB6C5790D;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0xB6C5790D)
              - ((2 * ((v6 >> 27) + (v2 ^ 0xB6C5790D))) & 0x30FA67E2)
              + 410858481;
  HIDWORD(v6) = v101
              + v33
              - 1795381816
              + ((((v2 ^ 0xAEB84AFC ^ v1) & v34)
                - ((2 * ((v2 ^ 0xAEB84AFC ^ v1) & v34)) & 0x6D8AF21A)
                - 1228572403) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v36 = v1 ^ 0x187D33F1;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x187D33F1) - ((2 * ((v6 >> 23) + (v1 ^ 0x187D33F1))) & 0x70ADE062) + 945221681;
  HIDWORD(v6) = v90
              + v34
              - 962942087
              + ((((v1 ^ 0x202BC3C0 ^ v2) & v35)
                - ((2 * ((v1 ^ 0x202BC3C0 ^ v2) & v35)) & 0x30FA67E2)
                + 410858481) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v37 = v2 ^ 0x3856F031;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0x3856F031)
              - ((2 * ((v6 >> 18) + (v2 ^ 0x3856F031))) & 0x3A266B86)
              + 487798211;
  HIDWORD(v6) = v95
              + v35
              + 387953375
              + ((((v2 ^ 0x2545C5F2 ^ v1) & v36)
                - ((2 * ((v2 ^ 0x2545C5F2 ^ v1) & v36)) & 0x70ADE062)
                + 945221681) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x1D1335C3) - ((2 * ((v6 >> 12) + (v1 ^ 0x1D1335C3))) & 0xABCA3D3A) + 1441078941;
  HIDWORD(v6) = v100
              + v36
              + 2074707703
              + ((((v1 ^ 0x48F62B5E ^ v2) & v37)
                - ((2 * ((v1 ^ 0x48F62B5E ^ v2) & v37)) & 0x3A266B86)
                + 487798211) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v38 = (v6 >> 27)
      + (v2 ^ 0x55E51E9D)
      - ((2 * ((v6 >> 27) + (v2 ^ 0x55E51E9D))) & 0xBD26762A)
      + 1586707221;
  HIDWORD(v6) = v89
              + v37
              - 826981910
              + ((((v2 ^ 0xB762588 ^ v38) & (v1 ^ 0x1D1335C3))
                - ((2 * ((v2 ^ 0xB762588 ^ v38) & (v1 ^ 0x1D1335C3))) & 0xABCA3D3A)
                + 1441078941) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v39 = (v6 >> 23) + (v38 ^ 0x5E933B15) - ((2 * ((v6 >> 23) + (v38 ^ 0x5E933B15))) & 0xDDE0DB24) - 286233198;
  HIDWORD(v6) = v94
              + (v1 ^ 0x1D1335C3)
              + 959750347
              + ((((v38 ^ 0xB0635687 ^ v39) & (v2 ^ 0x55E51E9D))
                - ((2 * ((v38 ^ 0xB0635687 ^ v39) & (v2 ^ 0x55E51E9D))) & 0xBD26762A)
                + 1586707221) ^ v38);
  LODWORD(v6) = HIDWORD(v6);
  v40 = v39 ^ 0xEEF06D92;
  v41 = (v6 >> 18) + (v39 ^ 0xEEF06D92) - ((2 * ((v6 >> 18) + (v39 ^ 0xEEF06D92))) & 0xA045F96A) - 803013451;
  HIDWORD(v6) = v99
              + (v2 ^ 0x55E51E9D)
              + 1592781436
              + ((((v39 ^ 0x3ED29127 ^ v41) & (v38 ^ 0x5E933B15))
                - ((2 * ((v39 ^ 0x3ED29127 ^ v41) & (v38 ^ 0x5E933B15))) & 0xDDE0DB24)
                - 286233198) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  v42 = (v6 >> 12) + (v41 ^ 0xD022FCB5) - ((2 * ((v6 >> 12) + (v41 ^ 0xD022FCB5))) & 0x356A5D3C) - 1699402082;
  v43 = 4 * (v38 & 0xF ^ 5);
  v44 = *(int *)((char *)&v87 + v43);
  v45 = 4 * (v42 & 0xF ^ 0xE);
  *(int *)((char *)&v87 + v43) = *(int *)((char *)&v87 + v45);
  *(int *)((char *)&v87 + v45) = v44;
  v46 = 4 * (v41 & 0xF ^ 5u);
  LODWORD(v2) = *(int *)((char *)&v87 + v46);
  v47 = 4 * (v39 & 0xF ^ 2u);
  *(int *)((char *)&v87 + v46) = *(int *)((char *)&v87 + v47);
  *(int *)((char *)&v87 + v47) = (int)v2;
  v48 = 4 * ((v38 >> 4) ^ 1u);
  LODWORD(v2) = *(int *)((char *)&v87 + v48);
  v49 = 4 * ((v42 >> 4) ^ 9u);
  *(int *)((char *)&v87 + v48) = *(int *)((char *)&v87 + v49);
  *(int *)((char *)&v87 + v49) = (int)v2;
  v50 = 4 * ((v38 >> 8) & 0xF ^ 0xB);
  LODWORD(v2) = *(int *)((char *)&v87 + v50);
  v51 = 4 * ((v42 >> 8) & 0xF ^ 0xE);
  *(int *)((char *)&v87 + v50) = *(int *)((char *)&v87 + v51);
  *(int *)((char *)&v87 + v51) = (int)v2;
  v52 = 4 * (((unsigned __int16)v38 >> 12) ^ 3u);
  LODWORD(v2) = *(int *)((char *)&v87 + v52);
  v53 = 4
      * (((unsigned __int16)((v6 >> 12) + (v41 ^ 0xFCB5) - ((2 * ((v6 >> 12) + (v41 ^ 0xFCB5))) & 0x5D3C) + 11934) >> 12) ^ 2u);
  *(int *)((char *)&v87 + v52) = *(int *)((char *)&v87 + v53);
  *(int *)((char *)&v87 + v53) = (int)v2;
  HIDWORD(v6) = v92
              + (v38 ^ 0x5E933B15)
              - 775956684
              + (((v41 ^ 0x4A97D22B ^ v42) - ((2 * (v41 ^ 0x4A97D22B ^ v42)) & 0xDDE0DB24) - 286233198) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  v54 = (v6 >> 28) + (v42 ^ 0x9AB52E9E) - ((2 * ((v6 >> 28) + (v42 ^ 0x9AB52E9E))) & 0xF1145DEC) + 2022321910;
  v55 = v96;
  HIDWORD(v6) = v95
              + v40
              + 1496814707
              + (((v42 ^ 0xE23F0068 ^ v54) - ((2 * (v42 ^ 0xE23F0068 ^ v54)) & 0xA045F96A) - 803013451) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 21) + (v54 ^ 0x788A2EF6) - ((2 * ((v6 >> 21) + (v54 ^ 0x788A2EF6))) & 0xABC1D930) - 706679656;
  HIDWORD(v6) = v98
              + (v41 ^ 0xD022FCB5)
              + 1063452436
              + (((v52 ^ v54 ^ 0xAD6AC26E) - 2 * ((v52 ^ v54 ^ 0xAD6AC26E) & 0x1AB52E9F ^ (v52 ^ v54) & 1) - 1699402082) ^ v42);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = v52 ^ 0xD5E0EC98;
  LODWORD(v53) = (v6 >> 16) + (v52 ^ 0xD5E0EC98) - ((2 * ((v6 >> 16) + (v52 ^ 0xD5E0EC98))) & 0x67A44316) - 1278074485;
  HIDWORD(v6) = v101
              + (v42 ^ 0x9AB52E9E)
              - 810887682
              + (((v52 ^ 0x6632CD13 ^ v53) - ((2 * (v52 ^ 0x6632CD13 ^ v53)) & 0xF1145DEC) + 2022321910) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  v56 = v53 ^ 0xB3D2218B;
  v57 = (v6 >> 9) + (v53 ^ 0xB3D2218B) - ((2 * ((v6 >> 9) + (v53 ^ 0xB3D2218B))) & 0xF6A669C4) + 2069050594;
  HIDWORD(v6) = v88
              + (v54 ^ 0x788A2EF6)
              + 1988397110
              + (((v57 ^ v53 ^ 0xC8811569) - 2 * ((v57 ^ v53 ^ 0xC8811569) & 0x55E0EC9A ^ (v57 ^ v53) & 2) - 706679656) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 28) + (v57 ^ 0x7B5334E2) - ((2 * ((v6 >> 28) + (v57 ^ 0x7B5334E2))) & 0x85AEB920) - 1026073456;
  HIDWORD(v6) = v91
              + v45
              + 497315227
              + (((v57 ^ 0xB9846872 ^ v52) - ((2 * (v57 ^ 0xB9846872 ^ v52)) & 0x67A44316) - 1278074485) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = v52 ^ 0xC2D75C90;
  LODWORD(v53) = (v6 >> 21) + (v52 ^ 0xC2D75C90) - ((2 * ((v6 >> 21) + (v52 ^ 0xC2D75C90))) & 0x772E6326) + 999764371;
  HIDWORD(v6) = v94
              + v56
              - 931075758
              + (((v53 ^ v52 ^ 0xF9406D03) - 2 * ((v53 ^ v52 ^ 0xF9406D03) & 0x7B5334EA ^ (v53 ^ v52) & 8) + 2069050594) ^ v57);
  LODWORD(v6) = HIDWORD(v6);
  v58 = v53 ^ 0x3B973193;
  v59 = (v6 >> 16) + (v53 ^ 0x3B973193) - ((2 * ((v6 >> 16) + (v53 ^ 0x3B973193))) & 0x6E60EA1E) + 925922575;
  HIDWORD(v6) = v97
              + (v57 ^ 0x7B5334E2)
              - 1870308766
              + (((v59 ^ v53 ^ 0xCA7449C) - 2 * ((v59 ^ v53 ^ 0xCA7449C) & 0x42D75C92 ^ (v59 ^ v53) & 2) - 1026073456) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v59 ^ 0x3730750F;
  LODWORD(v52) = (v6 >> 9) + (v59 ^ 0x3730750F) - ((2 * ((v6 >> 9) + (v59 ^ 0x3730750F))) & 0x3484EB02) + 440563073;
  HIDWORD(v6) = v100
              + v45
              - 94298952
              + (((v59 ^ 0x2D72008E ^ v52) - ((2 * (v59 ^ 0x2D72008E ^ v52)) & 0x772E6326) + 999764371) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = v52 ^ 0x1A427581;
  LODWORD(v53) = (v6 >> 28) + (v52 ^ 0x1A427581) - ((2 * ((v6 >> 28) + (v52 ^ 0x1A427581))) & 0x7FBEA3D6) + 1071600107;
  HIDWORD(v6) = v87
              + v58
              - 1134115348
              + (((v53 ^ v52 ^ 0x259D246A) - 2 * ((v53 ^ v52 ^ 0x259D246A) & 0x3730751F ^ (v53 ^ v52) & 0x10) + 925922575) ^ v59);
  LODWORD(v6) = HIDWORD(v6);
  v60 = v53 ^ 0x3FDF51EB;
  v61 = (v6 >> 21) + (v53 ^ 0x3FDF51EB) - ((2 * ((v6 >> 21) + (v53 ^ 0x3FDF51EB))) & 0x89CA5EAC) + 1155870550;
  result = v89;
  HIDWORD(v6) = v90
              + (_DWORD)v2
              - 1498100105
              + (((v53 ^ 0x7B3A7EBD ^ v61) - ((2 * (v53 ^ 0x7B3A7EBD ^ v61)) & 0x3484EB02) + 440563073) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 16) + (v61 ^ 0x44E52F56) - ((2 * ((v6 >> 16) + (v61 ^ 0x44E52F56))) & 0x48C69A7A) - 1536996035;
  HIDWORD(v6) = v93
              + v45
              - 699548937
              + (((v52 ^ v61 ^ 0xE086626B) - 2 * ((v52 ^ v61 ^ 0xE086626B) & 0x3FDF51EF ^ (v52 ^ v61) & 4) + 1071600107) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = v52 ^ 0xA4634D3D;
  LODWORD(v53) = (v6 >> 9) + (v52 ^ 0xA4634D3D) - ((2 * ((v6 >> 9) + (v52 ^ 0xA4634D3D))) & 0x262D2E76) - 1827236037;
  HIDWORD(v6) = v96
              + v60
              - 1415942613
              + (((v53 ^ v52 ^ 0x3775DA06) - 2 * ((v53 ^ v52 ^ 0x3775DA06) & 0x44E52F5E ^ (v53 ^ v52) & 8) + 1155870550) ^ v61);
  LODWORD(v6) = HIDWORD(v6);
  v63 = v53 ^ 0x9316973B;
  v64 = (v6 >> 28) + (v53 ^ 0x9316973B) - ((2 * ((v6 >> 28) + (v53 ^ 0x9316973B))) & 0x6E63FC70) + 926023224;
  HIDWORD(v6) = v99
              + (v61 ^ 0x44E52F56)
              - 1197393961
              + (((v53 ^ 0xA4276903 ^ v64) - ((2 * (v53 ^ 0xA4276903 ^ v64)) & 0x48C69A7A) - 1536996035) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v64 ^ 0x3731FE38;
  LODWORD(v52) = (v6 >> 21) + (v64 ^ 0x3731FE38) - ((2 * ((v6 >> 21) + (v64 ^ 0x3731FE38))) & 0xCE9A555A) + 1733110445;
  HIDWORD(v6) = v102
              + v45
              - 244835606
              + (((v64 ^ 0x507CD495 ^ v52) - ((2 * (v64 ^ 0x507CD495 ^ v52)) & 0x262D2E76) - 1827236037) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  v65 = v52 ^ 0x674D2AAD;
  LODWORD(v53) = (v6 >> 16) + (v52 ^ 0x674D2AAD) - ((2 * ((v6 >> 16) + (v52 ^ 0x674D2AAD))) & 0xF9B16818) - 52906996;
  HIDWORD(v6) = v89
              + v63
              - 1770916777
              + (((v52 ^ 0x9B959EA1 ^ v53) - ((2 * (v52 ^ 0x9B959EA1 ^ v53)) & 0x6E63FC70) + 926023224) ^ v64);
  LODWORD(v6) = HIDWORD(v6);
  v66 = (v6 >> 9) + (v53 ^ 0xFCD8B40C) - ((2 * ((v6 >> 9) + (v53 ^ 0xFCD8B40C))) & 0xB2B2EF56) - 648448085;
  v67 = v66 ^ 0xD95977AB;
  HIDWORD(v6) = v87
              + (_DWORD)v2
              - 974208970
              + (((v67 | v52 ^ 0x98B2D552) - ((2 * (v67 | v52 ^ 0x98B2D552)) & 0xF9B16818) - 52906996) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 26) + v67 - ((2 * ((v6 >> 26) + v67)) & 0x57816FC) + 45878142;
  v68 = v52 ^ 0x2BC0B7E;
  HIDWORD(v6) = v94
              + v65
              + 351313289
              + (((v52 ^ 0x2BC0B7E | v53 ^ 0x3274BF3)
                - ((2 * (v52 ^ 0x2BC0B7E | v53 ^ 0x3274BF3)) & 0xB2B2EF56)
                - 648448085) ^ v66);
  LODWORD(v6) = HIDWORD(v6);
  v69 = (v6 >> 22) + (v52 ^ 0x2BC0B7E) - ((2 * ((v6 >> 22) + (v52 ^ 0x2BC0B7E))) & 0x43DE1F02) - 1578168447;
  v70 = v69 ^ 0xA1EF0F81;
  HIDWORD(v6) = v101
              + (v53 ^ 0xFCD8B40C)
              + 2103034265
              + (((v70 | v66 ^ 0x26A68854) - ((2 * (v70 | v66 ^ 0x26A68854)) & 0x57816FC) + 45878142) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 17) + v70 - ((2 * ((v6 >> 17) + v70)) & 0x5A143C18) + 755637772;
  v71 = v2 ^ 0x2D0A1E0C;
  HIDWORD(v6) = v92
              + (v66 ^ 0xD95977AB)
              - 833012181
              + (((v2 ^ 0x2D0A1E0C | v52 ^ 0xFD43F481)
                - ((2 * (v2 ^ 0x2D0A1E0C | v52 ^ 0xFD43F481)) & 0x43DE1F02)
                - 1578168447) ^ v69);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 11)
               + (v2 ^ 0x2D0A1E0C)
               - ((2 * ((v6 >> 11) + (v2 ^ 0x2D0A1E0C))) & 0x9B015782)
               - 847205439;
  v72 = v52 ^ 0xCD80ABC1;
  HIDWORD(v6) = v99
              + v68
              + 924907445
              + (((v72 | v69 ^ 0x5E10F07E) - ((2 * (v72 | v69 ^ 0x5E10F07E)) & 0x5A143C18) + 755637772) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v73 = (v6 >> 26) + v72 - ((2 * ((v6 >> 26) + v72)) & 0xA6D18C3C) - 748108258;
  v74 = v73 ^ 0xD368C61E;
  HIDWORD(v6) = v90
              + v70
              + 1624402564
              + (((v73 ^ 0xD368C61E | v2 ^ 0xD2F5E1F3)
                - ((2 * (v73 ^ 0xD368C61E | v2 ^ 0xD2F5E1F3)) & 0x9B015782)
                - 847205439) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 22) + (v73 ^ 0xD368C61E) - ((2 * ((v6 >> 22) + (v73 ^ 0xD368C61E))) & 0x277BE100) - 1816268672;
  v75 = v2 ^ 0x93BDF080;
  HIDWORD(v6) = v97
              + v71
              - 776629649
              + (((v75 | v52 ^ 0x327F543E) - ((2 * (v75 | v52 ^ 0x327F543E)) & 0xA6D18C3C) - 748108258) ^ v73);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 17) + v75 - ((2 * ((v6 >> 17) + v75)) & 0x21B8FE40) + 282885920;
  v76 = v52 ^ 0x10DC7F20;
  HIDWORD(v6) = v88
              + v72
              + 1464466371
              + (((v52 ^ 0x10DC7F20 | v73 ^ 0x2C9739E1)
                - ((2 * (v52 ^ 0x10DC7F20 | v73 ^ 0x2C9739E1)) & 0x277BE100)
                - 1816268672) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v77 = (v6 >> 11) + (v52 ^ 0x10DC7F20) - ((2 * ((v6 >> 11) + (v52 ^ 0x10DC7F20))) & 0x1FA83AA) - 2130886187;
  v78 = v77 ^ 0x80FD41D5;
  HIDWORD(v6) = v95
              + v74
              + 1097735233
              + (((v78 | v2 ^ 0x6C420F7F)
                - ((2 * (v78 | v2 ^ 0x6C420F7F)) & 0x21B8FE40)
                + 282885920) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 26) + v78 - ((2 * ((v6 >> 26) + v78)) & 0xB7FBA7B4) - 604122150;
  v79 = v2 ^ 0xDBFDD3DA;
  HIDWORD(v6) = v102
              + v75
              - 806189870
              + (((v79 | v52 ^ 0xEF2380DF) - ((2 * (v79 | v52 ^ 0xEF2380DF)) & 0x1FA83AA) - 2130886187) ^ v77);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 22) + v79 - ((2 * ((v6 >> 22) + v79)) & 0x2E7A2CD6) - 1757604245;
  v80 = v52 ^ 0x973D166B;
  HIDWORD(v6) = v93
              + v76
              + 1959190790
              + (((v52 ^ 0x973D166B | v77 ^ 0x7F02BE2A)
                - ((2 * (v52 ^ 0x973D166B | v77 ^ 0x7F02BE2A)) & 0xB7FBA7B4)
                - 604122150) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v81 = (v6 >> 17) + (v52 ^ 0x973D166B) - ((2 * ((v6 >> 17) + (v52 ^ 0x973D166B))) & 0x4A76F968) - 1522828108;
  v82 = v81 ^ 0xA53B7CB4;
  HIDWORD(v6) = v100
              + v78
              + 533573523
              + (((v81 ^ 0xA53B7CB4 | v2 ^ 0x24022C25)
                - ((2 * (v81 ^ 0xA53B7CB4 | v2 ^ 0x24022C25)) & 0x2E7A2CD6)
                - 1757604245) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  v83 = (v6 >> 11) + (v81 ^ 0xA53B7CB4) - ((2 * ((v6 >> 11) + (v81 ^ 0xA53B7CB4))) & 0xB02F9F20) - 669528176;
  v84 = v83 ^ 0xD817CF90;
  HIDWORD(v6) = v91
              + (v2 ^ 0xDBFDD3DA)
              - 921101196
              + (((v84 | v52 ^ 0x68C2E994) - ((2 * (v84 | v52 ^ 0x68C2E994)) & 0x4A76F968) - 1522828108) ^ v81);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 26) + v84 - ((2 * ((v6 >> 26) + v84)) & 0xA2DE2A0A) + 1366234373;
  HIDWORD(v6) = v98
              + v80
              - 1895788505
              + (((v52 ^ 0x516F1505 | v81 ^ 0x5AC4834B)
                - ((2 * (v52 ^ 0x516F1505 | v81 ^ 0x5AC4834B)) & 0xB02F9F20)
                - 669528176) ^ v83);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v86 - 0xB5807ECF70B8307) += v52 ^ 0x516F1505;
  v85 = ((2 * ((v6 >> 22) + (v52 ^ 0x516F1505))) & 0xFBF8AFFC)
      + (((v6 >> 22) + (v52 ^ 0x516F1505)) ^ 0x7DFC57FE)
      - 2113689598;
  HIDWORD(v6) = result
              + v82
              - 56790867
              + (((v85 | v83 ^ 0x27E8306F) - ((2 * (v85 | v83 ^ 0x27E8306F)) & 0xA2DE2A0A) + 1366234373) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v85 + (v6 >> 17);
  HIDWORD(v6) = v55 + (v83 ^ 0xD817CF90) - 1119063677 + ((v2 | v52 ^ 0xAE90EAFA) ^ v85);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v86 - 0xB5807ECF70B8303) += (_DWORD)v2 + (v6 >> 11);
  *(_DWORD *)(v86 - 0xB5807ECF70B82FFLL) += (_DWORD)v2;
  *(_DWORD *)(v86 - 0xB5807ECF70B82FBLL) += v85;
  return result;
}

uint64_t AwwTNt5PUEr(uint64_t a1)
{
  _DWORD v2[2];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v2[1] = (544512889 * ((((v2 | 0xE5E1B046) ^ 0xFFFFFFFE) - (~v2 | 0x1A1E4FB9)) ^ 0x3C25A81B)) ^ 0x9FF;
  fp_dh_955f7d04c52633413d938071ba99059f((uint64_t)v2);
  return v2[0];
}

uint64_t fp_dh_9b87402670919289f0ea4c3fc74ab090(uint64_t result)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(result + 16)
     - 674475973 * ((-307353152 - (result | 0xEDAE29C0) + (result | 0x1251D63F)) ^ 0xEAC69CD4);
  v2 = *(_QWORD *)(result + 8);
  *(_BYTE *)(v2 - 0x4705D132FE46B32ALL) = HIBYTE(v1) ^ 0xD1;
  *(_BYTE *)(v2 - 0x4705D132FE46B329) = BYTE2(v1) ^ 0xB7;
  *(_BYTE *)(v2 - 0x4705D132FE46B328) = BYTE1(v1) ^ 0x64;
  *(_BYTE *)(v2 - 0x4705D132FE46B327) = v1 ^ 0x26;
  return result;
}

uint64_t fp_dh_0eab2b61f5983010be59eb88971a2252(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;

  v2 = 1299810607 * ((~a1 & 0xB41AD2C5B45F0AE1 | a1 & 0x4BE52D3A4BA0F51ELL) ^ 0x5F20151DC409394DLL);
  result = (*(uint64_t (**)(unint64_t))(fp_dh_adf6b0bdffaf5bf87776fbd3008e41e3[(int)((*(_DWORD *)(a1 + 16) - v2) ^ 0xDBC0B104)]
                                                       - 4))(*(_QWORD *)(a1 + 8) + v2);
  *(_DWORD *)a1 = (result ^ 0x53DFFEDF) - 10257620 + ((2 * result) & 0xA7BFFDBE);
  return result;
}

uint64_t fp_dh_edb2509fb46ba75e8300cb057a27b1a6(_DWORD *a1)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t result;
  int v5;

  v2 = *a1
     + 1990363741 * ((1873894735 - (a1 | 0x6FB15D4F) + (a1 | 0x904EA2B0)) ^ 0xC528BB4E);
  v3 = v2 + 509560774;
  result = ((uint64_t (*)(uint64_t, void (*)()))fp_dh_adf6b0bdffaf5bf87776fbd3008e41e3[v2 + 509561062])(fp_dh_adf6b0bdffaf5bf87776fbd3008e41e3[v2 ^ 0xE1A0B85C] - 4, fp_dh_6c1e61775577496b94d492e4a79fc6b4);
  if (((2 * (_DWORD)result) & 0x9D9FF6FE) + (result ^ 0x4ECFFB7F) == 1322253183)
    v5 = *(_DWORD *)fp_dh_adf6b0bdffaf5bf87776fbd3008e41e3[v3];
  else
    v5 = 1396888777;
  a1[1] = v5;
  return result;
}

uint64_t fp_dh_1b6493831ce399c064b7d1b5f957fd15(_QWORD *a1)
{
  uint64_t v1;
  _DWORD *v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  uint64_t result;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  uint64_t v104;

  v104 = *MEMORY[0x1E0C80C00];
  v1 = a1[2];
  v2 = (_DWORD *)*a1;
  v88 = (*(_DWORD *)*a1 ^ 0xDFEFDD07) + 2103439103 + ((2 * *(_DWORD *)*a1) & 0xBFDFBA0E);
  v89 = (v2[1] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[1]) & 0xBFDFBA0E);
  v90 = (v2[2] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[2]) & 0xBFDFBA0E);
  v91 = (v2[3] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[3]) & 0xBFDFBA0E);
  v92 = (v2[4] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[4]) & 0xBFDFBA0E);
  v93 = (v2[5] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[5]) & 0xBFDFBA0E);
  v94 = (v2[6] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[6]) & 0xBFDFBA0E);
  v95 = (v2[7] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[7]) & 0xBFDFBA0E);
  v96 = (v2[8] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[8]) & 0xBFDFBA0E);
  v97 = (v2[9] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[9]) & 0xBFDFBA0E);
  v98 = (v2[10] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[10]) & 0xBFDFBA0E);
  v99 = (v2[11] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[11]) & 0xBFDFBA0E);
  v100 = (v2[12] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[12]) & 0xBFDFBA0E);
  v101 = (v2[13] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[13]) & 0xBFDFBA0E);
  v102 = (v2[14] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[14]) & 0xBFDFBA0E);
  v103 = (v2[15] ^ 0xDFEFDD07) + 2103439103 + ((2 * v2[15]) & 0xBFDFBA0E);
  v87 = v1;
  v3 = *(_DWORD *)(v1 - 0x2D2C048AB126E20FLL);
  v4 = *(_DWORD *)(v1 - 0x2D2C048AB126E20BLL);
  v5 = *(_DWORD *)(v1 - 0x2D2C048AB126E207);
  v6 = v88;
  HIDWORD(v7) = *(_DWORD *)(v1 - 0x2D2C048AB126E213) + v88 + 2048579698 + (v4 & v3 | v5 & ~v3);
  LODWORD(v7) = HIDWORD(v7);
  v8 = (v7 >> 25) + v3 - ((2 * ((v7 >> 25) + v3)) & 0x7464FAE2) + 976387441;
  HIDWORD(v7) = v5 + v89 - 1955075248 + (v3 & (v8 ^ 0x3A327D71) | v4 & ~(v8 ^ 0x3A327D71));
  LODWORD(v7) = HIDWORD(v7);
  v9 = (v7 >> 20) + (v8 ^ 0x3A327D71) - ((2 * ((v7 >> 20) + (v8 ^ 0x3A327D71))) & 0x35DE701C) - 1695598578;
  HIDWORD(v7) = v4 + v90 - 959404843 + ((v9 ^ 0x9AEF380E) & (v8 ^ (v3 - ((2 * v3) & 0x7464FAE2) + 976387441)) ^ v3);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 15) + (v9 ^ 0x9AEF380E) - ((2 * ((v7 >> 15) + (v9 ^ 0x9AEF380E))) & 0xB3C04078) + 1507860540;
  v10 = v1 ^ 0x59E0203C;
  HIDWORD(v7) = v3
              + v91
              + 1684931304
              + ((((v1 ^ 0x59E0203C) & (v8 ^ 0xA0DD457F ^ v9))
                - ((2 * ((v1 ^ 0x59E0203C) & (v8 ^ 0xA0DD457F ^ v9))) & 0x7464FAE2)
                + 976387441) ^ v8);
  LODWORD(v7) = HIDWORD(v7);
  v11 = (v7 >> 10) + (v1 ^ 0x59E0203C) - ((2 * ((v7 >> 10) + (v1 ^ 0x59E0203C))) & 0x2C256D94) + 370325194;
  HIDWORD(v7) = v92
              + (v8 ^ 0x3A327D71)
              - 1741929559
              + ((((v11 ^ 0x1612B6CA) & (v9 ^ 0xC30F1832 ^ v1))
                - ((2 * ((v11 ^ 0x1612B6CA) & (v9 ^ 0xC30F1832 ^ v1))) & 0x35DE701C)
                - 1695598578) ^ v9);
  LODWORD(v7) = HIDWORD(v7);
  v12 = (v7 >> 25) + (v11 ^ 0x1612B6CA) - ((2 * ((v7 >> 25) + (v11 ^ 0x1612B6CA))) & 0xCA10FD2) - 2041542679;
  LODWORD(v2) = v12 ^ 0x865087E9;
  HIDWORD(v7) = v93
              + (v9 ^ 0x9AEF380E)
              - 365430236
              + ((((v12 ^ 0x865087E9) & (v1 ^ 0x4FF296F6 ^ v11))
                - ((2 * ((v12 ^ 0x865087E9) & (v1 ^ 0x4FF296F6 ^ v11))) & 0xB3C04078)
                + 1507860540) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 20) + (v12 ^ 0x865087E9) - ((2 * ((v7 >> 20) + (v12 ^ 0x865087E9))) & 0x60FB4E4A) + 813541157;
  v13 = v1 ^ 0x307DA725;
  HIDWORD(v7) = v94
              + v10
              + 1256225293
              + ((((v1 ^ 0x307DA725) & (v11 ^ 0x90423123 ^ v12))
                - ((2 * ((v1 ^ 0x307DA725) & (v11 ^ 0x90423123 ^ v12))) & 0x2C256D94)
                + 370325194) ^ v11);
  LODWORD(v7) = HIDWORD(v7);
  v14 = (v7 >> 15) + (v1 ^ 0x307DA725) - ((2 * ((v7 >> 15) + (v1 ^ 0x307DA725))) & 0xEDB2C0FC) + 1993957502;
  HIDWORD(v7) = v95
              + (v11 ^ 0x1612B6CA)
              - 1611216645
              + ((((v14 ^ 0x76D9607E) & (v12 ^ 0xB62D20CC ^ v1))
                - ((2 * ((v14 ^ 0x76D9607E) & (v12 ^ 0xB62D20CC ^ v1))) & 0xCA10FD2)
                - 2041542679) ^ v12);
  LODWORD(v7) = HIDWORD(v7);
  v15 = (v7 >> 10) + (v14 ^ 0x76D9607E) - ((2 * ((v7 >> 10) + (v14 ^ 0x76D9607E))) & 0x975E4084) + 1269768258;
  v16 = v15 ^ 0x4BAF2042;
  HIDWORD(v7) = v96
              + (_DWORD)v2
              + 204524754
              + ((((v15 ^ 0x4BAF2042) & (v1 ^ 0x46A4C75B ^ v14))
                - ((2 * ((v15 ^ 0x4BAF2042) & (v1 ^ 0x46A4C75B ^ v14))) & 0x60FB4E4A)
                + 813541157) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 25) + (v15 ^ 0x4BAF2042) - ((2 * ((v7 >> 25) + (v15 ^ 0x4BAF2042))) & 0xEBDCBE96) + 1978556235;
  v17 = v1 ^ 0x75EE5F4B;
  HIDWORD(v7) = v97
              + v13
              + 771042217
              + ((((v1 ^ 0x75EE5F4B) & (v14 ^ 0x3D76403C ^ v15))
                - ((2 * ((v1 ^ 0x75EE5F4B) & (v14 ^ 0x3D76403C ^ v15))) & 0xEDB2C0FC)
                + 1993957502) ^ v14);
  LODWORD(v7) = HIDWORD(v7);
  v18 = (v7 >> 20) + (v1 ^ 0x75EE5F4B) - ((2 * ((v7 >> 20) + (v1 ^ 0x75EE5F4B))) & 0xAAE5FA42) + 1433599265;
  v19 = v18 ^ 0x5572FD21;
  HIDWORD(v7) = v98
              + (v14 ^ 0x76D9607E)
              - 1565552725
              + ((((v18 ^ 0x5572FD21) & (v15 ^ 0x3E417F09 ^ v1))
                - ((2 * ((v18 ^ 0x5572FD21) & (v15 ^ 0x3E417F09 ^ v1))) & 0x975E4084)
                + 1269768258) ^ v15);
  LODWORD(v7) = HIDWORD(v7);
  v20 = (v7 >> 15) + (v18 ^ 0x5572FD21) - ((2 * ((v7 >> 15) + (v18 ^ 0x5572FD21))) & 0x3BA44F02) - 1647171711;
  v21 = v20 ^ 0x9DD22781;
  HIDWORD(v7) = v99
              + v16
              + 739052472
              + ((((v20 ^ 0x9DD22781) & (v1 ^ 0x209CA26A ^ v18))
                - ((2 * ((v20 ^ 0x9DD22781) & (v1 ^ 0x209CA26A ^ v18))) & 0xEBDCBE96)
                + 1978556235) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 10) + (v20 ^ 0x9DD22781) - ((2 * ((v7 >> 10) + (v20 ^ 0x9DD22781))) & 0xDCB7962E) + 1851509527;
  v22 = v1 ^ 0x6E5BCB17;
  HIDWORD(v7) = v100
              + v17
              + 239093020
              + ((((v1 ^ 0x6E5BCB17) & (v18 ^ 0xC8A0DAA0 ^ v20))
                - ((2 * ((v1 ^ 0x6E5BCB17) & (v18 ^ 0xC8A0DAA0 ^ v20))) & 0xAAE5FA42)
                + 1433599265) ^ v18);
  LODWORD(v7) = HIDWORD(v7);
  v23 = (v7 >> 25) + (v1 ^ 0x6E5BCB17) - ((2 * ((v7 >> 25) + (v1 ^ 0x6E5BCB17))) & 0x5FACAA7C) + 802575678;
  HIDWORD(v7) = v101
              + v19
              - 1605851763
              + ((((v23 ^ 0x2FD6553E) & (v20 ^ 0xF389EC96 ^ v1))
                - ((2 * ((v23 ^ 0x2FD6553E) & (v20 ^ 0xF389EC96 ^ v1))) & 0x3BA44F02)
                - 1647171711) ^ v20);
  LODWORD(v7) = HIDWORD(v7);
  v24 = (v7 >> 20) + (v23 ^ 0x2FD6553E) - ((2 * ((v7 >> 20) + (v23 ^ 0x2FD6553E))) & 0xB5DFB56A) - 621815115;
  v25 = v24 ^ 0xDAEFDAB5;
  HIDWORD(v7) = v102
              + v21
              + 1227454344
              + ((((v24 ^ 0xDAEFDAB5) & (v1 ^ 0x418D9E29 ^ v23))
                - ((2 * ((v24 ^ 0xDAEFDAB5) & (v1 ^ 0x418D9E29 ^ v23))) & 0xDCB7962E)
                + 1851509527) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 15) + (v24 ^ 0xDAEFDAB5) - ((2 * ((v7 >> 15) + (v24 ^ 0xDAEFDAB5))) & 0xF7B8DB30) + 2078043544;
  v26 = v1 ^ 0x7BDC6D98;
  HIDWORD(v7) = v103
              + v22
              - 328975333
              + ((((v1 ^ 0x7BDC6D98) & (v23 ^ 0xF5398F8B ^ v24))
                - ((2 * ((v1 ^ 0x7BDC6D98) & (v23 ^ 0xF5398F8B ^ v24))) & 0x5FACAA7C)
                + 802575678) ^ v23);
  LODWORD(v7) = HIDWORD(v7);
  v27 = (v7 >> 10) + (v1 ^ 0x7BDC6D98) - ((2 * ((v7 >> 10) + (v1 ^ 0x7BDC6D98))) & 0x79A38C6) - 2083709853;
  HIDWORD(v7) = v89
              + (v23 ^ 0x2FD6553E)
              - 1731307172
              + ((((v1 ^ 0xF81171FB ^ v27) & v25) - ((2 * ((v1 ^ 0xF81171FB ^ v27) & v25)) & 0xF7B8DB30) + 2078043544) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v2) = v27 ^ 0x83CD1C63;
  LODWORD(v1) = (v7 >> 27) + (v27 ^ 0x83CD1C63) - ((2 * ((v7 >> 27) + (v27 ^ 0x83CD1C63))) & 0x457345F8) - 1564892420;
  HIDWORD(v7) = v94
              + v25
              + 1659955002
              + ((((v27 ^ 0x2174BE9F ^ v1) & v26) - ((2 * ((v27 ^ 0x2174BE9F ^ v1) & v26)) & 0x79A38C6) - 2083709853) ^ v27);
  LODWORD(v7) = HIDWORD(v7);
  v28 = v1 ^ 0xA2B9A2FC;
  v29 = (v7 >> 23) + (v1 ^ 0xA2B9A2FC) - ((2 * ((v7 >> 23) + (v1 ^ 0xA2B9A2FC))) & 0x68AF9836) + 878169115;
  HIDWORD(v7) = v99
              + v26
              - 921792949
              + ((((v1 ^ 0x96EE6EE7 ^ v29) & v2)
                - ((2 * ((v1 ^ 0x96EE6EE7 ^ v29) & v2)) & 0x457345F8)
                - 1564892420) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v30 = v29 ^ 0x3457CC1B;
  LODWORD(v1) = (v7 >> 18) + (v29 ^ 0x3457CC1B) - ((2 * ((v7 >> 18) + (v29 ^ 0x3457CC1B))) & 0x1753FD80) - 1951793472;
  HIDWORD(v7) = v88
              + (_DWORD)v2
              - 1939407964
              + ((((v29 ^ 0xBFFE32DB ^ v1) & v28) + 878169115 + (~(2 * ((v29 ^ 0xBFFE32DB ^ v1) & v28)) | 0x975067C9) + 1) ^ v29);
  LODWORD(v7) = HIDWORD(v7);
  v31 = v1 ^ 0x8BA9FEC0;
  LODWORD(v2) = (v7 >> 12) + (v1 ^ 0x8BA9FEC0) - ((2 * ((v7 >> 12) + (v1 ^ 0x8BA9FEC0))) & 0x15EFE236) + 184021275;
  HIDWORD(v7) = v93
              + v28
              + 2027897943
              + ((((v1 ^ 0x815E0FDB ^ v2) & v30)
                - ((2 * ((v1 ^ 0x815E0FDB ^ v2) & v30)) & 0x1753FD80)
                - 1951793472) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v32 = v2 ^ 0xAF7F11B;
  LODWORD(v1) = (v7 >> 27)
              + (v2 ^ 0xAF7F11B)
              - ((2 * ((v7 >> 27) + (v2 ^ 0xAF7F11B))) & 0x9FA5CA86)
              + 1339221315;
  HIDWORD(v7) = v98
              + v30
              - 1527494579
              + ((((v2 ^ 0x45251458 ^ v1) & v31)
                - ((2 * ((v2 ^ 0x45251458 ^ v1) & v31)) & 0x15EFE236)
                + 184021275) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  v33 = v1 ^ 0x4FD2E543;
  LODWORD(v2) = (v7 >> 23) + (v1 ^ 0x4FD2E543) - ((2 * ((v7 >> 23) + (v1 ^ 0x4FD2E543))) & 0x7B9E644A) - 1110494683;
  HIDWORD(v7) = v103
              + v31
              + 2068978299
              + ((((v1 ^ 0xF21DD766 ^ v2) & v32)
                - ((2 * ((v1 ^ 0xF21DD766 ^ v2) & v32)) & 0x9FA5CA86)
                + 1339221315) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v34 = v2 ^ 0xBDCF3225;
  LODWORD(v1) = (v7 >> 18)
              + (v2 ^ 0xBDCF3225)
              - ((2 * ((v7 >> 18) + (v2 ^ 0xBDCF3225))) & 0x415A0DF0)
              + 548210424;
  HIDWORD(v7) = v92
              + v32
              - 1971048510
              + ((((v2 ^ 0x9D6234DD ^ v1) & v33)
                - ((2 * ((v2 ^ 0x9D6234DD ^ v1) & v33)) & 0x7B9E644A)
                - 1110494683) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  v35 = v1 ^ 0x20AD06F8;
  LODWORD(v2) = (v7 >> 12) + (v1 ^ 0x20AD06F8) - ((2 * ((v7 >> 12) + (v1 ^ 0x20AD06F8))) & 0x67A2E2A0) - 1278119600;
  HIDWORD(v7) = v97
              + v33
              - 997064224
              + ((((v1 ^ 0x937C77A8 ^ v2) & v34)
                - ((2 * ((v1 ^ 0x937C77A8 ^ v2) & v34)) & 0x415A0DF0)
                + 548210424) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v36 = v2 ^ 0xB3D17150;
  LODWORD(v1) = (v7 >> 27)
              + (v2 ^ 0xB3D17150)
              - ((2 * ((v7 >> 27) + (v2 ^ 0xB3D17150))) & 0x649FE946)
              - 1303382877;
  HIDWORD(v7) = v102
              + v34
              + 1709652944
              + ((((v2 ^ 0x19E85F3 ^ v1) & v35)
                - ((2 * ((v2 ^ 0x19E85F3 ^ v1) & v35)) & 0x67A2E2A0)
                - 1278119600) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  v37 = v1 ^ 0xB24FF4A3;
  LODWORD(v2) = (v7 >> 23) + (v1 ^ 0xB24FF4A3) - ((2 * ((v7 >> 23) + (v1 ^ 0xB24FF4A3))) & 0xA8A2977C) + 1414613950;
  HIDWORD(v7) = v91
              + v35
              - 1752874623
              + ((((v1 ^ 0xE61EBF1D ^ v2) & v36)
                - ((2 * ((v1 ^ 0xE61EBF1D ^ v2) & v36)) & 0x649FE946)
                - 1303382877) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v38 = v2 ^ 0x54514BBE;
  LODWORD(v1) = (v7 >> 18)
              + (v2 ^ 0x54514BBE)
              - ((2 * ((v7 >> 18) + (v2 ^ 0x54514BBE))) & 0x7139301A)
              + 949786637;
  HIDWORD(v7) = v96
              + v36
              - 401979161
              + ((((v2 ^ 0x6CCDD3B3 ^ v1) & v37)
                - ((2 * ((v2 ^ 0x6CCDD3B3 ^ v1) & v37)) & 0xA8A2977C)
                + 1414613950) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v2) = (v7 >> 12) + (v1 ^ 0x389C980D) - ((2 * ((v7 >> 12) + (v1 ^ 0x389C980D))) & 0x18B4A14C) + 207245478;
  HIDWORD(v7) = v101
              + v37
              + 1284775167
              + ((((v1 ^ 0x34C6C8AB ^ v2) & v38)
                - ((2 * ((v1 ^ 0x34C6C8AB ^ v2) & v38)) & 0x7139301A)
                + 949786637) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v39 = (v7 >> 27)
      + (v2 ^ 0xC5A50A6)
      - ((2 * ((v7 >> 27) + (v2 ^ 0xC5A50A6))) & 0x80526BBA)
      - 1071041059;
  HIDWORD(v7) = v90
              + v38
              - 1616914446
              + ((((v2 ^ 0xCC73657B ^ v39) & (v1 ^ 0x389C980D))
                - ((2 * ((v2 ^ 0xCC73657B ^ v39) & (v1 ^ 0x389C980D))) & 0x18B4A14C)
                + 207245478) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  v40 = (v7 >> 23) + (v39 ^ 0xC02935DD) - ((2 * ((v7 >> 23) + (v39 ^ 0xC02935DD))) & 0x4BF6CD58) + 637232812;
  HIDWORD(v7) = v95
              + (v1 ^ 0x389C980D)
              + 169817811
              + ((((v39 ^ 0xE5D25371 ^ v40) & (v2 ^ 0xC5A50A6))
                - ((2 * ((v39 ^ 0xE5D25371 ^ v40) & (v2 ^ 0xC5A50A6))) & 0x80526BBA)
                - 1071041059) ^ v39);
  LODWORD(v7) = HIDWORD(v7);
  v41 = (v7 >> 18) + (v40 ^ 0x25FB66AC) - ((2 * ((v7 >> 18) + (v40 ^ 0x25FB66AC))) & 0x6A16DB5A) + 889941421;
  HIDWORD(v7) = v100
              + (v2 ^ 0xC5A50A6)
              + 802848900
              + ((((v40 ^ 0x10F00B01 ^ v41) & (v39 ^ 0xC02935DD))
                - ((2 * ((v40 ^ 0x10F00B01 ^ v41) & (v39 ^ 0xC02935DD))) & 0x4BF6CD58)
                + 637232812) ^ v40);
  LODWORD(v7) = HIDWORD(v7);
  v42 = (v7 >> 12) + (v41 ^ 0x350B6DAD) + 1036811528 + (~(2 * ((v7 >> 12) + (v41 ^ 0x350B6DAD))) | 0x846705EF) + 1;
  v43 = 4 * (v39 & 0xF ^ 0xDu);
  v88 = *(unsigned int *)((char *)&v88 + v43);
  *(unsigned int *)((char *)&v88 + v43) = v6;
  LODWORD(v43) = v89;
  v44 = 4 * (v42 & 0xF ^ 8u);
  v89 = *(unsigned int *)((char *)&v88 + v44);
  *(unsigned int *)((char *)&v88 + v44) = v43;
  LODWORD(v43) = v90;
  v45 = 4 * (v41 & 0xF ^ 0xDu);
  v90 = *(unsigned int *)((char *)&v88 + v45);
  *(unsigned int *)((char *)&v88 + v45) = v43;
  LODWORD(v43) = v91;
  v46 = 4 * (v40 & 0xF ^ 0xCu);
  v91 = *(unsigned int *)((char *)&v88 + v46);
  *(unsigned int *)((char *)&v88 + v46) = v43;
  v47 = 4 * ((v39 >> 4) ^ 0xDu);
  LODWORD(v46) = v92;
  v92 = *(unsigned int *)((char *)&v88 + v47);
  *(unsigned int *)((char *)&v88 + v47) = v46;
  LODWORD(v47) = v93;
  v48 = 4 * (v42 >> 4);
  v93 = *(unsigned int *)((char *)&v88 + v48);
  *(unsigned int *)((char *)&v88 + v48) = v47;
  LODWORD(v47) = v94;
  v49 = 4 * ((v41 >> 4) ^ 0xAu);
  v94 = *(unsigned int *)((char *)&v88 + v49);
  *(unsigned int *)((char *)&v88 + v49) = v47;
  LODWORD(v47) = v95;
  v50 = 4 * ((v40 >> 4) ^ 0xAu);
  v95 = *(unsigned int *)((char *)&v88 + v50);
  *(unsigned int *)((char *)&v88 + v50) = v47;
  HIDWORD(v7) = v93
              + (v39 ^ 0xC02935DD)
              - 1565889220
              + (((v42 ^ v41 ^ 0x8C710A5) - 2 * ((v42 ^ v41 ^ 0x8C710A5) & 0x25FB66AE ^ (v42 ^ v41) & 2) + 637232812) ^ v40);
  LODWORD(v7) = HIDWORD(v7);
  v51 = (v7 >> 28) + (v42 ^ 0x3DCC7D08) - ((2 * ((v7 >> 28) + (v42 ^ 0x3DCC7D08))) & 0xB1815956) + 1489022123;
  v52 = v97;
  HIDWORD(v7) = v96
              + (v40 ^ 0x25FB66AC)
              + 706882171
              + (((v42 ^ 0x650CD1A3 ^ v51) - ((2 * (v42 ^ 0x650CD1A3 ^ v51)) & 0x6A16DB5A) + 889941421) ^ v41);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 21) + (v51 ^ 0x58C0ACAB) - ((2 * ((v7 >> 21) + (v51 ^ 0x58C0ACAB))) & 0xF2BCA6D0) + 2036224872;
  HIDWORD(v7) = v99
              + (v41 ^ 0x350B6DAD)
              + 273519900
              + (((v47 ^ v51 ^ 0x219EFFC3) - 2 * ((v47 ^ v51 ^ 0x219EFFC3) & 0x3DCC7D0C ^ (v47 ^ v51) & 4) + 1036811528) ^ v42);
  LODWORD(v7) = HIDWORD(v7);
  v53 = v47 ^ 0x795E5368;
  v54 = (v7 >> 16) + (v47 ^ 0x795E5368) - ((2 * ((v7 >> 16) + (v47 ^ 0x795E5368))) & 0x8A2D975A) - 988361811;
  HIDWORD(v7) = v102
              + (v42 ^ 0x3DCC7D08)
              - 1600820218
              + (((v47 ^ 0xBC4898C5 ^ v54) - ((2 * (v47 ^ 0xBC4898C5 ^ v54)) & 0xB1815956) + 1489022123) ^ v51);
  LODWORD(v7) = HIDWORD(v7);
  v55 = v54 ^ 0xC516CBAD;
  v56 = (v7 >> 9) + (v54 ^ 0xC516CBAD) - ((2 * ((v7 >> 9) + (v54 ^ 0xC516CBAD))) & 0x4A3AFF4A) + 622690213;
  HIDWORD(v7) = v89
              + (v51 ^ 0x58C0ACAB)
              + 1198464574
              + (((v56 ^ v54 ^ 0xE00BB408)
                - 2 * ((v56 ^ v54 ^ 0xE00BB408) & 0x795E5378 ^ (v56 ^ v54) & 0x10)
                + 2036224872) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 28) + (v56 ^ 0x251D7FA5) - ((2 * ((v7 >> 28) + (v56 ^ 0x251D7FA5))) & 0x68E2F302) + 879851905;
  HIDWORD(v7) = v92
              + v53
              - 292617309
              + (((v47 ^ v56 ^ 0x116C0624) - 2 * ((v47 ^ v56 ^ 0x116C0624) & 0x4516CBBF ^ (v47 ^ v56) & 0x12) - 988361811) ^ v54);
  LODWORD(v7) = HIDWORD(v7);
  v57 = v47 ^ 0x34717981;
  v58 = (v7 >> 21) + (v47 ^ 0x34717981) - ((2 * ((v7 >> 21) + (v47 ^ 0x34717981))) & 0x4623A1B4) - 1559113510;
  HIDWORD(v7) = v95
              + v55
              - 1721008294
              + (((v47 ^ 0x9760A95B ^ v58) - ((2 * (v47 ^ 0x9760A95B ^ v58)) & 0x4A3AFF4A) + 622690213) ^ v56);
  LODWORD(v7) = HIDWORD(v7);
  v59 = v58 ^ 0xA311D0DA;
  v60 = (v7 >> 16) + (v58 ^ 0xA311D0DA) - ((2 * ((v7 >> 16) + (v58 ^ 0xA311D0DA))) & 0xEE4DAA66) + 1999033651;
  HIDWORD(v7) = v98
              + (v56 ^ 0x251D7FA5)
              + 1634725994
              + (((v60 ^ v58 ^ 0xD43705E9) - 2 * ((v60 ^ v58 ^ 0xD43705E9) & 0x34717993 ^ (v60 ^ v58) & 0x12) + 879851905) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 9) + (v60 ^ 0x7726D533) - ((2 * ((v7 >> 9) + (v60 ^ 0x7726D533))) & 0x42851E4E) + 558010151;
  HIDWORD(v7) = v101
              + v57
              - 884231488
              + (((v60 ^ 0x56645A14 ^ v47) - ((2 * (v60 ^ 0x56645A14 ^ v47)) & 0x4623A1B4) - 1559113510) ^ v58);
  LODWORD(v7) = HIDWORD(v7);
  v61 = v47 ^ 0x21428F27;
  v62 = (v7 >> 28) + (v47 ^ 0x21428F27) - ((2 * ((v7 >> 28) + (v47 ^ 0x21428F27))) & 0x7B895630) - 1111184616;
  HIDWORD(v7) = v88
              + v59
              - 1924047884
              + (((v47 ^ 0x9C86243F ^ v62) - ((2 * (v47 ^ 0x9C86243F ^ v62)) & 0xEE4DAA66) + 1999033651) ^ v60);
  LODWORD(v7) = HIDWORD(v7);
  v63 = v62 ^ 0xBDC4AB18;
  v64 = (v7 >> 21) + (v62 ^ 0xBDC4AB18) - ((2 * ((v7 >> 21) + (v62 ^ 0xBDC4AB18))) & 0x7216625A) - 1190448851;
  result = v90;
  HIDWORD(v7) = v91
              + (v60 ^ 0x7726D533)
              + 2006934655
              + (((v62 ^ 0x4CF9A35 ^ v64) - ((2 * (v62 ^ 0x4CF9A35 ^ v64)) & 0x42851E4E) + 558010151) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 16) + (v64 ^ 0xB90B312D) - ((2 * ((v7 >> 16) + (v64 ^ 0xB90B312D))) & 0xF3A880F0) - 103530376;
  HIDWORD(v7) = v94
              + v61
              - 1489481473
              + (((v64 ^ 0x40DF7155 ^ v47) - ((2 * (v64 ^ 0x40DF7155 ^ v47)) & 0x7B895630) - 1111184616) ^ v62);
  LODWORD(v7) = HIDWORD(v7);
  v66 = v47 ^ 0xF9D44078;
  v67 = (v7 >> 9) + (v47 ^ 0xF9D44078) - ((2 * ((v7 >> 9) + (v47 ^ 0xF9D44078))) & 0xFEEEB62E) - 8955113;
  HIDWORD(v7) = v97
              + v63
              + 2089092147
              + (((v67 ^ v47 ^ 0x6A31B6F) - 2 * ((v67 ^ v47 ^ 0x6A31B6F) & 0x390B313D ^ (v67 ^ v47) & 0x10) - 1190448851) ^ v64);
  LODWORD(v7) = HIDWORD(v7);
  v68 = v67 ^ 0xFF775B17;
  v69 = (v7 >> 28) + (v67 ^ 0xFF775B17) - ((2 * ((v7 >> 28) + (v67 ^ 0xFF775B17))) & 0x8EE5FA9C) - 948765362;
  HIDWORD(v7) = v100
              + (v64 ^ 0xB90B312D)
              - 1987326497
              + (((v69 ^ v67 ^ 0x3805A659) - 2 * ((v69 ^ v67 ^ 0x3805A659) & 0x79D4407A ^ (v69 ^ v67) & 2) - 103530376) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = v69 ^ 0xC772FD4E;
  LODWORD(v47) = (v7 >> 21) + (v69 ^ 0xC772FD4E) - ((2 * ((v7 >> 21) + (v69 ^ 0xC772FD4E))) & 0x440CABF2) - 1576643079;
  HIDWORD(v7) = v103
              + v66
              - 1034768142
              + (((v47 ^ v69 ^ 0x6574A8B7) - 2 * ((v47 ^ v69 ^ 0x6574A8B7) & 0x7F775B1F ^ (v47 ^ v69) & 8) - 8955113) ^ v67);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v46) = v47 ^ 0xA20655F9;
  v70 = (v7 >> 16) + (v47 ^ 0xA20655F9) - ((2 * ((v7 >> 16) + (v47 ^ 0xA20655F9))) & 0xB6086616) - 620481781;
  HIDWORD(v7) = v90
              + v68
              + 1734117983
              + (((v47 ^ 0x790266F2 ^ v70) - ((2 * (v47 ^ 0x790266F2 ^ v70)) & 0x8EE5FA9C) - 948765362) ^ v69);
  LODWORD(v7) = HIDWORD(v7);
  v71 = (v7 >> 9) + (v70 ^ 0xDB04330B) - ((2 * ((v7 >> 9) + (v70 ^ 0xDB04330B))) & 0xA0FBFA88) - 797049532;
  v72 = v71 ^ 0xD07DFD44;
  HIDWORD(v7) = v88
              + v50
              - 1764141506
              + (((v72 | v47 ^ 0x5DF9AA06) - ((2 * (v72 | v47 ^ 0x5DF9AA06)) & 0xB6086616) - 620481781) ^ v70);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 26) + v72 - ((2 * ((v7 >> 26) + v72)) & 0xC8924036) + 1682513947;
  v73 = v47 ^ 0x6449201B;
  HIDWORD(v7) = v95
              + v46
              - 438619247
              + (((v47 ^ 0x6449201B | v70 ^ 0x24FBCCF4)
                - ((2 * (v47 ^ 0x6449201B | v70 ^ 0x24FBCCF4)) & 0xA0FBFA88)
                - 797049532) ^ v71);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v46) = (v7 >> 22)
               + (v47 ^ 0x6449201B)
               - 870556496
               + (~(2 * ((v7 >> 22) + (v47 ^ 0x6449201B))) | 0x67C7469F)
               + 1;
  v74 = v71 ^ 0x2F8202BB;
  v75 = v46 ^ 0xCC1C5CB0;
  HIDWORD(v7) = v102
              + (v70 ^ 0xDB04330B)
              + 1313101729
              + (((v75 | v74) - ((2 * (v75 | v74)) & 0xC8924036) + 1682513947) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = (v7 >> 17) + v75 - ((2 * ((v7 >> 17) + v75)) & 0x18AE1A70) + 207031608;
  v76 = v50 ^ 0xC570D38;
  HIDWORD(v7) = v93
              + v72
              - 1622944717
              + (((v76 | v47 ^ 0x9BB6DFE4) - ((2 * (v76 | v47 ^ 0x9BB6DFE4)) & 0x9838B960) - 870556496) ^ v46);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 11) + v76 - ((2 * ((v7 >> 11) + v76)) & 0x2558F0F6) - 1834190725;
  v77 = v47 ^ 0x92AC787B;
  HIDWORD(v7) = v100
              + v73
              + 134974909
              + (((v77 | v46 ^ 0x33E3A34F) - ((2 * (v77 | v46 ^ 0x33E3A34F)) & 0x18AE1A70) + 207031608) ^ v50);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v46) = (v7 >> 26) + v77 - ((2 * ((v7 >> 26) + v77)) & 0x731F4CD6) - 1181768085;
  v78 = v46 ^ 0xB98FA66B;
  HIDWORD(v7) = v91
              + v75
              + 834470028
              + (((v46 ^ 0xB98FA66B | v50 ^ 0xF3A8F2C7)
                - ((2 * (v46 ^ 0xB98FA66B | v50 ^ 0xF3A8F2C7)) & 0x2558F0F6)
                - 1834190725) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = (v7 >> 22) + (v46 ^ 0xB98FA66B) - ((2 * ((v7 >> 22) + (v46 ^ 0xB98FA66B))) & 0x8CD4504C) + 1181362214;
  v79 = v50 ^ 0x466A2826;
  HIDWORD(v7) = v98
              + v76
              - 1566562185
              + (((v79 | v47 ^ 0x6D538784) - ((2 * (v79 | v47 ^ 0x6D538784)) & 0x731F4CD6) - 1181768085) ^ v46);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 17) + v79 - ((2 * ((v7 >> 17) + v79)) & 0x3769C67E) + 464839487;
  v80 = v47 ^ 0x1BB4E33F;
  HIDWORD(v7) = v89
              + v77
              + 674533835
              + (((v80 | v46 ^ 0x46705994) - ((2 * (v80 | v46 ^ 0x46705994)) & 0x8CD4504C) + 1181362214) ^ v50);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v46) = (v7 >> 11) + v80 - ((2 * ((v7 >> 11) + v80)) & 0x392515A4) - 1668117806;
  v81 = v46 ^ 0x9C928AD2;
  HIDWORD(v7) = v96
              + v78
              + 307802697
              + (((v46 ^ 0x9C928AD2 | v50 ^ 0xB995D7D9)
                - ((2 * (v46 ^ 0x9C928AD2 | v50 ^ 0xB995D7D9)) & 0x3769C67E)
                + 464839487) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = (v7 >> 26) + (v46 ^ 0x9C928AD2) - ((2 * ((v7 >> 26) + (v46 ^ 0x9C928AD2))) & 0x8DE13DA8) + 1190174420;
  v82 = v50 ^ 0x46F09ED4;
  HIDWORD(v7) = v103
              + v79
              - 1596122406
              + (((v82 | v47 ^ 0xE44B1CC0) - ((2 * (v82 | v47 ^ 0xE44B1CC0)) & 0x392515A4) - 1668117806) ^ v46);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 22) + v82 - ((2 * ((v7 >> 22) + v82)) & 0xE6D4194C) + 1936329894;
  v83 = v47 ^ 0x736A0CA6;
  HIDWORD(v7) = v94
              + v80
              + 1169258254
              + (((v47 ^ 0x736A0CA6 | v46 ^ 0x636D752D)
                - ((2 * (v47 ^ 0x736A0CA6 | v46 ^ 0x636D752D)) & 0x8DE13DA8)
                + 1190174420) ^ v50);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v46) = (v7 >> 17) + (v47 ^ 0x736A0CA6) - ((2 * ((v7 >> 17) + (v47 ^ 0x736A0CA6))) & 0x82DF24FE) - 1049652609;
  v84 = v46 ^ 0xC16F927F;
  HIDWORD(v7) = v101
              + v81
              - 256359013
              + (((v46 ^ 0xC16F927F | v50 ^ 0xB90F612B)
                - ((2 * (v46 ^ 0xC16F927F | v50 ^ 0xB90F612B)) & 0xE6D4194C)
                + 1936329894) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  v85 = (v7 >> 11) + (v46 ^ 0xC16F927F) - ((2 * ((v7 >> 11) + (v46 ^ 0xC16F927F))) & 0x38279B6A) - 1676423755;
  v86 = v85 ^ 0x9C13CDB5;
  HIDWORD(v7) = v92
              + (v50 ^ 0x46F09ED4)
              - 1711033732
              + (((v86 | v47 ^ 0x8C95F359) - ((2 * (v86 | v47 ^ 0x8C95F359)) & 0x82DF24FE) - 1049652609) ^ v46);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v47) = (v7 >> 26) + v86 - ((2 * ((v7 >> 26) + v86)) & 0x6630D342) + 857237921;
  HIDWORD(v7) = v99
              + v83
              + 1609246255
              + (((v47 ^ 0x331869A1 | v46 ^ 0x3E906D80)
                - ((2 * (v47 ^ 0x331869A1 | v46 ^ 0x3E906D80)) & 0x38279B6A)
                - 1676423755) ^ v85);
  LODWORD(v7) = HIDWORD(v7);
  *(_DWORD *)(v87 - 0x2D2C048AB126E213) += v47 ^ 0x331869A1;
  LODWORD(v46) = ((2 * ((v7 >> 22) + (v47 ^ 0x331869A1))) & 0x9F7FF1DC)
               + (((v7 >> 22) + (v47 ^ 0x331869A1)) ^ 0x4FBFF8EE)
               - 1337981166;
  HIDWORD(v7) = result
              + v84
              - 846723403
              + (((v46 | v85 ^ 0x63EC324A) - ((2 * (v46 | v85 ^ 0x63EC324A)) & 0x6630D342) + 857237921) ^ v47);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = v46 + (v7 >> 17);
  HIDWORD(v7) = v52 + (v85 ^ 0x9C13CDB5) - 1908996213 + ((v50 | v47 ^ 0xCCE7965E) ^ v46);
  LODWORD(v7) = HIDWORD(v7);
  *(_DWORD *)(v87 - 0x2D2C048AB126E20FLL) += v50 + (v7 >> 11);
  *(_DWORD *)(v87 - 0x2D2C048AB126E20BLL) += v50;
  *(_DWORD *)(v87 - 0x2D2C048AB126E207) += v46;
  return result;
}

uint64_t JE2f6WCx(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  _BYTE v6[8];
  _QWORD v7[2];
  unsigned int v8;
  int v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t)&v6[qword_1EE29F038 - qword_1EE29EF20];
  qword_1EE29EF20 = 151185677 * (v1 + 0x442F1C6725233D1DLL);
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  v2 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29EF20) ^ 0xE3)) ^ byte_19334BF00[byte_19334BAC0[(13 * ((qword_1EE29F038 + qword_1EE29EF20) ^ 0xE3))] ^ 0x36])
                                 - 171]
                 + 5776);
  v3 = 629424707
     * ((((unint64_t)v7 | 0x3C3A881E360C88FELL) - ((unint64_t)v7 & 0x3C3A881E360C88FELL)) ^ 0xA7A83D34AE93FB87);
  v9 = 394009884 - v3;
  v4 = byte_19334C220[(13 * (qword_1EE29EF20 ^ 0xE3 ^ qword_1EE29F038))];
  v7[0] = v3 + v2 - 12;
  v7[1] = a1;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[((13 * (qword_1EE29EF20 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[v4 ^ 0x7F])
                                                 - 105]
                                 - 12))(v7);
  return v8;
}

uint64_t YuSm1Tar2l(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _QWORD v4[15];
  unsigned int v5;
  _QWORD *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t vars0;

  v8 = *MEMORY[0x1E0C80C00];
  v2 = (unint64_t)&v4[14] + qword_1EE29EE00 + qword_1EE29F038;
  qword_1EE29EE00 = 151185677 * v2 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  v4[0] = *(_QWORD *)(qword_1E2FD4D00[((13 * (qword_1EE29EE00 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334BBC0[byte_19334C440[(13 * (qword_1EE29EE00 ^ 0xE3 ^ qword_1EE29F038))] ^ 0x36])
                                    - 58]
                    + 6568)
        - 8;
  v4[1] = a1;
  v4[3] = a2;
  v6 = v4;
  v5 = (486723911
      * ((2 * ((&vars0 - 32) & 0x5512CB10) - (&vars0 - 32) - 1427295000) ^ 0x1A275472)) ^ 0x833BC4F0;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * ((qword_1EE29F038 - qword_1EE29EE00) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 - qword_1EE29EE00) ^ 0xE3))] ^ 0xE6])
                                                       - 218]
                                       - 12))(&v5);
  return v7;
}

uint64_t CUYrBdafj93R3iI1dW(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v17[8];
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v9 = (unint64_t)&v17[qword_1EE29F0A0 + qword_1EE29F038];
  v10 = 151185677 * v9 - 0x305AD97674A37F79;
  v11 = 151185677 * (v9 ^ 0xBBD0E398DADCC2E3);
  v12 = byte_19334C440[(13 * ((v11 + v10) ^ 0xE3))];
  qword_1EE29F0A0 = v10;
  v13 = byte_19334BBC0[v12 ^ 1];
  qword_1EE29F038 = v11;
  v14 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((v11 + v10) ^ 0xE3)) ^ v13) - 46] + 6168);
  v15 = 2106769199
      * ((((unint64_t)&v18 | 0xD9358917F83DA1FCLL)
        - ((unint64_t)&v18 | 0x26CA76E807C25E03)
        + 0x26CA76E807C25E03) ^ 0x5C7AD6E4B49DCE50);
  v24 = v15 + 711387026;
  v21 = v14 - v15 - 4;
  v22 = a2;
  v27 = a5 - v15;
  v23 = v15 ^ a1;
  v29 = a4;
  v25 = a7;
  v26 = a8;
  v19 = a6;
  v20 = a9;
  v18 = v15 + a3;
  ((void (*)(int *))(qword_1E2FD4D00[((13 * ((v11 - v10) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((v11 - v10) ^ 0xE3))] ^ 0x36])
                                              - 66]
                              - 4))(&v18);
  return v28;
}

uint64_t JvfqldDvSIjTyuq(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v8[8];
  _QWORD v9[2];
  unsigned int v10;
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t)&v8[qword_1EE29F038 ^ qword_1EE29EF18];
  v2 = 151185677 * (v1 + 0x442F1C6725233D1DLL);
  v3 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  qword_1EE29EF18 = v2;
  v4 = byte_19334BBC0[byte_19334C440[(13 * (v2 ^ 0xE3 ^ v3))] ^ 0xB8];
  qword_1EE29F038 = v3;
  v5 = *(_QWORD *)(qword_1E2FD4D00[((13 * (v2 ^ 0xE3 ^ v3)) ^ v4) - 189] + 5896);
  v6 = 629424707
     * ((~(unint64_t)v9 & 0xE1FBF4530060B26 | (unint64_t)v9 & 0xF1E040BACFF9F4D9) ^ 0x958D0A6FA899785FLL);
  v11 = 394009884 - v6;
  v9[0] = v6 + v5 - 12;
  v9[1] = a1;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[((13 * ((v3 - v2) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((v3 - v2) ^ 0xE3))] ^ 0xE6])
                                                 - 224]
                                 - 12))(v9);
  return v10;
}

uint64_t wnFx1xLULXLA()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v5;
  _DWORD v6[2];
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EE29F0F8 - (_QWORD)&v5 + qword_1EE29F038;
  qword_1EE29F0F8 = 151185677 * v0 - 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v0 ^ 0xBBD0E398DADCC2E3);
  v1 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29F0F8) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 - qword_1EE29F0F8) ^ 0xE3))] ^ 0xB8])
                                 - 189]
                 + 5936);
  v2 = 2018881763
     * ((((unint64_t)v6 | 0xF09A04EF2F2C0BAALL)
       - ((unint64_t)v6 | 0xF65FB10D0D3F455)
       + 0xF65FB10D0D3F455) ^ 0xD5264EC48946B5DDLL);
  v6[0] = v2 + 1409428173;
  v3 = byte_19334C320[byte_19334C000[(13 * (qword_1EE29F0F8 ^ 0xE3 ^ qword_1EE29F038))] ^ 0xB0];
  v7 = v1 - v2 - 4;
  ((void (*)(_DWORD *))qword_1E2FD4D00[((13 * (qword_1EE29F0F8 ^ 0xE3 ^ qword_1EE29F038)) ^ v3)
                                                - 65])(v6);
  return v6[1];
}

uint64_t N1tFeTVrKXYK(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  _DWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = qword_1EE29EF00 - (_QWORD)&v12 + qword_1EE29F038;
  v5 = 151185677 * (v4 + 0x442F1C6725233D1DLL);
  v6 = 151185677 * (v4 ^ 0xBBD0E398DADCC2E3);
  v7 = byte_19334C440[(13 * ((v6 + v5) ^ 0xE3))];
  qword_1EE29EF00 = v5;
  v8 = byte_19334BBC0[v7 ^ 1];
  qword_1EE29F038 = v6;
  v9 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((v6 + v5) ^ 0xE3)) ^ v8) - 46] + 5336);
  v10 = 486723911
      * ((((unint64_t)v13 | 0x552FF22BDC1032AFLL) - ((unint64_t)v13 & 0x552FF22BDC1032AFLL)) ^ 0x679129BA6CDA5235);
  v13[0] = -80898302 - v10;
  v17 = a2;
  v18 = a1;
  v14 = a4;
  v15 = v9 - v10;
  v16 = v10 + a3;
  ((void (*)(_DWORD *))(qword_1E2FD4D00[((13 * ((v6 - v5) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[(13 * ((v6 - v5) ^ 0xE3))] ^ 0xAC])
                                                 - 37]
                                 - 4))(v13);
  return v13[1];
}

uint64_t uSB01B1R2Urw8Q1(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v10;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  _DWORD v28[2];
  uint64_t *v29;
  uint64_t v30;
  uint64_t vars0;

  v30 = *MEMORY[0x1E0C80C00];
  v10 = (qword_1EE29F038 - qword_1EE29EF10) ^ (unint64_t)&v27;
  qword_1EE29EF10 = 151185677 * v10 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v10 ^ 0xBBD0E398DADCC2E3);
  v12 = *(_QWORD *)(qword_1E2FD4D00[((13 * (qword_1EE29EF10 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334BF00[byte_19334BAC0[(13 * (qword_1EE29EF10 ^ 0xE3 ^ qword_1EE29F038))] ^ 0x36])
                                  - 171]
                  + 6760)
      - 12;
  v13 = (a2 ^ 0x5FF7FC6F) - 1115967560 + ((2 * a2) & 0xBFEFF8DE);
  v14 = 494119975;
  v15 = a3;
  v16 = (a4 ^ 0x75F43BF1) - 1091838608 + ((2 * a4) & 0xEBE877E2);
  v17 = 0x1DF9787F30281A19 * a1 + 0x1E4D227EC11DAB65;
  v18 = 0;
  v19 = a5;
  v21 = 1489733386;
  v22 = (a6 ^ 0xB4EB5975) + 2146746348 + ((2 * a6) & 0x69D6B2EA);
  v20 = a7;
  v23 = a8;
  v24 = a9;
  v25 = a10;
  v26 = -20;
  v28[0] = 2018881763
         * (((((&vars0 - 24) | 0xE35C54A6) ^ 0xFFFFFFFE) - (~(&vars0 - 24) | 0x1CA3AB59)) ^ 0xBAC9152E)
         - 1809939977;
  v29 = &v12;
  ((void (*)(_DWORD *))(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29EF10) ^ 0xE3)) ^ byte_19334BF00[byte_19334BAC0[(13 * ((qword_1EE29F038 - qword_1EE29EF10) ^ 0xE3))] ^ 0x70])
                                                 - 176]
                                 - 4))(v28);
  return (v28[1] - 101372955);
}

uint64_t qo0PLbO2vEnVix1GkQeB8LR(int a1)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v1 = (qword_1EE29F038 + qword_1EE29EDD8) ^ (unint64_t)&v5;
  qword_1EE29EDD8 = 151185677 * v1 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  v2 = byte_19334C220[(13 * (qword_1EE29EDD8 ^ 0xE3 ^ qword_1EE29F038))];
  v3 = 629424707
     * ((2 * ((unint64_t)&v6 & 0x3B59271B1ECDF140) - (_QWORD)&v6 - 0x3B59271B1ECDF147) ^ 0x5F346DCE79AD7DC0);
  v7 = *(_QWORD *)(qword_1E2FD4D00[((13 * (qword_1EE29EDD8 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[v2 ^ 0x7F])
                                 - 88]
                 + 6032)
     - v3
     - 8;
  v8 = v3 ^ a1;
  v9 = v3 ^ 0xFCB63854;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * (qword_1EE29EDD8 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[v2 ^ 0xD4])
                                                       - 151]
                                       - 12))(&v6);
  return v6;
}

uint64_t VCDDnY3lV491XcWac(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v2 = qword_1EE29EF50 - (_QWORD)&v7 + qword_1EE29F038;
  qword_1EE29EF50 = (151185677 * v2) ^ 0xBBD0E398DADCC2E3;
  qword_1EE29F038 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  v3 = 156243929 * ((unint64_t)&v8 ^ 0x75A58B1A22C4246DLL);
  v4 = (*(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29EF50) ^ 0xE3)) ^ byte_19334BF00[byte_19334BAC0[(13 * ((qword_1EE29F038 - qword_1EE29EF50) ^ 0xE3))] ^ 0x70])
                                  - 201]
                  + 6376)
      - 4) ^ v3;
  v9 = a2;
  v10 = v4;
  v11 = a1;
  v5 = byte_19334C320[byte_19334C000[(13 * ((qword_1EE29F038 + qword_1EE29EF50) ^ 0xE3))] ^ 0xB0];
  v12 = 737185665 - v3;
  ((void (*)(int *))qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29EF50) ^ 0xE3)) ^ v5)
                                             - 57])(&v8);
  return (v8 - 101372955);
}

uint64_t kNsH5DWSn1J(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  char v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v2 = qword_1EE29EE28 ^ (unint64_t)&v7 ^ qword_1EE29F038;
  qword_1EE29EE28 = 151185677 * v2 - 0x305AD97674A37F79;
  qword_1EE29F038 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  v3 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29EE28) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[(13 * ((qword_1EE29F038 + qword_1EE29EE28) ^ 0xE3))] ^ 0xD4])
                                 - 177]
                 + 6184)
     - 4;
  v4 = 156243929
     * ((((2 * (_QWORD)&v8) | 0xB6D0F5A66D7A697CLL) - (_QWORD)&v8 + 0x2497852CC942CB42) ^ 0xAECDF1C9147910D3);
  v12 = 737185665 - v4;
  v5 = byte_19334C100[byte_19334BCC0[(13 * ((qword_1EE29F038 - qword_1EE29EE28) ^ 0xE3))] ^ 0xAC];
  v10 = v3 ^ v4;
  v11 = a1;
  v9 = a2;
  ((void (*)(unsigned int *))qword_1E2FD4D00[((13
                                                                         * ((qword_1EE29F038 - qword_1EE29EE28) ^ 0xE3)) ^ v5)
                                                      - 69])(&v8);
  return v8;
}

uint64_t nS1Q9ljw9esy9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v2 = qword_1EE29F038 - qword_1EE29F110 - (_QWORD)&v6;
  qword_1EE29F110 = 151185677 * v2 - 0x305AD97674A37F79;
  qword_1EE29F038 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  v3 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F110) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[(13 * ((qword_1EE29F038 + qword_1EE29F110) ^ 0xE3))] ^ 0x86])
                                 - 183]
                 + 6280)
     - 4;
  v11 = 737185665
      - 156243929 * ((&v7 - 2 * ((unint64_t)&v7 & 0x9F62451A63B61650) + 1672877648) ^ 0x4172323D);
  v4 = byte_19334C540[byte_19334C220[(13 * ((qword_1EE29F038 - qword_1EE29F110) ^ 0xE3))] ^ 0xF];
  v8 = a2;
  v9 = v3 ^ (156243929
           * (((unint64_t)&v7 - 2 * ((unint64_t)&v7 & 0x9F62451A63B61650) - 0x609DBAE59C49E9B0) ^ 0xEAC7CE004172323DLL));
  v10 = a1;
  ((void (*)(unsigned int *))qword_1E2FD4D00[((13
                                                                         * ((qword_1EE29F038 - qword_1EE29F110) ^ 0xE3)) ^ v4)
                                                      - 87])(&v7);
  return v7;
}

uint64_t sub_1931ED234(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 462300053 * (((a1 | 0x5373E739) - (_DWORD)a1 + (a1 & 0xAC8C18C6)) ^ 0xA318012D);
  return ((uint64_t (*)(uint64_t, uint64_t (*)()))qword_1E2FD4D00[v1 ^ 0xAD87FA39])(qword_1E2FD4D00[v1 + 1383597578] - 8, sub_1931EFDDC);
}

uint64_t beiXpE4QvvG(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  _BYTE v4[8];
  _QWORD v5[2];
  unsigned int v6;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t)&v4[qword_1EE29F038 ^ qword_1EE29F058];
  qword_1EE29F058 = 151185677 * (v1 + 0x442F1C6725233D1DLL);
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  v2 = 629424707
     * ((((unint64_t)v5 | 0x1E242F6A5E846100)
       - ((unint64_t)v5 | 0xE1DBD095A17B9EFFLL)
       - 0x1E242F6A5E846101) ^ 0x85B69A40C61B1279);
  v5[0] = v2
        + *(_QWORD *)(qword_1E2FD4D00[((13 * (qword_1EE29F058 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[byte_19334C220[(13 * (qword_1EE29F058 ^ 0xE3 ^ qword_1EE29F038))] ^ 0xF])
                                    - 82]
                    + 5760)
        - 12;
  v5[1] = a1;
  v7 = 394009884 - v2;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F058) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 + qword_1EE29F058) ^ 0xE3))] ^ 0x98])
                                                 - 93]
                                 - 12))(v5);
  return v6;
}

uint64_t hYNpsn7dXgySzQR(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v8[8];
  _QWORD v9[2];
  unsigned int v10;
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t)&v8[qword_1EE29EDF8 + qword_1EE29F038];
  v2 = (151185677 * v1) ^ 0xBBD0E398DADCC2E3;
  v3 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  qword_1EE29EDF8 = v2;
  v4 = byte_19334BBC0[byte_19334C440[(13 * ((v3 - v2) ^ 0xE3))] ^ 0x53];
  qword_1EE29F038 = v3;
  v5 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((v3 - v2) ^ 0xE3)) ^ v4) - 195] + 5952);
  v6 = 629424707
     * ((((unint64_t)v9 | 0x9249807D57A8A87CLL)
       - ((unint64_t)v9 | 0x6DB67F82A8575783)
       + 0x6DB67F82A8575783) ^ 0x9DB3557CF37DB05);
  v11 = 394009884 - v6;
  v9[0] = v6 + v5 - 12;
  v9[1] = a1;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[((13 * ((v3 + v2) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((v3 + v2) ^ 0xE3))] ^ 1])
                                                 - 63]
                                 - 12))(v9);
  return v10;
}

uint64_t fM8WJGMFB()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  _DWORD v6[2];
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EE29F038 - qword_1EE29EF40 - (_QWORD)&v5;
  qword_1EE29EF40 = 151185677 * v0 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v0 ^ 0xBBD0E398DADCC2E3);
  v1 = (13 * ((qword_1EE29F038 - qword_1EE29EF40) ^ 0xE3));
  v2 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29EF40) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[v1] ^ 0x7F])
                                 - 88]
                 + 5840);
  v3 = 2018881763 * ((unint64_t)v6 ^ 0x25BC4A2BA66ABE77);
  v6[0] = v3 + 1409428173;
  LOBYTE(v1) = byte_19334BBC0[byte_19334C440[v1] ^ 0x36];
  v7 = v2 - v3 - 4;
  ((void (*)(_DWORD *))qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29EF40) ^ 0xE3)) ^ v1)
                                                - 71])(v6);
  return v6[1];
}

uint64_t i2DzSgbBIIe95gyG0gW(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v2 = (qword_1EE29F038 - qword_1EE29F080) ^ (unint64_t)&v7;
  qword_1EE29F080 = 151185677 * v2 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  v3 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F080) ^ 0xE3)) ^ byte_19334BF00[byte_19334BAC0[(13 * ((qword_1EE29F038 + qword_1EE29F080) ^ 0xE3))] ^ 0x36])
                                 - 171]
                 + 6376)
     - 4;
  v4 = 156243929
     * ((((2 * (_QWORD)&v8) | 0x33E027AFCA5ADF0ELL) - (_QWORD)&v8 - 0x19F013D7E52D6F87) ^ 0x6C5598CDC7E94BEALL);
  v12 = 737185665 - v4;
  v5 = byte_19334C100[byte_19334BCC0[(13 * (qword_1EE29F080 ^ 0xE3 ^ qword_1EE29F038))] ^ 0x7F];
  v10 = v3 ^ v4;
  v11 = a1;
  v9 = a2;
  ((void (*)(int *))qword_1E2FD4D00[((13 * (qword_1EE29F080 ^ 0xE3 ^ qword_1EE29F038)) ^ v5)
                                             - 218])(&v8);
  return (v8 - 101372955);
}

uint64_t C956s6fM(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  _DWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = (qword_1EE29F038 + qword_1EE29F048) ^ (unint64_t)&v9;
  qword_1EE29F048 = 151185677 * v4 - 0x305AD97674A37F79;
  qword_1EE29F038 = 151185677 * (v4 ^ 0xBBD0E398DADCC2E3);
  v5 = (13 * (qword_1EE29F048 ^ 0xE3 ^ qword_1EE29F038));
  v6 = *(_QWORD *)(qword_1E2FD4D00[((13 * (qword_1EE29F048 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C320[byte_19334C000[v5] ^ 0xB0])
                                 - 52]
                 + 5880);
  v7 = 486723911
     * ((((unint64_t)v10 | 0x4E3DD2302AE02B8BLL) - (_QWORD)v10 + ((unint64_t)v10 & 0xB1C22DCFD51FD470)) ^ 0x7C8309A19A2A4B11);
  v13 = v7 + a3;
  v10[0] = -80898302 - v7;
  v14 = a2;
  v15 = a1;
  LODWORD(v5) = byte_19334BCC0[v5];
  v11 = a4;
  v12 = v6 - v7;
  ((void (*)(_DWORD *))(qword_1E2FD4D00[((13 * (qword_1EE29F048 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C100[v5 ^ 0x7F])
                                                 - 186]
                                 - 4))(v10);
  return v10[1];
}

uint64_t Y08TTM99sD0XheA(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v10;
  _QWORD v11[2];
  unsigned int v12;
  int v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = (qword_1EE29F038 + qword_1EE29F060) ^ (unint64_t)&v10;
  v2 = (151185677 * v1) ^ 0xBBD0E398DADCC2E3;
  v3 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  qword_1EE29F060 = v2;
  v4 = 13 * (v2 ^ 0xE3 ^ v3);
  v5 = byte_19334BBC0[byte_19334C440[v4] ^ 0x53];
  qword_1EE29F038 = v3;
  v6 = *(_QWORD *)(qword_1E2FD4D00[(v4 ^ v5) - 195] + 5800);
  v7 = 629424707 * ((unint64_t)v11 ^ 0x9B92B52A989F7379);
  v13 = 394009884 - v7;
  v8 = v7 + v6 - 12;
  LODWORD(v7) = byte_19334C220[v4];
  v11[0] = v8;
  v11[1] = a1;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[(v4 ^ byte_19334C540[v7 ^ 0x7F]) - 105]
                                 - 12))(v11);
  return v12;
}

uint64_t Ud5PNQt99i(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  char v4;
  _QWORD v5[2];
  unsigned int v6;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = (qword_1EE29F038 ^ qword_1EE29F0D8) - (_QWORD)&v4;
  qword_1EE29F0D8 = (151185677 * v1) ^ 0xBBD0E398DADCC2E3;
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  LOBYTE(v1) = 13 * ((13 * v1) ^ qword_1EE29F038);
  v2 = 629424707
     * ((((unint64_t)v5 | 0xEAE4316D4C849377) - ((unint64_t)v5 & 0xEAE4316D4C849377)) ^ 0x71768447D41BE00ELL);
  v5[0] = v2
        + *(_QWORD *)(qword_1E2FD4D00[(v1 ^ byte_19334C540[byte_19334C220[v1] ^ 0xFD])
                                    - 70]
                    + 6024)
        - 12;
  v5[1] = a1;
  v7 = 394009884 - v2;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[(v1 ^ byte_19334BBC0[byte_19334C440[v1] ^ 0x36])
                                                 - 75]
                                 - 12))(v5);
  return v6;
}

uint64_t NShFxR7kzzF227Pf(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  _DWORD v27[2];
  uint64_t *v28;
  uint64_t v29;
  uint64_t vars0;

  v29 = *MEMORY[0x1E0C80C00];
  qword_1EE29F0D0 = 151185677 * ((qword_1EE29F038 + qword_1EE29F0D0) ^ (unint64_t)&v26 ^ 0xBBD0E398DADCC2E3);
  qword_1EE29F038 = qword_1EE29F0D0;
  v11 = 0x19321517CLL;
  v12 = (a2 ^ 0x7D77AFB7) - 1610875792 + ((2 * a2) & 0xFAEF5F6E);
  v13 = 494119975;
  v14 = a3;
  v15 = (a4 ^ 0xB6E83BE3) + 2113396094 + ((2 * a4) & 0x6DD077C6);
  v16 = 0x1DF9787F30281A19 * a1 + 0x1E4D227EC11DAB65;
  v17 = 0;
  v18 = a5;
  v20 = 1489733386;
  v21 = (a6 ^ 0xB4E8F9EF) + 2146901874 + ((2 * a6) & 0x69D1F3DE);
  v19 = a7;
  v22 = a8;
  v23 = a9;
  v24 = a10;
  v25 = -19;
  v28 = &v11;
  v27[0] = 2018881763
         * ((-1091631173 - ((&vars0 - 24) | 0xBEEF07BB) + ((&vars0 - 24) | 0x4110F844)) ^ 0xE77A4633)
         - 1809939977;
  sub_193214410(v27);
  return (v27[1] - 101372955);
}

uint64_t MzdSdcDIXg8COV(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v9[8];
  unsigned int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t)&v9[qword_1EE29EDE0 + qword_1EE29F038];
  v2 = (151185677 * v1) ^ 0xBBD0E398DADCC2E3;
  v3 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  qword_1EE29EDE0 = v2;
  v4 = 13 * ((v3 + v2) ^ 0xE3);
  v5 = qword_1E2FD4D00[(v4 ^ byte_19334C540[byte_19334C220[v4] ^ 0x7F]) - 88];
  qword_1EE29F038 = v3;
  v6 = *(_QWORD *)(v5 + 6112);
  v7 = 1995441121
     * ((~(unint64_t)&v10 & 0x99764DD7237EB9B6 | (unint64_t)&v10 & 0x6689B228DC814649) ^ 0xBBA2B50EF4968FDLL);
  v11 = v7 + a1;
  v12 = v7 - 2072213723;
  v13 = v6 - v7 - 8;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[(v4 ^ byte_19334BBC0[byte_19334C440[v4] ^ 0xB8])
                                                       - 190]
                                       - 4))(&v10);
  return v10;
}

uint64_t qtZa1uk5tFOQ7T(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = (qword_1EE29F038 + qword_1EE29F0E0) ^ (unint64_t)&v5;
  qword_1EE29F0E0 = 151185677 * v1 - 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  v2 = 629424707
     * ((((unint64_t)v6 | 0x708818901C2FAEA7) - (_QWORD)v6 + ((unint64_t)v6 & 0x8F77E76FE3D05158)) ^ 0xEB1AADBA84B0DDDELL);
  v6[0] = v2
        + *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F0E0) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[(13 * ((qword_1EE29F038 + qword_1EE29F0E0) ^ 0xE3))] ^ 0x7F])
                                    - 213]
                    + 5688)
        - 12;
  v6[1] = a1;
  v3 = byte_19334C220[(13 * (qword_1EE29F0E0 ^ 0xE3 ^ qword_1EE29F038))];
  v8 = 394009884 - v2;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[((13 * (qword_1EE29F0E0 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[v3 ^ 0xF])
                                                 - 99]
                                 - 12))(v6);
  return v7;
}

uint64_t pduR7VAgOpwwTZi6E(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD v5[14];
  char v6;
  unsigned int v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t vars0;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = (qword_1EE29F038 - qword_1EE29F070) ^ (unint64_t)&v6;
  qword_1EE29F070 = 151185677 * v3 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v3 ^ 0xBBD0E398DADCC2E3);
  v5[0] = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29F070) ^ 0xE3)) ^ byte_19334BF00[byte_19334BAC0[(13 * ((qword_1EE29F038 - qword_1EE29F070) ^ 0xE3))] ^ 0x36])
                                    - 171]
                    + 6432)
        - 8;
  v5[1] = a2;
  v5[12] = 0x717584D1D52972A3 * a1 + 0x3EF112F4E8A527E7;
  v5[3] = a3;
  v7 = (486723911
      * ((((&vars0 - 32) | 0xF9AE4342)
        - (&vars0
         - 32)
        + ((&vars0 - 32) & 0x651BCB8)) ^ 0x496423D8)) ^ 0x833BC4F0;
  v8 = v5;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * ((qword_1EE29F038 + qword_1EE29F070) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[(13 * ((qword_1EE29F038 + qword_1EE29F070) ^ 0xE3))] ^ 0xD4])
                                                       - 188]
                                       - 12))(&v7);
  return (v9 - 101372955);
}

uint64_t AguL7jhmAyDI1Bi(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _DWORD v22[2];
  uint64_t *v23;
  uint64_t v24;
  uint64_t vars0;

  v24 = *MEMORY[0x1E0C80C00];
  v7 = (qword_1EE29F038 ^ qword_1EE29EDE8) - (_QWORD)&v21;
  qword_1EE29EDE8 = 151185677 * v7 - 0x305AD97674A37F79;
  qword_1EE29F038 = 151185677 * (v7 ^ 0xBBD0E398DADCC2E3);
  v10 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29EDE8) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 - qword_1EE29EDE8) ^ 0xE3))] ^ 0x98])
                                  - 76]
                  + 6664);
  v12 = a1;
  v11 = (a3 ^ 0x6DF79FFB) - 426824 + ((2 * a3) & 0xDBEF3FF6);
  v14 = a2;
  v15 = a4;
  v13 = (a5 ^ 0xEFF31FBF) + 2113797364 + ((2 * a5) & 0xDFE63F7E);
  v16 = a6;
  v17 = 65;
  v18 = a7;
  v19 = 0x1AD672C79EDFE6A6;
  v20 = 0x6D93E3DD35BE4F29;
  v23 = &v10;
  v8 = byte_19334C220[(13 * (qword_1EE29EDE8 ^ 0xE3 ^ qword_1EE29F038))];
  v22[0] = 2141531495
         - 1629346421
         * ((((&vars0 - 24) | 0x5CCB63DF) - ((&vars0 - 24) & 0x5CCB63DF)) ^ 0xBD9382BE);
  ((void (*)(_DWORD *))(qword_1E2FD4D00[((13 * (qword_1EE29EDE8 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[v8 ^ 0xF])
                                                 - 120]
                                 - 4))(v22);
  return (v22[1] - 101372955);
}

uint64_t TnhfdPSFlg(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  qword_1EE29EF58 = 151185677 * (((qword_1EE29F038 ^ qword_1EE29EF58) - (_QWORD)&v5) ^ 0xBBD0E398DADCC2E3);
  qword_1EE29F038 = qword_1EE29EF58;
  v2 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((2 * qword_1EE29EF58) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[(13 * ((2 * qword_1EE29EF58) ^ 0xE3))] ^ 0x7F])
                                 - 88]
                 + 6336);
  v3 = 1239927961
     * ((((unint64_t)&v6 | 0x7791087DC9857F8DLL) - (_QWORD)&v6 + ((unint64_t)&v6 & 0x886EF782367A8070)) ^ 0x1282E4F92EE9849DLL);
  v11 = a2;
  v8 = 2738853 - v3;
  v6 = v3 + v2 - 8;
  v9 = a1;
  v10 = v3 ^ 0xF6;
  sub_19327DC5C(&v6);
  return (v7 - 101372955);
}

uint64_t MYiCHr2n1RFBPK6tHo(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _DWORD v21[2];
  uint64_t *v22;
  uint64_t v23;
  uint64_t vars0;

  v23 = *MEMORY[0x1E0C80C00];
  v7 = (qword_1EE29F038 - qword_1EE29EF08) ^ (unint64_t)&v20;
  qword_1EE29EF08 = (151185677 * v7) ^ 0xBBD0E398DADCC2E3;
  qword_1EE29F038 = 151185677 * (v7 ^ 0xBBD0E398DADCC2E3);
  v9 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((13 * v7) ^ qword_1EE29F038)) ^ byte_19334C540[byte_19334C220[(13 * ((13 * v7) ^ qword_1EE29F038))] ^ 0xD4])
                                 - 177]
                 + 6664);
  v11 = a1;
  v10 = (a3 ^ 0xFFF3FCFB) + 1845305272 + ((2 * a3) & 0xFFE7F9F6);
  v13 = a2;
  v14 = a4;
  v12 = (a5 ^ 0x7FFB1EBB) - 302645768 + ((2 * a5) & 0xFFF63D76);
  v15 = a6;
  v16 = 64;
  v17 = a7;
  v18 = 0x1AD672C79EDFE6A6;
  v19 = 0x6D93E3DD35BE4F29;
  v22 = &v9;
  v21[0] = 2141531495
         - 1629346421
         * ((((2 * (&vars0 - 24)) | 0x440290C4) - (&vars0 - 24) + 1576974238) ^ 0x4359A903);
  ((void (*)(_DWORD *))(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29EF08) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 + qword_1EE29EF08) ^ 0xE3))] ^ 0xE6])
                                                 - 245]
                                 - 4))(v21);
  return (v21[1] - 101372955);
}

uint64_t WuLaQ4nIoKwZC7KxU(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = qword_1EE29F0C8 - (_QWORD)&v4 + qword_1EE29F038;
  qword_1EE29F0C8 = 151185677 * v1 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  v2 = 1995441121
     * ((~(unint64_t)&v5 & 0x6BC003F544D0AE49 | (unint64_t)&v5 & 0x943FFC0ABB2F51B6) ^ 0xF90C657288E77F02);
  v8 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29F0C8) ^ 0xE3)) ^ byte_19334BF00[byte_19334BAC0[(13 * ((qword_1EE29F038 - qword_1EE29F0C8) ^ 0xE3))] ^ 0x70])
                                 - 201]
                 + 6208)
     - v2
     - 8;
  v6 = v2 + a1;
  v7 = v2 - 2072213723;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * ((qword_1EE29F038 + qword_1EE29F0C8) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 + qword_1EE29F0C8) ^ 0xE3))] ^ 0x36])
                                                       - 59]
                                       - 4))(&v5);
  return v5;
}

uint64_t EKNEpfxz52bXl(uint64_t a1, int a2)
{
  char v2;
  uint64_t v3;
  unint64_t v4;
  char v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  qword_1EE29EF60 = 151185677 * ((qword_1EE29EF60 - (_QWORD)&v6 + qword_1EE29F038) ^ 0xBBD0E398DADCC2E3);
  v2 = byte_19334C100[byte_19334BCC0[(13 * ((2 * qword_1EE29EF60) ^ 0xE3))] ^ 0xAC];
  qword_1EE29F038 = qword_1EE29EF60;
  v3 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((2 * qword_1EE29EF60) ^ 0xE3)) ^ v2) - 64] + 5712);
  v4 = 1995441121
     * ((2 * ((unint64_t)&v7 & 0x6683380FA6D2D560) - (_QWORD)&v7 - 0x6683380FA6D2D565) ^ 0xBB0A177951AFBD0);
  v8 = a1;
  v9 = v4 + a2;
  v10 = v3 - v4;
  v7 = v4 ^ 0x12FC7973;
  sub_193281BD4(&v7);
  return v11;
}

uint64_t gojqbvrX305gQO(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  _BYTE v10[8];
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v2 = (unint64_t)&v10[qword_1EE29F038 - qword_1EE29F108];
  v3 = (151185677 * v2) ^ 0xBBD0E398DADCC2E3;
  v4 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  qword_1EE29F108 = v3;
  v5 = qword_1E2FD4D00[((13 * ((v4 + v3) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[(13 * ((v4 + v3) ^ 0xE3))] ^ 0xF])
                     - 82];
  qword_1EE29F038 = v4;
  v6 = 156243929
     * ((((unint64_t)&v11 | 0xD7561CEF406C0FFCLL) - (_QWORD)&v11 + ((unint64_t)&v11 & 0x28A9E310BF93F000)) ^ 0xA2F397F562A82B91);
  v7 = (*(_QWORD *)(v5 + 6184) - 4) ^ v6;
  LOBYTE(v4) = 13 * ((v4 - v3) ^ 0xE3);
  v8 = byte_19334C220[v4];
  v15 = 737185665 - v6;
  LOBYTE(v6) = byte_19334C540[v8 ^ 0xFD];
  v13 = v7;
  v14 = a1;
  v12 = a2;
  ((void (*)(unsigned int *))qword_1E2FD4D00[(v4 ^ v6) - 75])(&v11);
  return v11;
}

_BYTE *sub_1931EEEAC(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_1931EEF3C + 4 * byte_19334BDC7[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t V2qUlL4PZ5VKVXDsUHg5z(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v9;
  _DWORD v10[2];
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = (qword_1EE29F038 ^ qword_1EE29EE20) - (_QWORD)&v9;
  qword_1EE29EE20 = (151185677 * v5) ^ 0xBBD0E398DADCC2E3;
  qword_1EE29F038 = 151185677 * (v5 ^ 0xBBD0E398DADCC2E3);
  v6 = 486723911
     * ((-2 - ((~(unint64_t)v10 | 0xFF0A29A71C03DE57) + ((unint64_t)v10 | 0xF5D658E3FC21A8))) ^ 0xCDB4F236ACC9BECDLL);
  v7 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((13 * v5) ^ qword_1EE29F038)) ^ byte_19334C540[byte_19334C220[(13 * ((13 * v5) ^ qword_1EE29F038))] ^ 0xD4])
                                 - 177]
                 + 6232)
     - v6
     - 8;
  v14 = a2 - v6;
  v15 = v7;
  v16 = a5;
  v10[0] = -964254109 - v6;
  v10[1] = v6 + a4;
  LODWORD(v7) = byte_19334BAC0[(13 * ((qword_1EE29F038 - qword_1EE29EE20) ^ 0xE3))];
  v13 = a3;
  v11 = a1;
  ((void (*)(_DWORD *))(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29EE20) ^ 0xE3)) ^ byte_19334BF00[v7 ^ 0x70])
                                                 - 195]
                                 - 4))(v10);
  return v12;
}

uint64_t f5zGmdURga6BZ(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE v13[8];
  int v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v5 = (unint64_t)&v13[qword_1EE29F038 - qword_1EE29EF30];
  qword_1EE29EF30 = 151185677 * v5 - 0x305AD97674A37F79;
  v6 = 151185677 * (v5 ^ 0xBBD0E398DADCC2E3);
  v7 = (v6 + qword_1EE29EF30) ^ 0xE3;
  v8 = byte_19334C540[byte_19334C220[(13 * v7)] ^ 0x7F];
  qword_1EE29F038 = v6;
  v9 = ((13 * v7) ^ v8);
  v10 = *(_QWORD *)(qword_1E2FD4D00[v9 - 88] + 6176) - 4;
  v11 = 1624863733
      * ((((unint64_t)&v14 | 0x839BECF2F8FDA7DBLL)
        - ((unint64_t)&v14 | 0x7C64130D07025824)
        + 0x7C64130D07025824) ^ 0xB874E2EDCA6B5DE3);
  v17 = v11 ^ a3;
  v21 = a1 - v11;
  v18 = a4;
  v19 = a5;
  v14 = v11 - 1030968013;
  v15 = v10 ^ v11;
  v16 = a2;
  ((void (*)(int *))qword_1E2FD4D00[v9 - 122])(&v14);
  return v20;
}

uint64_t N8pdwAfn(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  qword_1EE29F068 = 151185677 * ((qword_1EE29F068 - (_QWORD)&v5 + qword_1EE29F038) ^ 0xBBD0E398DADCC2E3);
  v1 = (13 * ((2 * qword_1EE29F068) ^ 0xE3));
  v2 = qword_1E2FD4D00[((13 * ((2 * qword_1EE29F068) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[v1] ^ 0x86])
                     - 183];
  qword_1EE29F038 = qword_1EE29F068;
  v3 = 629424707
     * ((((unint64_t)v6 | 0x593AE292CA94D72ALL) - (_QWORD)v6 + ((unint64_t)v6 & 0xA6C51D6D356B28D0)) ^ 0xC2A857B8520BA453);
  v6[0] = v3 + *(_QWORD *)(v2 + 6048) - 12;
  v6[1] = a1;
  v8 = 394009884 - v3;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[((13 * ((2 * qword_1EE29F068) ^ 0xE3)) ^ byte_19334BE00[byte_19334B9C0[v1] ^ 0x37])
                                                 - 57]
                                 - 12))(v6);
  return v7;
}

uint64_t Qt84D4aopGP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD v5[15];
  unsigned int v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t vars0;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = (unint64_t)&v5[14] + qword_1EE29EF38 + qword_1EE29F038;
  qword_1EE29EF38 = (151185677 * v3) ^ 0xBBD0E398DADCC2E3;
  qword_1EE29F038 = 151185677 * (v3 ^ 0xBBD0E398DADCC2E3);
  v5[0] = *(_QWORD *)(qword_1E2FD4D00[((13 * ((13 * v3) ^ qword_1EE29F038)) ^ byte_19334BBC0[byte_19334C440[(13 * ((13 * v3) ^ qword_1EE29F038))] ^ 0x53])
                                    - 195]
                    + 6432)
        - 8;
  v5[1] = a2;
  v5[12] = 0x717584D1D52972A3 * a1 + 0x3EF112F4E8A527E7;
  v5[3] = a3;
  v7 = v5;
  v6 = (486723911 * ((&vars0 - 32) ^ 0xB0CA609A)) ^ 0x833BC4F0;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * ((qword_1EE29F038 + qword_1EE29EF38) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 + qword_1EE29EF38) ^ 0xE3))] ^ 0xE6])
                                                       - 218]
                                       - 12))(&v6);
  return (v8 - 101372955);
}

uint64_t uZOxRFTqHPWsyRz(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = (qword_1EE29F038 ^ qword_1EE29F078) - (_QWORD)&v11;
  v3 = 151185677 * (v2 + 0x442F1C6725233D1DLL);
  v4 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  qword_1EE29F078 = v3;
  v5 = 13 * (v3 ^ 0xE3 ^ v4);
  v6 = byte_19334BE00[byte_19334B9C0[v5] ^ 0x37];
  qword_1EE29F038 = v4;
  v7 = *(_QWORD *)(qword_1E2FD4D00[(v5 ^ v6) - 40] + 6328) - 4;
  v8 = 156243929 * ((unint64_t)&v12 ^ 0x75A58B1A22C4246DLL);
  v16 = 737185665 - v8;
  v9 = v7 ^ v8;
  LOBYTE(v8) = byte_19334BBC0[byte_19334C440[v5] ^ 1];
  v13 = a2;
  v14 = v9;
  v15 = a1;
  ((void (*)(unsigned int *))qword_1E2FD4D00[(v5 ^ v8) - 51])(&v12);
  return v12;
}

uint64_t Eqabp8dNUu0KCyhO(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, int a9)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v14[8];
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v9 = (unint64_t)&v14[qword_1EE29F038 - qword_1EE29F098];
  qword_1EE29F098 = 151185677 * v9 - 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v9 ^ 0xBBD0E398DADCC2E3);
  v10 = (13 * ((qword_1EE29F038 + qword_1EE29F098) ^ 0xE3));
  v11 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F098) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[v10] ^ 0xFD])
                                  - 70]
                  + 5112)
      - 4;
  v12 = 462300053
      * ((2 * ((unint64_t)&v15 & 0x16009818A3933890) - (_QWORD)&v15 - 0x16009818A3933898) ^ 0x58FD08A1AC07217CLL);
  v23 = a8;
  v16 = a9 - v12;
  v15 = a5;
  v19 = v11 ^ v12;
  v17 = a1;
  v26 = a7;
  v24 = a6 - v12;
  v25 = a2 - v12;
  v22 = v12 ^ a4;
  v20 = v12 ^ 0x8CCE470E;
  v21 = a3 - v12;
  ((void (*)(uint64_t *))(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F098) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[v10] ^ 0x98])
                                                  - 52]
                                  - 4))(&v15);
  return v18;
}

uint64_t jSNXSLgDwR(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t)&v5[qword_1EE29EDF0 + qword_1EE29F038];
  qword_1EE29EDF0 = (151185677 * v1) ^ 0xBBD0E398DADCC2E3;
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  v2 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29EDF0) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[(13 * ((qword_1EE29F038 + qword_1EE29EDF0) ^ 0xE3))] ^ 0x86])
                                 - 183]
                 + 5608);
  v3 = 629424707 * ((unint64_t)v6 ^ 0x9B92B52A989F7379);
  v8 = 394009884 - v3;
  v6[0] = v3 + v2 - 12;
  v6[1] = a1;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29EDF0) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 - qword_1EE29EDF0) ^ 0xE3))] ^ 0x53])
                                                 - 212]
                                 - 12))(v6);
  return v7;
}

uint64_t Qhl17oSYJtCJIxM(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v9;
  _DWORD v10[2];
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = (qword_1EE29F038 ^ qword_1EE29EF48) - (_QWORD)&v9;
  qword_1EE29EF48 = (151185677 * v5) ^ 0xBBD0E398DADCC2E3;
  qword_1EE29F038 = 151185677 * (v5 ^ 0xBBD0E398DADCC2E3);
  LOBYTE(v5) = 13 * ((13 * v5) ^ qword_1EE29F038);
  v6 = *(_QWORD *)(qword_1E2FD4D00[(v5 ^ byte_19334C100[byte_19334BCC0[v5] ^ 0xAC])
                                 - 64]
                 + 6240);
  v7 = 486723911
     * ((-2 - ((~(unint64_t)v10 | 0x4D7EAF9D98862F0BLL) + ((unint64_t)v10 | 0xB28150626779D0F4))) ^ 0x7FC0740C284C4F91);
  v13 = a3;
  v11 = a1;
  v14 = a2 - v7;
  v15 = v6 - v7 - 8;
  v16 = a5;
  v10[0] = -964254109 - v7;
  v10[1] = v7 + a4;
  ((void (*)(_DWORD *))(qword_1E2FD4D00[(v5 ^ byte_19334BBC0[byte_19334C440[v5] ^ 0x36])
                                                 - 52]
                                 - 4))(v10);
  return v12;
}

uint64_t at7Z1NwMd(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  unsigned int v7;
  uint64_t v8;
  _BYTE v9[8];
  unsigned int v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t vars0;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = (unint64_t)&v9[qword_1EE29F0F0 + qword_1EE29F038];
  qword_1EE29F0F0 = 151185677 * v3 - 0x305AD97674A37F79;
  qword_1EE29F038 = 151185677 * (v3 ^ 0xBBD0E398DADCC2E3);
  v4 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F0F0) ^ 0xE3)) ^ byte_19334BF00[byte_19334BAC0[(13 * ((qword_1EE29F038 + qword_1EE29F0F0) ^ 0xE3))] ^ 0x70])
                                 - 201]
                 + 6672)
     - 8;
  v8 = a1 - ((2 * a1) & 0x59A7831D17BFFA7ELL) + 0x2CD3C18E8BDFFD3FLL;
  v6[0] = v4;
  v6[1] = a2;
  v7 = (a3 ^ 0x7FF3F96D) - 1069132 + ((2 * a3) & 0xFFE7F2DA);
  v10 = (486723911
       * ((((&vars0 - 32) | 0x34C46BF4) - ((&vars0 - 32) & 0x34C46BF4)) ^ 0x840E0B6E)) ^ 0x833BC4F0;
  v11 = v6;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * (qword_1EE29F0F0 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[byte_19334C220[(13 * (qword_1EE29F0F0 ^ 0xE3 ^ qword_1EE29F038))] ^ 0xD4])
                                                       - 188]
                                       - 12))(&v10);
  return (v12 - 101372955);
}

uint64_t sub_1931EFDDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[14];
  char v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t vars0;

  v7 = *MEMORY[0x1E0C80C00];
  v0 = (qword_1EE29F038 ^ qword_1EE29F0E8) - (_QWORD)&v4;
  qword_1EE29F0E8 = 151185677 * v0 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v0 ^ 0xBBD0E398DADCC2E3);
  v1 = qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29F0E8) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[(13 * ((qword_1EE29F038 - qword_1EE29F0E8) ^ 0xE3))] ^ 0xF])
                     - 104]
     - 4;
  v3[0] = *(_QWORD *)(qword_1E2FD4D00[((13 * (qword_1EE29F0E8 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[byte_19334C220[(13 * (qword_1EE29F0E8 ^ 0xE3 ^ qword_1EE29F038))] ^ 0xD4])
                                    - 177]
                    + 6576)
        - 8;
  v3[1] = v1;
  v6 = v3;
  v5 = (486723911
      * ((((&vars0 - 32) | 0x49264BE1) + (~(&vars0 - 32) | 0xB6D9B41E)) ^ 0xF9EC2B7A)) ^ 0x833BC4F0;
  return ((uint64_t (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                                    * ((qword_1EE29F038 + qword_1EE29F0E8) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[(13 * ((qword_1EE29F038 + qword_1EE29F0E8) ^ 0xE3))] ^ 0xFD])
                                                                 - 81]
                                                 - 12))(&v5);
}

uint64_t jomCL4mkolcRMRSf(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v9 = qword_1EE29F038 - qword_1EE29F118 - (_QWORD)&v14;
  qword_1EE29F118 = 151185677 * v9 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v9 ^ 0xBBD0E398DADCC2E3);
  v10 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29F118) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[(13 * ((qword_1EE29F038 - qword_1EE29F118) ^ 0xE3))] ^ 0x98])
                                  - 76]
                  + 6368);
  v11 = 2106769199
      * ((~(unint64_t)&v15 & 0x5AC24FE49191E3EFLL | (unint64_t)&v15 & 0xA53DB01B6E6E1C10) ^ 0xDF8D1017DD318C43);
  v22 = a7;
  v23 = a8;
  v26 = a4;
  v24 = a5 - v11;
  v19 = a2;
  v20 = v11 ^ a1;
  v16 = a6;
  v17 = a9;
  v21 = v11 + 711387026;
  v15 = v11 + a3;
  v12 = byte_19334BAC0[(13 * ((qword_1EE29F038 + qword_1EE29F118) ^ 0xE3))];
  v18 = v10 - v11 - 4;
  ((void (*)(int *))(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F118) ^ 0xE3)) ^ byte_19334BF00[v12 ^ 0x70])
                                              - 209]
                              - 4))(&v15);
  return v25;
}

uint64_t pC3lVfLuVJLMz(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[8];
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v2 = (unint64_t)&v7[qword_1EE29F038 - qword_1EE29F088];
  qword_1EE29F088 = 151185677 * (v2 + 0x442F1C6725233D1DLL);
  qword_1EE29F038 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  v3 = (13 * ((qword_1EE29F038 + qword_1EE29F088) ^ 0xE3));
  v4 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F088) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[v3] ^ 0x7F])
                                 - 213]
                 + 6336);
  v5 = 1239927961
     * ((((unint64_t)&v8 | 0xABD5D47BBB8ACBC4) - (_QWORD)&v8 + ((unint64_t)&v8 & 0x542A2B8444753438)) ^ 0xCEC638FF5CE630D4);
  v12 = v5 ^ 0xF7;
  v13 = a2;
  v8 = v5 + v4 - 8;
  v11 = a1;
  v10 = 2738853 - v5;
  ((void (*)(uint64_t *))(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F088) ^ 0xE3)) ^ byte_19334BBC0[byte_19334C440[v3] ^ 0x98])
                                                  - 74]
                                  - 4))(&v8);
  return (v9 - 101372955);
}

uint64_t MDIwLzAxLzA5IDE(uint64_t a1)
{
  unint64_t v1;
  char v3;
  _QWORD v4[2];
  unsigned int v5;
  int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  qword_1EE29EF28 = 151185677 * ((qword_1EE29EF28 - (_QWORD)&v3 + qword_1EE29F038) ^ 0xBBD0E398DADCC2E3);
  qword_1EE29F038 = qword_1EE29EF28;
  v1 = 629424707
     * ((((2 * (_QWORD)v4) | 0xF63C2A50D2053D2ELL) - (_QWORD)v4 + 0x4E1EAD796FD6169) ^ 0x608CA002F19DEDEELL);
  v4[0] = v1 + 0x19322B314;
  v4[1] = a1;
  v6 = 394009884 - v1;
  ((void (*)(_QWORD *))(qword_1E2FD4D00[((13 * ((2 * qword_1EE29EF28) ^ 0xE3)) ^ byte_19334C320[byte_19334C000[(13 * ((2 * qword_1EE29EF28) ^ 0xE3))] ^ 0xB0])
                                                 - 69]
                                 - 12))(v4);
  return v5;
}

uint64_t n2qn70S3cN6uyWbw(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[8];
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t)&v5[qword_1EE29F038 - qword_1EE29F040];
  qword_1EE29F040 = 151185677 * v1 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  v2 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F040) ^ 0xE3)) ^ byte_19334BE00[byte_19334B9C0[(13 * ((qword_1EE29F038 + qword_1EE29F040) ^ 0xE3))] ^ 0x37])
                                 - 40]
                 + 6136);
  v3 = 1995441121
     * ((((unint64_t)&v6 | 0x7FD16FB86D1BD84) - ((unint64_t)&v6 & 0x7FD16FB86D1BD84)) ^ 0x9531707C4AE66CCFLL);
  v8 = v3 - 2072213723;
  v9 = v2 - v3 - 8;
  v7 = v3 + a1;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * ((qword_1EE29F038 - qword_1EE29F040) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[(13 * ((qword_1EE29F038 - qword_1EE29F040) ^ 0xE3))] ^ 0x86])
                                                       - 184]
                                       - 4))(&v6);
  return v6;
}

uint64_t mfGhVpprP0qip8G(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v1 = (qword_1EE29F038 - qword_1EE29F0C0) ^ (unint64_t)&v5;
  qword_1EE29F0C0 = 151185677 * v1 - 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v1 ^ 0xBBD0E398DADCC2E3);
  v2 = *(_QWORD *)(qword_1E2FD4D00[((13 * (qword_1EE29F0C0 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334BBC0[byte_19334C440[(13 * (qword_1EE29F0C0 ^ 0xE3 ^ qword_1EE29F038))] ^ 0x36])
                                 - 58]
                 + 5832);
  v3 = 1995441121
     * ((((unint64_t)&v6 | 0xF029250E809D0CBALL) - ((unint64_t)&v6 & 0xF029250E809D0CBALL)) ^ 0x62E543894CAADDF1);
  v8 = v3 - 2072213723;
  v9 = v2 - v3 - 8;
  v7 = v3 + a1;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * ((qword_1EE29F038 - qword_1EE29F0C0) ^ 0xE3)) ^ byte_19334C320[byte_19334C000[(13 * ((qword_1EE29F038 - qword_1EE29F0C0) ^ 0xE3))] ^ 0xB0])
                                                       - 53]
                                       - 4))(&v6);
  return v6;
}

uint64_t FhS8L9pZ83yt(uint64_t a1, int a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _BYTE v6[8];
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v2 = (unint64_t)&v6[qword_1EE29F090 + qword_1EE29F038];
  qword_1EE29F090 = 151185677 * (v2 + 0x442F1C6725233D1DLL);
  qword_1EE29F038 = 151185677 * (v2 ^ 0xBBD0E398DADCC2E3);
  v3 = 1995441121
     * ((-2 - ((~(unint64_t)&v7 | 0xD65B42F7D0EC2D8DLL) + ((unint64_t)&v7 | 0x29A4BD082F13D272))) ^ 0x449724701CDBFCC6);
  v4 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 - qword_1EE29F090) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[(13 * ((qword_1EE29F038 - qword_1EE29F090) ^ 0xE3))] ^ 0x7F])
                                 - 213]
                 + 5792);
  v9 = v3 + 1938131307 * a2 + 1859381268;
  v8 = a1;
  v10 = v4 - v3;
  v7 = v3 ^ 0x12FC7973;
  ((void (*)(int *))(qword_1E2FD4D00[((13 * (qword_1EE29F090 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C100[byte_19334BCC0[(13 * (qword_1EE29F090 ^ 0xE3 ^ qword_1EE29F038))] ^ 0xAC])
                                              - 63]
                              - 8))(&v7);
  return 4294924507;
}

uint64_t f5dnLMQHpqo6KM9x(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD v4[2];
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[8];
  unsigned int v8;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t vars0;

  v11 = *MEMORY[0x1E0C80C00];
  qword_1EE29EE08 = 151185677 * ((unint64_t)&v7[qword_1EE29F038 ^ qword_1EE29EE08] ^ 0xBBD0E398DADCC2E3);
  qword_1EE29F038 = qword_1EE29EE08;
  v6 = a1 - ((2 * a1) & 0x59A7831D17BFFA7ELL) + 0x2CD3C18E8BDFFD3FLL;
  v4[0] = 0x193242454;
  v4[1] = a2;
  v5 = (a3 ^ 0x7FF3E9F3) - 1065170 + ((2 * a3) & 0xFFE7D3E6);
  v9 = v4;
  v8 = (486723911
      * ((((&vars0 - 32) | 0xEB392DD3) - ((&vars0 - 32) & 0xEB392DD3)) ^ 0x5BF34D49)) ^ 0x833BC4F0;
  sub_1932422A4(&v8);
  return (v10 - 101372955);
}

uint64_t ZZUDP2EEn9tLDQ()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[8];
  _DWORD v6[2];
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = (unint64_t)&v5[qword_1EE29F038 ^ qword_1EE29EE10];
  qword_1EE29EE10 = 151185677 * v0 - 0x305AD97674A37F79;
  qword_1EE29F038 = 151185677 * (v0 ^ 0xBBD0E398DADCC2E3);
  v1 = (13 * ((qword_1EE29F038 + qword_1EE29EE10) ^ 0xE3));
  v2 = *(_QWORD *)(qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29EE10) ^ 0xE3)) ^ byte_19334BF00[byte_19334BAC0[v1] ^ 0x36])
                                 - 171]
                 + 5928);
  v3 = 2018881763
     * ((((2 * (_QWORD)v6) | 0x46DCC60A26C80CBALL) - (_QWORD)v6 - 0x236E63051364065DLL) ^ 0x6D2292EB50EB82ALL);
  v6[0] = v3 + 1409428173;
  LOBYTE(v1) = byte_19334BBC0[byte_19334C440[v1] ^ 1];
  v7 = v2 - v3 - 4;
  ((void (*)(_DWORD *))qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29EE10) ^ 0xE3)) ^ v1)
                                                - 59])(v6);
  return v6[1];
}

void bJM8NAjYQsWsGN9h(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1931F0CA4(_DWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((727 * (((((*a1 - 1) | (1 - *a1)) < 0) ^ 0xF) & 1)) ^ 0x5ACu)))();
}

uint64_t sub_1931F0CF0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((*(_QWORD *)(a1 + 8) != 0) * (((_WORD)a2 - 19014) & 0x14FF ^ 0x19E4)) ^ a2)))();
}

uint64_t sub_1931F0D28(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 + 1294405497) & 0x2FAF ^ 0xF83) * (*(_DWORD *)(a1 + 16) != 0)) ^ v1))
                            - 4))();
}

uint64_t sub_1931F0D68@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*v1 != 0) * ((2 * (a1 ^ 0x356)) ^ 0x572)) ^ a1 ^ 0x356))
                            - (((a1 ^ 0x356u) + 694) ^ 0xF8BLL)))();
}

uint64_t sub_1931F0E9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((((v0 - 3918) | v5) ^ v3) + v0 - 2531) * (v4 + 1 == v2)) ^ v0))
                            - 4))();
}

uint64_t sub_1931F0ED0()
{
  int v0;
  uint64_t v1;

  ((void (*)(uint64_t))qword_1E2FD4D00[v0 - 1399])(v1);
  return 0;
}

void sub_1931F0F28(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1931F0FBC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t (*v15)(_QWORD *);
  uint64_t result;
  _QWORD v17[2];
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  int v33;

  v3 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = *(_DWORD *)(v2 + 56) ^ v1;
  v8 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v9 = *(_DWORD *)(v2 + 8) - v1;
  v10 = *(_DWORD *)(v2 + 52) + v1;
  v11 = *(_QWORD *)(v2 + 88);
  v12 = 0x653EC904EC380E05 * (*(_QWORD *)v2 ^ v1) + 0x43FE5CE22EA4989ALL;
  v17[0] = *(_QWORD *)(v2 + 80);
  v17[1] = v11;
  v13 = 1624863733
      * ((((unint64_t)v17 | 0xDC5713B012B3BBALL) - ((unint64_t)v17 & 0xDC5713B012B3BBALL)) ^ 0x362A7F2433BDC182);
  v14 = v13 + 1108063400 + a1;
  v20 = v8;
  v33 = 1675139122 - v13;
  v21 = v13 + 2110746620 + (v6 ^ 0xFBFDFDDF) + ((2 * v6) & 0xF7FBFBBE);
  v30 = v7;
  v27 = v12 ^ v13;
  v24 = v4;
  v25 = 0;
  v26 = ((v9 ^ 0x97EB7CF7) + 2113731584 + ((2 * v9) & 0x2FD6F9EE)) ^ v13;
  v22 = v3;
  v23 = 0;
  v28 = ((v10 ^ 0xD7FD7FFF) + 1038809336 + ((2 * v10) & 0xAFFAFFFE)) ^ v13;
  v31 = v13 ^ 0x38;
  v32 = v5;
  v15 = (uint64_t (*)(_QWORD *))(qword_1E2FD4D00[a1 ^ 0xBDF452FB] - 12);
  v18 = v14;
  v19 = v13 + 367556855;
  result = v15(v17);
  *(_DWORD *)(v2 + 96) = v29 - 101372955;
  return result;
}

void sub_1931F11F8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 2106769199 * (((a1 | 0x59392852) - a1 + (a1 & 0xA6C6D7AD)) ^ 0x159947FE);
  __asm { BR              X10 }
}

uint64_t sub_1931F1270@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0xADD)))();
}

void Li197SADabUVzZISmm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t *a6)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t *v17;
  unint64_t *v18;
  unint64_t *v19;
  char v20;
  _BYTE v21[8];
  int v22;
  _QWORD *v23;
  unsigned int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v7 = (unint64_t)&v21[qword_1EE29F038 ^ qword_1EE29EE18];
  qword_1EE29EE18 = 151185677 * v7 - 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v7 ^ 0xBBD0E398DADCC2E3);
  v11 = *a6;
  v12 = 0;
  v8 = (13 * (qword_1EE29EE18 ^ 0xE3 ^ qword_1EE29F038));
  v9 = qword_1E2FD4D00[((13 * (qword_1EE29EE18 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[byte_19334C220[v8] ^ 0x7F])
                     - 88];
  v10 = v9 - 8;
  v13[0] = *(_QWORD *)(v9 + 6528) - 8;
  v13[1] = a1 - ((2 * a1) & 0xF6BED2222B63302ELL) + 0x7B5F691115B19817;
  v13[2] = a2;
  v14 = (a3 ^ 0x7BBAE55F) - 302007572 + ((2 * a3) & 0xF775CABE);
  v15 = a4;
  v16 = (a5 ^ 0xEDBFFDCF) + 2080023164 + ((2 * a5) & 0xDB7FFB9E);
  v17 = &v11;
  v18 = &STACK[0x33D7F666902D96F1];
  v19 = &STACK[0x37D414369B065A9D];
  v20 = -103;
  v23 = v13;
  v24 = (597255653 * ((2 * (&v22 & 0x1765C9C0) - &v22 + 1754936894) ^ 0x619149A7)) ^ 0x2BBA9AF6;
  ((void (*)(int *))(qword_1E2FD4D00[((13 * (qword_1EE29EE18 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C100[byte_19334BCC0[v8] ^ 0xAC])
                                              - 68]
                              - 8))(&v22);
  *a6 = v11;
  __asm { BR              X9 }
}

uint64_t sub_1931F14F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v6 = 629424707 * (((v3 | 0x5F01FFA84F8BE281) - v3 + (v3 & 0xA0FE0057B0741D78)) ^ 0xC4934A82D71491F8);
  *v1 = v6 + *(_QWORD *)(v2 + 6032) - 12;
  v1[1] = a1;
  *(_DWORD *)(v5 - 60) = 394009884 - v6;
  sub_19322AB04();
  return (v4 - 101372955);
}

void sub_1931F15B4(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1931F1610@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;

  v5 = *(_QWORD *)(qword_1E2FD4D00[a1 + 55166934] + 8 * (a1 + 55167701) - 8) - 8;
  v6 = (v1 ^ 0x7DFEDEF3) - 1084755008 + ((2 * v1) & 0xFBFDBDE6);
  *(_QWORD *)(v3 - 40) = &v5;
  *(_DWORD *)(v3 - 48) = (a1 - 2038068068) ^ (486723911 * ((v3 - 298415992 - 2 * ((v3 - 48) & 0xEE3688B8)) ^ 0x5EFCE822));
  result = ((uint64_t (*)(uint64_t))(qword_1E2FD4D00[a1 ^ 0xFCB6384B] - 12))(v3 - 48);
  *v2 = *(_DWORD *)(v3 - 32) - 101372955;
  return result;
}

void tgrNklBQEZq9N92(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1931F17A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_QWORD *a35)
{
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a35[3] - ((2 * a35[3]) & 0x32FF093EF8E74E0ELL) - 0x66807B60838C58F9;
  *(_BYTE *)(v37 - 160) = HIBYTE(v38) ^ 0x99;
  *(_BYTE *)(v37 - 159) = BYTE6(v38) ^ 0x7F;
  *(_BYTE *)(v37 - 158) = BYTE5(v38) ^ 0x84;
  *(_BYTE *)(v37 - 157) = BYTE4(v38) ^ 0x9F;
  *(_BYTE *)(v37 - 156) = ((BYTE3(v38) ^ 0x7C) - ((2 * (BYTE3(v38) ^ 0x7C)) & 0x7C) + 62) ^ 0x3E;
  *(_BYTE *)(v37 - 155) = ((BYTE2(v38) ^ 0x73) - ((2 * (BYTE2(v38) ^ 0x73)) & 0x16) - 117) ^ 0x8B;
  *(_BYTE *)(v37 - 154) = BYTE1(v38) ^ 0xA7;
  *(_BYTE *)(v37 - 153) = v38 ^ 7;
  v39 = *a35 - ((2 * *a35) & 0x32FF093EF8E74E0ELL) - 0x66807B60838C58F9;
  *(_BYTE *)(v37 - 152) = HIBYTE(v39) ^ 0x99;
  *(_BYTE *)(v37 - 151) = BYTE6(v39) ^ 0x7F;
  *(_BYTE *)(v37 - 150) = BYTE5(v39) ^ 0x84;
  *(_BYTE *)(v37 - 149) = BYTE4(v39) ^ 0x9F;
  *(_BYTE *)(v37 - 148) = ((BYTE3(v39) ^ 0x7C) - ((2 * (BYTE3(v39) ^ 0x7C)) & 0x7C) + 62) ^ 0x3E;
  *(_BYTE *)(v37 - 147) = ((BYTE2(v39) ^ 0x73) - ((2 * (BYTE2(v39) ^ 0x73)) & 0x16) - 117) ^ 0x8B;
  *(_BYTE *)(v37 - 146) = BYTE1(v39) ^ 0xA7;
  *(_BYTE *)(v37 - 145) = v39 ^ 7;
  *(_DWORD *)(v37 - 140) = 629424707 * (((v37 - 144) & 0x84F99DA0 | ~((v37 - 144) | 0x84F99DA0)) ^ 0xE3991126) + 2860;
  v40 = sub_193241A88(v37 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v36
                                                      + 8 * ((2290 * (*(_DWORD *)(v37 - 144) != 1009597723)) ^ v35))
                                          - 8))(v40);
}

uint64_t sub_1931F1978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;

  *(_QWORD *)(v34 - 216) = 0;
  *(_QWORD *)(v34 - 200) = 0;
  *(_DWORD *)(v34 - 204) = 101372955;
  *(_DWORD *)(v34 - 168) = 101372955;
  v44 = *(_QWORD *)(v33 + 3344) - 4;
  LODWORD(a17) = -1520940305;
  v35 = MEMORY[0x191D653A4](16, 2241923698);
  HIDWORD(a23) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((3259 * (v35 != 0)) ^ 0x382)) - 8))(v35, v36, v37, v38, v39, v40, v41, v42, 0x1EAEBE5F26E32FE8, a10, a11, a12, 486723911 * (v32 ^ 0x32BEDB91B0CA609ALL), a14, a15, a16, a17, v34 - 200, v34 + 0x54D2A68F3DE7F3D2,
           v34 + 0x46AAD4E1DD90111CLL,
           v44,
           0x191D653A4,
           a23,
           a24,
           a25,
           a26,
           a27,
           329,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1931F1B20(uint64_t *a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  int v3;
  uint64_t v5;

  *a1 = 0;
  a1[1] = 0;
  v5 = v1(4096, 2241923698);
  *a1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v5 == 0) ^ v3))
                            - (((v3 - 302058412) & 0x3F15DFFF)
                             + (unint64_t)((v3 + 604263468) | 0x9108028u))
                            + 1512683988))();
}

uint64_t sub_1931F1B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _QWORD *a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t))
{
  uint64_t v40;
  uint64_t v41;

  v41 = a40(v40);
  *a18 = 0;
  return a21(v41, 756341998, 756339783, 1849, 1366);
}

uint64_t sub_1931F1BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _QWORD *a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *a18 = 0;
  return a21(a1, 756341998, 756339783, 1849, 1366);
}

uint64_t sub_1931F1C2C@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v3 + a1 - 651) ^ 0x7C4) * a2) ^ (v3 + a1 - 651))) - 4))();
}

uint64_t sub_1931F1C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  uint64_t v33;

  HIDWORD(a31) = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * (int)(((*(_DWORD *)(*(_QWORD *)(v33 - 200) + 12) < ((v31 + 961) ^ 0xFFFFFB45)) * ((a3 + v31 + 961 + 1001) ^ (a3 - 3000))) ^ (v31 + 961))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           *(_QWORD *)(v33 - 200) + 12,
           a31);
}

uint64_t sub_1931F1E4C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _BOOL4 v35;
  _BOOL4 v36;

  v33 = ((((a1 ^ 0x534) + 135560982) | 0x25005C4Eu) ^ 0x80412107D7628019)
      + ((2 * (_DWORD)v31) & 0xDEBEE6DC)
      + (((((a1 ^ 0x534) - 274793371) & 0x3D75DEFE) + 0x7FBEDEF8424A9680) ^ v31);
  v34 = (*(unsigned int *)(a31 + 8) ^ 0xBC5DFEABCBFB6D47)
      + 0x43A201549DDA631ALL
      + ((2 * *(unsigned int *)(a31 + 8)) & 0x197F6DA8ELL);
  v35 = v33 < 0x69D5D061;
  v36 = v33 > v34;
  if (v34 < 0x69D5D061 != v35)
    v36 = v35;
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((1885 * v36) ^ a1 ^ 0x534)) - 8))();
}

uint64_t sub_1931F1F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  unsigned int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  *(_DWORD *)(v44 - 220) = v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * ((240 * (*(unsigned int *)(a39 + 8) <= (unint64_t)((a9 ^ ((_DWORD)a3 - 176) ^ v40) - v42 - 1873) + v43)) ^ a9 ^ ((int)a3 - 176))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1931F1F70(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((30 * (v3 != ((26 * (a2 ^ (a2 - 14))) ^ (v5 + 348)))) ^ (v4 + a2 + 3014)))
                            - 12))();
}

uint64_t sub_1931F1FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v30 - 240) = *(_QWORD *)(v29 + 8 * v28);
  v31 = *(_QWORD *)(v30 - 200);
  *(_QWORD *)(v30 - 232) = v31;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * ((878 * (((((v28 - 236) | 0x964) - 4262629) & 0x2D55DDEE ^ 0x6D64F3FF38F3A30ELL) - 0x4404904810000609 + (*(unsigned int *)(v31 + 12) ^ ((((v28 - 236) | 0x964) ^ 0x844u) + 0x57BAFBFE6D7FEBEDLL)) + (unint64_t)((2 * *(_DWORD *)(v31 + 12)) & 0xDAFFDB1A) + 0x7EE4A04A8C9898A4 < 0xFFFFFFFB)) ^ ((v28 - 236) | 0x964))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1931F22A4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BOOL4 v10;

  v5 = v1 - 0x192826E00058500;
  v6 = *(unsigned int *)(*(_QWORD *)(v4 - 232) + 8);
  v7 = v5 - 0x7F88DD46CEA957E5;
  v8 = (v6 ^ 0x5DFFF5E735DE69BELL) - 0x5DFFF5E69125DF4BLL + ((2 * (_DWORD)v6) & 0x6BBCD37C);
  v10 = v8 > ((v0 - v3 + 488) ^ 0x89AC569CuLL) && v7 > v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4027 * v10) ^ v0)) - 4))();
}

void sub_1931F2350()
{
  JUMPOUT(0x1931F2368);
}

uint64_t sub_1931F241C@<X0>(int a1@<W3>, unint64_t a2@<X4>, unint64_t a3@<X8>)
{
  int v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v3 ^ ((v4 > a3) * a1))) - (((v3 ^ v5) - 2599) ^ a2)))();
}

uint64_t sub_1931F2448@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v4 + ((v2 - 283117155) & 0x3DF4DDFE) + 1415) * (a1 < v1)) ^ v2))
                            - 4))();
}

uint64_t sub_1931F2484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, uint64_t))
{
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a22(v22, 2241923698);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * (((v26 != 0) * (v25 + ((v23 + 603997972) | 0x9149088) - 241)) ^ v23)) - ((v23 - 746) ^ 0x26CLL)))(v26, 756341998, 756339783, 1849, 1366, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1931F2514(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t *a27)
{
  int v27;
  uint64_t v28;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * (((2 * (*a27 > a1)) | (16 * (*a27 > a1))) ^ ((v27 + 3040) | 0x124))) - ((((v27 + 3040) | 0x124) + 1070074995) & 0xC037F42C ^ 0x1004)))(a1, a2, a3, a4, a5, 3713000404, 0xC0391580E16, 3471, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1931F2E38()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v3 + ((v1 - 46338318) & 0x2FD7DDEF) - 783) * (v0 == 0)) ^ v1))
                            + 756341994
                            - ((v1 - 273363741) & 0x3D5FFFFE)
                            - 8))();
}

uint64_t sub_1931F2E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W7>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(a1 + v6 - 0x5D946D73CE96B68 + v7) = *(_BYTE *)(v7 + a4 + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v5 == 1) * a3) ^ (v9 + v4 + 515))) - 4))();
}

uint64_t sub_1931F2F00()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 - 2578) * (v1 != 0)) ^ (v0 - 1896)))
                            + 756341994
                            - ((v0 - 1118311037) & 0x6FBCDFFE)))();
}

uint64_t sub_1931F2F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v11 = v3 - 1;
  v12 = (v6 & (2 * v11)) + (v11 ^ v5);
  *(_BYTE *)(a1 + v4 - 0x7C539198C63B88BBLL + v12) = *(_BYTE *)(v12 + a2 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v11 == 0) * v9) ^ (v10 + v2 + 209))) - 4))();
}

void sub_1931F2FA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 176);
  *(_QWORD *)(v1 + 8) = *(unsigned int *)(v0 - 164);
  *(_QWORD *)(v0 - 216) = v1;
  JUMPOUT(0x1931F35D0);
}

void sub_1931F3654()
{
  JUMPOUT(0x1931F3668);
}

uint64_t sub_1931F36A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  BOOL v8;
  int v9;
  int v10;
  int v11;

  v4 = v0 ^ 6;
  v5 = (*(unsigned int *)(v1 + 12) ^ 0xC8AFFFDED9FFFFBFLL)
     + 0x375000220AFF1DB1
     + ((((v4 - v3 - 648) ^ 0x9A06E277) + (v4 - 51529003)) & (2
                                                                                          * *(unsigned int *)(v1 + 12)));
  v6 = (*(unsigned int *)(v1 + 8) ^ 0x7D7DEFF2FEEDFF7FLL)
     - 0x7D7DEFF219EEE213
     + ((2 * *(unsigned int *)(v1 + 8)) & 0x1FDDBFEFELL);
  v7 = v5 < 0xE4FF1D6C;
  v8 = v5 > v6;
  v9 = v7 ^ (v6 < 0xE4FF1D6C);
  v10 = v8;
  if (v9)
    v11 = v7;
  else
    v11 = v10;
  return (*(uint64_t (**)(void))(v2 + 8 * ((2 * v11) | (4 * v11) | v4)))();
}

uint64_t sub_1931F377C@<X0>(uint64_t (*a1)(void)@<X8>)
{
  _DWORD *v1;
  int v2;
  char v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v8 = ((2 * v2) & 0xFF9FCFF2) + (v2 ^ 0xFFCFE7F9) + 3151879;
  v9 = *(unsigned __int8 *)(*(_QWORD *)v4 + v8);
  v10 = ((v9 << (v6 + ((v3 - 127) | 0x88) - 112)) - (v9 << 25) - 0x1000000) | (*(unsigned __int8 *)(*(_QWORD *)v4
                                                                                                  + v8
                                                                                                  + 1) << 16);
  v11 = *(unsigned __int8 *)(*(_QWORD *)v4 + v8 + 2);
  v12 = v10 | (((v11 - ((2 * v11) & 0x4C)) << 8) + 1131750912) ^ 0x43752600;
  v13 = *(unsigned __int8 *)(*(_QWORD *)v4 + v8 + 3);
  v14 = (v12 ^ 0x5A6FFF) & ((v13 - ((2 * v13) & 0xE6) - 1636428685) ^ 0x82C7F04) ^ v12 & 0x69A59400;
  v15 = (v14 & 0x324D5387 ^ 0x12494387) + (v14 ^ 0x28A41408) - ((v14 ^ 0x28A41408) & 0x324D5387);
  *v1 = (((v15 ^ 0x1FBDF440) - 789305555) ^ ((v15 ^ 0x7B8AD7DE) - 1262287693) ^ ((v15 ^ 0x81840F66) + 1322114059))
      - 619719546;
  *(_DWORD *)(v4 + 12) = v2 + 4;
  *(_DWORD *)(v7 - 208) = v5;
  return a1();
}

uint64_t sub_1931F3914(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v8 = v5 == ((113 * (v3 ^ (a2 - 8))) ^ (v7 + v3 - a3 - 1327));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v8 | (v8 << 6) | (v3 + v6))) - 12))();
}

uint64_t sub_1931F3954()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1454 * (*(_DWORD *)(v2 - 204) == v3)) ^ v0))
                            - ((((v0 - 1899019017) & 0x7130B7B6u) + 2161) ^ 0x8ABLL)))();
}

void sub_1931F399C()
{
  JUMPOUT(0x1931F3660);
}

uint64_t sub_1931F39B4(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((a2 + v5 + 1311) ^ 0x204) * v2) ^ (a2 + v5)))
                         - (a2 ^ (a2 + 632) ^ 0x384));
  *(_DWORD *)(v6 - 208) = v3;
  return v7();
}

uint64_t sub_1931F39F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (((((22 * (v17 ^ 0x3FF)) ^ 0x29D) - 831) * (v18 != 0)) ^ v17)) - 12);
  *(_DWORD *)(v20 - 208) = 101330305;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1931F3A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  _BOOL4 v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v22 = (*(unsigned int *)(v20 - 168) | ((unint64_t)(*(_DWORD *)(v20 - 168) < v21) << 32))
      + (*(unsigned int *)(v18 + 12) ^ 0xFDF7BA366FFFF6BFLL)
      + 0x20845CA6B8DC754
      + (((v17 ^ 0x1CDu) - 2546 + 3758091129) & (2 * *(unsigned int *)(v18 + 12)));
  v23 = (*(unsigned int *)(v18 + 8) ^ 0x2FB4EF3F1ADFDD39)
      - 0x2FB4EF3E39474B0BLL
      + ((2 * *(_DWORD *)(v18 + 8)) & 0x35BFBA72);
  v24 = (v22 < 0xE198922E) ^ (v23 < 0xE198922E);
  v25 = v22 > v23;
  if (v24)
    v25 = v22 < 0xE198922E;
  v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (v25 ^ v17 ^ 1)) - 8);
  *(_DWORD *)(v20 - 208) = 101330305;
  return v26(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1931F3B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(void),int a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  *(_QWORD *)(v43 - 216) = (v38 - 2439);
  *(_DWORD *)(v40 + 12) = v37 + v36 + v41;
  *(_DWORD *)(v43 - 208) = v38;
  v44 = a22();
  v45 = *(_QWORD *)(v43 - 216);
  *(_QWORD *)(a36 + 64) = v44;
  v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (((4 * (v44 == 0)) | (8 * (v44 == 0))) ^ *(_DWORD *)(v43 - 208))) - ((v39 + 111) ^ v45));
  *(_DWORD *)(v43 - 208) = a24;
  return v46(v44, v47, 756339783, v48, v49, v50, v51, v52, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

void sub_1931F3BD0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 208) = v1;
  *(_QWORD *)(v2 - 216) = v0;
  JUMPOUT(0x1931F2D80);
}

uint64_t sub_1931F3E34(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                     + 8
                                     * (int)(((((a2 + v5 + 1311) ^ 0xFFFFF4E2) + 2 * (a2 ^ (a2 - 574))) * v2) ^ (a2 + v5)))
                         - 12);
  *(_DWORD *)(v6 - 208) = v3;
  return v7();
}

uint64_t sub_1931F3E74()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((110 * (*(_DWORD *)(v3 - 188) != v4)) ^ v0))
                         - ((v0 - 1222713598) & 0x48E117EB ^ 0x3A2));
  *(_DWORD *)(v3 - 208) = v1;
  return v5();
}

uint64_t sub_1931F3EC8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((((v0 + 1917282485) & 0x8DB897A1 ^ 0x3AA) * (v1 == 0)) ^ v0))
                            + 756341994
                            - ((v0 + 671350870) | 0x510D8EEu)
                            - 4))();
}

uint64_t sub_1931F3F2C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = v1
     + (*(unsigned int *)(v2 + 12) ^ 0xFF7EDFFAAB4F9FD7)
     + ((2 * *(unsigned int *)(v2 + 12)) & 0x1569F3FAELL)
     + ((unint64_t)(v1 < ((a1 - 313009683) & 0x3FBCFEFFu) - 654969043) << 32)
     + 0x8120063628FE3CLL;
  v5 = (*(unsigned int *)(v2 + 8) ^ 0x3FE676BE99FBF1CDLL)
     - 0x3FE676BDB2787F9FLL
     + (((unint64_t)*(unsigned int *)(v2 + 8) << ((a1 + 101) ^ 0x67u)) & 0x133F7E39ALL);
  v6 = v4 < 0xE783722E;
  v7 = v4 > v5;
  if (v5 < 0xE783722E != v6)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((948 * !v7) | a1)) - 8))();
}

uint64_t sub_1931F4034(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(void),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v43 = a3 + v36 - 1215;
  *(_DWORD *)(v38 + 12) = v37 - 857714953 + v43 + v35;
  v44 = a22();
  *(_QWORD *)(a35 + 80) = v44;
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (((v44 == 0) * ((v43 - 756339783) ^ 0xB78)) ^ (v41 + v43 + 2677)));
  *(_DWORD *)(v42 - 208) = v39;
  return v45(v44, 756341998, 756339783, 1849, 1366, v46, v47, v48, a9);
}

uint64_t sub_1931F4134(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v3 - 38) ^ (*v4 == 0)) & 1) * (a3 + v6 + v3 + 730 + 498)) ^ (v3 + 730))))();
}

uint64_t sub_1931F43EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void (*a40)(void))
{
  uint64_t (*v40)(uint64_t);
  _QWORD *v41;
  uint64_t v42;

  a40();
  *v41 = 0;
  v41[1] = 0;
  v42 = ((uint64_t (*)(_QWORD *))a40)(v41);
  return v40(v42);
}

uint64_t sub_1931F4418()
{
  int v0;
  int v1;

  return (v1 + v0);
}

void sub_1931F4458(uint64_t a1)
{
  __asm { BR              X9 }
}

void sub_1931F455C()
{
  _DWORD *v0;

  *v0 = 0;
}

uint64_t sub_1931F64D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  int v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;

  v60 = STACK[0x210];
  v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 272);
  *(_QWORD *)(v59 + 152) = 0;
  LODWORD(v63) = v60;
  HIDWORD(v63) = v60;
  return v61(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           v63);
}

uint64_t sub_1931F6504()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = 88 * (v0 ^ (v5 + 1521));
  v7 = v3 + v0 - 22;
  v8 = STACK[0x2CC];
  v9 = v2[56];
  v2[149] = v2[57];
  v2[150] = v9;
  v10 = STACK[0x2B4];
  LODWORD(STACK[0x5B4]) = STACK[0x2B4];
  v12 = v2[53];
  v11 = v2[54];
  v2[152] = v11;
  v2[153] = v12;
  v14 = v2[51];
  v13 = v2[52];
  v2[154] = v13;
  v2[155] = v14;
  v2[59] = v14;
  v2[60] = v13;
  v2[61] = v12;
  v2[62] = v11;
  LODWORD(STACK[0x2F4]) = v10;
  v2[64] = v9;
  v2[65] = v2[149];
  LODWORD(STACK[0x30C]) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v8 == v4) * (v6 - 629)) ^ v7)) - 8))();
}

uint64_t sub_1931F6588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  _QWORD *v40;
  int v41;
  uint64_t *v42;
  uint64_t v43;
  _DWORD *v44;
  int v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;

  v42 = (uint64_t *)v40[154];
  v43 = *v42;
  v44 = (_DWORD *)v40[155];
  v45 = STACK[0x5B4];
  v46 = LODWORD(STACK[0x5B4]) - ((v39 + 902340816) & (2 * LODWORD(STACK[0x5B4]))) + 451170848;
  v47 = ((2 * *v44) & 0x7F9FFBBA) + (*v44 ^ 0xBFCFFDDD) + 1076888099;
  *(_BYTE *)(*v42 + v47) = HIBYTE(v46) ^ 0x1A;
  *(_BYTE *)(v43 + v47 + 1) = BYTE2(v46) ^ 0xE4;
  *(_BYTE *)(v43 + v47 + 2) = (((BYTE1(v46) ^ 0x52) - 2 * ((BYTE1(v46) ^ 0x52) & 7 ^ BYTE1(v46) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v43 + v47 + 3) = v46 ^ 0x20;
  *v44 += 4;
  v40[59] = v44;
  v40[60] = v42;
  v48 = v40[152];
  v40[61] = v40[153];
  v40[62] = v48;
  LODWORD(STACK[0x2F4]) = v45;
  v40[64] = v40[150];
  v40[65] = v40[149];
  LODWORD(STACK[0x30C]) = v41;
  v50 = v40[61];
  v51 = v40[62];
  HIDWORD(a31) = STACK[0x2F4];
  v52 = v40[64];
  v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v40[65];
  HIDWORD(a34) = STACK[0x30C];
  v54 = v40[59];
  v55 = v40[60];
  HIDWORD(a39) = STACK[0x2F4];
  *v40 = v52;
  v40[1] = v53;
  v40[3] = v54;
  v40[4] = v55;
  v40[6] = v53;
  return v53(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v54,
           v55,
           v50,
           v51,
           a31,
           v52,
           v53,
           a34,
           v54,
           v55,
           v50,
           v51,
           a39);
}

uint64_t sub_1931F6700@<X0>(int a1@<W0>, int a2@<W5>, unint64_t a3@<X6>, unint64_t a4@<X8>)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a2 ^ ((a4 > a3) * a1))) - ((v7 + a2 + v4) & v5) + 3631))();
}

uint64_t sub_1931F672C@<X0>(unsigned int a1@<W2>, unint64_t a2@<X3>, unint64_t a3@<X6>, int a4@<W7>, unint64_t a5@<X8>)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((a4 - 1192) * (a5 <= a3)) ^ a4)) - (a4 ^ a1 ^ a2)))();
}

uint64_t sub_1931F6758@<X0>(char a1@<W1>, int a2@<W6>, uint64_t a3@<X8>)
{
  unint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((126 * (a3 << ((a2 - 16) ^ a1) > v3)) ^ a2))
                            - ((a2 - 3173) | 0x800u)
                            + 2514))();
}

uint64_t sub_1931F6790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v6;
  char v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * ((126 * (((v6 == 5) ^ ((a5 ^ v7) + 1)) & 1)) ^ a5)))();
}

uint64_t sub_1931F6798@<X0>(int a1@<W5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;

  v19[77] = v17;
  v19[168] = a2;
  v19[169] = v17;
  LODWORD(STACK[0x37C]) = v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18
                                        + 8
                                        * (((a17 == ((451 * (a1 ^ 0x9D3)) ^ 0x8CA)) * (((a1 ^ 0x9D3) + 1225) ^ 0x4F1)) ^ a1))
                            - 8))();
}

uint64_t sub_1931F67F0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v4 + v1 + (((v1 + 983) | 0x100) ^ (v3 - 1809)) - 744) * (a1 ^ 1)) ^ v1)))();
}

uint64_t sub_1931F6820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  *(_QWORD *)(v50 + 616) = a9;
  *(_QWORD *)(v50 + 1344) = a9;
  LODWORD(STACK[0x37C]) = v51;
  *(_QWORD *)(v50 + 1352) = v49;
  v52 = STACK[0x37C];
  v53 = *(_QWORD *)(v50 + 1304);
  v54 = *(_QWORD *)(v50 + 1296);
  *(_QWORD *)(v50 + 64) = v53;
  *(_QWORD *)(v50 + 72) = v54;
  v55 = *(_QWORD *)(v50 + 1280);
  *(_QWORD *)(v50 + 80) = *(_QWORD *)(v50 + 1288);
  *(_QWORD *)(v50 + 88) = v55;
  LODWORD(v55) = STACK[0x5F4];
  v56 = *(_QWORD *)(v50 + 1256);
  *(_QWORD *)(v50 + 104) = *(_QWORD *)(v50 + 1264);
  *(_QWORD *)(v50 + 112) = v56;
  v57 = *(_QWORD *)(v50 + 1296);
  *(_QWORD *)(v50 + 408) = v53;
  *(_QWORD *)(v50 + 416) = v57;
  v58 = *(_QWORD *)(v50 + 1280);
  *(_QWORD *)(v50 + 424) = *(_QWORD *)(v50 + 1288);
  *(_QWORD *)(v50 + 432) = v58;
  LODWORD(STACK[0x2B4]) = v55;
  v59 = *(_QWORD *)(v50 + 1256);
  *(_QWORD *)(v50 + 448) = *(_QWORD *)(v50 + 1264);
  *(_QWORD *)(v50 + 456) = v59;
  LODWORD(STACK[0x2CC]) = v52;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 1312))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1931F7074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  _QWORD *v32;
  int v33;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(v31 + 8 * (int)((((STACK[0x563] & 1) == 0) * (((v33 + a22 - 870) | 0x95) - 155)) | (v33 + a22 + 2234))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v32[136],
           v32[135],
           v32[134],
           v32[133],
           a31);
}

uint64_t sub_1931F70E8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  _QWORD *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;

  v24 = (a1 + 75) | 0x468;
  v25 = *(_QWORD *)(v19 + 8 * a1);
  v26 = v20[133];
  v20[46] = v20[135];
  v20[47] = v26;
  v20[48] = v20[130];
  v20[49] = v25;
  LODWORD(STACK[0x28C]) = 993889815;
  LODWORD(v26) = STACK[0x28C];
  LODWORD(STACK[0x564]) = STACK[0x28C];
  v27 = v20[49];
  v20[142] = v20[48];
  v29 = v20[46];
  v28 = v20[47];
  v20[143] = v28;
  v20[144] = v29;
  v20[145] = a19;
  v20[146] = v27;
  v30 = *(_DWORD *)(a19 + 12);
  v20[147] = a19 + 12;
  LODWORD(STACK[0x59C]) = v30;
  v20[59] = v27;
  v20[60] = v29;
  LODWORD(STACK[0x2F4]) = v26;
  v20[61] = a19;
  v20[62] = v28;
  v20[64] = a19 + 12;
  v20[65] = v20[142];
  LODWORD(STACK[0x30C]) = v23;
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * (((v30 < ((v22 + v24 + 127) ^ (v21 - 899)))
                                * ((31 * (v24 ^ 0x57B)) ^ 0xC7D)) ^ v24)))();
}

uint64_t sub_1931F7320@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v2[145];
  v6 = (LODWORD(STACK[0x59C]) ^ 0x7F3E96FFF67BF7DFLL)
     - 0x7F3E96FFE6623E4ELL
     + ((2 * LODWORD(STACK[0x59C])) & 0x1ECF7EFBELL);
  v7 = ((v4 + a1 + 922) ^ *(_DWORD *)(v5 + 8) ^ 0x1F3D7EDF5701609ALL)
     + ((2 * *(unsigned int *)(v5 + 8)) & 0x1A6FBCF7ELL)
     - 0x1F3D7EDFC3642E32;
  v8 = v6 < 0x1019B98D;
  v9 = v6 > v7;
  if (v8 != v7 < 0x1019B98D)
    v9 = v8;
  v10 = v2[144];
  v2[51] = v2[146];
  v2[52] = v10;
  LODWORD(STACK[0x2B4]) = STACK[0x564];
  v11 = v2[143];
  v2[53] = v5;
  v2[54] = v11;
  v12 = v2[142];
  v2[56] = v2[147];
  v2[57] = v12;
  LODWORD(STACK[0x2CC]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((4783 * v9) ^ a1)) - 12))();
}

void sub_1931F7420(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[74] = *(_QWORD *)(v1 + 8 * a1) + ((a1 + 829) | 0x20u) - 1462;
  v2[67] = v2[146];
  v2[68] = v2[144];
  LODWORD(STACK[0x334]) = STACK[0x564];
  v3 = v2[145];
  v2[69] = v3;
  v2[70] = v2[143];
  v2[72] = v2[147];
  v2[73] = v2[142];
  LODWORD(STACK[0x354]) = 4;
  v2[76] = v3;
  v2[156] = v2[76];
  v2[157] = v2[73];
  v2[158] = v2[72];
  v2[160] = v2[70];
  v2[161] = v2[69];
  LODWORD(STACK[0x5F4]) = STACK[0x334];
  v2[162] = v2[68];
  v2[163] = v2[67];
  v4 = v2[156];
  v2[164] = v2[74];
  v2[165] = v4 + 8;
  JUMPOUT(0x1931F8568);
}

uint64_t sub_1931F747C()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v6 = STACK[0x2CC];
  v7 = v2[56];
  v2[149] = v2[57];
  v2[150] = v7;
  v9 = v2[53];
  v8 = v2[54];
  v2[152] = v8;
  v2[153] = v9;
  v10 = STACK[0x2B4];
  LODWORD(STACK[0x5B4]) = STACK[0x2B4];
  v12 = v2[51];
  v11 = v2[52];
  v2[154] = v11;
  v2[155] = v12;
  v2[59] = v12;
  v2[60] = v11;
  LODWORD(STACK[0x2F4]) = v10;
  v2[61] = v9;
  v2[62] = v8;
  v2[64] = v7;
  v2[65] = v2[149];
  LODWORD(STACK[0x30C]) = v6;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 != v4) * (v0 - v5 - 1462)) ^ (v3 + v0 + 467))))();
}

uint64_t sub_1931F74F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;
  char v45;
  int v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  _DWORD *v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v69;

  v47 = (a8 + 58) | 4;
  v48 = (uint64_t *)v44[153];
  v49 = *v48;
  v50 = (_DWORD *)v44[150];
  v51 = STACK[0x5B4];
  v52 = (LODWORD(STACK[0x5B4]) ^ 0xC0AA6DC0) & (2 * (STACK[0x5B4] & 0xC4C271EA)) ^ STACK[0x5B4] & 0xC4C271EA;
  v53 = (((LODWORD(STACK[0x5B4]) ^ 0x482AEED4) << (v45 + v47 + 123)) ^ 0x19D13E7C) & (LODWORD(STACK[0x5B4]) ^ 0x482AEED4) ^ ((LODWORD(STACK[0x5B4]) ^ 0x482AEED4) << (v45 + v47 + 123)) & 0x8CE89F3E;
  v54 = ((4 * (v53 ^ 0x84288102)) ^ 0x33A27CF8) & (v53 ^ 0x84288102) ^ (4 * (v53 ^ 0x84288102)) & 0x8CE89F3C;
  v55 = (v54 ^ 0xA01C20) & (16 * ((v53 ^ 0xE38) & (4 * v52) ^ v52)) ^ (v53 ^ 0xE38) & (4 * v52) ^ v52;
  v56 = ((16 * (v54 ^ 0x8C488306)) ^ 0xCE89F3E0) & (v54 ^ 0x8C488306) ^ (16 * (v54 ^ 0x8C488306)) & 0x8CE89F30;
  v57 = v55 ^ 0x8CE89F3E ^ (v56 ^ 0x8C889300) & (v55 << 8);
  v58 = (v57 << 16) ^ 0x1F3E0000;
  v59 = LODWORD(STACK[0x5B4]) ^ (2
                               * ((v57 << 16) & 0xCE80000 ^ v57 ^ v58 & (((v56 ^ 0x600C1E) << 8) & 0xCE80000 ^ 0x4600000 ^ (((v56 ^ 0x600C1E) << 8) ^ 0x689F0000) & (v56 ^ 0x600C1E))));
  v60 = ((2 * *v50) & 0x7F57FFBC) + (*v50 ^ 0x3FABFFDE) - 1068236766;
  *(_BYTE *)(*v48 + v60) = HIBYTE(v59) ^ 0xC5;
  *(_BYTE *)(v49 + v60 + 1) = BYTE2(v59) ^ 0x43;
  *(_BYTE *)(v49 + v60 + 2) = (((BYTE1(v59) ^ 0x4F) - 2 * ((BYTE1(v59) ^ 0x4F) & 3) + 11) ^ 3) - 8;
  *(_BYTE *)(v49 + v60 + 3) = v59 ^ 0x96;
  *v50 += 4;
  v61 = v44[154];
  v44[59] = v44[155];
  v44[60] = v61;
  LODWORD(STACK[0x2F4]) = v51;
  v62 = v44[152];
  v44[61] = v48;
  v44[62] = v62;
  v44[64] = v44[150];
  v44[65] = v44[149];
  LODWORD(STACK[0x30C]) = v46;
  v64 = v44[60];
  HIDWORD(a34) = STACK[0x2F4];
  v65 = v44[62];
  v66 = v44[64];
  v67 = v44[65];
  HIDWORD(a39) = STACK[0x30C];
  v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v44[59];
  HIDWORD(a42) = STACK[0x2F4];
  v69 = v44[61];
  *v44 = v66;
  v44[1] = v67;
  v44[3] = v68;
  v44[4] = v69;
  v44[6] = v66;
  return v68(v58, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           v64,
           v69,
           v65,
           a31,
           v66,
           v67,
           a34,
           v68,
           v64,
           v69,
           v65,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1931F775C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  _QWORD *v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;

  v58[90] = v58[6];
  v62 = v58[3];
  v58[92] = v58[4];
  LODWORD(STACK[0x3D4]) = HIDWORD(a47);
  v58[93] = v62;
  v58[24] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * ((2871 * (HIDWORD(a52) == v60 + ((69 * (a22 ^ (v61 + 1530)) - 2001) | 0xC14) - 3092)) ^ (v59 + (int)a22 + 1099))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1931F77D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;
  _QWORD *v59;
  unsigned int v60;
  uint64_t v61;

  v59[94] = a26;
  v60 = *(_DWORD *)(a26 + 12);
  v59[95] = a26 + 12;
  v61 = ((((2 * v57) ^ 0x3B6u) + 0x1B7FFF386) & (2 * v60)) + (v60 ^ 0x7FE7AEFFDBFFFFCDLL);
  v59[96] = v61;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * ((((unint64_t)(v61 - 0x7FE7AEFFDBFFFFC5) < 0xFFFFFFFB) * (61 * (v57 ^ 0x7C0) + 1601)) ^ v57)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1931F7864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  int v51;
  int v52;
  uint64_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;

  v53 = v50[94];
  v54 = v48 + v50[96] + 4 > (unint64_t)*(unsigned int *)(v53 + 8);
  v55 = v50[83];
  v50[8] = v50[93];
  v50[9] = v55;
  v50[10] = v50[92];
  v50[11] = v53;
  v56 = v50[95];
  v50[13] = v50[90];
  v50[14] = v56;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((v54 * (((v47 - v51 - 135) ^ (v52 + 1075)) - 593)) ^ v47)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_1931F78D4(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[74] = *(_QWORD *)(v1 + 8 * a1);
  v2[67] = v2[93];
  v2[68] = v2[83];
  LODWORD(STACK[0x334]) = STACK[0x3D4];
  v2[69] = v2[92];
  v3 = v2[94];
  v2[70] = v3;
  v2[72] = v2[90];
  v2[73] = v2[95];
  LODWORD(STACK[0x354]) = 12;
  v2[76] = v3;
  v2[156] = v2[76];
  v2[157] = v2[73];
  v2[158] = v2[72];
  v2[160] = v2[70];
  v2[161] = v2[69];
  LODWORD(STACK[0x5F4]) = STACK[0x334];
  v2[162] = v2[68];
  v2[163] = v2[67];
  v4 = v2[156];
  v2[164] = v2[74];
  v2[165] = v4 + 8;
  JUMPOUT(0x1931F8568);
}

uint64_t sub_1931F7924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;
  _QWORD *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v62 = v59[13];
  v59[97] = v59[14];
  v59[98] = v62;
  v63 = v59[10];
  v59[100] = v59[11];
  v59[101] = v63;
  LODWORD(STACK[0x414]) = HIDWORD(a55);
  v64 = v59[8];
  v59[102] = v59[9];
  v59[103] = v64;
  v59[24] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * ((2126 * ((_DWORD)a56 == ((v61 + (v57 ^ 0x847C8B31) - 1872) ^ v57 ^ 0x847C8BE1))) ^ (v60 + v57 + 1099))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1931F79AC()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  _DWORD *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = (uint64_t *)v2[100];
  v4 = *v3;
  v5 = (_DWORD *)v2[97];
  v6 = ((*v5 << (-(char)v0 - 59)) & 0x1F37FB7C) + (*v5 ^ 0xF9BFDBE) - 261881278;
  *(_BYTE *)(*v3 + v6) = 0;
  *(_BYTE *)(v4 + v6 + 1) = 0;
  *(_BYTE *)(v4 + v6 + 2) = 0;
  *(_BYTE *)(v4 + v6 + 3) = 8;
  v7 = (*v5 + 4);
  *v5 = v7;
  v8 = *v3;
  v2[104] = v8;
  v9 = ((2 * v7) & 0x138FFFFDELL) + (v7 ^ 0xF9AFF8F59C7FFFEFLL);
  v2[105] = v9;
  v10 = v2[102] - 0x27F95742180B695FLL;
  v2[106] = v10;
  v11 = v9 + v8 + 0x650070A63800012 - 1;
  v2[107] = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v10 > v11) | (8 * (v10 > v11))) ^ v0)) - 8))();
}

uint64_t sub_1931F7AA8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t), void (*a10)(uint64_t), uint64_t (*a11)(uint64_t), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t *a19)
{
  int v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  **(_BYTE **)(v21 + 856) = **(_BYTE **)(v21 + 848);
  v25 = *(_QWORD *)(v21 + 816);
  v26 = *(_QWORD *)(v21 + 840);
  v27 = *(_QWORD *)(v21 + 832);
  v28 = (_BYTE *)(v26 + a1 + v27);
  *v28 = *(_BYTE *)(v25 - 0x27F95742180B695ELL);
  v28[1] = *(_BYTE *)(v25 - 0x27F95742180B695DLL);
  v28[2] = *(_BYTE *)(v25 - 0x27F95742180B695CLL);
  v29 = v19 ^ 0x2CFu;
  v28[3] = *(_BYTE *)(v25 - 0x27F95742180B695BLL);
  v28[4] = *(_BYTE *)(v25 - 0x27F95742180B695ALL);
  *(_BYTE *)(v27 + v26 + (v29 ^ (a1 + 3537))) = *(_BYTE *)(v25 - 0x27F95742180B6959);
  *(_BYTE *)(a1 + *(_QWORD *)(v21 + 840) + *(_QWORD *)(v21 + 832) + 6) = *(_BYTE *)(*(_QWORD *)(v21 + 816)
                                                                                  - 0x27F95742180B6958);
  **(_DWORD **)(v21 + 776) += 8;
  *(_QWORD *)(v21 + 864) = a19;
  v30 = (31 * (v19 ^ 0xF40) - 3041) | 0x2B;
  a9(v23);
  v31 = *v22;
  v32 = *a19;
  v33 = *((_DWORD *)a19 + 3);
  *(_QWORD *)(v21 + 872) = (char *)a19 + 12;
  v34 = *(_QWORD *)(v21 + 648);
  v35 = *(_QWORD *)(v21 + 656);
  v36 = 597255653 * ((((v24 - 144) | 0x11FA5549) - (v24 - 144) + ((v24 - 144) & 0xEE05AAB0)) ^ 0x18F12AD0);
  *(_DWORD *)(v24 - 128) = (v30 ^ v31 ^ 0x2D5DFCD7) - v36 + ((2 * v31) & 0x5ABBFFF0) - 138680384;
  *(_DWORD *)(v24 - 140) = v36 + v33 + 1581691396 - ((2 * v33) & 0xBC8D6408);
  *(_QWORD *)(v21 + 1568) = v35;
  *(_QWORD *)(v21 + 1536) = v34;
  *(_QWORD *)(v21 + 1552) = v32;
  *(_DWORD *)(v24 - 112) = v36 + v29 - 332;
  a10(v24 - 144);
  v37 = *(_DWORD *)(v24 - 144);
  v38 = a11(v23);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (int)((992 * (v37 != 663729217)) ^ v29)) - 4))(v38);
}

uint64_t sub_1931F7DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57)
{
  int v57;
  uint64_t v58;

  return ((uint64_t (*)(void))(2222753569
                            - (v57 ^ 0x847C89C0)
                            + *(_QWORD *)(v58 + 8 * (v57 | (2 * (a57 == ((v57 - 3485) ^ 0x178FB576)))))))();
}

uint64_t sub_1931F7E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int *a11, uint64_t a12, uint64_t (*a13)(_QWORD, uint64_t, uint64_t), void (*a14)(uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  v21 = *(_QWORD *)(v15 + 8 * v14);
  v22 = 486723911
      * (((v19 | 0xC088C4BFEB9FBC67) - (v19 | 0x3F773B4014604398) + 0x3F773B4014604398) ^ 0xF2361F2E5B55DCFDLL);
  *(_DWORD *)(v20 - 128) = v14 - 71465943 - v22;
  *(_QWORD *)(v16 + 1536) = v21
                          - v22
                          + ((106 * (v14 ^ 0x30D)) ^ ((v14 ^ 0x847C840A) - 2222757177));
  *(_QWORD *)(v16 + 1528) = v18;
  a14(v20 - 144);
  v23 = a13(*a11, a12, v17);
  v24 = ((2 * v23) & 0x5D15EA7E) + (v23 ^ 0x2E8AF53F);
  v25 = *(_QWORD *)(v15 + 8 * ((int)v14 - 5));
  *(_QWORD *)(v16 + 1528) = v18;
  *(_DWORD *)(v20 - 128) = v14 - 71465943 - 486723911 * ((2 * (v19 & 0xF374A048) - v19 + 210460593) ^ 0xBC413F2B);
  *(_QWORD *)(v16 + 1536) = v25
                          - 486723911
                          * ((2 * (v19 & 0x71F01939F374A048) - v19 - 0x71F01939F374A04FLL) ^ 0xBCB13D57BC413F2BLL)
                          - 8;
  v26 = ((uint64_t (*)(uint64_t))a14)(v20 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * ((314 * (v24 == 780858687)) ^ ((int)v14 + 2998)))
                                          - 4))(v26);
}

uint64_t sub_1931F7FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t), void (*a17)(uint64_t), uint64_t (*a18)(uint64_t))
{
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  a16(v21);
  v23 = **(_QWORD **)(v19 + 864);
  v24 = **(_DWORD **)(v19 + 872);
  v25 = *v20 ^ 0xB519EFB8;
  v26 = (*v20 << ((a9 - 29) & 0xED ^ 0xE4)) & 0x6A33DF70;
  v27 = *(_QWORD *)(v19 + 648);
  v28 = *(_QWORD *)(v19 + 656);
  v29 = 597255653 * ((v22 - 144) ^ 0x90B7F99);
  *(_DWORD *)(v22 - 112) = v29 + a9 - 364;
  *(_DWORD *)(v22 - 128) = v25 - v29 + 1879046144 + v26;
  *(_DWORD *)(v22 - 140) = v29 + 1581691396 + v24 - ((2 * v24) & 0xBC8D6408);
  *(_QWORD *)(v19 + 1568) = v28;
  *(_QWORD *)(v19 + 1552) = v23;
  *(_QWORD *)(v19 + 1536) = v27;
  a17(v22 - 144);
  v30 = *(_DWORD *)(v22 - 144);
  v31 = a18(v21);
  return ((uint64_t (*)(uint64_t))(2222753569
                                          - ((a9 + 494317795) & 0xE2894FED ^ 0x847C89C0)
                                          + *(_QWORD *)(v18
                                                      + 8
                                                      * (int)((a9 + 494317795) & 0xE2894FED | (2
                                                                                             * (v30 == ((((a9 + 494317795) & 0xE2894FED) - 3485) ^ 0x178FB576)))))))(v31);
}

void sub_1931F8110(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 8 * a1);
  v4 = v2[102];
  v2[36] = v2[103];
  v2[37] = v4;
  LODWORD(STACK[0x244]) = STACK[0x414];
  v2[38] = v2[101];
  v2[39] = v3;
  v2[40] = v2[100];
  v5 = v2[97];
  v2[42] = v2[98];
  v2[43] = v5;
  JUMPOUT(0x1931F815CLL);
}

uint64_t sub_1931F8208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t, uint64_t))
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v18 = *(_QWORD **)(v17 + 1104);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)(v17 + 1112) = v18 + 1;
  v19 = a15(4096, 2241923698);
  **(_QWORD **)(v17 + 1104) = v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((4067 * (v19 != 0)) ^ v15)) - (v15 ^ 0xF05u) + 2279))();
}

uint64_t sub_1931F8264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD);

  v29 = v23 ^ 0x658;
  **(_DWORD **)(v26 + 1112) = v24;
  *(_QWORD *)(v26 + 352) = *(_QWORD *)(v26 + 1104);
  LOBYTE(STACK[0x263]) = 1;
  LODWORD(STACK[0x264]) = v27;
  LODWORD(STACK[0x55C]) = STACK[0x264];
  **(_QWORD **)(v26 + 1032) = *(_QWORD *)(v26 + 352);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(v25 + 8 * (int)(((a23 == 5) * (((v29 + 68974194) | 0x80600200) ^ (v28 + 1520))) ^ v29));
  LOBYTE(STACK[0x563]) = STACK[0x263];
  return v30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, qword_1E2FD4D00[v29 & 0x153F132], qword_1E2FD4D00[v29 ^ 0xEF9], qword_1E2FD4D00[v29 ^ 0xEB0]);
}

uint64_t sub_1931F83BC@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_1931F83C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  uint64_t v54;
  uint64_t v55;
  int v56;

  *(_QWORD *)(v55 + 152) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * ((3203 * LOBYTE(STACK[0x563])) ^ (v56 + (int)a22 - 690))) - (v56 + a22 - 305) + 585))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1931F8408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  int v54;

  LODWORD(STACK[0x46C]) = HIDWORD(a32);
  *(_QWORD *)(v53 + 888) = a24;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * ((3243 * (HIDWORD(a32) > *(_DWORD *)(a24 + 8))) ^ a9)) - (a9 ^ (v54 + 1074) ^ 0x847C8721)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

void sub_1931F845C(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2[74] = ((58 * (a1 ^ 0x24Cu)) ^ 0xFFFFFFFFFFFFFA56) + *(_QWORD *)(v1 + 8 * a1);
  v2[67] = v2[136];
  v2[68] = v2[135];
  LODWORD(STACK[0x334]) = STACK[0x51C];
  v2[69] = v2[134];
  v2[70] = v2[133];
  v2[72] = v2[131];
  v2[73] = v2[130];
  LODWORD(STACK[0x354]) = STACK[0x46C];
  JUMPOUT(0x1931F84C4);
}

void sub_1931F85D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = 0;
  JUMPOUT(0x1931F88C8);
}

uint64_t sub_1931F85F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60)
{
  int v60;
  uint64_t v61;
  int v62;

  LODWORD(STACK[0x47C]) = a60;
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((22 * (a60 != v62)) ^ (v60 + 2072218120))) - 4))();
}

uint64_t sub_1931F8644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  int v28;

  v27 = *(_QWORD *)(v24 + 8 * v23) - 12;
  v25[31] = v27;
  v25[32] = a23;
  v28 = STACK[0x47C];
  LODWORD(STACK[0x200]) = STACK[0x47C];
  v25[34] = v27;
  LODWORD(STACK[0x210]) = v28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * ((831 * (a23 == 0)) ^ ((int)v23 + 1044)))
                            - (((((_DWORD)v23 - 20) | 0x527u) + v26) ^ 0x847C872DLL)))();
}

uint64_t sub_1931F86A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t *a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  int v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;

  v34[113] = a23;
  v35 = *a23;
  v34[114] = *a23;
  v34[115] = a24;
  v34[116] = a32 - ((2 * a32) & 0x10A5710CALL) - 0x4D58EB37AD4779BLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v33
                                        + 8
                                        * ((54 * ((((v32 + 1160) ^ (a24 > v35)) & 1) == 0)) ^ (v32 + 2889)))
                            - ((v32 + 1175789223) & 0xB9EAE5BD ^ 0x53DLL)))();
}

uint64_t sub_1931F874C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;

  LODWORD(STACK[0x4B0]) = LODWORD(STACK[0x498]) ^ 0x852B8865;
  return (*(uint64_t (**)(void))(v16 + 8 * ((243 * (a16 == 5)) ^ a1)))();
}

uint64_t sub_1931F8794()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v0 ^ 0xA22) * (v1 != v2)) ^ v0))
                            - ((v4 + v0 - 1068) ^ 0x847C8729)))();
}

uint64_t sub_1931F87D0()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v0 ^ 0xE7B;
  v4 = LODWORD(STACK[0x4B0]);
  v2[17] = v4--;
  v5 = (v4 ^ 0x767A3EBDF7FA0F3DLL)
     - 0x767A3EBDF7FA0F3DLL
     + (((v3 - 1610636537) & 0xE47CDFB5 ^ 0x16B88995FLL) & (2 * v4));
  *(_BYTE *)(v2[114] + v5) = *(_BYTE *)(v2[115] + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2423 * (v4 == 0)) ^ v3)) - 12))();
}

uint64_t sub_1931F893C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;

  v60 = *(_QWORD *)(v59 + 960) == 0;
  *(_QWORD *)(v59 + 192) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * ((2990 * ((v60 ^ (v57 - 18)) & 1)) ^ v57)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1931F899C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  unint64_t v65;
  unint64_t v66;
  _BOOL4 v67;
  _BOOL4 v68;

  v62 = v61[120];
  v63 = *(unsigned int *)(v62 + 8);
  v61[27] = v62;
  v64 = *(_DWORD *)(v62 + 12);
  v61[121] = v62 + 12;
  LODWORD(STACK[0x4CC]) = v64;
  v65 = (v64 ^ 0x57E7F7FFFDCFD1B3) - 0x57E7F7FFBEC15164 + (((a9 - 2908) ^ 0x1FB9FA3DELL) & (2 * v64));
  v66 = (v63 ^ 0x63FFEFFDEFEEFF7ELL) - 0x63FFEFFDB0E07F33 + ((2 * v63) & 0x1DFDDFEFCLL);
  v67 = v65 < 0x3F0E804B;
  v68 = v65 > v66;
  if (v67 != v66 < 0x3F0E804B)
    v68 = v67;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * ((37 * !v68) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

void sub_1931F8A88(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;

  v3 = 23 * (a1 ^ 0xC1C);
  v4 = *(_QWORD **)(v2 + 960);
  v5 = ((2 * LODWORD(STACK[0x4CC])) & 0xFFBDFFF8) + (LODWORD(STACK[0x4CC]) ^ 0xFFDEFFFC) + 2162692;
  v6 = *(unsigned __int8 *)(*v4 + v5);
  v7 = *(unsigned __int8 *)(*v4 + v5 + 2);
  v8 = ((v6 << 24) - (v6 << (v3 ^ 0xA1)) - 0x1000000) | (*(unsigned __int8 *)(*v4 + v5 + 1) << 16) | (((v7 - ((2 * v7) & 0x4C) + 4420934) << 8) - 0x2000) ^ 0x43752600;
  v9 = *(unsigned __int8 *)(*v4 + v5 + 3);
  v10 = (v8 ^ 0x5A6FFF) & ((v9 - ((2 * v9) & 0xE6) - 1636428685) ^ 0x82C7F04) ^ v8 & 0x69A59400;
  v11 = (v10 & 0x324D5387 ^ 0x12494387) + (v10 ^ 0x28A41408) - ((v10 ^ 0x28A41408) & 0x324D5387);
  **(_DWORD **)(v2 + 968) = LODWORD(STACK[0x4CC]) + 4;
  v13 = STACK[0x4B4];
  *(_QWORD *)(v2 + 216) = v4;
  v12 = *(_QWORD *)(v2 + 216);
  *(_QWORD *)(v2 + 144) = *(_QWORD *)(v1 + 8 * v3);
  *(_QWORD *)(v2 + 248) = *(_QWORD *)(v2 + 144);
  *(_QWORD *)(v2 + 256) = v12;
  LODWORD(STACK[0x200]) = v13;
  LODWORD(STACK[0x204]) = (((v11 ^ 0x1FBDF440) - 789305555) ^ ((v11 ^ 0x7B8AD7DE) - 1262287693) ^ ((v11 ^ 0x81840F66)
                                                                                                 + 1322114059))
                        - 619719546;
  JUMPOUT(0x1931F8D84);
}

uint64_t sub_1931F8DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(void), uint64_t a20,uint64_t a21,int a22,int a23)
{
  int v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  _QWORD *v27;
  uint64_t v28;

  ((void (*)(_QWORD))a19)(v25[128]);
  v27 = (_QWORD *)v25[126];
  *v27 = 0;
  v27[1] = 0;
  v28 = a19();
  v25[34] = v25[127];
  LODWORD(STACK[0x210]) = STACK[0x4E4];
  LODWORD(STACK[0x214]) = STACK[0x4E0];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * ((90 * (a23 == 5)) ^ (v26 + v23 + 1031))) - 8))(v28);
}

uint64_t sub_1931F8E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  int v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v62 = STACK[0x210];
  v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 272);
  *(_QWORD *)(v61 + 152) = 0;
  HIDWORD(a60) = v62;
  return v63(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_1931F8E8C()
{
  JUMPOUT(0x1931F6480);
}

void RuT3wdfnqw()
{
  _DWORD v0[12];
  uint64_t v1;

  v1 = *MEMORY[0x1E0C80C00];
  v0[1] = 629424707 * ((2 * (v0 & 0x5E060EF0) - v0 + 570028298) ^ 0xB9668273) + 2860;
  sub_193241A88((uint64_t)v0);
  __asm { BR              X9 }
}

uint64_t sub_1931F9024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  int v29;

  *(_DWORD *)(v27 - 184) = 101372955;
  *(_DWORD *)(v27 - 180) = 101372955;
  if (a16)
    v28 = a14 == 0;
  else
    v28 = 1;
  v29 = !v28;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((1719 * v29) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1931F907C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  HIDWORD(a10) = 558897152;
  v24 = MEMORY[0x191D653A4](16, 2241923698);
  LODWORD(a19) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8 * ((2471 * (v24 != 0)) ^ 0x408)) - 12))(v24, v25, v26, v27, v28, v29, v30, v31, 486723911 * ((v23 - 144) ^ 0x32BEDB91B0CA609ALL), a10, a11, a12, a13, a14, a15, 0xB1F30C92B1F31C01, a17, a18, a19,
           v23 + 0x54D2A68F3DE7F3DALL,
           v23 + 0x46AAD4E1DD90112CLL,
           a22);
}

uint64_t sub_1931F91AC(uint64_t *a1)
{
  int v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v5;

  *a1 = 0;
  a1[1] = 0;
  v5 = v2(4096, 2241923698);
  *a1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((((v1 - 3226) ^ (v5 == 0)) & 1) == 0) * (12 * (v1 ^ 0x10F4) - 1019)) ^ v1))
                            - 12))();
}

uint64_t sub_1931F9208(uint64_t a1)
{
  _QWORD *v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  *(_DWORD *)(v3 + 8) = 4096;
  *v1 = v3;
  return v2(a1, 2376, 2147480925, 2134, 2565, 55, 6722, 2985499806);
}

uint64_t sub_1931F9260(uint64_t a1)
{
  _QWORD *v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *v1 = 0;
  return v2(a1, 2376, 2147480925, 2134, 2565, 55, 6722, 2985499806);
}

uint64_t sub_1931F92A8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + v3 - 1987) ^ (2368 * v0))) - 12))();
}

uint64_t sub_1931F92D4()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v4 = v3(v2);
  *v0 = 0;
  return v1(v4, 2376, 2147480925, 2134, 2565, 55, 6722, 2985499806);
}

uint64_t sub_1931F9328()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + v3 - 1720) ^ (2218 * v0))) - 8))();
}

uint64_t sub_1931F9358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  uint64_t v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((3232 * (*(_DWORD *)(v12 - 156) > *(_DWORD *)(*(_QWORD *)(v12 - 176) + 8))) ^ 0x9Du))
                            - ((a11 | 0x90A30430) ^ 0xB1F31C34)))();
}

uint64_t sub_1931F93BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  char v25;

  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * (int)(((((v25 - 21) ^ (*(unsigned int *)(v23 + 8) > (a2 ^ 0x3EA ^ a3))) & 1) * a4) ^ 0x3EA)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1931F98FC@<X0>(int a1@<W4>, unsigned int a2@<W5>, int a3@<W6>, unint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v4 ^ ((2 * v5 > a4) * a3))) - ((6 * (v4 ^ a1)) ^ a2) + 977))();
}

uint64_t sub_1931F9930(uint64_t a1, unsigned int a2, unint64_t a3, int a4)
{
  int v4;
  unint64_t v5;
  uint64_t v6;
  char v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((v7 + v4 + 1) ^ (v5 > (v4 ^ a2 ^ a3))) & 1) * a4) ^ v4))
                            - 12))();
}

uint64_t sub_1931F996C@<X0>(int a1@<W5>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ ((a2 > 0xFFFFFFFE) * a1)))
                            - ((((v2 + 1967528910) & 0x8AB9EFFD) + 2985495699) ^ ((v2 - 1853812669) | 0x20720810u))))();
}

uint64_t sub_1931F99D4()
{
  int v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v5 = *(uint64_t (**)(void))(v4
                           + 8 * (((v2 + ((v0 - 1865221017) | 0x21201020) - 2191) * (v1(v3, 2241923698) == 0)) ^ v0));
  return v5();
}

uint64_t sub_1931F9A5C(unint64_t a1)
{
  int v1;
  unint64_t *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((25 * (*v2 <= a1)) ^ (v1 - 2906))) - 8))();
}

uint64_t sub_1931F9BE0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * ((((v1 ^ 0x1499) + v1 - 54) * (v0 != 0)) ^ v1)))(1002, 118);
}

uint64_t sub_1931F9C3C@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v3 - 1;
  v11 = (v10 ^ v6) + v5 + (v7 & (2 * v10));
  *(_BYTE *)(v8 + v11) = *(_BYTE *)(a3 + v11);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 == ((v4 - 182) ^ a1)) * a2) ^ v4)))();
}

uint64_t sub_1931F9C80()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * (((((v1 - 978073689) & 0x3A4C3FFB) - 2422) * (v0 != 0)) ^ v1)))(264, 1006);
}

uint64_t sub_1931F9CDC@<X0>(unsigned int a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + v5 + v6) = *(_BYTE *)(a3 + v5 + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((4 * (v3 != 1)) | (8 * (v3 != 1))) ^ (v4 - 4)))
                            - (((v4 - 2455) | a1) ^ a2)))();
}

uint64_t sub_1931F9D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t (*a30)(_QWORD))
{
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a30(*(_QWORD *)v33);
  *(_QWORD *)v33 = v32;
  *(_DWORD *)(v33 + 8) = v31;
  return v30(v34, 2376, 2147480925, 2134, 2565, 55, 6722, 2985499806);
}

uint64_t sub_1931F9DAC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((61 * (v2 == ((v3 + a1 - 1046) ^ (v1 - 852)))) ^ (v3 + a1 - 1046)))
                            - 12))();
}

uint64_t sub_1931F9DE0@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, _DWORD *a16, uint64_t a17, uint64_t a18, uint64_t *a19, uint64_t a20,uint64_t (*a21)(void))
{
  uint64_t v21;
  int v22;
  unsigned int v23;

  v21 = *a19;
  v22 = a12 + 451170848 - ((2 * a12) & 0x35C8A440);
  v23 = ((2 * *a16) & 0x9DFFFB78) + (*a16 ^ 0x4EFFFDBC) - 1325399484;
  *(_BYTE *)(*a19 + v23) = (a1 - 32) & 0x73 ^ HIBYTE(v22) ^ 0x2A;
  *(_BYTE *)(v21 + v23 + 1) = BYTE2(v22) ^ 0xE4;
  *(_BYTE *)(v21 + v23 + 2) = (((BYTE1(v22) ^ 0x52) - 2 * ((BYTE1(v22) ^ 0x52) & 7 ^ BYTE1(v22) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v21 + v23 + 3) = (a12 + 32 - ((2 * a12) & 0x40)) ^ 0x20;
  *a16 += 4;
  return a21();
}

uint64_t sub_1931F9EC4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((3332 * (v2 == v1 + v3 + v0 - 179 - 2111)) ^ (v3 + v0 - 468)))
                            - 8))();
}

uint64_t sub_1931F9EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,uint64_t a25,int a26,int a27,uint64_t a28,uint64_t *a29)
{
  int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;

  v32 = *a29;
  v33 = a27 + 451170848 - ((2 * a27) & 0x35C8A440);
  v34 = ((2 * *a24) & 0xB557FBFC) + ((((v29 - 1904) | 0xA20) + 1521218319) ^ *a24) - 1521221118;
  *(_BYTE *)(*a29 + v34) = ((v29 - 63) | 0x41) ^ HIBYTE(v33) ^ 0x5B;
  *(_BYTE *)(v32 + v34 + 1) = BYTE2(v33) ^ 0xE4;
  *(_BYTE *)(v32 + v34 + 2) = (((BYTE1(v33) ^ 0x52) - 2 * ((BYTE1(v33) ^ 0x52) & 7 ^ BYTE1(v33) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v32 + v34 + 3) = v33 ^ 0x20;
  v35 = (*a24 + 4);
  *a24 = v35;
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * ((114
                                * (v30 > ((2 * v35) & 0x1FFF7A35CLL)
                                       + (v35 ^ 0xEDC7BB72FFFBD1AELL)
                                       + *a29
                                       + 0x1238448D00042E52)) ^ v29)))();
}

uint64_t sub_1931FA174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((1115 * (((v7 == 0) ^ (1 - 113 * (v8 ^ 0xED))) & 1)) ^ v8)) - (((v8 - 207) | 0xD2u) ^ 0xAF6)))(3713000404, a2, a3, a4, a5, a6, a7, 3569);
}

uint64_t sub_1931FA1EC@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = (v4 + 1190199309) & 0xB90EFFEF;
  *(_BYTE *)(v2 + (v10 ^ 0x12385090915C3687) + a2 + v5) = *(_BYTE *)(v8 + v5 + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (int)((((((v10 ^ a1) - 1821 - v3) | (v3
                                                                                             - ((unint64_t)(v10 ^ a1)
                                                                                              - 1821))) >> 63)
                                               * v7) ^ v10))
                            - 4))();
}

uint64_t sub_1931FA274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((627 * ((((v8 - 2017) ^ (v7 == 0)) & 1) == 0)) ^ v8)) - 12))(0x8985C1420805F0C3, a2, a3, a4, a5, a6, a7, 0x767A3EBDF7FA0F3DLL);
}

uint64_t sub_1931FA2E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = (v5 | 0x804u) - 35;
  v13 = v4 - 1;
  v14 = (v6 & (2 * v13)) + (v13 ^ a2);
  *(_BYTE *)(a3 + v12 + v14 + v3 + v11) = *(_BYTE *)(v9 + v14 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (int)((37 * (v13 != (((_DWORD)v12 + v7) & v8) - 1822)) ^ v12))
                            - 12))();
}

uint64_t sub_1931FA348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,uint64_t a25,int a26,int a27,uint64_t a28,uint64_t a29,uint64_t (*a30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *a24 += a27;
  return a30(a1, a2, a3, a4, a5, a6, a7, 2985499806);
}

uint64_t sub_1931FA374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v9 == v8) * ((4 * (v12 ^ (a8 + 303))) ^ 0x1FF2)) ^ (v12 + v10)))
                            - 32 * (v12 ^ (v12 - 26))
                            + 1208))();
}

uint64_t sub_1931FA3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t *a33)
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;

  *(_QWORD *)(v35 - 168) = 0;
  *(_DWORD *)(v35 - 156) = 0;
  v36 = qword_1E2FD4D00[v33 - 1140];
  ((void (*)(uint64_t))qword_1E2FD4D00[v33 - 1184])(v36);
  v37 = (_DWORD *)qword_1E2FD4D00[v33 - 1195];
  v38 = *a33;
  v39 = *((_DWORD *)a33 + 3);
  v40 = *v37 ^ 0x77FFE7BA;
  v41 = (((v33 - 951) | 0x226) - 268448699) & (2 * *v37);
  v42 = 597255653 * ((((v35 - 144) | 0x27D48BFE) - (v35 - 144) + ((v35 - 144) & 0xD82B7400)) ^ 0x2EDFF467);
  *(_QWORD *)(v35 - 136) = a21;
  *(_QWORD *)(v35 - 120) = v38;
  *(_DWORD *)(v35 - 140) = v42 + v39 + 1581691396 - ((2 * v39) & 0xBC8D6408);
  *(_QWORD *)(v35 - 104) = a20;
  *(_DWORD *)(v35 - 128) = v40 - v42 + v41 - 1390804994;
  *(_DWORD *)(v35 - 112) = v42 + v33 + 2024;
  ((void (*)(uint64_t))qword_1E2FD4D00[v33 ^ 0x4EE])(v35 - 144);
  v43 = *(_DWORD *)(v35 - 144);
  v44 = ((uint64_t (*)(uint64_t))qword_1E2FD4D00[v33 ^ 0x4CC])(v36);
  return (*(uint64_t (**)(uint64_t))(v34 + 8 * (v33 + 2 * (v43 != (v33 ^ 0x9B1) + 663725776))))(v44);
}

uint64_t sub_1931FA520()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(((v2 == 395293758) * ((v0 - 1309471041) ^ 0xB1F31E36)) ^ v0))
                            - 8))();
}

void sub_1931FA7E4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 176) = 0;
  JUMPOUT(0x1931F9128);
}

uint64_t sub_1931FA804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (((v10 == (((v11 + v8 - 1722) | 2) ^ (v9 + 518)))
                                          * (17 * (v8 ^ (a8 + 95)) - 3462)) ^ (v11 + v8 - 549)))
                            - 8))();
}

uint64_t sub_1931FA84C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(v2 - 168) <= **(_QWORD **)(v2 - 176)) * (v0 ^ 0xDA5)) ^ v0))
                            - 4))();
}

uint64_t sub_1931FA8AC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((((v1 ^ 0x3DE) - 1322722245) & 0x4ED717BB) + 714) ^ 0x519) * (v0 == 0)) ^ v1 ^ 0x3DE))
                            - 8))();
}

uint64_t sub_1931FA8F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (v3 - 750) | 0x148;
  v6 = v2 + (v5 ^ 0x164u) - 571;
  v7 = (v6 ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + ((2 * v6) & 0x1EFF41E7ALL);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(v1 + v7);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1626 * (v6 != 0)) ^ v5)))();
}

uint64_t sub_1931FA974@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (a1 ^ 0xB71 ^ (355 * (a1 ^ 0x239)) | (13 * (*(_QWORD *)(v2 - 176) == 0))))
                            - 12))();
}

uint64_t sub_1931FA9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  return v24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1931FA9DC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 == 0) ^ (v1 - 1)) & 1) * ((411 * (v1 ^ 0x359)) ^ 0xBFC)) ^ v1)))();
}

uint64_t sub_1931FAA1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = v3 - 2015;
  *(_BYTE *)(a1 + ((v5 - 292) ^ 0xFFFFF3FC6EA7F3D0) + 0xC0391580E16) = *(_BYTE *)(v1
                                                                                                  + ((v5 - 292) ^ 0xFFFFF3FC6EA7F3D0)
                                                                                                  + 0xC0391580E16);
  return (*(uint64_t (**)(void))(v4 + 8 * ((2147 * (v2 != 1)) ^ v5)))();
}

uint64_t sub_1931FAA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v13 = v8 ^ (a8 + 364);
  *(_QWORD *)(v10 + 8) = *(unsigned int *)(v12 - 156);
  ((void (*)(_QWORD, _QWORD, _QWORD))qword_1E2FD4D00[v9 - 2250 + v13])(*(unsigned int *)qword_1E2FD4D00[v9 - 2212 + v13], *(_QWORD *)(v12 - 168), *(unsigned int *)(v12 - 156));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11
                                                      + 8
                                                      * (int)(((((v13 + 1309469636) ^ 0x60AD3EF) == 101372955)
                                                             * ((2 * (v13 ^ 0xB1F31C10)) ^ 0x320)) ^ (v13 + v9)))
                                          - 8))(1309469890);
}

uint64_t sub_1931FAB68@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v3 + 8 * ((((((a2 + 32) | 0x1014) - 901) ^ 0xC0F) * (v2 != 0)) ^ ((a2 + 32) | 0x1014))) - 12))(a1, 2172915558, 1322114059, 3675247750, 1131750912, 445, 4181, (((a2 + 32) | 0x1014u) ^ 0xFFFFFFFFFFFFEF80) + *(_QWORD *)(v3 + 8 * a2));
}

uint64_t sub_1931FAC58()
{
  int v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  _BOOL4 v15;

  v12 = (*(unsigned int *)(v9 + 12) ^ v2) + v6 + (v3 & (2 * *(unsigned int *)(v9 + 12)));
  v13 = (*(unsigned int *)(v9 + 8) ^ v4) + v7 + (((v10 + v0) & v1 ^ v5) & (2 * *(unsigned int *)(v9 + 8)));
  v14 = (v12 < 0x118834AC) ^ (v13 < 0x118834AC);
  v15 = v12 > v13;
  if (v14)
    v15 = v12 < 0x118834AC;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((!v15 * v8) ^ v10)) - 8))();
}

uint64_t sub_1931FACE0(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  int v8;
  int v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  v13 = ((v12 ^ 0xBB4DD010) & (2 * v9)) + (v9 ^ 0x5DA6EE7F) - 1571221119;
  v14 = *(unsigned __int8 *)(*(_QWORD *)v11 + v13 + 2);
  v15 = (a5 + ((v14 - ((2 * v14) & 0x4C)) << 8)) ^ a5 | (((-16777216 * *(unsigned __int8 *)(*(_QWORD *)v11 + v13)) | (*(unsigned __int8 *)(*(_QWORD *)v11 + v13 + 1) << 16))
                                                       - 0x1000000);
  v16 = *(unsigned __int8 *)(*(_QWORD *)v11 + v13 + 3);
  v17 = (v15 ^ 0x5A6FFF) & ((v16 - ((2 * v16) & 0xE6) - 1636428685) ^ 0x82C7F04) ^ v15 & 0x69A59400;
  v18 = (v17 & 0x324D5387 ^ 0x12494387) + (v17 ^ 0x28A41408) - ((v17 ^ 0x28A41408) & 0x324D5387);
  *v10 = (((v18 ^ 0x1FBDF440) - 789305555) ^ ((v18 ^ 0x7B8AD7DE) + v8) ^ ((v18 ^ a2) + a3)) + a4;
  *(_DWORD *)(v11 + 12) = v9 + 4;
  return a8();
}

uint64_t sub_1931FAE24(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1689 * v1) ^ (a1 - 1309467600))) - 8))();
}

uint64_t sub_1931FAE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((*(_DWORD *)(v8 - 184) == v9) * a6) ^ v6))
                            - ((((v6 - 2274) | 0xFu) + 2005) ^ 0x7FCLL)))();
}

void sub_1931FAE88()
{
  JUMPOUT(0x1931FAC28);
}

uint64_t sub_1931FAE98(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((a1 - 1309467600) ^ (1717 * v1)))
                            - ((a1 - 1847821508) & 0x20169FF5)
                            + 2028))();
}

uint64_t sub_1931FAED8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = 509 * (a1 ^ 0x8F6);
  *a4 = (v8 ^ 0xF9F52C11) + *(_DWORD *)(v7 - 180);
  return ((uint64_t (*)(void))(2985495699
                            - ((v8 - 1275127998) & 0xFDF3FCF9)
                            + *(_QWORD *)(v5
                                        + 8 * (int)(((v4 == 0) * ((v8 - 1275112386) & 0xFDF3BFFD ^ (v6 - 2119))) ^ v8))
                            + 3985))();
}

uint64_t sub_1931FAF7C@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*v2 != 0) * (v1 + a1 - 2268)) | (v1 + a1 - 1225))) - 12))();
}

uint64_t sub_1931FB004()
{
  uint64_t (*v0)(uint64_t);
  _QWORD *v1;
  void (*v2)(void);
  uint64_t v3;

  v2();
  *v1 = 0;
  v1[1] = 0;
  v3 = ((uint64_t (*)(_QWORD *))v2)(v1);
  return v0(v3);
}

uint64_t sub_1931FB034()
{
  int v0;

  return (v0 - 101372955);
}

void sub_1931FB07C(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1931FB0FC()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = -42789;
}

void sub_1931FB29C(uint64_t a1)
{
  __asm { BR              X13 }
}

uint64_t sub_1931FB348@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[3];
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;

  v6 = v4[10];
  v7 = v4[4];
  v8 = *v4;
  v9 = v4[2];
  v10 = v4[6];
  v11 = v4[8];
  v13[0] = *(_QWORD *)(qword_1E2FD4D00[a1 ^ 0x470DCF57] + 8 * (a1 - 1192086671) - 8) - 8;
  v13[2] = v11;
  v14 = (v3 ^ 0x7E37F3FD) - 1107439664 + ((2 * v3) & 0xFC6FE7FA);
  v15 = v10;
  v16 = (v2 ^ 0x7F7DE7CF) - 1128801282 + ((2 * v2) & 0xFEFBCF9E);
  v21 = (v1 ^ 0xBCBCDFD7) + 2078539451 + ((2 * v1) & 0x7979BFAE);
  v17 = v9;
  v18 = v8;
  v19 = v7;
  v22 = v6;
  v20 = 91;
  *(_DWORD *)(v5 - 32) = (a1 - 458437767) ^ (597255653
                                           * ((((v5 - 48) | 0x38886299) - (v5 - 48) + ((v5 - 48) & 0xC7779D60)) ^ 0x31831D00));
  *(_QWORD *)(v5 - 40) = v13;
  result = ((uint64_t (*)(uint64_t))(qword_1E2FD4D00[a1 ^ 0x470DCF5B] - 8))(v5 - 48);
  *((_DWORD *)v4 + 10) = *(_DWORD *)(v5 - 48) - 101372955;
  return result;
}

void sub_1931FB534(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1931FB5D8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v7 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  v9 = *(_QWORD *)(v5 + 72);
  v10 = *(_QWORD *)(v5 + 40);
  v11 = *(_QWORD *)(v5 + 8);
  v12 = 0x1DF9787F30281A19 * (*(_QWORD *)(v5 + 56) + v1) + 0x1E4D227EC11DAB65;
  v14 = *(_QWORD *)(qword_1E2FD4D00[a1 - 1505453009] + 8 * (a1 - 1505452205) - 8) - 12;
  v15 = (v4 ^ 0x5F7BFD37) - 1107841296 + ((2 * v4) & 0xBEF7FA6E);
  v16 = 494119975;
  v17 = v7;
  v18 = (v3 ^ 0xB6FB9DFD) + 2112125796 + ((2 * v3) & 0x6DF73BFA);
  v19 = v12;
  v20 = 0;
  v21 = v10;
  v23 = 1489733386;
  v24 = (v2 ^ 0xFEF699F5) + 904494956 + ((2 * v2) & 0xFDED33EA);
  v22 = 0;
  v25 = v9;
  v26 = v11;
  v27 = v8;
  v28 = -20;
  *(_QWORD *)(v6 - 32) = &v14;
  *(_DWORD *)(v6 - 40) = a1
                       + 2018881763 * (((v6 - 40) & 0x221A85AD | ~((v6 - 40) | 0x221A85AD)) ^ 0x7B8FC425)
                       + 979574268;
  result = ((uint64_t (*)(uint64_t))(qword_1E2FD4D00[a1 ^ 0x59BB63B8] - 4))(v6 - 40);
  *(_DWORD *)(v5 + 68) = *(_DWORD *)(v6 - 36) - 101372955;
  return result;
}

void sub_1931FB7F0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) - 597255653 * (((a1 | 0xB132FF4D) - (a1 & 0xB132FF4D)) ^ 0xB83980D4);
  ((void (*)(void))qword_1E2FD4D00[v1 ^ 0xCE0])();
  __asm { BR              X9 }
}

uint64_t sub_1931FB920(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  va_list va;

  va_start(va, a2);
  v5 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(v2 + 8 * (v4 - 1565)))(va, 3, 56, 64, a1, 0, 0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((97
                                          * (((2 * v5) & 0x7F5FF8FE)
                                           + (v5 ^ (((v4 - 1144272961) & 0x44343EB8) - 1078988841)) == -1078985601)) ^ v4))
                            - ((v4 - 1547) | 0xC92u)
                            + 3243))();
}

uint64_t sub_1931FB9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  a18 = (v22 - 1948) ^ (1239927961
                      * ((&a18 + 896779396 - 2 * ((unint64_t)&a18 & 0x3573C484)) ^ 0xD21F3F94));
  a20 = v24;
  v25 = (*(uint64_t (**)(int *))(v20 + 8 * (int)(v22 & 0xCDD4D017)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((v22 + 92) ^ (a19 == v23)) & 1 | (8
                                                                                                  * (((v22 + 92) ^ (a19 == v23)) & 1))) ^ v22)))(v25);
}

uint64_t sub_1931FBA70()
{
  _DWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(uint64_t *))(v1 + 8 * (((v3 - 2981) | 0x8A0) - 2477)))(&v5);
  *v0 = v2;
  return result;
}

void sub_1931FBBF8(uint64_t a1)
{
  __asm { BR              X16 }
}

uint64_t sub_1931FBCD4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v12 = *v7;
  v13 = *(_QWORD *)(v8 + 8 * v5);
  v15 = v4;
  v16 = a1;
  v14 = (v1 ^ 0xC6FDFBD6) + 2143010364 + ((2 * v1) & 0x8DFBF7AC);
  v19 = 98;
  v17 = &v12;
  v18 = 0;
  v20 = 0x11B003C355E1FB62;
  v21 = 0x52214B67DD7D558ALL;
  v22 = 0x3661B8258914B089;
  v23 = 0x43B51972E76A1B48;
  *(_QWORD *)(v9 - 96) = &v13;
  *(_DWORD *)(v9 - 104) = v2
                        - 1629346421
                        * ((2 * (((v9 - 104) ^ 0x168BE130) & 0x174F4AC0) - ((v9 - 104) ^ 0x168BE130) - 391072453) ^ 0x1F63B56A)
                        - 2072537499;
  result = v3(v9 - 104);
  v11 = *(_DWORD *)(v9 - 100);
  *v7 = v12;
  *(_DWORD *)(v6 + 4) = v11 - 101372955;
  return result;
}

void sub_1931FC260()
{
  uint64_t v0;

  v0 = **(_QWORD **)(MEMORY[0x1E0C80A78]() + 8);
  __asm { BR              X10 }
}

uint64_t sub_1931FC440@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  STACK[0xB30] = (unint64_t)&STACK[0x46AAD4E1DD901344];
  STACK[0xB38] = (unint64_t)&STACK[0x54D2A68F3DE7F5FA];
  *(_DWORD *)(v7 - 140) = v1 + ((v7 + 881064938 - 2 * ((v7 - 144) & 0x3483FC7A)) ^ 0xAC1C8F03) * a1 + v4 + 2739;
  v8 = sub_193241A88(v7 - 144);
  v9 = *(_DWORD *)(v7 - 144) != v2;
  LODWORD(STACK[0x5E4]) = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((47 * v9) ^ (v4 - 2141527128)))
                                          - ((v4 - v3 - 1478) ^ 0x157)))(v8);
}

uint64_t sub_1931FC50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unint64_t v72;
  uint64_t v73;

  v60 = a16;
  v61 = *(_QWORD *)(v59 + 8 * v58);
  v62 = a16 | ((unint64_t)(a16 < (v58 ^ 0x5A6u) + 1834269905) << 32);
  STACK[0xB40] = v62 + 0x6C621CDDCECC4450;
  STACK[0xB48] = v62 - 0x1DCFA332BB43EFCALL;
  v63 = (v60 ^ 0xD002BCB1) & (2 * (v60 & 0x92AB3E32)) ^ v60 & 0x92AB3E32;
  v64 = ((2 * (v60 ^ 0xD016C8D5)) ^ 0x857BEDCE) & (v60 ^ 0xD016C8D5) ^ (2 * (v60 ^ 0xD016C8D5)) & 0x42BDF6E6;
  v65 = v64 ^ 0x42841221;
  v66 = (v64 ^ 0x39E0C0) & (4 * v63) ^ v63;
  v67 = ((4 * v65) ^ 0xAF7DB9C) & v65 ^ (4 * v65) & 0x42BDF6E4;
  v68 = (v67 ^ 0x2B5D280) & (16 * v66) ^ v66;
  v69 = ((16 * (v67 ^ 0x40082463)) ^ 0x2BDF6E70) & (v67 ^ 0x40082463) ^ (16 * (v67 ^ 0x40082463)) & 0x42BDF6E0;
  v70 = v68 ^ 0x42BDF6E7 ^ (v69 ^ 0x29D6600) & (v68 << 8);
  v71 = a16 ^ (2
             * ((v70 << 16) & 0x42BD0000 ^ v70 ^ ((v70 << 16) ^ 0x76E70000) & (((v69 ^ 0x40209087) << 8) & 0x42BD0000 ^ 0x42090000 ^ (((v69 ^ 0x40209087) << 8) ^ 0x3DF60000) & (v69 ^ 0x40209087))));
  LOBYTE(STACK[0xB54]) = HIBYTE(v71) ^ 0x92;
  LOBYTE(STACK[0xB55]) = BYTE2(v71) ^ 0x9A;
  LOBYTE(STACK[0xB56]) = (((BYTE1(v71) ^ 0xD3) - 2 * ((BYTE1(v71) ^ 0xD3) & 7 ^ BYTE1(v71) & 4) + 11) ^ 3) - 8;
  LOBYTE(STACK[0xB57]) = v71 ^ 0xFC;
  LODWORD(STACK[0xB58]) = a16 - 1834271178;
  LODWORD(STACK[0xB5C]) = a16 - 1834271182;
  STACK[0x638] = v61 - 8;
  STACK[0x670] = (unint64_t)&a58;
  STACK[0xD68] = (unint64_t)&a58;
  STACK[0xD70] = STACK[0x668];
  LODWORD(STACK[0xD7C]) = STACK[0x664];
  STACK[0xD80] = STACK[0x658];
  STACK[0xD88] = STACK[0x650];
  STACK[0xD90] = STACK[0x648];
  STACK[0xD98] = STACK[0x640];
  v72 = STACK[0x638];
  STACK[0xDA0] = STACK[0x630];
  LODWORD(STACK[0xDAC]) = STACK[0x62C];
  STACK[0xDB0] = STACK[0x620];
  STACK[0xDB8] = STACK[0x618];
  STACK[0xDC0] = STACK[0x610];
  STACK[0xDC8] = STACK[0x608];
  LODWORD(STACK[0xDD4]) = STACK[0x604];
  STACK[0xDD8] = STACK[0x5F8];
  STACK[0xDE0] = STACK[0x5F0];
  LODWORD(STACK[0xDE8]) = STACK[0x5EC];
  LODWORD(STACK[0xDEC]) = STACK[0x5E8];
  STACK[0xDF0] = v72;
  v73 = a27(16, 2241923698);
  STACK[0xDF8] = v73;
  STACK[0x678] = 0;
  LOBYTE(STACK[0x687]) = 0;
  LODWORD(STACK[0x688]) = 101330303;
  return ((uint64_t (*)(void))(*(_QWORD *)(v59 + 8 * ((2235 * (v73 != 0)) ^ v58 ^ 0x5A6))
                            - ((58 * (v58 ^ 0x179u)) ^ 0x7B0)))();
}

uint64_t sub_1931FC70C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  STACK[0xAB8] = (unint64_t)&STACK[0x46AAD4E1DD9023D4];
  STACK[0xAC8] = (unint64_t)&STACK[0x54D2A68F3DE80682];
  *(_DWORD *)(v6 - 140) = v1 + v3 + (((v6 - 144) & 0xBE42220C | ~((v6 - 144) | 0xBE42220C)) ^ 0xD922AE8A) * a1 + 2739;
  v7 = sub_193241A88(v6 - 144);
  v8 = *(_DWORD *)(v6 - 144) == v2;
  LODWORD(STACK[0x5E8]) = v5;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((v8 * (v1 + v3 - 105)) | (v1 + v3 + 2217))))(v7);
}

uint64_t sub_1931FC7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unint64_t v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v56 = v53 + 92;
  v57 = a13;
  v58 = (v53 + 92) ^ 0x477;
  v59 = a13 | ((unint64_t)(a13 < 0x4419C74) << 32);
  STACK[0xB40] = v59 + 0x3F8B956AAA0D50ELL;
  STACK[0xB48] = v59 + 0x5BD875329903B4CDLL;
  v60 = (v57 ^ 0xF33C4708 ^ v58) & (2 * (v57 & 0xFBBE638C)) ^ v57 & 0xFBBE638C;
  v61 = ((2 * (v57 ^ 0x4951F84D)) ^ 0x65DF3782) & (v57 ^ 0x4951F84D) ^ (2 * (v57 ^ 0x4951F84D)) & 0xB2EF9BC0;
  v62 = v61 ^ 0x92208841;
  v63 = (v61 ^ 0x20CB1201) & (4 * v60) ^ v60;
  v64 = ((4 * v62) ^ 0xCBBE6F04) & v62 ^ (4 * v62) & 0xB2EF9BC0;
  v65 = (v64 ^ 0x82AE0B01) & (16 * v63) ^ v63;
  v66 = ((16 * (v64 ^ 0x304190C1)) ^ 0x2EF9BC10) & (v64 ^ 0x304190C1) ^ (16 * (v64 ^ 0x304190C1)) & 0xB2EF9BC0;
  v67 = v65 ^ 0xB2EF9BC1 ^ (v66 ^ 0x22E998C1) & (v65 << 8);
  v68 = a13 ^ (2
             * ((v67 << 16) & 0x32EF0000 ^ v67 ^ ((v67 << 16) ^ 0x1BC10000) & (((v66 ^ 0x900603C1) << 8) & 0x32EF0000 ^ 0x10640000 ^ (((v66 ^ 0x900603C1) << 8) ^ 0x6F9B0000) & (v66 ^ 0x900603C1))));
  LOBYTE(STACK[0xB54]) = HIBYTE(v68) ^ 0xBB;
  LOBYTE(STACK[0xB55]) = BYTE2(v68) ^ 0xE3;
  LOBYTE(STACK[0xB56]) = (((BYTE1(v68) ^ 0x54) - ((v68 >> 7) & 6) + 11) ^ 3) - 8;
  LOBYTE(STACK[0xB57]) = v68 ^ 0xE;
  LODWORD(STACK[0xA8C]) = a13 - 71408752;
  LODWORD(STACK[0xAB4]) = ((2 * a15) & 0xDFBDDAEE) + (a15 ^ 0x6FDEED77) - 1876880759;
  LODWORD(STACK[0xAD4]) = a13 - 71408756;
  LODWORD(STACK[0x664]) = v56;
  LODWORD(a30) = v55 + 977189016;
  STACK[0x648] = (unint64_t)&STACK[0x11E8];
  STACK[0xDA0] = (unint64_t)&STACK[0x11E8];
  STACK[0xDB0] = STACK[0x640];
  LODWORD(STACK[0xE14]) = STACK[0x68C];
  STACK[0xE28] = STACK[0x6B8];
  STACK[0xDB8] = STACK[0x630];
  STACK[0xDC0] = STACK[0x620];
  STACK[0xDD8] = STACK[0x618];
  STACK[0xDE0] = STACK[0x610];
  STACK[0xDF0] = STACK[0x5F8];
  LODWORD(STACK[0xE24]) = STACK[0x688];
  STACK[0xDF8] = STACK[0x5F0];
  STACK[0xE00] = STACK[0x5D8];
  STACK[0xE18] = STACK[0x5C0];
  v69 = SLODWORD(STACK[0x664]);
  LODWORD(STACK[0xE44]) = STACK[0x62C];
  STACK[0xE30] = STACK[0x5B8];
  STACK[0xE60] = STACK[0x6A8];
  LODWORD(STACK[0xE54]) = STACK[0x604];
  STACK[0xE38] = STACK[0x5A8];
  LODWORD(STACK[0xE6C]) = STACK[0x5EC];
  STACK[0xE48] = 59 * (v58 ^ 0x4BFu) + *(_QWORD *)(a53 + 8 * v69) - 1723;
  v70 = a27(16, 2241923698);
  STACK[0xE58] = v70;
  STACK[0x650] = 0;
  LOBYTE(STACK[0x687]) = 0;
  LODWORD(STACK[0x6A4]) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a53 + 8 * (((v70 != 0) * ((v54 + v58 + 639) ^ 0x7FA52EA6)) ^ v58)) - 4))(v70, v71, v72, v73, v74, v75, v76, v77, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1931FCCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int a33)
{
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v35 = (_QWORD *)STACK[0xE58];
  *v35 = 0;
  v35[1] = 0;
  STACK[0xE70] = (unint64_t)(v35 + 1);
  v36 = a27(4096, 2241923698);
  *(_QWORD *)STACK[0xE58] = v36;
  return ((uint64_t (*)(void))(2141531491
                            - ((v33 + 2146810168) & a33)
                            + *(_QWORD *)(v34 + 8 * (((v36 == 0) * (v33 - 1691)) ^ v33))
                            - 4))();
}

uint64_t sub_1931FCD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t (*a50)(unint64_t))
{
  uint64_t v50;

  v50 = a50(STACK[0xE58]);
  STACK[0x650] = 0;
  LOBYTE(STACK[0x687]) = 0;
  LODWORD(STACK[0x6A4]) = a36;
  LODWORD(STACK[0xE84]) = STACK[0x6A4];
  LOBYTE(STACK[0xE13]) = STACK[0x687];
  *(_QWORD *)STACK[0xDA0] = STACK[0x650];
  return ((uint64_t (*)(uint64_t))STACK[0xE48])(v50);
}

uint64_t sub_1931FCDA0()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x5E8]) = STACK[0xE84];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((LOBYTE(STACK[0xE13]) * (((v0 + v1 + 394) | 0xC0) + 3088)) ^ (v0 + v1 + 98)))
                            - 12))();
}

uint64_t sub_1931FCDD8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  unint64_t v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t (*v58)(void);

  v48 = a1 + 2558;
  v49 = *(_QWORD *)(a46 + 8 * a1) - 8;
  LODWORD(STACK[0x6C4]) = STACK[0xE6C];
  STACK[0x668] = STACK[0xE38];
  LODWORD(STACK[0x6D4]) = STACK[0xE54];
  STACK[0x6E8] = STACK[0xE60];
  STACK[0x670] = STACK[0xE30];
  LODWORD(STACK[0x6F4]) = STACK[0xE44];
  STACK[0x678] = STACK[0xE18];
  STACK[0x690] = STACK[0xE00];
  STACK[0x728] = v49;
  STACK[0x698] = STACK[0xDD8];
  LODWORD(STACK[0x704]) = v47;
  STACK[0x6B0] = STACK[0xDC0];
  STACK[0x6C8] = STACK[0xDB8];
  STACK[0x778] = STACK[0xE28];
  LODWORD(STACK[0x708]) = STACK[0xE14];
  STACK[0x6D8] = STACK[0xDB0];
  LODWORD(STACK[0x70C]) = 1;
  LODWORD(STACK[0xEA4]) = STACK[0x70C];
  STACK[0xE78] = STACK[0x6D8];
  LODWORD(STACK[0xEB4]) = STACK[0x708];
  STACK[0xEB8] = STACK[0x778];
  STACK[0xE88] = STACK[0x6C8];
  STACK[0xE90] = STACK[0x6B0];
  LODWORD(STACK[0xED4]) = STACK[0x704];
  STACK[0xE98] = STACK[0x698];
  v50 = STACK[0x728];
  STACK[0xEA8] = STACK[0x690];
  STACK[0xEC0] = STACK[0x678];
  LODWORD(STACK[0xEEC]) = STACK[0x6F4];
  v51 = STACK[0x670];
  STACK[0xEC8] = STACK[0x670];
  v52 = STACK[0x6E8];
  STACK[0xF08] = STACK[0x6E8];
  v53 = STACK[0x6D4];
  LODWORD(STACK[0xF14]) = STACK[0x6D4];
  v54 = STACK[0x668];
  STACK[0xED8] = STACK[0x668];
  v55 = STACK[0x6C4];
  LODWORD(STACK[0xF2C]) = STACK[0x6C4];
  v56 = STACK[0x11E8];
  STACK[0xEE0] = STACK[0x11E8];
  STACK[0xEF0] = v50;
  v57 = v56 + 12;
  STACK[0xEF8] = v56 + 12;
  LODWORD(v56) = *(_DWORD *)(v56 + 12);
  LODWORD(STACK[0xF30]) = v56;
  LODWORD(STACK[0x7B4]) = v55;
  STACK[0x788] = v54;
  LODWORD(STACK[0x7DC]) = v53;
  STACK[0x848] = v52;
  STACK[0x7A0] = v51;
  LODWORD(STACK[0x7F4]) = STACK[0xEEC];
  STACK[0x7A8] = STACK[0xEC0];
  STACK[0x7C0] = STACK[0xEA8];
  STACK[0x7C8] = v50;
  LODWORD(STACK[0x814]) = STACK[0xEA4];
  STACK[0x7D0] = v57;
  STACK[0x7E0] = STACK[0xEE0];
  STACK[0x7E8] = STACK[0xE98];
  LODWORD(STACK[0x824]) = STACK[0xED4];
  STACK[0x7F8] = STACK[0xE90];
  STACK[0x800] = STACK[0xE88];
  STACK[0x878] = STACK[0xEB8];
  LODWORD(STACK[0x828]) = STACK[0xEB4];
  STACK[0x818] = STACK[0xE78];
  v58 = (uint64_t (*)(void))(v46
                          - ((v48 - 548570) & 0x7FAD7F7F)
                          + *(_QWORD *)(a46
                                      + 8
                                      * ((857 * (v56 < ((v48 + 1767995469) & 0x969E7FFD ^ 0xFFFFFAF7))) ^ v48)));
  LODWORD(STACK[0x82C]) = 101330305;
  return v58();
}

uint64_t sub_1931FD260@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  BOOL v9;
  int v10;
  int v11;

  v5 = STACK[0xEE0];
  v6 = (LODWORD(STACK[0xF30]) ^ 0x67E37B9CEED7FFF6)
     - 0x67E37B9C595D96F9
     + (((65 * (a1 ^ (v2 + 549) ^ v1)) ^ 0x1DDAFFEE8) & (2 * LODWORD(STACK[0xF30])));
  v7 = (*(unsigned int *)(STACK[0xEE0] + 8) ^ 0x3F97DDD3FF46E7FFLL)
     - 0x3F97DDD369CC7F06
     + ((2 * *(unsigned int *)(STACK[0xEE0] + 8)) & 0x1FE8DCFFELL);
  v8 = v6 < 0x957A68F9;
  v9 = v6 > v7;
  LODWORD(STACK[0x724]) = STACK[0xF2C];
  STACK[0x6E0] = STACK[0xED8];
  LODWORD(STACK[0x74C]) = STACK[0xF14];
  v10 = v8 ^ (v7 < 0x957A68F9);
  STACK[0x7B8] = STACK[0xF08];
  v11 = v9;
  if (v10)
    v11 = v8;
  STACK[0x6F8] = STACK[0xEC8];
  LODWORD(STACK[0x764]) = STACK[0xEEC];
  STACK[0x710] = STACK[0xEC0];
  STACK[0x718] = STACK[0xEA8];
  STACK[0x730] = STACK[0xEF0];
  LODWORD(STACK[0x784]) = STACK[0xEA4];
  STACK[0x738] = STACK[0xEF8];
  STACK[0x740] = v5;
  STACK[0x750] = STACK[0xE98];
  LODWORD(STACK[0x794]) = STACK[0xED4];
  STACK[0x758] = STACK[0xE90];
  STACK[0x768] = STACK[0xE88];
  STACK[0x808] = STACK[0xEB8];
  LODWORD(STACK[0x798]) = STACK[0xEB4];
  STACK[0x770] = STACK[0xE78];
  LODWORD(STACK[0x79C]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((27 * v11) ^ a1)) - 12))();
}

void sub_1931FD3D8()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8 * v0);
  LODWORD(STACK[0x844]) = STACK[0xF2C];
  STACK[0x830] = STACK[0xED8];
  LODWORD(STACK[0x86C]) = STACK[0xF14];
  STACK[0x8A0] = STACK[0xF08];
  STACK[0x8C8] = v2;
  LODWORD(STACK[0x884]) = STACK[0xEEC];
  STACK[0x838] = STACK[0xEC0];
  STACK[0x850] = STACK[0xEA8];
  STACK[0x858] = STACK[0xEF0];
  LODWORD(STACK[0x894]) = STACK[0xEA4];
  STACK[0x860] = STACK[0xEF8];
  v3 = STACK[0xEE0];
  STACK[0x870] = STACK[0xEE0];
  STACK[0x888] = STACK[0xE98];
  LODWORD(STACK[0x8A8]) = STACK[0xED4];
  STACK[0x898] = STACK[0xE78];
  STACK[0x8B0] = v3;
  LODWORD(STACK[0x8AC]) = 4;
  JUMPOUT(0x1931FD46CLL);
}

uint64_t sub_1931FD5A4(uint64_t a1, int a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * (((((v4 - 3304) | v5) + (v4 ^ a2)) * (v3 > v2)) ^ v4)))();
}

uint64_t sub_1931FD5CC(int a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((v1 & 0xFFFFFFFF80000000) != 0) * v3) ^ v2 ^ a1)) - 12))();
}

uint64_t sub_1931FD600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unint64_t v59;
  unint64_t v60;
  int v61;
  unint64_t v62;
  unsigned int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t);
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;

  STACK[0x918] = v60;
  STACK[0x10E0] = v59;
  LODWORD(STACK[0x954]) = STACK[0x10EC];
  STACK[0x960] = STACK[0x10B0];
  LODWORD(STACK[0x97C]) = STACK[0x10C4];
  STACK[0x9C8] = STACK[0x1048];
  STACK[0x968] = STACK[0x10B8];
  LODWORD(STACK[0x994]) = STACK[0x10AC];
  STACK[0x970] = STACK[0x10A0];
  STACK[0x980] = STACK[0x1098];
  STACK[0x988] = STACK[0x1080];
  LODWORD(STACK[0x9B4]) = STACK[0x108C];
  STACK[0x998] = STACK[0x1078];
  STACK[0x9A0] = STACK[0x1060];
  STACK[0x9B8] = STACK[0x1058];
  LODWORD(STACK[0x9C4]) = STACK[0x1070];
  STACK[0x9D0] = STACK[0x1030];
  STACK[0x9E8] = STACK[0x10C8];
  STACK[0x9F8] = STACK[0x10E0];
  LODWORD(STACK[0x9DC]) = 101330305;
  STACK[0xA00] = STACK[0x1050];
  LODWORD(STACK[0x9E0]) = 101330305;
  v61 = STACK[0x9E0];
  v62 = STACK[0xA00];
  v63 = STACK[0x9DC];
  v64 = STACK[0x9F8];
  v65 = STACK[0x9E8];
  v66 = STACK[0x9D0];
  v67 = STACK[0x9C4];
  v68 = STACK[0x9B8];
  v69 = STACK[0x9A0];
  v70 = STACK[0x998];
  v71 = LODWORD(STACK[0x9B4]);
  v72 = STACK[0x988];
  v73 = STACK[0x980];
  v74 = STACK[0x970];
  v75 = LODWORD(STACK[0x994]);
  v76 = (uint64_t (*)(unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t))STACK[0x968];
  v77 = STACK[0x9C8];
  v78 = LODWORD(STACK[0x97C]);
  v79 = STACK[0x960];
  v80 = STACK[0x954];
  LODWORD(STACK[0x1214]) = STACK[0x954];
  STACK[0x1218] = v79;
  LODWORD(STACK[0x1224]) = v78;
  STACK[0x1228] = v77;
  STACK[0x1230] = (unint64_t)v76;
  HIDWORD(a54) = v75;
  STACK[0x1238] = v74;
  STACK[0x1240] = v73;
  STACK[0x1248] = v72;
  STACK[0x1250] = v70;
  STACK[0x1258] = v69;
  STACK[0x1260] = v68;
  STACK[0x1268] = v66;
  STACK[0x1270] = v65;
  STACK[0x1278] = v64;
  STACK[0x1280] = v62;
  LODWORD(a59) = v61;
  STACK[0x1288] = v79;
  STACK[0x1290] = v77;
  STACK[0x1298] = (unint64_t)v76;
  STACK[0x12A0] = v74;
  STACK[0x12A8] = v73;
  STACK[0x12B0] = v72;
  LODWORD(STACK[0x204]) = v71;
  STACK[0x12B8] = v70;
  STACK[0x12C0] = v69;
  LODWORD(STACK[0x210]) = v67;
  LODWORD(STACK[0x214]) = v63;
  LODWORD(STACK[0x218]) = v61;
  LODWORD(STACK[0x724]) = v80;
  STACK[0x6E0] = v79;
  LODWORD(STACK[0x74C]) = v78;
  STACK[0x7B8] = v77;
  STACK[0x6F8] = (unint64_t)v76;
  LODWORD(STACK[0x764]) = v75;
  STACK[0x710] = v74;
  STACK[0x718] = v73;
  STACK[0x730] = v72;
  LODWORD(STACK[0x784]) = v71;
  STACK[0x738] = v70;
  STACK[0x740] = v69;
  STACK[0x750] = v68;
  LODWORD(STACK[0x794]) = v67;
  STACK[0x758] = v66;
  STACK[0x768] = v65;
  STACK[0x808] = v64;
  LODWORD(STACK[0x798]) = v63;
  STACK[0x770] = v62;
  LODWORD(STACK[0x79C]) = v61;
  return v76(v70, v71, v72, v73, v74, v75, v77, v78, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           v68,
           v66,
           __PAIR64__(v63, v71),
           v65,
           a59);
}

uint64_t sub_1931FD6AC@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  STACK[0x918] = v1;
  STACK[0x10E0] = v1;
  LODWORD(STACK[0x954]) = STACK[0x10EC];
  STACK[0x960] = STACK[0x10B0];
  LODWORD(STACK[0x97C]) = STACK[0x10C4];
  STACK[0x9C8] = STACK[0x1048];
  STACK[0x968] = STACK[0x10B8];
  LODWORD(STACK[0x994]) = STACK[0x10AC];
  STACK[0x970] = STACK[0x10A0];
  STACK[0x980] = STACK[0x1098];
  STACK[0x988] = STACK[0x1080];
  LODWORD(STACK[0x9B4]) = STACK[0x108C];
  STACK[0x998] = STACK[0x1078];
  STACK[0x9A0] = STACK[0x1060];
  STACK[0x9B8] = STACK[0x1058];
  LODWORD(STACK[0x9C4]) = STACK[0x1070];
  STACK[0x9D0] = STACK[0x1030];
  STACK[0x9E8] = STACK[0x10C8];
  STACK[0x9F8] = STACK[0x10E0];
  LODWORD(STACK[0x9DC]) = 101330305;
  STACK[0xA00] = STACK[0x1050];
  v4 = LOBYTE(STACK[0x1047]) * ((((a1 + 1000675423) | 0x44000947) ^ (v2 + 1573)) + a1 + 40);
  LODWORD(STACK[0x9E0]) = 101330305;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 ^ a1)))();
}

uint64_t sub_1931FD798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(unint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t (*v40)(void);

  v39 = a27(STACK[0x10E0], 2241923698);
  STACK[0x10D0] = v39;
  LODWORD(STACK[0x8C4]) = STACK[0x10EC];
  STACK[0x8B8] = STACK[0x10B0];
  LODWORD(STACK[0x8EC]) = STACK[0x10C4];
  STACK[0x958] = STACK[0x1048];
  STACK[0x8D0] = STACK[0x10B8];
  LODWORD(STACK[0x904]) = STACK[0x10AC];
  STACK[0x8D8] = STACK[0x10A0];
  STACK[0x8E0] = STACK[0x1098];
  STACK[0x8F0] = STACK[0x1080];
  LODWORD(STACK[0x924]) = STACK[0x108C];
  STACK[0x8F8] = STACK[0x1078];
  STACK[0x908] = STACK[0x1060];
  STACK[0x910] = STACK[0x1058];
  LODWORD(STACK[0x934]) = STACK[0x1070];
  STACK[0x928] = STACK[0x1030];
  STACK[0x940] = STACK[0x10C8];
  STACK[0x9A8] = STACK[0x10E0];
  LODWORD(STACK[0x938]) = v38;
  STACK[0x948] = 0;
  v40 = (uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * ((6848 * (((v39 == 0) ^ (v36 + 88)) & 1)) ^ v36))
                          - 8);
  LODWORD(STACK[0x93C]) = a36;
  return v40();
}

uint64_t sub_1931FD874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  unint64_t v87;

  v57 = v54 | 0x84;
  v58 = (v57 + 1402);
  v59 = STACK[0x10C8];
  v60 = (*(unsigned int *)STACK[0x10C8] ^ 0xFEEBB7FD67E8FDFFLL)
      + 0x7B7749AF9EDFAE47
      + ((2 * *(_DWORD *)STACK[0x10C8]) & 0xCFD1FBFE);
  v61 = (v60 ^ 0x614ECE3AF1B643B9) & (2 * (v60 & (v58 ^ 0x2F9375585))) ^ v60 & (v58 ^ 0x2F9375585);
  v62 = ((2 * (v60 ^ 0x614ECE3B73DCC69DLL)) ^ 0x924409315D72A4ELL) & (v60 ^ 0x614ECE3B73DCC69DLL) ^ (2 * (v60 ^ 0x614ECE3B73DCC69DLL)) & 0x64D230698AEB9526;
  v63 = v62 ^ 0x245210288A289521;
  v64 = (v62 ^ 0x2452102102C30000) & (4 * v61) ^ v61;
  LODWORD(STACK[0x3DC]) = STACK[0x10EC];
  STACK[0x360] = STACK[0x10B0];
  LODWORD(STACK[0x404]) = STACK[0x10C4];
  STACK[0x3E0] = STACK[0x1048];
  v65 = ((4 * v63) ^ 0x1348C1A62BAE549CLL) & v63 ^ (4 * v63) & 0x64D230698AEB9524;
  STACK[0x368] = STACK[0x10B8];
  v66 = (v65 ^ 0x804000200AAA1400) & (16 * v64) ^ v64;
  LODWORD(STACK[0x41C]) = STACK[0x10AC];
  STACK[0x378] = STACK[0x10A0];
  STACK[0x380] = STACK[0x1098];
  STACK[0x390] = STACK[0x1080];
  v67 = ((16 * (v65 ^ 0x6492304980418123)) ^ 0x4D230698AEB95270) & (v65 ^ 0x6492304980418123) ^ (16 * (v65 ^ 0x6492304980418123)) & 0xE4D230698AEB9520;
  LODWORD(STACK[0x43C]) = STACK[0x108C];
  v68 = (v67 ^ 0x440200088AA91000) & (v66 << 8) ^ v66;
  STACK[0x398] = STACK[0x1078];
  v69 = (((v67 ^ 0xA0D0306100428507) << 8) ^ 0xD230698AEB952700) & (v67 ^ 0xA0D0306100428507) ^ ((v67 ^ 0xA0D0306100428507) << 8) & 0xE4D230698AEB9500;
  STACK[0x3B0] = STACK[0x1060];
  STACK[0x430] = *(_QWORD *)(v55 + 8 * v57) - 8;
  v70 = v60 ^ (2 * (v69 & 0x69802300000000 ^ v68 ^ (v69 ^ 0x401020088A810000) & (v68 << 16)));
  STACK[0x3C8] = STACK[0x1058];
  LODWORD(STACK[0x44C]) = STACK[0x1070];
  STACK[0x3D0] = STACK[0x1030];
  STACK[0x3E8] = v59;
  STACK[0x470] = STACK[0x10E0];
  v71 = STACK[0x10D0];
  STACK[0x3F0] = STACK[0x10D0];
  STACK[0x3F8] = v71;
  STACK[0x408] = *(_QWORD *)STACK[0x1030];
  STACK[0x4F0] = v70 ^ 0x7EB68F1E7C1CDBDFLL;
  LODWORD(STACK[0x450]) = v56;
  STACK[0x4C0] = 0x5D952DACE41797ELL;
  v72 = STACK[0x4F0];
  v73 = STACK[0x408];
  v74 = STACK[0x4C0];
  v75 = STACK[0x3F8];
  STACK[0xD10] = STACK[0x3F0];
  LODWORD(STACK[0xD7C]) = STACK[0x450];
  STACK[0xD80] = STACK[0x470];
  STACK[0xD18] = STACK[0x3E8];
  STACK[0xD30] = STACK[0x3D0];
  LODWORD(STACK[0xDAC]) = STACK[0x44C];
  STACK[0xD38] = STACK[0x3C8];
  v76 = STACK[0x430];
  STACK[0xD50] = STACK[0x3B0];
  STACK[0xD60] = STACK[0x398];
  LODWORD(STACK[0xDD4]) = STACK[0x43C];
  STACK[0xD68] = STACK[0x390];
  STACK[0xD70] = STACK[0x380];
  STACK[0xD88] = STACK[0x378];
  LODWORD(STACK[0xDE8]) = STACK[0x41C];
  STACK[0xD90] = STACK[0x368];
  STACK[0xDC8] = STACK[0x3E0];
  LODWORD(STACK[0xDEC]) = STACK[0x404];
  STACK[0xD98] = STACK[0x360];
  LODWORD(STACK[0xE0C]) = STACK[0x3DC];
  STACK[0xAE8] = v76;
  STACK[0xAA0] = v75;
  STACK[0xB08] = v74;
  v77 = STACK[0xD60];
  v78 = STACK[0xD50];
  v79 = STACK[0xD38];
  v80 = LODWORD(STACK[0xDAC]);
  v81 = STACK[0xD30];
  v82 = STACK[0xD18];
  v83 = STACK[0xD80];
  v84 = LODWORD(STACK[0xD7C]);
  v85 = v53 + ((v58 + 226491843) | 0x72252965) + 2173;
  STACK[0xAA8] = v73;
  STACK[0xB18] = v72;
  STACK[0x1140] = v72;
  STACK[0x11A0] = v73;
  v86 = STACK[0xB08];
  STACK[0x1190] = STACK[0xB08];
  v87 = STACK[0xAA0];
  STACK[0x11A8] = STACK[0xAA0];
  STACK[0x11B8] = STACK[0xAE8];
  return ((uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(a53 + 8 * (((2 * (v73 <= v87 + v86 - 0x5D952DACE41797ELL)) | (8 * (v73 <= v87 + v86 - 0x5D952DACE41797ELL))) ^ v85)) - 8))(v77, v78, v79, v80, v81, v82, v83, v84);
}

void sub_1931FDB5C()
{
  int v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;

  v0 = STACK[0x93C];
  v1 = STACK[0x948];
  v2 = STACK[0x938];
  v3 = STACK[0x9A8];
  v4 = STACK[0x940];
  v5 = STACK[0x928];
  v6 = STACK[0x934];
  v7 = STACK[0x910];
  v8 = STACK[0x908];
  v9 = STACK[0x8F8];
  v10 = STACK[0x924];
  v11 = STACK[0x8F0];
  v12 = STACK[0x8E0];
  v13 = STACK[0x8D8];
  v14 = STACK[0x904];
  v15 = STACK[0x8D0];
  v16 = STACK[0x958];
  v17 = STACK[0x8EC];
  v18 = STACK[0x8B8];
  LODWORD(STACK[0x954]) = STACK[0x8C4];
  STACK[0x960] = v18;
  LODWORD(STACK[0x97C]) = v17;
  STACK[0x9C8] = v16;
  STACK[0x968] = v15;
  LODWORD(STACK[0x994]) = v14;
  STACK[0x970] = v13;
  STACK[0x980] = v12;
  STACK[0x988] = v11;
  LODWORD(STACK[0x9B4]) = v10;
  STACK[0x998] = v9;
  STACK[0x9A0] = v8;
  STACK[0x9B8] = v7;
  LODWORD(STACK[0x9C4]) = v6;
  STACK[0x9D0] = v5;
  STACK[0x9E8] = v4;
  STACK[0x9F8] = v3;
  LODWORD(STACK[0x9DC]) = v2;
  STACK[0xA00] = v1;
  LODWORD(STACK[0x9E0]) = v0;
  JUMPOUT(0x1931FF690);
}

uint64_t sub_1931FDB64()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  BOOL v6;
  int v7;
  uint64_t (*v8)(void);

  v5 = STACK[0xFBC];
  v6 = LODWORD(STACK[0xFBC]) == v4;
  LODWORD(STACK[0x564]) = STACK[0x106C];
  STACK[0x520] = STACK[0x1028];
  LODWORD(STACK[0x574]) = STACK[0x1024];
  STACK[0x638] = STACK[0x1038];
  STACK[0x530] = STACK[0x1018];
  STACK[0x538] = STACK[0xFF0];
  LODWORD(STACK[0x59C]) = STACK[0x100C];
  STACK[0x550] = STACK[0xFE8];
  STACK[0x568] = STACK[0xFD8];
  v7 = v6;
  LODWORD(STACK[0x5B4]) = v5;
  STACK[0x580] = STACK[0xFC8];
  LODWORD(STACK[0x5D4]) = STACK[0xFE4];
  STACK[0x588] = STACK[0xFC0];
  STACK[0x590] = STACK[0xFB0];
  STACK[0x658] = STACK[0x1000];
  LODWORD(STACK[0x5E4]) = STACK[0xFD4];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v7 * ((v2 ^ (v1 + 573)) - 668)) ^ (v0 + v2 + 2133))) - 4);
  STACK[0x5A0] = STACK[0xFA8];
  return v8();
}

void sub_1931FDC20(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = ((a1 + 2554) ^ 0xFFFFFFFFFFFFF339) + *(_QWORD *)(v1 + 8 * a1);
  LODWORD(STACK[0x6C4]) = STACK[0x106C];
  STACK[0x668] = STACK[0x1028];
  LODWORD(STACK[0x6D4]) = STACK[0x1024];
  STACK[0x6E8] = STACK[0x1038];
  STACK[0x670] = STACK[0x1018];
  LODWORD(STACK[0x6F4]) = STACK[0x1020];
  STACK[0x678] = STACK[0x1010];
  STACK[0x690] = STACK[0xFF8];
  STACK[0x728] = v2;
  STACK[0x698] = STACK[0xFC8];
  LODWORD(STACK[0x704]) = STACK[0xFE4];
  STACK[0x6B0] = STACK[0xFC0];
  STACK[0x6C8] = STACK[0xFB0];
  STACK[0x778] = STACK[0x1000];
  LODWORD(STACK[0x708]) = STACK[0xFD4];
  STACK[0x6D8] = STACK[0xFA8];
  LODWORD(STACK[0x70C]) = 395137981;
  JUMPOUT(0x1931FD0E4);
}

uint64_t sub_1931FDCC0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v2 = a1 - 492;
  v3 = (v2 + 870);
  v4 = STACK[0x5A0];
  v5 = STACK[0x5E4];
  v6 = STACK[0x658];
  v7 = STACK[0x590];
  v8 = STACK[0x588];
  v9 = STACK[0x5D4];
  v10 = STACK[0x580];
  v11 = STACK[0x5B4];
  v12 = STACK[0x568];
  v13 = STACK[0x550];
  v14 = STACK[0x59C];
  v15 = STACK[0x538];
  v16 = STACK[0x530];
  v17 = STACK[0x638];
  v18 = STACK[0x574];
  v19 = STACK[0x520];
  v20 = STACK[0x11E8];
  v21 = v3 + *(_QWORD *)(v1 + 8 * v2) - 1101;
  LODWORD(STACK[0x9F4]) = STACK[0x564];
  STACK[0xA10] = v19;
  LODWORD(STACK[0xA1C]) = v18;
  STACK[0xA50] = v17;
  STACK[0xA20] = v16;
  LODWORD(STACK[0xA3C]) = v11;
  STACK[0xA90] = v21;
  STACK[0xA30] = v15;
  LODWORD(STACK[0xA5C]) = v14;
  STACK[0xA40] = v13;
  STACK[0xA48] = v12;
  STACK[0xA60] = v10;
  LODWORD(STACK[0xA70]) = v9;
  STACK[0xA68] = v8;
  STACK[0xA78] = v7;
  STACK[0xAC0] = v6;
  LODWORD(STACK[0xA74]) = v5;
  STACK[0xA80] = v4;
  STACK[0xA98] = v20;
  STACK[0x1100] = STACK[0xA98];
  STACK[0x1108] = STACK[0xA80];
  LODWORD(STACK[0x113C]) = STACK[0xA74];
  STACK[0x1110] = STACK[0xAC0];
  STACK[0x1118] = STACK[0xA78];
  STACK[0x1128] = STACK[0xA68];
  LODWORD(STACK[0x115C]) = STACK[0xA70];
  STACK[0x1130] = STACK[0xA60];
  STACK[0x1148] = STACK[0xA48];
  STACK[0x1150] = STACK[0xA40];
  LODWORD(STACK[0x1174]) = STACK[0xA5C];
  STACK[0x1160] = STACK[0xA30];
  v22 = STACK[0xA90];
  LODWORD(STACK[0x119C]) = STACK[0xA3C];
  STACK[0x1168] = STACK[0xA20];
  STACK[0x1120] = STACK[0xA50];
  LODWORD(STACK[0x11B0]) = STACK[0xA1C];
  STACK[0x1178] = STACK[0xA10];
  LODWORD(STACK[0x11B4]) = STACK[0x9F4];
  STACK[0x1180] = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((4001 * (((v3 - 96) ^ (STACK[0x1100] == 0)) & 1)) ^ v3))
                            - 12))();
}

uint64_t sub_1931FDCD0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  BOOL v6;
  int v7;
  uint64_t (*v8)(void);

  v5 = STACK[0xFBC];
  v6 = LODWORD(STACK[0xFBC]) == ((v2 - v1 - 1109) ^ (v4 + 700));
  LODWORD(STACK[0x4EC]) = STACK[0x106C];
  STACK[0x4A0] = STACK[0x1028];
  LODWORD(STACK[0x514]) = STACK[0x1024];
  STACK[0x5C8] = STACK[0x1038];
  STACK[0x4B0] = STACK[0x1018];
  STACK[0x4B8] = STACK[0xFF0];
  LODWORD(STACK[0x52C]) = STACK[0x100C];
  STACK[0x4D0] = STACK[0xFE8];
  STACK[0x4E0] = STACK[0xFD8];
  STACK[0x4F8] = STACK[0xFC8];
  LODWORD(STACK[0x54C]) = STACK[0xFE4];
  STACK[0x500] = STACK[0xFC0];
  STACK[0x508] = STACK[0xFB0];
  STACK[0x608] = STACK[0x1000];
  LODWORD(STACK[0x55C]) = STACK[0xFD4];
  STACK[0x518] = STACK[0xFA8];
  v7 = v6;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3217 * v7) ^ (v0 + v2 + 58))) - 4);
  LODWORD(STACK[0x560]) = v5;
  return v8();
}

void sub_1931FDD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;

  v54 = *(_QWORD *)(a53 + 8 * v53);
  LODWORD(STACK[0x6C4]) = STACK[0x106C];
  STACK[0x668] = STACK[0x1028];
  LODWORD(STACK[0x6D4]) = STACK[0x1024];
  STACK[0x6E8] = STACK[0x1038];
  STACK[0x670] = STACK[0x1018];
  LODWORD(STACK[0x6F4]) = STACK[0x1020];
  STACK[0x678] = STACK[0x1010];
  STACK[0x690] = STACK[0xFF8];
  STACK[0x728] = (((v53 + 1397) | 0x480u) ^ 0xFFFFFFFFFFFFF339) + v54;
  STACK[0x698] = STACK[0xFC8];
  LODWORD(STACK[0x704]) = STACK[0xFE4];
  STACK[0x6B0] = STACK[0xFC0];
  STACK[0x6C8] = STACK[0xFB0];
  STACK[0x778] = STACK[0x1000];
  LODWORD(STACK[0x708]) = STACK[0xFD4];
  STACK[0x6D8] = STACK[0xFA8];
  JUMPOUT(0x1931FD0D4);
}

uint64_t sub_1931FDE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;

  v40 = STACK[0xFBC];
  v41 = (LODWORD(STACK[0xFBC]) - (v37 - 2040158540)) | (v37 - 2040158540 - LODWORD(STACK[0xFBC]));
  LODWORD(STACK[0x4EC]) = STACK[0x106C];
  STACK[0x4A0] = STACK[0x1028];
  LODWORD(STACK[0x514]) = STACK[0x1024];
  STACK[0x5C8] = STACK[0x1038];
  STACK[0x4B0] = STACK[0x1018];
  STACK[0x4B8] = STACK[0xFF0];
  LODWORD(STACK[0x52C]) = STACK[0x100C];
  STACK[0x4D0] = STACK[0xFE8];
  STACK[0x4E0] = STACK[0xFD8];
  STACK[0x4F8] = STACK[0xFC8];
  LODWORD(STACK[0x54C]) = STACK[0xFE4];
  STACK[0x500] = STACK[0xFC0];
  STACK[0x508] = STACK[0xFB0];
  STACK[0x608] = STACK[0x1000];
  LODWORD(STACK[0x55C]) = STACK[0xFD4];
  STACK[0x518] = STACK[0xFA8];
  LODWORD(STACK[0x560]) = v40;
  return ((uint64_t (*)(void))(*(_QWORD *)(v38 + 8 * ((v37 - 2040158540) ^ (v39 + 141) ^ (1034 * (v41 >= 0))))
                            - a37
                            + 678))();
}

void sub_1931FDF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  unint64_t v53;

  v53 = *(_QWORD *)(a53 + 8 * a37);
  LODWORD(STACK[0x6C4]) = STACK[0x106C];
  STACK[0x668] = STACK[0x1028];
  LODWORD(STACK[0x6D4]) = STACK[0x1024];
  STACK[0x6E8] = STACK[0x1038];
  STACK[0x670] = STACK[0x1018];
  LODWORD(STACK[0x6F4]) = STACK[0x1020];
  STACK[0x678] = STACK[0x1010];
  STACK[0x690] = STACK[0xFF8];
  STACK[0x728] = v53;
  STACK[0x698] = STACK[0xFC8];
  LODWORD(STACK[0x704]) = STACK[0xFE4];
  STACK[0x6B0] = STACK[0xFC0];
  STACK[0x6C8] = STACK[0xFB0];
  STACK[0x778] = STACK[0x1000];
  LODWORD(STACK[0x708]) = STACK[0xFD4];
  STACK[0x6D8] = STACK[0xFA8];
  JUMPOUT(0x1931FD0D8);
}

uint64_t sub_1931FDFB8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  BOOL v6;
  int v7;
  uint64_t (*v8)(void);

  v5 = STACK[0xFBC];
  v6 = LODWORD(STACK[0xFBC]) == v4;
  LODWORD(STACK[0x4EC]) = STACK[0x106C];
  STACK[0x4A0] = STACK[0x1028];
  LODWORD(STACK[0x514]) = STACK[0x1024];
  STACK[0x5C8] = STACK[0x1038];
  STACK[0x4B0] = STACK[0x1018];
  STACK[0x4B8] = STACK[0xFF0];
  LODWORD(STACK[0x52C]) = STACK[0x100C];
  STACK[0x4D0] = STACK[0xFE8];
  STACK[0x4E0] = STACK[0xFD8];
  STACK[0x4F8] = STACK[0xFC8];
  LODWORD(STACK[0x54C]) = STACK[0xFE4];
  STACK[0x500] = STACK[0xFC0];
  STACK[0x508] = STACK[0xFB0];
  STACK[0x608] = STACK[0x1000];
  LODWORD(STACK[0x55C]) = STACK[0xFD4];
  v7 = v6;
  STACK[0x518] = STACK[0xFA8];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2547 * v7) ^ (v0 + v2 + 58)))
                         - ((v2 - v1 - 1646) ^ 0xB7));
  LODWORD(STACK[0x560]) = v5;
  return v8();
}

uint64_t sub_1931FE080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  unint64_t v54;
  unsigned int v55;
  unint64_t v56;

  v54 = STACK[0x11E8];
  STACK[0xAD8] = STACK[0x11E8];
  v55 = *(_DWORD *)(v54 + 12);
  v54 += 12;
  STACK[0xAE0] = v54;
  v56 = (v55 ^ 0xF9EE44FFD19FFD71)
      + STACK[0xB48]
      + (((unint64_t)v55 << (((v53 - 113) | 0x84) ^ 0xC7u)) & 0x1A33FFAE2);
  STACK[0xB70] = v56;
  LODWORD(STACK[0x4EC]) = STACK[0x106C];
  STACK[0x4A0] = v54;
  LODWORD(STACK[0x514]) = STACK[0x1024];
  STACK[0x5C8] = STACK[0xB40];
  STACK[0x4B0] = STACK[0x1018];
  STACK[0x4B8] = STACK[0xFF0];
  LODWORD(STACK[0x52C]) = STACK[0x100C];
  STACK[0x4D0] = STACK[0xFE8];
  STACK[0x4E0] = STACK[0xFD8];
  STACK[0x4F8] = STACK[0xAD8];
  LODWORD(STACK[0x54C]) = STACK[0xFE4];
  STACK[0x500] = STACK[0xFC0];
  STACK[0x508] = STACK[0xFB0];
  STACK[0x608] = STACK[0x1000];
  LODWORD(STACK[0x55C]) = STACK[0xFD4];
  STACK[0x518] = STACK[0xFA8];
  LODWORD(STACK[0x560]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(a53
                                        + 8
                                        * ((4196
                                          * (v56 + ((v53 + 2142600516) & 0xFFEFAF6F ^ 0xAA3945CDEEBF9C29) < 0xFFFFFFFB)) ^ v53))
                            - 4))();
}

uint64_t sub_1931FE1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  unsigned int v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _BOOL4 v60;

  v55 = STACK[0xAD8];
  v56 = *(unsigned int *)(STACK[0xAD8] + 8);
  v57 = STACK[0xB70] + (v53 ^ 0xAA3945CE3BE25C1FLL);
  LODWORD(STACK[0x1214]) = STACK[0x106C];
  v58 = (v56 ^ 0x73FEBFEEF617CFEBLL) + ((v54 + v53 - 1957) ^ 0x8C014011CB0AFCFBLL) + ((2 * v56) & 0x1EC2F9FD6);
  v60 = v58 > 0xAAC7A186 && v57 > v58;
  STACK[0x1218] = STACK[0xAE0];
  LODWORD(STACK[0x1224]) = STACK[0x1024];
  STACK[0x1228] = STACK[0xB40];
  STACK[0x1230] = STACK[0x1018];
  STACK[0x1238] = STACK[0x1010];
  STACK[0x1240] = STACK[0xFF8];
  STACK[0x1248] = STACK[0xFF0];
  STACK[0x1250] = STACK[0xFE8];
  STACK[0x1258] = STACK[0xFD8];
  STACK[0x1260] = v55;
  STACK[0x1268] = STACK[0xFC0];
  STACK[0x1270] = STACK[0xFB0];
  STACK[0x1278] = STACK[0x1000];
  STACK[0x1280] = STACK[0xFA8];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a53 + 8 * (int)((8 * v60) | (16 * v60) | v53)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

void sub_1931FE2FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8 * v0);
  LODWORD(STACK[0x844]) = STACK[0x106C];
  STACK[0x830] = STACK[0xAE0];
  LODWORD(STACK[0x86C]) = STACK[0x1024];
  STACK[0x8A0] = STACK[0xB40];
  STACK[0x8C8] = v2;
  LODWORD(STACK[0x884]) = STACK[0x1020];
  STACK[0x838] = STACK[0x1010];
  STACK[0x850] = STACK[0xFF8];
  STACK[0x858] = STACK[0xFF0];
  LODWORD(STACK[0x894]) = STACK[0x100C];
  STACK[0x860] = STACK[0xFE8];
  STACK[0x870] = STACK[0xFD8];
  v3 = STACK[0xAD8];
  STACK[0x888] = STACK[0xAD8];
  LODWORD(STACK[0x8A8]) = STACK[0xFE4];
  STACK[0x898] = STACK[0xFA8];
  STACK[0x8B0] = v3;
  JUMPOUT(0x1931FE394);
}

uint64_t sub_1931FE3A4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,int a54)
{
  int v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  unint64_t v60;
  int v61;
  uint64_t (*v62)(void);

  STACK[0xAF8] = STACK[0x1280];
  LODWORD(STACK[0xAF4]) = a52;
  STACK[0xB88] = STACK[0x1278];
  STACK[0xB00] = STACK[0x1270];
  STACK[0xB10] = STACK[0x1268];
  STACK[0xB30] = STACK[0x1260];
  STACK[0xB38] = STACK[0x1258];
  STACK[0xB60] = STACK[0x1250];
  LODWORD(STACK[0xB58]) = a51;
  STACK[0xB68] = STACK[0x1248];
  STACK[0xB78] = STACK[0x1240];
  STACK[0xB90] = STACK[0x1238];
  LODWORD(STACK[0xB5C]) = a48;
  v57 = STACK[0x1230];
  STACK[0xB98] = STACK[0x1230];
  v58 = STACK[0x1228];
  STACK[0xBD0] = STACK[0x1228];
  v59 = STACK[0x1224];
  LODWORD(STACK[0xB84]) = STACK[0x1224];
  v60 = STACK[0x1218];
  STACK[0xBA0] = STACK[0x1218];
  v61 = STACK[0x1214];
  LODWORD(STACK[0xBB4]) = STACK[0x1214];
  LODWORD(STACK[0x4EC]) = v61;
  STACK[0x4A0] = v60;
  LODWORD(STACK[0x514]) = v59;
  STACK[0x5C8] = v58;
  STACK[0x4B0] = v57;
  STACK[0x4B8] = STACK[0xB68];
  LODWORD(STACK[0x52C]) = STACK[0xB58];
  STACK[0x4D0] = STACK[0xB60];
  STACK[0x4E0] = STACK[0xB38];
  STACK[0x4F8] = STACK[0xB30];
  LODWORD(STACK[0x54C]) = a54;
  STACK[0x500] = STACK[0xB10];
  STACK[0x508] = STACK[0xB00];
  STACK[0x608] = STACK[0xB88];
  LODWORD(STACK[0x55C]) = STACK[0xAF4];
  STACK[0x518] = STACK[0xAF8];
  v62 = (uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * ((4140 * (a54 == v56)) ^ (v54 + a1 + 58)))
                          - ((v54 + a1 - 104) | 0xC6u)
                          + 211);
  LODWORD(STACK[0x560]) = a54;
  return v62();
}

uint64_t sub_1931FE4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  _DWORD *v60;
  unint64_t v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  unint64_t v87;

  v56 = v53 ^ 0x6E8;
  v57 = (unint64_t *)STACK[0xB30];
  v58 = STACK[0xB30];
  v59 = *(_QWORD *)STACK[0xB30];
  v60 = (_DWORD *)STACK[0xBA0];
  v61 = STACK[0xBA0];
  v62 = ((2 * *(_DWORD *)STACK[0xBA0]) & 0x9F37FBBC) + (v53 ^ 0x4F9BFD09 ^ *(_DWORD *)STACK[0xBA0]) - 1335623134;
  *(_BYTE *)(v59 + v62) = STACK[0xB54];
  *(_BYTE *)(v59 + v62 + 1) = STACK[0xB55];
  *(_BYTE *)(v59 + v62 + 2) = STACK[0xB56];
  *(_BYTE *)(v59 + v62 + 3) = STACK[0xB57];
  v63 = (*v60 + 4);
  *v60 = v63;
  v64 = STACK[0xBD0];
  v65 = STACK[0xBD0];
  v66 = (STACK[0xBD0] ^ 0xFA5726AC50190D7CLL) & (2 * (STACK[0xBD0] & 0xFC0746A9511D8E7ELL)) ^ STACK[0xBD0] & 0xFC0746A9511D8E7ELL;
  v67 = ((2 * (STACK[0xBD0] ^ 0x7A5FABAE50211D64)) ^ 0xCB1DA0E02792634) & (STACK[0xBD0] ^ 0x7A5FABAE50211D64) ^ (2 * (STACK[0xBD0] ^ 0x7A5FABAE50211D64)) & 0x8658ED07013C931ALL;
  LODWORD(STACK[0x3DC]) = STACK[0xBB4];
  STACK[0x360] = v61;
  v68 = ((4 * (v67 ^ 0x824825010104910ALL)) ^ 0x1963B41C04F24C68) & (v67 ^ 0x824825010104910ALL) ^ (4 * (v67 ^ 0x824825010104910ALL)) & 0x8658ED07013C9318;
  LODWORD(STACK[0x404]) = STACK[0xB84];
  STACK[0x3E0] = v65;
  STACK[0x368] = STACK[0xB98];
  v69 = ((16 * (v68 ^ 0x86184903010C9312)) ^ 0x658ED07013C931A0) & (v68 ^ 0x86184903010C9312) ^ (16 * (v68 ^ 0x86184903010C9312)) & 0x8658ED07013C9310;
  LODWORD(STACK[0x41C]) = STACK[0xB5C];
  v70 = (v69 ^ 0x408C00001081100) & (((v68 ^ 0x40A40400300000) & (16 * ((v67 ^ 0x10080600380210) & (4 * v66) ^ v66)) ^ (v67 ^ 0x10080600380210) & (4 * v66) ^ v66) << 8) ^ (v68 ^ 0x40A40400300000) & (16 * ((v67 ^ 0x10080600380210) & (4 * v66) ^ v66)) ^ (v67 ^ 0x10080600380210) & (4 * v66) ^ v66;
  STACK[0x378] = STACK[0xB90];
  STACK[0x380] = STACK[0xB78];
  v71 = (((v69 ^ 0x82502D070034821ALL) << 8) ^ 0x58ED07013C931A00) & (v69 ^ 0x82502D070034821ALL) ^ ((v69 ^ 0x82502D070034821ALL) << 8) & 0x8658ED07013C9300;
  STACK[0x390] = STACK[0xB68];
  LODWORD(STACK[0x43C]) = STACK[0xB58];
  STACK[0x398] = STACK[0xB60];
  STACK[0x3B0] = STACK[0xB38];
  STACK[0x430] = *(_QWORD *)(a53 + 8 * v53) - 8;
  STACK[0x3C8] = v58;
  STACK[0x3D0] = STACK[0xB10];
  STACK[0x3E8] = STACK[0xB00];
  STACK[0x470] = STACK[0xB88];
  LODWORD(STACK[0x450]) = STACK[0xAF4];
  STACK[0x3F0] = STACK[0xAF8];
  STACK[0x3F8] = *v57;
  STACK[0x4C0] = (v63 ^ 0xFFEF7BF667F7F8EFLL) + ((2 * (_DWORD)v63) & 0xCFEFF1DE) + 0x5E9D6E46649808FLL;
  STACK[0x4F0] = v64 ^ (2
                      * ((v71 & 0x104011800000000 | 0x18800200000000) ^ v70 ^ (v71 ^ 0x48050100100000) & (v70 << 16))) ^ 0x71C35E1D436061BLL;
  LODWORD(STACK[0x44C]) = v55;
  STACK[0x408] = a28;
  v72 = STACK[0x4F0];
  v73 = STACK[0x408];
  v74 = STACK[0x4C0];
  v75 = STACK[0x3F8];
  STACK[0xD10] = STACK[0x3F0];
  LODWORD(STACK[0xD7C]) = STACK[0x450];
  STACK[0xD80] = STACK[0x470];
  STACK[0xD18] = STACK[0x3E8];
  STACK[0xD30] = STACK[0x3D0];
  LODWORD(STACK[0xDAC]) = STACK[0x44C];
  STACK[0xD38] = STACK[0x3C8];
  v76 = STACK[0x430];
  STACK[0xD50] = STACK[0x3B0];
  STACK[0xD60] = STACK[0x398];
  LODWORD(STACK[0xDD4]) = STACK[0x43C];
  STACK[0xD68] = STACK[0x390];
  STACK[0xD70] = STACK[0x380];
  STACK[0xD88] = STACK[0x378];
  LODWORD(STACK[0xDE8]) = STACK[0x41C];
  STACK[0xD90] = STACK[0x368];
  STACK[0xDC8] = STACK[0x3E0];
  LODWORD(STACK[0xDEC]) = STACK[0x404];
  STACK[0xD98] = STACK[0x360];
  LODWORD(STACK[0xE0C]) = STACK[0x3DC];
  STACK[0xAE8] = v76;
  STACK[0xAA0] = v75;
  STACK[0xB08] = v74;
  v77 = STACK[0xD60];
  v78 = STACK[0xD50];
  v79 = STACK[0xD38];
  v80 = LODWORD(STACK[0xDAC]);
  v81 = STACK[0xD30];
  v82 = STACK[0xD18];
  v83 = STACK[0xD80];
  v84 = LODWORD(STACK[0xD7C]);
  v85 = v54 + ((v56 + 226491843) | 0x72252965) + 2173;
  STACK[0xAA8] = v73;
  STACK[0xB18] = v72;
  STACK[0x1140] = v72;
  STACK[0x11A0] = v73;
  v86 = STACK[0xB08];
  STACK[0x1190] = STACK[0xB08];
  v87 = STACK[0xAA0];
  STACK[0x11A8] = STACK[0xAA0];
  STACK[0x11B8] = STACK[0xAE8];
  return ((uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(a53 + 8 * (((2 * (v73 <= v87 + v86 - 0x5D952DACE41797ELL)) | (8 * (v73 <= v87 + v86 - 0x5D952DACE41797ELL))) ^ v85)) - 8))(v77, v78, v79, v80, v81, v82, v83, v84);
}

uint64_t sub_1931FE824()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  BOOL v7;
  int v8;
  uint64_t (*v9)(void);

  v5 = STACK[0xD98];
  *(_DWORD *)STACK[0xD98] += LODWORD(STACK[0xAD4]);
  v6 = STACK[0xDAC];
  v7 = LODWORD(STACK[0xDAC]) == v4;
  LODWORD(STACK[0x4EC]) = STACK[0xE0C];
  v8 = v7;
  STACK[0x4A0] = v5;
  LODWORD(STACK[0x514]) = STACK[0xDEC];
  STACK[0x5C8] = STACK[0xDC8];
  STACK[0x4B0] = STACK[0xD90];
  STACK[0x4B8] = STACK[0xD68];
  LODWORD(STACK[0x52C]) = STACK[0xDD4];
  STACK[0x4D0] = STACK[0xD60];
  STACK[0x4E0] = STACK[0xD50];
  STACK[0x4F8] = STACK[0xD38];
  LODWORD(STACK[0x54C]) = v6;
  STACK[0x500] = STACK[0xD30];
  STACK[0x508] = STACK[0xD18];
  STACK[0x608] = STACK[0xD80];
  LODWORD(STACK[0x55C]) = STACK[0xD7C];
  STACK[0x518] = STACK[0xD10];
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2794 * v8) ^ (v0 + v2 + 58)))
                         - 235 * (v2 ^ (v1 - 1))
                         + 1171);
  LODWORD(STACK[0x560]) = v6;
  return v9();
}

uint64_t sub_1931FE900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int *a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  int v60;
  uint64_t v61;

  v55 = STACK[0x11E8];
  STACK[0xBA8] = STACK[0x11E8];
  STACK[0x1200] = 0;
  LODWORD(STACK[0x120C]) = 0;
  a25(a22);
  v56 = *a23;
  v57 = *(_QWORD *)v55;
  v58 = *(_DWORD *)(v55 + 12);
  STACK[0xBB8] = v55 + 12;
  v59 = STACK[0xAB8];
  v60 = 597255653 * ((((2 * (v54 - 144)) | 0x521FD1F8) - (v54 - 144) + 1458575108) ^ 0xA0049765);
  *(_QWORD *)(v54 - 104) = STACK[0xAC8];
  *(_DWORD *)(v54 - 140) = v60 + v58 + 1581691396 - ((2 * v58) & 0xBC8D6408);
  *(_QWORD *)(v54 - 120) = v57;
  *(_DWORD *)(v54 - 128) = (((5 * (v53 ^ 0x434) + 498) | 0x46) ^ 0xE7FDFA9B)
                         - v60
                         + (v56 ^ 0x3D1BE7BC)
                         + ((2 * v56) & 0x7A37CF78);
  *(_QWORD *)(v54 - 136) = v59;
  *(_DWORD *)(v54 - 112) = v60 + v53 + 2065;
  a24(v54 - 144);
  LODWORD(v55) = *(_DWORD *)(v54 - 144);
  v61 = a26(a22);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a53
                                                      + 8
                                                      * (((2 * ((_DWORD)v55 != 663729217)) | (32
                                                                                            * ((_DWORD)v55 != 663729217))) ^ v53))
                                          - 12))(v61);
}

uint64_t sub_1931FEA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  int v60;

  return ((uint64_t (*)(void))(*(_QWORD *)(a53
                                        + 8
                                        * ((232
                                          * (a60 != ((((v60 - 968195600) & 0x39B57FEF) + 395292082) ^ ((v60 - 1376) | 0xC0)))) ^ v60))
                            - 12))();
}

void sub_1931FECB0()
{
  int v0;

  LODWORD(STACK[0x34C]) = STACK[0xE0C];
  STACK[0x2C0] = STACK[0xD98];
  LODWORD(STACK[0x374]) = STACK[0xDEC];
  STACK[0x308] = STACK[0xDC8];
  STACK[0x2C8] = STACK[0xD90];
  LODWORD(STACK[0x38C]) = STACK[0xDE8];
  STACK[0x2D0] = STACK[0xD88];
  STACK[0x2E0] = STACK[0xD68];
  LODWORD(STACK[0x3AC]) = STACK[0xDD4];
  STACK[0x2E8] = STACK[0xD60];
  STACK[0x2F8] = STACK[0xD50];
  STACK[0x300] = STACK[0xD38];
  LODWORD(STACK[0x3BC]) = v0;
  STACK[0x318] = STACK[0xD30];
  STACK[0x320] = STACK[0xD18];
  STACK[0x350] = STACK[0xD80];
  LODWORD(STACK[0x3C0]) = STACK[0xD7C];
  JUMPOUT(0x1931FFD0CLL);
}

uint64_t sub_1931FED58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unint64_t a55,unint64_t a56,uint64_t a57,unint64_t a58,uint64_t a59,unint64_t a60,uint64_t a61,int a62,int a63)
{
  unint64_t a64;
  int a69;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  int v73;

  LODWORD(STACK[0xBF0]) = STACK[0x218];
  STACK[0xBC8] = a60;
  LODWORD(STACK[0xBF4]) = STACK[0x214];
  STACK[0xC30] = a64;
  STACK[0xBE0] = a58;
  STACK[0xBE8] = a56;
  LODWORD(STACK[0xC0C]) = STACK[0x210];
  STACK[0xBF8] = a55;
  STACK[0xC00] = STACK[0x12C0];
  STACK[0xC10] = STACK[0x12B8];
  LODWORD(STACK[0xC1C]) = STACK[0x204];
  STACK[0xC20] = STACK[0x12B0];
  STACK[0xC38] = STACK[0x12A8];
  STACK[0xC40] = STACK[0x12A0];
  LODWORD(STACK[0xC2C]) = a69;
  STACK[0xC50] = STACK[0x1298];
  STACK[0xC80] = STACK[0x1290];
  STACK[0xC58] = STACK[0x1288];
  LODWORD(STACK[0xC4C]) = a63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v72 + 8 * ((483 * (LODWORD(STACK[0xBF0]) != v73)) ^ (v70 + v69 + 3177)))
                            - ((2 * (v69 ^ (v71 + 1785)) - 477471441) & 0x1C75A2FF ^ 0xDBLL)))();
}

void sub_1931FEE48(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = STACK[0x11F8];
  v3 = ((9 * (a1 ^ 0xA6)) ^ 0xFFFFFFFFFFFFFBBDLL) + *(_QWORD *)(v1 + 8 * a1);
  LODWORD(STACK[0x9F4]) = STACK[0xC4C];
  STACK[0xA10] = STACK[0xC58];
  LODWORD(STACK[0xA1C]) = STACK[0xBF0];
  STACK[0xA50] = STACK[0xC80];
  STACK[0xA20] = STACK[0xC50];
  LODWORD(STACK[0xA3C]) = STACK[0xC2C];
  STACK[0xA90] = v3;
  STACK[0xA30] = STACK[0xC20];
  LODWORD(STACK[0xA5C]) = STACK[0xC1C];
  STACK[0xA40] = STACK[0xC10];
  STACK[0xA48] = STACK[0xC00];
  STACK[0xA60] = STACK[0xBF8];
  LODWORD(STACK[0xA70]) = STACK[0xC0C];
  STACK[0xA68] = STACK[0xBE8];
  STACK[0xA78] = STACK[0xBE0];
  STACK[0xAC0] = STACK[0xC30];
  LODWORD(STACK[0xA74]) = STACK[0xBF4];
  STACK[0xA80] = STACK[0xBC8];
  STACK[0xA98] = v2;
  JUMPOUT(0x193200D04);
}

void sub_1931FEF08()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)STACK[0x11F8];
  v4 = STACK[0x1200];
  v5 = LODWORD(STACK[0x120C])
     - 0x4D58EB37AD4779BLL
     - (((unint64_t)LODWORD(STACK[0x120C]) << (v0 + 81)) & 0x10A5710CALL);
  v6 = *(_QWORD *)(v1 + 8 * v0) - 12;
  LODWORD(STACK[0x3DC]) = STACK[0xC4C];
  STACK[0x360] = STACK[0xC58];
  LODWORD(STACK[0x404]) = v2;
  STACK[0x3E0] = STACK[0xC80];
  STACK[0x368] = STACK[0xC50];
  LODWORD(STACK[0x41C]) = STACK[0xC2C];
  STACK[0x378] = STACK[0xC40];
  STACK[0x380] = STACK[0xC38];
  STACK[0x390] = STACK[0xC20];
  LODWORD(STACK[0x43C]) = STACK[0xC1C];
  STACK[0x398] = STACK[0xC10];
  STACK[0x3B0] = STACK[0xC00];
  STACK[0x430] = v6;
  STACK[0x3C8] = STACK[0xBF8];
  LODWORD(STACK[0x44C]) = STACK[0xC0C];
  STACK[0x3D0] = STACK[0xBE8];
  STACK[0x3E8] = STACK[0xBE0];
  STACK[0x470] = STACK[0xC30];
  LODWORD(STACK[0x450]) = STACK[0xBF4];
  STACK[0x3F0] = STACK[0xBC8];
  STACK[0x3F8] = v3;
  STACK[0x4C0] = 0x5D952DACE41797ELL;
  STACK[0x408] = v4;
  STACK[0x4F0] = v5;
  JUMPOUT(0x1931FF00CLL);
}

uint64_t sub_1931FF19C()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x11DC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 ^ 0x8C) - 1364) * (v1 != 0)) ^ v0)) - 12))();
}

uint64_t sub_1931FF1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v55 = (v53 - 26) | 3u;
  v56 = (v55 ^ 0x83AC6E6739C47E52) + STACK[0x1190];
  STACK[0x11E0] = v56;
  v57 = LODWORD(STACK[0x11DC]);
  STACK[0xB28] = v57;
  LODWORD(v57) = v57 - 1;
  v58 = (((unint64_t)v57 << ((v55 - v54 + 98) ^ 0x66)) & 0x1EFF41E7ALL)
      + (v57 ^ 0x767A3EBDF7FA0F3DLL);
  *(_BYTE *)(STACK[0x11A8] + v58 + v56) = *(_BYTE *)(STACK[0x11A0] + v58 - 0x767A3EBDF7FA0F3DLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(a53 + 8 * (int)((57 * (v57 != 0)) ^ v55)) - 12))();
}

void sub_1931FF2A8()
{
  JUMPOUT(0x1931FF230);
}

uint64_t sub_1931FF2B4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  LODWORD(STACK[0x11C4]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((((v0 + 514) ^ (v1 == 0)) & 1) == 0) * (v3 + (v0 ^ v4) + 696)) ^ v0))
                            - 12))();
}

uint64_t sub_1931FF308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  unint64_t v55;
  unint64_t v56;

  v55 = STACK[0x1190] - 0x5D946D73CE96B68;
  STACK[0x11C8] = v55;
  v56 = LODWORD(STACK[0x11C4]);
  STACK[0x11D0] = v56;
  STACK[0xB20] = 0;
  *(_BYTE *)(STACK[0x11A8] + v55 - 0xC0391580E16) = *(_BYTE *)STACK[0x11A0];
  return ((uint64_t (*)(void))(*(_QWORD *)(a53
                                        + 8
                                        * ((126 * ((v53 ^ (v54 + 125)) - 2141531494 == v56)) ^ v53))
                            - 12))();
}

uint64_t sub_1931FF3BC(unint64_t a1, unint64_t a2, unint64_t a3, int a4, unint64_t a5, unint64_t a6, unint64_t a7, int a8)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;

  STACK[0xB28] = v17;
  STACK[0x410] = v13;
  LODWORD(STACK[0x454]) = v12;
  STACK[0x540] = v11;
  STACK[0x420] = v10;
  LODWORD(STACK[0x46C]) = v9;
  STACK[0x428] = v8;
  LODWORD(STACK[0x494]) = 101372955;
  STACK[0x440] = v14;
  LODWORD(STACK[0x4AC]) = v15;
  STACK[0x458] = a1;
  STACK[0x460] = a2;
  STACK[0x478] = a3;
  LODWORD(STACK[0x4CC]) = a4;
  STACK[0x480] = a5;
  STACK[0x488] = a6;
  STACK[0x578] = a7;
  LODWORD(STACK[0x4DC]) = a8;
  STACK[0x498] = v16;
  return ((uint64_t (*)(void))STACK[0x11B8])();
}

void sub_1931FF44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,unint64_t a51)
{
  int v51;
  int v52;
  uint64_t v53;

  STACK[0xAE8] = *(_QWORD *)(v53 + 8 * (v51 + v52 + 103));
  STACK[0xAA0] = a51;
  STACK[0xB08] = 0x5D952DACE41797ELL;
  JUMPOUT(0x1931FF10CLL);
}

void sub_1931FF498()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v0 = STACK[0x11F8];
  *(_DWORD *)(v0 + 8) = STACK[0x120C];
  *(_DWORD *)(v0 + 12) = 0;
  LODWORD(STACK[0x21C]) = STACK[0xE0C];
  v11 = STACK[0xD98];
  LODWORD(STACK[0x254]) = STACK[0xDEC];
  v1 = STACK[0xDC8];
  v2 = STACK[0xD90];
  LODWORD(STACK[0x26C]) = STACK[0xDE8];
  v12 = v2;
  v13 = STACK[0xD68];
  LODWORD(STACK[0x28C]) = STACK[0xDD4];
  v14 = STACK[0xD60];
  v15 = STACK[0xD50];
  v16 = STACK[0xD38];
  LODWORD(STACK[0x29C]) = STACK[0xDAC];
  v17 = STACK[0xD30];
  v18 = STACK[0xD18];
  v19 = v1;
  STACK[0x230] = STACK[0xD80];
  LODWORD(STACK[0x2A0]) = STACK[0xD7C];
  STACK[0x208] = STACK[0xD10];
  STACK[0x220] = v0;
  v3 = STACK[0x220];
  v4 = STACK[0x208];
  LODWORD(v2) = STACK[0x2A0];
  v5 = STACK[0x230];
  v6 = STACK[0x29C];
  v7 = STACK[0x28C];
  v8 = STACK[0x26C];
  v9 = STACK[0x254];
  v10 = STACK[0x21C];
  LODWORD(STACK[0x2A4]) = STACK[0x120C];
  LODWORD(STACK[0x2B4]) = v10;
  STACK[0x228] = v11;
  LODWORD(STACK[0x2DC]) = v9;
  STACK[0x280] = v19;
  STACK[0x238] = v12;
  LODWORD(STACK[0x2F4]) = v8;
  STACK[0x240] = v3;
  STACK[0x248] = v13;
  LODWORD(STACK[0x314]) = v7;
  STACK[0x258] = v14;
  STACK[0x260] = v15;
  STACK[0x270] = v16;
  LODWORD(STACK[0x32C]) = v6;
  STACK[0x278] = v17;
  STACK[0x290] = v18;
  STACK[0x2B8] = v5;
  LODWORD(STACK[0x330]) = v2;
  STACK[0x2A8] = v4;
  LODWORD(STACK[0x334]) = v9;
  JUMPOUT(0x1931FFBE8);
}

void sub_1931FF528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void (*a50)(_QWORD))
{
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;

  v50 = (_QWORD *)STACK[0xD30];
  a50(*(_QWORD *)STACK[0xD30]);
  v51 = STACK[0xD10];
  *v50 = STACK[0xD10];
  v52 = STACK[0xD18];
  v53 = STACK[0xD80];
  *(_DWORD *)STACK[0xD18] = STACK[0xD80];
  LODWORD(STACK[0x8C4]) = STACK[0xE0C];
  STACK[0x8B8] = STACK[0xD98];
  LODWORD(STACK[0x8EC]) = STACK[0xDEC];
  STACK[0x958] = STACK[0xDC8];
  STACK[0x8D0] = STACK[0xD90];
  LODWORD(STACK[0x904]) = STACK[0xDE8];
  STACK[0x8D8] = STACK[0xD88];
  STACK[0x8E0] = STACK[0xD70];
  STACK[0x8F0] = STACK[0xD68];
  LODWORD(STACK[0x924]) = STACK[0xDD4];
  STACK[0x8F8] = STACK[0xD60];
  STACK[0x908] = STACK[0xD50];
  STACK[0x910] = STACK[0xD38];
  LODWORD(STACK[0x934]) = STACK[0xDAC];
  STACK[0x928] = STACK[0xD30];
  STACK[0x940] = v52;
  STACK[0x9A8] = v53;
  v54 = STACK[0xD7C];
  LODWORD(STACK[0x938]) = STACK[0xD7C];
  STACK[0x948] = v51;
  LODWORD(STACK[0x93C]) = v54;
  JUMPOUT(0x1931FF5E8);
}

uint64_t sub_1931FF7D4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  int v12;
  uint64_t (*v13)(void);

  v4 = v1 + v0;
  v5 = STACK[0x79C];
  STACK[0xF00] = STACK[0x770];
  LODWORD(STACK[0xF34]) = STACK[0x798];
  STACK[0xF48] = STACK[0x808];
  STACK[0xF18] = STACK[0x768];
  STACK[0xF20] = STACK[0x758];
  LODWORD(STACK[0xF44]) = STACK[0x794];
  STACK[0xF38] = STACK[0x750];
  STACK[0xF50] = STACK[0x740];
  STACK[0xF58] = STACK[0x738];
  LODWORD(STACK[0xF64]) = STACK[0x784];
  STACK[0xF68] = STACK[0x730];
  STACK[0xF70] = STACK[0x718];
  v6 = STACK[0x710];
  STACK[0xF80] = STACK[0x710];
  v7 = STACK[0x764];
  LODWORD(STACK[0xF7C]) = STACK[0x764];
  v8 = STACK[0x6F8];
  STACK[0xF88] = STACK[0x6F8];
  v9 = STACK[0x7B8];
  STACK[0xF98] = STACK[0x7B8];
  v10 = STACK[0x74C];
  LODWORD(STACK[0xFA4]) = STACK[0x74C];
  v11 = STACK[0x6E0];
  STACK[0xF90] = STACK[0x6E0];
  v12 = STACK[0x724];
  LODWORD(STACK[0xFB8]) = STACK[0x724];
  LODWORD(STACK[0x7B4]) = v12;
  STACK[0x788] = v11;
  LODWORD(STACK[0x7DC]) = v10;
  STACK[0x848] = v9;
  STACK[0x7A0] = v8;
  LODWORD(STACK[0x7F4]) = v7;
  STACK[0x7A8] = v6;
  STACK[0x7C0] = STACK[0xF70];
  STACK[0x7C8] = STACK[0xF68];
  LODWORD(STACK[0x814]) = STACK[0xF64];
  STACK[0x7D0] = STACK[0xF58];
  STACK[0x7E0] = STACK[0xF50];
  STACK[0x7E8] = STACK[0xF38];
  LODWORD(STACK[0x824]) = STACK[0xF44];
  STACK[0x7F8] = STACK[0xF20];
  STACK[0x800] = STACK[0xF18];
  STACK[0x878] = STACK[0xF48];
  LODWORD(STACK[0x828]) = STACK[0xF34];
  STACK[0x818] = STACK[0xF00];
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v5 == v3) * (((v4 - 57) | 0xC81) ^ 0xE98)) ^ (v4 + 3144))) - 4);
  LODWORD(STACK[0x82C]) = v5;
  return v13();
}

uint64_t sub_1931FF930@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  unint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t (*v9)(void);

  v2 = STACK[0xF50];
  v3 = *(_QWORD *)STACK[0xF50];
  v4 = (_DWORD *)STACK[0xF58];
  v5 = STACK[0xF58];
  v6 = STACK[0xF64];
  v7 = LODWORD(STACK[0xF64])
     + 451170848
     - ((((a1 + 1352924292) | 0x2F012422) ^ 0x4A6D8927) & (2 * LODWORD(STACK[0xF64])));
  v8 = ((2 * *(_DWORD *)STACK[0xF58]) & 0x77FFFF7A) + (*(_DWORD *)STACK[0xF58] ^ 0xBBFFFFBD) + 1140850755;
  *(_BYTE *)(v3 + v8 + 1) = BYTE2(v7) ^ 0xE4;
  *(_BYTE *)(v3 + v8 + 2) = (((BYTE1(v7) ^ 0x52) - 2 * ((BYTE1(v7) ^ 0x52) & 7 ^ BYTE1(v7) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v3 + v8) = HIBYTE(v7) ^ 0x1A;
  *(_BYTE *)(v3 + v8 + 3) = v7 ^ 0x20;
  *v4 += 4;
  LODWORD(STACK[0x7B4]) = STACK[0xFB8];
  STACK[0x788] = STACK[0xF90];
  LODWORD(STACK[0x7DC]) = STACK[0xFA4];
  STACK[0x848] = STACK[0xF98];
  STACK[0x7A0] = STACK[0xF88];
  LODWORD(STACK[0x7F4]) = STACK[0xF7C];
  STACK[0x7A8] = STACK[0xF80];
  STACK[0x7C0] = STACK[0xF70];
  STACK[0x7C8] = STACK[0xF68];
  LODWORD(STACK[0x814]) = v6;
  STACK[0x7D0] = v5;
  STACK[0x7E0] = v2;
  STACK[0x7E8] = STACK[0xF38];
  LODWORD(STACK[0x824]) = STACK[0xF44];
  STACK[0x7F8] = STACK[0xF20];
  STACK[0x800] = STACK[0xF18];
  STACK[0x878] = STACK[0xF48];
  LODWORD(STACK[0x828]) = STACK[0xF34];
  STACK[0x818] = STACK[0xF00];
  LODWORD(STACK[0x82C]) = v1;
  LODWORD(STACK[0xFBC]) = STACK[0x82C];
  STACK[0xFA8] = STACK[0x818];
  LODWORD(STACK[0xFD4]) = STACK[0x828];
  STACK[0x1000] = STACK[0x878];
  STACK[0xFB0] = STACK[0x800];
  STACK[0xFC0] = STACK[0x7F8];
  LODWORD(STACK[0xFE4]) = STACK[0x824];
  STACK[0xFC8] = STACK[0x7E8];
  STACK[0xFD8] = STACK[0x7E0];
  STACK[0xFE8] = STACK[0x7D0];
  LODWORD(STACK[0x100C]) = STACK[0x814];
  v9 = (uint64_t (*)(void))STACK[0x7C8];
  STACK[0xFF0] = STACK[0x7C8];
  STACK[0xFF8] = STACK[0x7C0];
  STACK[0x1010] = STACK[0x7A8];
  LODWORD(STACK[0x1020]) = STACK[0x7F4];
  STACK[0x1018] = STACK[0x7A0];
  STACK[0x1038] = STACK[0x848];
  LODWORD(STACK[0x1024]) = STACK[0x7DC];
  STACK[0x1028] = STACK[0x788];
  LODWORD(STACK[0x106C]) = STACK[0x7B4];
  return v9();
}

uint64_t sub_1931FFE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  BOOL v60;
  int v61;

  v56 = *(_QWORD *)(a53 + 8 * v53);
  v57 = (v53 + 454925601) & 0xE4E26C2E;
  v58 = (v57 ^ 0xFFFFFFFFFFFFF3FELL) + v56;
  v59 = STACK[0xCC0];
  v60 = STACK[0xCC0] == 0;
  STACK[0xCE8] = STACK[0xCC0] + 12;
  v61 = v60;
  LOBYTE(STACK[0xD2F]) = v61;
  STACK[0xCF0] = v59 + 8;
  STACK[0x3A0] = v58;
  STACK[0x340] = 0;
  STACK[0x358] = (unint64_t)&STACK[0x1210];
  STACK[0xCF8] = 0;
  LODWORD(STACK[0x9E4]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(a53 + 8 * (int)((v57 - v54 - 2141530938) ^ ((16 * v61) | (v61 << 6))))
                            - ((9 * (((_DWORD)v57 - v54 - 2961) ^ (v55 + 133))) ^ 0x50FLL)))();
}

uint64_t sub_1931FFF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unsigned int *v6;
  _DWORD *v7;
  int v8;
  int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL4 v15;
  _BOOL4 v16;

  v13 = ((v8 + v9) & v10 ^ 0x500C38E77D845) + (*v6 ^ v11) + ((2 * *v6) & 0x1D5F69F7ELL);
  v14 = (*v7 ^ 0x66B3DFFF1DBF3FE7) - 0x66B3DFFE40F0FB0ALL + ((2 * *v7) & 0x3B7E7FCE);
  v15 = v13 < a6;
  v16 = v13 > v14;
  if (v15 != v14 < a6)
    v16 = v15;
  return (*(uint64_t (**)(void))(v12 + 8 * ((162 * !v16) ^ v8)))();
}

uint64_t sub_193200018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  _DWORD *v7;
  uint64_t (*v8)(void);
  _DWORD *v9;
  int v10;
  _QWORD *v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;

  v15 = (((v12 ^ (v13 + 538)) + 975843215) & (2 * v10)) + (v10 ^ 0xDCE7AE7B) + a7;
  v16 = (-16777216 * *(unsigned __int8 *)(*v11 + v15)) | (*(unsigned __int8 *)(*v11 + v15 + 1) << 16);
  v17 = *(unsigned __int8 *)(*v11 + v15 + 2);
  v18 = *(unsigned __int8 *)(*v11 + v15 + 3);
  v19 = (((v17 + 4420934 - ((2 * v17) & 0x4C)) << 8) - 0x2000) ^ 0x43752600 | (v16 - 0x1000000);
  v20 = (v19 ^ 0x5A6FFF) & ((v18 - 1636428685 - ((2 * v18) & 0xE6)) ^ 0x82C7F04) ^ v19 & 0x69A59400;
  v21 = (v20 & 0x324D5387 ^ 0x12494387) + (v20 ^ 0x28A41408) - ((v20 ^ 0x28A41408) & 0x324D5387);
  *v9 = (((v21 ^ 0x1FBDF440) - 789305555) ^ ((v21 ^ 0x7B8AD7DE) - 1262287693) ^ ((v21 ^ 0x81840F66) + 1322114059))
      - 619719546;
  *v7 += 4;
  LODWORD(STACK[0x9E4]) = v14;
  return v8();
}

uint64_t sub_193200198()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((LODWORD(STACK[0x1210]) == v5) * v0) ^ (v1 + v3 + 2749)))
                            - (v3 ^ (v2 - 293))
                            + 2114))();
}

void sub_1932001CC()
{
  int v0;

  LODWORD(STACK[0x11F4]) = v0;
  JUMPOUT(0x1931FFF1CLL);
}

uint64_t sub_1932001EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t (*v47)(void);

  STACK[0xA28] = v39;
  STACK[0xA08] = v40;
  STACK[0x10D8] = v40;
  STACK[0x10F0] = v39;
  LODWORD(STACK[0x10F8]) = v42;
  LODWORD(STACK[0x10FC]) = v43;
  LODWORD(STACK[0xD0C]) = v41;
  STACK[0x410] = STACK[0xCD8];
  LODWORD(STACK[0x454]) = STACK[0xCCC];
  STACK[0x540] = STACK[0xD00];
  STACK[0x420] = STACK[0xCD0];
  LODWORD(STACK[0x46C]) = STACK[0xCAC];
  STACK[0x428] = STACK[0xCC0];
  LODWORD(STACK[0x494]) = v43;
  STACK[0x440] = STACK[0xCB8];
  LODWORD(STACK[0x4AC]) = STACK[0xC9C];
  STACK[0x458] = STACK[0xCA0];
  STACK[0x460] = STACK[0xC90];
  STACK[0x478] = STACK[0xC88];
  LODWORD(STACK[0x4CC]) = STACK[0xC98];
  STACK[0x480] = STACK[0xC78];
  STACK[0x488] = STACK[0xC70];
  STACK[0x578] = STACK[0xCB0];
  LODWORD(STACK[0x4DC]) = STACK[0xC64];
  v47 = (uint64_t (*)(void))(*(_QWORD *)(v46 + 8 * ((v44 + v45 + 1845) ^ (105 * v38))) - (a38 ^ 0xAAA));
  STACK[0x498] = STACK[0xC68];
  return v47();
}

uint64_t sub_1932002C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  int v39;
  uint64_t v40;
  int v41;

  LODWORD(STACK[0xD24]) = STACK[0x11F4];
  STACK[0x410] = STACK[0xCD8];
  LODWORD(STACK[0x454]) = STACK[0xCCC];
  STACK[0x540] = STACK[0xD00];
  STACK[0x420] = STACK[0xCD0];
  LODWORD(STACK[0x46C]) = STACK[0xCAC];
  STACK[0x428] = 0;
  LODWORD(STACK[0x494]) = a5;
  STACK[0x440] = STACK[0xCB8];
  LODWORD(STACK[0x4AC]) = STACK[0xC9C];
  STACK[0x458] = STACK[0xCA0];
  STACK[0x460] = STACK[0xC90];
  STACK[0x478] = STACK[0xC88];
  LODWORD(STACK[0x4CC]) = STACK[0xC98];
  STACK[0x480] = STACK[0xC78];
  STACK[0x488] = STACK[0xC70];
  STACK[0x578] = STACK[0xCB0];
  LODWORD(STACK[0x4DC]) = STACK[0xC64];
  v41 = (LOBYTE(STACK[0xD2F]) * (2 * (a38 ^ (v39 + 379) ^ (v38 + 333)) - 1951)) ^ a38;
  STACK[0x498] = STACK[0xC68];
  return (*(uint64_t (**)(void))(v40 + 8 * v41))();
}

uint64_t sub_193200384()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v3 = *(unsigned int *)STACK[0xCE8];
  LODWORD(STACK[0xD28]) = v3;
  STACK[0xD48] = v3;
  v4 = (((v0 + 1394607254) | 0x2C852123) ^ v3 ^ 0xECBFF6EC23F67090)
     + ((2 * (_DWORD)v3) & 0xB8A6BBEE)
     + (unint64_t)LODWORD(STACK[0xD24])
     + ((unint64_t)(LODWORD(STACK[0xD24]) < v2 + ((v0 + 1322292049) & 0xB12F67CD) - 717) << 32)
     + 0x134009140EAAD5B4;
  v5 = (*(unsigned int *)STACK[0xCF0] ^ 0xDFFEF5E35FE5FBE7)
     + 0x20010A1D11230BDFLL
     + ((2 * *(_DWORD *)STACK[0xCF0]) & 0xBFCBF7CE);
  v6 = v4 < 0x710907C6;
  STACK[0x410] = STACK[0xCD8];
  LODWORD(STACK[0x454]) = STACK[0xCCC];
  v7 = v4 > v5;
  STACK[0x540] = STACK[0xD00];
  STACK[0x420] = STACK[0xCD0];
  if (v6 != v5 < 0x710907C6)
    v7 = v6;
  LODWORD(STACK[0x46C]) = STACK[0xCAC];
  STACK[0x428] = STACK[0xCC0];
  STACK[0x440] = STACK[0xCB8];
  LODWORD(STACK[0x4AC]) = STACK[0xC9C];
  STACK[0x458] = STACK[0xCA0];
  STACK[0x460] = STACK[0xC90];
  STACK[0x478] = STACK[0xC88];
  LODWORD(STACK[0x4CC]) = STACK[0xC98];
  STACK[0x480] = STACK[0xC78];
  STACK[0x488] = STACK[0xC70];
  STACK[0x578] = STACK[0xCB0];
  LODWORD(STACK[0x4DC]) = STACK[0xC64];
  STACK[0x498] = STACK[0xC68];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((3563 * !v7) ^ v0)) - 12))();
}

void sub_193200538()
{
  int v0;

  *(_DWORD *)STACK[0xCE8] = LODWORD(STACK[0xD24]) - 101372955 + LODWORD(STACK[0xD28]) + v0 + 2365 - 3082;
  JUMPOUT(0x1931FFEF0);
}

uint64_t sub_193200584()
{
  char v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  STACK[0xA28] = v1;
  STACK[0xA08] = v2;
  STACK[0x10D8] = v2;
  STACK[0x10F0] = v1;
  LOBYTE(STACK[0x9DB]) = v0;
  LODWORD(STACK[0x10F8]) = v4;
  LODWORD(STACK[0x10FC]) = v5;
  LOBYTE(STACK[0x1077]) = v0;
  LODWORD(STACK[0xD0C]) = v3;
  STACK[0x410] = STACK[0xCD8];
  LODWORD(STACK[0x454]) = STACK[0xCCC];
  STACK[0x540] = STACK[0xD00];
  STACK[0x420] = STACK[0xCD0];
  LODWORD(STACK[0x46C]) = STACK[0xCAC];
  STACK[0x428] = STACK[0xCC0];
  LODWORD(STACK[0x494]) = v5;
  STACK[0x440] = STACK[0xCB8];
  LODWORD(STACK[0x4AC]) = STACK[0xC9C];
  STACK[0x458] = STACK[0xCA0];
  STACK[0x460] = STACK[0xC90];
  STACK[0x478] = STACK[0xC88];
  LODWORD(STACK[0x4CC]) = STACK[0xC98];
  STACK[0x480] = STACK[0xC78];
  STACK[0x488] = STACK[0xC70];
  STACK[0x578] = STACK[0xCB0];
  LODWORD(STACK[0x4DC]) = STACK[0xC64];
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v9
                                      + 8 * ((LOBYTE(STACK[0x1077]) * (v8 ^ (v7 + 1090) ^ 0x6E2)) ^ (v6 + v8 + 1997)))
                          - 8);
  STACK[0x498] = STACK[0xC68];
  return v10();
}

uint64_t sub_193200670()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  LODWORD(STACK[0xD40]) = STACK[0x11F4];
  STACK[0x410] = STACK[0xCD8];
  LODWORD(STACK[0x454]) = STACK[0xCCC];
  STACK[0x540] = STACK[0xD00];
  STACK[0x420] = STACK[0xCD0];
  LODWORD(STACK[0x46C]) = STACK[0xCAC];
  STACK[0x428] = 0;
  LODWORD(STACK[0x494]) = 101330305;
  STACK[0x440] = STACK[0xCB8];
  LODWORD(STACK[0x4AC]) = STACK[0xC9C];
  STACK[0x458] = STACK[0xCA0];
  STACK[0x460] = STACK[0xC90];
  STACK[0x478] = STACK[0xC88];
  LODWORD(STACK[0x4CC]) = STACK[0xC98];
  STACK[0x480] = STACK[0xC78];
  STACK[0x488] = STACK[0xC70];
  STACK[0x578] = STACK[0xCB0];
  LODWORD(STACK[0x4DC]) = STACK[0xC64];
  v2 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((4009 * LOBYTE(STACK[0xD2F])) ^ v0))
                         - (((v0 - 1755784) & 0x7FBFEFFF)
                          + (((v0 - 2027) | 0x842u) ^ 0xFFFFFFFF805ADAE7)));
  STACK[0x498] = STACK[0xC68];
  return v2();
}

uint64_t sub_19320075C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v4 = *(unsigned int *)STACK[0xCE8];
  LODWORD(STACK[0xD44]) = v4;
  STACK[0xD58] = v4;
  v5 = (v4 ^ 0xEBA3FFEFCFB7E5FFLL)
     + (((a1 ^ (v1 - 293)) - v1 - 1643) ^ 0x145C0010682D35CCLL)
     + ((2 * v4) & 0x19F6FCBFELL)
     + LODWORD(STACK[0xD40])
     + ((unint64_t)(LODWORD(STACK[0xD40]) < v3) << 32);
  v6 = (*(unsigned int *)STACK[0xCF0] ^ 0xBEB9DAF7BCE7D6FFLL)
     + 0x4146250881081895
     + ((2 * *(unsigned int *)STACK[0xCF0]) & 0x179CFADFELL);
  v7 = v5 < 0x3DEFEF94;
  STACK[0x410] = STACK[0xCD8];
  LODWORD(STACK[0x454]) = STACK[0xCCC];
  v8 = v5 > v6;
  STACK[0x540] = STACK[0xD00];
  if (v7 != v6 < 0x3DEFEF94)
    v8 = v7;
  STACK[0x420] = STACK[0xCD0];
  LODWORD(STACK[0x46C]) = STACK[0xCAC];
  STACK[0x428] = STACK[0xCC0];
  STACK[0x440] = STACK[0xCB8];
  LODWORD(STACK[0x4AC]) = STACK[0xC9C];
  STACK[0x458] = STACK[0xCA0];
  STACK[0x460] = STACK[0xC90];
  STACK[0x478] = STACK[0xC88];
  LODWORD(STACK[0x4CC]) = STACK[0xC98];
  STACK[0x480] = STACK[0xC78];
  STACK[0x488] = STACK[0xC70];
  STACK[0x578] = STACK[0xCB0];
  LODWORD(STACK[0x4DC]) = STACK[0xC64];
  STACK[0x498] = STACK[0xC68];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((6221 * !v8) ^ a1)) - 8))();
}

uint64_t sub_1932008E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  int v66;
  unint64_t v67;
  unint64_t v68;
  unsigned int v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  int v75;
  unint64_t v76;
  unint64_t v77;

  v73 = STACK[0xCC0];
  v74 = *(_QWORD *)STACK[0xCC0];
  *(_DWORD *)STACK[0xCE8] = LODWORD(STACK[0xD40]) - 101372955 + LODWORD(STACK[0xD44]);
  v75 = v70 ^ 0x689;
  v76 = v74 + STACK[0xD58];
  v77 = *(_QWORD *)(v72 + 8 * (int)v70) + (v70 ^ 0xFFFFFFFFFFFFFF42);
  LODWORD(STACK[0x3DC]) = STACK[0xCE4];
  STACK[0x360] = STACK[0xCD8];
  LODWORD(STACK[0x404]) = STACK[0xCCC];
  STACK[0x3E0] = STACK[0xD00];
  STACK[0x368] = STACK[0xCD0];
  LODWORD(STACK[0x41C]) = STACK[0xCAC];
  STACK[0x378] = v73;
  STACK[0x380] = v76;
  STACK[0x390] = STACK[0xCB8];
  LODWORD(STACK[0x43C]) = STACK[0xC9C];
  STACK[0x398] = STACK[0xCA0];
  STACK[0x3B0] = STACK[0xC90];
  STACK[0x430] = v77;
  STACK[0x3C8] = STACK[0xC88];
  LODWORD(STACK[0x44C]) = STACK[0xC98];
  STACK[0x3D0] = STACK[0xC78];
  STACK[0x3E8] = STACK[0xC70];
  STACK[0x470] = STACK[0xCB0];
  LODWORD(STACK[0x450]) = STACK[0xC64];
  STACK[0x3F0] = STACK[0xC68];
  STACK[0x3F8] = a21;
  STACK[0x4C0] = 0x5D952DACE41797ELL;
  STACK[0x408] = STACK[0xCF8];
  STACK[0x4F0] = 0xFB2A714C852B8875;
  v53 = STACK[0x4F0];
  v54 = STACK[0x408];
  v55 = STACK[0x4C0];
  v56 = STACK[0x3F8];
  STACK[0xD10] = STACK[0x3F0];
  LODWORD(STACK[0xD7C]) = STACK[0x450];
  STACK[0xD80] = STACK[0x470];
  STACK[0xD18] = STACK[0x3E8];
  STACK[0xD30] = STACK[0x3D0];
  LODWORD(STACK[0xDAC]) = STACK[0x44C];
  STACK[0xD38] = STACK[0x3C8];
  v57 = STACK[0x430];
  STACK[0xD50] = STACK[0x3B0];
  STACK[0xD60] = STACK[0x398];
  LODWORD(STACK[0xDD4]) = STACK[0x43C];
  STACK[0xD68] = STACK[0x390];
  STACK[0xD70] = STACK[0x380];
  STACK[0xD88] = STACK[0x378];
  LODWORD(STACK[0xDE8]) = STACK[0x41C];
  STACK[0xD90] = STACK[0x368];
  STACK[0xDC8] = STACK[0x3E0];
  LODWORD(STACK[0xDEC]) = STACK[0x404];
  STACK[0xD98] = STACK[0x360];
  LODWORD(STACK[0xE0C]) = STACK[0x3DC];
  STACK[0xAE8] = v57;
  STACK[0xAA0] = v56;
  STACK[0xB08] = v55;
  v58 = STACK[0xD60];
  v59 = STACK[0xD50];
  v60 = STACK[0xD38];
  v61 = LODWORD(STACK[0xDAC]);
  v62 = STACK[0xD30];
  v63 = STACK[0xD18];
  v64 = STACK[0xD80];
  v65 = LODWORD(STACK[0xD7C]);
  v66 = v71 + ((v75 + 226491843) | 0x72252965) + 2173;
  STACK[0xAA8] = v54;
  STACK[0xB18] = v53;
  STACK[0x1140] = v53;
  STACK[0x11A0] = v54;
  v67 = STACK[0xB08];
  STACK[0x1190] = STACK[0xB08];
  v68 = STACK[0xAA0];
  STACK[0x11A8] = STACK[0xAA0];
  STACK[0x11B8] = STACK[0xAE8];
  return ((uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(a53 + 8 * (((2 * (v54 <= v68 + v67 - 0x5D952DACE41797ELL)) | (8 * (v54 <= v68 + v67 - 0x5D952DACE41797ELL))) ^ v66)) - 8))(v58, v59, v60, v61, v62, v63, v64, v65);
}

void sub_193200A08(int a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t *v10;
  int v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;

  STACK[0xA28] = v2;
  v9 = (a1 + 488702176) | 0x62842441;
  STACK[0xA08] = v3;
  STACK[0x10D8] = v3;
  STACK[0x10F0] = v2;
  LOBYTE(STACK[0x9DB]) = v1;
  LODWORD(STACK[0x10F8]) = v5;
  LODWORD(STACK[0x10FC]) = v6;
  LOBYTE(STACK[0x1077]) = v1;
  LODWORD(STACK[0xD0C]) = v4;
  v10 = &STACK[0x10FC];
  if (v1)
    v10 = &STACK[0xD0C];
  v11 = *(_DWORD *)v10;
  STACK[0x410] = STACK[0xCD8];
  LODWORD(STACK[0x454]) = STACK[0xCCC];
  STACK[0x540] = STACK[0xD00];
  STACK[0x420] = STACK[0xCD0];
  LODWORD(STACK[0x46C]) = STACK[0xCAC];
  STACK[0x428] = STACK[0xCC0];
  LODWORD(STACK[0x494]) = v11;
  STACK[0x440] = STACK[0xCB8];
  LODWORD(STACK[0x4AC]) = STACK[0xC9C];
  STACK[0x458] = STACK[0xCA0];
  STACK[0x460] = STACK[0xC90];
  STACK[0x478] = STACK[0xC88];
  LODWORD(STACK[0x4CC]) = STACK[0xC98];
  STACK[0x480] = STACK[0xC78];
  STACK[0x488] = STACK[0xC70];
  STACK[0x578] = STACK[0xCB0];
  LODWORD(STACK[0x4DC]) = STACK[0xC64];
  STACK[0x498] = STACK[0xC68];
  v12 = STACK[0x498];
  v13 = STACK[0x4DC];
  v14 = STACK[0x578];
  v15 = STACK[0x488];
  v16 = STACK[0x480];
  v17 = STACK[0x4CC];
  v18 = STACK[0x478];
  v19 = STACK[0x460];
  v20 = STACK[0x458];
  v21 = STACK[0x4AC];
  v22 = STACK[0x440];
  v23 = STACK[0x428];
  v24 = STACK[0x46C];
  v25 = STACK[0x420];
  v26 = STACK[0x540];
  v27 = STACK[0x454];
  v28 = STACK[0x410];
  v29 = *(_QWORD *)(v8 + 8 * (v7 + v9 + 58)) + ((v7 + v9 + 968) ^ 0xFFFFFFFFFFFFFBBDLL);
  LODWORD(STACK[0x9F4]) = STACK[0x494];
  STACK[0xA10] = v28;
  LODWORD(STACK[0xA1C]) = v27;
  STACK[0xA50] = v26;
  STACK[0xA20] = v25;
  LODWORD(STACK[0xA3C]) = v24;
  STACK[0xA90] = v29;
  STACK[0xA30] = v22;
  LODWORD(STACK[0xA5C]) = v21;
  STACK[0xA40] = v20;
  STACK[0xA48] = v19;
  STACK[0xA60] = v18;
  LODWORD(STACK[0xA70]) = v17;
  STACK[0xA68] = v16;
  STACK[0xA78] = v15;
  STACK[0xAC0] = v14;
  LODWORD(STACK[0xA74]) = v13;
  STACK[0xA80] = v12;
  STACK[0xA98] = v23;
  JUMPOUT(0x193200D04);
}

void sub_193200BA8()
{
  char v0;

  LOBYTE(STACK[0x9DB]) = v0;
  LOBYTE(STACK[0x1077]) = v0;
  JUMPOUT(0x193200AECLL);
}

void sub_193200BB8()
{
  int v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;

  v0 = STACK[0x560];
  v1 = STACK[0x518];
  v2 = STACK[0x55C];
  v3 = STACK[0x608];
  v4 = STACK[0x508];
  v5 = STACK[0x500];
  v6 = STACK[0x54C];
  v7 = STACK[0x4F8];
  v8 = STACK[0x4E0];
  v9 = STACK[0x4D0];
  v10 = STACK[0x52C];
  v11 = STACK[0x4B8];
  v12 = STACK[0x4B0];
  v13 = STACK[0x5C8];
  v14 = STACK[0x514];
  v15 = STACK[0x4A0];
  LODWORD(STACK[0x564]) = STACK[0x4EC];
  STACK[0x520] = v15;
  LODWORD(STACK[0x574]) = v14;
  STACK[0x638] = v13;
  STACK[0x530] = v12;
  STACK[0x538] = v11;
  LODWORD(STACK[0x59C]) = v10;
  STACK[0x550] = v9;
  STACK[0x568] = v8;
  LODWORD(STACK[0x5B4]) = v0;
  STACK[0x580] = v7;
  LODWORD(STACK[0x5D4]) = v6;
  STACK[0x588] = v5;
  STACK[0x590] = v4;
  STACK[0x658] = v3;
  LODWORD(STACK[0x5E4]) = v2;
  STACK[0x5A0] = v1;
  JUMPOUT(0x193200C5CLL);
}

uint64_t sub_193200DCC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;

  v4 = *(_QWORD *)STACK[0x1100];
  STACK[0x1188] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((v4 != 0) * (v1 + ((v2 + v0 - 2143268904) & 0x7FBFAF67) + 2132)) ^ v0))
                            - 4))();
}

#error "193200F60: call analysis failed (funcsize=82)"

void sub_193200F64()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 4) = v1;
}

uint64_t sub_193200F6C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  STACK[0xCF0] = (unint64_t)&STACK[0x46AAD4E1DD901A24];
  STACK[0xCF8] = (unint64_t)&STACK[0x54D2A68F3DE7FE6A];
  *(_DWORD *)(v7 - 140) = v1 + v4 + (((~(v7 - 144) & 0xB6904E28) - (~(v7 - 144) | 0xB6904E29)) ^ 0x2E0F3D50) * a1 + 2739;
  v8 = sub_193241A88(v7 - 144);
  v9 = *(_DWORD *)(v7 - 144) != v2 + (v4 ^ (v3 + 1570)) - 271;
  LODWORD(STACK[0xCCC]) = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((113 * v9) ^ (v1 + v4 + 3241))) - 8))(v8);
}

uint64_t sub_19320102C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  unint64_t v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  uint64_t v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v47 = a13;
  v48 = a13 | ((unint64_t)(a13 < ((4 * v44) ^ 0x4B168334u)) << 32);
  STACK[0xC30] = v48 + 0x481CC050A767902ELL;
  STACK[0xC80] = v48 + 0x6798BE4C9E278D1ELL;
  v49 = (v47 ^ 0x30E970FE) & (2 * (v47 & 0xB4E978F8)) ^ v47 & 0xB4E978F8;
  v50 = ((2 * (v47 ^ 0x587B007E)) ^ 0xD924F10C) & (v47 ^ 0x587B007E) ^ (2 * (v47 ^ 0x587B007E)) & 0xEC927886;
  v51 = v50 ^ 0x24920882;
  v52 = (v50 ^ 0xC0006000) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0xB249E218) & v51 ^ (4 * v51) & 0xEC927884;
  v54 = v52 ^ 0xEC927886 ^ (v53 ^ 0xA0006000) & (16 * v52);
  v55 = (16 * (v53 ^ 0x4C921886)) & 0xEC927880 ^ 0x24907086 ^ ((16 * (v53 ^ 0x4C921886)) ^ 0xC9278860) & (v53 ^ 0x4C921886);
  v56 = (v54 << 8) & 0xEC927800 ^ v54 ^ ((v54 << 8) ^ 0x92788600) & v55;
  v57 = a13 ^ (2
             * ((v56 << 16) & 0x6C920000 ^ v56 ^ ((v56 << 16) ^ 0x78860000) & ((v55 << 8) & 0x6C920000 ^ 0x6C820000 ^ ((v55 << 8) ^ 0x12780000) & v55)));
  LOBYTE(STACK[0x12CC]) = HIBYTE(v57) ^ 0xBC;
  LOBYTE(STACK[0x12CD]) = BYTE2(v57) ^ 0xE9;
  LOBYTE(STACK[0x12CE]) = (((BYTE1(v57) ^ 0x89) - 2 * ((BYTE1(v57) ^ 0x89) & 7 ^ BYTE1(v57) & 4) + 11) ^ 3) - 8;
  LOBYTE(STACK[0x12CF]) = v57 ^ 0xF4;
  v58 = a16;
  v59 = a16 & 0xD8150F11;
  v60 = 2 * (a16 & 0xD8150F11);
  v61 = ((2 * (a16 ^ 0xC7676B9F)) ^ 0x3EE4C91C) & (a16 ^ 0xC7676B9F) ^ (2 * (a16 ^ 0xC7676B9F)) & 0x1F72648E;
  v62 = v61 ^ 0x1122482;
  v63 = (v61 ^ 0x60400C) & (4 * (v60 & (a16 ^ 0xD7456F9D) ^ v59)) ^ v60 & (a16 ^ 0xD7456F9D) ^ v59;
  v64 = ((4 * v62) ^ 0x7DC99238) & v62 ^ (4 * v62) & 0x1F72648C;
  v65 = (v64 ^ 0x1D400000) & (16 * v63) ^ v63;
  v66 = ((16 * (v64 ^ 0x2326486)) ^ 0xF72648E0) & (v64 ^ 0x2326486) ^ (16 * (v64 ^ 0x2326486)) & 0x1F726480;
  v67 = v65 ^ 0x1F72648E ^ (v66 ^ 0x17224000) & (v65 << 8);
  STACK[0xCB0] = 4
               * (a16 ^ (2
                                     * ((v67 << 16) & 0x1F720000 ^ v67 ^ ((v67 << 16) ^ 0x648E0000) & (((v66 ^ 0x850240E) << 8) & 0x1F720000 ^ 0xD120000 ^ (((v66 ^ 0x850240E) << 8) ^ 0x72640000) & (v66 ^ 0x850240E)))) ^ 0xEEF5C60D)
               - 0x3567FFF6DB3FDCB6;
  v68 = ((2 * (v58 ^ 0xA985F634)) ^ 0xE321F24A) & (v58 ^ 0xA985F634) ^ (2 * (v58 ^ 0xA985F634)) & 0x7190F924;
  v69 = v68 ^ 0x10900925;
  v70 = (v68 ^ 0x70007000) & (4 * (v60 & (v58 ^ 0x9985EE14) ^ v59)) ^ v60 & (v58 ^ 0x9985EE14) ^ v59;
  v71 = ((4 * v69) ^ 0xC643E494) & v69 ^ (4 * v69) & 0x7190F924;
  v72 = (v71 ^ 0x4000E000) & (16 * v70) ^ v70;
  v73 = ((16 * (v71 ^ 0x31901921)) ^ 0x190F9250) & (v71 ^ 0x31901921) ^ (16 * (v71 ^ 0x31901921)) & 0x7190F920;
  v74 = v73 ^ 0x60906925;
  v75 = v72 ^ 0x7190F925 ^ (v73 ^ 0x11009000) & (v72 << 8);
  STACK[0x858] = 0;
  LODWORD(STACK[0x9E4]) = v46;
  LODWORD(STACK[0x9E0]) = v46;
  v76 = *(_QWORD *)(v45 + 8 * v44) - 12;
  LODWORD(STACK[0xEB4]) = a13 - 1259767560;
  v77 = a16 ^ (2
             * ((v75 << 16) & 0x71900000 ^ v75 ^ ((v75 << 16) ^ 0x79250000) & ((v74 << 8) & 0x71900000 ^ 0x61000000 ^ ((v74 << 8) ^ 0x10F90000) & v74)));
  LOBYTE(STACK[0xB54]) = HIBYTE(v77) ^ 0xD9;
  LOBYTE(STACK[0xB55]) = BYTE2(v77) ^ 0x34;
  LOBYTE(STACK[0xB56]) = (((BYTE1(v77) ^ 0xFD) - 2 * ((BYTE1(v77) ^ 0xFD) & 3) + 11) ^ 3) - 8;
  LOBYTE(STACK[0xB57]) = v77 ^ 0x5B;
  LODWORD(STACK[0xED4]) = a16 - 1748298131;
  LOBYTE(STACK[0x687]) = (a16 - 1748298131) < 0xBFB6075C;
  LOBYTE(STACK[0x9DB]) = (_DWORD)a16 == 669708527;
  v78 = v60 & (a16 ^ 0x9695EEC1) ^ a16 & 0xD8150F11;
  v79 = ((2 * (a16 ^ 0xB695ECE3)) ^ 0xDD01C7E4) & (a16 ^ 0xB695ECE3) ^ (2 * (a16 ^ 0xB695ECE3)) & 0x6E80E3F2;
  v80 = (v79 ^ 0x400040C0) & (4 * v78) ^ v78;
  v81 = ((4 * (v79 ^ 0x22802012)) ^ 0xBA038FC8) & (v79 ^ 0x22802012) ^ (4 * (v79 ^ 0x22802012)) & 0x6E80E3F0;
  v82 = (v81 ^ 0x2A0083C0) & (16 * v80) ^ v80;
  v83 = ((16 * (v81 ^ 0x44806032)) ^ 0xE80E3F20) & (v81 ^ 0x44806032) ^ (16 * (v81 ^ 0x44806032)) & 0x6E80E3F0;
  v84 = v82 ^ 0x6E80E3F2 ^ (v83 ^ 0x68002300) & (v82 << 8);
  LODWORD(STACK[0xEEC]) = (4 * a16) ^ (8
                                     * ((v84 << 16) & 0xE800000 ^ v84 ^ ((v84 << 16) ^ 0x3F20000) & (((v83 ^ 0x680C0D2) << 8) & 0xE800000 ^ (((v83 ^ 0x680C0D2) << 8) ^ 0xE30000) & (v83 ^ 0x680C0D2) ^ 0xE000000))) ^ 0x5323D4;
  LODWORD(STACK[0xF14]) = a13 - 1259767556;
  STACK[0xAC0] = v76;
  STACK[0xAE0] = (unint64_t)&STACK[0x858];
  STACK[0xF68] = (unint64_t)&STACK[0x858];
  STACK[0xF70] = STACK[0xAD8];
  STACK[0xF80] = STACK[0xAC8];
  v85 = STACK[0xAC0];
  STACK[0xF88] = STACK[0xAB8];
  STACK[0x1090] = STACK[0xA90];
  STACK[0xF90] = STACK[0xAA8];
  LODWORD(STACK[0x10AC]) = STACK[0xCE4];
  STACK[0xFA8] = STACK[0xAA0];
  STACK[0xFB0] = STACK[0xA98];
  STACK[0xFC0] = STACK[0xA80];
  STACK[0xFC8] = v85;
  v86 = a27(16, 2241923698);
  STACK[0xFD8] = v86;
  STACK[0xAF8] = 0;
  LOBYTE(STACK[0x12CA]) = 0;
  LODWORD(STACK[0xD0C]) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * ((37 * (v86 != 0)) ^ (4 * v44) ^ 0x2E8)) - ((((4 * v44) ^ 0x2E8u) + 835) ^ 0xA1BLL)))(v86, v87, v88, 2141531491, v89, v90, v91, v92, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1932017E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t))
{
  int v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v30 = (_QWORD *)STACK[0xFD8];
  *v30 = 0;
  v30[1] = 0;
  STACK[0xFE8] = (unint64_t)(v30 + 1);
  v31 = a27(4096, 2241923698);
  *(_QWORD *)STACK[0xFD8] = v31;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * (((v31 == 0) * (v27 - 2141531438)) ^ v28))
                            - (v28 ^ 0xCC3u)
                            + 1740))();
}

uint64_t sub_193201844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t (*a50)(unint64_t),uint64_t a51,uint64_t a52,int a53)
{
  uint64_t v53;

  v53 = a50(STACK[0xFD8]);
  STACK[0xAF8] = 0;
  LOBYTE(STACK[0x12CA]) = 0;
  LODWORD(STACK[0xD0C]) = a53;
  LODWORD(STACK[0x10C4]) = STACK[0xD0C];
  LOBYTE(STACK[0xD2F]) = STACK[0x12CA];
  *(_QWORD *)STACK[0xF68] = STACK[0xAF8];
  return ((uint64_t (*)(uint64_t))STACK[0xFC8])(v53);
}

uint64_t sub_1932018DC()
{
  int v0;
  int v1;
  uint64_t v2;

  STACK[0x860] = STACK[0xFC0];
  STACK[0x870] = STACK[0xFB0];
  STACK[0x888] = STACK[0xFA8];
  LODWORD(STACK[0xA1C]) = STACK[0x10AC];
  STACK[0x898] = STACK[0xF90];
  STACK[0x8C8] = STACK[0x1090];
  STACK[0x8B0] = STACK[0xF88];
  STACK[0x8B8] = STACK[0xF80];
  STACK[0x8D0] = STACK[0xF70];
  LODWORD(STACK[0xA3C]) = STACK[0x10C4];
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2
                                                                                 + 8
                                                                                 * ((1230 * LOBYTE(STACK[0xD2F])) ^ (v0 + v1 + 385)))
                                                                     - (v1 ^ 0x7FA52C9Du)
                                                                     + 498))(0x8985C1420805F0C3, 0x767A3EBDF7FA0F3DLL, 0xC0391580E16);
}

uint64_t sub_1932019B0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;

  v4 = a1 ^ 0x6E8u;
  STACK[0xAE8] = *(_QWORD *)(v3 + 8 * a1) + v4 - 1818;
  STACK[0xB00] = STACK[0xFB0];
  STACK[0xB10] = STACK[0xF90];
  STACK[0xB08] = STACK[0x1090];
  STACK[0xB30] = STACK[0xF80];
  STACK[0xB38] = STACK[0xF70];
  LODWORD(STACK[0xD24]) = v1;
  LODWORD(STACK[0x10EC]) = STACK[0xD24];
  STACK[0xFF0] = STACK[0xB38];
  STACK[0xFF8] = STACK[0xB30];
  STACK[0x10E0] = STACK[0xB08];
  v5 = STACK[0xB10];
  STACK[0x1010] = STACK[0xB10];
  v6 = STACK[0xB00];
  STACK[0x1018] = STACK[0xB00];
  v7 = STACK[0xAE8];
  v8 = STACK[0x858];
  STACK[0x1028] = STACK[0x858];
  STACK[0x1030] = v7;
  STACK[0xBE8] = v8;
  v9 = *(_DWORD *)(v8 + 12);
  v8 += 12;
  STACK[0x1050] = v8;
  LODWORD(STACK[0x10F8]) = v9;
  STACK[0xBB8] = v7;
  STACK[0xBC0] = v6;
  STACK[0xBC8] = v8;
  LODWORD(STACK[0xD44]) = STACK[0x10EC];
  STACK[0xBE0] = v5;
  STACK[0xB20] = STACK[0x10E0];
  STACK[0xBF8] = STACK[0xFF8];
  STACK[0xC00] = STACK[0xFF0];
  LODWORD(STACK[0xD7C]) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v9 < 0xFFFFFFFB) * ((257 * (a1 ^ 0x1F8)) ^ 0xA7A)) ^ v4)))();
}

uint64_t sub_193201E04@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v3 = STACK[0x1028];
  v4 = ((a1 + 765797982) | 0x52000507u)
     + (LODWORD(STACK[0x10F8]) ^ 0x33FFFBFFFEBE3F7FLL)
     + ((2 * LODWORD(STACK[0x10F8])) & 0x1FD7C7EFELL)
     - 0x33FFFBFFE163B375;
  v5 = (*(unsigned int *)(STACK[0x1028] + 8) ^ 0xDD3D7D3F25FF4FFFLL)
     + 0x22C282C17700696ELL
     + ((2 * *(_DWORD *)(STACK[0x1028] + 8)) & 0x4BFE9FFE);
  v6 = v4 < 0x9CFFB96D;
  v7 = v4 > v5;
  if (v6 != v5 < 0x9CFFB96D)
    v7 = v6;
  STACK[0xB60] = STACK[0x1030];
  STACK[0xB68] = STACK[0x1018];
  STACK[0xB78] = STACK[0x1050];
  LODWORD(STACK[0xD28]) = STACK[0x10EC];
  STACK[0xB90] = STACK[0x1010];
  STACK[0xB18] = STACK[0x10E0];
  STACK[0xB98] = v3;
  STACK[0xBA0] = STACK[0xFF8];
  STACK[0xBA8] = STACK[0xFF0];
  LODWORD(STACK[0xD40]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2269 * v7) | a1)) - 8))();
}

uint64_t sub_193201F30@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = *(_QWORD *)(v3 + 8 * a2);
  v5 = (a2 + 2783) | 4u;
  STACK[0xC10] = STACK[0x1030];
  STACK[0xC20] = STACK[0x1018];
  STACK[0xC38] = STACK[0x1050];
  LODWORD(STACK[0xDAC]) = STACK[0x10EC];
  STACK[0xC40] = STACK[0x1010];
  STACK[0xB28] = STACK[0x10E0];
  v6 = STACK[0x1028];
  STACK[0xC50] = STACK[0x1028];
  STACK[0xB40] = (v5 ^ 0xFFFFFFFFFFFFF31DLL) + v4;
  STACK[0xC58] = STACK[0xFF8];
  STACK[0xC68] = STACK[0xFF0];
  LODWORD(STACK[0xDD4]) = 4;
  STACK[0xC70] = v6;
  v7 = v5 - 1257;
  STACK[0x10B8] = STACK[0xC70];
  v8 = LODWORD(STACK[0xDD4]);
  STACK[0x10C8] = STACK[0xC68];
  STACK[0x10D0] = STACK[0xC58];
  v9 = STACK[0xB40];
  STACK[0x10D8] = STACK[0xC50];
  STACK[0x1120] = STACK[0xB28];
  STACK[0x10F0] = STACK[0xC40];
  LODWORD(STACK[0x113C]) = STACK[0xDAC];
  STACK[0x1100] = STACK[0xC38];
  STACK[0x1108] = STACK[0xC20];
  STACK[0x1118] = STACK[0xC10];
  STACK[0x1128] = v9;
  v10 = *(unsigned int *)(STACK[0x10B8] + 8);
  STACK[0x1130] = STACK[0x10B8] + 8;
  v11 = (v8 ^ 0xFDDFFF77EB919CFDLL) + v10 + ((v8 << (v7 + 5)) & 0x1D72339FALL) + 0x2200088146E6303;
  STACK[0x1140] = v11;
  LOBYTE(STACK[0xE13]) = v11 < 0xFFFFFFFF;
  STACK[0xB48] = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v10 & 0xFFFFFFFF80000000) != 0)
                                          * ((v7 - v2 - 1923) ^ (a1 + 253) ^ (v7 + 1257))) ^ v7))
                            - 8))();
}

uint64_t sub_193201FAC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  v4 = STACK[0xA8C];
  STACK[0xD88] = STACK[0x970];
  STACK[0xD90] = STACK[0x968];
  STACK[0xD98] = STACK[0x960];
  LODWORD(STACK[0xF2C]) = STACK[0xA74];
  STACK[0xDA0] = STACK[0x948];
  STACK[0xDB0] = STACK[0x940];
  STACK[0xA60] = 0;
  LODWORD(STACK[0xC4C]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3062 * (v4 == (v0 ^ 0x7FA52CF8 ^ (v3 + 361)))) ^ (v1 + v0 + 294)))
                            - 8))();
}

uint64_t sub_19320202C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unsigned int a44)
{
  int v44;
  uint64_t v45;
  unint64_t v46;
  unsigned int v47;
  unint64_t v48;

  v46 = STACK[0x858];
  STACK[0xDB8] = STACK[0x858];
  v47 = *(_DWORD *)(v46 + 12);
  STACK[0xDC0] = v46 + 12;
  v48 = (v47 ^ 0xF7D747DD3F573BFFLL) + STACK[0xC80] + ((((a1 - 1610144) & a44) - 16168297) & (2 * v47));
  STACK[0xD58] = v48;
  LODWORD(STACK[0xC4C]) = v44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v45
                                        + 8
                                        * (((v48 - 0x5F70062A28955025 < 0xFFFFFFFB) * ((766 * (a1 ^ 0x19C)) ^ 0x2E0)) ^ a1))
                            - 8))();
}

uint64_t sub_1932020D4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v8;

  v4 = STACK[0xDB8];
  v5 = STACK[0xD58] - 0x5F70062966485505;
  v6 = (*(unsigned int *)(STACK[0xDB8] + 8) ^ 0xFEFFCFD7FF7BA7EDLL)
     + 0x1003028C2D1532FLL
     + ((((v0 - 2258) | 0x1D1u) - v1 - 384 + 0x17F522273) & (2 * *(unsigned int *)(STACK[0xDB8] + 8)));
  STACK[0x980] = STACK[0xDB0];
  STACK[0x988] = STACK[0xDC0];
  STACK[0x998] = STACK[0xDA0];
  LODWORD(STACK[0xAB4]) = STACK[0xF2C];
  STACK[0x9A0] = v4;
  STACK[0x958] = STACK[0xC30];
  STACK[0x9B8] = STACK[0xD98];
  LODWORD(STACK[0xAD4]) = v3;
  v8 = v6 < 0xC24CFB1C || v5 <= v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((508 * v8) ^ v0)) - 4))();
}

void sub_1932021B0(uint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0xC10] = STACK[0xDB0];
  STACK[0xC20] = STACK[0xDC0];
  STACK[0xC38] = STACK[0xDA0];
  LODWORD(STACK[0xDAC]) = STACK[0xF2C];
  STACK[0xC40] = STACK[0xDB8];
  STACK[0xB28] = STACK[0xC30];
  STACK[0xC50] = STACK[0xD98];
  STACK[0xB40] = *(_QWORD *)(v1 + 8 * a1);
  STACK[0xC58] = STACK[0xD90];
  STACK[0xC68] = STACK[0xD88];
  LODWORD(STACK[0xDD4]) = STACK[0xF14];
  JUMPOUT(0x193202214);
}

uint64_t sub_19320221C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  v4 = STACK[0xAD4];
  STACK[0xDD8] = STACK[0x9B8];
  STACK[0xD80] = STACK[0x958];
  STACK[0xDE0] = STACK[0x9A0];
  LODWORD(STACK[0xF30]) = STACK[0xAB4];
  STACK[0xDF0] = STACK[0x998];
  STACK[0xDF8] = STACK[0x988];
  STACK[0xE00] = STACK[0x980];
  STACK[0xA60] = 0;
  LODWORD(STACK[0xC4C]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((v4 == v3) * (((v0 + v1 + 1291) | 0x810) ^ 0x37F)) ^ (v0 + v1 + 294)))
                            - 8))();
}

uint64_t sub_193202298@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  _BYTE *v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  _DWORD *v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v10 = (unint64_t *)STACK[0xDE0];
  v11 = *(_QWORD *)STACK[0xDE0];
  v12 = (_DWORD *)STACK[0xDF8];
  v13 = (*(_DWORD *)STACK[0xDF8] ^ 0x7EFBFDFC) - 2130445078 + ((2 * *(_DWORD *)STACK[0xDF8]) & 0xFDF7FBF8);
  *(_BYTE *)(v11 + v13 + ((a1 + 903741479) & 0xCA21F75E)) = v8[2];
  *(_BYTE *)(v11 + v13 + 1307) = v8[3];
  *(_BYTE *)(v11 + v13 + 1308) = v8[4];
  *(_BYTE *)(v11 + v13 + ((a1 + 1374050923) & 0xAE199CFC) + 33) = v8[5];
  v14 = (*v12 + 4);
  *v12 = v14;
  v15 = ((2 * v14) & 0x1DE7EF73ELL) + (v14 ^ 0xBFDF3B6DEF3F7B9FLL);
  v16 = (STACK[0xD80] ^ 0xA7CA3F0E8DC5CC8ALL) & (2 * (STACK[0xD80] & 0xB7E33FAF0D81E8CALL)) ^ STACK[0xD80] & 0xB7E33FAF0D81E8CALL;
  v17 = ((2 * (STACK[0xD80] ^ 0xC48E781E87C4CD0ELL)) ^ 0xE6DA8F63148A4B88) & (STACK[0xD80] ^ 0xC48E781E87C4CD0ELL) ^ (2 * (STACK[0xD80] ^ 0xC48E781E87C4CD0ELL)) & 0x736D47B18A4525C4;
  v18 = v17 ^ 0x112540908A452444;
  v19 = (v17 ^ 0x6208072000000100) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0xCDB51EC629149710) & v18 ^ (4 * v18) & 0x736D47B18A4525C4;
  v21 = (v20 ^ 0x4125068008040500) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x32484131824120C4)) ^ 0x36D47B18A4525C40) & (v20 ^ 0x32484131824120C4) ^ (16 * (v20 ^ 0x32484131824120C4)) & 0x736D47B18A4525C0;
  v23 = (v22 ^ 0x3244431080400400) & (v21 << 8) ^ v21;
  v24 = (((v22 ^ 0x412904A10A052184) << 8) ^ 0x6D47B18A4525C400) & (v22 ^ 0x412904A10A052184) ^ ((v22 ^ 0x412904A10A052184) << 8) & 0x736D47B18A452500;
  v25 = STACK[0xD80] ^ (2 * (v24 & 0x201004400000000 ^ v23 ^ (v24 ^ 0x6145018000050000) & (v23 << 16)));
  v26 = *v10;
  STACK[0xE18] = v26;
  STACK[0xDC8] = v15;
  STACK[0xE28] = v25 ^ 0xE2528463148A4B88;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((114 * (v15 + v26 + 0x4020C49210C08461 < a8)) ^ a1)) - 8))();
}

uint64_t sub_19320257C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xF34]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 + ((v0 - 4216061) & 0x7FE57D67) + 365) * (v1 == 0)) ^ v0))
                            - ((v0 + 2838) ^ 0x101ELL)))();
}

uint64_t sub_1932025C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v8 = (v3 - 11);
  v9 = (v8 ^ 0x4020D095A2188270) + STACK[0xDC8];
  STACK[0xE60] = v9;
  v10 = LODWORD(STACK[0xF34]);
  STACK[0xEB8] = v10;
  STACK[0x9A8] = 0;
  *(_BYTE *)(STACK[0xE18] + v5 + v9) = *(_BYTE *)(v4 + v5 + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)(((v10 != 1) * v7) ^ v8)) - 12))();
}

void sub_193202660()
{
  JUMPOUT(0x193202610);
}

uint64_t sub_193202668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  LODWORD(STACK[0xF44]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v4 ^ (975 * (v5 != 0))))
                            - ((((v4 + 823064508) & 0xCEF10BE9) - v6 - 2119) ^ (unint64_t)(a4 + 8))))();
}

uint64_t sub_1932026B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X4>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v6 = STACK[0xDC8] - 0x36597A2BE7398ADCLL;
  STACK[0xF08] = v6;
  v7 = LODWORD(STACK[0xF44]);
  STACK[0x9C8] = v7;
  v8 = (((a4 + 645922725) | 0x59252502u) ^ 0xFFFFFFFF805AD298) + v7;
  v9 = (a3 & (2 * v8)) + (v8 ^ a2);
  *(_BYTE *)(STACK[0xE18] + v9 + v6) = *(_BYTE *)(v4 + v9 + a1);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1428 * (v8 == 0)) ^ a4)))();
}

uint64_t sub_193202744()
{
  unint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;

  STACK[0x9A8] = v0;
  *(_DWORD *)STACK[0xDF8] += LODWORD(STACK[0xEB4]);
  v5 = STACK[0x858];
  STACK[0xE30] = STACK[0x858];
  v6 = *(_DWORD *)(v5 + 12);
  STACK[0xE38] = v5 + 12;
  v7 = (v6 ^ 0x3567FFF6DB3FDCB6) + STACK[0xCB0] + ((2 * v6) & 0x1B67FB96CLL);
  STACK[0xF48] = v7;
  STACK[0xA60] = 0;
  LODWORD(STACK[0xC4C]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((3708 * (v7 < 0xFFFFFFFB)) ^ (v1 + v2 + 294)))
                            - ((v2 - 2141530940) ^ 0x223)))();
}

uint64_t sub_1932027F4@<X0>(char a1@<W3>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v7;

  v4 = STACK[0xE30];
  v5 = (*(unsigned int *)(STACK[0xE30] + 8) ^ 0x67FEF15FFEA7E7F9)
     - 0x67FEF15FA23B4905
     + (((unint64_t)*(unsigned int *)(STACK[0xE30] + 8) << ((a2 + 60) ^ (a1 + 3))) & 0x1FD4FCFF2);
  v7 = v5 > 0x5C6C9EF3 && STACK[0xF48] + 1550622456 > v5;
  STACK[0x9D0] = STACK[0xE00];
  STACK[0x9E8] = STACK[0xDF8];
  STACK[0xA00] = STACK[0xDF0];
  LODWORD(STACK[0xAF4]) = STACK[0xF30];
  STACK[0xA08] = STACK[0xDE0];
  STACK[0x9F8] = STACK[0xD80];
  STACK[0xA10] = STACK[0xDD8];
  STACK[0xA20] = STACK[0xE38];
  STACK[0xA30] = v4;
  LODWORD(STACK[0xB58]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1646 * v7) ^ a2)) - 12))();
}

void sub_1932028D8(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8 * a1);
  STACK[0xC10] = STACK[0xE00];
  STACK[0xC20] = STACK[0xDF8];
  STACK[0xC38] = STACK[0xDF0];
  LODWORD(STACK[0xDAC]) = STACK[0xF30];
  STACK[0xC40] = STACK[0xDE0];
  STACK[0xB28] = STACK[0xD80];
  STACK[0xC50] = STACK[0xDD8];
  STACK[0xB40] = v2 + ((a1 - 1010516540) & 0x3C3B4CF5) - 3313;
  STACK[0xC58] = STACK[0xE38];
  v3 = STACK[0xE30];
  STACK[0xC68] = STACK[0xE30];
  LODWORD(STACK[0xDD4]) = STACK[0xEEC];
  STACK[0xC70] = v3;
  JUMPOUT(0x193202954);
}

uint64_t sub_193202A58@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  unint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((a3 << (v4 + 28) > v3) * (((v4 - 957) | a1) ^ a2)) ^ v4))
                            - 8))();
}

uint64_t sub_193202A8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((v4 & 0xFFFFFFFF80000000) != 0)
                                          * ((v5 - v6 - 1923) ^ (a4 + 253) ^ (v5 + 1257))) ^ v5))
                            - 8))();
}

uint64_t sub_193202AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X8>)
{
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  STACK[0xB48] = a3;
  STACK[0x1190] = a3;
  LODWORD(STACK[0xDE8]) = v4;
  STACK[0x11C8] = v3;
  v5 = STACK[0x1108];
  STACK[0x988] = STACK[0x1108];
  v6 = STACK[0x1100];
  STACK[0x998] = STACK[0x1100];
  v7 = STACK[0x113C];
  LODWORD(STACK[0xAB4]) = STACK[0x113C];
  v8 = STACK[0x10F0];
  STACK[0x9A0] = STACK[0x10F0];
  v9 = STACK[0x1120];
  STACK[0x958] = STACK[0x1120];
  v10 = STACK[0x10D8];
  STACK[0x9B8] = STACK[0x10D8];
  v11 = STACK[0x1118];
  v12 = STACK[0x1118];
  STACK[0x980] = STACK[0x1118];
  STACK[0x9D0] = v11;
  STACK[0x9E8] = v5;
  STACK[0xA00] = v6;
  LODWORD(STACK[0xAF4]) = v7;
  STACK[0xA08] = v8;
  STACK[0x9F8] = v9;
  STACK[0xA10] = v10;
  v13 = STACK[0x10D0];
  STACK[0xA20] = STACK[0x10D0];
  v14 = STACK[0x10C8];
  STACK[0xA30] = STACK[0x10C8];
  LODWORD(v11) = STACK[0xDE8];
  LODWORD(STACK[0xAD4]) = STACK[0xDE8];
  LODWORD(STACK[0xB58]) = v11;
  LODWORD(STACK[0xBDC]) = v11;
  STACK[0xB60] = v12;
  STACK[0xB68] = STACK[0x1108];
  STACK[0xB78] = STACK[0x1100];
  LODWORD(STACK[0xD28]) = STACK[0x113C];
  STACK[0xB90] = STACK[0x10F0];
  STACK[0xB18] = STACK[0x1120];
  STACK[0xB98] = STACK[0x10D8];
  STACK[0xBA0] = v13;
  STACK[0xBA8] = v14;
  LODWORD(STACK[0xD40]) = v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x1128])(a1, a2, 0xC0391580E16);
}

uint64_t sub_193203138()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v4 = STACK[0xD40];
  STACK[0x1058] = STACK[0xBA8];
  STACK[0x1060] = STACK[0xBA0];
  STACK[0x1078] = STACK[0xB98];
  v5 = STACK[0xB18];
  STACK[0x1110] = STACK[0xB18];
  v6 = STACK[0xB90];
  STACK[0x1080] = STACK[0xB90];
  v7 = STACK[0xD28];
  LODWORD(STACK[0x10FC]) = STACK[0xD28];
  v8 = STACK[0xB78];
  STACK[0x1098] = STACK[0xB78];
  v9 = STACK[0xB68];
  STACK[0x10A0] = STACK[0xB68];
  v10 = STACK[0xB60];
  STACK[0x10B0] = STACK[0xB60];
  STACK[0xBB8] = v10;
  STACK[0xBC0] = v9;
  STACK[0xBC8] = v8;
  LODWORD(STACK[0xD44]) = v7;
  STACK[0xBE0] = v6;
  STACK[0xB20] = v5;
  STACK[0xBE8] = STACK[0x1078];
  STACK[0xBF8] = STACK[0x1060];
  STACK[0xC00] = STACK[0x1058];
  LODWORD(STACK[0xD7C]) = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v4 == v3) * (((v0 + 476058039) & 0x63FAC7F3) - 1796)) ^ (v1 + v0 + 1689))))();
}

uint64_t sub_1932031F4@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(void);

  v2 = STACK[0x1078];
  v3 = *(_QWORD *)STACK[0x1078];
  v4 = (_DWORD *)STACK[0x1098];
  v5 = STACK[0x10FC];
  v6 = v5 + 451170848 - (((a1 ^ 0x7FA52A75) - 1239189799) & (2 * v5));
  v7 = ((2 * *v4) & 0x77B7FBF8) + (*v4 ^ 0x3BDBFDFC) - 1004273148;
  *(_BYTE *)(v3 + v7) = HIBYTE(v6) ^ 0x1A;
  *(_BYTE *)(v3 + v7 + 1) = BYTE2(v6) ^ 0xE4;
  *(_BYTE *)(v3 + v7 + 2) = (((BYTE1(v6) ^ 0x52) - 2 * ((BYTE1(v6) ^ 0x52) & 7 ^ BYTE1(v6) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v3 + v7 + 3) = v6 ^ 0x20;
  *v4 += 4;
  STACK[0xBB8] = STACK[0x10B0];
  STACK[0xBC0] = STACK[0x10A0];
  STACK[0xBC8] = (unint64_t)v4;
  LODWORD(STACK[0xD44]) = v5;
  STACK[0xBE0] = STACK[0x1080];
  STACK[0xB20] = STACK[0x1110];
  STACK[0xBE8] = v2;
  STACK[0xBF8] = STACK[0x1060];
  STACK[0xC00] = STACK[0x1058];
  LODWORD(STACK[0xD7C]) = v1;
  v8 = STACK[0xD7C];
  v9 = STACK[0xC00];
  v10 = STACK[0xBF8];
  v11 = STACK[0xBE8];
  v12 = STACK[0xB20];
  v13 = STACK[0xBE0];
  v14 = STACK[0xD44];
  v15 = STACK[0xBC8];
  v16 = STACK[0xBC0];
  v17 = (uint64_t (*)(void))STACK[0xBB8];
  STACK[0x860] = STACK[0xBB8];
  STACK[0x870] = v16;
  STACK[0x888] = v15;
  LODWORD(STACK[0xA1C]) = v14;
  STACK[0x898] = v13;
  STACK[0x8C8] = v12;
  STACK[0x8B0] = v11;
  STACK[0x8B8] = v10;
  STACK[0x8D0] = v9;
  LODWORD(STACK[0xA3C]) = v8;
  STACK[0x8D8] = (unint64_t)v17;
  STACK[0x8E0] = v16;
  STACK[0x8F0] = v15;
  LODWORD(STACK[0xA5C]) = v14;
  STACK[0x8F8] = v13;
  STACK[0x918] = v12;
  STACK[0x908] = v11;
  STACK[0x910] = v10;
  STACK[0x928] = v9;
  LODWORD(STACK[0xA70]) = v8;
  STACK[0x940] = (unint64_t)v17;
  STACK[0x948] = v15;
  LODWORD(STACK[0xA74]) = v14;
  STACK[0x960] = v11;
  STACK[0x968] = v10;
  STACK[0x970] = v9;
  LODWORD(STACK[0xA8C]) = v8;
  return v17();
}

uint64_t sub_1932033A0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  v3 = STACK[0xB58];
  STACK[0xE48] = STACK[0xA30];
  STACK[0xE58] = STACK[0xA20];
  STACK[0xE70] = STACK[0xA10];
  STACK[0xF98] = STACK[0x9F8];
  STACK[0xE78] = STACK[0xA08];
  LODWORD(STACK[0xF64]) = STACK[0xAF4];
  STACK[0xE88] = STACK[0xA00];
  STACK[0xE90] = STACK[0x9E8];
  STACK[0xE98] = STACK[0x9D0];
  STACK[0xA60] = 0;
  LODWORD(STACK[0xC4C]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2499 * (v3 == ((v0 + v1 + 2378) ^ 0x60ADDD8))) ^ (v0 + v1 + 294)))
                            - 8))();
}

uint64_t sub_19320342C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  unsigned int v9;

  v7 = *(_QWORD *)STACK[0xE48];
  v8 = (_DWORD *)STACK[0xE58];
  v9 = ((*(_DWORD *)STACK[0xE58] << ((v4 - 104) ^ 0x5A)) & 0xB7B7FBBA)
     + (*(_DWORD *)STACK[0xE58] ^ 0xDBDBFDDD)
     + 606339619;
  *(_BYTE *)(v7 + v9) = STACK[0xB54];
  *(_BYTE *)(v7 + v9 + 1) = STACK[0xB55];
  *(_BYTE *)(v7 + v9 + 2) = STACK[0xB56];
  *(_BYTE *)(v7 + v9 + 3) = STACK[0xB57];
  LODWORD(v7) = *v8 + (v4 ^ 0x7FA524A4 ^ a4);
  LODWORD(STACK[0xF7C]) = v7;
  *v8 = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1400 * (v5 & ~LOBYTE(STACK[0x9DB]))) ^ v4)))();
}

uint64_t sub_1932034F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;
  int v30;
  _DWORD *v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  int v36;
  unsigned int v37;
  _BOOL4 v38;

  v30 = STACK[0xF7C];
  LODWORD(STACK[0xB5C]) = STACK[0xF7C];
  LODWORD(STACK[0xB84]) = 260684221;
  v31 = (_DWORD *)STACK[0xE58];
  v32 = LOBYTE(STACK[0x687]);
  v33 = STACK[0xED4];
  v34 = *(_QWORD *)STACK[0xE48];
  v35 = *(_DWORD *)(a28 + 4 * (((v28 - 695001319) ^ (a4 + 176) ^ 0x8FD36B24) + 260684221));
  v36 = v35 + 451170848 - ((2 * v35) & 0x35C8A440);
  v37 = ((2 * v30) & 0xB7DFFB3C) + (v30 ^ 0x5BEFFD9E) - 1542454686;
  *(_BYTE *)(v34 + v37) = HIBYTE(v36) ^ 0x1A;
  *(_BYTE *)(v34 + v37 + 1) = BYTE2(v36) ^ 0xE4;
  *(_BYTE *)(v34 + v37 + 2) = (((BYTE1(v36) ^ 0x52) - 2 * ((BYTE1(v36) ^ 0x52) & 7 ^ BYTE1(v36) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v34 + v37 + 3) = v36 ^ 0x20;
  *v31 += 4;
  v38 = v33 > 0xBFB6075D;
  if (v32)
    v38 = v32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((v28 - 695001319) | (2 * v38))) - 4))();
}

uint64_t sub_193203640@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int *a16, void (*a17)(uint64_t), void (*a18)(uint64_t), uint64_t (*a19)(uint64_t))
{
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  unint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;

  v22 = v19 + a1;
  v23 = (v19 + a1 - 109) | 0xE0;
  v24 = STACK[0x858];
  STACK[0xEA8] = STACK[0x858];
  v25 = a1 - 1477802278;
  STACK[0x850] = 0;
  LODWORD(STACK[0x9F4]) = 0;
  a18(a15);
  v26 = *a16;
  v27 = *(_QWORD *)v24;
  v28 = *(_DWORD *)(v24 + 12);
  STACK[0xEC0] = v24 + 12;
  v29 = STACK[0xCF0];
  v30 = STACK[0xCF8];
  v31 = 597255653 * ((((2 * (v21 - 144)) | 0xA2226ED4) - (v21 - 144) - 1360082794) ^ 0x581A48F3);
  *(_DWORD *)(v21 - 128) = (v26 ^ 0xAD59FFFE) - v31 + ((2 * v26) & 0x5AB3FFFC) + 2009065402;
  *(_DWORD *)(v21 - 112) = v22 + v31 + 3119;
  *(_QWORD *)(v21 - 136) = v29;
  *(_DWORD *)(v21 - 140) = v31 + v28 + 1581691396 - ((v28 << ((-93 * (v23 ^ 0xE9)) ^ 0x2E)) & 0xBC8D6408);
  *(_QWORD *)(v21 - 104) = v30;
  *(_QWORD *)(v21 - 120) = v27;
  a17(v21 - 144);
  v32 = *(_DWORD *)(v21 - 144);
  v33 = a19(a15);
  LODWORD(STACK[0xBB4]) = v32;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * (v25 ^ 0x278FBC35 ^ (1521 * (((v32 - v25) | (v25 - v32)) >= 0))))
                                          - 4))(v33);
}

uint64_t sub_1932037C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t), unsigned int *a18, uint64_t a19, uint64_t (*a20)(_QWORD, uint64_t, uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  uint64_t v61;

  v55 = 486723911 * ((0xFE23AC14B644BD98 - (v49 | 0xFE23AC14B644BD98) + a48) ^ 0x3362887AF97122FDLL);
  v56 = *(_QWORD *)(v52 + 8 * v51) - v55 - 8;
  *(_QWORD *)(v54 - 144) = v48;
  *(_QWORD *)(v54 - 136) = v56;
  *(_DWORD *)(v54 - 128) = v51 - 71465943 - v55;
  a17(v54 - 144);
  v57 = a20(*a18, a19, v50);
  v58 = *(_QWORD *)(v52 + 8 * (int)((((v51 ^ 0xB5B) - v53 - 2043) ^ 0xA9866E5D) & v51));
  v59 = ((2 * v57) & 0x6E9FB8BE) + (v57 ^ 0x374FDC5F);
  v60 = 486723911 * ((0x942F13DF21827795 - (a47 | 0x942F13DF21827795) + a46) ^ 0x81D99D532BC8032BLL);
  *(_DWORD *)(v54 - 128) = v51 - 71465943 - v60;
  *(_QWORD *)(v54 - 144) = v48;
  *(_QWORD *)(v54 - 136) = v58 - v60 - 8;
  v61 = ((uint64_t (*)(uint64_t))a17)(v54 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v52 + 8 * (v51 ^ 0x9D4 ^ (1601 * (v59 == 927980639)))) - 8))(v61);
}

uint64_t sub_193203940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49)
{
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  unint64_t v56;
  int v57;
  int v58;
  uint64_t v59;

  a25(a22);
  v52 = *(_QWORD *)STACK[0xEA8];
  v53 = *(_DWORD *)STACK[0xEC0];
  v54 = *a23 ^ 0x2519EFBF;
  v55 = ((v49 + 632) ^ 0x4A33D592) & (2 * *a23);
  v56 = STACK[0xCF8];
  v57 = 597255653 * ((((v51 - 144) | 0x1EBE60FB) - (v51 - 144) + ((v51 - 144) & 0xE1419F00)) ^ 0x17B51F62);
  *(_QWORD *)(v51 - 136) = STACK[0xCF0];
  *(_QWORD *)(v51 - 120) = v52;
  *(_QWORD *)(v51 - 104) = v56;
  *(_DWORD *)(v51 - 112) = v57 + v49 + 1076;
  *(_DWORD *)(v51 - 140) = v57 + v53 + 1581691396 - ((2 * v53) & 0xBC8D6408);
  *(_DWORD *)(v51 - 128) = v54 - v57 + v55 - 2055;
  a24(v51 - 144);
  v58 = *(_DWORD *)(v51 - 144);
  v59 = a26(a22);
  LODWORD(STACK[0xBB4]) = v58;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v50
                                                      + 8
                                                      * ((23
                                                        * (LODWORD(STACK[0xBB4]) != ((v49 - 1231117) & a49) - 1746237737)) ^ (v49 + 632)))
                                          - 8))(v59);
}

void sub_193203AB8(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  STACK[0x838] = 0;
  v2 = *(_QWORD *)(v1 + 8 * a1);
  STACK[0xA80] = STACK[0xE98];
  STACK[0xA98] = STACK[0xE90];
  STACK[0xAA0] = STACK[0xE88];
  LODWORD(STACK[0xCE4]) = STACK[0xF64];
  STACK[0xAA8] = STACK[0xE78];
  STACK[0xA90] = STACK[0xF98];
  STACK[0xAB8] = STACK[0xE70];
  STACK[0xAC0] = v2;
  STACK[0xAC8] = STACK[0xE58];
  STACK[0xAD8] = STACK[0xE48];
  JUMPOUT(0x193201708);
}

uint64_t sub_193203B1C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  STACK[0x480] = (unint64_t)&STACK[0x46AAD4E1DD9024AC];
  STACK[0x488] = (unint64_t)&STACK[0x54D2A68F3DE8074A];
  *(_DWORD *)(v7 - 140) = v1 + v4 + ((v7 - 144) ^ 0x989F7379) * a1 + 2739;
  v8 = sub_193241A88(v7 - 144);
  v9 = *(_DWORD *)(v7 - 144) != v2;
  LODWORD(STACK[0x1A10]) = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((v1 + v4 + 735) | (32 * v9)))
                                          - (v4 ^ (v3 + 1501) ^ 0x148)))(v8);
}

uint64_t sub_193203BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t))
{
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  STACK[0x12E8] = 0;
  LOBYTE(STACK[0x9DB]) = a21 == 0;
  if (a21)
    v32 = 2;
  else
    v32 = 1;
  LODWORD(STACK[0x5EC]) = v32;
  LODWORD(STACK[0x12E4]) = v31;
  LODWORD(STACK[0x12D0]) = v31;
  v33 = *(_QWORD *)(v30 + 8 * (int)v27) + (v27 ^ 0xFFFFFFFFFFFFFEB0);
  LODWORD(STACK[0x604]) = a15;
  STACK[0x1A30] = v33;
  STACK[0x1A48] = 0;
  STACK[0x1A78] = 0;
  STACK[0x1AB0] = (unint64_t)&STACK[0x12E8];
  STACK[0xBA0] = (unint64_t)&STACK[0x12E8];
  LODWORD(STACK[0xC4C]) = STACK[0x1AAC];
  STACK[0xBA8] = STACK[0x1AA0];
  LODWORD(STACK[0xC64]) = STACK[0x1A9C];
  STACK[0xD00] = STACK[0x1278];
  STACK[0xBB8] = STACK[0x1A90];
  STACK[0xBC0] = STACK[0x1A88];
  LODWORD(STACK[0xC98]) = STACK[0x1A84];
  STACK[0xBC8] = STACK[0x1A78];
  STACK[0xBE0] = STACK[0x1A70];
  LODWORD(STACK[0xC9C]) = STACK[0x1A6C];
  STACK[0xBE8] = STACK[0x1A60];
  LODWORD(STACK[0xCAC]) = STACK[0x1A5C];
  LODWORD(STACK[0xCCC]) = STACK[0x1A58];
  STACK[0xBF8] = STACK[0x1A50];
  STACK[0xC00] = STACK[0x1A48];
  STACK[0xC10] = STACK[0x1A40];
  STACK[0xD48] = STACK[0x1228];
  STACK[0xC20] = STACK[0x1A38];
  v34 = STACK[0x1A30];
  STACK[0xC38] = STACK[0x1A28];
  STACK[0xC40] = STACK[0x1A20];
  STACK[0xC50] = STACK[0x1A18];
  LODWORD(STACK[0xCE4]) = STACK[0x1A14];
  STACK[0xC58] = v34;
  v35 = a27(16, 2241923698);
  STACK[0xC68] = v35;
  STACK[0x1AB8] = 0;
  *(_BYTE *)(v29 + 1) = 0;
  LODWORD(STACK[0x1AC0]) = 101330303;
  return ((uint64_t (*)(void))(*(_QWORD *)(v30
                                        + 8
                                        * (int)((55 * ((((v27 ^ 0x94) - v28 + 1) ^ (v35 == 0)) & 1)) ^ v27 ^ 0x694))
                            - (v27 ^ 0x148)))();
}

uint64_t sub_193203C2C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  STACK[0x718] = (unint64_t)&STACK[0x46AAD4E1DD902A7C];
  STACK[0x730] = (unint64_t)&STACK[0x54D2A68F3DE812CE];
  *(_DWORD *)(v6 - 140) = v1 + ((v6 - 54777677 - 2 * ((v6 - 144) & 0xFCBC2943)) ^ 0x64235A3A) * a1 + v3 + 2739;
  v7 = sub_193241A88(v6 - 144);
  v8 = ((*(_DWORD *)(v6 - 144) - (v3 - 1131933772)) | (v3 - 1131933772 - *(_DWORD *)(v6 - 144))) >= 0;
  LODWORD(STACK[0x1B04]) = v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (int)((v2 + ((v3 - 447941995) & 0x9B0DE0F7) - 721) ^ (v3 - 1131933772) ^ (92 * v8)))
                                          - 8))(v7);
}

uint64_t sub_193203D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  STACK[0x1898] = 0;
  *(_DWORD *)(v58 - 256) = v57;
  LODWORD(STACK[0x1E5C]) = v57;
  *(_BYTE *)(v55 + 1) = a51 == 0;
  if (a51)
    v59 = 3;
  else
    v59 = 2;
  v60 = *(_QWORD *)(v56 + 8 * v54);
  v61 = ((a13 & 0xB94645EE) << ((v54 + 97) ^ 0x54)) & (a13 ^ 0xBD3405CD) ^ a13 & 0xB94645EE;
  v62 = ((2 * (a13 ^ 0xAFB80F91)) ^ 0x2DFC94FE) & (a13 ^ 0xAFB80F91) ^ (2 * (a13 ^ 0xAFB80F91)) & 0x16FE4A7E;
  v63 = v62 ^ 0x12024A01;
  v64 = (v62 ^ 0x14384079) & (4 * v61) ^ v61;
  v65 = ((4 * v63) ^ 0x5BF929FC) & v63 ^ (4 * v63) & 0x16FE4A7C;
  v66 = (v65 ^ 0x12F80863) & (16 * v64) ^ v64;
  v67 = ((16 * (v65 ^ 0x4064203)) ^ 0x6FE4A7F0) & (v65 ^ 0x4064203) ^ (16 * (v65 ^ 0x4064203)) & 0x16FE4A70;
  v68 = v66 ^ 0x16FE4A7F ^ (v67 ^ 0x6E4020F) & (v66 << 8);
  v69 = a13 ^ (2
             * ((v68 << 16) & 0x16FE0000 ^ v68 ^ ((v68 << 16) ^ 0x4A7F0000) & (((v67 ^ 0x101A480F) << 8) & 0x16FE0000 ^ 0xB40000 ^ (((v67 ^ 0x101A480F) << 8) ^ 0x7E4A0000) & (v67 ^ 0x101A480F))));
  if (v51 != 0x43B51972E76A1B48)
    v59 = 5;
  LODWORD(STACK[0x55C]) = v59;
  v70 = a13 | ((unint64_t)(a13 < 0x46B9BA12) << 32);
  STACK[0x878] = v70 + 0x5DB60D3D47B3417ELL;
  STACK[0x8A0] = v70 - 0x570547743CDCFFD3;
  LOBYTE(STACK[0xB54]) = HIBYTE(v69) ^ 0x90;
  LOBYTE(STACK[0xB55]) = BYTE2(v69) ^ 0x46;
  LOBYTE(STACK[0xB56]) = (((BYTE1(v69) ^ 0xD1) - 2 * ((BYTE1(v69) ^ 0xD1) & 7 ^ BYTE1(v69) & 4) + 11) ^ 3) - 8;
  LOBYTE(STACK[0xB57]) = v69 ^ 0x10;
  LODWORD(STACK[0x560]) = a13 - 1186576914;
  v71 = v51 == 0x43B51972E76A1B48 || v52 == 0x3661B8258914B089;
  LOBYTE(STACK[0x687]) = v59 > 2;
  STACK[0x738] = v52 - 0x3661B8258914B089;
  STACK[0x740] = v51 - 0x43B51972E76A1B48;
  LOBYTE(STACK[0x9DB]) = v71;
  LODWORD(STACK[0x564]) = a13 - 1186576910;
  LODWORD(STACK[0x574]) = a15;
  STACK[0x1A30] = v60 - 12;
  STACK[0x1270] = 0;
  STACK[0xDE0] = (unint64_t)&STACK[0x1898];
  STACK[0xDF0] = STACK[0x12C0];
  LODWORD(STACK[0xD7C]) = STACK[0x1B84];
  STACK[0xE28] = STACK[0x1278];
  STACK[0xDF8] = STACK[0x12B8];
  STACK[0xE00] = STACK[0x12B0];
  LODWORD(STACK[0xDAC]) = STACK[0x1B80];
  LODWORD(STACK[0xDD4]) = STACK[0x1B44];
  LODWORD(STACK[0xDE8]) = STACK[0x1B40];
  STACK[0xE18] = STACK[0x12A8];
  LODWORD(STACK[0xDEC]) = STACK[0x1B3C];
  STACK[0xE30] = STACK[0x12A0];
  LODWORD(STACK[0xE0C]) = STACK[0x1B2C];
  STACK[0xE38] = STACK[0x1298];
  STACK[0xE48] = STACK[0x1288];
  STACK[0xE60] = STACK[0x1228];
  STACK[0xE58] = STACK[0x1280];
  LODWORD(STACK[0xE14]) = STACK[0x1B14];
  STACK[0xE70] = STACK[0x1270];
  STACK[0xE78] = STACK[0x1268];
  STACK[0xE88] = STACK[0x1A30];
  v72 = a27(16, 2241923698);
  STACK[0xE90] = v72;
  *(_BYTE *)(v55 + 3077) = 0;
  LODWORD(STACK[0x1B94]) = v53 - 2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (int)(((v72 != 0) * (((v54 + 1535181678) | 0x24242905) - 2141527970 + ((v54 + 534689427) & 0xE0214DFF) + 48)) ^ (v54 + 609))))(v72, v73, v74, v75, v76, v77, v78, v79, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_193204000()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  v4 = STACK[0xBDC];
  LODWORD(STACK[0xFB8]) = STACK[0xBDC];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v0 - 1137135467) ^ 0x3BDDDFE6) + 2910) ^ (v0 - 1137135467) & 0xC4222F1F)
                                     * (v4 == v3)) ^ (v1 + v0 + 1585))))();
}

uint64_t sub_193204058@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (unint64_t *)STACK[0x838];
  STACK[0xED8] = STACK[0x838];
  v3 = *v2;
  STACK[0xEE0] = v3;
  v4 = STACK[0x850];
  STACK[0xEF0] = STACK[0x850];
  STACK[0x1000] = LODWORD(STACK[0x9F4]) - 0x4D58EB37AD4779BLL - ((2 * LODWORD(STACK[0x9F4])) & 0x10A5710CALL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v4 > v3) * (((a1 - 3100) | 0x287) ^ 0x3B1)) ^ a1)) - 4))();
}

uint64_t sub_1932040DC@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xFBC]) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 + 2141528224) ^ (a2 - 2496) ^ (a1 + 216)) * (v2 == 0)) ^ (a2 - 2496))))();
}

uint64_t sub_193204114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v6 = LODWORD(STACK[0xFBC]);
  STACK[0x1038] = v6;
  STACK[0xA28] = 0;
  *(_BYTE *)(STACK[0xEE0] + v4 + a3) = *(_BYTE *)(STACK[0xEF0] + v4 + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((16 * (((v6 == 1) ^ (v3 + 9)) & 1)) & 0xBF | ((((v6 == 1) ^ (v3 + 9)) & 1) << 6)) ^ (v3 + 2487)))
                            - 8))();
}

void sub_1932041A8()
{
  JUMPOUT(0x193204164);
}

uint64_t sub_1932041B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v2 = STACK[0x838];
  v3 = *(_QWORD *)(v1 + 8 * v0) - 12;
  v4 = STACK[0x838] != 0;
  STACK[0xCB8] = v3;
  STACK[0xCC0] = v2;
  STACK[0xCD0] = 0;
  LODWORD(v2) = STACK[0xFB8];
  LODWORD(STACK[0xE54]) = STACK[0xFB8];
  STACK[0xCD8] = v3;
  STACK[0xCE8] = 0;
  LODWORD(STACK[0xE84]) = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((((v0 - 1929321549) & 0x72FF1E7E) + 1972) ^ v0 ^ (413 * v4))))();
}

uint64_t sub_193204218@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;

  LODWORD(STACK[0x11C4]) = STACK[0xE6C];
  LODWORD(STACK[0x11DC]) = STACK[0xE54];
  STACK[0x1188] = STACK[0xCD0];
  v2 = (unint64_t *)STACK[0xCC0];
  STACK[0x11A0] = STACK[0xCC0];
  STACK[0x11A8] = STACK[0xCB8];
  v3 = *v2;
  STACK[0x11B8] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((23 * (((a1 + 71) ^ (v3 == 0)) & 1)) ^ a1)) - 12))();
}

uint64_t sub_193204224()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0xFD4]) = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v2 + v0 + 1921 + ((v0 + 2145762296) & 0xFFBF6DE7) + 1972) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_19320426C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;

  v7 = a5 - 24;
  v8 = LODWORD(STACK[0xFD4]);
  STACK[0xA50] = v8--;
  v9 = (v8 ^ a2) + a1 + (a4 & (2 * v8));
  *(_BYTE *)(STACK[0xEE0] + v9) = *(_BYTE *)(STACK[0xEF0] + v9);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((504
                                * (v8 != ((v7 - v5 - 2679) ^ (unint64_t)(a3 + 4)))) ^ v7)))();
}

uint64_t sub_1932042D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int *a31,uint64_t (*a32)(_QWORD, unint64_t, _QWORD))
{
  unint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;

  STACK[0xA28] = v32;
  v37 = STACK[0xED8];
  *(_QWORD *)(v37 + 8) = LODWORD(STACK[0x9F4]);
  LODWORD(STACK[0xBF0]) = v36;
  STACK[0xA40] = v37;
  LODWORD(STACK[0xBF4]) = v36;
  v38 = STACK[0xBF4];
  v39 = STACK[0xA40];
  v40 = STACK[0xBF0];
  v41 = a32(*a31, STACK[0x850], LODWORD(STACK[0x9F4]));
  LODWORD(STACK[0xC0C]) = v40;
  STACK[0xA48] = v39;
  LODWORD(STACK[0xC1C]) = v38;
  STACK[0xEF8] = v39;
  v42 = STACK[0xC0C];
  LODWORD(STACK[0xFE4]) = STACK[0xC0C];
  STACK[0xA60] = v39;
  LODWORD(STACK[0xC2C]) = v42;
  LODWORD(STACK[0xC4C]) = v38;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v35 + 8 * ((4028 * (v38 == v36)) ^ (v33 + v34 + 294))) - 8))(v41);
}

uint64_t sub_1932042F8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x5E4]) = STACK[0xE0C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((4174 * LOBYTE(STACK[0xE13])) ^ (v0 + v2 - 70)))
                            - ((v2 - v1 - 1815) ^ 2)))();
}

uint64_t sub_193204338@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,unint64_t a51)
{
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  unsigned int v61;
  uint64_t (*v62)(void);

  v55 = *(_QWORD *)(v53 + 8 * a1);
  LODWORD(STACK[0x68C]) = STACK[0xDEC];
  STACK[0x690] = STACK[0xDE0];
  STACK[0x698] = STACK[0xDD8];
  LODWORD(STACK[0x6A4]) = STACK[0xDD4];
  STACK[0x6A8] = STACK[0xDC8];
  STACK[0x6B0] = STACK[0xDC0];
  STACK[0x6B8] = v55;
  LODWORD(STACK[0x6C4]) = STACK[0xDAC];
  STACK[0x6C8] = STACK[0xD98];
  LODWORD(STACK[0x6D4]) = v54;
  STACK[0x6D8] = STACK[0xD90];
  STACK[0x6E0] = STACK[0xD88];
  STACK[0x6E8] = STACK[0xD80];
  LODWORD(STACK[0x6F4]) = STACK[0xD7C];
  STACK[0x6F8] = STACK[0xD70];
  LODWORD(STACK[0x704]) = v51;
  LODWORD(STACK[0xE14]) = STACK[0x704];
  STACK[0xE18] = STACK[0x6F8];
  LODWORD(STACK[0xE24]) = STACK[0x6F4];
  STACK[0xE28] = STACK[0x6E8];
  STACK[0xE30] = STACK[0x6E0];
  STACK[0xE38] = STACK[0x6D8];
  LODWORD(STACK[0xE44]) = STACK[0x6D4];
  STACK[0xE48] = STACK[0x6C8];
  LODWORD(STACK[0xE54]) = STACK[0x6C4];
  v56 = STACK[0x6B8];
  STACK[0xE58] = STACK[0x6B0];
  STACK[0xE60] = STACK[0x6A8];
  v57 = STACK[0x6A4];
  LODWORD(STACK[0xE6C]) = STACK[0x6A4];
  v58 = STACK[0x698];
  STACK[0xE70] = STACK[0x698];
  v59 = STACK[0x690];
  STACK[0xE78] = STACK[0x690];
  v60 = STACK[0x68C];
  LODWORD(STACK[0xE84]) = STACK[0x68C];
  STACK[0xE88] = a51;
  STACK[0x7C8] = a51;
  v61 = *(_DWORD *)(a51 + 12);
  STACK[0xE90] = v56;
  STACK[0xE98] = a51 + 12;
  LODWORD(STACK[0xEA4]) = v61;
  LODWORD(STACK[0x798]) = v60;
  LODWORD(STACK[0x79C]) = STACK[0xE14];
  STACK[0x7A0] = v59;
  STACK[0x7A8] = v58;
  LODWORD(STACK[0x7B4]) = v57;
  STACK[0x7B8] = STACK[0xE60];
  STACK[0x7C0] = STACK[0xE58];
  STACK[0x7D0] = v56;
  LODWORD(STACK[0x7DC]) = STACK[0xE54];
  STACK[0x7E0] = a51 + 12;
  STACK[0x7E8] = STACK[0xE48];
  LODWORD(STACK[0x7F4]) = STACK[0xE44];
  STACK[0x7F8] = STACK[0xE38];
  STACK[0x800] = STACK[0xE30];
  STACK[0x808] = STACK[0xE28];
  LODWORD(STACK[0x814]) = STACK[0xE24];
  STACK[0x818] = STACK[0xE18];
  v62 = (uint64_t (*)(void))(*(_QWORD *)(v53
                                      + 8
                                      * ((2928 * (v61 < (((641 * (a1 ^ 9) - 1914) | 0x166) ^ 0xFFFFFE94))) ^ (641 * (a1 ^ 9))))
                          - 4);
  LODWORD(STACK[0x824]) = v52;
  return v62();
}

uint64_t sub_19320495C()
{
  int v0;
  char v1;
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v5 = STACK[0xE88];
  v6 = (LODWORD(STACK[0xEA4]) ^ 0x677FFD53F6E8EDEBLL)
     - 0x677FFD5362D9C692
     + ((2 * LODWORD(STACK[0xEA4])) & 0x1EDD1DBD6);
  v7 = (*(unsigned int *)(STACK[0xE88] + 8) ^ 0xFF8BF7F2F5F5F7FELL)
     + 0x74080D9E192F57
     + (((unint64_t)*(unsigned int *)(STACK[0xE88] + 8) << ((v1 + v0 - 78) ^ (v4 + 3))) & 0x1EBEBEFFCLL);
  LODWORD(STACK[0x708]) = STACK[0xE84];
  v8 = v6 < 0x940F2755;
  LODWORD(STACK[0x70C]) = STACK[0xE14];
  STACK[0x710] = STACK[0xE78];
  STACK[0x718] = STACK[0xE70];
  v9 = v6 > v7;
  LODWORD(STACK[0x724]) = STACK[0xE6C];
  if (v8 != v7 < 0x940F2755)
    v9 = v8;
  STACK[0x728] = STACK[0xE60];
  STACK[0x730] = STACK[0xE58];
  STACK[0x738] = v5;
  STACK[0x740] = STACK[0xE90];
  LODWORD(STACK[0x74C]) = STACK[0xE54];
  STACK[0x750] = STACK[0xE98];
  STACK[0x758] = STACK[0xE48];
  LODWORD(STACK[0x764]) = STACK[0xE44];
  STACK[0x768] = STACK[0xE38];
  STACK[0x770] = STACK[0xE30];
  STACK[0x778] = STACK[0xE28];
  LODWORD(STACK[0x784]) = STACK[0xE24];
  STACK[0x788] = STACK[0xE18];
  LODWORD(STACK[0x794]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3613 * v9) ^ v0)) - 12))();
}

uint64_t sub_193204AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v2 = *(_QWORD *)(v1 + 8 * v0);
  v3 = ((_DWORD)v0 - 226) | 0x920u;
  LODWORD(STACK[0x828]) = STACK[0xE84];
  LODWORD(STACK[0x82C]) = STACK[0xE14];
  STACK[0x830] = STACK[0xE78];
  STACK[0x838] = STACK[0xE70];
  LODWORD(STACK[0x844]) = STACK[0xE6C];
  STACK[0x848] = STACK[0xE60];
  STACK[0x850] = STACK[0xE58];
  v4 = STACK[0xE88];
  STACK[0x858] = STACK[0xE88];
  STACK[0x860] = STACK[0xE90];
  LODWORD(STACK[0x86C]) = STACK[0xE54];
  STACK[0x870] = STACK[0xE98];
  STACK[0x878] = v2 + v3 - 2489;
  LODWORD(STACK[0x884]) = STACK[0xE44];
  STACK[0x888] = STACK[0xE18];
  LODWORD(STACK[0x894]) = 4;
  STACK[0x898] = v4;
  v5 = (v3 + 151);
  STACK[0xFC0] = STACK[0x898];
  v6 = LODWORD(STACK[0x894]);
  STACK[0xFC8] = STACK[0x888];
  LODWORD(STACK[0xFD4]) = STACK[0x884];
  v7 = STACK[0x878];
  STACK[0xFD8] = STACK[0x870];
  LODWORD(STACK[0xFE4]) = STACK[0x86C];
  STACK[0xFE8] = STACK[0x860];
  STACK[0xFF0] = STACK[0x858];
  STACK[0xFF8] = STACK[0x850];
  STACK[0x1000] = STACK[0x848];
  LODWORD(STACK[0x100C]) = STACK[0x844];
  STACK[0x1010] = STACK[0x838];
  STACK[0x1018] = STACK[0x830];
  LODWORD(STACK[0x1020]) = STACK[0x82C];
  LODWORD(STACK[0x1024]) = STACK[0x828];
  STACK[0x1028] = v7;
  v8 = *(unsigned int *)(STACK[0xFC0] + 8);
  STACK[0x1030] = STACK[0xFC0] + 8;
  v9 = (v6 ^ 0xFD9C7FBFBDEFF3FELL) + v8 + 0x263804042100C02 + ((v5 + 0x17BDFDDB8) & (2 * v6));
  STACK[0x1038] = v9;
  LOBYTE(STACK[0x1047]) = v9 < 0xFFFFFFFF;
  STACK[0x8A0] = v8;
  v10 = STACK[0x8A0];
  STACK[0x1048] = 2 * STACK[0x8A0];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((13
                                     * (v10 > ((v5 + 897) ^ 0x7FFFFE74)
                                            + (unint64_t)(v5 ^ 0x60A))) ^ v5)))();
}

uint64_t sub_193204B64()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  _BOOL4 v5;
  uint64_t (*v6)(void);

  v4 = STACK[0xF34];
  v5 = LODWORD(STACK[0xF34]) == v3;
  LODWORD(STACK[0x4DC]) = STACK[0xFB8];
  STACK[0x4E0] = STACK[0xFA8];
  LODWORD(STACK[0x4EC]) = STACK[0xFA4];
  STACK[0x4F0] = STACK[0xF98];
  STACK[0x4F8] = STACK[0xF90];
  STACK[0x500] = STACK[0xF88];
  STACK[0x508] = STACK[0xF80];
  LODWORD(STACK[0x514]) = STACK[0xF7C];
  STACK[0x518] = STACK[0xF70];
  STACK[0x520] = STACK[0xF68];
  LODWORD(STACK[0x52C]) = STACK[0xF64];
  STACK[0x530] = STACK[0xF58];
  STACK[0x538] = STACK[0xF50];
  STACK[0x540] = STACK[0xF48];
  LODWORD(STACK[0x54C]) = STACK[0xF44];
  STACK[0x550] = STACK[0xF38];
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((934 * v5) ^ (v1 + v0))) - ((v1 + v0) ^ 0x71));
  LODWORD(STACK[0x55C]) = v4;
  return v6();
}

uint64_t sub_193204C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,unint64_t a58)
{
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;

  STACK[0xB60] = a58;
  STACK[0x4E0] = a58;
  v62 = *(_DWORD *)(a58 + 12);
  STACK[0xB68] = a58 + 12;
  v63 = (v62 ^ 0xFAF9C9FBFE1774FBLL) + STACK[0xB48] + ((2 * v62) & 0x1FC2EE9F6);
  STACK[0xB70] = v63;
  LODWORD(STACK[0x4DC]) = STACK[0xFB8];
  LODWORD(STACK[0x4EC]) = STACK[0xFA4];
  STACK[0x4F0] = STACK[0xB40];
  STACK[0x4F8] = a58 + 12;
  STACK[0x500] = STACK[0xF88];
  STACK[0x508] = STACK[0xF80];
  LODWORD(STACK[0x514]) = STACK[0xF7C];
  STACK[0x518] = STACK[0xF70];
  STACK[0x520] = STACK[0xF68];
  LODWORD(STACK[0x52C]) = STACK[0xF64];
  STACK[0x530] = STACK[0xF58];
  STACK[0x538] = STACK[0xF50];
  STACK[0x540] = STACK[0xF48];
  LODWORD(STACK[0x54C]) = STACK[0xF44];
  STACK[0x550] = STACK[0xF38];
  LODWORD(STACK[0x55C]) = v59;
  return ((uint64_t (*)(void))(*(_QWORD *)(v61
                                        + 8
                                        * (((v63 + 0x22D5D9364FD7B901 < 0xFFFFFFFB)
                                          * (((v58 - 5296778) & 0x7FF5FF77 ^ (v60 + 268)) + v58 + 215)) ^ v58))
                            - 8))();
}

#error "193204E54: call analysis failed (funcsize=60)"

uint64_t sub_193204E58()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v2 = *(_QWORD *)(v1 + 8 * (int)v0);
  LODWORD(STACK[0x828]) = STACK[0xFBC];
  LODWORD(STACK[0x82C]) = STACK[0xFB8];
  STACK[0x830] = STACK[0xFB0];
  v3 = STACK[0xB60];
  STACK[0x838] = STACK[0xB60];
  LODWORD(STACK[0x844]) = STACK[0xFA4];
  STACK[0x848] = STACK[0xB40];
  STACK[0x850] = STACK[0xB68];
  STACK[0x858] = STACK[0xF88];
  STACK[0x860] = STACK[0xF80];
  LODWORD(STACK[0x86C]) = STACK[0xF7C];
  STACK[0x870] = STACK[0xF70];
  STACK[0x878] = (v0 ^ 0xFFFFFFFFFFFFFEA8) + v2;
  LODWORD(STACK[0x884]) = STACK[0xF64];
  STACK[0x888] = STACK[0xF38];
  LODWORD(STACK[0x894]) = STACK[0xB58];
  STACK[0x898] = v3;
  v4 = (v0 ^ 0x8FD) + 151;
  STACK[0xFC0] = STACK[0x898];
  v5 = LODWORD(STACK[0x894]);
  STACK[0xFC8] = STACK[0x888];
  LODWORD(STACK[0xFD4]) = STACK[0x884];
  v6 = STACK[0x878];
  STACK[0xFD8] = STACK[0x870];
  LODWORD(STACK[0xFE4]) = STACK[0x86C];
  STACK[0xFE8] = STACK[0x860];
  STACK[0xFF0] = STACK[0x858];
  STACK[0xFF8] = STACK[0x850];
  STACK[0x1000] = STACK[0x848];
  LODWORD(STACK[0x100C]) = STACK[0x844];
  STACK[0x1010] = STACK[0x838];
  STACK[0x1018] = STACK[0x830];
  LODWORD(STACK[0x1020]) = STACK[0x82C];
  LODWORD(STACK[0x1024]) = STACK[0x828];
  STACK[0x1028] = v6;
  v7 = *(unsigned int *)(STACK[0xFC0] + 8);
  STACK[0x1030] = STACK[0xFC0] + 8;
  v8 = (v5 ^ 0xFD9C7FBFBDEFF3FELL) + v7 + 0x263804042100C02 + ((v4 + 0x17BDFDDB8) & (2 * v5));
  STACK[0x1038] = v8;
  LOBYTE(STACK[0x1047]) = v8 < 0xFFFFFFFF;
  STACK[0x8A0] = v7;
  v9 = STACK[0x8A0];
  STACK[0x1048] = 2 * STACK[0x8A0];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((13
                                     * (v9 > ((v4 + 897) ^ 0x7FFFFE74)
                                           + (unint64_t)(v4 ^ 0x60A))) ^ v4)))();
}

uint64_t sub_193204EF0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,unint64_t a54,unint64_t a55,int a56,int a57,unint64_t a58,unint64_t a59,unint64_t a60,unint64_t a61,int a62,int a63)
{
  unint64_t a64;
  unint64_t a65;
  unint64_t a66;
  unint64_t a67;
  unint64_t a68;
  int v68;
  int v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t (*v73)(void);

  v72 = STACK[0x210];
  STACK[0xB78] = STACK[0x208];
  LODWORD(STACK[0xB84]) = STACK[0x204];
  STACK[0xB88] = a68;
  STACK[0xB90] = a67;
  STACK[0xB98] = a66;
  STACK[0xBA0] = a65;
  STACK[0xBA8] = a64;
  LODWORD(STACK[0xBB4]) = a63;
  STACK[0xBB8] = a61;
  STACK[0xBC0] = a60;
  STACK[0xBC8] = a59;
  STACK[0xBD0] = a58;
  LODWORD(STACK[0xBDC]) = a57;
  STACK[0xBE0] = a55;
  STACK[0xBE8] = a54;
  LODWORD(STACK[0xBF0]) = a53;
  LODWORD(STACK[0xBF4]) = a52;
  LODWORD(STACK[0x4DC]) = a53;
  STACK[0x4E0] = a55;
  LODWORD(STACK[0x4EC]) = a57;
  STACK[0x4F0] = a58;
  STACK[0x4F8] = a59;
  STACK[0x500] = STACK[0xBC0];
  STACK[0x508] = STACK[0xBB8];
  LODWORD(STACK[0x514]) = STACK[0xBB4];
  STACK[0x518] = STACK[0xBA8];
  STACK[0x520] = STACK[0xBA0];
  LODWORD(STACK[0x52C]) = v72;
  STACK[0x530] = STACK[0xB98];
  STACK[0x538] = STACK[0xB90];
  STACK[0x540] = STACK[0xB88];
  LODWORD(STACK[0x54C]) = STACK[0xB84];
  STACK[0x550] = STACK[0xB78];
  v73 = (uint64_t (*)(void))(*(_QWORD *)(v70 + 8 * (((v72 == v71) * ((a1 - v69 - 1394) ^ 0xB6A)) ^ (a1 + v68))) - 8);
  LODWORD(STACK[0x55C]) = v72;
  return v73();
}

uint64_t sub_193205010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  int v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;

  v18 = STACK[0xBE0];
  v19 = STACK[0xBE0];
  v20 = *(_QWORD *)STACK[0xBE0];
  v21 = (_DWORD *)STACK[0xBC8];
  v22 = STACK[0xBC8];
  v23 = ((*(_DWORD *)STACK[0xBC8] << (v15 + 82)) & 0x75F7FBF8) + (*(_DWORD *)STACK[0xBC8] ^ 0x3AFBFDFC) - 989593084;
  *(_BYTE *)(v20 + v23) = STACK[0xB54];
  *(_BYTE *)(v20 + v23 + 1) = STACK[0xB55];
  *(_BYTE *)(v20 + v23 + 2) = STACK[0xB56];
  *(_BYTE *)(v20 + v23 + 3) = STACK[0xB57];
  v24 = (*v21 + 4);
  *v21 = v24;
  v25 = STACK[0xBD0];
  v26 = STACK[0xBD0];
  v27 = (STACK[0xBD0] ^ 0x5B59CA1DB39CF9D2) & (2 * (STACK[0xBD0] & 0x939DE321C3DEF9E2)) ^ STACK[0xBD0] & 0x939DE321C3DEF9E2;
  v28 = ((2 * (STACK[0xBD0] ^ 0x59538E5F320D38D2)) ^ 0x959CDAFDE3A78260) & (STACK[0xBD0] ^ 0x59538E5F320D38D2) ^ (2 * (STACK[0xBD0] ^ 0x59538E5F320D38D2)) & 0x4ACE6D7EF1D3C130;
  v29 = v28 ^ 0x4A42250210504110;
  v30 = (v28 ^ 0x808C080C01838000) & (4 * v27) ^ v27;
  v31 = ((4 * v29) ^ 0x2B39B5FBC74F04C0) & v29 ^ (4 * v29) & 0xCACE6D7EF1D3C130;
  LODWORD(STACK[0xA70]) = STACK[0xBF4];
  LODWORD(STACK[0xA74]) = STACK[0xBF0];
  v32 = v31 ^ 0xC0C648043090C130;
  v33 = (v31 ^ 0xA08257AC1430000) & (16 * v30) ^ v30;
  STACK[0xA78] = STACK[0xBE8];
  v34 = 16 * (v31 ^ 0xC0C648043090C130);
  STACK[0xA80] = v19;
  LODWORD(STACK[0xA8C]) = STACK[0xBDC];
  v35 = (v34 ^ 0xACE6D7EF1D3C1300) & v32;
  v36 = *(_QWORD *)v18;
  v37 = v35 ^ v34 & 0xCACE6D7EF1D3C130;
  v38 = *(_QWORD *)(v16 + 8 * v15);
  LODWORD(v18) = v15 + 854;
  STACK[0xA90] = v26;
  STACK[0xA98] = v22;
  STACK[0xAA0] = STACK[0xBC0];
  STACK[0xAA8] = STACK[0xBB8];
  LODWORD(STACK[0xAB4]) = STACK[0xBB4];
  STACK[0xAB8] = STACK[0xBA8];
  v39 = (((v37 ^ 0x42082810E0C3C030) << 8) ^ 0xCE6D7EF1D3C13000) & (v37 ^ 0x42082810E0C3C030) ^ ((v37 ^ 0x42082810E0C3C030) << 8) & 0xCACE6D7EF1D3C100;
  STACK[0xAC0] = v38;
  STACK[0xAC8] = STACK[0xBA0];
  LODWORD(STACK[0xAD4]) = v17;
  STACK[0xAD8] = STACK[0xB98];
  STACK[0xAE0] = STACK[0xB90];
  STACK[0xAE8] = STACK[0xB88];
  LODWORD(STACK[0xAF4]) = STACK[0xB84];
  STACK[0xAF8] = STACK[0xB78];
  STACK[0xB00] = v36;
  STACK[0xB08] = (v24 ^ 0xB58CEAB6EBBD3DFELL) + 0x504C6823E2843B80 + ((2 * v24) & 0x1D77A7BFCLL);
  STACK[0xB10] = a15;
  STACK[0xB18] = v25 ^ (2
                      * (v39 & 0x6152C11000000000 ^ (v37 ^ 0x88C6456E11100100) & (v33 << 8) ^ v33 ^ (v39 ^ 0x4A4C6C70D1C10000) & (((v37 ^ 0x88C6456E11100100) & (v33 << 8) ^ v33) << 16))) ^ 0xE837124D46F57187;
  STACK[0x1110] = STACK[0xB18];
  STACK[0x1118] = STACK[0xB10];
  STACK[0x1120] = STACK[0xB08];
  STACK[0x1128] = STACK[0xB00];
  STACK[0x1130] = STACK[0xAF8];
  LODWORD(STACK[0x113C]) = STACK[0xAF4];
  STACK[0x1140] = STACK[0xAE8];
  STACK[0x1148] = STACK[0xAE0];
  STACK[0x1150] = STACK[0xAD8];
  LODWORD(STACK[0x115C]) = STACK[0xAD4];
  STACK[0x1160] = STACK[0xAC8];
  STACK[0x1168] = STACK[0xAB8];
  LODWORD(STACK[0x1174]) = STACK[0xAB4];
  STACK[0x1178] = STACK[0xAA8];
  STACK[0x1180] = STACK[0xAA0];
  STACK[0x1188] = STACK[0xA98];
  STACK[0x1190] = STACK[0xA90];
  LODWORD(STACK[0x119C]) = STACK[0xA8C];
  STACK[0x11A0] = STACK[0xA80];
  STACK[0x11A8] = STACK[0xA78];
  LODWORD(STACK[0x11B0]) = STACK[0xA74];
  LODWORD(v33) = STACK[0x1118] > STACK[0x1120]
                               - 0x5D952DACE418A46
                               + STACK[0x1128]
                               + (((_DWORD)v18 - 2033689862) & 0x7937AEF1)
                               + 471;
  LODWORD(STACK[0x11B4]) = STACK[0xA70];
  STACK[0x11B8] = STACK[0xAC0];
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (int)(v18 | (8 * v33))))(0x767A3EBDF7FA0F3DLL);
}

uint64_t sub_193205340()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  BOOL v6;
  int v7;
  uint64_t (*v8)(void);

  v4 = STACK[0x1188];
  *(_DWORD *)STACK[0x1188] += LODWORD(STACK[0xB5C]);
  v5 = STACK[0x115C];
  v6 = LODWORD(STACK[0x115C]) == v3;
  LODWORD(STACK[0x4DC]) = STACK[0x11B0];
  STACK[0x4E0] = STACK[0x11A0];
  LODWORD(STACK[0x4EC]) = STACK[0x119C];
  STACK[0x4F0] = STACK[0x1190];
  v7 = v6;
  STACK[0x4F8] = v4;
  STACK[0x500] = STACK[0x1180];
  STACK[0x508] = STACK[0x1178];
  LODWORD(STACK[0x514]) = STACK[0x1174];
  STACK[0x518] = STACK[0x1168];
  STACK[0x520] = STACK[0x1160];
  LODWORD(STACK[0x52C]) = v5;
  STACK[0x530] = STACK[0x1150];
  STACK[0x538] = STACK[0x1148];
  STACK[0x540] = STACK[0x1140];
  LODWORD(STACK[0x54C]) = STACK[0x113C];
  STACK[0x550] = STACK[0x1130];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2605 * v7) ^ (v1 + v0))) - ((v1 + v0 + 2723) ^ 0xB14));
  LODWORD(STACK[0x55C]) = v5;
  return v8();
}

uint64_t sub_19320540C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int *a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,unint64_t a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  int v66;
  int v67;
  uint64_t v68;

  STACK[0xBF8] = a58;
  a25(a22);
  v61 = *a23;
  v62 = *(_QWORD *)a58;
  v63 = *(_DWORD *)(a58 + 12);
  STACK[0xC00] = a58 + 12;
  v64 = STACK[0xB30];
  v65 = STACK[0xB38];
  v66 = 597255653 * ((v60 - 1532629520 - 2 * ((v60 - 144) & 0xA4A5EE80)) ^ 0xADAE9119);
  *(_DWORD *)(v60 - 128) = (v61 ^ 0x77DDF7FF)
                         - v66
                         + ((v61 << ((5 * (((v58 - 124) | 0x45) ^ 0x46)) ^ 0x2E)) & 0xEFBBEFFE)
                         - 1388580935;
  *(_QWORD *)(v60 - 120) = v62;
  *(_QWORD *)(v60 - 104) = v65;
  *(_QWORD *)(v60 - 136) = v64;
  *(_DWORD *)(v60 - 140) = v66 + v63 + 1581691396 - ((2 * v63) & 0xBC8D6408);
  *(_DWORD *)(v60 - 112) = v66 + v58 + 396;
  a24(v60 - 144);
  v67 = *(_DWORD *)(v60 - 144);
  v68 = a26(a22);
  LODWORD(STACK[0x214]) = v67;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v59 + 8 * ((1325 * (v67 == 663729217)) ^ v58)) - 12))(v68);
}

uint64_t sub_19320555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t), unsigned int *a18, uint64_t a19, uint64_t (*a20)(_QWORD, uint64_t, uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;

  v59 = *(_QWORD *)(v56 + 8 * v54);
  v60 = 486723911 * ((v55 - 2 * (v55 & 0x6DC9C9AD62F7B644) + 0x6DC9C9AD62F7B644) ^ 0x5F77123CD23DD6DELL);
  *(_DWORD *)(v58 - 128) = v54 - 71465943 - v60;
  *(_QWORD *)(v58 - 144) = v53;
  *(_QWORD *)(v58 - 136) = v59 - v60 - 8;
  a17(v58 - 144);
  v61 = a20(*a18, a19, v57);
  v62 = ((2 * v61) & 0x7EB5EC36) + (((v54 + 1749) | 0x118) ^ v61 ^ 0xBF5AFD07);
  v63 = 486723911 * ((-2 - ((~v55 | 0x98DD0C3FA61891BLL) + (v55 | 0xF6722F3C059E76E4))) ^ 0x3B330B524AABE981);
  v64 = *(_QWORD *)(a53 + 8 * (v54 & 0x38DE2F2A)) - v63;
  *(_DWORD *)(v58 - 128) = v54 - 71465943 - v63;
  *(_QWORD *)(v58 - 144) = v53;
  *(_QWORD *)(v58 - 136) = v64 - 8;
  v65 = ((uint64_t (*)(uint64_t))a17)(v58 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a53 + 8 * ((1782 * (v62 == -1084557797)) ^ (v54 + 1774))) - 4))(v65);
}

uint64_t sub_1932056F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49)
{
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  uint64_t v58;

  a25(a22);
  v51 = *(_QWORD *)STACK[0xBF8];
  v52 = *a23 ^ 0x6DDFF7B9;
  v53 = (2 * *a23) & 0xDBBFEF72;
  v54 = STACK[0xB30];
  v55 = STACK[0xB38];
  v56 = 597255653 * ((v50 - 692650669 - 2 * ((v50 - 144) & 0xD6B6FDE3)) ^ 0xDFBD827A);
  *(_DWORD *)(v50 - 140) = v56
                         + *(_DWORD *)STACK[0xC00]
                         + 1581691396
                         - ((*(_DWORD *)STACK[0xC00] << (a49 - 27)) & 0xBC8D6408);
  *(_QWORD *)(v50 - 136) = v54;
  *(_DWORD *)(v50 - 128) = v52 - v56 + v53 - 1220939777;
  *(_QWORD *)(v50 - 120) = v51;
  *(_DWORD *)(v50 - 112) = v56 + a49 + 396;
  *(_QWORD *)(v50 - 104) = v55;
  a24(v50 - 144);
  v57 = *(_DWORD *)(v50 - 144);
  v58 = a26(a22);
  LODWORD(STACK[0x214]) = v57;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v49
                                                      + 8
                                                      * ((1016
                                                        * (((LODWORD(STACK[0x214]) == 395293758) ^ ((a49 - 28) ^ (a49 - 69))) & 1)) ^ (a49 - 311)))
                                          - 4))(v58);
}

uint64_t sub_193205880()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  int v10;
  uint64_t (*v11)(void);

  LODWORD(STACK[0x3C0]) = STACK[0x11B4];
  LODWORD(STACK[0x3C4]) = STACK[0x11B0];
  STACK[0x3C8] = STACK[0x11A8];
  STACK[0x3D0] = STACK[0x11A0];
  LODWORD(STACK[0x3DC]) = STACK[0x119C];
  STACK[0x3E0] = STACK[0x1190];
  STACK[0x3E8] = STACK[0x1188];
  STACK[0x3F0] = STACK[0x1180];
  STACK[0x3F8] = STACK[0x1178];
  LODWORD(STACK[0x404]) = STACK[0x1174];
  STACK[0x408] = STACK[0x1168];
  STACK[0x410] = STACK[0x1160];
  LODWORD(STACK[0x41C]) = v4;
  STACK[0x420] = STACK[0x1150];
  STACK[0x428] = STACK[0x1148];
  STACK[0x430] = STACK[0x1140];
  LODWORD(STACK[0x43C]) = STACK[0x113C];
  v5 = STACK[0x1130];
  STACK[0x440] = STACK[0x1130];
  LODWORD(STACK[0x44C]) = v1 - 14;
  STACK[0xCA0] = v5;
  LODWORD(STACK[0xCAC]) = STACK[0x43C];
  STACK[0xCB0] = STACK[0x430];
  STACK[0xCB8] = STACK[0x428];
  STACK[0xCC0] = STACK[0x420];
  LODWORD(STACK[0xCCC]) = STACK[0x41C];
  STACK[0xCD0] = STACK[0x410];
  STACK[0xCD8] = STACK[0x408];
  LODWORD(STACK[0xCE4]) = STACK[0x404];
  STACK[0xCE8] = STACK[0x3F8];
  STACK[0xCF0] = STACK[0x3F0];
  v6 = STACK[0x3E8];
  STACK[0xCF8] = STACK[0x3E8];
  v7 = STACK[0x3E0];
  STACK[0xD00] = STACK[0x3E0];
  v8 = STACK[0x3DC];
  LODWORD(STACK[0xD0C]) = STACK[0x3DC];
  v9 = STACK[0x3D0];
  STACK[0xD10] = STACK[0x3D0];
  STACK[0xD18] = STACK[0x3C8];
  v10 = STACK[0x3C4];
  LODWORD(STACK[0xD24]) = STACK[0x3C4];
  LODWORD(STACK[0xD28]) = STACK[0x3C0];
  LODWORD(STACK[0x4DC]) = v10;
  STACK[0x4E0] = v9;
  LODWORD(STACK[0x4EC]) = v8;
  STACK[0x4F0] = v7;
  STACK[0x4F8] = v6;
  STACK[0x500] = STACK[0xCF0];
  STACK[0x508] = STACK[0xCE8];
  LODWORD(STACK[0x514]) = STACK[0xCE4];
  STACK[0x518] = STACK[0xCD8];
  STACK[0x520] = STACK[0xCD0];
  LODWORD(STACK[0x52C]) = STACK[0xCCC];
  STACK[0x530] = STACK[0xCC0];
  STACK[0x538] = STACK[0xCB8];
  STACK[0x540] = STACK[0xCB0];
  LODWORD(STACK[0x54C]) = STACK[0xCAC];
  STACK[0x550] = STACK[0xCA0];
  v11 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((4449 * (v1 - 14 == v4)) ^ (v2 + 1711476333)))
                          - ((v2 + 1711476333 - v0 - 564062440) & 0xA1F9BBC2 ^ 0x4ALL));
  LODWORD(STACK[0x55C]) = v1 - 14;
  return v11();
}

void sub_193205924()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = (v0 - 79629839) & 0x4BF05FD;
  v3 = *(_QWORD *)(v1 + 8 * v2);
  LODWORD(STACK[0x5E8]) = STACK[0x11B4];
  LODWORD(STACK[0x5EC]) = STACK[0x11B0];
  STACK[0x5F0] = STACK[0x11A8];
  STACK[0x5F8] = STACK[0x11A0];
  LODWORD(STACK[0x604]) = STACK[0x119C];
  STACK[0x608] = STACK[0x1190];
  STACK[0x610] = STACK[0x1188];
  STACK[0x618] = STACK[0x1180];
  STACK[0x620] = STACK[0x1178];
  LODWORD(STACK[0x62C]) = STACK[0x1174];
  STACK[0x630] = STACK[0x1168];
  STACK[0x638] = (((_DWORD)v2 + 847868713) & 0xD768FFF ^ 0xFFFFFFFFFFFFFB09) + v3;
  STACK[0x640] = STACK[0x1160];
  STACK[0x648] = STACK[0x1150];
  STACK[0x650] = STACK[0x1148];
  STACK[0x658] = STACK[0x1140];
  LODWORD(STACK[0x664]) = STACK[0x113C];
  STACK[0x668] = STACK[0x1130];
  JUMPOUT(0x193205A00);
}

uint64_t sub_193205B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t))
{
  int v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = (_QWORD *)STACK[0xDF8];
  *v29 = 0;
  v29[1] = 0;
  STACK[0xE00] = (unint64_t)(v29 + 1);
  v30 = a27(4096, 2241923698);
  *(_QWORD *)STACK[0xDF8] = v30;
  return ((uint64_t (*)(void))(2141531491
                            - ((v27 + 1847862445) | 0x11810106u)
                            + *(_QWORD *)(v28 + 8 * ((126 * (v30 == 0)) ^ v27))
                            - 8))();
}

uint64_t sub_193205B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t (*a50)(unint64_t))
{
  int v50;
  uint64_t v51;

  v51 = a50(STACK[0xDF8]);
  STACK[0x678] = 0;
  LOBYTE(STACK[0x687]) = 0;
  LODWORD(STACK[0x688]) = v50;
  LODWORD(STACK[0xE0C]) = STACK[0x688];
  LOBYTE(STACK[0xE13]) = STACK[0x687];
  *(_QWORD *)STACK[0xD68] = STACK[0x678];
  return ((uint64_t (*)(uint64_t))STACK[0xDF0])(v51);
}

uint64_t sub_193205BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t (*v63)(void);

  LODWORD(STACK[0xC0C]) = a58;
  LODWORD(STACK[0x32C]) = a58;
  LODWORD(STACK[0x330]) = STACK[0xDEC];
  LODWORD(STACK[0x334]) = STACK[0xDE8];
  STACK[0x338] = STACK[0xDE0];
  STACK[0x340] = STACK[0xDD8];
  LODWORD(STACK[0x34C]) = STACK[0xDD4];
  STACK[0x350] = STACK[0xDC8];
  STACK[0x358] = STACK[0xDC0];
  STACK[0x360] = STACK[0xDB8];
  STACK[0x368] = STACK[0xDB0];
  LODWORD(STACK[0x374]) = STACK[0xDAC];
  STACK[0x378] = STACK[0xDA0];
  STACK[0x380] = STACK[0xD98];
  LODWORD(STACK[0x38C]) = v62;
  STACK[0x390] = STACK[0xD90];
  STACK[0x398] = STACK[0xD88];
  STACK[0x3A0] = STACK[0xD80];
  LODWORD(STACK[0x3AC]) = STACK[0xD7C];
  STACK[0x3B0] = STACK[0xD70];
  v63 = (uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((525 * LOBYTE(STACK[0xE13])) | (v58 + v60 + 3321)))
                          - 41 * (v60 ^ (v59 + 155) ^ 0xB8Fu)
                          + 357);
  LODWORD(STACK[0x3BC]) = STACK[0xE0C];
  return v63();
}

uint64_t sub_193205CD4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unint64_t a49)
{
  int v49;
  int v50;
  uint64_t v51;
  int v52;
  _BOOL4 v53;

  STACK[0xC10] = a49;
  v53 = LODWORD(STACK[0xC0C]) > *(_DWORD *)(a49 + 8);
  LODWORD(STACK[0x218]) = STACK[0xDEC];
  LODWORD(STACK[0x21C]) = STACK[0xDE8];
  STACK[0x220] = STACK[0xDE0];
  STACK[0x228] = STACK[0xDD8];
  STACK[0x230] = STACK[0xDC8];
  STACK[0x238] = STACK[0xDC0];
  STACK[0x240] = STACK[0xDB8];
  STACK[0x248] = STACK[0xDB0];
  LODWORD(STACK[0x254]) = STACK[0xDAC];
  STACK[0x258] = STACK[0xDA0];
  STACK[0x260] = STACK[0xD98];
  LODWORD(STACK[0x26C]) = v52;
  STACK[0x270] = STACK[0xD90];
  STACK[0x278] = STACK[0xD88];
  STACK[0x280] = STACK[0xD80];
  LODWORD(STACK[0x28C]) = STACK[0xD7C];
  STACK[0x290] = STACK[0xD70];
  LODWORD(STACK[0x29C]) = v52;
  return ((uint64_t (*)(void))(*(_QWORD *)(v51 + 8 * ((v53 * ((a1 - v49 - 248) ^ (v50 + 1040))) ^ a1)) - 12))();
}

void sub_193205DA0(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8 * a1);
  LODWORD(STACK[0x828]) = STACK[0xDEC];
  LODWORD(STACK[0x82C]) = STACK[0xDE8];
  STACK[0x830] = STACK[0xDE0];
  STACK[0x838] = STACK[0xDD8];
  LODWORD(STACK[0x844]) = STACK[0xDD4];
  STACK[0x848] = STACK[0xDC8];
  STACK[0x850] = STACK[0xDC0];
  STACK[0x858] = STACK[0xDB8];
  STACK[0x860] = STACK[0xDB0];
  LODWORD(STACK[0x86C]) = STACK[0xDAC];
  STACK[0x870] = STACK[0xDA0];
  STACK[0x878] = ((a1 + 2108) ^ 0xFFFFFFFFFFFFF659) + v3;
  LODWORD(STACK[0x884]) = v2;
  STACK[0x888] = STACK[0xD70];
  LODWORD(STACK[0x894]) = STACK[0xC0C];
  STACK[0x898] = STACK[0xC10];
  JUMPOUT(0x193205E2CLL);
}

#error "1932084F0: call analysis failed (funcsize=110)"

uint64_t sub_193205FF8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0xC1C]) = STACK[0x29C];
  STACK[0xC20] = STACK[0x290];
  LODWORD(STACK[0xC2C]) = STACK[0x28C];
  STACK[0xC30] = STACK[0x280];
  STACK[0xC38] = STACK[0x278];
  STACK[0xC40] = STACK[0x270];
  LODWORD(STACK[0xC4C]) = STACK[0x26C];
  STACK[0xC50] = STACK[0x260];
  STACK[0xC58] = STACK[0x258];
  LODWORD(STACK[0xC64]) = STACK[0x254];
  STACK[0xC68] = STACK[0x248];
  STACK[0xC70] = STACK[0x240];
  STACK[0xC78] = STACK[0x238];
  STACK[0xC80] = STACK[0x230];
  STACK[0xC88] = STACK[0x228];
  STACK[0xC90] = STACK[0x220];
  LODWORD(STACK[0xC98]) = STACK[0x21C];
  LODWORD(STACK[0xC9C]) = STACK[0x218];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((51
                                          * (LODWORD(STACK[0xC1C]) == ((2 * (((v1 + v0 - 109) | 0x222) ^ 0x26A)) ^ (v3 + 120)))) ^ (v0 - 2141527690)))
                            - 12))();
}

uint64_t sub_1932060E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unint64_t a55,unint64_t *a56,int a57,unsigned int a58)
{
  uint64_t v58;
  uint64_t v59;
  int v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;

  v61 = *a56;
  v62 = 257 * (v58 ^ 0x22B);
  v63 = *(_QWORD *)(v59 + 8 * v58) - 12;
  LODWORD(STACK[0xA70]) = STACK[0xC9C];
  LODWORD(STACK[0xA74]) = STACK[0xC98];
  STACK[0xA78] = STACK[0xC90];
  STACK[0xA80] = STACK[0xC88];
  LODWORD(STACK[0xA8C]) = v60;
  STACK[0xA90] = STACK[0xC80];
  STACK[0xA98] = STACK[0xC78];
  STACK[0xAA0] = STACK[0xC70];
  STACK[0xAA8] = STACK[0xC68];
  LODWORD(STACK[0xAB4]) = STACK[0xC64];
  STACK[0xAB8] = STACK[0xC58];
  STACK[0xAC0] = v63;
  STACK[0xAC8] = STACK[0xC50];
  LODWORD(STACK[0xAD4]) = STACK[0xC4C];
  STACK[0xAD8] = STACK[0xC40];
  STACK[0xAE0] = STACK[0xC38];
  STACK[0xAE8] = STACK[0xC30];
  LODWORD(STACK[0xAF4]) = STACK[0xC2C];
  STACK[0xAF8] = STACK[0xC20];
  STACK[0xB00] = v61;
  STACK[0xB08] = 0x5D952DACE41797ELL;
  STACK[0xB10] = a55;
  STACK[0xB18] = a58 + (v62 ^ 0xFB2A714C852B8D60) - ((2 * a58) & 0x10A5710CALL);
  STACK[0x1110] = STACK[0xB18];
  STACK[0x1118] = STACK[0xB10];
  STACK[0x1120] = STACK[0xB08];
  STACK[0x1128] = STACK[0xB00];
  STACK[0x1130] = STACK[0xAF8];
  LODWORD(STACK[0x113C]) = STACK[0xAF4];
  STACK[0x1140] = STACK[0xAE8];
  STACK[0x1148] = STACK[0xAE0];
  STACK[0x1150] = STACK[0xAD8];
  LODWORD(STACK[0x115C]) = STACK[0xAD4];
  STACK[0x1160] = STACK[0xAC8];
  STACK[0x1168] = STACK[0xAB8];
  LODWORD(STACK[0x1174]) = STACK[0xAB4];
  STACK[0x1178] = STACK[0xAA8];
  STACK[0x1180] = STACK[0xAA0];
  STACK[0x1188] = STACK[0xA98];
  STACK[0x1190] = STACK[0xA90];
  LODWORD(STACK[0x119C]) = STACK[0xA8C];
  STACK[0x11A0] = STACK[0xA80];
  STACK[0x11A8] = STACK[0xA78];
  LODWORD(STACK[0x11B0]) = STACK[0xA74];
  v64 = STACK[0x1118] > STACK[0x1120]
                      - 0x5D952DACE418A46
                      + STACK[0x1128]
                      + (((_DWORD)v62 - 2033689862) & 0x7937AEF1)
                      + 471;
  LODWORD(STACK[0x11B4]) = STACK[0xA70];
  STACK[0x11B8] = STACK[0xAC0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * (int)(v62 | (8 * v64))))(0x767A3EBDF7FA0F3DLL, a2, a3, 0xC0391580E16, 3713000404);
}

void sub_1932061E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,unint64_t a56)
{
  int v56;
  uint64_t v57;
  unint64_t v58;

  v58 = *(_QWORD *)(v57 + 8 * v56);
  LODWORD(STACK[0x9E0]) = STACK[0xC9C];
  LODWORD(STACK[0x9E4]) = STACK[0xC98];
  STACK[0x9E8] = STACK[0xC88];
  LODWORD(STACK[0x9F4]) = STACK[0xC1C];
  STACK[0x9F8] = STACK[0xC80];
  STACK[0xA00] = STACK[0xC78];
  STACK[0xA08] = STACK[0xC70];
  STACK[0xA10] = STACK[0xC68];
  LODWORD(STACK[0xA1C]) = STACK[0xC64];
  STACK[0xA20] = STACK[0xC58];
  STACK[0xA28] = v58;
  STACK[0xA30] = STACK[0xC50];
  LODWORD(STACK[0xA3C]) = STACK[0xC4C];
  STACK[0xA40] = STACK[0xC40];
  STACK[0xA48] = STACK[0xC38];
  STACK[0xA50] = STACK[0xC30];
  LODWORD(STACK[0xA5C]) = STACK[0xC2C];
  STACK[0xA60] = STACK[0xC20];
  STACK[0xA68] = a56;
  JUMPOUT(0x19320783CLL);
}

uint64_t sub_1932063D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v54;
  uint64_t v55;

  LODWORD(STACK[0x11C4]) = LODWORD(STACK[0x1110]) ^ 0x852B8865;
  return ((uint64_t (*)(void))(*(_QWORD *)(v55
                                        + 8
                                        * (((a54 == ((v54 - 1820051776) & 0x6C7BBE6E) - 1052) * ((v54 ^ 0xAF3) - 608)) ^ v54))
                            - 8))();
}

uint64_t sub_193206430@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + ((a1 - 411) | 0x802) + ((a1 + 1428227302) | 0x2A842461) - 700) * (v1 == 0)) | a1)))();
}

uint64_t sub_193206478()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v1 == 0) ^ (v0 - 123)) & 1) * (v2 + v3 + v0 + 799 - 87)) ^ v0)))();
}

uint64_t sub_1932064AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v54;
  uint64_t v55;

  STACK[0x11C8] = STACK[0x1120] - 0x5D946D73CE96B68;
  STACK[0x11D0] = LODWORD(STACK[0x11C4]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * ((29 * (a54 == v54 - 2691)) ^ v54))
                            - (v54 - 353)
                            + 2330))();
}

uint64_t sub_193206500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;

  STACK[0x808] = 0;
  v7 = STACK[0x11D0] - 1;
  *(_BYTE *)(STACK[0x1128] + STACK[0x11C8] - 0xC0391580E16) = *(_BYTE *)(STACK[0x1118] + a4 - 0xC0391580E16);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((v7 != 0) * ((((v4 - 32) | 0x10) + 2146821353) & 0xFFAF3F67 ^ (v5 + 1809))) ^ ((v4 - 32) | 0x10))))();
}

void sub_19320658C()
{
  JUMPOUT(0x19320654CLL);
}

uint64_t sub_193206594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  _BOOL4 v58;

  v58 = a54 == v55 + v56 + v54 + 1093 - 1963 - 118;
  return ((uint64_t (*)(void))(*(_QWORD *)(v57 + 8 * (((4 * v58) | (16 * v58)) ^ (v54 + 1093)))
                            - ((v54 + 1093) ^ 0x88Bu)
                            + 1599))();
}

uint64_t sub_1932065D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  unint64_t v6;

  STACK[0x918] = 0;
  v6 = STACK[0x11D0] - 1;
  *(_BYTE *)(STACK[0x1100] + ((v4 - 1607392) & 0x7FBDADFF ^ 0xFFFFF3FC1102DC8DLL) + STACK[0x11C8]) = *(_BYTE *)(STACK[0x10F0] + ((v4 - 1607392) & 0x7FBDADFF ^ 0xFFFFF3FC1102DC8DLL) + a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((3592 * (v6 == 0)) ^ v4)) - 12))();
}

void sub_193206664()
{
  JUMPOUT(0x193206624);
}

uint64_t sub_19320666C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;

  STACK[0x808] = v0;
  v1 = STACK[0x11A8];
  STACK[0x1D70] = STACK[0x11A8];
  v2 = STACK[0x11A0];
  STACK[0x1D78] = STACK[0x11A0];
  v3 = STACK[0x11B4];
  LODWORD(STACK[0x188C]) = STACK[0x11B4];
  v4 = STACK[0x1188];
  STACK[0x1D80] = STACK[0x1188];
  v5 = STACK[0x1190];
  STACK[0x17B8] = STACK[0x1190];
  v6 = STACK[0x1180];
  STACK[0x1D88] = STACK[0x1180];
  v7 = STACK[0x1178];
  STACK[0x1D90] = STACK[0x1178];
  v8 = STACK[0x11B0];
  LODWORD(STACK[0x18BC]) = STACK[0x11B0];
  v9 = STACK[0x1168];
  STACK[0x1D98] = STACK[0x1168];
  LODWORD(STACK[0x18C8]) = STACK[0x119C];
  v10 = STACK[0x1160];
  STACK[0x1DA0] = STACK[0x1160];
  v11 = STACK[0x1174];
  LODWORD(STACK[0x18CC]) = STACK[0x1174];
  v12 = STACK[0x115C];
  LODWORD(STACK[0x18DC]) = STACK[0x115C];
  v13 = STACK[0x113C];
  LODWORD(STACK[0x1920]) = STACK[0x113C];
  v14 = STACK[0x1150];
  STACK[0x1DA8] = STACK[0x1150];
  v15 = STACK[0x1148];
  STACK[0x1DB0] = STACK[0x1148];
  v16 = STACK[0x1140];
  STACK[0x1808] = STACK[0x1140];
  v17 = STACK[0x10FC];
  LODWORD(STACK[0x1924]) = STACK[0x10FC];
  v18 = STACK[0x1130];
  STACK[0x1DB8] = STACK[0x1130];
  LODWORD(STACK[0x1934]) = v12;
  STACK[0x1DC0] = v1;
  STACK[0x1DC8] = v2;
  LODWORD(STACK[0x1964]) = v3;
  STACK[0x1DD0] = v4;
  STACK[0x1858] = v5;
  STACK[0x1DD8] = v6;
  STACK[0x1DE0] = v7;
  LODWORD(STACK[0x1974]) = v8;
  STACK[0x1DE8] = v9;
  STACK[0x1DF0] = v10;
  LODWORD(STACK[0x1978]) = v11;
  LODWORD(STACK[0x197C]) = STACK[0x115C];
  LODWORD(STACK[0x19C0]) = v13;
  STACK[0x1DF8] = v14;
  STACK[0x1E00] = v15;
  STACK[0x18B0] = v16;
  LODWORD(STACK[0x19C4]) = v17;
  STACK[0x1E08] = v18;
  return ((uint64_t (*)(void))STACK[0x11B8])();
}

uint64_t sub_193206674@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  unint64_t v3;

  STACK[0xB20] = 0;
  v3 = STACK[0x11D0] - 1;
  *(_BYTE *)(STACK[0x1128] + STACK[0x11C8] - 0xC0391580E16) = *(_BYTE *)(STACK[0x1118] + a1 - 0xC0391580E16);
  return (*(uint64_t (**)(void))(v2 + 8 * ((8169 * (v3 == 0)) ^ (a2 - 2141527440))))();
}

uint64_t sub_1932066EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(v8 + (v13 & a5) + (v12 ^ v5) + v7) = *(_BYTE *)(v6 + (v13 & a5) + (v12 ^ v5) + a4);
  return (*(uint64_t (**)(void))(v14 + 8 * (((v9 == v12) * v11) ^ v10)))();
}

uint64_t sub_193206728@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unint64_t v47;
  int v48;
  uint64_t v49;

  STACK[0xB20] = v47;
  return ((uint64_t (*)(void))(*(_QWORD *)(v49 + 8 * ((14 * (a47 != 3)) ^ (v48 + a1 + 793))) - 8))();
}

uint64_t sub_193206730@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unint64_t v47;
  int v48;
  uint64_t v49;

  STACK[0x918] = v47;
  return ((uint64_t (*)(void))(*(_QWORD *)(v49 + 8 * ((14 * (a47 != 3)) ^ (v48 + a1 + 793))) - 8))();
}

uint64_t sub_193206738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,unint64_t a56,int a57,int a58)
{
  unint64_t v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  int v74;
  int v75;

  *(_DWORD *)(a56 + 8) = a58;
  *(_DWORD *)(a56 + 12) = 0;
  LODWORD(STACK[0x2A0]) = STACK[0x11B4];
  LODWORD(STACK[0x2A4]) = STACK[0x11B0];
  STACK[0x2A8] = STACK[0x11A0];
  LODWORD(STACK[0x2B4]) = STACK[0x119C];
  STACK[0x2B8] = STACK[0x1190];
  STACK[0x2C0] = STACK[0x1188];
  STACK[0x2C8] = STACK[0x1180];
  STACK[0x2D0] = STACK[0x1178];
  LODWORD(STACK[0x2DC]) = STACK[0x1174];
  STACK[0x2E0] = STACK[0x1168];
  STACK[0x2E8] = STACK[0x1160];
  LODWORD(STACK[0x2F4]) = STACK[0x115C];
  STACK[0x2F8] = STACK[0x1150];
  STACK[0x300] = STACK[0x1148];
  STACK[0x308] = STACK[0x1140];
  LODWORD(STACK[0x314]) = STACK[0x113C];
  STACK[0x318] = STACK[0x1130];
  STACK[0x320] = a56;
  v58 = STACK[0x320];
  v59 = STACK[0x318];
  v60 = STACK[0x314];
  v61 = STACK[0x308];
  v62 = STACK[0x300];
  v63 = STACK[0x2F8];
  v64 = STACK[0x2F4];
  v65 = STACK[0x2E8];
  v66 = STACK[0x2E0];
  v67 = STACK[0x2DC];
  v68 = STACK[0x2D0];
  v69 = STACK[0x2C8];
  v70 = STACK[0x2C0];
  v71 = STACK[0x2B8];
  v72 = STACK[0x2B4];
  v73 = STACK[0x2A8];
  v74 = STACK[0x2A4];
  v75 = STACK[0x2A0];
  LODWORD(STACK[0x32C]) = a58;
  LODWORD(STACK[0x330]) = v75;
  LODWORD(STACK[0x334]) = v74;
  STACK[0x338] = v58;
  STACK[0x340] = v73;
  LODWORD(STACK[0x34C]) = v72;
  STACK[0x350] = v71;
  STACK[0x358] = v70;
  STACK[0x360] = v69;
  STACK[0x368] = v68;
  LODWORD(STACK[0x374]) = v67;
  STACK[0x378] = v66;
  STACK[0x380] = v65;
  LODWORD(STACK[0x38C]) = v64;
  STACK[0x390] = v63;
  STACK[0x398] = v62;
  STACK[0x3A0] = v61;
  LODWORD(STACK[0x3AC]) = v60;
  STACK[0x3B0] = v59;
  LODWORD(STACK[0x3BC]) = v72;
  return sub_193206878();
}

void sub_193206878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int *a31,void (*a32)(_QWORD, uint64_t, _QWORD),uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  int v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v71;

  v71 = STACK[0x3AC];
  v69 = STACK[0x398];
  v70 = STACK[0x3A0];
  v68 = STACK[0x390];
  v67 = STACK[0x38C];
  v65 = STACK[0x378];
  v66 = STACK[0x380];
  v64 = STACK[0x374];
  v55 = STACK[0x368];
  v56 = STACK[0x360];
  v57 = STACK[0x358];
  v58 = STACK[0x350];
  v59 = STACK[0x34C];
  v60 = STACK[0x340];
  v61 = STACK[0x338];
  v62 = STACK[0x334];
  v63 = STACK[0x330];
  a32(*a31, a55, LODWORD(STACK[0x32C]));
  LODWORD(STACK[0x3C0]) = v63;
  LODWORD(STACK[0x3C4]) = v62;
  STACK[0x3C8] = v61;
  STACK[0x3D0] = v60;
  LODWORD(STACK[0x3DC]) = v59;
  STACK[0x3E0] = v58;
  STACK[0x3E8] = v57;
  STACK[0x3F0] = v56;
  STACK[0x3F8] = v55;
  LODWORD(STACK[0x404]) = v64;
  STACK[0x408] = v65;
  STACK[0x410] = v66;
  LODWORD(STACK[0x41C]) = v67;
  STACK[0x420] = v68;
  STACK[0x428] = v69;
  STACK[0x430] = v70;
  LODWORD(STACK[0x43C]) = v71;
  JUMPOUT(0x193206998);
}

uint64_t sub_193206AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  _BOOL4 v62;

  v61 = STACK[0xD18];
  v62 = STACK[0xD18] == 0;
  LOBYTE(STACK[0xD2F]) = v62;
  STACK[0xD30] = v61 + 12;
  STACK[0xD38] = v61 + 8;
  LODWORD(a47) = STACK[0xD28];
  LODWORD(a46) = STACK[0xD24];
  LODWORD(a44) = STACK[0xD0C];
  LODWORD(a39) = STACK[0xCCC];
  return ((uint64_t (*)(unint64_t, unint64_t, uint64_t, _QWORD, uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(v60 + 8 * (int)((v58 + (v57 & 0xA1F9BBC2 ^ (v59 + 1759)) + 1949) ^ (1746 * !v62))) - ((v58 + (v57 & 0xA1F9BBC2 ^ (v59 + 1759)) + 935) | 0xA88) + 3740))(STACK[0xCB8], STACK[0xCC0], 3570427851, LODWORD(STACK[0x106C]), a5, &a57, a7, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           STACK[0xCD0],
           a39,
           STACK[0xCE8],
           STACK[0xCD8],
           STACK[0xCF8],
           STACK[0xCF0],
           a44,
           STACK[0xD00],
           a46,
           a47,
           STACK[0xD10],
           v61);
}

uint64_t sub_193206C14@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  _DWORD *v47;
  _DWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _BOOL4 v51;
  BOOL v52;
  int v53;
  int v54;
  int v55;

  v49 = ((2 * *v47) & 0x16AF69F66)
      + 0x40021044B8BB044FLL
      + (v46 ^ 0x6BE ^ v46 ^ (a1 - 631) ^ *v47 ^ 0xBFFDEFBBCADE6AC2);
  v50 = (*v48 ^ 0xFCAE9F3F4F7F6FBFLL) + 0x35160C11EB6E43FLL + ((2 * *v48) & 0x9EFEDF7E);
  v51 = v49 < 0x6E3653FE;
  v52 = v49 > v50;
  v53 = (v50 < 0x6E3653FE) ^ v51;
  v54 = v52;
  if (v53)
    v55 = v51;
  else
    v55 = v54;
  return (*(uint64_t (**)(void))(a46 + 8 * ((119 * (v55 ^ 1)) ^ v46)))();
}

uint64_t sub_193206CF8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,_QWORD *a49)
{
  uint64_t (*v49)(void);
  int v50;
  _DWORD *v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;

  v52 = ((((v50 + 1862337771) | 0x10A42066) - 1172811117) & (2 * a4)) + (a4 ^ 0x1CDEBFFD) - 484360189;
  v53 = *(unsigned __int8 *)(*a49 + v52 + 2);
  v54 = (((v53 + 4420934 - ((2 * v53) & 0x4C)) << 8) - 0x2000) ^ 0x43752600 | (((-16777216
                                                                               * *(unsigned __int8 *)(*a49 + v52)) | (*(unsigned __int8 *)(*a49 + v52 + 1) << 16))
                                                                             - 0x1000000);
  v55 = *(unsigned __int8 *)(*a49 + v52 + 3);
  v56 = (v54 ^ 0x5A6FFF) & ((v55 - 1636428685 - ((2 * v55) & 0xE6)) ^ 0x82C7F04) ^ v54 & 0x69A59400;
  v57 = (v56 & 0x324D5387 ^ 0x12494387) + (v56 ^ 0x28A41408) - ((v56 ^ 0x28A41408) & 0x324D5387);
  *a6 = (((v57 ^ 0x1FBDF440) - 789305555) ^ ((v57 ^ 0x7B8AD7DE) - 1262287693) ^ ((v57 ^ 0x81840F66) + 1322114059))
      - 619719546;
  *v51 = a4 + 4;
  return v49();
}

uint64_t sub_193206E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,uint64_t a54)
{
  int v54;
  int v55;

  return ((uint64_t (*)(void))(*(_QWORD *)(a54 + 8 * ((v54 * a8) ^ (v55 + a53 + 2922))) - 8))();
}

uint64_t sub_193206ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  int v55;
  int v56;
  uint64_t v57;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(v57 + 8 * (((a55 == (v55 ^ 0x3D3) + 101370859) * ((a6 + v55 - 1218) ^ (v56 + 12))) ^ v55)) - 8))(a1, a2, a3, a4, STACK[0xCB0], a5, STACK[0xCA0]);
}

void sub_193206F34()
{
  JUMPOUT(0x193206BE0);
}

void sub_193206F5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, unint64_t a6, unint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unint64_t a38,int a39,unint64_t a40,unint64_t a41,unint64_t a42,unint64_t a43,int a44,unint64_t a45,int a46,int a47,int a48,unint64_t a49,unint64_t a50)
{
  unint64_t v50;
  unint64_t v51;
  int v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;

  v58 = v52 - 1975;
  STACK[0x9C8] = v51;
  STACK[0x9D0] = a6;
  STACK[0x1058] = a6;
  STACK[0x1060] = v51;
  LOBYTE(STACK[0x9DB]) = a8;
  LODWORD(STACK[0x9DC]) = v55;
  LODWORD(STACK[0x106C]) = a4;
  LODWORD(STACK[0x1070]) = v55;
  LOBYTE(STACK[0x1077]) = a8;
  LODWORD(STACK[0x450]) = a48;
  LODWORD(STACK[0x454]) = a46;
  STACK[0x458] = a50;
  STACK[0x460] = a49;
  LODWORD(STACK[0x46C]) = a44;
  STACK[0x470] = a45;
  STACK[0x478] = a42;
  STACK[0x480] = a43;
  STACK[0x488] = a40;
  LODWORD(STACK[0x494]) = v54;
  STACK[0x498] = a41;
  STACK[0x4A0] = a38;
  LODWORD(STACK[0x4AC]) = a39;
  STACK[0x4B0] = v57;
  STACK[0x4B8] = v50;
  STACK[0x4C0] = a5;
  LODWORD(STACK[0x4CC]) = v53;
  STACK[0x4D0] = a7;
  v59 = STACK[0x4D0];
  v60 = STACK[0x4CC];
  v61 = STACK[0x4C0];
  v62 = STACK[0x4B8];
  v63 = STACK[0x4B0];
  v64 = STACK[0x4AC];
  v65 = STACK[0x4A0];
  v66 = STACK[0x498];
  v67 = STACK[0x494];
  v68 = STACK[0x488];
  v69 = STACK[0x480];
  v70 = STACK[0x478];
  v71 = STACK[0x470];
  v72 = STACK[0x46C];
  v73 = STACK[0x460];
  v74 = STACK[0x458];
  v75 = STACK[0x454];
  v76 = 17 * (v58 ^ 0x14u) + *(_QWORD *)(v56 + 8 * v58) - 1861;
  LODWORD(STACK[0x9E0]) = STACK[0x450];
  LODWORD(STACK[0x9E4]) = v75;
  STACK[0x9E8] = v73;
  LODWORD(STACK[0x9F4]) = v72;
  STACK[0x9F8] = v71;
  STACK[0xA00] = v70;
  STACK[0xA08] = v69;
  STACK[0xA10] = v68;
  LODWORD(STACK[0xA1C]) = v67;
  STACK[0xA20] = v66;
  STACK[0xA28] = v76;
  STACK[0xA30] = v65;
  LODWORD(STACK[0xA3C]) = v64;
  STACK[0xA40] = v63;
  STACK[0xA48] = v62;
  STACK[0xA50] = v61;
  LODWORD(STACK[0xA5C]) = v60;
  STACK[0xA60] = v59;
  STACK[0xA68] = v74;
  JUMPOUT(0x19320783CLL);
}

void sub_193207700()
{
  int v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;

  v0 = STACK[0x55C];
  v1 = STACK[0x550];
  v2 = STACK[0x54C];
  v3 = STACK[0x540];
  v4 = STACK[0x538];
  v5 = STACK[0x530];
  v6 = STACK[0x52C];
  v7 = STACK[0x520];
  v8 = STACK[0x518];
  v9 = STACK[0x514];
  v10 = STACK[0x508];
  v11 = STACK[0x500];
  v12 = STACK[0x4F8];
  v13 = STACK[0x4F0];
  v14 = STACK[0x4EC];
  v15 = STACK[0x4E0];
  LODWORD(STACK[0x560]) = STACK[0x4DC];
  LODWORD(STACK[0x564]) = v0;
  STACK[0x568] = v15;
  LODWORD(STACK[0x574]) = v14;
  STACK[0x578] = v13;
  STACK[0x580] = v12;
  STACK[0x588] = v11;
  STACK[0x590] = v10;
  LODWORD(STACK[0x59C]) = v9;
  STACK[0x5A0] = v8;
  STACK[0x5A8] = v7;
  LODWORD(STACK[0x5B4]) = v6;
  STACK[0x5B8] = v5;
  STACK[0x5C0] = v4;
  STACK[0x5C8] = v3;
  LODWORD(STACK[0x5D4]) = v2;
  STACK[0x5D8] = v1;
  JUMPOUT(0x193207794);
}

uint64_t sub_193207908()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)STACK[0x1078];
  STACK[0x1108] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 == 0) * (((v0 + 341) | 0x6C) ^ 0x713)) ^ v0)) - 8))();
}

uint64_t sub_193207948()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t (*v12)(void);

  v4 = STACK[0x794];
  STACK[0xEA8] = STACK[0x788];
  LODWORD(STACK[0xEB4]) = STACK[0x784];
  STACK[0xEB8] = STACK[0x778];
  STACK[0xEC0] = STACK[0x770];
  STACK[0xEC8] = STACK[0x768];
  LODWORD(STACK[0xED4]) = STACK[0x764];
  STACK[0xED8] = STACK[0x758];
  STACK[0xEE0] = STACK[0x750];
  LODWORD(STACK[0xEEC]) = STACK[0x74C];
  STACK[0xEF0] = STACK[0x740];
  STACK[0xEF8] = STACK[0x738];
  v5 = STACK[0x730];
  STACK[0xF00] = STACK[0x730];
  v6 = STACK[0x728];
  STACK[0xF08] = STACK[0x728];
  v7 = STACK[0x724];
  LODWORD(STACK[0xF14]) = STACK[0x724];
  v8 = STACK[0x718];
  STACK[0xF18] = STACK[0x718];
  v9 = STACK[0x710];
  STACK[0xF20] = STACK[0x710];
  v10 = STACK[0x70C];
  LODWORD(STACK[0xF2C]) = STACK[0x70C];
  v11 = STACK[0x708];
  LODWORD(STACK[0xF30]) = STACK[0x708];
  LODWORD(STACK[0x798]) = v11;
  LODWORD(STACK[0x79C]) = v10;
  STACK[0x7A0] = v9;
  STACK[0x7A8] = v8;
  LODWORD(STACK[0x7B4]) = v7;
  STACK[0x7B8] = v6;
  STACK[0x7C0] = v5;
  STACK[0x7C8] = STACK[0xEF8];
  STACK[0x7D0] = STACK[0xEF0];
  LODWORD(STACK[0x7DC]) = STACK[0xEEC];
  STACK[0x7E0] = STACK[0xEE0];
  STACK[0x7E8] = STACK[0xED8];
  LODWORD(STACK[0x7F4]) = STACK[0xED4];
  STACK[0x7F8] = STACK[0xEC8];
  STACK[0x800] = STACK[0xEC0];
  STACK[0x808] = STACK[0xEB8];
  LODWORD(STACK[0x814]) = STACK[0xEB4];
  STACK[0x818] = STACK[0xEA8];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                      + 8
                                      * (int)(((v4 == v3) * ((v0 - 91098512) & 0x85C8E7AB ^ 0x78E)) ^ (v1 + v0 + 1802)))
                          - 4);
  LODWORD(STACK[0x824]) = v4;
  return v12();
}

uint64_t sub_193207A98@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t (*v17)(void);

  v2 = (_DWORD *)STACK[0xEE0];
  v3 = STACK[0xEE0];
  v4 = STACK[0xF2C];
  v5 = (v4 ^ 0xC2D43CE8) & (2 * (v4 & 0xC2D0BEED)) ^ v4 & 0xC2D0BEED;
  v6 = ((2 * (a1 ^ 0xC6551F21 ^ v4)) ^ 0x90B4C9E) & (a1 ^ 0xC6551F21 ^ v4) ^ (2 * (a1 ^ 0xC6551F21 ^ v4)) & 0x485A64E;
  v7 = v6 ^ 0x484A241;
  v8 = (v6 ^ 0x1040C) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0x1216993C) & v7 ^ (4 * v7) & 0x485A64C;
  v10 = (v9 ^ 0x48000) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x4812643)) ^ 0x485A64F0) & (v9 ^ 0x4812643) ^ (16 * (v9 ^ 0x4812643)) & 0x485A640;
  v12 = v10 ^ 0x485A64F ^ (v11 ^ 0x2400) & (v10 << 8);
  v13 = STACK[0xEF8];
  v14 = *(_QWORD *)STACK[0xEF8];
  v15 = LODWORD(STACK[0xF2C]) ^ (2
                               * ((v12 << 16) & 0x4850000 ^ v12 ^ ((v12 << 16) ^ 0x264F0000) & (((v11 ^ 0x485820F) << 8) & 0x4850000 ^ (((v11 ^ 0x485820F) << 8) ^ 0x5A60000) & (v11 ^ 0x485820F) ^ 0x10000)));
  v16 = ((2 * *(_DWORD *)STACK[0xEE0]) & 0x5D17FFB8) + (*(_DWORD *)STACK[0xEE0] ^ 0x2E8BFFDC) - 780926940;
  *(_BYTE *)(v14 + v16) = HIBYTE(v15) ^ 0xC3;
  *(_BYTE *)(v14 + v16 + 1) = BYTE2(v15) ^ 0xD1;
  *(_BYTE *)(v14 + v16 + 2) = (((BYTE1(v15) ^ 0xF2) - 2 * ((BYTE1(v15) ^ 0xF2) & 7 ^ BYTE1(v15) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v14 + v16 + 3) = v15 ^ 0x73;
  *v2 += 4;
  LODWORD(STACK[0x798]) = STACK[0xF30];
  LODWORD(STACK[0x79C]) = v4;
  STACK[0x7A0] = STACK[0xF20];
  STACK[0x7A8] = STACK[0xF18];
  LODWORD(STACK[0x7B4]) = STACK[0xF14];
  STACK[0x7B8] = STACK[0xF08];
  STACK[0x7C0] = STACK[0xF00];
  STACK[0x7C8] = v13;
  STACK[0x7D0] = STACK[0xEF0];
  LODWORD(STACK[0x7DC]) = STACK[0xEEC];
  STACK[0x7E0] = v3;
  STACK[0x7E8] = STACK[0xED8];
  LODWORD(STACK[0x7F4]) = STACK[0xED4];
  STACK[0x7F8] = STACK[0xEC8];
  STACK[0x800] = STACK[0xEC0];
  STACK[0x808] = STACK[0xEB8];
  LODWORD(STACK[0x814]) = STACK[0xEB4];
  STACK[0x818] = STACK[0xEA8];
  LODWORD(STACK[0x824]) = v1;
  LODWORD(STACK[0xF34]) = STACK[0x824];
  STACK[0xF38] = STACK[0x818];
  LODWORD(STACK[0xF44]) = STACK[0x814];
  STACK[0xF48] = STACK[0x808];
  STACK[0xF50] = STACK[0x800];
  STACK[0xF58] = STACK[0x7F8];
  LODWORD(STACK[0xF64]) = STACK[0x7F4];
  STACK[0xF68] = STACK[0x7E8];
  STACK[0xF70] = STACK[0x7E0];
  LODWORD(STACK[0xF7C]) = STACK[0x7DC];
  v17 = (uint64_t (*)(void))STACK[0x7D0];
  STACK[0xF80] = STACK[0x7D0];
  STACK[0xF88] = STACK[0x7C8];
  STACK[0xF90] = STACK[0x7C0];
  STACK[0xF98] = STACK[0x7B8];
  LODWORD(STACK[0xFA4]) = STACK[0x7B4];
  STACK[0xFA8] = STACK[0x7A8];
  STACK[0xFB0] = STACK[0x7A0];
  LODWORD(STACK[0xFB8]) = STACK[0x79C];
  LODWORD(STACK[0xFBC]) = STACK[0x798];
  return v17();
}

uint64_t sub_193207DA4@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0x8A0] = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 ^ 0x3E9) + v1 + 1048 - 4912) * (v2 > a1)) ^ v1)))();
}

uint64_t sub_193207DD8()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t (*v7)(void);

  v4 = (v0 + 2141527970);
  LODWORD(STACK[0x938]) = STACK[0x1024];
  v5 = (v0 - 3490) | 0x880u;
  LODWORD(STACK[0x93C]) = STACK[0x1020];
  STACK[0x940] = STACK[0x1018];
  STACK[0x948] = STACK[0x1010];
  LODWORD(STACK[0x954]) = STACK[0x100C];
  STACK[0x958] = STACK[0x1000];
  STACK[0x960] = STACK[0xFF8];
  STACK[0x968] = STACK[0xFF0];
  STACK[0x970] = STACK[0xFE8];
  LODWORD(STACK[0x97C]) = STACK[0xFE4];
  STACK[0x980] = STACK[0xFD8];
  STACK[0x988] = STACK[0x1028];
  LODWORD(STACK[0x994]) = STACK[0xFD4];
  STACK[0x998] = STACK[0xFC0];
  STACK[0x9A0] = STACK[0x1030];
  STACK[0x9A8] = STACK[0x1048];
  LODWORD(STACK[0x9B4]) = v1;
  v6 = ((LOBYTE(STACK[0x1047]) << 6) | (LOBYTE(STACK[0x1047]) << 9)) ^ v0;
  STACK[0x9B8] = STACK[0xFC8];
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v6) - ((v3 + v5 - 2203) ^ v4));
  LODWORD(STACK[0x9C4]) = v1;
  return v7();
}

uint64_t sub_193207EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(unint64_t, uint64_t))
{
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t (*v32)(void);

  v31 = a27(STACK[0x1048], 2241923698);
  STACK[0x1050] = v31;
  LODWORD(STACK[0x8A8]) = STACK[0x1024];
  LODWORD(STACK[0x8AC]) = STACK[0x1020];
  STACK[0x8B0] = STACK[0x1018];
  STACK[0x8B8] = STACK[0x1010];
  LODWORD(STACK[0x8C4]) = STACK[0x100C];
  STACK[0x8C8] = STACK[0x1000];
  STACK[0x8D0] = STACK[0xFF8];
  STACK[0x8D8] = STACK[0xFF0];
  STACK[0x8E0] = STACK[0xFE8];
  LODWORD(STACK[0x8EC]) = STACK[0xFE4];
  STACK[0x8F0] = STACK[0xFD8];
  STACK[0x8F8] = STACK[0x1028];
  LODWORD(STACK[0x904]) = STACK[0xFD4];
  STACK[0x908] = STACK[0xFC0];
  STACK[0x910] = STACK[0x1030];
  STACK[0x918] = STACK[0x1048];
  LODWORD(STACK[0x924]) = v30;
  STACK[0x928] = 0;
  v32 = (uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * (((v31 != 0) | (8 * (v31 != 0))) ^ v27))
                          - ((v27 - 1621) ^ 0xFFFFFFFFFFFFF00DLL)
                          - 25 * (v27 ^ 0x82Eu));
  LODWORD(STACK[0x934]) = v28 - 2;
  return v32();
}

uint64_t sub_193207F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v7 = (v4 - 329) | 0x400;
  v8 = STACK[0x1030];
  v9 = (v7 ^ *(_DWORD *)STACK[0x1030] ^ 0x33DE24F2FB9DFBE0)
     + ((2 * *(unsigned int *)STACK[0x1030]) & 0x1F73BFDCALL)
     - 0x4C20A280800625;
  v10 = (v9 ^ 0x25A96FCF76F28612) & (2 * (v9 & 0xF84E20740)) ^ v9 & 0xF84E20740;
  v11 = ((2 * (v9 ^ 0x25A96FDF7EF28892)) ^ 0x12092881F4211FA4) & (v9 ^ 0x25A96FDF7EF28892) ^ (2
                                                                                                  * (v9 ^ 0x25A96FDF7EF28892)) & 0x69C49470FA108FD2;
  v12 = v11 ^ 0x284494100A108052;
  v13 = (v11 ^ 0x6030000F00) & (4 * v10) ^ v10;
  LODWORD(STACK[0xA70]) = STACK[0x1024];
  LODWORD(STACK[0xA74]) = STACK[0x1020];
  v14 = ((4 * v12) ^ 0x271251C3E8423F48) & v12 ^ (4 * v12) & 0x69C49470FA108FD0;
  STACK[0xA78] = STACK[0x1018];
  STACK[0xA80] = STACK[0x1010];
  v15 = (v14 ^ 0xA1001040E8000F40) & (16 * v13) ^ v13;
  LODWORD(STACK[0xA8C]) = STACK[0x100C];
  STACK[0xA90] = STACK[0x1000];
  v16 = *(_QWORD *)(v5 + 8 * v4);
  v17 = ((16 * (v14 ^ 0x48C4843012108092)) ^ 0x1C49470FA108FD20) & (v14 ^ 0x48C4843012108092) ^ (16 * (v14 ^ 0x48C4843012108092)) & 0xE9C49470FA108FD0;
  STACK[0xA98] = STACK[0xFF8];
  STACK[0xAA0] = STACK[0xFF0];
  v18 = (v17 ^ 0x88400400A0008D00) & (v15 << 8) ^ v15;
  STACK[0xAA8] = STACK[0xFE8];
  LODWORD(STACK[0xAB4]) = STACK[0xFE4];
  v19 = STACK[0xFC0];
  v20 = *(_QWORD *)STACK[0xFC0];
  v21 = (((v17 ^ 0x618490705A1002D2) << 8) ^ 0xC49470FA108FD200) & (v17 ^ 0x618490705A1002D2) ^ ((v17 ^ 0x618490705A1002D2) << 8) & 0xE9C49470FA108F00;
  STACK[0xAB8] = STACK[0xFD8];
  STACK[0xAC0] = v16;
  STACK[0xAC8] = STACK[0x1028];
  LODWORD(STACK[0xAD4]) = STACK[0xFD4];
  STACK[0xAD8] = v19;
  STACK[0xAE0] = v8;
  STACK[0xAE8] = STACK[0x1048];
  LODWORD(STACK[0xAF4]) = v6;
  v22 = STACK[0x1050];
  STACK[0xAF8] = STACK[0x1050];
  STACK[0xB00] = v22;
  STACK[0xB08] = 0x5D952DACE41797ELL;
  STACK[0xB10] = v20;
  STACK[0xB18] = v9 ^ (2 * (v21 & 0x10108A1000000000 ^ v18 ^ (v21 ^ 0x4084107010000000) & (v18 << 16))) ^ 0x37478AC301C98F25;
  STACK[0x1110] = STACK[0xB18];
  STACK[0x1118] = STACK[0xB10];
  STACK[0x1120] = STACK[0xB08];
  STACK[0x1128] = STACK[0xB00];
  STACK[0x1130] = STACK[0xAF8];
  LODWORD(STACK[0x113C]) = STACK[0xAF4];
  STACK[0x1140] = STACK[0xAE8];
  STACK[0x1148] = STACK[0xAE0];
  STACK[0x1150] = STACK[0xAD8];
  LODWORD(STACK[0x115C]) = STACK[0xAD4];
  STACK[0x1160] = STACK[0xAC8];
  STACK[0x1168] = STACK[0xAB8];
  LODWORD(STACK[0x1174]) = STACK[0xAB4];
  STACK[0x1178] = STACK[0xAA8];
  STACK[0x1180] = STACK[0xAA0];
  STACK[0x1188] = STACK[0xA98];
  STACK[0x1190] = STACK[0xA90];
  LODWORD(STACK[0x119C]) = STACK[0xA8C];
  STACK[0x11A0] = STACK[0xA80];
  STACK[0x11A8] = STACK[0xA78];
  LODWORD(STACK[0x11B0]) = STACK[0xA74];
  LODWORD(v21) = STACK[0x1118] > STACK[0x1120]
                               - 0x5D952DACE418A46
                               + STACK[0x1128]
                               + ((v7 - 2033689862) & 0x7937AEF1)
                               + 471;
  LODWORD(STACK[0x11B4]) = STACK[0xA70];
  STACK[0x11B8] = STACK[0xAC0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * (v7 | (8 * (int)v21))))(0x767A3EBDF7FA0F3DLL, a2, a3, 0xC0391580E16, 3713000404);
}

void sub_193208278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void (*a50)(_QWORD))
{
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  int v71;

  v50 = (_QWORD *)STACK[0x1150];
  a50(*(_QWORD *)STACK[0x1150]);
  v51 = STACK[0x1130];
  *v50 = STACK[0x1130];
  v52 = STACK[0x1148];
  v53 = STACK[0x1140];
  *(_DWORD *)STACK[0x1148] = STACK[0x1140];
  LODWORD(STACK[0x8A8]) = STACK[0x11B4];
  LODWORD(STACK[0x8AC]) = STACK[0x11B0];
  STACK[0x8B0] = STACK[0x11A8];
  STACK[0x8B8] = STACK[0x11A0];
  LODWORD(STACK[0x8C4]) = STACK[0x119C];
  STACK[0x8C8] = STACK[0x1190];
  STACK[0x8D0] = STACK[0x1188];
  STACK[0x8D8] = STACK[0x1180];
  STACK[0x8E0] = STACK[0x1178];
  LODWORD(STACK[0x8EC]) = STACK[0x1174];
  STACK[0x8F0] = STACK[0x1168];
  STACK[0x8F8] = STACK[0x1160];
  LODWORD(STACK[0x904]) = STACK[0x115C];
  STACK[0x908] = STACK[0x1150];
  STACK[0x910] = v52;
  STACK[0x918] = v53;
  v54 = STACK[0x113C];
  LODWORD(STACK[0x924]) = STACK[0x113C];
  STACK[0x928] = v51;
  LODWORD(STACK[0x934]) = v54;
  v55 = STACK[0x934];
  v56 = STACK[0x928];
  LODWORD(v52) = STACK[0x924];
  v57 = STACK[0x918];
  v58 = STACK[0x910];
  v59 = STACK[0x908];
  v60 = STACK[0x904];
  v61 = STACK[0x8F8];
  v62 = STACK[0x8F0];
  v63 = STACK[0x8EC];
  v64 = STACK[0x8E0];
  v65 = STACK[0x8D8];
  v66 = STACK[0x8D0];
  v67 = STACK[0x8C8];
  v68 = STACK[0x8C4];
  v69 = STACK[0x8B8];
  v70 = STACK[0x8B0];
  v71 = STACK[0x8AC];
  LODWORD(STACK[0x938]) = STACK[0x8A8];
  LODWORD(STACK[0x93C]) = v71;
  STACK[0x940] = v70;
  STACK[0x948] = v69;
  LODWORD(STACK[0x954]) = v68;
  STACK[0x958] = v67;
  STACK[0x960] = v66;
  STACK[0x968] = v65;
  STACK[0x970] = v64;
  LODWORD(STACK[0x97C]) = v63;
  STACK[0x980] = v62;
  STACK[0x988] = v61;
  LODWORD(STACK[0x994]) = v60;
  STACK[0x998] = v59;
  STACK[0x9A0] = v58;
  STACK[0x9A8] = v57;
  LODWORD(STACK[0x9B4]) = v52;
  STACK[0x9B8] = v56;
  LODWORD(STACK[0x9C4]) = v55;
  JUMPOUT(0x1932083D0);
}

uint64_t sub_1932084F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void (*a50)(void))
{
  _QWORD *v50;
  int v51;
  int v52;
  unint64_t v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int v66;
  unint64_t v67;

  v50 = (_QWORD *)STACK[0x1078];
  *v50 = 0;
  v50[1] = 0;
  a50();
  v51 = STACK[0x10FC];
  LODWORD(STACK[0x2A0]) = STACK[0x10FC];
  v52 = STACK[0x10F8];
  LODWORD(STACK[0x2A4]) = STACK[0x10F8];
  v53 = STACK[0x10F0];
  STACK[0x2A8] = STACK[0x10F0];
  v54 = STACK[0x10EC];
  LODWORD(STACK[0x2B4]) = STACK[0x10EC];
  v55 = STACK[0x10E0];
  STACK[0x2B8] = STACK[0x10E0];
  v56 = STACK[0x10D8];
  STACK[0x2C0] = STACK[0x10D8];
  v57 = STACK[0x10D0];
  STACK[0x2C8] = STACK[0x10D0];
  v58 = STACK[0x10C8];
  STACK[0x2D0] = STACK[0x10C8];
  v59 = STACK[0x10C4];
  LODWORD(STACK[0x2DC]) = STACK[0x10C4];
  v60 = STACK[0x10B8];
  STACK[0x2E0] = STACK[0x10B8];
  v61 = STACK[0x10B0];
  STACK[0x2E8] = STACK[0x10B0];
  v62 = STACK[0x10AC];
  LODWORD(STACK[0x2F4]) = STACK[0x10AC];
  v63 = STACK[0x10A0];
  STACK[0x2F8] = STACK[0x10A0];
  v64 = STACK[0x1098];
  STACK[0x300] = STACK[0x1098];
  v65 = STACK[0x1090];
  STACK[0x308] = STACK[0x1090];
  v66 = STACK[0x108C];
  LODWORD(STACK[0x314]) = STACK[0x108C];
  v67 = STACK[0x1080];
  STACK[0x318] = STACK[0x1080];
  LODWORD(STACK[0x4DC]) = v52;
  STACK[0x4E0] = v53;
  LODWORD(STACK[0x4EC]) = v54;
  STACK[0x4F0] = v55;
  STACK[0x4F8] = v56;
  STACK[0x500] = v57;
  STACK[0x508] = v58;
  LODWORD(STACK[0x514]) = v59;
  STACK[0x518] = v60;
  STACK[0x520] = v61;
  LODWORD(STACK[0x52C]) = v62;
  STACK[0x530] = v63;
  STACK[0x538] = v64;
  STACK[0x540] = v65;
  LODWORD(STACK[0x54C]) = v66;
  STACK[0x320] = 0;
  STACK[0x550] = v67;
  LODWORD(STACK[0x55C]) = STACK[0x10C4];
  LODWORD(STACK[0x5E4]) = v51;
  return ((uint64_t (*)(void))STACK[0x1100])();
}

void sub_193208634()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 4) = v1;
}

uint64_t sub_19320863C(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  STACK[0xB28] = v2;
  v6 = v3 + 1210;
  v7 = v2 - 1;
  v8 = (a2 & (2 * v7)) + (v7 ^ a1);
  *(_BYTE *)(STACK[0x1128] + v8 + STACK[0x11E0]) = *(_BYTE *)(STACK[0x1118] + v8 + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2995 * (v7 == 0)) ^ v6)) - 12))();
}

uint64_t sub_193208690@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = v3 - 1;
  v12 = (a2 & (2 * v11)) + (v11 ^ a1);
  *(_BYTE *)(v6 + v12 + v5) = *(_BYTE *)(v4 + v12 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v11 == 0) * v7) ^ (v9 + a3 + 1210))) - 12))();
}

uint64_t sub_1932086D4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unint64_t v47;
  int v48;
  uint64_t v49;

  STACK[0xB28] = v47;
  return ((uint64_t (*)(void))(*(_QWORD *)(v49 + 8 * ((14 * (a47 != 3)) ^ (v48 + a1 + 793))) - 8))();
}

uint64_t sub_193208770()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  _BOOL4 v8;

  STACK[0xC78] = STACK[0xEF8];
  v6 = STACK[0xFE4];
  LODWORD(STACK[0xDEC]) = STACK[0xFE4];
  LODWORD(STACK[0xE0C]) = v0;
  STACK[0xC88] = (unint64_t)&STACK[0x9E4];
  STACK[0x1160] = (unint64_t)&STACK[0x9E4];
  LODWORD(STACK[0x119C]) = v6;
  v7 = STACK[0xC78];
  STACK[0x1168] = STACK[0xC78];
  STACK[0x1178] = *(_QWORD *)(v5 + 8 * v0) - 8;
  v8 = v7 == 0;
  LOBYTE(STACK[0x1047]) = v8;
  *(_BYTE *)(v4 + 1) = 0;
  LODWORD(STACK[0xE14]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((115 * v8) ^ (v1 + v2 + 3381)))
                            - ((v2 + 804233111) & 0x506B3771 ^ 0x478)))();
}

uint64_t sub_1932088D0@<X0>(unsigned int a1@<W8>)
{
  char v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v5 = *(_DWORD *)(STACK[0x1168] + 12);
  v4 = STACK[0x1168] + 12;
  STACK[0x1180] = v4;
  LODWORD(STACK[0x11B0]) = v5;
  v6 = (v5 ^ 0xF7CEB3EABBAFFCFELL)
     + 0x8314C16186F71CBLL
     + (((unint64_t)v5 << (a1 - 9 + v1)) & 0x1775FF9FCLL);
  v7 = (*(unsigned int *)(v4 - 4) ^ 0xFBEFFBFFD29FBFEDLL)
     + 0x4100401017FAED8
     + ((2 * *(unsigned int *)(v4 - 4)) & 0x1A53F7FDALL);
  v8 = v6 < 0xD41F6EC5;
  v9 = v6 > v7;
  if (v8 != v7 < 0xD41F6EC5)
    v9 = v8;
  LODWORD(STACK[0xE14]) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((3943 * !v9) ^ a1)))();
}

uint64_t sub_1932089C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v3 = *(_QWORD *)STACK[0x1168];
  v4 = STACK[0x11B0];
  v5 = ((2 * v4) & 0x395D7EFE) + (v4 ^ 0x1CAEBF7F);
  v6 = -16777216 * *(unsigned __int8 *)(v3 + ((a1 + 838933718) | 0x4DA40C21) + 1672221466 + v5);
  v5 -= 481214334;
  v7 = *(unsigned __int8 *)(v3 + v5 + 1);
  v8 = (((v7 + 4420934 - ((2 * v7) & 0x4C)) << 8) - 0x2000) ^ 0x43752600 | ((v6 | (*(unsigned __int8 *)(v3 + v5) << 16))
                                                                          - 0x1000000);
  LODWORD(v3) = *(unsigned __int8 *)(v3 + v5 + 2);
  v9 = (v8 ^ 0x5A6FFF) & ((v3 - 1636428685 - ((2 * v3) & 0xE6)) ^ 0x82C7F04) ^ v8 & 0x69A59400;
  v10 = (v9 & 0x324D5387 ^ 0x12494387) + (v9 ^ 0x28A41408) - ((v9 ^ 0x28A41408) & 0x324D5387);
  *(_DWORD *)STACK[0x1160] = (((v10 ^ 0x1FBDF440) - 789305555) ^ ((v10 ^ 0x7B8AD7DE) - 1262287693) ^ ((v10 ^ 0x81840F66) + 1322114059))
                           - 619719546;
  *(_DWORD *)STACK[0x1180] = v4 + 4;
  *(_BYTE *)(v1 + 1) = 1;
  LODWORD(STACK[0xE14]) = v2;
  v11 = STACK[0xE14];
  LODWORD(STACK[0x11B4]) = STACK[0xE14];
  LOBYTE(STACK[0x1077]) = *(_BYTE *)(v1 + 1);
  STACK[0xA60] = STACK[0x1168];
  LODWORD(STACK[0xC2C]) = STACK[0x119C];
  LODWORD(STACK[0xC4C]) = v11;
  return ((uint64_t (*)(void))STACK[0x1178])();
}

uint64_t sub_193208BA0()
{
  int v0;
  int v1;
  uint64_t v2;

  STACK[0xA68] = STACK[0x1168];
  LODWORD(STACK[0xC64]) = STACK[0x119C];
  LODWORD(STACK[0xC98]) = STACK[0x11B4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((LOBYTE(STACK[0x1077]) * ((v0 ^ 0x7FA52646) - 1165)) ^ (v1 + v0 + 2728)))
                            - 8))();
}

uint64_t sub_193208BF0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = LODWORD(STACK[0x9E0]) == ((v1 - 14) ^ 0x60ADF30);
  STACK[0xA68] = STACK[0x1168];
  LODWORD(STACK[0xC64]) = STACK[0x119C];
  LODWORD(STACK[0xC98]) = v2 - 28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 * (a1 ^ 0x5EC)) ^ v1)) - 8))();
}

uint64_t sub_193208C44()
{
  int v0;
  int v1;
  uint64_t v2;

  STACK[0xA68] = 0;
  LODWORD(STACK[0xC64]) = STACK[0x119C];
  LODWORD(STACK[0xC98]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((50 * LOBYTE(STACK[0x1047])) ^ v0))
                            - ((v0 - 2248) ^ 0x18Du)
                            + 958))();
}

uint64_t sub_193208C84()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v2 = STACK[0x1168];
  v3 = *(unsigned int *)(STACK[0x1168] + 8);
  STACK[0xA68] = STACK[0x1168];
  v4 = *(_DWORD *)(v2 + 12);
  STACK[0xF18] = v2 + 12;
  LODWORD(STACK[0x1020]) = v4;
  STACK[0x1048] = v4;
  v5 = (v4 ^ 0x7E5DAAFEFABF7EF9)
     - 0x7E5DAAFEDBADBE3DLL
     + (((unint64_t)v4 << ((v0 - 123) ^ 0x4Au)) & 0x1F57EFDF2);
  v6 = (v3 ^ 0x1F7FDE55FB356BAELL) - 0x1F7FDE55DC23AAFALL + ((2 * v3) & 0x1F66AD75CLL);
  v7 = v5 < 0x1F11C0B4;
  v8 = v5 > v6;
  if (v7 != v6 < 0x1F11C0B4)
    v8 = v7;
  LODWORD(STACK[0xC64]) = STACK[0x119C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((3099 * !v8) ^ v0)) - 4))();
}

uint64_t sub_193208D78()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  BOOL v4;
  char v5;

  v3 = STACK[0x1168];
  v4 = *(_QWORD *)STACK[0x1168] + STACK[0x1048] == 0;
  STACK[0xF20] = *(_QWORD *)STACK[0x1168] + STACK[0x1048];
  *(_DWORD *)STACK[0xF18] = LODWORD(STACK[0x1020]) + 8;
  v5 = v4;
  STACK[0xA68] = v3;
  LODWORD(STACK[0xC64]) = STACK[0x119C];
  LODWORD(STACK[0xC98]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((1500 * ((v0 ^ 0x8D ^ v5) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_193208DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21)
{
  int v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;

  v23 = (v21 - 1744060395) & 0x67F43E6F;
  v24 = ((unint64_t)*(unsigned __int8 *)STACK[0xF20] << 56) | ((unint64_t)*(unsigned __int8 *)(STACK[0xF20] + 1) << 48) | ((unint64_t)*(unsigned __int8 *)(STACK[0xF20] + 2) << 40) | ((unint64_t)(v23 + *(unsigned __int8 *)(STACK[0xF20] + 3) + 1761280960 + (~(2 * *(unsigned __int8 *)(STACK[0xF20] + 3)) | 0xFFFFFFEB)) << 32) ^ 0x68FB060A00000000 | (((*(unsigned __int8 *)(STACK[0xF20] + 4) - ((2 * *(unsigned __int8 *)(STACK[0xF20] + 4)) & 0x17ELL)) << 24) + 0x69D8038CBF000000) ^ 0x69D8038CBF000000 | (((*(unsigned __int8 *)(STACK[0xF20] + 5) - ((2 * *(unsigned __int8 *)(STACK[0xF20] + 5)) & 0xCLL)) << 16) + 0x350361AEA5060000) ^ 0x350361AEA5060000 | (((*(unsigned __int8 *)(STACK[0xF20] + 6) - ((2 * *(unsigned __int8 *)(STACK[0xF20] + 6)) & 0x1CELL)) << 8) + 0x434761C106CAE700) ^ 0x434761C106CAE700;
  v25 = *(unsigned __int8 *)(STACK[0xF20] + 7)
      - ((2 * *(unsigned __int8 *)(STACK[0xF20] + 7)) & 0x182)
      + 0x9405164B5B020C1;
  *a21 = v25 & 0x546 ^ 0x5BA00EFBBE6F7AF9 ^ ((v24 - ((2 * v24) & 0xA03818AD1A802476) + 0x501C0C568D401213) ^ 0xBBC02AD332F68AALL) & (v25 ^ 0xF6BFAE9B4A4FDF3ELL);
  STACK[0xA68] = STACK[0x1168];
  LODWORD(STACK[0xC64]) = STACK[0x119C];
  LODWORD(v24) = STACK[0xC98];
  LODWORD(STACK[0x1024]) = STACK[0xC98];
  v26 = STACK[0xC64];
  LODWORD(STACK[0x106C]) = STACK[0xC64];
  v27 = STACK[0xA68];
  STACK[0xF38] = STACK[0xA68];
  v28 = STACK[0x858];
  STACK[0xF50] = STACK[0x858];
  LODWORD(STACK[0xC9C]) = v24;
  LODWORD(STACK[0xCAC]) = v26;
  STACK[0xA78] = v27;
  return ((uint64_t (*)(void))(a4
                            - (v23 ^ (a4 + 457))
                            + *(_QWORD *)(v22 + 8 * ((3535 * (v28 != 0)) ^ v23))))();
}

void sub_193208FD0(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;

  STACK[0xBD0] = ((a1 - 306229836) & 0x1240BF87 ^ 0xFFFFFFFFFFFFF07BLL) + *(_QWORD *)(v1 + 8 * a1);
  LODWORD(STACK[0xE24]) = STACK[0x1024];
  LODWORD(STACK[0xE44]) = STACK[0x106C];
  STACK[0xC90] = STACK[0xF38];
  v2 = STACK[0xF50];
  STACK[0xCA0] = STACK[0xF50];
  v3 = STACK[0xC90];
  v4 = STACK[0xE44];
  v5 = STACK[0xE24];
  STACK[0xCB8] = STACK[0xBD0];
  STACK[0xCC0] = v2;
  STACK[0xCD0] = v3;
  LODWORD(STACK[0xE54]) = v4;
  LODWORD(STACK[0xE6C]) = v5;
  JUMPOUT(0x1932090F0);
}

uint64_t sub_193209150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t (*a50)(void))
{
  _QWORD *v50;
  uint64_t v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t (*v55)(uint64_t);

  ((void (*)(unint64_t))a50)(STACK[0x11B8]);
  v50 = (_QWORD *)STACK[0x11A0];
  *v50 = 0;
  v50[1] = 0;
  v51 = a50();
  STACK[0xCD8] = STACK[0x11A8];
  STACK[0xCE8] = STACK[0x1188];
  LODWORD(STACK[0xE84]) = STACK[0x11DC];
  LODWORD(STACK[0xEA4]) = STACK[0x11C4];
  v52 = STACK[0xEA4];
  v53 = STACK[0xE84];
  v54 = STACK[0xCE8];
  v55 = (uint64_t (*)(uint64_t))STACK[0xCD8];
  LODWORD(STACK[0xBF0]) = STACK[0xE84];
  STACK[0xA40] = 0;
  LODWORD(STACK[0xBF4]) = v53;
  LODWORD(STACK[0xC9C]) = v52;
  LODWORD(STACK[0xCAC]) = v53;
  STACK[0xA78] = v54;
  LODWORD(STACK[0xCCC]) = v52;
  return v55(v51);
}

void sub_1932091CC()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 4) = v1;
}

uint64_t sub_1932091D4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x12FC]) = STACK[0xCE4];
  STACK[0x1300] = STACK[0xC50];
  STACK[0x1308] = STACK[0xC40];
  STACK[0x1310] = STACK[0xC38];
  STACK[0x1318] = STACK[0xC20];
  STACK[0x1320] = STACK[0xD48];
  STACK[0x1328] = STACK[0xC10];
  STACK[0x1330] = STACK[0xC00];
  STACK[0x1338] = STACK[0xBF8];
  LODWORD(STACK[0x1340]) = STACK[0xCCC];
  LODWORD(STACK[0x1344]) = STACK[0xCAC];
  STACK[0x1348] = STACK[0xBE8];
  LODWORD(STACK[0x1354]) = STACK[0xC9C];
  STACK[0x1358] = STACK[0xBE0];
  STACK[0x1360] = STACK[0xBC8];
  LODWORD(STACK[0x136C]) = STACK[0xC98];
  STACK[0x1370] = STACK[0xBC0];
  STACK[0x1378] = STACK[0xBB8];
  STACK[0x1380] = STACK[0xD00];
  LODWORD(STACK[0x138C]) = STACK[0xC64];
  STACK[0x1390] = STACK[0xBA8];
  LODWORD(STACK[0x139C]) = STACK[0xC4C];
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3904 * LOBYTE(STACK[0xE13])) ^ (v0 + v2 + 416)))
                         - ((v2 - v1 - 1288) ^ 0x211));
  LODWORD(STACK[0x13A0]) = STACK[0xD0C];
  return v4();
}

#error "193209B5C: call analysis failed (funcsize=145)"

uint64_t sub_193209B60()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BOOL4 v9;
  _BOOL4 v10;

  v4 = LODWORD(STACK[0xDE8]);
  v5 = STACK[0xCF8];
  v6 = *(unsigned int *)(STACK[0xCF8] + 8);
  LODWORD(STACK[0x1B44]) = STACK[0xDD4];
  STACK[0x1B48] = v5;
  STACK[0x1B50] = STACK[0xCF0];
  v7 = (v4 ^ 0xEEFD5FF6EFFD7FF6)
     + ((2 * v4) & 0x1DFFAFFECLL)
     + ((v1 + v0 + 1813) ^ 0x1102A00950112997);
  v8 = (v6 ^ 0x1DCF9BF4E6AFFFFFLL) - 0x1DCF9BF4C6FE7B1DLL + ((2 * v6) & 0x1CD5FFFFELL);
  STACK[0x1B58] = STACK[0xCE8];
  v9 = v7 < 0x1FB184E2;
  STACK[0x1B60] = STACK[0xCD8];
  v10 = v7 > v8;
  STACK[0x230] = STACK[0xD80];
  if (v9 != v8 < 0x1FB184E2)
    v10 = v9;
  STACK[0x1B68] = STACK[0xD10];
  STACK[0x1B70] = STACK[0xCD0];
  STACK[0x1B78] = STACK[0xCC0];
  LODWORD(STACK[0x1B80]) = STACK[0xDAC];
  LODWORD(STACK[0x1B84]) = STACK[0xD24];
  STACK[0x1B88] = STACK[0xCB8];
  LODWORD(STACK[0x1B94]) = STACK[0xD7C];
  STACK[0x1B98] = STACK[0xD18];
  STACK[0x1BA0] = STACK[0xCA0];
  LODWORD(STACK[0x1BAC]) = STACK[0xD44];
  STACK[0x1BB0] = STACK[0xC90];
  STACK[0x1BB8] = STACK[0xC88];
  STACK[0x280] = STACK[0xD58];
  LODWORD(STACK[0x1BC4]) = STACK[0xD40];
  STACK[0x1BC8] = STACK[0xC78];
  LODWORD(STACK[0x1BD4]) = STACK[0xD28];
  LODWORD(STACK[0x1BD8]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4150 * v10) ^ v0)) - 12))();
}

uint64_t sub_193209CDC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int *v8;
  unint64_t v9;
  unint64_t v10;

  v2 = *(_QWORD *)(v1 + 8 * v0);
  v3 = 317 * (v0 ^ 0xBu);
  LODWORD(STACK[0x1C74]) = STACK[0xDD4];
  v4 = STACK[0xCF8];
  STACK[0x1C78] = STACK[0xCF8];
  STACK[0x1C80] = STACK[0xCF0];
  STACK[0x1C88] = STACK[0xCE8];
  STACK[0x1C90] = STACK[0xCD8];
  STACK[0x350] = STACK[0xD80];
  STACK[0x1C98] = STACK[0xD10];
  STACK[0x1CA0] = STACK[0xCD0];
  STACK[0x1CA8] = STACK[0xCC0];
  LODWORD(STACK[0x1CB4]) = STACK[0xDAC];
  LODWORD(STACK[0x1CB8]) = STACK[0xD24];
  STACK[0x3A0] = (v3 ^ 0xFFFFFFFFFFFFF75FLL) + v2;
  LODWORD(STACK[0x1CBC]) = STACK[0xD7C];
  STACK[0x1CC0] = STACK[0xD18];
  STACK[0x1CC8] = STACK[0xCA0];
  LODWORD(STACK[0x1CD4]) = STACK[0xD44];
  STACK[0x1CD8] = STACK[0xC78];
  LODWORD(STACK[0x1CE4]) = STACK[0xD28];
  STACK[0x1CE8] = v4;
  LODWORD(STACK[0x1CF0]) = 4;
  v5 = (v3 + 2049);
  v6 = LODWORD(STACK[0x1CF0]);
  STACK[0xDD8] = STACK[0x1CE8];
  LODWORD(STACK[0xE84]) = STACK[0x1CE4];
  STACK[0xDE0] = STACK[0x1CD8];
  LODWORD(STACK[0xEA4]) = STACK[0x1CD4];
  STACK[0xDF0] = STACK[0x1CC8];
  STACK[0xDF8] = STACK[0x1CC0];
  LODWORD(STACK[0xEB4]) = STACK[0x1CBC];
  v7 = STACK[0x3A0];
  LODWORD(STACK[0xED4]) = STACK[0x1CB8];
  LODWORD(STACK[0xEEC]) = STACK[0x1CB4];
  STACK[0xE00] = STACK[0x1CA8];
  STACK[0xE18] = STACK[0x1CA0];
  STACK[0xE30] = STACK[0x1C98];
  STACK[0xE60] = STACK[0x350];
  STACK[0xE38] = STACK[0x1C90];
  STACK[0xE48] = STACK[0x1C88];
  STACK[0xE58] = STACK[0x1C80];
  STACK[0xE70] = STACK[0x1C78];
  LODWORD(STACK[0xF14]) = STACK[0x1C74];
  v8 = (unsigned int *)(STACK[0xDD8] + 8);
  v9 = *v8;
  v10 = (v6 ^ 0x7AB7E43C7D9FEFF0) + ((2 * (_DWORD)v6) & 0xFB3FDFE0) - 0x7AB7E43C7D9FEFF0 + v9;
  STACK[0xE78] = v7;
  STACK[0xE88] = (unint64_t)v8;
  STACK[0xEB8] = v10;
  LOBYTE(STACK[0x1047]) = v10 < (v5 ^ 0xFFFFEF53uLL);
  STACK[0x3E0] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((27 * (v9 >> 31 == 0)) ^ v5)) - 4))();
}

uint64_t sub_193209DA0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t (*v16)(void);

  v5 = STACK[0x1598];
  LODWORD(STACK[0x7B4]) = STACK[0x1594];
  STACK[0x648] = STACK[0x1588];
  LODWORD(STACK[0x7DC]) = STACK[0x1584];
  STACK[0xAC0] = STACK[0x1578];
  STACK[0x650] = STACK[0x1570];
  STACK[0x668] = STACK[0x1568];
  LODWORD(STACK[0x7F4]) = STACK[0x1564];
  STACK[0x670] = STACK[0x1558];
  STACK[0x678] = STACK[0x1550];
  v6 = STACK[0x154C];
  STACK[0x690] = STACK[0x1540];
  LODWORD(STACK[0x814]) = STACK[0x153C];
  LODWORD(STACK[0x824]) = STACK[0x1538];
  v7 = STACK[0x1530];
  v8 = STACK[0x1528];
  STACK[0x698] = STACK[0x1528];
  v9 = STACK[0x1520];
  STACK[0x6B0] = STACK[0x1520];
  v10 = STACK[0x1518];
  v11 = STACK[0x1510];
  v12 = STACK[0x1508];
  v13 = STACK[0x1500];
  v14 = STACK[0x14F8];
  STACK[0x6C8] = STACK[0x14F8];
  v15 = STACK[0x14F4];
  LODWORD(STACK[0x828]) = STACK[0x14F4];
  LODWORD(STACK[0x159C]) = v15;
  STACK[0x15A0] = v14;
  STACK[0x15A8] = v13;
  STACK[0x15B0] = v12;
  STACK[0x15B8] = v11;
  STACK[0x15C0] = v10;
  STACK[0x15C8] = v9;
  STACK[0x15D0] = v8;
  STACK[0x15D8] = v7;
  LODWORD(STACK[0x15E0]) = STACK[0x824];
  LODWORD(STACK[0x15E4]) = STACK[0x814];
  STACK[0x15E8] = STACK[0x690];
  LODWORD(STACK[0x15F4]) = v6;
  STACK[0x15F8] = STACK[0x678];
  STACK[0x1600] = STACK[0x670];
  LODWORD(STACK[0x160C]) = STACK[0x7F4];
  STACK[0x1610] = STACK[0x668];
  STACK[0x1618] = STACK[0x650];
  STACK[0x1620] = STACK[0xAC0];
  LODWORD(STACK[0x162C]) = STACK[0x7DC];
  STACK[0x1630] = STACK[0x648];
  LODWORD(STACK[0x163C]) = STACK[0x7B4];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v5 == v3) * ((v1 ^ (v4 + 90)) + 1426)) ^ (v0 + v1 + 97))) - 12);
  LODWORD(STACK[0x1640]) = v5;
  return v16();
}

uint64_t sub_193209F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28)
{
  int v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  unsigned int v40;
  unint64_t v41;
  int v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(void);

  LODWORD(STACK[0x204]) = STACK[0x828];
  v32 = 23 * (v28 ^ 0x93);
  STACK[0x1DD8] = STACK[0x6C8];
  STACK[0x1DE0] = STACK[0x6B0];
  STACK[0x1DE8] = STACK[0x698];
  LODWORD(STACK[0x210]) = v28;
  LODWORD(STACK[0x214]) = STACK[0x824];
  LODWORD(STACK[0x218]) = STACK[0x814];
  STACK[0x1DF0] = STACK[0x690];
  STACK[0x1DF8] = STACK[0x678];
  STACK[0x1E00] = STACK[0x670];
  LODWORD(STACK[0x21C]) = STACK[0x7F4];
  STACK[0x1E08] = STACK[0x668];
  STACK[0x1E10] = STACK[0x650];
  STACK[0x540] = STACK[0xAC0];
  LODWORD(STACK[0x254]) = STACK[0x7DC];
  STACK[0x1E18] = STACK[0x648];
  v33 = STACK[0x7B4];
  LODWORD(STACK[0x26C]) = STACK[0x7B4];
  STACK[0x1E20] = a28;
  LODWORD(STACK[0x28C]) = a13;
  v34 = (v32 - 1645) | 0x10;
  LODWORD(STACK[0xF2C]) = a13;
  STACK[0xE98] = a28;
  LODWORD(STACK[0xF30]) = v33;
  STACK[0xEA8] = STACK[0x1E18];
  LODWORD(STACK[0xF34]) = STACK[0x254];
  STACK[0xF48] = STACK[0x540];
  STACK[0xEC0] = STACK[0x1E10];
  STACK[0xEC8] = STACK[0x1E08];
  LODWORD(STACK[0xF44]) = STACK[0x21C];
  STACK[0xED8] = STACK[0x1E00];
  STACK[0xEE0] = STACK[0x1DF8];
  STACK[0xEF0] = STACK[0x1DF0];
  LODWORD(STACK[0xF64]) = STACK[0x218];
  LODWORD(STACK[0xF7C]) = STACK[0x214];
  v35 = SLODWORD(STACK[0x210]);
  STACK[0xEF8] = STACK[0x1DE8];
  STACK[0xF00] = STACK[0x1DE0];
  v36 = STACK[0x1DD8];
  STACK[0xF18] = STACK[0x1DD8];
  v37 = STACK[0x204];
  v38 = *(_QWORD *)(v30 + 8 * v35);
  LODWORD(STACK[0xFA4]) = STACK[0x204];
  v38 -= 12;
  v39 = STACK[0x12E8];
  STACK[0xF20] = STACK[0x12E8];
  STACK[0xF38] = v38;
  STACK[0x1258] = v39;
  v40 = *(_DWORD *)(v39 + 12);
  v39 += 12;
  STACK[0xF50] = v39;
  v41 = LODWORD(STACK[0xF2C]);
  v42 = STACK[0xF2C];
  v43 = v41 + v34 + ((unint64_t)(v41 < 0x6DF11CB3) << 32) + 0x4BF07E1EED168180;
  STACK[0xF98] = v43;
  v44 = (v40 ^ 0xFD93DDF77DE77C59)
      + (((unint64_t)v40 << ((v32 + 112) & 0x67u ^ (v31 + 3))) & 0xFBCEF8B2)
      + v41
      + v34
      + ((unint64_t)(v41 < 0x6DF11CB3) << 32)
      - 0x6D10DDE11EE98690;
  STACK[0x1000] = v44;
  LODWORD(STACK[0x32C]) = v37;
  STACK[0x1250] = v36;
  STACK[0x1260] = STACK[0xE98];
  STACK[0x1268] = v39;
  STACK[0x608] = v43;
  STACK[0x1270] = STACK[0xF00];
  STACK[0x1280] = STACK[0xEF8];
  STACK[0x1288] = v38;
  LODWORD(STACK[0x330]) = STACK[0xF7C];
  LODWORD(STACK[0x334]) = STACK[0xF64];
  STACK[0x1298] = STACK[0xEF0];
  LODWORD(STACK[0x34C]) = v42;
  STACK[0x12A0] = STACK[0xEE0];
  STACK[0x12A8] = STACK[0xED8];
  LODWORD(STACK[0x374]) = STACK[0xF44];
  STACK[0x12B0] = STACK[0xEC8];
  STACK[0x12B8] = STACK[0xEC0];
  STACK[0x638] = STACK[0xF48];
  LODWORD(STACK[0x38C]) = STACK[0xF34];
  STACK[0x12C0] = STACK[0xEA8];
  LODWORD(STACK[0x3AC]) = STACK[0xF30];
  v45 = (uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * ((23 * (v44 + 0x6F7CFFE93310ED52 < 0xFFFFFFFB)) ^ v32)) - 4);
  LODWORD(STACK[0x3BC]) = v29;
  return v45();
}

uint64_t sub_19320A1DC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  _BOOL4 v5;
  uint64_t (*v6)(void);

  v4 = STACK[0xF20];
  v5 = STACK[0x1000] + 0x6F7CFFE93310ED56 > *(unsigned int *)(STACK[0xF20] + 8);
  LODWORD(STACK[0x29C]) = STACK[0xFA4];
  STACK[0x1E28] = STACK[0xF18];
  STACK[0x1E30] = v4;
  STACK[0x1E38] = STACK[0xE98];
  STACK[0x1E40] = STACK[0xF50];
  STACK[0x578] = STACK[0xF98];
  STACK[0x1E48] = STACK[0xF00];
  STACK[0x11E8] = STACK[0xEF8];
  STACK[0x11F8] = STACK[0xF38];
  LODWORD(STACK[0x2A0]) = STACK[0xF7C];
  LODWORD(STACK[0x2A4]) = STACK[0xF64];
  STACK[0x1200] = STACK[0xEF0];
  LODWORD(STACK[0x2B4]) = STACK[0xF2C];
  STACK[0x1218] = STACK[0xEE0];
  STACK[0x1230] = STACK[0xED8];
  LODWORD(STACK[0x2DC]) = STACK[0xF44];
  STACK[0x1238] = STACK[0xEC8];
  STACK[0x1240] = STACK[0xEC0];
  STACK[0x5C8] = STACK[0xF48];
  LODWORD(STACK[0x2F4]) = STACK[0xF34];
  STACK[0x1248] = STACK[0xEA8];
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v5 * ((v1 + v0 + 1775) ^ (v1 - 504))) ^ v0)) - 4);
  LODWORD(STACK[0x314]) = v3;
  return v6();
}

uint64_t sub_19320A2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int *v9;
  unint64_t v10;
  unint64_t v11;

  v2 = *(_QWORD *)(v1 + 8 * v0);
  v3 = ((_DWORD)v0 - 793285959) & 0x2F489DBF;
  LODWORD(STACK[0x1C74]) = STACK[0xFA4];
  STACK[0x1C78] = STACK[0xF18];
  v4 = STACK[0xF20];
  STACK[0x1C80] = STACK[0xF20];
  STACK[0x1C88] = STACK[0xE98];
  STACK[0x1C90] = STACK[0xF50];
  STACK[0x350] = STACK[0xF98];
  STACK[0x1C98] = STACK[0xF00];
  STACK[0x1CA0] = STACK[0xEF8];
  STACK[0x1CA8] = STACK[0xF38];
  LODWORD(STACK[0x1CB4]) = STACK[0xF7C];
  LODWORD(STACK[0x1CB8]) = STACK[0xF64];
  STACK[0x3A0] = (v3 ^ 0xFFFFFFFFFFFFF757) + v2;
  v5 = LODWORD(STACK[0xF2C]) - 1844518063;
  LODWORD(STACK[0x1CBC]) = STACK[0xF2C];
  STACK[0x1CC0] = STACK[0xEE0];
  STACK[0x1CC8] = STACK[0xED8];
  LODWORD(STACK[0x1CD4]) = STACK[0xF44];
  STACK[0x1CD8] = STACK[0xEA8];
  LODWORD(STACK[0x1CE4]) = STACK[0xF30];
  STACK[0x1CE8] = v4;
  LODWORD(STACK[0x1CF0]) = v5;
  v6 = (v3 + 2049);
  v7 = LODWORD(STACK[0x1CF0]);
  STACK[0xDD8] = STACK[0x1CE8];
  LODWORD(STACK[0xE84]) = STACK[0x1CE4];
  STACK[0xDE0] = STACK[0x1CD8];
  LODWORD(STACK[0xEA4]) = STACK[0x1CD4];
  STACK[0xDF0] = STACK[0x1CC8];
  STACK[0xDF8] = STACK[0x1CC0];
  LODWORD(STACK[0xEB4]) = STACK[0x1CBC];
  v8 = STACK[0x3A0];
  LODWORD(STACK[0xED4]) = STACK[0x1CB8];
  LODWORD(STACK[0xEEC]) = STACK[0x1CB4];
  STACK[0xE00] = STACK[0x1CA8];
  STACK[0xE18] = STACK[0x1CA0];
  STACK[0xE30] = STACK[0x1C98];
  STACK[0xE60] = STACK[0x350];
  STACK[0xE38] = STACK[0x1C90];
  STACK[0xE48] = STACK[0x1C88];
  STACK[0xE58] = STACK[0x1C80];
  STACK[0xE70] = STACK[0x1C78];
  LODWORD(STACK[0xF14]) = STACK[0x1C74];
  v9 = (unsigned int *)(STACK[0xDD8] + 8);
  v10 = *v9;
  v11 = (v7 ^ 0x7AB7E43C7D9FEFF0) + ((2 * (_DWORD)v7) & 0xFB3FDFE0) - 0x7AB7E43C7D9FEFF0 + v10;
  STACK[0xE78] = v8;
  STACK[0xE88] = (unint64_t)v9;
  STACK[0xEB8] = v11;
  LOBYTE(STACK[0x1047]) = v11 < (v6 ^ 0xFFFFEF53uLL);
  STACK[0x3E0] = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((27 * (v10 >> 31 == 0)) ^ v6)) - 4))();
}

uint64_t sub_19320A3B0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unsigned __int8 v15;
  uint64_t (*v16)(void);

  v4 = STACK[0x1640];
  LODWORD(STACK[0x82C]) = STACK[0x163C];
  STACK[0x6D8] = STACK[0x1630];
  LODWORD(STACK[0x844]) = STACK[0x162C];
  STACK[0xAE8] = STACK[0x1620];
  STACK[0x6E0] = STACK[0x1618];
  STACK[0x6F8] = STACK[0x1610];
  LODWORD(STACK[0x86C]) = STACK[0x160C];
  STACK[0x710] = STACK[0x1600];
  STACK[0x718] = STACK[0x15F8];
  v5 = STACK[0x15F4];
  STACK[0x730] = STACK[0x15E8];
  LODWORD(STACK[0x884]) = STACK[0x15E4];
  LODWORD(STACK[0x894]) = STACK[0x15E0];
  v6 = STACK[0x15D8];
  v7 = STACK[0x15D0];
  STACK[0x738] = STACK[0x15D0];
  v8 = STACK[0x15C8];
  STACK[0x740] = STACK[0x15C8];
  v9 = STACK[0x15C0];
  v10 = STACK[0x15B8];
  v11 = STACK[0x15B0];
  v12 = STACK[0x15A8];
  v13 = STACK[0x15A0];
  STACK[0x750] = STACK[0x15A0];
  v14 = STACK[0x159C];
  LODWORD(STACK[0x8A8]) = STACK[0x159C];
  v15 = (v4 != v3) | LOBYTE(STACK[0x9DB]);
  LODWORD(STACK[0x1644]) = v14;
  STACK[0x1648] = v13;
  STACK[0x1650] = v12;
  STACK[0x1658] = v11;
  STACK[0x1660] = v10;
  STACK[0x1668] = v9;
  STACK[0x1670] = v8;
  STACK[0x1678] = v7;
  STACK[0x1680] = v6;
  LODWORD(STACK[0x1688]) = STACK[0x894];
  LODWORD(STACK[0x168C]) = STACK[0x884];
  STACK[0x1690] = STACK[0x730];
  LODWORD(STACK[0x169C]) = v5;
  STACK[0x16A0] = STACK[0x718];
  STACK[0x16A8] = STACK[0x710];
  LODWORD(STACK[0x16B4]) = STACK[0x86C];
  STACK[0x16B8] = STACK[0x6F8];
  STACK[0x16C0] = STACK[0x6E0];
  STACK[0x16C8] = STACK[0xAE8];
  LODWORD(STACK[0x16D4]) = STACK[0x844];
  STACK[0x16D8] = STACK[0x6D8];
  LODWORD(STACK[0x16E0]) = STACK[0x82C];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                      + 8
                                      * ((3730 * (((v0 + v1 - 120) ^ v15) & 1)) ^ (v0 + v1 + 141)))
                          - 12);
  LODWORD(STACK[0x16E4]) = v4;
  return v16();
}

void sub_19320A514(int a1@<W8>)
{
  LODWORD(STACK[0x204]) = STACK[0x8A8];
  STACK[0x1DD8] = STACK[0x750];
  STACK[0x1DE0] = STACK[0x740];
  STACK[0x1DE8] = STACK[0x738];
  LODWORD(STACK[0x210]) = (a1 - 121) | 0x106;
  LODWORD(STACK[0x214]) = STACK[0x894];
  LODWORD(STACK[0x218]) = STACK[0x884];
  STACK[0x1DF0] = STACK[0x730];
  STACK[0x1DF8] = STACK[0x718];
  STACK[0x1E00] = STACK[0x710];
  LODWORD(STACK[0x21C]) = STACK[0x86C];
  STACK[0x1E08] = STACK[0x6F8];
  STACK[0x1E10] = STACK[0x6E0];
  STACK[0x540] = STACK[0xAE8];
  LODWORD(STACK[0x254]) = STACK[0x844];
  STACK[0x1E18] = STACK[0x6D8];
  JUMPOUT(0x193209F9CLL);
}

uint64_t sub_19320A5C0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v4 = STACK[0x16E4];
  LODWORD(STACK[0x8AC]) = STACK[0x16E0];
  STACK[0x758] = STACK[0x16D8];
  LODWORD(STACK[0x8C4]) = STACK[0x16D4];
  STACK[0xB08] = STACK[0x16C8];
  STACK[0x768] = STACK[0x16C0];
  STACK[0x770] = STACK[0x16B8];
  LODWORD(STACK[0x8EC]) = STACK[0x16B4];
  STACK[0x788] = STACK[0x16A8];
  STACK[0x7A0] = STACK[0x16A0];
  LODWORD(STACK[0x904]) = STACK[0x169C];
  STACK[0x7A8] = STACK[0x1690];
  LODWORD(STACK[0x924]) = STACK[0x168C];
  LODWORD(STACK[0x934]) = STACK[0x1688];
  STACK[0x7C0] = STACK[0x1680];
  STACK[0x7C8] = STACK[0x1678];
  v5 = STACK[0x1670];
  STACK[0x7D0] = STACK[0x1670];
  v6 = STACK[0x1668];
  STACK[0xB18] = STACK[0x1668];
  v7 = STACK[0x1660];
  STACK[0x7E0] = STACK[0x1660];
  v8 = STACK[0x1658];
  STACK[0x7E8] = STACK[0x1658];
  v9 = STACK[0x1650];
  STACK[0x7F8] = STACK[0x1650];
  v10 = STACK[0x1648];
  STACK[0x800] = STACK[0x1648];
  LODWORD(STACK[0x938]) = STACK[0x1644];
  STACK[0x18E0] = v10;
  STACK[0x18E8] = v9;
  STACK[0x18F0] = v8;
  STACK[0x18F8] = v7;
  STACK[0x1900] = v6;
  STACK[0x1908] = v5;
  STACK[0x1910] = STACK[0x7C8];
  STACK[0x1918] = STACK[0x7C0];
  LODWORD(STACK[0x1920]) = STACK[0x934];
  LODWORD(STACK[0x1924]) = STACK[0x924];
  STACK[0x1928] = STACK[0x7A8];
  LODWORD(STACK[0x1934]) = STACK[0x904];
  STACK[0x1938] = STACK[0x7A0];
  STACK[0x1940] = STACK[0x788];
  STACK[0x1948] = STACK[0x770];
  STACK[0x1950] = STACK[0x768];
  STACK[0x1958] = STACK[0xB08];
  LODWORD(STACK[0x1964]) = STACK[0x8C4];
  STACK[0x1968] = STACK[0x758];
  LODWORD(STACK[0x1974]) = STACK[0x8AC];
  LODWORD(STACK[0x1978]) = v4;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 + 455856783) & 0x652F0F0F) - 2525) ^ 0xFCB) * (v4 == v3)) ^ (v0 + v1 + 942))))();
}

uint64_t sub_19320A748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int *a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t))
{
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v29 = STACK[0x12E8];
  STACK[0x818] = STACK[0x12E8];
  STACK[0x12D8] = 0;
  LODWORD(STACK[0x12D4]) = 0;
  a25(a22);
  v30 = *(_QWORD *)v29;
  v31 = *(_DWORD *)(v29 + 12);
  v32 = *a23;
  STACK[0x830] = v29 + 12;
  v33 = STACK[0x480];
  v34 = STACK[0x488];
  v35 = 597255653 * ((((v28 - 144) | 0x2C256285) + (~(v28 - 144) | 0xD3DA9D7A)) ^ 0x252E1D1D);
  *(_DWORD *)(v28 - 140) = v27 + 1581691138 + v35 + v31 - ((2 * v31) & 0xBC8D6408) - 1063;
  *(_DWORD *)(v28 - 128) = (v32 ^ 0x757DEFF8) - v35 + ((v27 - 352593209) & (2 * v32)) - 1348732992;
  *(_QWORD *)(v28 - 104) = v34;
  *(_QWORD *)(v28 - 120) = v30;
  *(_DWORD *)(v28 - 112) = v35 + v27 + 1919;
  *(_QWORD *)(v28 - 136) = v33;
  a24(v28 - 144);
  v36 = *(_DWORD *)(v28 - 144);
  v37 = a26(a22);
  LODWORD(STACK[0x16E8]) = v36;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8 * ((22 * (v36 == 663729217)) | v27)) - 12))(v37);
}

uint64_t sub_19320A880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t), unsigned int *a18, uint64_t a19, uint64_t (*a20)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v26 = *(_QWORD *)(v21 + 8 * (v22 - 506));
  *(_DWORD *)(v25 - 128) = v22 - 71466449 - 486723911 * ((2 * (v20 & 0xBA7EBEA0) - v20 + 1166098777) ^ 0xF54B21C3);
  *(_QWORD *)(v25 - 144) = v23;
  *(_QWORD *)(v25 - 136) = v26
                         - 486723911
                         * ((2 * (v20 & 0x31392612BA7EBEA0) - v20 - 0x31392612BA7EBEA7) ^ 0xFC78027CF54B21C3)
                         - 8;
  a17(v25 - 144);
  v27 = a20(*a18, a19, v24);
  v28 = ((v27 << (v22 ^ 0x28)) & (((v22 - 506) ^ 0xC29) - 1120411464)) + (v27 ^ 0x5E9BF7DF);
  v29 = *(_QWORD *)(v21 + 8 * ((v22 - 506) & 0x30D4C36A));
  v30 = 486723911 * (((~v20 | 0x8E7996E510439B3CLL) + (v20 | 0x7186691AEFBC64C3)) ^ 0x4338B28B5F760458);
  *(_DWORD *)(v25 - 128) = v22 - 71466449 - v30;
  *(_QWORD *)(v25 - 144) = v23;
  *(_QWORD *)(v25 - 136) = v29 - v30 - 8;
  v31 = ((uint64_t (*)(uint64_t))a17)(v25 - 144);
  STACK[0x18E0] = STACK[0x800];
  STACK[0x18E8] = STACK[0x7F8];
  STACK[0x18F0] = STACK[0x7E8];
  STACK[0x18F8] = STACK[0x7E0];
  STACK[0x1900] = STACK[0xB18];
  STACK[0x1908] = STACK[0x7D0];
  STACK[0x1910] = STACK[0x7C8];
  STACK[0x1918] = STACK[0x7C0];
  LODWORD(STACK[0x1920]) = STACK[0x934];
  LODWORD(STACK[0x1924]) = STACK[0x924];
  STACK[0x1928] = STACK[0x7A8];
  LODWORD(STACK[0x1934]) = STACK[0x904];
  STACK[0x1938] = STACK[0x7A0];
  STACK[0x1940] = STACK[0x788];
  STACK[0x1948] = STACK[0x770];
  STACK[0x1950] = STACK[0x768];
  STACK[0x1958] = STACK[0xB08];
  LODWORD(STACK[0x1964]) = STACK[0x8C4];
  STACK[0x1968] = STACK[0x758];
  LODWORD(STACK[0x1974]) = STACK[0x8AC];
  LODWORD(STACK[0x1978]) = 101330291;
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((5258 * (v28 == 1587279839)) ^ (v22 - 258))))(v31);
}

uint64_t sub_19320AACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;

  a25(a22);
  v54 = *(_QWORD *)STACK[0x818];
  v55 = *a23 ^ 0xE51FFFB9;
  v56 = (2 * *a23) & 0xCA3FFF72;
  v57 = STACK[0x480];
  v58 = STACK[0x488];
  v59 = 597255653 * ((((v53 - 144) | 0x3CAE8DBA) - (v53 - 144) + ((v53 - 144) & 0xC3517240)) ^ 0x35A5F223);
  *(_DWORD *)(v53 - 140) = v59
                         + *(_DWORD *)STACK[0x830]
                         + 1581691396
                         - ((a49 - 1131585825) & (2 * *(_DWORD *)STACK[0x830]));
  *(_QWORD *)(v53 - 104) = v58;
  *(_QWORD *)(v53 - 120) = v54;
  *(_QWORD *)(v53 - 136) = v57;
  *(_DWORD *)(v53 - 128) = v55 - v59 + v56 + 1073342463;
  *(_DWORD *)(v53 - 112) = v59 + a49 + 1919;
  a24(v53 - 144);
  v60 = *(_DWORD *)(v53 - 144);
  v61 = a26(a22);
  LODWORD(STACK[0x16E8]) = v60;
  v62 = STACK[0x16E8];
  STACK[0x18E0] = STACK[0x800];
  STACK[0x18E8] = STACK[0x7F8];
  STACK[0x18F0] = STACK[0x7E8];
  STACK[0x18F8] = STACK[0x7E0];
  STACK[0x1900] = STACK[0xB18];
  STACK[0x1908] = STACK[0x7D0];
  STACK[0x1910] = STACK[0x7C8];
  STACK[0x1918] = STACK[0x7C0];
  LODWORD(STACK[0x1920]) = STACK[0x934];
  LODWORD(STACK[0x1924]) = STACK[0x924];
  STACK[0x1928] = STACK[0x7A8];
  LODWORD(STACK[0x1934]) = STACK[0x904];
  STACK[0x1938] = STACK[0x7A0];
  STACK[0x1940] = STACK[0x788];
  STACK[0x1948] = STACK[0x770];
  STACK[0x1950] = STACK[0x768];
  STACK[0x1958] = STACK[0xB08];
  LODWORD(STACK[0x1964]) = STACK[0x8C4];
  STACK[0x1968] = STACK[0x758];
  LODWORD(STACK[0x1974]) = STACK[0x8AC];
  LODWORD(STACK[0x1978]) = 101330291;
  return (*(uint64_t (**)(uint64_t))(a53
                                            + 8 * ((2549 * (v62 == ((a49 - 1289) | 0x113) + 395293451)) ^ (a49 - 258))))(v61);
}

void sub_19320ACE8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  STACK[0x12F0] = 0;
  v2 = *(_QWORD *)(v1 + 8 * a1) + (a1 + 1693) - 2008;
  LODWORD(STACK[0x1A14]) = STACK[0x938];
  STACK[0x1A18] = STACK[0x800];
  STACK[0x1A20] = STACK[0x7F8];
  STACK[0x1A28] = STACK[0x7E8];
  STACK[0x1A30] = v2;
  STACK[0x1A38] = STACK[0x7E0];
  STACK[0x1228] = STACK[0xB18];
  STACK[0x1A40] = STACK[0x7D0];
  STACK[0x1A48] = STACK[0x7C8];
  STACK[0x1A50] = STACK[0x7C0];
  LODWORD(STACK[0x1A58]) = STACK[0x934];
  LODWORD(STACK[0x1A5C]) = STACK[0x924];
  STACK[0x1A60] = STACK[0x7A8];
  LODWORD(STACK[0x1A6C]) = STACK[0x904];
  STACK[0x1A70] = STACK[0x7A0];
  STACK[0x1A78] = STACK[0x788];
  LODWORD(STACK[0x1A84]) = STACK[0x8EC];
  STACK[0x1A88] = STACK[0x770];
  STACK[0x1A90] = STACK[0x768];
  STACK[0x1278] = STACK[0xB08];
  LODWORD(STACK[0x1A9C]) = STACK[0x8C4];
  STACK[0x1AA0] = STACK[0x758];
  LODWORD(STACK[0x1AAC]) = STACK[0x8AC];
  JUMPOUT(0x19320ADBCLL);
}

uint64_t sub_19320AEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t))
{
  int v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v30 = (_QWORD *)STACK[0xC68];
  *v30 = 0;
  v30[1] = 0;
  STACK[0xC70] = (unint64_t)(v30 + 1);
  v31 = a27(4096, 2241923698);
  *(_QWORD *)STACK[0xC68] = v31;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((90 * (v31 != 0)) ^ v27))
                            - ((v28 + v27 - 160874741) & 0x89F197D7)
                            + 1996))();
}

uint64_t sub_19320AF5C()
{
  int v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)STACK[0xC70] = v0;
  STACK[0x1AB8] = STACK[0xC68];
  *(_BYTE *)(v1 + 1) = 1;
  LODWORD(STACK[0x1AC0]) = v2;
  LODWORD(STACK[0xD0C]) = STACK[0x1AC0];
  LOBYTE(STACK[0xE13]) = *(_BYTE *)(v1 + 1);
  *(_QWORD *)STACK[0xBA0] = STACK[0x1AB8];
  return ((uint64_t (*)(void))STACK[0xC58])();
}

uint64_t sub_19320AFC0()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);

  v2 = STACK[0x12D4];
  LODWORD(STACK[0x93C]) = STACK[0x12D4];
  LODWORD(STACK[0x1830]) = v2;
  LODWORD(STACK[0x1834]) = STACK[0xCE4];
  STACK[0x1838] = STACK[0xC50];
  STACK[0x1840] = STACK[0xC40];
  STACK[0x1848] = STACK[0xC38];
  STACK[0x1850] = STACK[0xC20];
  STACK[0x1858] = STACK[0xD48];
  STACK[0x1860] = STACK[0xC10];
  STACK[0x1868] = STACK[0xC00];
  STACK[0x1870] = STACK[0xBF8];
  LODWORD(STACK[0x1878]) = STACK[0xCCC];
  LODWORD(STACK[0x187C]) = STACK[0xCAC];
  STACK[0x1880] = STACK[0xBE8];
  LODWORD(STACK[0x188C]) = STACK[0xC9C];
  STACK[0x1890] = STACK[0xBE0];
  STACK[0x1898] = STACK[0xBC8];
  STACK[0x18A0] = STACK[0xBC0];
  STACK[0x18A8] = STACK[0xBB8];
  STACK[0x18B0] = STACK[0xD00];
  LODWORD(STACK[0x18BC]) = STACK[0xC64];
  STACK[0x18C0] = STACK[0xBA8];
  LODWORD(STACK[0x18C8]) = STACK[0xC4C];
  v3 = (uint64_t (*)(void))(*(_QWORD *)(v1
                                     + 8
                                     * ((((STACK[0xE13] & 1) == 0)
                                       * (((19 * (v0 ^ 0x7FA52D64) - 1772474882) & 0x69A5D5EE) - 1024)) ^ (v0 - 2141527568)))
                         - 4);
  LODWORD(STACK[0x18CC]) = STACK[0xD0C];
  return v3();
}

uint64_t sub_19320B0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  _BOOL4 v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = STACK[0x12F0];
  STACK[0x838] = STACK[0x12F0];
  v7 = LODWORD(STACK[0x93C]) > *(_DWORD *)(v6 + 8);
  LODWORD(STACK[0x16EC]) = STACK[0xCE4];
  STACK[0x16F0] = STACK[0xC50];
  STACK[0x16F8] = STACK[0xC40];
  STACK[0x1700] = STACK[0xC38];
  STACK[0x1708] = STACK[0xC20];
  STACK[0x1710] = STACK[0xD48];
  STACK[0x1718] = STACK[0xC10];
  STACK[0x1720] = STACK[0xC00];
  STACK[0x1728] = STACK[0xBF8];
  LODWORD(STACK[0x1734]) = STACK[0xCAC];
  STACK[0x1738] = STACK[0xBE8];
  LODWORD(STACK[0x1744]) = STACK[0xC9C];
  STACK[0x1748] = STACK[0xBE0];
  STACK[0x1750] = STACK[0xBC8];
  LODWORD(STACK[0x175C]) = STACK[0xC98];
  STACK[0x1760] = STACK[0xBC0];
  STACK[0x1768] = STACK[0xBB8];
  STACK[0x1770] = STACK[0xD00];
  LODWORD(STACK[0x177C]) = STACK[0xC64];
  STACK[0x1780] = STACK[0xBA8];
  LODWORD(STACK[0x178C]) = STACK[0xC4C];
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                       + 8 * ((v7 * (a4 + 1557)) ^ a4))
                                                                           - 4);
  LODWORD(STACK[0x1790]) = v5;
  return v8(a1, a2, a3, 0xC0391580E16, 3713000404);
}

void sub_19320B1E4(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8 * a1);
  LODWORD(STACK[0x1C74]) = STACK[0xCE4];
  STACK[0x1C78] = STACK[0xC50];
  STACK[0x1C80] = STACK[0xC40];
  STACK[0x1C88] = STACK[0xC38];
  STACK[0x1C90] = STACK[0xC20];
  STACK[0x350] = STACK[0xD48];
  STACK[0x1C98] = STACK[0xC10];
  STACK[0x1CA0] = STACK[0xC00];
  STACK[0x1CA8] = STACK[0xBF8];
  LODWORD(STACK[0x1CB4]) = STACK[0xCCC];
  LODWORD(STACK[0x1CB8]) = STACK[0xCAC];
  STACK[0x3A0] = (((a1 - 56) | 0x8AAu) ^ 0xFFFFFFFFFFFFF757) + v2;
  LODWORD(STACK[0x1CBC]) = STACK[0xC9C];
  STACK[0x1CC0] = STACK[0xBE0];
  STACK[0x1CC8] = STACK[0xBC8];
  LODWORD(STACK[0x1CD4]) = STACK[0xC98];
  STACK[0x1CD8] = STACK[0xBA8];
  LODWORD(STACK[0x1CE4]) = STACK[0xC4C];
  STACK[0x1CE8] = STACK[0x838];
  LODWORD(STACK[0x1CF0]) = STACK[0x93C];
  JUMPOUT(0x19320B29CLL);
}

uint64_t sub_19320B3F0(int a1)
{
  unint64_t v1;
  unsigned int v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((a1 ^ v3) * (v4 > v1)) ^ a1)) - ((a1 + 213) | v2) + 2974))();
}

void sub_19320B41C()
{
  JUMPOUT(0x19320B3C0);
}

uint64_t sub_19320B428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  unint64_t v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t (*v67)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  int v81;

  STACK[0x3E0] = v58;
  STACK[0xF08] = v59;
  LODWORD(STACK[0x1224]) = STACK[0xF14];
  STACK[0x1D70] = STACK[0xE70];
  STACK[0x1D78] = STACK[0xE58];
  STACK[0x1D80] = STACK[0xE48];
  STACK[0x1D88] = STACK[0xE38];
  STACK[0x4C0] = STACK[0xE60];
  STACK[0x1D90] = STACK[0xE30];
  STACK[0x1D98] = STACK[0xE18];
  STACK[0x1DA0] = STACK[0xE00];
  HIDWORD(a54) = STACK[0xEEC];
  LODWORD(v78) = STACK[0xED4];
  STACK[0x1DA8] = STACK[0xE78];
  HIDWORD(v78) = STACK[0xEB4];
  STACK[0x1DB0] = STACK[0xDF8];
  STACK[0x1DB8] = STACK[0xDF0];
  LODWORD(v79) = STACK[0xEA4];
  STACK[0x1DC0] = STACK[0xDD8];
  STACK[0x1DC8] = STACK[0xE88];
  STACK[0x4F0] = STACK[0xF08];
  HIDWORD(v79) = v60;
  STACK[0x1DD0] = STACK[0xDE0];
  v80 = STACK[0xE84];
  v81 = v60;
  v61 = STACK[0x1DD0];
  v62 = STACK[0x4F0];
  v63 = STACK[0x1DC8];
  v64 = STACK[0x1DC0];
  v65 = STACK[0x1DB8];
  v66 = STACK[0x1DB0];
  v67 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x1DA8];
  v68 = STACK[0x1DA0];
  v69 = STACK[0x1D98];
  v70 = STACK[0x1D90];
  v71 = STACK[0x4C0];
  v72 = STACK[0x1D88];
  v73 = STACK[0x1D80];
  v74 = STACK[0x1D78];
  v75 = STACK[0x1D70];
  v76 = STACK[0x1224];
  LODWORD(STACK[0x16EC]) = STACK[0x1224];
  STACK[0x16F0] = v75;
  STACK[0x16F8] = v74;
  STACK[0x1700] = v73;
  STACK[0x1708] = v72;
  STACK[0x1710] = v71;
  STACK[0x1718] = v70;
  STACK[0x1720] = v69;
  STACK[0x1728] = v68;
  LODWORD(STACK[0x1734]) = v78;
  STACK[0x1738] = (unint64_t)v67;
  LODWORD(STACK[0x1744]) = HIDWORD(v78);
  STACK[0x1748] = v66;
  STACK[0x1750] = v65;
  LODWORD(STACK[0x175C]) = v79;
  STACK[0x1760] = v64;
  STACK[0x1768] = v63;
  STACK[0x1770] = v62;
  LODWORD(STACK[0x177C]) = HIDWORD(v79);
  STACK[0x1780] = v61;
  LODWORD(STACK[0x178C]) = v80;
  LODWORD(STACK[0x1790]) = v81;
  LODWORD(STACK[0x1B44]) = v76;
  STACK[0x1B48] = v75;
  STACK[0x1B50] = v74;
  STACK[0x1B58] = v73;
  STACK[0x1B60] = v72;
  STACK[0x230] = v71;
  STACK[0x1B68] = v70;
  STACK[0x1B70] = v69;
  STACK[0x1B78] = v68;
  LODWORD(STACK[0x1B80]) = HIDWORD(a54);
  LODWORD(STACK[0x1B84]) = v78;
  STACK[0x1B88] = (unint64_t)v67;
  LODWORD(STACK[0x1B94]) = HIDWORD(v78);
  STACK[0x1B98] = v66;
  STACK[0x1BA0] = v65;
  LODWORD(STACK[0x1BAC]) = v79;
  STACK[0x1BB0] = v64;
  STACK[0x1BB8] = v63;
  STACK[0x280] = v62;
  LODWORD(STACK[0x1BC4]) = HIDWORD(v79);
  STACK[0x1BC8] = v61;
  LODWORD(STACK[0x1BD4]) = v80;
  LODWORD(STACK[0x1BD8]) = v81;
  LODWORD(STACK[0x29C]) = v76;
  STACK[0x1E28] = v75;
  STACK[0x1E30] = v74;
  STACK[0x1E38] = v73;
  STACK[0x1E40] = v72;
  STACK[0x578] = v71;
  STACK[0x1E48] = v70;
  STACK[0x11E8] = v69;
  STACK[0x11F8] = v68;
  LODWORD(STACK[0x2A0]) = HIDWORD(a54);
  LODWORD(STACK[0x2A4]) = v78;
  STACK[0x1200] = (unint64_t)v67;
  LODWORD(STACK[0x2B4]) = HIDWORD(v78);
  STACK[0x1218] = v66;
  STACK[0x1230] = v65;
  LODWORD(STACK[0x2DC]) = v79;
  STACK[0x1238] = v64;
  STACK[0x1240] = v63;
  STACK[0x5C8] = v62;
  LODWORD(STACK[0x2F4]) = HIDWORD(v79);
  STACK[0x1248] = v61;
  LODWORD(STACK[0x314]) = v81;
  return v67(HIDWORD(v78), v78, v80, 0xC0391580E16, 3713000404, v69, v70, v71, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           v78,
           a58,
           v79);
}

uint64_t sub_19320B4E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;

  STACK[0x3E0] = v59;
  STACK[0xF08] = v59;
  LODWORD(STACK[0x1224]) = STACK[0xF14];
  STACK[0x1D70] = STACK[0xE70];
  STACK[0x1D78] = STACK[0xE58];
  STACK[0x1D80] = STACK[0xE48];
  STACK[0x1D88] = STACK[0xE38];
  STACK[0x4C0] = STACK[0xE60];
  STACK[0x1D90] = STACK[0xE30];
  STACK[0x1D98] = STACK[0xE18];
  STACK[0x1DA0] = STACK[0xE00];
  HIDWORD(a55) = STACK[0xEEC];
  LODWORD(v64) = STACK[0xED4];
  STACK[0x1DA8] = STACK[0xE78];
  HIDWORD(v64) = STACK[0xEB4];
  STACK[0x1DB0] = STACK[0xDF8];
  STACK[0x1DB8] = STACK[0xDF0];
  LODWORD(v65) = STACK[0xEA4];
  STACK[0x1DC0] = STACK[0xDD8];
  STACK[0x1DC8] = STACK[0xE88];
  STACK[0x4F0] = STACK[0xF08];
  HIDWORD(v65) = v60;
  STACK[0x1DD0] = STACK[0xDE0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * ((LOBYTE(STACK[0x1047]) * ((a9 - 1984) ^ (v61 + 1319) ^ (a9 - 5933995) & 0x7FFFAD6F)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           v64,
           a59,
           v65);
}

uint64_t sub_19320B5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(unint64_t, uint64_t))
{
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;

  v30 = a27(STACK[0xF08], 2241923698);
  STACK[0xE90] = v30;
  LODWORD(STACK[0x1CF4]) = STACK[0xF14];
  STACK[0x1CF8] = STACK[0xE70];
  STACK[0x1D00] = STACK[0xE58];
  STACK[0x1D08] = STACK[0xE48];
  STACK[0x1D10] = STACK[0xE38];
  STACK[0x430] = STACK[0xE60];
  STACK[0x1D18] = STACK[0xE30];
  STACK[0x1D20] = STACK[0xE18];
  STACK[0x1D28] = STACK[0xE00];
  LODWORD(STACK[0x1D30]) = STACK[0xEEC];
  LODWORD(STACK[0x1D34]) = STACK[0xED4];
  STACK[0x1D38] = STACK[0xE78];
  LODWORD(STACK[0x1D44]) = STACK[0xEB4];
  STACK[0x1D48] = STACK[0xDF8];
  STACK[0x1D50] = STACK[0xDF0];
  LODWORD(STACK[0x11F4]) = STACK[0xEA4];
  STACK[0x1D58] = STACK[0xDD8];
  STACK[0x1D60] = STACK[0xE88];
  STACK[0x470] = STACK[0xF08];
  LODWORD(STACK[0x120C]) = v29;
  LODWORD(STACK[0x1210]) = STACK[0xE84];
  STACK[0x1D68] = 0;
  LODWORD(STACK[0x1214]) = 101330303;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * (int)((((((v27 - 665) | 4) - 1079402416) ^ (v27 - 18513) & 0xBFA9E5FE) * (v30 == 0)) ^ v27)))();
}

void sub_19320B6F0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v0 = STACK[0x1D68];
  v1 = STACK[0x470];
  v2 = STACK[0x1D60];
  v3 = STACK[0x1D58];
  v4 = STACK[0x1D50];
  v5 = STACK[0x1D48];
  v6 = STACK[0x1D38];
  v7 = STACK[0x1D28];
  v8 = STACK[0x1D20];
  v9 = STACK[0x1D18];
  v10 = STACK[0x430];
  v11 = STACK[0x1D10];
  v12 = STACK[0x1D08];
  v13 = STACK[0x1D00];
  v14 = STACK[0x1CF8];
  LODWORD(STACK[0x1224]) = STACK[0x1CF4];
  STACK[0x1D70] = v14;
  STACK[0x1D78] = v13;
  STACK[0x1D80] = v12;
  STACK[0x1D88] = v11;
  STACK[0x4C0] = v10;
  STACK[0x1D90] = v9;
  STACK[0x1D98] = v8;
  STACK[0x1DA0] = v7;
  STACK[0x1DA8] = v6;
  STACK[0x1DB0] = v5;
  STACK[0x1DB8] = v4;
  STACK[0x1DC0] = v3;
  STACK[0x1DC8] = v2;
  STACK[0x4F0] = v1;
  STACK[0x1DD0] = v0;
  JUMPOUT(0x19320DA6CLL);
}

uint64_t sub_19320B6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = STACK[0xE88];
  v7 = (*(unsigned int *)STACK[0xE88] ^ 0xFFF6DFFDDD2FEFF7)
     + ((2 * *(unsigned int *)STACK[0xE88]) & 0x1BA5FDFEELL)
     + (v3 ^ 0x7E7D351FF7D2B4B1);
  v8 = (v7 ^ 0x92A57CC02AFC524DLL) & (2 * (v7 & 0x22AFD5A0DLL)) ^ v7 & 0x22AFD5A0DLL;
  LODWORD(STACK[0x564]) = STACK[0xF14];
  v9 = ((2 * (v7 ^ 0x92A57CC07B36E247)) ^ 0x24512844A3977094) & (v7 ^ 0x92A57CC07B36E247) ^ (2
                                                                                                 * (v7 ^ 0x92A57CC07B36E247)) & 0x132E962251CBB84ALL;
  STACK[0x398] = STACK[0xE70];
  STACK[0x3B0] = STACK[0xE58];
  v10 = v9 ^ 0x112292225048884ALL;
  v11 = (v9 ^ 0x1833000) & (4 * v8) ^ v8;
  STACK[0x3C8] = STACK[0xE48];
  STACK[0x3D0] = STACK[0xE38];
  STACK[0x808] = STACK[0xE60];
  v12 = ((4 * v10) ^ 0x4CBA5889472EE128) & v10 ^ (4 * v10) & 0x132E962251CBB848;
  STACK[0x3E8] = STACK[0xE30];
  STACK[0x3F0] = STACK[0xE18];
  v13 = (v12 ^ 0x2A1000410AA000) & (16 * v11) ^ v11;
  STACK[0x3F8] = STACK[0xE00];
  LODWORD(STACK[0x574]) = STACK[0xEEC];
  v14 = *(_QWORD *)(v4 + 8 * v3);
  v15 = ((16 * (v12 ^ 0x1304862210C11842)) ^ 0x32E962251CBB84A0) & (v12 ^ 0x1304862210C11842) ^ (16 * (v12 ^ 0x1304862210C11842)) & 0x132E962251CBB840;
  LODWORD(STACK[0x59C]) = STACK[0xED4];
  STACK[0x408] = STACK[0xE78];
  v16 = (v15 ^ 0x12280220108B8000) & (v13 << 8) ^ v13;
  LODWORD(STACK[0x5B4]) = STACK[0xEB4];
  STACK[0x848] = v14 - 8;
  v17 = STACK[0xDD8];
  v18 = *(_QWORD *)STACK[0xDD8];
  v19 = (((v15 ^ 0x10694024140384ALL) << 8) ^ 0x2E962251CBB84A00) & (v15 ^ 0x10694024140384ALL) ^ ((v15 ^ 0x10694024140384ALL) << 8) & 0x132E962251CBB800;
  STACK[0x410] = STACK[0xDF8];
  STACK[0x420] = STACK[0xDF0];
  LODWORD(STACK[0x5D4]) = STACK[0xEA4];
  STACK[0x428] = v17;
  STACK[0x440] = v6;
  STACK[0x878] = STACK[0xF08];
  LODWORD(STACK[0x5E4]) = v5;
  v20 = STACK[0xE90];
  STACK[0x458] = STACK[0xE90];
  LODWORD(STACK[0x5E8]) = STACK[0xE84];
  STACK[0x460] = v20;
  STACK[0x8A0] = 0x5D952DACE41797ELL;
  STACK[0x478] = v18;
  STACK[0x8C8] = v7 ^ (2 * (v19 & 0x1002104A00000000 ^ v16 ^ (v19 ^ 0x206020041880000) & (v16 << 16))) ^ 0x7AA59BAEAFD6D268;
  STACK[0x1110] = STACK[0x8C8];
  STACK[0x10F0] = STACK[0x478];
  STACK[0x1120] = STACK[0x8A0];
  STACK[0x1100] = STACK[0x460];
  LODWORD(STACK[0x10FC]) = STACK[0x5E8];
  STACK[0x1108] = STACK[0x458];
  LODWORD(STACK[0x113C]) = STACK[0x5E4];
  STACK[0x1140] = STACK[0x878];
  STACK[0x1118] = STACK[0x440];
  STACK[0x1128] = STACK[0x428];
  LODWORD(STACK[0x115C]) = STACK[0x5D4];
  STACK[0x1130] = STACK[0x420];
  STACK[0x1148] = STACK[0x410];
  LODWORD(STACK[0x1174]) = STACK[0x5B4];
  STACK[0x1150] = STACK[0x408];
  LODWORD(STACK[0x119C]) = STACK[0x59C];
  LODWORD(STACK[0x11B0]) = STACK[0x574];
  STACK[0x1160] = STACK[0x3F8];
  STACK[0x1168] = STACK[0x3F0];
  STACK[0x1178] = STACK[0x3E8];
  STACK[0x1190] = STACK[0x808];
  STACK[0x1180] = STACK[0x3D0];
  STACK[0x1188] = STACK[0x3C8];
  STACK[0x11A0] = STACK[0x3B0];
  STACK[0x11A8] = STACK[0x398];
  LODWORD(v19) = STACK[0x10F0] > STACK[0x1100]
                               + STACK[0x1120]
                               - 0x5D952DACE418A46
                               + (((v3 ^ 0x448) + 2875) | 0x88);
  LODWORD(STACK[0x11B4]) = STACK[0x564];
  STACK[0x11B8] = STACK[0x848];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8 * (int)(v3 ^ 0x448 | (8 * v19))))(0x767A3EBDF7FA0F3DLL, a2, a3, 0xC0391580E16, 3713000404);
}

uint64_t sub_19320B9FC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;
  uint64_t (*v6)(void);

  LODWORD(STACK[0x954]) = STACK[0x1790];
  LODWORD(STACK[0x97C]) = STACK[0x178C];
  STACK[0x850] = STACK[0x1780];
  LODWORD(STACK[0x994]) = STACK[0x177C];
  STACK[0xB20] = STACK[0x1770];
  STACK[0x858] = STACK[0x1768];
  STACK[0x860] = STACK[0x1760];
  LODWORD(STACK[0x9B4]) = STACK[0x175C];
  STACK[0x870] = STACK[0x1750];
  STACK[0x888] = STACK[0x1748];
  LODWORD(STACK[0x9C4]) = STACK[0x1744];
  STACK[0x898] = STACK[0x1738];
  LODWORD(STACK[0x9DC]) = STACK[0x1734];
  STACK[0x8B0] = STACK[0x1728];
  STACK[0x8B8] = STACK[0x1720];
  STACK[0x8D0] = STACK[0x1718];
  STACK[0xB28] = STACK[0x1710];
  STACK[0x8D8] = STACK[0x1708];
  STACK[0x8E0] = STACK[0x1700];
  STACK[0x8F0] = STACK[0x16F8];
  v5 = LODWORD(STACK[0x954]) == v4;
  STACK[0x8F8] = STACK[0x16F0];
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v5 * (v0 ^ (v2 + 1527) ^ 0x13E)) ^ (v1 + v0 + 1204)))
                         - ((v0 - v2 - 1709) ^ 0x7CLL));
  LODWORD(STACK[0x9E0]) = STACK[0x16EC];
  return v6();
}

uint64_t sub_19320BAF0()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = (v0 + 679) | 0x104u;
  v4 = *(_QWORD *)STACK[0x12F0];
  v5 = STACK[0x12D8];
  v6 = LODWORD(STACK[0x12D4]) + (v3 ^ 0xFB2A714C852B8D60) - ((2 * LODWORD(STACK[0x12D4])) & 0x10A5710CALL);
  v7 = *(_QWORD *)(v1 + 8 * v0) - 12;
  LODWORD(STACK[0x564]) = STACK[0x9E0];
  STACK[0x398] = STACK[0x8F8];
  STACK[0x3B0] = STACK[0x8F0];
  STACK[0x3C8] = STACK[0x8E0];
  STACK[0x3D0] = STACK[0x8D8];
  STACK[0x808] = STACK[0xB28];
  STACK[0x3E8] = STACK[0x8D0];
  STACK[0x3F0] = STACK[0x8B8];
  STACK[0x3F8] = STACK[0x8B0];
  LODWORD(STACK[0x574]) = v2;
  LODWORD(STACK[0x59C]) = STACK[0x9DC];
  STACK[0x408] = STACK[0x898];
  LODWORD(STACK[0x5B4]) = STACK[0x9C4];
  STACK[0x848] = v7;
  STACK[0x410] = STACK[0x888];
  STACK[0x420] = STACK[0x870];
  LODWORD(STACK[0x5D4]) = STACK[0x9B4];
  STACK[0x428] = STACK[0x860];
  STACK[0x440] = STACK[0x858];
  STACK[0x878] = STACK[0xB20];
  LODWORD(STACK[0x5E4]) = STACK[0x994];
  STACK[0x458] = STACK[0x850];
  LODWORD(STACK[0x5E8]) = STACK[0x97C];
  STACK[0x460] = v4;
  STACK[0x8A0] = 0x5D952DACE41797ELL;
  STACK[0x478] = v5;
  STACK[0x8C8] = v6;
  STACK[0x1110] = STACK[0x8C8];
  STACK[0x10F0] = STACK[0x478];
  STACK[0x1120] = STACK[0x8A0];
  STACK[0x1100] = STACK[0x460];
  LODWORD(STACK[0x10FC]) = STACK[0x5E8];
  STACK[0x1108] = STACK[0x458];
  LODWORD(STACK[0x113C]) = STACK[0x5E4];
  STACK[0x1140] = STACK[0x878];
  STACK[0x1118] = STACK[0x440];
  STACK[0x1128] = STACK[0x428];
  LODWORD(STACK[0x115C]) = STACK[0x5D4];
  STACK[0x1130] = STACK[0x420];
  STACK[0x1148] = STACK[0x410];
  LODWORD(STACK[0x1174]) = STACK[0x5B4];
  STACK[0x1150] = STACK[0x408];
  LODWORD(STACK[0x119C]) = STACK[0x59C];
  LODWORD(STACK[0x11B0]) = STACK[0x574];
  STACK[0x1160] = STACK[0x3F8];
  STACK[0x1168] = STACK[0x3F0];
  STACK[0x1178] = STACK[0x3E8];
  STACK[0x1190] = STACK[0x808];
  STACK[0x1180] = STACK[0x3D0];
  STACK[0x1188] = STACK[0x3C8];
  STACK[0x11A0] = STACK[0x3B0];
  STACK[0x11A8] = STACK[0x398];
  LODWORD(v6) = STACK[0x10F0] > STACK[0x1100] + STACK[0x1120] - 0x5D952DACE418A46 + (((_DWORD)v3 + 2875) | 0x88u);
  LODWORD(STACK[0x11B4]) = STACK[0x564];
  STACK[0x11B8] = STACK[0x848];
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (int)(v3 | (8 * v6))))(0x767A3EBDF7FA0F3DLL);
}

uint64_t sub_19320BC18@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  int v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t (*v26)(void);

  v3 = STACK[0x12F0] == 0;
  STACK[0x238] = STACK[0x12F0];
  v4 = STACK[0x97C];
  LODWORD(STACK[0x454]) = STACK[0x97C];
  v5 = STACK[0x850];
  STACK[0x240] = STACK[0x850];
  v6 = STACK[0x994];
  LODWORD(STACK[0x46C]) = STACK[0x994];
  v7 = STACK[0xB20];
  STACK[0x6E8] = STACK[0xB20];
  v8 = STACK[0x858];
  STACK[0x248] = STACK[0x858];
  v9 = STACK[0x860];
  STACK[0x258] = STACK[0x860];
  v10 = STACK[0x888];
  STACK[0x260] = STACK[0x888];
  v11 = STACK[0x9C4];
  LODWORD(STACK[0x494]) = STACK[0x9C4];
  v12 = STACK[0x898];
  STACK[0x270] = STACK[0x898];
  v13 = STACK[0x9DC];
  LODWORD(STACK[0x4AC]) = STACK[0x9DC];
  v14 = STACK[0x954];
  LODWORD(STACK[0x4CC]) = STACK[0x954];
  v15 = STACK[0x8B0];
  STACK[0x278] = STACK[0x8B0];
  v16 = STACK[0x8B8];
  STACK[0x290] = STACK[0x8B8];
  v17 = STACK[0x8D0];
  STACK[0x2A8] = STACK[0x8D0];
  v18 = STACK[0xB28];
  STACK[0x728] = STACK[0xB28];
  v19 = STACK[0x8D8];
  STACK[0x2C0] = STACK[0x8D8];
  v20 = STACK[0x8E0];
  STACK[0x2C8] = STACK[0x8E0];
  v21 = STACK[0x8F0];
  STACK[0x2D0] = STACK[0x8F0];
  v22 = STACK[0x8F8];
  STACK[0x2E0] = STACK[0x8F8];
  v23 = STACK[0x9E0];
  LODWORD(STACK[0x4DC]) = STACK[0x9E0];
  v24 = *(_QWORD *)(v1 + 8 * a1) - 12;
  STACK[0x228] = v24;
  STACK[0x2E8] = v24;
  LODWORD(STACK[0x4EC]) = v4;
  STACK[0x2F8] = v5;
  LODWORD(STACK[0x514]) = v6;
  STACK[0x778] = v7;
  STACK[0x300] = v8;
  STACK[0x318] = v9;
  STACK[0x320] = v10;
  LODWORD(STACK[0x52C]) = v11;
  STACK[0x338] = v12;
  LODWORD(STACK[0x54C]) = v13;
  LODWORD(STACK[0x55C]) = v14;
  STACK[0x340] = v15;
  STACK[0x358] = v16;
  STACK[0x360] = v17;
  STACK[0x7B8] = v18;
  STACK[0x368] = v19;
  STACK[0x378] = v20;
  STACK[0x380] = v21;
  v25 = !v3;
  STACK[0x390] = v22;
  v26 = (uint64_t (*)(void))(v2
                          - (v2
                           + (a1 ^ 0x72)
                           - 2)
                          + *(_QWORD *)(v1 + 8 * ((v25 * (421 * (a1 ^ 0x72) - 1566)) ^ (a1 + 2258))));
  LODWORD(STACK[0x560]) = v23;
  return v26();
}

uint64_t sub_19320BDC8()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;

  v0 = STACK[0x12F0];
  *(_DWORD *)(v0 + 8) = STACK[0x12D4];
  *(_DWORD *)(v0 + 12) = 0;
  LODWORD(STACK[0x1794]) = STACK[0x11B4];
  STACK[0x1798] = STACK[0x11A8];
  STACK[0x17A0] = STACK[0x11A0];
  STACK[0x17A8] = STACK[0x1188];
  STACK[0x17B0] = STACK[0x1180];
  STACK[0x17B8] = STACK[0x1190];
  STACK[0x17C0] = STACK[0x1178];
  STACK[0x17C8] = STACK[0x1168];
  STACK[0x17D0] = STACK[0x1160];
  LODWORD(STACK[0x17D8]) = STACK[0x11B0];
  LODWORD(STACK[0x17DC]) = STACK[0x119C];
  STACK[0x17E0] = STACK[0x1150];
  LODWORD(STACK[0x17EC]) = STACK[0x1174];
  STACK[0x17F0] = STACK[0x1148];
  STACK[0x17F8] = STACK[0x1128];
  STACK[0x1800] = STACK[0x1118];
  STACK[0x1808] = STACK[0x1140];
  LODWORD(STACK[0x1814]) = STACK[0x113C];
  STACK[0x1818] = STACK[0x1108];
  LODWORD(STACK[0x1824]) = STACK[0x10FC];
  STACK[0x1828] = v0;
  v1 = STACK[0x1828];
  v2 = STACK[0x1824];
  v3 = STACK[0x1818];
  v4 = STACK[0x1814];
  v5 = STACK[0x1808];
  v6 = STACK[0x1800];
  v7 = STACK[0x17F8];
  v8 = STACK[0x17F0];
  v9 = STACK[0x17EC];
  v10 = STACK[0x17E0];
  v11 = STACK[0x17DC];
  v12 = STACK[0x17D8];
  v13 = STACK[0x17D0];
  v14 = STACK[0x17C8];
  v15 = STACK[0x17C0];
  v16 = STACK[0x17B8];
  v17 = STACK[0x17B0];
  v18 = STACK[0x17A8];
  v19 = STACK[0x17A0];
  v20 = STACK[0x1798];
  v21 = STACK[0x1794];
  LODWORD(STACK[0x1830]) = STACK[0x12D4];
  LODWORD(STACK[0x1834]) = v21;
  STACK[0x1838] = v20;
  STACK[0x1840] = v19;
  STACK[0x1848] = v18;
  STACK[0x1850] = v17;
  STACK[0x1858] = v16;
  STACK[0x1860] = v15;
  STACK[0x1868] = v14;
  STACK[0x1870] = v13;
  LODWORD(STACK[0x1878]) = v12;
  LODWORD(STACK[0x187C]) = v11;
  STACK[0x1880] = v10;
  LODWORD(STACK[0x188C]) = v9;
  STACK[0x1890] = v8;
  STACK[0x1898] = v1;
  STACK[0x18A0] = v7;
  STACK[0x18A8] = v6;
  STACK[0x18B0] = v5;
  LODWORD(STACK[0x18BC]) = v4;
  STACK[0x18C0] = v3;
  LODWORD(STACK[0x18C8]) = v2;
  LODWORD(STACK[0x18CC]) = v12;
  return sub_19320BF5C();
}

uint64_t sub_19320BF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int *a31,uint64_t (*a32)(_QWORD, unint64_t, _QWORD))
{
  unsigned int v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;

  v35 = STACK[0x18CC];
  LODWORD(STACK[0x9E4]) = STACK[0x18C8];
  STACK[0x908] = STACK[0x18C0];
  LODWORD(STACK[0x9F4]) = STACK[0x18BC];
  STACK[0xB40] = STACK[0x18B0];
  STACK[0x910] = STACK[0x18A8];
  STACK[0x928] = STACK[0x18A0];
  STACK[0x940] = STACK[0x1898];
  STACK[0x948] = STACK[0x1890];
  LODWORD(STACK[0xA1C]) = STACK[0x188C];
  STACK[0x960] = STACK[0x1880];
  LODWORD(STACK[0xA3C]) = STACK[0x187C];
  LODWORD(STACK[0xA5C]) = STACK[0x1878];
  STACK[0x968] = STACK[0x1870];
  STACK[0x970] = STACK[0x1868];
  STACK[0x980] = STACK[0x1860];
  STACK[0xB48] = STACK[0x1858];
  STACK[0x988] = STACK[0x1850];
  STACK[0x998] = STACK[0x1848];
  STACK[0x9A0] = STACK[0x1840];
  STACK[0x9B8] = STACK[0x1838];
  LODWORD(STACK[0xA70]) = STACK[0x1834];
  v36 = a32(*a31, STACK[0x12D8], LODWORD(STACK[0x1830]));
  STACK[0x18E0] = STACK[0x9B8];
  STACK[0x18E8] = STACK[0x9A0];
  STACK[0x18F0] = STACK[0x998];
  STACK[0x18F8] = STACK[0x988];
  STACK[0x1900] = STACK[0xB48];
  STACK[0x1908] = STACK[0x980];
  STACK[0x1910] = STACK[0x970];
  STACK[0x1918] = STACK[0x968];
  LODWORD(STACK[0x1920]) = STACK[0xA5C];
  LODWORD(STACK[0x1924]) = STACK[0xA3C];
  STACK[0x1928] = STACK[0x960];
  LODWORD(STACK[0x1934]) = STACK[0xA1C];
  STACK[0x1938] = STACK[0x948];
  STACK[0x1940] = STACK[0x940];
  STACK[0x1948] = STACK[0x928];
  STACK[0x1950] = STACK[0x910];
  STACK[0x1958] = STACK[0xB40];
  LODWORD(STACK[0x1964]) = STACK[0x9F4];
  STACK[0x1968] = STACK[0x908];
  LODWORD(STACK[0x1974]) = STACK[0x9E4];
  LODWORD(STACK[0x1978]) = v35;
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * (((((3 * (v32 ^ 0x124)) ^ (v35 == (((v32 ^ 0x124) - 775) ^ (v34 + 453)))) & 1) == 0) ^ v32)))(v36);
}

uint64_t sub_19320C108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  int v55;
  unint64_t v56;
  _BOOL4 v58;

  v56 = STACK[0x940];
  v58 = STACK[0x940] == 0;
  LOBYTE(STACK[0xD2F]) = v58;
  STACK[0x9D0] = v56 + 12;
  STACK[0x9E8] = v56 + 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a53 + 8 * (((v53 ^ (v54 + 1622)) - 2141527912) ^ (1023 * v58)))
                                                                                              - 12))(a1, a2, a3, LODWORD(STACK[0x1024]), a5, a6, (v55 - 1914981737) & 0xF27F27C7);
}

uint64_t sub_19320C228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int *a33,unsigned int *a34)
{
  int v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  _BOOL4 v40;

  v37 = (*a34 ^ 0xB5EFDDAEFFDD89FELL) + 0x4A10225139EF5F22 + ((2 * *a34) & 0x1FFBB13FCLL);
  v38 = (*a33 ^ 0xDCFAEDEFCE7FDD7CLL)
      + 0x230512106B4D0BA0
      + (((unint64_t)*a33 << (v35 + v34 + 47)) & 0x19CFFBAF8);
  v39 = (v37 < 0x39CCE91C) ^ (v38 < 0x39CCE91C);
  v40 = v37 > v38;
  if (v39)
    v40 = v37 < 0x39CCE91C;
  return (*(uint64_t (**)(void))(v36 + 8 * ((3439 * !v40) ^ v34)))();
}

uint64_t sub_19320C314(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,_DWORD *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,_QWORD *a49)
{
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;

  v52 = *(unsigned __int8 *)(*a49
                           + (a4 ^ ((_DWORD)v49 + 2142054363) & 0xFFF7FDFF ^ 0x826A9A9C)
                           + ((2 * a4) & 0xFB9F6FF6)
                           + 36718599);
  v53 = (((v52 + 4420934 - ((2 * v52) & 0x4C)) << 8) - 0x2000) ^ 0x43752600 | (((-16777216
                                                                               * *(unsigned __int8 *)(*a49 + (a4 ^ ((_DWORD)v49 + 2142054363) & 0xFFF7FDFF ^ 0x826A9A9C) + ((2 * a4) & 0xFB9F6FF6) + 36718597)) | (*(unsigned __int8 *)(*a49 + (a4 ^ ((_DWORD)v49 + 2142054363) & 0xFFF7FDFF ^ 0x826A9A9C) + ((2 * a4) & 0xFB9F6FF6) + 36718598) << 16))
                                                                             - 0x1000000);
  v54 = *(unsigned __int8 *)(*a49
                           + (a4 ^ ((_DWORD)v49 + 2142054363) & 0xFFF7FDFF ^ 0x826A9A9C)
                           + ((2 * a4) & 0xFB9F6FF6)
                           + 36718600);
  v55 = (v53 ^ 0x5A6FFF) & ((v54 - 1636428685 - ((2 * v54) & 0xE6)) ^ 0x82C7F04) ^ v53 & 0x69A59400;
  v56 = (v55 & 0x324D5387 ^ 0x12494387) + (v55 ^ 0x28A41408) - ((v55 ^ 0x28A41408) & 0x324D5387);
  *v51 = (((v56 ^ 0x1FBDF440) - 789305555) ^ ((v56 ^ 0x7B8AD7DE) - 1262287693) ^ ((v56 ^ 0x81840F66) + 1322114059))
       - 619719546;
  *a34 = a4 + 4;
  return ((uint64_t (*)(void))(v49 + v50 - 1936))();
}

uint64_t sub_19320C4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  int v46;
  int v47;
  int v48;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v45
                                                     + 8
                                                     * ((((a7 + 1438) ^ v48 ^ 0x7FA52940) * v47) ^ (v46 + v48 + 1869))))(a45, a44);
}

uint64_t sub_19320C520(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(unint64_t, unint64_t))(v7
                                                                       + 8
                                                                       * (((LODWORD(STACK[0x12E4]) == 101372955)
                                                                         * (((a7 ^ (a3 + 1115)) - a3 - 762) ^ 0x439)) ^ a7)))(STACK[0x970], STACK[0x968]);
}

void sub_19320C59C()
{
  JUMPOUT(0x19320C1E0);
}

uint64_t sub_19320C5C4@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, unint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,unint64_t a29)
{
  int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  char v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v53;
  uint64_t (*v54)(void);

  LODWORD(STACK[0x3C0]) = v33;
  STACK[0xFF8] = v36;
  STACK[0x1010] = v45;
  LOBYTE(STACK[0x687]) = v42;
  LODWORD(STACK[0x3C4]) = a7;
  LODWORD(STACK[0x1024]) = a3;
  LODWORD(STACK[0x106C]) = a7;
  LOBYTE(STACK[0x1077]) = v42;
  STACK[0x18E0] = a29;
  STACK[0x18E8] = a28;
  STACK[0x18F0] = a11;
  STACK[0x18F8] = a10;
  STACK[0x1900] = v34;
  STACK[0x1908] = v37;
  STACK[0x1910] = a1;
  STACK[0x1918] = a2;
  LODWORD(STACK[0x1920]) = a4;
  LODWORD(STACK[0x1924]) = a5;
  STACK[0x1928] = a6;
  LODWORD(STACK[0x1934]) = v41;
  STACK[0x1938] = v44;
  STACK[0x1940] = v32;
  STACK[0x1948] = v46;
  STACK[0x1950] = v30;
  STACK[0x1958] = v31;
  LODWORD(STACK[0x1964]) = v35;
  STACK[0x1968] = v40;
  LODWORD(STACK[0x1974]) = v38;
  LODWORD(STACK[0x1978]) = v43;
  LODWORD(STACK[0xAD4]) = STACK[0x1978];
  LODWORD(STACK[0xAF4]) = STACK[0x1974];
  STACK[0xA10] = STACK[0x1968];
  LODWORD(STACK[0xB58]) = STACK[0x1964];
  STACK[0xBD0] = STACK[0x1958];
  STACK[0xA20] = STACK[0x1950];
  STACK[0xA30] = STACK[0x1948];
  STACK[0xA40] = STACK[0x1940];
  STACK[0xA48] = STACK[0x1938];
  LODWORD(STACK[0xB5C]) = STACK[0x1934];
  STACK[0xA60] = STACK[0x1928];
  LODWORD(STACK[0xB84]) = STACK[0x1924];
  LODWORD(STACK[0xBB4]) = STACK[0x1920];
  STACK[0xA68] = STACK[0x1918];
  STACK[0xA78] = STACK[0x1910];
  v47 = STACK[0x1908];
  STACK[0xA80] = STACK[0x1908];
  v48 = STACK[0x1900];
  STACK[0xC30] = STACK[0x1900];
  v49 = STACK[0x18F8];
  STACK[0xA98] = STACK[0x18F8];
  v50 = STACK[0x18F0];
  STACK[0xAA0] = STACK[0x18F0];
  v51 = STACK[0x18E8];
  STACK[0xAA8] = STACK[0x18E8];
  v52 = STACK[0x18E0];
  STACK[0xAB8] = STACK[0x18E0];
  v53 = STACK[0xA40] == 0;
  LODWORD(STACK[0x197C]) = STACK[0xAD4];
  STACK[0x1980] = v52;
  STACK[0x1988] = v51;
  STACK[0x1990] = v50;
  STACK[0x1998] = v49;
  STACK[0x19A0] = v48;
  STACK[0x19A8] = v47;
  STACK[0x19B0] = STACK[0xA78];
  STACK[0x19B8] = STACK[0xA68];
  LODWORD(STACK[0x19C0]) = STACK[0xBB4];
  LODWORD(STACK[0x19C4]) = STACK[0xB84];
  STACK[0x19C8] = STACK[0xA60];
  LODWORD(STACK[0x19D4]) = STACK[0xB5C];
  STACK[0x19D8] = STACK[0xA48];
  STACK[0x19E0] = STACK[0xA30];
  STACK[0x19E8] = STACK[0xA20];
  STACK[0x19F0] = STACK[0xBD0];
  LODWORD(STACK[0x19FC]) = STACK[0xB58];
  STACK[0x1A00] = STACK[0xA10];
  v54 = (uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * ((v53 * ((v29 ^ 0xB21) - 3779)) ^ v29 ^ 0xB21))
                          - (((v29 ^ 0xB21) - 1859892487) & 0x6EDBA670 ^ 0x78));
  LODWORD(STACK[0x1A0C]) = STACK[0xAF4];
  return v54();
}

uint64_t sub_19320C674@<X0>(int a1@<W3>, int a2@<W8>)
{
  unint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  unint64_t v8;
  signed int v9;

  LODWORD(STACK[0x3C0]) = v3;
  STACK[0xFF8] = v2;
  STACK[0x1010] = v8;
  LOBYTE(STACK[0x687]) = v6;
  LODWORD(STACK[0x3C4]) = a2;
  LODWORD(STACK[0x1024]) = a1;
  LODWORD(STACK[0x106C]) = a2;
  LOBYTE(STACK[0x1077]) = v6;
  STACK[0x18E0] = STACK[0x9B8];
  STACK[0x18E8] = STACK[0x9A0];
  STACK[0x18F0] = STACK[0x998];
  STACK[0x18F8] = STACK[0x988];
  STACK[0x1900] = STACK[0xB48];
  STACK[0x1908] = STACK[0x980];
  STACK[0x1910] = STACK[0x970];
  STACK[0x1918] = STACK[0x968];
  LODWORD(STACK[0x1920]) = STACK[0xA5C];
  LODWORD(STACK[0x1924]) = STACK[0xA3C];
  STACK[0x1928] = STACK[0x960];
  LODWORD(STACK[0x1934]) = STACK[0xA1C];
  STACK[0x1938] = STACK[0x948];
  STACK[0x1940] = STACK[0x940];
  STACK[0x1948] = STACK[0x928];
  STACK[0x1950] = STACK[0x910];
  STACK[0x1958] = STACK[0xB40];
  LODWORD(STACK[0x1964]) = STACK[0x9F4];
  STACK[0x1968] = STACK[0x908];
  LODWORD(STACK[0x1974]) = STACK[0x9E4];
  v9 = (LOBYTE(STACK[0x1077]) * ((3 * (v7 ^ 0x7FA52865) + 1926883567) & 0x8D260B9F ^ 0x97)) ^ (v5 + v7 + 942);
  LODWORD(STACK[0x1978]) = STACK[0x106C];
  return (*(uint64_t (**)(void))(v4 + 8 * v9))();
}

uint64_t sub_19320C7BC()
{
  int v0;
  uint64_t v1;
  int v2;

  LODWORD(STACK[0xA74]) = STACK[0x12D0];
  STACK[0x18D0] = STACK[0x970];
  LODWORD(STACK[0x18DC]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((STACK[0xD2F] & 1) == 0) * ((v0 ^ 0x7B2) + 1320)) ^ v0)) - 12))();
}

uint64_t sub_19320C804()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v3 = *(unsigned int *)STACK[0x9D0];
  LODWORD(STACK[0xA8C]) = v3;
  STACK[0xB70] = v3;
  v4 = (v3 ^ 0xEA5D0EF7F76B5BEFLL)
     + LODWORD(STACK[0xA74])
     + ((2 * v3) & 0x1EED6B7DELL)
     + ((unint64_t)(LODWORD(STACK[0xA74]) < v2) << 32)
     + 0x15A2F108C6E84058;
  v5 = (*(unsigned int *)STACK[0x9E8] ^ ((v0 + 146) + 0x2FDDB6E7DF9DAF72))
     + ((2 * *(unsigned int *)STACK[0x9E8]) & 0x1BF3B6732)
     - 0x2FDDB6E71B3F4337;
  v6 = v4 < 0xC45E7062;
  v7 = v4 > v5;
  if (v6 != v5 < 0xC45E7062)
    v7 = v6;
  STACK[0x18D0] = STACK[0x970];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((45 * !v7) ^ v0)) - 12))();
}

uint64_t sub_19320C900@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(void),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t *a44)
{
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  unint64_t v49;
  uint64_t v50;

  v48 = (v44 - 912) | 0x422;
  v49 = *(_QWORD *)STACK[0x940] + STACK[0xB70];
  *(_DWORD *)STACK[0x9D0] = a1 + LODWORD(STACK[0xA74]) + LODWORD(STACK[0xA8C]) + v48 - 1063;
  STACK[0x18D0] = v49;
  LODWORD(STACK[0x18DC]) = v47;
  LODWORD(STACK[0xAB4]) = STACK[0x18DC];
  STACK[0xA00] = STACK[0x18D0];
  STACK[0xB88] = a1 + LODWORD(STACK[0xA74]) + (v48 ^ 0xB21u) - 3846;
  v50 = a20();
  STACK[0xA08] = v50;
  *a44 = v50;
  STACK[0x18E0] = STACK[0x9B8];
  STACK[0x18E8] = STACK[0x9A0];
  STACK[0x18F0] = STACK[0x998];
  STACK[0x18F8] = STACK[0x988];
  STACK[0x1900] = STACK[0xB48];
  STACK[0x1908] = STACK[0x980];
  STACK[0x1910] = STACK[0xA00];
  STACK[0x1918] = STACK[0x968];
  LODWORD(STACK[0x1920]) = STACK[0xA5C];
  LODWORD(STACK[0x1924]) = STACK[0xA3C];
  STACK[0x1928] = STACK[0x960];
  LODWORD(STACK[0x1934]) = STACK[0xA1C];
  STACK[0x1938] = STACK[0x948];
  STACK[0x1940] = STACK[0x940];
  STACK[0x1948] = STACK[0x928];
  STACK[0x1950] = STACK[0x910];
  STACK[0x1958] = STACK[0xB40];
  LODWORD(STACK[0x1964]) = STACK[0x9F4];
  STACK[0x1968] = STACK[0x908];
  LODWORD(STACK[0x1974]) = STACK[0x9E4];
  LODWORD(STACK[0x1978]) = v46 - 2;
  return (*(uint64_t (**)(void))(v45 + 8 * ((184 * (((v48 + 84) ^ (v50 == 0)) & 1)) ^ v48)))();
}

void sub_19320CA6C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = STACK[0xB88];
  v3 = v0 & 0xFFFFFFFFED1BF1FFLL;
  LODWORD(STACK[0x564]) = STACK[0xA70];
  STACK[0x398] = STACK[0x9B8];
  STACK[0x3B0] = STACK[0x9A0];
  STACK[0x3C8] = STACK[0x998];
  STACK[0x3D0] = STACK[0x988];
  STACK[0x808] = STACK[0xB48];
  STACK[0x3E8] = STACK[0x980];
  v4 = STACK[0xA00];
  STACK[0x3F0] = STACK[0xA00];
  STACK[0x3F8] = STACK[0x968];
  LODWORD(STACK[0x574]) = STACK[0xA5C];
  LODWORD(STACK[0x59C]) = STACK[0xA3C];
  STACK[0x408] = STACK[0x960];
  LODWORD(STACK[0x5B4]) = STACK[0xA1C];
  STACK[0x848] = *(_QWORD *)(v1 + 8 * v3) - 4;
  STACK[0x410] = STACK[0x948];
  STACK[0x420] = STACK[0x940];
  LODWORD(STACK[0x5D4]) = STACK[0xAB4];
  STACK[0x428] = STACK[0x928];
  STACK[0x440] = STACK[0x910];
  STACK[0x878] = STACK[0xB40];
  LODWORD(STACK[0x5E4]) = STACK[0x9F4];
  STACK[0x458] = STACK[0x908];
  LODWORD(STACK[0x5E8]) = STACK[0x9E4];
  STACK[0x460] = STACK[0xA08];
  STACK[0x8A0] = 0x5D952DACE41797ELL;
  STACK[0x478] = v4;
  STACK[0x8C8] = v2 - 0x4D58EB37AD4779BLL + (v3 + 906) - ((2 * v2) & 0x10A5710CALL) - 1285;
  JUMPOUT(0x19320CB9CLL);
}

void sub_19320CBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10)
{
  int v10;
  int v11;

  *a10 = (v11 ^ (v10 - 997) ^ 0xF9F524E3) + LODWORD(STACK[0x12D0]);
  STACK[0x18E0] = STACK[0x11A8];
  STACK[0x18E8] = STACK[0x11A0];
  STACK[0x18F0] = STACK[0x1188];
  STACK[0x18F8] = STACK[0x1180];
  STACK[0x1900] = STACK[0x1190];
  STACK[0x1908] = STACK[0x1178];
  STACK[0x1910] = STACK[0x1168];
  STACK[0x1918] = STACK[0x1160];
  LODWORD(STACK[0x1920]) = STACK[0x11B0];
  LODWORD(STACK[0x1924]) = STACK[0x119C];
  STACK[0x1928] = STACK[0x1150];
  LODWORD(STACK[0x1934]) = STACK[0x1174];
  STACK[0x1938] = STACK[0x1148];
  STACK[0x1940] = STACK[0x1130];
  STACK[0x1948] = STACK[0x1128];
  STACK[0x1950] = STACK[0x1118];
  STACK[0x1958] = STACK[0x1140];
  LODWORD(STACK[0x1964]) = STACK[0x113C];
  STACK[0x1968] = STACK[0x1108];
  LODWORD(STACK[0x1974]) = STACK[0x10FC];
  LODWORD(STACK[0x1978]) = STACK[0x115C];
  JUMPOUT(0x19320CC88);
}

uint64_t sub_19320CE24@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;

  v57 = *(_QWORD *)(v56 + 8 * a1);
  LODWORD(STACK[0x3DC]) = STACK[0xAD4];
  v71 = STACK[0xAB8];
  v72 = STACK[0xAA8];
  v73 = STACK[0xAA0];
  v74 = STACK[0xA98];
  STACK[0x658] = STACK[0xC30];
  v75 = STACK[0xA80];
  v76 = STACK[0xA78];
  v77 = STACK[0xA68];
  LODWORD(STACK[0x404]) = STACK[0xBB4];
  LODWORD(STACK[0x41C]) = STACK[0xB84];
  v58 = STACK[0xA60];
  STACK[0x6A8] = (a1 ^ 0xFFFFFFFFFFFFFF8CLL) + v57;
  LODWORD(STACK[0x43C]) = STACK[0xB5C];
  v78 = v58;
  v79 = STACK[0xA48];
  v80 = STACK[0xA30];
  v81 = STACK[0xA20];
  STACK[0x6B8] = STACK[0xBD0];
  LODWORD(STACK[0x44C]) = STACK[0xB58];
  STACK[0x208] = STACK[0xA10];
  LODWORD(STACK[0x450]) = STACK[0xAF4];
  v59 = STACK[0xA40];
  STACK[0x220] = STACK[0xA40];
  v60 = STACK[0x450];
  v61 = STACK[0x208];
  v62 = STACK[0x44C];
  v63 = STACK[0x6B8];
  v64 = STACK[0x43C];
  v65 = STACK[0x6A8];
  v66 = LODWORD(STACK[0x41C]);
  v67 = LODWORD(STACK[0x404]);
  v68 = STACK[0x658];
  v69 = STACK[0x3DC];
  STACK[0x228] = STACK[0x6A8];
  STACK[0x238] = v59;
  LODWORD(STACK[0x454]) = v60;
  STACK[0x240] = v61;
  LODWORD(STACK[0x46C]) = v62;
  STACK[0x6E8] = v63;
  STACK[0x248] = v81;
  STACK[0x258] = v80;
  STACK[0x260] = v79;
  LODWORD(STACK[0x494]) = v64;
  STACK[0x270] = v78;
  LODWORD(STACK[0x4AC]) = v66;
  LODWORD(STACK[0x4CC]) = v67;
  STACK[0x278] = v77;
  STACK[0x290] = v76;
  STACK[0x2A8] = v75;
  STACK[0x728] = v68;
  STACK[0x2C0] = v74;
  STACK[0x2C8] = v73;
  STACK[0x2D0] = v72;
  STACK[0x2E0] = v71;
  LODWORD(STACK[0x4DC]) = v69;
  return sub_19320D10C(v65, v78, v66, v67, v77, v76, v75, v68, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           v71,
           a50,
           v72,
           a52,
           v73,
           v74,
           a55,
           a56);
}

uint64_t sub_19320D10C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t (*v6)(void);

  LODWORD(STACK[0x1070]) = STACK[0x4DC];
  STACK[0x1018] = STACK[0x2E0];
  STACK[0x1028] = STACK[0x2D0];
  STACK[0x1030] = STACK[0x2C8];
  STACK[0x1050] = STACK[0x2C0];
  STACK[0x1090] = STACK[0x728];
  STACK[0x1058] = STACK[0x2A8];
  STACK[0x1060] = STACK[0x290];
  STACK[0x1078] = STACK[0x278];
  LODWORD(STACK[0x108C]) = STACK[0x4CC];
  LODWORD(STACK[0x10AC]) = STACK[0x4AC];
  STACK[0x1080] = STACK[0x270];
  LODWORD(STACK[0x10C4]) = STACK[0x494];
  STACK[0x1098] = STACK[0x260];
  STACK[0x10A0] = STACK[0x258];
  STACK[0x10B0] = STACK[0x248];
  STACK[0x10E0] = STACK[0x6E8];
  LODWORD(STACK[0x10EC]) = STACK[0x46C];
  STACK[0x10B8] = STACK[0x240];
  LODWORD(STACK[0x10F8]) = STACK[0x454];
  v4 = (unint64_t *)STACK[0x238];
  STACK[0x10C8] = STACK[0x238];
  v5 = *v4;
  STACK[0x10D0] = STACK[0x228];
  v6 = (uint64_t (*)(void))(v3
                         - ((v0 + 981533316) | 0x45242105u)
                         + *(_QWORD *)(v2
                                     + 8 * (int)(((v5 == 0) * ((v0 + 2146415521) & 0xFFB56FE7 ^ (v1 + 1810))) ^ v0)));
  STACK[0x10D8] = v5;
  return v6();
}

uint64_t sub_19320D220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void (*a50)(void))
{
  _QWORD *v50;
  int v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  int v61;
  unint64_t v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  unint64_t v69;
  int v70;
  uint64_t (*v71)(void);

  ((void (*)(unint64_t))a50)(STACK[0x10D8]);
  v50 = (_QWORD *)STACK[0x10C8];
  *v50 = 0;
  v50[1] = 0;
  a50();
  STACK[0x2E8] = STACK[0x10D0];
  LODWORD(STACK[0x4EC]) = STACK[0x10F8];
  STACK[0x2F8] = STACK[0x10B8];
  LODWORD(STACK[0x514]) = STACK[0x10EC];
  STACK[0x778] = STACK[0x10E0];
  STACK[0x300] = STACK[0x10B0];
  STACK[0x318] = STACK[0x10A0];
  STACK[0x320] = STACK[0x1098];
  LODWORD(STACK[0x52C]) = STACK[0x10C4];
  STACK[0x338] = STACK[0x1080];
  LODWORD(STACK[0x54C]) = STACK[0x10AC];
  LODWORD(STACK[0x55C]) = STACK[0x108C];
  STACK[0x340] = STACK[0x1078];
  STACK[0x358] = STACK[0x1060];
  STACK[0x360] = STACK[0x1058];
  STACK[0x7B8] = STACK[0x1090];
  STACK[0x368] = STACK[0x1050];
  STACK[0x378] = STACK[0x1030];
  STACK[0x380] = STACK[0x1028];
  STACK[0x390] = STACK[0x1018];
  LODWORD(STACK[0x560]) = STACK[0x1070];
  v51 = STACK[0x560];
  v52 = STACK[0x390];
  v53 = STACK[0x380];
  v54 = STACK[0x378];
  v55 = STACK[0x368];
  v56 = STACK[0x7B8];
  v57 = STACK[0x360];
  v58 = STACK[0x358];
  v59 = STACK[0x340];
  v60 = STACK[0x55C];
  v61 = STACK[0x54C];
  v62 = STACK[0x338];
  v63 = STACK[0x52C];
  v64 = STACK[0x320];
  v65 = STACK[0x318];
  v66 = STACK[0x300];
  v67 = STACK[0x778];
  v68 = STACK[0x514];
  v69 = STACK[0x2F8];
  v70 = STACK[0x4EC];
  v71 = (uint64_t (*)(void))STACK[0x2E8];
  LODWORD(STACK[0x1794]) = STACK[0x560];
  STACK[0x1798] = v52;
  STACK[0x17A0] = v53;
  STACK[0x17A8] = v54;
  STACK[0x17B0] = v55;
  STACK[0x17B8] = v56;
  STACK[0x17C0] = v57;
  STACK[0x17C8] = v58;
  STACK[0x17D0] = v59;
  LODWORD(STACK[0x17D8]) = v60;
  LODWORD(STACK[0x17DC]) = v61;
  STACK[0x17E0] = v62;
  LODWORD(STACK[0x17EC]) = v63;
  STACK[0x17F0] = v64;
  STACK[0x17F8] = v65;
  STACK[0x1800] = v66;
  STACK[0x1808] = v67;
  LODWORD(STACK[0x1814]) = v68;
  STACK[0x1818] = v69;
  LODWORD(STACK[0x1824]) = v70;
  STACK[0x1828] = 0;
  LODWORD(STACK[0x197C]) = v51;
  STACK[0x1980] = v52;
  STACK[0x1988] = v53;
  STACK[0x1990] = v54;
  STACK[0x1998] = v55;
  STACK[0x19A0] = v56;
  STACK[0x19A8] = v57;
  STACK[0x19B0] = v58;
  STACK[0x19B8] = v59;
  LODWORD(STACK[0x19C0]) = v60;
  LODWORD(STACK[0x19C4]) = v61;
  STACK[0x19C8] = v62;
  LODWORD(STACK[0x19D4]) = v63;
  STACK[0x19D8] = v64;
  STACK[0x19E0] = v65;
  STACK[0x19E8] = v66;
  STACK[0x19F0] = v67;
  LODWORD(STACK[0x19FC]) = v68;
  STACK[0x1A00] = v69;
  LODWORD(STACK[0x1A0C]) = v70;
  LODWORD(STACK[0x1A10]) = v51;
  return v71();
}

void sub_19320D3F0()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 4) = v1;
}

uint64_t sub_19320D3F8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t (*v12)(void);

  v4 = STACK[0x1BD8];
  LODWORD(STACK[0xDEC]) = STACK[0x1BD4];
  STACK[0xD30] = STACK[0x1BC8];
  LODWORD(STACK[0xE0C]) = STACK[0x1BC4];
  STACK[0xDC8] = STACK[0x280];
  STACK[0xD38] = STACK[0x1BB8];
  STACK[0xD50] = STACK[0x1BB0];
  LODWORD(STACK[0xE14]) = STACK[0x1BAC];
  STACK[0xD60] = STACK[0x1BA0];
  STACK[0xD68] = STACK[0x1B98];
  LODWORD(STACK[0xE24]) = STACK[0x1B94];
  STACK[0xD70] = STACK[0x1B88];
  LODWORD(STACK[0xE44]) = STACK[0x1B84];
  LODWORD(STACK[0xE54]) = STACK[0x1B80];
  STACK[0xD88] = STACK[0x1B78];
  STACK[0xD90] = STACK[0x1B70];
  v5 = STACK[0x1B68];
  STACK[0xD98] = STACK[0x1B68];
  v6 = STACK[0x230];
  STACK[0xE28] = STACK[0x230];
  v7 = STACK[0x1B60];
  STACK[0xDA0] = STACK[0x1B60];
  v8 = STACK[0x1B58];
  STACK[0xDB0] = STACK[0x1B58];
  v9 = STACK[0x1B50];
  STACK[0xDB8] = STACK[0x1B50];
  v10 = STACK[0x1B48];
  STACK[0xDC0] = STACK[0x1B48];
  v11 = STACK[0x1B44];
  LODWORD(STACK[0xE6C]) = STACK[0x1B44];
  LODWORD(STACK[0x1BDC]) = v11;
  STACK[0x1BE0] = v10;
  STACK[0x1BE8] = v9;
  STACK[0x1BF0] = v8;
  STACK[0x1BF8] = v7;
  STACK[0x2B8] = v6;
  STACK[0x1C00] = v5;
  STACK[0x1C08] = STACK[0xD90];
  STACK[0x1C10] = STACK[0xD88];
  LODWORD(STACK[0x1C18]) = STACK[0xE54];
  LODWORD(STACK[0x1C1C]) = STACK[0xE44];
  STACK[0x1C20] = STACK[0xD70];
  LODWORD(STACK[0x1C2C]) = STACK[0xE24];
  STACK[0x1C30] = STACK[0xD68];
  STACK[0x1C38] = STACK[0xD60];
  LODWORD(STACK[0x1C44]) = STACK[0xE14];
  STACK[0x1C48] = STACK[0xD50];
  STACK[0x1C50] = STACK[0xD38];
  STACK[0x308] = STACK[0xDC8];
  LODWORD(STACK[0x1C5C]) = STACK[0xE0C];
  STACK[0x1C60] = STACK[0xD30];
  LODWORD(STACK[0x1C6C]) = STACK[0xDEC];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                      + 8
                                      * ((((v4 == v3) ^ (v0 - 72)) & 1 | (4
                                                                                         * (((v4 == v3) ^ (v0 - 72)) & 1))) ^ (v1 + v0 + 1183)))
                          - 4);
  LODWORD(STACK[0x1C70]) = v4;
  return v12();
}

uint64_t sub_19320D57C()
{
  char v0;
  int v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  _DWORD *v5;
  unint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  int v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t (*v24)(void);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;

  v2 = STACK[0xDC0];
  v3 = v0 & 0xFD;
  v4 = *(_QWORD *)STACK[0xDC0];
  v5 = (_DWORD *)STACK[0xD68];
  v6 = STACK[0xD68];
  v7 = STACK[0xE44];
  v8 = LODWORD(STACK[0xE44]) + 451170848 - ((LODWORD(STACK[0xE44]) << (v3 - 28)) & 0x35C8A440);
  v9 = ((2 * *(_DWORD *)STACK[0xD68]) & 0x7DBFFFB8) + (*(_DWORD *)STACK[0xD68] ^ 0xBEDFFFDC) + 1092616228;
  *(_BYTE *)(v4 + v9 + 1) = BYTE2(v8) ^ 0xE4;
  *(_BYTE *)(v4 + v9 + 2) = (((BYTE1(v8) ^ 0x52) - 2 * ((BYTE1(v8) ^ 0x52) & 7 ^ BYTE1(v8) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v4 + v9) = HIBYTE(v8) ^ 0x1A;
  *(_BYTE *)(v4 + v9 + 3) = v8 ^ 0x20;
  *v5 += 4;
  LODWORD(STACK[0x1BDC]) = STACK[0xE6C];
  STACK[0x1BE0] = v2;
  STACK[0x1BE8] = STACK[0xDB8];
  STACK[0x1BF0] = STACK[0xDB0];
  STACK[0x1BF8] = STACK[0xDA0];
  STACK[0x2B8] = STACK[0xE28];
  STACK[0x1C00] = STACK[0xD98];
  STACK[0x1C08] = STACK[0xD90];
  STACK[0x1C10] = STACK[0xD88];
  LODWORD(STACK[0x1C18]) = STACK[0xE54];
  LODWORD(STACK[0x1C1C]) = v7;
  STACK[0x1C20] = STACK[0xD70];
  LODWORD(STACK[0x1C2C]) = STACK[0xE24];
  STACK[0x1C30] = v6;
  STACK[0x1C38] = STACK[0xD60];
  LODWORD(STACK[0x1C44]) = STACK[0xE14];
  STACK[0x1C48] = STACK[0xD50];
  STACK[0x1C50] = STACK[0xD38];
  STACK[0x308] = STACK[0xDC8];
  LODWORD(STACK[0x1C5C]) = STACK[0xE0C];
  STACK[0x1C60] = STACK[0xD30];
  LODWORD(STACK[0x1C6C]) = STACK[0xDEC];
  LODWORD(STACK[0x1C70]) = v1;
  LODWORD(v2) = STACK[0x1C70];
  LODWORD(v5) = STACK[0x1C6C];
  v10 = STACK[0x1C60];
  v11 = STACK[0x1C5C];
  v12 = STACK[0x308];
  v13 = STACK[0x1C50];
  v14 = STACK[0x1C48];
  v15 = STACK[0x1C44];
  v16 = STACK[0x1C38];
  v17 = STACK[0x1C30];
  v18 = STACK[0x1C2C];
  v19 = STACK[0x1C20];
  v20 = STACK[0x1C1C];
  v21 = STACK[0x1C18];
  v22 = STACK[0x1C10];
  v23 = STACK[0x1C08];
  v24 = (uint64_t (*)(void))STACK[0x1C00];
  v25 = STACK[0x2B8];
  v26 = STACK[0x1BF8];
  v27 = STACK[0x1BF0];
  v28 = STACK[0x1BE8];
  v29 = STACK[0x1BE0];
  v30 = STACK[0x1BDC];
  LODWORD(STACK[0x12FC]) = STACK[0x1BDC];
  STACK[0x1300] = v29;
  STACK[0x1308] = v28;
  STACK[0x1310] = v27;
  STACK[0x1318] = v26;
  STACK[0x1320] = v25;
  STACK[0x1328] = (unint64_t)v24;
  STACK[0x1330] = v23;
  STACK[0x1338] = v22;
  LODWORD(STACK[0x1340]) = v21;
  LODWORD(STACK[0x1344]) = v20;
  STACK[0x1348] = v19;
  LODWORD(STACK[0x1354]) = v18;
  STACK[0x1358] = v17;
  STACK[0x1360] = v16;
  LODWORD(STACK[0x136C]) = v15;
  STACK[0x1370] = v14;
  STACK[0x1378] = v13;
  STACK[0x1380] = v12;
  LODWORD(STACK[0x138C]) = v11;
  STACK[0x1390] = v10;
  LODWORD(STACK[0x139C]) = (_DWORD)v5;
  LODWORD(STACK[0x13A0]) = v2;
  LODWORD(STACK[0x13A4]) = v30;
  STACK[0x13A8] = v29;
  STACK[0x13B0] = v28;
  STACK[0x13B8] = v27;
  STACK[0x13C0] = v26;
  STACK[0x13C8] = v25;
  STACK[0x13D0] = (unint64_t)v24;
  STACK[0x13D8] = v23;
  STACK[0x13E0] = v22;
  LODWORD(STACK[0x13E8]) = v21;
  LODWORD(STACK[0x13EC]) = v20;
  STACK[0x13F0] = v19;
  LODWORD(STACK[0x13FC]) = v18;
  STACK[0x1400] = v17;
  STACK[0x1408] = v16;
  LODWORD(STACK[0x1414]) = v15;
  STACK[0x1418] = v14;
  STACK[0x1420] = v13;
  STACK[0x1428] = v12;
  LODWORD(STACK[0x1434]) = v11;
  STACK[0x1438] = v10;
  LODWORD(STACK[0x1444]) = (_DWORD)v5;
  LODWORD(STACK[0x1448]) = v2;
  LODWORD(STACK[0x144C]) = v30;
  STACK[0x1450] = v29;
  STACK[0x1458] = v28;
  STACK[0x1460] = v27;
  STACK[0x1468] = v26;
  STACK[0x1470] = v25;
  STACK[0x1478] = (unint64_t)v24;
  STACK[0x1480] = v23;
  STACK[0x1488] = v22;
  LODWORD(STACK[0x1490]) = v21;
  LODWORD(STACK[0x1494]) = v20;
  STACK[0x1498] = v19;
  LODWORD(STACK[0x14A4]) = v18;
  STACK[0x14A8] = v17;
  STACK[0x14B0] = v16;
  LODWORD(STACK[0x14BC]) = v15;
  STACK[0x14C0] = v14;
  STACK[0x14C8] = v13;
  STACK[0x14D0] = v12;
  LODWORD(STACK[0x14DC]) = v11;
  STACK[0x14E0] = v10;
  LODWORD(STACK[0x14EC]) = (_DWORD)v5;
  LODWORD(STACK[0x14F0]) = v2;
  LODWORD(STACK[0x14F4]) = v30;
  STACK[0x14F8] = v29;
  STACK[0x1500] = v28;
  STACK[0x1508] = v27;
  STACK[0x1510] = v26;
  STACK[0x1518] = v25;
  STACK[0x1520] = (unint64_t)v24;
  STACK[0x1528] = v23;
  STACK[0x1530] = v22;
  LODWORD(STACK[0x1538]) = v21;
  LODWORD(STACK[0x153C]) = v20;
  STACK[0x1540] = v19;
  LODWORD(STACK[0x154C]) = v18;
  STACK[0x1550] = v17;
  STACK[0x1558] = v16;
  LODWORD(STACK[0x1564]) = v15;
  STACK[0x1568] = v14;
  STACK[0x1570] = v13;
  STACK[0x1578] = v12;
  LODWORD(STACK[0x1584]) = v11;
  STACK[0x1588] = v10;
  LODWORD(STACK[0x1594]) = (_DWORD)v5;
  LODWORD(STACK[0x1598]) = v2;
  return v24();
}

void sub_19320D8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void (*a50)(_QWORD))
{
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;

  v50 = (_QWORD *)STACK[0x1128];
  a50(*(_QWORD *)STACK[0x1128]);
  v51 = STACK[0x1108];
  *v50 = STACK[0x1108];
  v52 = STACK[0x1118];
  v53 = STACK[0x1140];
  *(_DWORD *)STACK[0x1118] = STACK[0x1140];
  LODWORD(STACK[0x1CF4]) = STACK[0x11B4];
  STACK[0x1CF8] = STACK[0x11A8];
  STACK[0x1D00] = STACK[0x11A0];
  STACK[0x1D08] = STACK[0x1188];
  STACK[0x1D10] = STACK[0x1180];
  STACK[0x430] = STACK[0x1190];
  STACK[0x1D18] = STACK[0x1178];
  STACK[0x1D20] = STACK[0x1168];
  STACK[0x1D28] = STACK[0x1160];
  LODWORD(STACK[0x1D30]) = STACK[0x11B0];
  LODWORD(STACK[0x1D34]) = STACK[0x119C];
  STACK[0x1D38] = STACK[0x1150];
  LODWORD(STACK[0x1D44]) = STACK[0x1174];
  STACK[0x1D48] = STACK[0x1148];
  STACK[0x1D50] = STACK[0x1130];
  LODWORD(STACK[0x11F4]) = STACK[0x115C];
  STACK[0x1D58] = STACK[0x1128];
  STACK[0x1D60] = v52;
  STACK[0x470] = v53;
  v54 = STACK[0x113C];
  LODWORD(STACK[0x120C]) = STACK[0x113C];
  STACK[0x1D68] = v51;
  LODWORD(STACK[0x1210]) = STACK[0x10FC];
  LODWORD(STACK[0x1214]) = v54;
  JUMPOUT(0x19320D9B4);
}

uint64_t sub_19320DC08()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t (*v15)(void);

  v5 = STACK[0x314];
  v6 = v0 ^ (v2 + 1483);
  v7 = v1 + v0 + 1558;
  STACK[0xF58] = STACK[0x1248];
  LODWORD(STACK[0xFB8]) = STACK[0x2F4];
  STACK[0x1038] = STACK[0x5C8];
  STACK[0xF68] = STACK[0x1240];
  STACK[0xF70] = STACK[0x1238];
  LODWORD(STACK[0xFBC]) = STACK[0x2DC];
  STACK[0xF80] = STACK[0x1230];
  STACK[0xF88] = STACK[0x1218];
  LODWORD(STACK[0xFD4]) = STACK[0x2B4];
  STACK[0xF90] = STACK[0x1200];
  LODWORD(STACK[0xFE4]) = STACK[0x2A4];
  LODWORD(STACK[0x100C]) = STACK[0x2A0];
  STACK[0xFA8] = STACK[0x11F8];
  STACK[0xFB0] = STACK[0x11E8];
  v8 = STACK[0x1E48];
  STACK[0xFC0] = STACK[0x1E48];
  v9 = STACK[0x578];
  STACK[0x1048] = STACK[0x578];
  v10 = STACK[0x1E40];
  STACK[0xFC8] = STACK[0x1E40];
  v11 = STACK[0x1E38];
  STACK[0xFD8] = STACK[0x1E38];
  v12 = STACK[0x1E30];
  STACK[0xFE8] = STACK[0x1E30];
  v13 = STACK[0x1E28];
  STACK[0xFF0] = STACK[0x1E28];
  v14 = STACK[0x29C];
  LODWORD(STACK[0x1020]) = STACK[0x29C];
  LODWORD(STACK[0x32C]) = v14;
  STACK[0x1250] = v13;
  STACK[0x1258] = v12;
  STACK[0x1260] = v11;
  STACK[0x1268] = v10;
  STACK[0x608] = v9;
  STACK[0x1270] = v8;
  STACK[0x1280] = STACK[0xFB0];
  STACK[0x1288] = STACK[0xFA8];
  LODWORD(STACK[0x330]) = STACK[0x100C];
  LODWORD(STACK[0x334]) = STACK[0xFE4];
  STACK[0x1298] = STACK[0xF90];
  LODWORD(STACK[0x34C]) = STACK[0xFD4];
  STACK[0x12A0] = STACK[0xF88];
  STACK[0x12A8] = STACK[0xF80];
  LODWORD(STACK[0x374]) = STACK[0xFBC];
  STACK[0x12B0] = STACK[0xF70];
  STACK[0x12B8] = STACK[0xF68];
  STACK[0x638] = STACK[0x1038];
  LODWORD(STACK[0x38C]) = STACK[0xFB8];
  STACK[0x12C0] = STACK[0xF58];
  LODWORD(STACK[0x3AC]) = v5;
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v5 == v4) * (v6 + 5460)) ^ v7)) - 4);
  LODWORD(STACK[0x3BC]) = v5;
  return v15();
}

void sub_19320DD7C()
{
  int v0;
  uint64_t v1;
  int v2;
  _DWORD *v3;
  unint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;

  v3 = (_DWORD *)STACK[0xFC8];
  v4 = STACK[0xFC8];
  v5 = *(_DWORD *)STACK[0xFC8];
  v6 = v5 ^ 0x8BDFFFDE;
  v7 = (2 * v5) & 0x17BFFFBC;
  v8 = STACK[0xFD4];
  v9 = (LODWORD(STACK[0xFD4]) ^ (((v0 - 284971993) & 0x10FC5767) - 1997617885)) & (2 * (STACK[0xFD4] & 0x920EE34D)) ^ STACK[0xFD4] & 0x920EE34D;
  v10 = ((2 * (LODWORD(STACK[0xFD4]) ^ 0xA8EA4CAA)) ^ 0x75C95FCE) & (LODWORD(STACK[0xFD4]) ^ 0xA8EA4CAA) ^ (2 * (LODWORD(STACK[0xFD4]) ^ 0xA8EA4CAA)) & 0x3AE4AFE6;
  v11 = v10 ^ 0xA24A021;
  v12 = (v10 ^ 0x12402F44) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xEB92BF9C) & v11 ^ (4 * v11) & 0x3AE4AFE4;
  v14 = (v13 ^ 0x2A80AF80) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x10640063)) ^ 0xAE4AFE70) & (v13 ^ 0x10640063) ^ (16 * (v13 ^ 0x10640063)) & 0x3AE4AFE0;
  v16 = v14 ^ 0x3AE4AFE7 ^ (v15 ^ 0x2A40AE00) & (v14 << 8);
  v17 = (unint64_t *)STACK[0xFE8];
  v18 = STACK[0xFE8];
  v19 = *(_QWORD *)STACK[0xFE8];
  v20 = LODWORD(STACK[0xFD4]) ^ (2
                               * ((v16 << 16) & 0x3AE40000 ^ v16 ^ ((v16 << 16) ^ 0x2FE70000) & (((v15 ^ 0x10A40187) << 8) & 0x3AE40000 ^ 0x1A400000 ^ (((v15 ^ 0x10A40187) << 8) ^ 0x64AF0000) & (v15 ^ 0x10A40187))));
  v21 = v7 + v6 + 1948254242;
  *(_BYTE *)(v19 + v21) = HIBYTE(v20) ^ 0xB2;
  *(_BYTE *)(v19 + v21 + 1) = BYTE2(v20) ^ 0xF;
  *(_BYTE *)(v19 + v21 + 2) = (((BYTE1(v20) ^ 0xBC) - ((v20 >> 7) & 6) + 11) ^ 3) - 8;
  *(_BYTE *)(v19 + v21 + 3) = v20 ^ 0x83;
  v22 = (*v3 + 4);
  *v3 = v22;
  v23 = *v17;
  v24 = STACK[0x1048];
  v25 = STACK[0x1048];
  v26 = (v24 ^ 0x268FC9FC14F7711ALL) & (2 * (v24 & 0xB40F81E0A4F8619BLL)) ^ v24 & 0xB40F81E0A4F8619BLL;
  v27 = ((2 * (v24 ^ 0x669CC97D5D37711ELL)) ^ 0xA526913BF39E210ALL) & (v24 ^ 0x669CC97D5D37711ELL) ^ (2 * (v24 ^ 0x669CC97D5D37711ELL)) & 0x5293489DF9CF1084;
  LODWORD(STACK[0x564]) = STACK[0x1020];
  v28 = v27 ^ 0x5291488408411085;
  v29 = (v27 ^ 0x80020001B1820000) & (4 * v26) ^ v26;
  STACK[0x398] = STACK[0xFF0];
  STACK[0x3B0] = v18;
  v30 = *(_QWORD *)(v1 + 8 * v0);
  v31 = ((4 * v28) ^ 0x4A4D2277E73C4214) & v28 ^ (4 * v28) & 0xD293489DF9CF1084;
  v32 = STACK[0xFD8];
  STACK[0x3C8] = STACK[0xFD8];
  STACK[0x3D0] = v4;
  STACK[0x808] = v25;
  v33 = (v31 ^ 0x42010015E10C0000) & (16 * v29) ^ v29;
  STACK[0x3E8] = STACK[0xFC0];
  STACK[0x3F0] = STACK[0xFB0];
  STACK[0x3F8] = STACK[0xFA8];
  v34 = ((16 * (v31 ^ 0x9092488818C31081)) ^ 0x293489DF9CF10850) & (v31 ^ 0x9092488818C31081) ^ (16 * (v31 ^ 0x9092488818C31081)) & 0xD293489DF9CF1080;
  LODWORD(STACK[0x574]) = STACK[0x100C];
  LODWORD(STACK[0x59C]) = STACK[0xFE4];
  STACK[0x408] = STACK[0xF90];
  LODWORD(STACK[0x5B4]) = v8;
  STACK[0x848] = v30;
  STACK[0x410] = STACK[0xF88];
  v35 = (((v34 ^ 0xD2834000610E1085) << 8) ^ 0x93489DF9CF108500) & (v34 ^ 0xD2834000610E1085) ^ ((v34 ^ 0xD2834000610E1085) << 8) & 0xD293489DF9CF1000;
  STACK[0x420] = STACK[0xF80];
  LODWORD(STACK[0x5D4]) = STACK[0xFBC];
  STACK[0x428] = STACK[0xF70];
  STACK[0x440] = STACK[0xF68];
  STACK[0x878] = STACK[0x1038];
  LODWORD(STACK[0x5E4]) = STACK[0xFB8];
  STACK[0x458] = STACK[0xF58];
  LODWORD(STACK[0x5E8]) = v2;
  STACK[0x460] = v23;
  STACK[0x8A0] = (v22 ^ 0xFB55FDCFFEDBFBEFLL) + 0xA83550ACF657D8FLL + ((2 * v22) & 0x1FDB7F7DELL);
  STACK[0x478] = v32;
  STACK[0x8C8] = v24 ^ (2
                      * (v35 & 0x488D108500000000 ^ (v34 ^ 0x10089D98C10000) & (v33 << 8) ^ v33 ^ (v35 ^ 0x12000899C9000000) & (((v34 ^ 0x10089D98C10000) & (v33 << 8) ^ v33) << 16))) ^ 0x4F25F1AE21D3E9FELL;
  JUMPOUT(0x19320E23CLL);
}

uint64_t sub_19320E380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v54;
  uint64_t v55;

  LODWORD(STACK[0x11DC]) = LODWORD(STACK[0x1110]) ^ 0x852B8865;
  return ((uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * (v54 | (2 * (a54 != 1051 * (v54 ^ 0x10CA) - 2098)))) - 8))();
}

uint64_t sub_19320E3D0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 == v2) ^ (v0 - 3)) & 1) * (41 * (v0 ^ 0x438) + 746)) ^ v0)))();
}

uint64_t sub_19320E41C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((((a1 + 2145903945) & 0xFFBD3FE7) - v3 - 719) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_19320E458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v54;
  uint64_t v55;
  int v56;

  STACK[0x11E0] = STACK[0x1120] - 0x7C539198C63B88BBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v55
                                        + 8
                                        * (int)(((a54 == (v54 ^ 0x645) - 3851)
                                               * ((v54 + 2146264093) & 0xFFB7BFFF ^ (v56 + 71))) ^ v54))
                            - 4))();
}

uint64_t sub_19320E4C4(unint64_t a1)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  STACK[0x848] = v1;
  v6 = v1 - 1;
  v7 = ((2 * v6) & 0x1EFF41E7ALL) + (v6 ^ a1);
  *(_BYTE *)(STACK[0x1128] + v7 + STACK[0x11E0]) = *(_BYTE *)(STACK[0x1118] + v7 + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((((v6 != 0) << 6) | ((v6 != 0) << 7)) ^ (v4 + v2 + 1782)))
                            - 8))();
}

uint64_t sub_19320E528@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = v2 - 1;
  v10 = (v6 & (2 * v9)) + (v9 ^ a1);
  *(_BYTE *)(v4 + v10 + v3) = *(_BYTE *)(a2 + v10 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((((v9 != 0) << 6) | ((v9 != 0) << 7)) ^ v5))
                            - 8))();
}

uint64_t sub_19320E6AC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  BOOL v6;
  int v7;
  uint64_t (*v8)(void);

  v4 = STACK[0x1178];
  *(_DWORD *)STACK[0x1178] += LODWORD(STACK[0x560]);
  v5 = STACK[0x1174];
  v6 = LODWORD(STACK[0x1174]) == v3;
  STACK[0x1B20] = STACK[0x11A8];
  STACK[0x1B30] = STACK[0x11A0];
  LODWORD(STACK[0x1538]) = STACK[0x11B4];
  STACK[0x1B48] = STACK[0x1188];
  STACK[0x1470] = STACK[0x1190];
  STACK[0x1B50] = STACK[0x1180];
  v7 = v6;
  STACK[0x1B58] = v4;
  LODWORD(STACK[0x153C]) = STACK[0x11B0];
  STACK[0x1B60] = STACK[0x1168];
  LODWORD(STACK[0x154C]) = STACK[0x119C];
  STACK[0x1B68] = STACK[0x1160];
  LODWORD(STACK[0x1564]) = v5;
  LODWORD(STACK[0x1584]) = STACK[0x115C];
  LODWORD(STACK[0x1594]) = STACK[0x113C];
  STACK[0x1B70] = STACK[0x1150];
  STACK[0x1B78] = STACK[0x1148];
  STACK[0x14D0] = STACK[0x1140];
  LODWORD(STACK[0x1598]) = STACK[0x10FC];
  STACK[0x1B88] = STACK[0x1130];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v7 * ((v0 + v1 + 588) ^ 0xF3A)) ^ (v0 + v1 + 588))) - 8);
  LODWORD(STACK[0x159C]) = STACK[0x1174];
  return v8();
}

#error "19320F4B8: call analysis failed (funcsize=123)"

uint64_t sub_19320E834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v54;
  int v55;
  int v56;
  uint64_t v57;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v57
                                                               + 8
                                                               * (((a54 != 3) * (v55 + (v54 ^ (v56 - 990)) - 51)) ^ v54))
                                                   - 8))(a1, 0x1EFF41E7ALL);
}

uint64_t sub_19320E870(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  STACK[0x958] = v2;
  v6 = v2 - 1;
  v7 = (a2 & (2 * v6)) + (v6 ^ a1);
  *(_BYTE *)(STACK[0x1100] + v7 + STACK[0x11E0]) = *(_BYTE *)(STACK[0x10F0] + v7 + v4);
  return (*(uint64_t (**)(void))(v5 + 8 * ((254 * (v6 == 0)) ^ (v3 + 2271))))();
}

uint64_t sub_19320E8C0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v3 - 1;
  v11 = (a2 & (2 * v10)) + (v10 ^ a1);
  *(_BYTE *)(v6 + v11 + v5) = *(_BYTE *)(v4 + v11 + v7);
  return (*(uint64_t (**)(void))(v9 + 8 * ((254 * (v10 == 0)) ^ (v8 + a3 + 2271))))();
}

uint64_t sub_19320E93C()
{
  _DWORD *v0;
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  int v14;
  uint64_t (*v15)(void);
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;

  v0 = (_DWORD *)STACK[0x1180];
  v1 = STACK[0x1174];
  *v0 += LODWORD(STACK[0x1174]) - 1844518067;
  LODWORD(STACK[0x32C]) = STACK[0x11B4];
  STACK[0x1250] = STACK[0x11A8];
  STACK[0x1258] = STACK[0x11A0];
  STACK[0x1260] = STACK[0x1188];
  STACK[0x1268] = (unint64_t)v0;
  STACK[0x608] = STACK[0x1190];
  STACK[0x1270] = STACK[0x1178];
  STACK[0x1280] = STACK[0x1168];
  STACK[0x1288] = STACK[0x1160];
  LODWORD(STACK[0x330]) = STACK[0x11B0];
  LODWORD(STACK[0x334]) = STACK[0x119C];
  STACK[0x1298] = STACK[0x1150];
  LODWORD(STACK[0x34C]) = v1;
  STACK[0x12A0] = STACK[0x1148];
  STACK[0x12A8] = STACK[0x1130];
  LODWORD(STACK[0x374]) = STACK[0x115C];
  STACK[0x12B0] = STACK[0x1128];
  STACK[0x12B8] = STACK[0x1118];
  STACK[0x638] = STACK[0x1140];
  LODWORD(STACK[0x38C]) = STACK[0x113C];
  STACK[0x12C0] = STACK[0x1108];
  LODWORD(v0) = STACK[0x10FC];
  LODWORD(STACK[0x3AC]) = STACK[0x10FC];
  LODWORD(STACK[0x3BC]) = (_DWORD)v0;
  LODWORD(v0) = STACK[0x3BC];
  v2 = STACK[0x3AC];
  v3 = STACK[0x12C0];
  v4 = STACK[0x38C];
  v5 = STACK[0x638];
  v6 = STACK[0x12B8];
  v7 = STACK[0x12B0];
  v8 = STACK[0x374];
  v9 = STACK[0x12A8];
  v10 = STACK[0x12A0];
  v11 = STACK[0x34C];
  v12 = STACK[0x1298];
  v13 = STACK[0x334];
  v14 = STACK[0x330];
  v15 = (uint64_t (*)(void))STACK[0x1288];
  v16 = STACK[0x1280];
  v17 = STACK[0x1270];
  v18 = STACK[0x608];
  v19 = STACK[0x1268];
  v20 = STACK[0x1260];
  v21 = STACK[0x1258];
  v22 = STACK[0x1250];
  v23 = STACK[0x32C];
  LODWORD(STACK[0x159C]) = STACK[0x32C];
  STACK[0x15A0] = v22;
  STACK[0x15A8] = v21;
  STACK[0x15B0] = v20;
  STACK[0x15B8] = v19;
  STACK[0x15C0] = v18;
  STACK[0x15C8] = v17;
  STACK[0x15D0] = v16;
  STACK[0x15D8] = (unint64_t)v15;
  LODWORD(STACK[0x15E0]) = v14;
  LODWORD(STACK[0x15E4]) = v13;
  STACK[0x15E8] = v12;
  LODWORD(STACK[0x15F4]) = v11;
  STACK[0x15F8] = v10;
  STACK[0x1600] = v9;
  LODWORD(STACK[0x160C]) = v8;
  STACK[0x1610] = v7;
  STACK[0x1618] = v6;
  STACK[0x1620] = v5;
  LODWORD(STACK[0x162C]) = v4;
  STACK[0x1630] = v3;
  LODWORD(STACK[0x163C]) = v2;
  LODWORD(STACK[0x1640]) = (_DWORD)v0;
  LODWORD(STACK[0x1644]) = v23;
  STACK[0x1648] = v22;
  STACK[0x1650] = v21;
  STACK[0x1658] = v20;
  STACK[0x1660] = v19;
  STACK[0x1668] = v18;
  STACK[0x1670] = v17;
  STACK[0x1678] = v16;
  STACK[0x1680] = (unint64_t)v15;
  LODWORD(STACK[0x1688]) = v14;
  LODWORD(STACK[0x168C]) = v13;
  STACK[0x1690] = v12;
  LODWORD(STACK[0x169C]) = v11;
  STACK[0x16A0] = v10;
  STACK[0x16A8] = v9;
  LODWORD(STACK[0x16B4]) = v8;
  STACK[0x16B8] = v7;
  STACK[0x16C0] = v6;
  STACK[0x16C8] = v5;
  LODWORD(STACK[0x16D4]) = v4;
  STACK[0x16D8] = v3;
  LODWORD(STACK[0x16E0]) = v2;
  LODWORD(STACK[0x16E4]) = (_DWORD)v0;
  return v15();
}

uint64_t sub_19320EB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int *a31,void (*a32)(_QWORD, unint64_t, _QWORD),uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, void (*)(_QWORD, unint64_t, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v83;
  int v84;
  unint64_t v85;
  int v86;
  int v87;
  int v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  int v92;

  v55 = STACK[0x18A0];
  *(_DWORD *)(v55 + 8) = STACK[0x1E58];
  *(_DWORD *)(v55 + 12) = 0;
  STACK[0x1C08] = STACK[0x11A8];
  STACK[0x1C10] = v55;
  LODWORD(v55) = STACK[0x11B4];
  LODWORD(STACK[0x1688]) = STACK[0x11B4];
  STACK[0x1C20] = STACK[0x1188];
  STACK[0x15C0] = STACK[0x1190];
  STACK[0x1C30] = STACK[0x1180];
  STACK[0x1C38] = STACK[0x1178];
  LODWORD(STACK[0x168C]) = STACK[0x11B0];
  STACK[0x1C48] = STACK[0x1168];
  LODWORD(STACK[0x169C]) = STACK[0x119C];
  STACK[0x1C50] = STACK[0x1160];
  LODWORD(STACK[0x16B4]) = STACK[0x1174];
  LODWORD(STACK[0x16D4]) = STACK[0x115C];
  LODWORD(STACK[0x16E0]) = STACK[0x113C];
  STACK[0x1C60] = STACK[0x1150];
  STACK[0x1C78] = STACK[0x1148];
  STACK[0x1620] = STACK[0x1140];
  LODWORD(STACK[0x16E4]) = STACK[0x10FC];
  STACK[0x1C80] = STACK[0x1130];
  LODWORD(STACK[0x16E8]) = v55;
  v56 = v53 + v54;
  v57 = LODWORD(STACK[0x16E8]);
  v58 = v56 + 957;
  v59 = STACK[0x1C80];
  v92 = STACK[0x16E4];
  v90 = STACK[0x1C78];
  v91 = STACK[0x1620];
  v89 = STACK[0x1C60];
  v88 = STACK[0x16E0];
  v87 = STACK[0x16D4];
  v86 = STACK[0x16B4];
  v85 = STACK[0x1C50];
  v84 = STACK[0x169C];
  v83 = STACK[0x1C48];
  LODWORD(a39) = STACK[0x168C];
  v60 = STACK[0x1C38];
  v61 = STACK[0x1C30];
  v62 = STACK[0x15C0];
  v63 = STACK[0x1C20];
  v64 = STACK[0x1688];
  v65 = STACK[0x1C10];
  v66 = STACK[0x1C08];
  a32(*a31, STACK[0x18A8], LODWORD(STACK[0x1E58]));
  STACK[0x1C88] = v66;
  STACK[0x1C90] = v65;
  LODWORD(STACK[0x16EC]) = v64;
  STACK[0x1C98] = v63;
  STACK[0x1668] = v62;
  STACK[0x1CA0] = v61;
  STACK[0x1CA8] = v60;
  LODWORD(STACK[0x1734]) = a39;
  STACK[0x1CC0] = v83;
  LODWORD(STACK[0x1744]) = v84;
  STACK[0x1CC8] = v85;
  LODWORD(STACK[0x175C]) = v86;
  LODWORD(STACK[0x177C]) = v87;
  LODWORD(STACK[0x178C]) = v88;
  STACK[0x1CD8] = v89;
  STACK[0x1CE8] = v90;
  STACK[0x16C8] = v91;
  LODWORD(STACK[0x1790]) = v92;
  STACK[0x1CF8] = v59;
  LODWORD(STACK[0x1794]) = v57;
  STACK[0xB00] = v59;
  LODWORD(STACK[0x97C]) = STACK[0x1790];
  STACK[0xB28] = STACK[0x16C8];
  STACK[0xB10] = STACK[0x1CE8];
  STACK[0xB30] = STACK[0x1CD8];
  LODWORD(STACK[0x994]) = STACK[0x178C];
  LODWORD(STACK[0x9B4]) = STACK[0x177C];
  LODWORD(STACK[0x9C4]) = STACK[0x175C];
  STACK[0xB38] = STACK[0x1CC8];
  LODWORD(STACK[0x9DC]) = STACK[0x1744];
  STACK[0xB60] = STACK[0x1CC0];
  LODWORD(STACK[0x9E0]) = STACK[0x1734];
  v67 = STACK[0x1CA8];
  STACK[0xB68] = STACK[0x1CA8];
  v68 = STACK[0x1CA0];
  STACK[0xB78] = STACK[0x1CA0];
  v69 = STACK[0x1668];
  STACK[0xB40] = STACK[0x1668];
  v70 = STACK[0x1C98];
  STACK[0xB90] = STACK[0x1C98];
  v71 = STACK[0x16EC];
  LODWORD(STACK[0x9E4]) = STACK[0x16EC];
  v72 = STACK[0x1C90];
  STACK[0xB98] = STACK[0x1C90];
  v73 = STACK[0x1C88];
  STACK[0xBA0] = STACK[0x1C88];
  STACK[0x1E10] = v73;
  STACK[0x1E18] = v72;
  LODWORD(STACK[0x19D4]) = v71;
  STACK[0x1E20] = v70;
  STACK[0x1900] = v69;
  STACK[0x1E28] = v68;
  STACK[0x1E30] = v67;
  LODWORD(STACK[0x19FC]) = STACK[0x9E0];
  STACK[0x1E38] = STACK[0xB60];
  STACK[0x1E40] = STACK[0xB38];
  LODWORD(STACK[0x1A0C]) = STACK[0x9C4];
  LODWORD(STACK[0x1A10]) = STACK[0x9B4];
  LODWORD(STACK[0x1A14]) = STACK[0x994];
  STACK[0x1E48] = STACK[0xB30];
  STACK[0x11E8] = STACK[0xB10];
  STACK[0x1958] = STACK[0xB28];
  LODWORD(STACK[0x1A58]) = STACK[0x97C];
  STACK[0x11F8] = STACK[0xB00];
  v74 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, void (*)(_QWORD, unint64_t, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a53 + 8 * ((15 * ((_DWORD)v57 != 101372955)) ^ v58)) - (((v58 - 750) | 0x83u) + 1568) + 2023);
  LODWORD(STACK[0x1A5C]) = v57;
  return v74(v57, v75, v76, v77, v78, v79, v80, v81, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v83);
}

uint64_t sub_19320EBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void (*a50)(_QWORD),uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  int v85;
  int v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t (*v94)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v99;
  int v100;

  v63 = (_QWORD *)STACK[0x1150];
  a50(*(_QWORD *)STACK[0x1150]);
  v64 = STACK[0x1130];
  *v63 = STACK[0x1130];
  v65 = STACK[0x1148];
  v66 = STACK[0x1140];
  *(_DWORD *)STACK[0x1148] = STACK[0x1140];
  STACK[0x368] = STACK[0x11A8];
  STACK[0x378] = STACK[0x11A0];
  HIDWORD(a57) = STACK[0x11B4];
  STACK[0x380] = STACK[0x1188];
  STACK[0x430] = STACK[0x1190];
  STACK[0x390] = STACK[0x1180];
  STACK[0x398] = STACK[0x1178];
  LODWORD(v99) = STACK[0x11B0];
  STACK[0x3B0] = STACK[0x1168];
  HIDWORD(v99) = STACK[0x119C];
  STACK[0x3C8] = STACK[0x1160];
  HIDWORD(a62) = STACK[0x1174];
  v100 = STACK[0x115C];
  LODWORD(STACK[0x204]) = STACK[0x113C];
  STACK[0x3D0] = STACK[0x1150];
  STACK[0x3E8] = v65;
  STACK[0x470] = v66;
  v67 = STACK[0x10FC];
  LODWORD(STACK[0x210]) = STACK[0x10FC];
  STACK[0x3F0] = v64;
  LODWORD(STACK[0x214]) = v67;
  v68 = STACK[0x214];
  v69 = STACK[0x3F0];
  LODWORD(v65) = STACK[0x210];
  v70 = STACK[0x470];
  v71 = STACK[0x3E8];
  v72 = STACK[0x3D0];
  v73 = STACK[0x204];
  v74 = STACK[0x3C8];
  v75 = STACK[0x3B0];
  v76 = STACK[0x398];
  v77 = STACK[0x390];
  v78 = STACK[0x430];
  v79 = STACK[0x380];
  v80 = STACK[0x378];
  STACK[0x3F8] = STACK[0x368];
  STACK[0x408] = v80;
  LODWORD(STACK[0x218]) = HIDWORD(a57);
  STACK[0x410] = v79;
  STACK[0x4C0] = v78;
  STACK[0x420] = v77;
  STACK[0x428] = v76;
  LODWORD(STACK[0x21C]) = v99;
  STACK[0x440] = v75;
  LODWORD(STACK[0x254]) = HIDWORD(v99);
  STACK[0x458] = v74;
  LODWORD(STACK[0x26C]) = HIDWORD(a62);
  LODWORD(STACK[0x28C]) = v100;
  LODWORD(STACK[0x29C]) = v73;
  STACK[0x460] = v72;
  STACK[0x478] = v71;
  STACK[0x4F0] = v70;
  LODWORD(STACK[0x2A0]) = v65;
  STACK[0x480] = v69;
  LODWORD(STACK[0x2A4]) = v68;
  LODWORD(v69) = STACK[0x2A4];
  v81 = STACK[0x480];
  LODWORD(v65) = STACK[0x2A0];
  v82 = STACK[0x4F0];
  v83 = STACK[0x478];
  v84 = STACK[0x460];
  v85 = STACK[0x29C];
  v86 = STACK[0x28C];
  LODWORD(v74) = STACK[0x26C];
  v87 = STACK[0x458];
  v88 = LODWORD(STACK[0x254]);
  v89 = STACK[0x440];
  v90 = LODWORD(STACK[0x21C]);
  v91 = STACK[0x428];
  v92 = STACK[0x420];
  v93 = STACK[0x4C0];
  v94 = (uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x410];
  v95 = LODWORD(STACK[0x218]);
  v96 = STACK[0x408];
  v97 = STACK[0x3F8];
  STACK[0x1AB0] = STACK[0x3F8];
  STACK[0x1AB8] = v96;
  LODWORD(STACK[0x1494]) = v95;
  STACK[0x1AC8] = (unint64_t)v94;
  STACK[0x13C8] = v93;
  STACK[0x1AD0] = v92;
  STACK[0x1AD8] = v91;
  LODWORD(STACK[0x14A4]) = v90;
  STACK[0x1AE0] = v89;
  LODWORD(STACK[0x14BC]) = v88;
  STACK[0x1AE8] = v87;
  LODWORD(STACK[0x14DC]) = v86;
  LODWORD(STACK[0x14EC]) = v85;
  STACK[0x1AF8] = v84;
  STACK[0x1B08] = v83;
  STACK[0x1428] = v82;
  LODWORD(STACK[0x14F0]) = v65;
  STACK[0x1B18] = v81;
  LODWORD(STACK[0x14F4]) = v69;
  STACK[0x1B98] = v97;
  STACK[0x1BA0] = v96;
  STACK[0x1BB0] = (unint64_t)v94;
  STACK[0x1518] = v93;
  STACK[0x1BB8] = v92;
  STACK[0x1BC8] = v91;
  LODWORD(STACK[0x15E4]) = v90;
  STACK[0x1BE0] = v89;
  LODWORD(STACK[0x15F4]) = v88;
  STACK[0x1BE8] = v87;
  LODWORD(STACK[0x160C]) = v74;
  LODWORD(STACK[0x162C]) = v86;
  LODWORD(STACK[0x163C]) = v85;
  STACK[0x1BF0] = v84;
  STACK[0x1BF8] = v83;
  STACK[0x1578] = v82;
  LODWORD(STACK[0x1640]) = v65;
  STACK[0x1C00] = v81;
  LODWORD(STACK[0x1644]) = v69;
  LODWORD(STACK[0x1C2C]) = v95;
  STACK[0x230] = v93;
  STACK[0x208] = v92;
  STACK[0x220] = v91;
  LODWORD(STACK[0x1C44]) = v90;
  STACK[0x228] = v89;
  LODWORD(STACK[0x1C5C]) = v88;
  STACK[0x238] = v87;
  LODWORD(STACK[0x1C6C]) = v74;
  LODWORD(STACK[0x1C70]) = v86;
  LODWORD(STACK[0x1C74]) = v85;
  STACK[0x240] = v84;
  STACK[0x248] = v83;
  STACK[0x280] = v82;
  LODWORD(STACK[0x1CB4]) = v65;
  STACK[0x258] = v81;
  LODWORD(STACK[0x1CB8]) = v69;
  return v94(v87, v88, v89, v90, v91, v92, v93, v95, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           v99,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_19320ECA4()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t (*v7)(void);

  STACK[0x18C0] = STACK[0xE78];
  STACK[0x18D0] = STACK[0xE70];
  *(_DWORD *)(v3 - 252) = STACK[0xE14];
  STACK[0x18E0] = STACK[0xE58];
  *(_QWORD *)(v3 - 248) = STACK[0xE60];
  STACK[0x18E8] = STACK[0xE48];
  STACK[0x18F0] = STACK[0xE38];
  v4 = STACK[0xE0C];
  STACK[0x18F8] = STACK[0xE30];
  v5 = STACK[0xDEC];
  *(_DWORD *)(v3 - 236) = v4;
  *(_DWORD *)(v3 - 232) = v5;
  STACK[0x1908] = STACK[0xE18];
  v6 = STACK[0xDD4];
  *(_DWORD *)(v3 - 228) = STACK[0xDE8];
  *(_DWORD *)(v3 - 224) = v6;
  *(_DWORD *)(v3 - 220) = STACK[0xDAC];
  STACK[0x1910] = STACK[0xE00];
  STACK[0x1918] = STACK[0xDF8];
  *(_QWORD *)(v3 - 216) = STACK[0xE28];
  *(_DWORD *)(v3 - 204) = STACK[0xD7C];
  LOBYTE(v4) = (v1 - v0 - 97) ^ LOBYTE(STACK[0xE13]);
  STACK[0x1928] = STACK[0xDF0];
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((38 * ((v4 & 1) == 0)) ^ (v1 - 2141527448))) - 4);
  *(_DWORD *)(v3 - 200) = STACK[0xE24];
  return v7();
}

void sub_19320ED7C()
{
  int v0;

  LODWORD(STACK[0x1BAC]) = STACK[0xE14];
  STACK[0x1290] = STACK[0xE60];
  LODWORD(STACK[0x1BC4]) = STACK[0xDEC];
  LODWORD(STACK[0x1BD4]) = STACK[0xDE8];
  LODWORD(STACK[0x1BD8]) = STACK[0xDD4];
  LODWORD(STACK[0x1BDC]) = STACK[0xDAC];
  LODWORD(STACK[0x1C18]) = STACK[0xD7C];
  LODWORD(STACK[0x1C1C]) = v0;
  JUMPOUT(0x19320F36CLL);
}

uint64_t sub_19320F4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  BOOL v70;
  int v71;
  int v72;
  _BOOL4 v73;

  v67 = STACK[0xF00];
  v68 = (v63 ^ (v66 + 122) ^ LODWORD(STACK[0xEEC]) ^ 0x2DEEE15730529399)
      + ((2 * LODWORD(STACK[0xEEC])) & 0x9FEF7DFC)
      - 0x2DEEE156B3ACABD8;
  v69 = (*(unsigned int *)(STACK[0xF00] + 8) ^ 0x7FEFAF966D77F3FFLL)
      - 0x7FEFAF95D12CE0DDLL
      + ((2 * *(_DWORD *)(STACK[0xF00] + 8)) & 0xDAEFE7FE);
  LODWORD(STACK[0x1C2C]) = STACK[0xED4];
  v70 = v68 > v69;
  v71 = (v68 < 0x9C4B1322) ^ (v69 < 0x9C4B1322);
  v72 = v70;
  STACK[0x230] = STACK[0xF08];
  if (v71)
    v73 = v68 < 0x9C4B1322;
  else
    v73 = v72;
  STACK[0x208] = STACK[0xEE0];
  STACK[0x220] = STACK[0xED8];
  LODWORD(STACK[0x1C44]) = STACK[0xE44];
  STACK[0x228] = STACK[0xF18];
  LODWORD(STACK[0x1C5C]) = STACK[0xEB4];
  STACK[0x238] = v67;
  LODWORD(STACK[0x1C6C]) = STACK[0xEA4];
  LODWORD(STACK[0x1C70]) = STACK[0xE84];
  LODWORD(STACK[0x1C74]) = STACK[0xE6C];
  STACK[0x240] = STACK[0xEC8];
  STACK[0x248] = STACK[0xEC0];
  STACK[0x280] = STACK[0xEB8];
  LODWORD(STACK[0x1CB4]) = STACK[0xE54];
  STACK[0x258] = STACK[0xEA8];
  LODWORD(STACK[0x1CB8]) = v65;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * ((1778 * v73) ^ v63)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_19320F628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int v58;

  v50 = *(_QWORD *)(v49 + 8 * v48);
  v51 = (v48 + 144421595);
  STACK[0x2F8] = STACK[0xF20];
  STACK[0x300] = STACK[0xEF8];
  LODWORD(STACK[0x11F4]) = STACK[0xED4];
  STACK[0x350] = (v51 ^ 0xFFFFFFFFF7644C61) + v50;
  STACK[0x3A0] = STACK[0xF08];
  STACK[0x318] = STACK[0xEE0];
  STACK[0x320] = STACK[0xED8];
  LODWORD(STACK[0x120C]) = STACK[0xE44];
  STACK[0x338] = STACK[0xF18];
  LODWORD(STACK[0x1210]) = STACK[0xEB4];
  v52 = STACK[0xF00];
  STACK[0x340] = STACK[0xF00];
  LODWORD(STACK[0x1214]) = STACK[0xEA4];
  LODWORD(STACK[0x1224]) = STACK[0xE84];
  v58 = STACK[0xE6C];
  STACK[0x358] = STACK[0xEA8];
  STACK[0x360] = v52;
  LODWORD(v52) = v51 - 144419153;
  STACK[0xFC0] = STACK[0x360];
  STACK[0xFC8] = STACK[0x358];
  LODWORD(STACK[0xFA4]) = v58;
  LODWORD(STACK[0xFB8]) = STACK[0x1224];
  LODWORD(STACK[0xFBC]) = STACK[0x1214];
  STACK[0xFD8] = STACK[0x340];
  LODWORD(STACK[0xFD4]) = STACK[0x1210];
  STACK[0xFE8] = STACK[0x338];
  LODWORD(STACK[0xFE4]) = STACK[0x120C];
  STACK[0xFF0] = STACK[0x320];
  STACK[0xFF8] = STACK[0x318];
  STACK[0x1000] = STACK[0x3A0];
  v53 = STACK[0x350];
  LODWORD(STACK[0x100C]) = STACK[0x11F4];
  STACK[0x1010] = STACK[0x300];
  STACK[0x1018] = STACK[0x2F8];
  STACK[0x1028] = v53;
  v54 = *(unsigned int *)(STACK[0xFC0] + 8);
  STACK[0x1030] = STACK[0xFC0] + 8;
  v55 = v54 - 4 + ((4 << ((v51 - 81) ^ 0x45)) & 0x14B676DEELL);
  STACK[0x1038] = v55;
  LOBYTE(STACK[0x1047]) = v55 < 0xFFFFFFFF;
  STACK[0x3E0] = v54;
  v56 = STACK[0x3E0];
  STACK[0x1048] = 2 * STACK[0x3E0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((495 * (v56 > (unint64_t)((193 * (v52 ^ 0xA42) - 132) | 0x84C) + 2147480497)) ^ v52)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_19320FC48@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t (*v12)(void);

  v4 = STACK[0x14F4];
  STACK[0x910] = STACK[0x1B18];
  LODWORD(STACK[0x7B4]) = STACK[0x14F0];
  STACK[0xA90] = STACK[0x1428];
  STACK[0x928] = STACK[0x1B08];
  STACK[0x940] = STACK[0x1AF8];
  LODWORD(STACK[0x7DC]) = STACK[0x14EC];
  LODWORD(STACK[0x7F4]) = STACK[0x14DC];
  STACK[0x948] = STACK[0x1AE8];
  LODWORD(STACK[0x814]) = STACK[0x14BC];
  STACK[0x960] = STACK[0x1AE0];
  LODWORD(STACK[0x824]) = STACK[0x14A4];
  v5 = STACK[0x1AD8];
  STACK[0x968] = STACK[0x1AD8];
  v6 = STACK[0x1AD0];
  STACK[0x970] = STACK[0x1AD0];
  v7 = STACK[0x13C8];
  STACK[0xAC0] = STACK[0x13C8];
  v8 = STACK[0x1AC8];
  STACK[0x980] = STACK[0x1AC8];
  v9 = STACK[0x1494];
  LODWORD(STACK[0x828]) = STACK[0x1494];
  v10 = STACK[0x1AB8];
  STACK[0x988] = STACK[0x1AB8];
  v11 = STACK[0x1AB0];
  STACK[0x998] = STACK[0x1AB0];
  STACK[0x1B20] = v11;
  STACK[0x1B30] = v10;
  LODWORD(STACK[0x1538]) = v9;
  STACK[0x1B48] = v8;
  STACK[0x1470] = v7;
  STACK[0x1B50] = v6;
  STACK[0x1B58] = v5;
  LODWORD(STACK[0x153C]) = STACK[0x824];
  STACK[0x1B60] = STACK[0x960];
  LODWORD(STACK[0x154C]) = STACK[0x814];
  STACK[0x1B68] = STACK[0x948];
  LODWORD(STACK[0x1564]) = v4;
  LODWORD(STACK[0x1584]) = STACK[0x7F4];
  LODWORD(STACK[0x1594]) = STACK[0x7DC];
  STACK[0x1B70] = STACK[0x940];
  STACK[0x1B78] = STACK[0x928];
  STACK[0x14D0] = STACK[0xA90];
  LODWORD(STACK[0x1598]) = STACK[0x7B4];
  STACK[0x1B88] = STACK[0x910];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                      + 8 * ((2135 * (v4 == v3 + ((v1 + a1 - 108) | 0x180) - 397)) ^ (v1 + a1 + 588)))
                          - 8);
  LODWORD(STACK[0x159C]) = v4;
  return v12();
}

uint64_t sub_19320FD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;

  v31 = (v28 - 1347744782) & 0x5054F785;
  v32 = (unint64_t *)STACK[0x970];
  v33 = STACK[0x970];
  v34 = *(_QWORD *)STACK[0x970];
  v35 = (_DWORD *)STACK[0x968];
  v36 = STACK[0x968];
  v37 = ((2 * *(_DWORD *)STACK[0x968]) & 0xFF97FF7A) + (v31 ^ 0xFFCBFAB8 ^ *(_DWORD *)STACK[0x968]) + 3407939;
  *(_BYTE *)(v34 + v37) = STACK[0xB54];
  *(_BYTE *)(v34 + v37 + 1) = STACK[0xB55];
  *(_BYTE *)(v34 + v37 + 2) = STACK[0xB56];
  *(_BYTE *)(v34 + v37 + 3) = STACK[0xB57];
  v38 = (*v35 + 4);
  *v35 = v38;
  v39 = STACK[0xAC0];
  v40 = STACK[0xAC0];
  v41 = (STACK[0xAC0] ^ 0xB845F2A0611B8561) & (2 * (STACK[0xAC0] & 0xA249F2C271930470)) ^ STACK[0xAC0] & 0xA249F2C271930470;
  v42 = ((2 * (STACK[0xAC0] ^ 0xB8D5F3A4423F8561)) ^ 0x353802CC67590222) & (STACK[0xAC0] ^ 0xB8D5F3A4423F8561) ^ (2 * (STACK[0xAC0] ^ 0xB8D5F3A4423F8561)) & 0x1A9C016633AC8110;
  v43 = v42 ^ 0xA84012210A48111;
  v44 = (v42 ^ 0x1008000002080000) & (4 * v41) ^ v41;
  STACK[0x650] = STACK[0x998];
  v45 = ((4 * v43) ^ 0x6A700598CEB20444) & v43 ^ (4 * v43) & 0x1A9C016633AC8110;
  STACK[0x668] = STACK[0x988];
  LODWORD(STACK[0x4AC]) = STACK[0x828];
  STACK[0x670] = STACK[0x980];
  STACK[0x6B8] = v40;
  STACK[0x678] = v33;
  v46 = *v32;
  v47 = *(_QWORD *)(v29 + 8 * v28);
  STACK[0x690] = v36;
  v48 = ((16 * (v45 ^ 0x108C0066310C8111)) ^ 0xA9C016633AC81110) & (v45 ^ 0x108C0066310C8111) ^ (16 * (v45 ^ 0x108C0066310C8111)) & 0x1A9C016633AC8110;
  LODWORD(STACK[0x4CC]) = STACK[0x824];
  STACK[0x698] = STACK[0x960];
  STACK[0x6E8] = v47;
  LODWORD(STACK[0x4DC]) = STACK[0x814];
  STACK[0x6B0] = STACK[0x948];
  LODWORD(STACK[0x4EC]) = v30;
  v49 = (((v48 ^ 0x121C010401248001) << 8) ^ 0x9C016633AC811100) & (v48 ^ 0x121C010401248001) ^ ((v48 ^ 0x121C010401248001) << 8) & 0x1A9C016633AC8100;
  LODWORD(STACK[0x514]) = STACK[0x7F4];
  LODWORD(STACK[0x52C]) = STACK[0x7DC];
  STACK[0x6C8] = STACK[0x940];
  STACK[0x6D8] = STACK[0x928];
  STACK[0x728] = STACK[0xA90];
  LODWORD(STACK[0x54C]) = STACK[0x7B4];
  STACK[0x6E0] = STACK[0x910];
  STACK[0x6F8] = v46;
  STACK[0x778] = (v38 ^ 0xBB3BEEFDA4F7FBFFLL) + 0x4A9D63DD29497D7FLL + ((2 * v38) & 0x149EFF7FELL);
  STACK[0x710] = a28;
  STACK[0x7B8] = v39 ^ (2
                      * (v49 & 0x124010000000000 ^ (v48 ^ 0x880006232880100) & (((v45 ^ 0xA10010002A00000) & (16 * v44) ^ v44) << 8) ^ (v45 ^ 0xA10010002A00000) & (16 * v44) ^ v44 ^ (v49 ^ 0x1800002220800000) & (((v48 ^ 0x880006232880100) & (((v45 ^ 0xA10010002A00000) & (16 * v44) ^ v44) << 8) ^ (v45 ^ 0xA10010002A00000) & (16 * v44) ^ v44) << 16))) ^ 0x5963838EF4B88C15;
  STACK[0x1110] = STACK[0x7B8];
  STACK[0x1118] = STACK[0x710];
  STACK[0x1120] = STACK[0x778];
  STACK[0x1128] = STACK[0x6F8];
  STACK[0x1130] = STACK[0x6E0];
  LODWORD(STACK[0x10FC]) = STACK[0x54C];
  STACK[0x1140] = STACK[0x728];
  STACK[0x1148] = STACK[0x6D8];
  STACK[0x1150] = STACK[0x6C8];
  LODWORD(STACK[0x113C]) = STACK[0x52C];
  LODWORD(STACK[0x115C]) = STACK[0x514];
  LODWORD(STACK[0x1174]) = STACK[0x4EC];
  STACK[0x1160] = STACK[0x6B0];
  LODWORD(STACK[0x119C]) = STACK[0x4DC];
  STACK[0x1168] = STACK[0x698];
  LODWORD(STACK[0x11B0]) = STACK[0x4CC];
  STACK[0x1178] = STACK[0x690];
  STACK[0x1180] = STACK[0x678];
  STACK[0x1190] = STACK[0x6B8];
  STACK[0x1188] = STACK[0x670];
  LODWORD(STACK[0x11B4]) = STACK[0x4AC];
  STACK[0x11A0] = STACK[0x668];
  v50 = STACK[0x1120] + STACK[0x1128];
  STACK[0x11A8] = STACK[0x650];
  LODWORD(v50) = STACK[0x1118] > v50 - 0x5D952DACE41797ELL;
  STACK[0x11B8] = STACK[0x6E8];
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (int)((v50 * ((153 * (v31 ^ 0x51C) + 1386958589) & 0xAD54B2D9 ^ 0x10C0)) | v31)))(0x767A3EBDF7FA0F3DLL);
}

uint64_t sub_1932100C0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t (*v12)(void);

  v4 = STACK[0x159C];
  STACK[0x9A0] = STACK[0x1B88];
  LODWORD(STACK[0x82C]) = STACK[0x1598];
  STACK[0xAE8] = STACK[0x14D0];
  STACK[0x9B8] = STACK[0x1B78];
  STACK[0x9D0] = STACK[0x1B70];
  LODWORD(STACK[0x844]) = STACK[0x1594];
  LODWORD(STACK[0x86C]) = STACK[0x1584];
  LODWORD(STACK[0x884]) = STACK[0x1564];
  STACK[0x9E8] = STACK[0x1B68];
  LODWORD(STACK[0x894]) = STACK[0x154C];
  STACK[0xA00] = STACK[0x1B60];
  LODWORD(STACK[0x8A8]) = STACK[0x153C];
  v5 = STACK[0x1B58];
  STACK[0xA08] = STACK[0x1B58];
  v6 = STACK[0x1B50];
  STACK[0xA10] = STACK[0x1B50];
  v7 = STACK[0x1470];
  STACK[0xB08] = STACK[0x1470];
  v8 = STACK[0x1B48];
  STACK[0xA20] = STACK[0x1B48];
  v9 = STACK[0x1538];
  LODWORD(STACK[0x8AC]) = STACK[0x1538];
  v10 = STACK[0x1B30];
  STACK[0xA30] = STACK[0x1B30];
  v11 = STACK[0x1B20];
  STACK[0xA40] = STACK[0x1B20];
  STACK[0x1E10] = v11;
  STACK[0x1E18] = v10;
  LODWORD(STACK[0x19D4]) = v9;
  STACK[0x1E20] = v8;
  STACK[0x1900] = v7;
  STACK[0x1E28] = v6;
  STACK[0x1E30] = v5;
  LODWORD(STACK[0x19FC]) = STACK[0x8A8];
  STACK[0x1E38] = STACK[0xA00];
  STACK[0x1E40] = STACK[0x9E8];
  LODWORD(STACK[0x1A0C]) = STACK[0x884];
  LODWORD(STACK[0x1A10]) = STACK[0x86C];
  LODWORD(STACK[0x1A14]) = STACK[0x844];
  STACK[0x1E48] = STACK[0x9D0];
  STACK[0x11E8] = STACK[0x9B8];
  STACK[0x1958] = STACK[0xAE8];
  LODWORD(STACK[0x1A58]) = STACK[0x82C];
  STACK[0x11F8] = STACK[0x9A0];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                      + 8
                                      * ((a1 - 2040158540) ^ (v3 - 1017) ^ ((((v4 - (a1 - 2040158540)) | (a1 - 2040158540 - v4)) >= 0)
                                                                          * ((((v1 + a1 + 1680) | 0xE2) + 1448) ^ 0x1B7))))
                          - 4);
  LODWORD(STACK[0x1A5C]) = v4;
  return v12();
}

uint64_t sub_19321022C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int *a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t))
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;

  v29 = STACK[0x1898];
  STACK[0xA48] = STACK[0x1898];
  STACK[0x18A8] = 0;
  LODWORD(STACK[0x1E58]) = 0;
  a25(a22);
  v30 = *a23;
  v31 = *(_QWORD *)v29;
  v32 = *(_DWORD *)(v29 + 12);
  STACK[0xA60] = v29 + 12;
  v33 = STACK[0x718];
  v34 = STACK[0x730];
  v35 = 597255653 * ((-462625259 - ((v28 - 144) | 0xE46CE615) + ((v28 - 144) | 0x1B9319EA)) ^ 0x12986673);
  *(_DWORD *)(v28 - 140) = v35 + v32 + 1581691396 - ((v32 << (-93 * (v26 ^ 0x96) - 46)) & 0xBC8D6408);
  *(_QWORD *)(v28 - 120) = v31;
  *(_DWORD *)(v28 - 128) = (v30 ^ 0x35FDFFBC)
                         - v35
                         + ((((v26 + 1642602828) & 0x9E17DD7F) + 1811673881) & (2 * v30))
                         - 283383812;
  *(_DWORD *)(v28 - 112) = v35 + v26 - 235;
  *(_QWORD *)(v28 - 136) = v33;
  *(_QWORD *)(v28 - 104) = v34;
  a24(v28 - 144);
  LODWORD(v29) = *(_DWORD *)(v28 - 144);
  v36 = a26(a22);
  LODWORD(STACK[0x15E0]) = v29;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((7507 * ((_DWORD)v29 == 663729217)) ^ v26)) - 4))(v36);
}

uint64_t sub_193210394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t), unsigned int *a18, uint64_t a19, uint64_t (*a20)(_QWORD, uint64_t, uint64_t))
{
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = *(_QWORD *)(v23 + 8 * v20)
      - 486723911 * ((v21 - 2 * (v21 & 0xBB9F342414FA3741) - 0x4460CBDBEB05C8BFLL) ^ 0x8921EFB5A43057DBLL);
  *(_QWORD *)(v25 - 144) = v24;
  *(_QWORD *)(v25 - 136) = v26 + ((v20 + 2529) | 0x83u) - 3483;
  *(_DWORD *)(v25 - 128) = v20 - 71465943 - 486723911 * ((v21 - 2 * (v21 & 0x14FA3741) + 351942465) ^ 0xA43057DB);
  a17(v25 - 144);
  v27 = a20(*a18, a19, v22);
  v28 = ((2 * v27) & 0xEC77EC7E) + (v27 ^ 0xF63BF63F);
  v29 = 486723911 * ((-2 - ((~v21 | 0x63F0AB10771027EBLL) + (v21 | 0x9C0F54EF88EFD814))) ^ 0x514E7081C7DA4771);
  v30 = *(_QWORD *)(v23 + 8 * (v20 & 0xBFC93EA)) - v29 - 8;
  *(_QWORD *)(v25 - 144) = v24;
  *(_QWORD *)(v25 - 136) = v30;
  *(_DWORD *)(v25 - 128) = v20 - 71465943 - v29;
  v31 = ((uint64_t (*)(uint64_t))a17)(v25 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * (v20 ^ 0xF62 ^ ((2 * (v28 != -163842497)) | (16 * (v28 != -163842497)))))
                                          - 4))(v31);
}

uint64_t sub_19321050C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49)
{
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  int v55;
  unint64_t v56;
  int v57;
  int v58;
  uint64_t v59;

  v51 = (a49 - 2356) | 0x800;
  a25(a22);
  v52 = *(_QWORD *)STACK[0xA48];
  v53 = *(_DWORD *)STACK[0xA60];
  v54 = *a23 ^ 0xBDFBE7F9;
  v55 = (v51 ^ 0x7BF7C3AD) & (2 * *a23);
  v56 = STACK[0x718];
  v57 = 597255653
      * ((((v50 - 144) ^ 0xE95481B8 | 0x9115FD0E)
        - ((v50 - 144) ^ 0xE95481B8)
        + (((v50 - 144) ^ 0xE95481B8) & 0x6EEA02F0)) ^ 0x714A032F);
  *(_QWORD *)(v50 - 104) = STACK[0x730];
  *(_QWORD *)(v50 - 120) = v52;
  *(_DWORD *)(v50 - 112) = v57 + a49 - 235;
  *(_QWORD *)(v50 - 136) = v56;
  *(_DWORD *)(v50 - 128) = v54 - v57 + 1730019263 + v55;
  *(_DWORD *)(v50 - 140) = v57 + v53 + 1581691396 - ((2 * v53) & 0xBC8D6408);
  a24(v50 - 144);
  v58 = *(_DWORD *)(v50 - 144);
  v59 = a26(a22);
  LODWORD(STACK[0x15E0]) = v58;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v49 + 8
                                                            * ((399 * (LODWORD(STACK[0x15E0]) == 395293758)) ^ v51))
                                          - (v51 ^ 0xD5E ^ v51 ^ 0x986u ^ 0x4DCLL)))(v59);
}

void sub_193210694(uint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0x18A0] = 0;
  STACK[0x1A30] = *(_QWORD *)(v1 + 8 * a1) + (((_DWORD)a1 + 335) | 0x105u) - 861;
  STACK[0x1268] = STACK[0xA40];
  STACK[0x1270] = STACK[0xA30];
  LODWORD(STACK[0x1B14]) = STACK[0x8AC];
  STACK[0x1280] = STACK[0xA20];
  STACK[0x1228] = STACK[0xB08];
  STACK[0x1288] = STACK[0xA10];
  STACK[0x1298] = STACK[0xA08];
  LODWORD(STACK[0x1B2C]) = STACK[0x8A8];
  STACK[0x12A0] = STACK[0xA00];
  LODWORD(STACK[0x1B3C]) = STACK[0x894];
  STACK[0x12A8] = STACK[0x9E8];
  LODWORD(STACK[0x1B40]) = STACK[0x884];
  LODWORD(STACK[0x1B44]) = STACK[0x86C];
  LODWORD(STACK[0x1B80]) = STACK[0x844];
  STACK[0x12B0] = STACK[0x9D0];
  STACK[0x12B8] = STACK[0x9B8];
  STACK[0x1278] = STACK[0xAE8];
  LODWORD(STACK[0x1B84]) = STACK[0x82C];
  STACK[0x12C0] = STACK[0x9A0];
  JUMPOUT(0x193210764);
}

uint64_t sub_1932108A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t))
{
  int v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v30 = (_QWORD *)STACK[0xE90];
  *v30 = 0;
  v30[1] = 0;
  STACK[0xE98] = (unint64_t)(v30 + 1);
  v31 = a27(4096, 2241923698);
  *(_QWORD *)STACK[0xE90] = v31;
  return (*(uint64_t (**)(void))(v29 + 8 * (((v31 == 0) * (v27 ^ (v28 + 666) ^ 0x7FA52E77 ^ (v27 - 562))) ^ v27)))();
}

uint64_t sub_193210908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t (*a50)(unint64_t))
{
  int v50;
  uint64_t v51;
  uint64_t v52;

  v52 = a50(STACK[0xE90]);
  *(_BYTE *)(v51 + 3077) = 0;
  LODWORD(STACK[0x1B94]) = v50;
  LODWORD(STACK[0xE24]) = STACK[0x1B94];
  LOBYTE(STACK[0xE13]) = *(_BYTE *)(v51 + 3077);
  *(_QWORD *)STACK[0xDE0] = 0;
  return ((uint64_t (*)(uint64_t))STACK[0xE88])(v52);
}

uint64_t sub_193210A28()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t (*v4)(void);

  STACK[0x1C08] = STACK[0xE78];
  STACK[0x1C10] = STACK[0xE70];
  LODWORD(STACK[0x1688]) = STACK[0xE14];
  STACK[0x1C20] = STACK[0xE58];
  STACK[0x15C0] = STACK[0xE60];
  STACK[0x1C30] = STACK[0xE48];
  STACK[0x1C38] = STACK[0xE38];
  LODWORD(STACK[0x168C]) = STACK[0xE0C];
  STACK[0x1C48] = STACK[0xE30];
  LODWORD(STACK[0x169C]) = STACK[0xDEC];
  STACK[0x1C50] = STACK[0xE18];
  LODWORD(STACK[0x16B4]) = STACK[0xDE8];
  LODWORD(STACK[0x16D4]) = STACK[0xDD4];
  LODWORD(STACK[0x16E0]) = STACK[0xDAC];
  STACK[0x1C60] = STACK[0xE00];
  STACK[0x1C78] = STACK[0xDF8];
  STACK[0x1620] = STACK[0xE28];
  LODWORD(STACK[0x16E4]) = STACK[0xD7C];
  STACK[0x1C80] = STACK[0xDF0];
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2886 * LOBYTE(STACK[0xE13])) ^ (v0 + v1 - 32)))
                         - 103 * (v1 ^ (v3 + 1))
                         + 305);
  LODWORD(STACK[0x16E8]) = STACK[0xE24];
  return v4();
}

uint64_t sub_193210B00@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  _BOOL4 v7;
  uint64_t (*v8)(void);

  v5 = STACK[0x1E58];
  LODWORD(STACK[0x8C4]) = STACK[0x1E58];
  v6 = STACK[0x18A0];
  STACK[0xA68] = STACK[0x18A0];
  v7 = v5 > *(_DWORD *)(v6 + 8);
  STACK[0x1B98] = STACK[0xE78];
  STACK[0x1BA0] = STACK[0xE70];
  STACK[0x1BB0] = STACK[0xE58];
  STACK[0x1518] = STACK[0xE60];
  STACK[0x1BB8] = STACK[0xE48];
  STACK[0x1BC8] = STACK[0xE38];
  LODWORD(STACK[0x15E4]) = STACK[0xE0C];
  STACK[0x1BE0] = STACK[0xE30];
  LODWORD(STACK[0x15F4]) = STACK[0xDEC];
  STACK[0x1BE8] = STACK[0xE18];
  LODWORD(STACK[0x160C]) = STACK[0xDE8];
  LODWORD(STACK[0x162C]) = STACK[0xDD4];
  LODWORD(STACK[0x163C]) = STACK[0xDAC];
  STACK[0x1BF0] = STACK[0xE00];
  STACK[0x1BF8] = STACK[0xDF8];
  STACK[0x1578] = STACK[0xE28];
  LODWORD(STACK[0x1640]) = STACK[0xD7C];
  STACK[0x1C00] = STACK[0xDF0];
  v8 = (uint64_t (*)(void))(v4 - (a1 ^ (v1 + 1548)) + *(_QWORD *)(v2 + 8 * ((3540 * v7) ^ a1)));
  LODWORD(STACK[0x1644]) = v3;
  return v8();
}

void sub_193210BD4(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8 * a1);
  STACK[0x2F8] = STACK[0xE78];
  STACK[0x300] = STACK[0xE70];
  LODWORD(STACK[0x11F4]) = STACK[0xE14];
  STACK[0x350] = v2 + (a1 ^ 0x89BB2A0u) - 144421791 + 6;
  STACK[0x3A0] = STACK[0xE60];
  STACK[0x318] = STACK[0xE48];
  STACK[0x320] = STACK[0xE38];
  LODWORD(STACK[0x120C]) = STACK[0xE0C];
  STACK[0x338] = STACK[0xE30];
  LODWORD(STACK[0x1210]) = STACK[0xDEC];
  STACK[0x340] = STACK[0xE18];
  LODWORD(STACK[0x1214]) = STACK[0xDE8];
  LODWORD(STACK[0x1224]) = STACK[0xDD4];
  STACK[0x358] = STACK[0xDF0];
  STACK[0x360] = STACK[0xA68];
  JUMPOUT(0x19320FB38);
}

uint64_t sub_193210C80()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  _BOOL4 v6;

  LODWORD(STACK[0x8EC]) = STACK[0x1644];
  v5 = v1 + v0 + 2725;
  STACK[0xA78] = STACK[0x1C00];
  LODWORD(STACK[0x904]) = STACK[0x1640];
  STACK[0xB18] = STACK[0x1578];
  STACK[0xA80] = STACK[0x1BF8];
  STACK[0xA98] = STACK[0x1BF0];
  LODWORD(STACK[0x924]) = STACK[0x163C];
  LODWORD(STACK[0x934]) = STACK[0x162C];
  LODWORD(STACK[0x938]) = STACK[0x160C];
  STACK[0xAA0] = STACK[0x1BE8];
  LODWORD(STACK[0x93C]) = STACK[0x15F4];
  STACK[0xAA8] = STACK[0x1BE0];
  LODWORD(STACK[0x954]) = STACK[0x15E4];
  STACK[0xAB8] = STACK[0x1BC8];
  STACK[0xAC8] = STACK[0x1BB8];
  STACK[0xB20] = STACK[0x1518];
  STACK[0xAD8] = STACK[0x1BB0];
  STACK[0xAE0] = STACK[0x1BA0];
  v6 = LODWORD(STACK[0x8EC]) != v4 + (v0 ^ (v2 + 1784)) + 309 - 398;
  STACK[0xAF8] = STACK[0x1B98];
  return (*(uint64_t (**)(void))(v3 + 8 * ((127 * v6) ^ v5)))();
}

uint64_t sub_193210D54@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  unint64_t v23;

  v3 = STACK[0x18A0];
  v4 = *(_QWORD *)(v2 + 8 * a1);
  STACK[0x530] = STACK[0x18A0];
  v5 = ((v1 + a1 + 1736) ^ 0xFFFFFFFF805AD29BLL) + v4;
  v6 = STACK[0xA78];
  STACK[0x538] = STACK[0xA78];
  v7 = STACK[0x904];
  LODWORD(STACK[0x38C]) = STACK[0x904];
  v8 = STACK[0xB18];
  STACK[0x608] = STACK[0xB18];
  v9 = STACK[0xA80];
  STACK[0x550] = STACK[0xA80];
  v10 = STACK[0xA98];
  STACK[0x568] = STACK[0xA98];
  v11 = STACK[0x924];
  LODWORD(STACK[0x3AC]) = STACK[0x924];
  v12 = STACK[0x934];
  LODWORD(STACK[0x3BC]) = STACK[0x934];
  v13 = STACK[0x938];
  LODWORD(STACK[0x3C0]) = STACK[0x938];
  v14 = STACK[0xAA0];
  STACK[0x580] = STACK[0xAA0];
  v15 = STACK[0x93C];
  LODWORD(STACK[0x3C4]) = STACK[0x93C];
  v16 = STACK[0xAA8];
  STACK[0x588] = STACK[0xAA8];
  v17 = STACK[0x954];
  LODWORD(STACK[0x3DC]) = STACK[0x954];
  v18 = STACK[0xAB8];
  STACK[0x590] = STACK[0xAB8];
  v19 = STACK[0xAC8];
  STACK[0x5A0] = STACK[0xAC8];
  v20 = STACK[0xB20];
  STACK[0x638] = STACK[0xB20];
  v21 = STACK[0xAD8];
  STACK[0x5A8] = STACK[0xAD8];
  v22 = STACK[0x8EC];
  LODWORD(STACK[0x404]) = STACK[0x8EC];
  v23 = STACK[0xAF8];
  STACK[0x5B8] = STACK[0xAF8];
  STACK[0x520] = v5;
  STACK[0x5C0] = v5;
  STACK[0x5D8] = v6;
  LODWORD(STACK[0x41C]) = v7;
  STACK[0x658] = v8;
  STACK[0x5F0] = v9;
  STACK[0x5F8] = v10;
  LODWORD(STACK[0x43C]) = v11;
  LODWORD(STACK[0x44C]) = v12;
  LODWORD(STACK[0x450]) = v13;
  STACK[0x610] = v14;
  LODWORD(STACK[0x454]) = v15;
  STACK[0x618] = v16;
  LODWORD(STACK[0x46C]) = v17;
  STACK[0x620] = v18;
  STACK[0x630] = v19;
  STACK[0x6A8] = v20;
  STACK[0x640] = v21;
  LODWORD(STACK[0x494]) = v22;
  STACK[0x648] = v23;
  return (*(uint64_t (**)(void))(v2 + 8 * ((3656 * (v3 != 0)) ^ (a1 + 1112))))();
}

uint64_t sub_193210ECC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = 734 * (a1 ^ 0x5B);
  v3 = (v2 + 22);
  STACK[0x1078] = STACK[0x5B8];
  LODWORD(STACK[0x106C]) = STACK[0x404];
  STACK[0x1080] = STACK[0x5A8];
  STACK[0x1090] = STACK[0x638];
  STACK[0x1098] = STACK[0x5A0];
  STACK[0x10A0] = STACK[0x590];
  LODWORD(STACK[0x1070]) = STACK[0x3DC];
  STACK[0x10B0] = STACK[0x588];
  LODWORD(STACK[0x108C]) = STACK[0x3C4];
  STACK[0x10B8] = STACK[0x580];
  LODWORD(STACK[0x10AC]) = STACK[0x3C0];
  LODWORD(STACK[0x10C4]) = STACK[0x3BC];
  LODWORD(STACK[0x10EC]) = STACK[0x3AC];
  STACK[0x10C8] = STACK[0x568];
  STACK[0x10D0] = STACK[0x550];
  STACK[0x10E0] = STACK[0x608];
  LODWORD(STACK[0x10F8]) = STACK[0x38C];
  STACK[0x10D8] = STACK[0x538];
  v4 = *(_QWORD *)STACK[0x530];
  STACK[0x10F0] = STACK[0x530];
  v5 = v2 ^ 0x10Du;
  v6 = *(_QWORD *)(v1 + 8 * ((3475 * (v4 == 0)) ^ v2));
  STACK[0x1100] = STACK[0x520];
  STACK[0x1108] = v4;
  return ((uint64_t (*)(void))(v6 - (v3 + (v5 ^ 0xFFFFFFFFFFFFFE87))))();
}

uint64_t sub_193210EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = v3 + 887;
  v7 = *(_QWORD *)STACK[0x18A0];
  v8 = STACK[0x18A8];
  v9 = LODWORD(STACK[0x1E58]) - 0x4D58EB37AD4779BLL - ((2 * LODWORD(STACK[0x1E58])) & 0x10A5710CALL);
  v10 = *(_QWORD *)(v4 + 8 * v3) - 12;
  STACK[0x650] = STACK[0xAF8];
  STACK[0x668] = STACK[0xAE0];
  LODWORD(STACK[0x4AC]) = v5;
  STACK[0x670] = STACK[0xAD8];
  STACK[0x6B8] = STACK[0xB20];
  STACK[0x678] = STACK[0xAC8];
  STACK[0x690] = STACK[0xAB8];
  LODWORD(STACK[0x4CC]) = STACK[0x954];
  STACK[0x698] = STACK[0xAA8];
  STACK[0x6E8] = v10;
  LODWORD(STACK[0x4DC]) = STACK[0x93C];
  STACK[0x6B0] = STACK[0xAA0];
  LODWORD(STACK[0x4EC]) = STACK[0x938];
  LODWORD(STACK[0x514]) = STACK[0x934];
  LODWORD(STACK[0x52C]) = STACK[0x924];
  STACK[0x6C8] = STACK[0xA98];
  STACK[0x6D8] = STACK[0xA80];
  STACK[0x728] = STACK[0xB18];
  LODWORD(STACK[0x54C]) = STACK[0x904];
  STACK[0x6E0] = STACK[0xA78];
  STACK[0x6F8] = v7;
  STACK[0x778] = 0x5D952DACE41797ELL;
  STACK[0x710] = v8;
  STACK[0x7B8] = v9;
  STACK[0x1110] = STACK[0x7B8];
  STACK[0x1118] = STACK[0x710];
  STACK[0x1120] = STACK[0x778];
  STACK[0x1128] = STACK[0x6F8];
  STACK[0x1130] = STACK[0x6E0];
  LODWORD(STACK[0x10FC]) = STACK[0x54C];
  STACK[0x1140] = STACK[0x728];
  STACK[0x1148] = STACK[0x6D8];
  STACK[0x1150] = STACK[0x6C8];
  LODWORD(STACK[0x113C]) = STACK[0x52C];
  LODWORD(STACK[0x115C]) = STACK[0x514];
  LODWORD(STACK[0x1174]) = STACK[0x4EC];
  STACK[0x1160] = STACK[0x6B0];
  LODWORD(STACK[0x119C]) = STACK[0x4DC];
  STACK[0x1168] = STACK[0x698];
  LODWORD(STACK[0x11B0]) = STACK[0x4CC];
  STACK[0x1178] = STACK[0x690];
  STACK[0x1180] = STACK[0x678];
  STACK[0x1190] = STACK[0x6B8];
  STACK[0x1188] = STACK[0x670];
  LODWORD(STACK[0x11B4]) = STACK[0x4AC];
  STACK[0x11A0] = STACK[0x668];
  v11 = STACK[0x1120] + STACK[0x1128];
  STACK[0x11A8] = STACK[0x650];
  LODWORD(v11) = STACK[0x1118] > v11 - 0x5D952DACE41797ELL;
  STACK[0x11B8] = STACK[0x6E8];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * (int)((v11
                                                                                       * ((153 * (v6 ^ 0x51C)
                                                                                         + 1386958589) & 0xAD54B2D9 ^ 0x10C0)) | v6)))(0x767A3EBDF7FA0F3DLL, a2, a3, 0xC0391580E16, 3713000404);
}

uint64_t sub_193211260()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;

  STACK[0x1D00] = STACK[0xBA0];
  v5 = 22 * (v0 ^ 0x1A5);
  STACK[0x1D08] = STACK[0xB98];
  LODWORD(STACK[0x17D8]) = v0;
  LODWORD(STACK[0x17DC]) = STACK[0x9E4];
  STACK[0x1D10] = STACK[0xB90];
  STACK[0x1710] = STACK[0xB40];
  STACK[0x1D18] = STACK[0xB78];
  STACK[0x1D20] = STACK[0xB68];
  LODWORD(STACK[0x17EC]) = STACK[0x9E0];
  STACK[0x1D28] = STACK[0xB60];
  LODWORD(STACK[0x1814]) = STACK[0x9DC];
  STACK[0x1D38] = STACK[0xB38];
  LODWORD(STACK[0x1824]) = STACK[0x9C4];
  LODWORD(STACK[0x1830]) = STACK[0x9B4];
  LODWORD(STACK[0x1834]) = STACK[0x994];
  STACK[0x1D48] = STACK[0xB30];
  STACK[0x1D50] = STACK[0xB10];
  STACK[0x1770] = STACK[0xB28];
  LODWORD(STACK[0x1878]) = STACK[0x97C];
  v6 = STACK[0xB00];
  STACK[0x1D58] = STACK[0xB00];
  STACK[0x1D60] = v4 - 256;
  STACK[0xBA8] = v6;
  LODWORD(STACK[0x9F4]) = STACK[0x1878];
  STACK[0xB48] = STACK[0x1770];
  STACK[0xBB8] = STACK[0x1D50];
  STACK[0xBC0] = STACK[0x1D48];
  LODWORD(STACK[0xA1C]) = STACK[0x1834];
  LODWORD(STACK[0xA3C]) = STACK[0x1830];
  LODWORD(STACK[0xA5C]) = STACK[0x1824];
  STACK[0xBC8] = STACK[0x1D38];
  LODWORD(STACK[0xA70]) = STACK[0x1814];
  STACK[0xBE0] = STACK[0x1D28];
  LODWORD(STACK[0xA74]) = STACK[0x17EC];
  STACK[0xBE8] = STACK[0x1D20];
  v7 = STACK[0x1D08];
  STACK[0xBF8] = STACK[0x1D18];
  STACK[0xB70] = STACK[0x1710];
  STACK[0xC00] = STACK[0x1D10];
  LODWORD(STACK[0xA8C]) = STACK[0x17DC];
  STACK[0xC10] = v7;
  STACK[0xC20] = STACK[0x1D00];
  LOBYTE(STACK[0xD2F]) = v7 == 0;
  STACK[0xC38] = v7 + 12;
  STACK[0xC40] = v7 + 8;
  LODWORD(STACK[0x187C]) = STACK[0x17D8];
  STACK[0x1D68] = v4 - 256;
  return ((uint64_t (*)(unint64_t, _QWORD, _QWORD))(*(_QWORD *)(v3
                                                                               + 8
                                                                               * (((v5 ^ (v2 - 563) ^ 0x7FA536D7)
                                                                                 * (v7 != 0)) ^ (v1
                                                                                               + (v5 ^ (v2 - 563))
                                                                                               + 2626)))
                                                                   - 12))(STACK[0x1E48], LODWORD(STACK[0x1A14]), LODWORD(STACK[0x1A10]));
}

uint64_t sub_1932114EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int *a29,_DWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  unint64_t v54;
  unint64_t v55;
  _BOOL4 v56;
  _BOOL4 v57;

  v54 = ((v53 + 1979971148) | 0x9A12C63u)
      + (unint64_t)((2 * *a30) & 0xFAD5F7BE)
      + 0x209194447B16DB01
      + (*a30 ^ (v53 - 383597497) & 0x16DD3BBBu ^ 0xDF6E6BBB7D6AF164);
  v55 = (*a29 ^ 0xF657AFE4FFFF76AFLL) + 0x9A8501B78278D94 + ((2 * *a29) & 0x1FFFEED5ELL);
  v56 = v54 < 0x78270443;
  v57 = v54 > v55;
  if (v55 < 0x78270443 != v56)
    v57 = v56;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a53 + 8 * (v57 | (2 * v57) | v53)) - 12))(a1, a2, a3, v55, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_193211688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30)
{
  _QWORD *v30;
  int v31;
  int v32;
  _DWORD *v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;

  v34 = (v32 + 92338568) | 0x7A242924;
  v35 = ((2 * v31) & 0xFB1DDCE2) + (v31 ^ 0x7D8EEE71) - 2106519153;
  v36 = *(unsigned __int8 *)(*v30 + v35);
  v37 = (v34 + (v36 << 24) - (v36 << 25) + 2136658585) | (*(unsigned __int8 *)(*v30 + v35 + 1) << 16);
  v38 = *(unsigned __int8 *)(*v30 + v35 + 2);
  v39 = *(unsigned __int8 *)(*v30 + v35 + 3);
  v40 = v37 | (((v38 + 4420934 - ((2 * v38) & 0x4C)) << 8) - 0x2000) ^ 0x43752600;
  v41 = (v40 ^ 0x5A6FFF) & ((v39 - 1636428685 - ((2 * v39) & 0xE6)) ^ 0x82C7F04) ^ v40 & 0x69A59400;
  v42 = (v41 & 0x324D5387 ^ 0x12494387) + (v41 ^ 0x28A41408) - ((v41 ^ 0x28A41408) & 0x324D5387);
  *v33 = (((v42 ^ 0x1FBDF440) - 789305555) ^ ((v42 ^ 0x7B8AD7DE) - 1262287693) ^ ((v42 ^ 0x81840F66) + 1322114059))
       - 619719546;
  *a30 += 4;
}

uint64_t sub_193211824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,unsigned int a38,int a39,unsigned int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,uint64_t a55)
{
  int v55;
  int v56;

  STACK[0x11E8] = a36;
  STACK[0x11F8] = a34;
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a55
                                                            + 8
                                                            * ((((a54 ^ 0x7FA52439) - 360) * v55) ^ (v56 + a54 + 2350))))(a37, a38, a40);
}

uint64_t sub_193211880()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5 = *(_DWORD *)(v4 - 256) == 101372955;
  v6 = LODWORD(STACK[0xA3C]);
  v7 = LODWORD(STACK[0xA1C]);
  v8 = STACK[0xBC0];
  STACK[0x11E8] = STACK[0xBB8];
  STACK[0x11F8] = STACK[0xBA8];
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (((((v0 ^ v5) & 1) == 0)
                                                                         * (v1 + v2 + v0 + 55 - 628 - 71)) ^ (v0 + 55))))(v8, v7, v6);
}

void sub_1932118F0()
{
  JUMPOUT(0x1932114B4);
}

uint64_t sub_19321192C@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unint64_t a4@<X4>, unint64_t a5@<X5>, unint64_t a6@<X6>, int a7@<W7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,uint64_t a54)
{
  unint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  int v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t (*v69)(void);

  STACK[0x540] = v68;
  STACK[0x488] = v67;
  STACK[0x1058] = v67;
  STACK[0x1060] = v68;
  LODWORD(STACK[0x2B4]) = v57;
  LODWORD(STACK[0x1020]) = v55;
  LODWORD(STACK[0x1024]) = v57;
  STACK[0x1E10] = v66;
  STACK[0x1E18] = v62;
  LODWORD(STACK[0x19D4]) = v64;
  STACK[0x1E20] = v54;
  STACK[0x1900] = v63;
  STACK[0x1E28] = a5;
  STACK[0x1E30] = a6;
  LODWORD(STACK[0x19FC]) = a7;
  STACK[0x1E38] = v59;
  STACK[0x1E40] = a4;
  LODWORD(STACK[0x1A0C]) = v65;
  LODWORD(STACK[0x1A10]) = a3;
  LODWORD(STACK[0x1A14]) = a2;
  STACK[0x1E48] = a1;
  STACK[0x1958] = v61;
  LODWORD(STACK[0x1A58]) = v58;
  LODWORD(STACK[0x1A5C]) = a8;
  STACK[0x1D70] = STACK[0xC20];
  STACK[0x1D78] = STACK[0xC10];
  LODWORD(STACK[0x188C]) = STACK[0xA8C];
  STACK[0x1D80] = STACK[0xC00];
  STACK[0x17B8] = STACK[0xB70];
  STACK[0x1D88] = STACK[0xBF8];
  STACK[0x1D90] = STACK[0xBE8];
  LODWORD(STACK[0x18BC]) = STACK[0xA74];
  STACK[0x1D98] = STACK[0xBE0];
  LODWORD(STACK[0x18C8]) = STACK[0xA70];
  STACK[0x1DA0] = STACK[0xBC8];
  LODWORD(STACK[0x18CC]) = STACK[0xA5C];
  LODWORD(STACK[0x18DC]) = STACK[0xA3C];
  LODWORD(STACK[0x1920]) = STACK[0xA1C];
  STACK[0x1DA8] = STACK[0xBC0];
  STACK[0x1DB0] = STACK[0xBB8];
  STACK[0x1808] = STACK[0xB48];
  LODWORD(STACK[0x1924]) = STACK[0x9F4];
  STACK[0x1DB8] = STACK[0xBA8];
  v69 = (uint64_t (*)(void))(*(_QWORD *)(a54 + 8 * ((v60 + a53 + 1419) ^ (71 * v56)))
                          - ((28 * (a53 ^ 0x7FA52D50u)) ^ 0x608));
  LODWORD(STACK[0x1934]) = STACK[0x1024];
  return v69();
}

uint64_t sub_193211A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_QWORD *a21)
{
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t (*v25)(void);

  *a21 = (v21 ^ (v22 + 1309)) + LODWORD(STACK[0x1E5C]) + 2052062846;
  STACK[0x1D70] = STACK[0xC20];
  STACK[0x1D78] = STACK[0xC10];
  LODWORD(STACK[0x188C]) = STACK[0xA8C];
  STACK[0x1D80] = STACK[0xC00];
  STACK[0x17B8] = STACK[0xB70];
  STACK[0x1D88] = STACK[0xBF8];
  STACK[0x1D90] = STACK[0xBE8];
  LODWORD(STACK[0x18BC]) = STACK[0xA74];
  STACK[0x1D98] = STACK[0xBE0];
  LODWORD(STACK[0x18C8]) = STACK[0xA70];
  STACK[0x1DA0] = STACK[0xBC8];
  LODWORD(STACK[0x18CC]) = STACK[0xA5C];
  LODWORD(STACK[0x18DC]) = STACK[0xA3C];
  LODWORD(STACK[0x1920]) = STACK[0xA1C];
  STACK[0x1DA8] = STACK[0xBC0];
  STACK[0x1DB0] = STACK[0xBB8];
  STACK[0x1808] = STACK[0xB48];
  LODWORD(STACK[0x1924]) = STACK[0x9F4];
  STACK[0x1DB8] = STACK[0xBA8];
  v25 = (uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((3158 * LOBYTE(STACK[0x687])) ^ v21)) - 12);
  LODWORD(STACK[0x1934]) = v24;
  return v25();
}

void sub_193211B68()
{
  int v0;

  LODWORD(STACK[0x1E50]) = v0;
  JUMPOUT(0x1932113DCLL);
}

uint64_t sub_193211B88@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,unint64_t a37,unint64_t a38,unint64_t a39,int a40,unint64_t a41,unint64_t a42,unint64_t a43,unint64_t a44,int a45)
{
  unint64_t v45;
  int v46;
  int v47;
  char v48;
  int v49;
  int v50;
  unint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t (*v65)(void);

  v57 = v46 - 371;
  STACK[0x540] = v56;
  STACK[0x488] = v55;
  STACK[0x1058] = v55;
  STACK[0x1060] = v56;
  LOBYTE(STACK[0x12CA]) = v48;
  LODWORD(STACK[0x2B4]) = v49;
  LODWORD(STACK[0x1020]) = v47;
  LODWORD(STACK[0x1024]) = v49;
  LOBYTE(STACK[0x1077]) = v48;
  STACK[0x1E10] = a37;
  STACK[0x1E18] = v45;
  LODWORD(STACK[0x19D4]) = a45;
  STACK[0x1E20] = a44;
  STACK[0x1900] = a43;
  STACK[0x1E28] = a42;
  STACK[0x1E30] = a41;
  LODWORD(STACK[0x19FC]) = a40;
  STACK[0x1E38] = a39;
  STACK[0x1E40] = a38;
  LODWORD(STACK[0x1A0C]) = v53;
  LODWORD(STACK[0x1A10]) = a3;
  LODWORD(STACK[0x1A14]) = a2;
  STACK[0x1E48] = a1;
  STACK[0x1958] = v51;
  LODWORD(STACK[0x1A58]) = v50;
  LODWORD(STACK[0x1A5C]) = a4;
  LODWORD(STACK[0xC1C]) = STACK[0x1A5C];
  STACK[0xCD8] = STACK[0x11F8];
  LODWORD(STACK[0xC2C]) = STACK[0x1A58];
  STACK[0xD48] = STACK[0x1958];
  STACK[0xCE8] = STACK[0x11E8];
  STACK[0xCF0] = STACK[0x1E48];
  LODWORD(STACK[0xC4C]) = STACK[0x1A14];
  LODWORD(STACK[0xC64]) = STACK[0x1A10];
  LODWORD(STACK[0xC98]) = STACK[0x1A0C];
  STACK[0xCF8] = STACK[0x1E40];
  STACK[0xD10] = STACK[0x1E38];
  LODWORD(STACK[0xC9C]) = STACK[0x19FC];
  v58 = STACK[0x1E30];
  STACK[0xD18] = STACK[0x1E30];
  v59 = STACK[0x1E28];
  STACK[0xD30] = STACK[0x1E28];
  v60 = STACK[0x1900];
  STACK[0xD58] = STACK[0x1900];
  v61 = STACK[0x1E20];
  STACK[0xD38] = STACK[0x1E20];
  v62 = STACK[0x19D4];
  LODWORD(STACK[0xCAC]) = STACK[0x19D4];
  v63 = STACK[0x1E18];
  STACK[0xD50] = STACK[0x1E18];
  v64 = STACK[0x1E10];
  STACK[0xD60] = STACK[0x1E10];
  STACK[0x1200] = v64;
  LODWORD(STACK[0x1A6C]) = v62;
  STACK[0x1218] = v61;
  STACK[0x19A0] = v60;
  STACK[0x1230] = v59;
  STACK[0x1238] = v58;
  LODWORD(STACK[0x1A84]) = STACK[0xC9C];
  STACK[0x1240] = STACK[0xD10];
  LODWORD(STACK[0x1A9C]) = STACK[0xC1C];
  STACK[0x1248] = STACK[0xCF8];
  LODWORD(STACK[0x1AAC]) = STACK[0xC98];
  LODWORD(STACK[0x1AC0]) = STACK[0xC64];
  LODWORD(STACK[0x1AC4]) = STACK[0xC4C];
  STACK[0x1250] = STACK[0xCF0];
  STACK[0x1258] = STACK[0xCE8];
  STACK[0x19F0] = STACK[0xD48];
  LODWORD(STACK[0x1AF4]) = STACK[0xC2C];
  v65 = (uint64_t (*)(void))(*(_QWORD *)(v54 + 8 * ((4027 * (v63 != 0)) ^ v57))
                          - ((v57 ^ (v52 + 1094) ^ 0xFFFFFFFF805AD2CDLL)
                           + 30 * (v57 ^ 0x7E8u)));
  STACK[0x1260] = STACK[0xCD8];
  return v65();
}

void sub_193213010()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;

  STACK[0x498] = STACK[0xD60];
  LODWORD(STACK[0x2DC]) = v0;
  LODWORD(STACK[0x2F4]) = STACK[0xCAC];
  STACK[0x4A0] = STACK[0xD38];
  STACK[0x578] = STACK[0xD58];
  STACK[0x4B0] = STACK[0xD30];
  STACK[0x4B8] = STACK[0xD18];
  LODWORD(STACK[0x314]) = STACK[0xC9C];
  STACK[0x4D0] = STACK[0xD10];
  LODWORD(STACK[0x32C]) = STACK[0xC1C];
  STACK[0x4E0] = STACK[0xCF8];
  LODWORD(STACK[0x330]) = STACK[0xC98];
  LODWORD(STACK[0x334]) = STACK[0xC64];
  LODWORD(STACK[0x34C]) = STACK[0xC4C];
  STACK[0x4F8] = STACK[0xCF0];
  STACK[0x500] = STACK[0xCE8];
  STACK[0x5C8] = STACK[0xD48];
  LODWORD(STACK[0x374]) = STACK[0xC2C];
  STACK[0x508] = STACK[0xCD8];
  v2 = STACK[0xD50];
  STACK[0x518] = STACK[0xD50];
  v3 = STACK[0x508];
  v4 = STACK[0x374];
  v5 = STACK[0x5C8];
  v6 = STACK[0x500];
  v7 = STACK[0x4F8];
  v8 = STACK[0x34C];
  v9 = STACK[0x334];
  v10 = STACK[0x330];
  v11 = STACK[0x4E0];
  v12 = STACK[0x32C];
  v13 = STACK[0x4D0];
  v14 = STACK[0x314];
  v15 = STACK[0x4B8];
  v16 = STACK[0x4B0];
  v17 = STACK[0x578];
  v18 = STACK[0x4A0];
  v19 = STACK[0x2F4];
  v20 = STACK[0x498];
  STACK[0x520] = *(_QWORD *)(v1 + 8 * SLODWORD(STACK[0x2DC])) - 12;
  STACK[0x530] = v2;
  STACK[0x538] = v3;
  LODWORD(STACK[0x38C]) = v4;
  STACK[0x608] = v5;
  STACK[0x550] = v6;
  STACK[0x568] = v7;
  LODWORD(STACK[0x3AC]) = v8;
  LODWORD(STACK[0x3BC]) = v9;
  LODWORD(STACK[0x3C0]) = v10;
  STACK[0x580] = v11;
  LODWORD(STACK[0x3C4]) = v12;
  STACK[0x588] = v13;
  LODWORD(STACK[0x3DC]) = v14;
  STACK[0x590] = v15;
  STACK[0x5A0] = v16;
  STACK[0x638] = v17;
  STACK[0x5A8] = v18;
  LODWORD(STACK[0x404]) = v19;
  STACK[0x5B8] = v20;
  JUMPOUT(0x193213450);
}

uint64_t sub_193213220@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t (*v5)(void);

  STACK[0xD68] = STACK[0x1260];
  LODWORD(STACK[0xCCC]) = STACK[0x1AF4];
  STACK[0xD80] = STACK[0x19F0];
  STACK[0xD70] = STACK[0x1258];
  STACK[0xD88] = STACK[0x1250];
  LODWORD(STACK[0xCE4]) = STACK[0x1AC4];
  LODWORD(STACK[0xD0C]) = STACK[0x1AC0];
  LODWORD(STACK[0xD24]) = STACK[0x1AAC];
  STACK[0xD90] = STACK[0x1248];
  v3 = STACK[0x1A9C];
  STACK[0xD98] = STACK[0x1240];
  LODWORD(STACK[0xD40]) = STACK[0x1A84];
  STACK[0xDA0] = STACK[0x1238];
  STACK[0xDB0] = STACK[0x1230];
  STACK[0xDC8] = STACK[0x19A0];
  STACK[0xDB8] = STACK[0x1218];
  LODWORD(STACK[0xD44]) = STACK[0x1A6C];
  STACK[0xDC0] = STACK[0x1200];
  v4 = STACK[0x1898];
  STACK[0xDD8] = STACK[0x1898];
  LODWORD(STACK[0xD28]) = v3;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v4 != 0) * (v1 + a1 + 1012)) ^ (v1 + a1 - 21))) - 12);
  LODWORD(STACK[0x1B04]) = v3;
  return v5();
}

void sub_1932132E4()
{
  int v0;

  STACK[0x498] = STACK[0xDC0];
  LODWORD(STACK[0x2DC]) = v0;
  LODWORD(STACK[0x2F4]) = STACK[0xD44];
  STACK[0x4A0] = STACK[0xDB8];
  STACK[0x578] = STACK[0xDC8];
  STACK[0x4B0] = STACK[0xDB0];
  STACK[0x4B8] = STACK[0xDA0];
  LODWORD(STACK[0x314]) = STACK[0xD40];
  STACK[0x4D0] = STACK[0xD98];
  LODWORD(STACK[0x32C]) = STACK[0xD28];
  STACK[0x4E0] = STACK[0xD90];
  LODWORD(STACK[0x330]) = STACK[0xD24];
  LODWORD(STACK[0x334]) = STACK[0xD0C];
  LODWORD(STACK[0x34C]) = STACK[0xCE4];
  STACK[0x4F8] = STACK[0xD88];
  STACK[0x500] = STACK[0xD70];
  STACK[0x5C8] = STACK[0xD80];
  LODWORD(STACK[0x374]) = STACK[0xCCC];
  STACK[0x508] = STACK[0xD68];
  JUMPOUT(0x193213388);
}

uint64_t sub_193213538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t (*a50)(unint64_t),uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a50(STACK[0x1108]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55 + 8 * ((3581 * (a54 == 4)) ^ v54))
                                          - ((((v54 - 338) | 0x31u) + 716) ^ 0x775)))(v56);
}

uint64_t sub_193213580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void (*a50)(void))
{
  _QWORD *v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  unint64_t v58;
  int v59;
  unint64_t v60;
  int v61;
  int v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  unint64_t v68;
  uint64_t (*v69)(void);

  v50 = (_QWORD *)STACK[0x10F0];
  *v50 = 0;
  v50[1] = 0;
  a50();
  STACK[0x5C0] = STACK[0x1100];
  STACK[0x5D8] = STACK[0x10D8];
  LODWORD(STACK[0x41C]) = STACK[0x10F8];
  STACK[0x658] = STACK[0x10E0];
  STACK[0x5F0] = STACK[0x10D0];
  STACK[0x5F8] = STACK[0x10C8];
  LODWORD(STACK[0x43C]) = STACK[0x10EC];
  LODWORD(STACK[0x44C]) = STACK[0x10C4];
  LODWORD(STACK[0x450]) = STACK[0x10AC];
  STACK[0x610] = STACK[0x10B8];
  LODWORD(STACK[0x454]) = STACK[0x108C];
  STACK[0x618] = STACK[0x10B0];
  LODWORD(STACK[0x46C]) = STACK[0x1070];
  STACK[0x620] = STACK[0x10A0];
  STACK[0x630] = STACK[0x1098];
  STACK[0x6A8] = STACK[0x1090];
  STACK[0x640] = STACK[0x1080];
  LODWORD(STACK[0x494]) = STACK[0x106C];
  STACK[0x648] = STACK[0x1078];
  v51 = STACK[0x648];
  v52 = STACK[0x494];
  v53 = STACK[0x640];
  v54 = STACK[0x6A8];
  v55 = STACK[0x630];
  v56 = STACK[0x620];
  v57 = STACK[0x46C];
  v58 = STACK[0x618];
  v59 = STACK[0x454];
  v60 = STACK[0x610];
  v61 = STACK[0x450];
  v62 = STACK[0x44C];
  v63 = STACK[0x43C];
  v64 = STACK[0x5F8];
  v65 = STACK[0x5F0];
  v66 = STACK[0x658];
  v67 = STACK[0x41C];
  v68 = STACK[0x5D8];
  v69 = (uint64_t (*)(void))STACK[0x5C0];
  STACK[0x1C08] = STACK[0x648];
  STACK[0x1C10] = 0;
  LODWORD(STACK[0x1688]) = v52;
  STACK[0x1C20] = v53;
  STACK[0x15C0] = v54;
  STACK[0x1C30] = v55;
  STACK[0x1C38] = v56;
  LODWORD(STACK[0x168C]) = v57;
  STACK[0x1C48] = v58;
  LODWORD(STACK[0x169C]) = v59;
  STACK[0x1C50] = v60;
  LODWORD(STACK[0x16B4]) = v61;
  LODWORD(STACK[0x16D4]) = v62;
  LODWORD(STACK[0x16E0]) = v63;
  STACK[0x1C60] = v64;
  STACK[0x1C78] = v65;
  STACK[0x1620] = v66;
  LODWORD(STACK[0x16E4]) = v67;
  STACK[0x1C80] = v68;
  LODWORD(STACK[0x16E8]) = v52;
  STACK[0x1200] = v51;
  LODWORD(STACK[0x1A6C]) = v52;
  STACK[0x1218] = v53;
  STACK[0x19A0] = v54;
  STACK[0x1230] = v55;
  STACK[0x1238] = v56;
  LODWORD(STACK[0x1A84]) = v57;
  STACK[0x1240] = v58;
  LODWORD(STACK[0x1A9C]) = v59;
  STACK[0x1248] = v60;
  LODWORD(STACK[0x1AAC]) = v61;
  LODWORD(STACK[0x1AC0]) = v62;
  LODWORD(STACK[0x1AC4]) = v63;
  STACK[0x1250] = v64;
  STACK[0x1258] = v65;
  STACK[0x19F0] = v66;
  LODWORD(STACK[0x1AF4]) = v67;
  STACK[0x1260] = v68;
  LODWORD(STACK[0x1B04]) = v59;
  return v69();
}

uint64_t sub_193213764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a69;
  unint64_t a70;
  unint64_t a71;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  uint64_t (*v81)(void);

  v76 = STACK[0x1CB8];
  STACK[0xF38] = STACK[0x258];
  LODWORD(STACK[0xF14]) = STACK[0x1CB4];
  STACK[0xF48] = STACK[0x280];
  STACK[0xF50] = STACK[0x248];
  STACK[0xF58] = STACK[0x240];
  LODWORD(STACK[0xF2C]) = STACK[0x1C74];
  LODWORD(STACK[0xF30]) = STACK[0x1C70];
  LODWORD(STACK[0xF34]) = STACK[0x1C6C];
  STACK[0xF68] = STACK[0x238];
  LODWORD(STACK[0xF44]) = STACK[0x1C5C];
  STACK[0xF70] = STACK[0x228];
  LODWORD(STACK[0xF64]) = STACK[0x1C44];
  v77 = STACK[0x220];
  STACK[0xF80] = STACK[0x220];
  v78 = STACK[0x208];
  STACK[0xF88] = STACK[0x208];
  v79 = STACK[0x230];
  STACK[0xF98] = STACK[0x230];
  STACK[0xF90] = a71;
  v80 = STACK[0x1C2C];
  LODWORD(STACK[0xF7C]) = STACK[0x1C2C];
  STACK[0xFA8] = a70;
  STACK[0xFB0] = a69;
  STACK[0x260] = a69;
  STACK[0x270] = a70;
  LODWORD(STACK[0x1CBC]) = v80;
  STACK[0x278] = a71;
  STACK[0x2B8] = v79;
  STACK[0x290] = v78;
  STACK[0x2A8] = v77;
  LODWORD(STACK[0x1CD4]) = STACK[0xF64];
  STACK[0x2C0] = STACK[0xF70];
  LODWORD(STACK[0x1CE4]) = STACK[0xF44];
  STACK[0x2C8] = STACK[0xF68];
  LODWORD(STACK[0x1CF0]) = STACK[0xF34];
  LODWORD(STACK[0x1CF4]) = STACK[0xF30];
  LODWORD(STACK[0x1D30]) = STACK[0xF2C];
  STACK[0x2D0] = STACK[0xF58];
  STACK[0x2E0] = STACK[0xF50];
  STACK[0x308] = STACK[0xF48];
  LODWORD(STACK[0x1D34]) = STACK[0xF14];
  STACK[0x2E8] = STACK[0xF38];
  v81 = (uint64_t (*)(void))(*(_QWORD *)(v74 + 8 * ((2398 * (v76 == v75)) ^ (v72 + v71 + 1367)))
                          - ((v71 - v73 - 337) ^ 0x5D8));
  LODWORD(STACK[0x1D44]) = v76;
  return v81();
}

uint64_t sub_1932138B4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t (*v22)(void);
  int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;

  v4 = STACK[0xF68];
  v5 = *(_QWORD *)STACK[0xF68];
  v6 = (_DWORD *)STACK[0xFB0];
  v7 = *(_DWORD *)STACK[0xFB0];
  v8 = v7 ^ 0x4E8FFD9D;
  v9 = ((a1 - v1 - 1367) ^ 0xE2BAD65D) & (2 * v7);
  v10 = STACK[0xF64];
  v11 = LODWORD(STACK[0xF64]) + 451170848 - ((2 * LODWORD(STACK[0xF64])) & 0x35C8A440);
  v12 = v9 + v8 - 1318059421;
  *(_BYTE *)(v5 + v12 + 1) = BYTE2(v11) ^ 0xE4;
  *(_BYTE *)(v5 + v12 + 2) = (((BYTE1(v11) ^ 0x52) - 2 * ((BYTE1(v11) ^ 0x52) & 7 ^ BYTE1(v11) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v5 + v12) = HIBYTE(v11) ^ 0x1A;
  *(_BYTE *)(v5 + v12 + 3) = v11 ^ 0x20;
  *v6 += 4;
  STACK[0x260] = (unint64_t)v6;
  STACK[0x270] = STACK[0xFA8];
  LODWORD(STACK[0x1CBC]) = STACK[0xF7C];
  STACK[0x278] = STACK[0xF90];
  STACK[0x2B8] = STACK[0xF98];
  STACK[0x290] = STACK[0xF88];
  STACK[0x2A8] = STACK[0xF80];
  LODWORD(STACK[0x1CD4]) = v10;
  STACK[0x2C0] = STACK[0xF70];
  LODWORD(STACK[0x1CE4]) = STACK[0xF44];
  STACK[0x2C8] = v4;
  LODWORD(STACK[0x1CF0]) = STACK[0xF34];
  LODWORD(STACK[0x1CF4]) = STACK[0xF30];
  LODWORD(STACK[0x1D30]) = STACK[0xF2C];
  STACK[0x2D0] = STACK[0xF58];
  STACK[0x2E0] = STACK[0xF50];
  STACK[0x308] = STACK[0xF48];
  LODWORD(STACK[0x1D34]) = STACK[0xF14];
  STACK[0x2E8] = STACK[0xF38];
  LODWORD(STACK[0x1D44]) = v2;
  LODWORD(v5) = STACK[0x1D44];
  v13 = STACK[0x2E8];
  LODWORD(v4) = STACK[0x1D34];
  v14 = STACK[0x308];
  v15 = STACK[0x2E0];
  v16 = STACK[0x2D0];
  v17 = STACK[0x1D30];
  v18 = STACK[0x1CF4];
  v19 = STACK[0x1CF0];
  v20 = STACK[0x2C8];
  v21 = STACK[0x1CE4];
  v22 = (uint64_t (*)(void))STACK[0x2C0];
  v23 = STACK[0x1CD4];
  v24 = STACK[0x2A8];
  v25 = STACK[0x290];
  v26 = STACK[0x2B8];
  v27 = STACK[0x278];
  v28 = STACK[0x1CBC];
  v29 = STACK[0x270];
  v30 = STACK[0x260];
  STACK[0x18C0] = STACK[0x260];
  STACK[0x18D0] = v29;
  *(_DWORD *)(v3 - 252) = v28;
  STACK[0x18E0] = v27;
  *(_QWORD *)(v3 - 248) = v26;
  STACK[0x18E8] = v25;
  STACK[0x18F0] = v24;
  *(_DWORD *)(v3 - 236) = v23;
  *(_DWORD *)(v3 - 232) = v21;
  STACK[0x18F8] = (unint64_t)v22;
  STACK[0x1908] = v20;
  *(_DWORD *)(v3 - 228) = v19;
  *(_DWORD *)(v3 - 224) = v18;
  *(_DWORD *)(v3 - 220) = v17;
  STACK[0x1910] = v16;
  STACK[0x1918] = v15;
  *(_QWORD *)(v3 - 216) = v14;
  *(_DWORD *)(v3 - 204) = v4;
  *(_DWORD *)(v3 - 200) = v5;
  STACK[0x1928] = v13;
  STACK[0x1938] = v30;
  STACK[0x1940] = v29;
  *(_DWORD *)(v3 - 196) = v28;
  STACK[0x1948] = v27;
  *(_QWORD *)(v3 - 192) = v26;
  STACK[0x1950] = v25;
  STACK[0x1968] = v24;
  *(_DWORD *)(v3 - 184) = v23;
  *(_DWORD *)(v3 - 180) = v21;
  STACK[0x1980] = (unint64_t)v22;
  STACK[0x1988] = v20;
  LODWORD(STACK[0x12D0]) = v19;
  LODWORD(STACK[0x12D4]) = v18;
  LODWORD(STACK[0x12E4]) = v17;
  STACK[0x1990] = v16;
  STACK[0x1998] = v15;
  *(_QWORD *)(v3 - 176) = v14;
  *(_QWORD *)(v3 - 168) = v26;
  LODWORD(STACK[0x12FC]) = v4;
  STACK[0x19A8] = v13;
  LODWORD(STACK[0x1340]) = v5;
  STACK[0x19B0] = v30;
  STACK[0x19B8] = v29;
  LODWORD(STACK[0x1344]) = v28;
  STACK[0x19C8] = v27;
  STACK[0x19D8] = v25;
  STACK[0x19E0] = v24;
  LODWORD(STACK[0x1354]) = v23;
  STACK[0x19E8] = (unint64_t)v22;
  LODWORD(STACK[0x136C]) = v21;
  STACK[0x1A00] = v20;
  LODWORD(STACK[0x138C]) = v19;
  LODWORD(STACK[0x139C]) = v18;
  LODWORD(STACK[0x13A0]) = v17;
  STACK[0x1A18] = v16;
  STACK[0x1A20] = v15;
  *(_QWORD *)(v3 - 160) = v14;
  LODWORD(STACK[0x13A4]) = v4;
  STACK[0x1A28] = v13;
  LODWORD(STACK[0x13E8]) = v5;
  STACK[0x1A38] = v30;
  STACK[0x1A40] = v29;
  LODWORD(STACK[0x13EC]) = v28;
  STACK[0x1A48] = v27;
  STACK[0x1320] = v26;
  STACK[0x1A50] = v25;
  STACK[0x1A60] = v24;
  LODWORD(STACK[0x13FC]) = v23;
  STACK[0x1A70] = (unint64_t)v22;
  LODWORD(STACK[0x1414]) = v21;
  STACK[0x1A78] = v20;
  LODWORD(STACK[0x1434]) = v19;
  LODWORD(STACK[0x1444]) = v18;
  LODWORD(STACK[0x1448]) = v17;
  STACK[0x1A88] = v16;
  STACK[0x1A90] = v15;
  STACK[0x1380] = v14;
  LODWORD(STACK[0x144C]) = v4;
  STACK[0x1AA0] = v13;
  LODWORD(STACK[0x1490]) = v5;
  STACK[0x1B20] = v30;
  STACK[0x1B30] = v29;
  LODWORD(STACK[0x1538]) = v28;
  STACK[0x1B48] = v27;
  STACK[0x1470] = v26;
  STACK[0x1B50] = v25;
  STACK[0x1B58] = v24;
  LODWORD(STACK[0x153C]) = v23;
  STACK[0x1B60] = (unint64_t)v22;
  LODWORD(STACK[0x154C]) = v21;
  STACK[0x1B68] = v20;
  LODWORD(STACK[0x1564]) = v19;
  LODWORD(STACK[0x1584]) = v18;
  LODWORD(STACK[0x1594]) = v17;
  STACK[0x1B70] = v16;
  STACK[0x1B78] = v15;
  STACK[0x14D0] = v14;
  LODWORD(STACK[0x1598]) = v4;
  STACK[0x1B88] = v13;
  LODWORD(STACK[0x159C]) = v5;
  return v22();
}

void sub_193213C34()
{
  int v0;

  STACK[0x3F8] = STACK[0x1018];
  STACK[0x408] = STACK[0x1010];
  LODWORD(STACK[0x218]) = STACK[0x100C];
  STACK[0x410] = STACK[0x1028];
  STACK[0x4C0] = STACK[0x1000];
  STACK[0x420] = STACK[0xFF8];
  STACK[0x428] = STACK[0xFF0];
  LODWORD(STACK[0x21C]) = STACK[0xFE4];
  STACK[0x440] = STACK[0xFE8];
  LODWORD(STACK[0x254]) = STACK[0xFD4];
  STACK[0x458] = STACK[0xFD8];
  LODWORD(STACK[0x26C]) = STACK[0xFBC];
  LODWORD(STACK[0x28C]) = STACK[0xFB8];
  LODWORD(STACK[0x29C]) = STACK[0xFA4];
  STACK[0x460] = STACK[0xFC0];
  STACK[0x478] = STACK[0x1030];
  STACK[0x4F0] = STACK[0x1048];
  LODWORD(STACK[0x2A0]) = v0;
  STACK[0x480] = STACK[0xFC8];
  LODWORD(STACK[0x2A4]) = v0;
  JUMPOUT(0x1932142CCLL);
}

uint64_t sub_193213CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v54;
  uint64_t v55;

  return (*(uint64_t (**)(void))(v55
                              + 8 * ((203 * (a54 == (((v54 - 846) | 0xAD) ^ 0xFFFFF5A0) + 29 * (v54 ^ 0xC6D))) ^ v54)))();
}

uint64_t sub_193213D20@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x3E0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (2978 * (v1 > a1)))) - 12 * ((v2 + 143) ^ 0x45Du) + 2620))();
}

uint64_t sub_193213D5C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  STACK[0x3F8] = STACK[0x1018];
  STACK[0x408] = STACK[0x1010];
  LODWORD(STACK[0x218]) = STACK[0x100C];
  STACK[0x410] = STACK[0x1028];
  STACK[0x4C0] = STACK[0x1000];
  STACK[0x420] = STACK[0xFF8];
  STACK[0x428] = STACK[0xFF0];
  LODWORD(STACK[0x21C]) = STACK[0xFE4];
  STACK[0x440] = STACK[0xFE8];
  LODWORD(STACK[0x254]) = STACK[0xFD4];
  STACK[0x458] = STACK[0xFD8];
  LODWORD(STACK[0x26C]) = STACK[0xFBC];
  LODWORD(STACK[0x28C]) = STACK[0xFB8];
  LODWORD(STACK[0x29C]) = STACK[0xFA4];
  STACK[0x460] = STACK[0xFC0];
  STACK[0x478] = STACK[0x1030];
  STACK[0x4F0] = STACK[0x1048];
  LODWORD(STACK[0x2A0]) = v2;
  STACK[0x480] = STACK[0xFC8];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                     + 8
                                     * ((LOBYTE(STACK[0x1047])
                                       * ((((a1 - 476568719) & 0x1C67DF79) - v1 - 1784) ^ (v3 - 307))) ^ a1))
                         - 8);
  LODWORD(STACK[0x2A4]) = v2;
  return v5();
}

uint64_t sub_193213E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(unint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;

  v62 = a27(STACK[0x1048], 2241923698);
  STACK[0x1050] = v62;
  STACK[0x368] = STACK[0x1018];
  STACK[0x378] = STACK[0x1010];
  HIDWORD(a57) = STACK[0x100C];
  STACK[0x380] = STACK[0x1028];
  STACK[0x430] = STACK[0x1000];
  STACK[0x390] = STACK[0xFF8];
  STACK[0x398] = STACK[0xFF0];
  LODWORD(v71) = STACK[0xFE4];
  STACK[0x3B0] = STACK[0xFE8];
  HIDWORD(v71) = STACK[0xFD4];
  STACK[0x3C8] = STACK[0xFD8];
  LODWORD(STACK[0x204]) = STACK[0xFA4];
  STACK[0x3D0] = STACK[0xFC0];
  STACK[0x3E8] = STACK[0x1030];
  STACK[0x470] = STACK[0x1048];
  LODWORD(STACK[0x210]) = v61;
  STACK[0x3F0] = 0;
  LODWORD(STACK[0x214]) = v59 - 2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(unint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (((((v58 - 4) ^ (v62 == 0)) & 1) * (((v58 + 490825614) & 0x22BE9586) - 1019)) ^ v58)))(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           v71);
}

uint64_t sub_193213F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unsigned int v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v8 = STACK[0x1030];
  v9 = (*(unsigned int *)STACK[0x1030] ^ 0x3B3D7EBF87BFFFD7)
     - 0x1020009480A18080
     + ((2 * *(unsigned int *)STACK[0x1030]) & 0x10F7FFFAELL);
  v10 = (v9 ^ 0x39AA87E2F2D93A28) & (2 * (v9 & 0x4F8E180A9)) ^ v9 & 0x4F8E180A9;
  v11 = ((2 * (v5 ^ 0x39AA87EBE3583A57 ^ v9)) ^ 0x1290084637737726) & (v5 ^ 0x39AA87EBE3583A57 ^ v9) ^ (2 * (v5 ^ 0x39AA87EBE3583A57 ^ v9)) & 0x6D48063F1BB9BB92;
  v12 = v11 ^ 0x2548020108888891;
  v13 = (v11 ^ 0x3603000300) & (4 * v10) ^ v10;
  STACK[0x650] = STACK[0x1018];
  STACK[0x668] = STACK[0x1010];
  LODWORD(STACK[0x4AC]) = STACK[0x100C];
  v14 = ((4 * v12) ^ 0x352018FC6EE6EE4CLL) & v12 ^ (4 * v12) & 0x6D48063F1BB9BB90;
  STACK[0x670] = STACK[0x1028];
  STACK[0x6B8] = STACK[0x1000];
  v15 = (v14 ^ 0xA500003C0AA0AA00) & (16 * v13) ^ v13;
  STACK[0x678] = STACK[0xFF8];
  STACK[0x690] = STACK[0xFF0];
  v16 = *(_QWORD *)(v6 + 8 * (int)v5);
  v17 = ((16 * (v14 ^ 0x4848060311191193)) ^ 0x548063F1BB9BB930) & (v14 ^ 0x4848060311191193) ^ (16 * (v14 ^ 0x4848060311191193)) & 0xED48063F1BB9BB90;
  LODWORD(STACK[0x4CC]) = STACK[0xFE4];
  STACK[0x698] = STACK[0xFE8];
  STACK[0x6E8] = v16 - 4;
  v18 = (v17 ^ 0xC40002311B99B900) & (v15 << 8) ^ v15;
  LODWORD(STACK[0x4DC]) = STACK[0xFD4];
  v19 = STACK[0xFC0];
  v20 = *(_QWORD *)STACK[0xFC0];
  v21 = (((v17 ^ 0x2948040E00200283) << 8) ^ 0x48063F1BB9BB9300) & (v17 ^ 0x2948040E00200283) ^ ((v17 ^ 0x2948040E00200283) << 8) & 0xED48063F1BB9BB00;
  STACK[0x6B0] = STACK[0xFD8];
  LODWORD(STACK[0x4EC]) = STACK[0xFBC];
  LODWORD(STACK[0x514]) = STACK[0xFB8];
  LODWORD(STACK[0x52C]) = STACK[0xFA4];
  STACK[0x6C8] = v19;
  STACK[0x6D8] = v8;
  STACK[0x728] = STACK[0x1048];
  LODWORD(STACK[0x54C]) = v7;
  v22 = STACK[0x1050];
  STACK[0x6E0] = STACK[0x1050];
  STACK[0x6F8] = v22;
  STACK[0x778] = 0x5D952DACE41797ELL;
  STACK[0x710] = v20;
  STACK[0x7B8] = v9 ^ (2 * (v21 & 0x2391B9100000000 ^ v18 ^ (v21 ^ 0x4800061B19B90000) & (v18 << 16))) ^ 0x2FC8F4BA7DCA08CCLL;
  STACK[0x1110] = STACK[0x7B8];
  STACK[0x1118] = STACK[0x710];
  STACK[0x1120] = STACK[0x778];
  STACK[0x1128] = STACK[0x6F8];
  STACK[0x1130] = STACK[0x6E0];
  LODWORD(STACK[0x10FC]) = STACK[0x54C];
  STACK[0x1140] = STACK[0x728];
  STACK[0x1148] = STACK[0x6D8];
  STACK[0x1150] = STACK[0x6C8];
  LODWORD(STACK[0x113C]) = STACK[0x52C];
  LODWORD(STACK[0x115C]) = STACK[0x514];
  LODWORD(STACK[0x1174]) = STACK[0x4EC];
  STACK[0x1160] = STACK[0x6B0];
  LODWORD(STACK[0x119C]) = STACK[0x4DC];
  STACK[0x1168] = STACK[0x698];
  LODWORD(STACK[0x11B0]) = STACK[0x4CC];
  STACK[0x1178] = STACK[0x690];
  STACK[0x1180] = STACK[0x678];
  STACK[0x1190] = STACK[0x6B8];
  STACK[0x1188] = STACK[0x670];
  LODWORD(STACK[0x11B4]) = STACK[0x4AC];
  STACK[0x11A0] = STACK[0x668];
  v3 = STACK[0x1120] + STACK[0x1128];
  STACK[0x11A8] = STACK[0x650];
  LODWORD(v3) = STACK[0x1118] > v3 - 0x5D952DACE41797ELL;
  STACK[0x11B8] = STACK[0x6E8];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (int)((v3
                                                                                       * ((153 * (v5 ^ 0x174)
                                                                                         + 1386958589) & 0xAD54B2D9 ^ 0x10C0)) | v5 ^ 0x468)))(0x767A3EBDF7FA0F3DLL, a2, a3, 0xC0391580E16, 3713000404);
}

void sub_193214410()
{
  uint64_t v0;

  v0 = **(_QWORD **)(MEMORY[0x1E0C80A78]() + 8);
  __asm { BR              X9 }
}

uint64_t sub_193214604()
{
  char v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  int v8;
  uint64_t v9;
  BOOL v10;

  v7 = v1 ^ (v0 + 12);
  v8 = v4 + v1 + 23;
  *(_QWORD *)(v2 + 4152) = &STACK[0x46AAD4E1DD90139C];
  *(_QWORD *)(v2 + 4160) = &STACK[0x54D2A68F3DE7F652];
  *(_DWORD *)(v6 - 140) = v4 + v1 + 629424707 * ((v6 - 1237470104 - 2 * ((v6 - 144) & 0xB63DB4F8)) ^ 0x2EA2C781) + 2307;
  v9 = sub_193241A88(v6 - 144);
  v10 = *(_DWORD *)(v6 - 144) == 1009597723;
  LODWORD(STACK[0x51C]) = v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((4822 * ((v7 ^ v10) & 1)) ^ v8)) - 4))(v9);
}

void sub_1932146E4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  _DWORD v23[254];
  char v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;

  if (v21)
    v10 = v20 == v4;
  else
    v10 = 1;
  v11 = v10;
  *(_BYTE *)v0 = v11;
  *(_BYTE *)(v0 + 1) = HIBYTE(v3) ^ 0x4E;
  *(_BYTE *)(v0 + 2) = (v3 >> (v1 + 69)) ^ 0x35;
  *(_QWORD *)(v0 + 3) = v9 - 159;
  *(_BYTE *)(v0 + 18) = BYTE5(v3) ^ 0xC;
  *(_QWORD *)(v0 + 19) = v9 - 158;
  *(_BYTE *)(v0 + 34) = BYTE4(v3) ^ 0x54;
  *(_QWORD *)(v0 + 35) = v9 - 157;
  *(_QWORD *)(v0 + 43) = v9 - 156;
  *(_BYTE *)(v0 + 58) = ((BYTE3(v3) ^ 0xCF) - ((2 * (BYTE3(v3) ^ 0xCF)) & 0x7C) + 62) ^ 0x3E;
  *(_QWORD *)(v0 + 59) = v9 - 155;
  *(_BYTE *)(v0 + 73) = ((BYTE2(v3) ^ 0x3A) - ((2 * (BYTE2(v3) ^ 0x3A)) & 0x16) - 117) ^ 0x8B;
  *(_BYTE *)(v0 + 74) = ~BYTE1(v3);
  *(_QWORD *)(v0 + 75) = v9 - 154;
  *(_QWORD *)(v0 + 83) = v9 - 153;
  *(_BYTE *)(v0 + 96) = v3 ^ 0xD9;
  *(_BYTE *)(v0 + 97) = HIBYTE(v2) ^ 0x81;
  *(_BYTE *)(v0 + 98) = BYTE6(v2) ^ 0x32;
  *(_QWORD *)(v0 + 99) = v9 - 151;
  *(_BYTE *)(v0 + 114) = BYTE5(v2) ^ 0x6F;
  *(_QWORD *)(v0 + 115) = v9 - 150;
  *(_BYTE *)(v0 + 130) = BYTE4(v2) ^ 0xD2;
  *(_QWORD *)(v0 + 131) = v9 - 149;
  *(_QWORD *)(v0 + 139) = v9 - 148;
  *(_BYTE *)(v0 + 154) = ((BYTE3(v2) ^ 0xD4) - ((2 * (BYTE3(v2) ^ 0xD4)) & 0x7C) + 62) ^ 0x3E;
  *(_QWORD *)(v0 + 155) = v9 - 147;
  *(_BYTE *)(v0 + 169) = ((BYTE2(v2) ^ 0x81) - ((2 * (BYTE2(v2) ^ 0x81)) & 0x16) - 117) ^ 0x8B;
  *(_BYTE *)(v0 + 170) = BYTE1(v2) ^ 0xBA;
  *(_QWORD *)(v0 + 171) = v9 - 146;
  *(_QWORD *)(v0 + 179) = v9 - 145;
  v12 = *(_QWORD *)(v8 + 8 * v1);
  *(_BYTE *)(v0 + 194) = v2 ^ 0xC9;
  v5[98] = v12 - 12;
  v5[105] = 0;
  v5[115] = v23;
  v6[7] = v23;
  v26 = v23[249];
  v6[9] = v5[113];
  v27 = v23[245];
  v13 = v5[110];
  v6[11] = v5[111];
  v6[12] = v13;
  v6[13] = v5[109];
  v28 = v23[237];
  v14 = v5[106];
  v6[15] = v5[107];
  v6[16] = v14;
  v6[17] = v5[105];
  v29 = v23[229];
  v6[19] = v5[103];
  v30 = v23[225];
  v31 = v23[224];
  v15 = v5[100];
  v6[21] = v5[101];
  v6[22] = v15;
  v16 = v5[98];
  v17 = v5[97];
  v6[23] = v5[99];
  v6[24] = v17;
  v32 = v23[213];
  v33 = v23[212];
  v34 = v23[211];
  v35 = v23[210];
  v18 = v5[93];
  v6[27] = v5[94];
  v6[28] = v18;
  v6[29] = v5[92];
  v6[30] = v16;
  v19 = v22(16, 2241923698);
  v6[31] = v19;
  v5[116] = 0;
  v24 = 0;
  v25 = 101330303;
  __asm { BR              X8 }
}

uint64_t sub_1932196D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(uint64_t, uint64_t))
{
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v33 = (v29 + v30 - 2256);
  v34 = *(_QWORD **)(v31 + 248);
  *v34 = 0;
  v34[1] = 0;
  *(_QWORD *)(v31 + 256) = v34 + 1;
  v35 = a29(4096, 2241923698);
  **(_QWORD **)(v31 + 248) = v35;
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((997 * (v35 != 0)) ^ v30)) - (v33 ^ 0x941E81FFLL)))();
}

uint64_t sub_19321973C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 248);
  **(_DWORD **)(v2 + 256) = v0;
  *(_QWORD *)(v1 + 928) = v3;
  LOBYTE(STACK[0x5EB]) = 1;
  LODWORD(STACK[0x5EC]) = 101372955;
  LODWORD(STACK[0x1498]) = STACK[0x5EC];
  *(_BYTE *)(v2 + 271) = STACK[0x5EB];
  **(_QWORD **)(v2 + 56) = *(_QWORD *)(v1 + 928);
  return (*(uint64_t (**)(void))(v2 + 240))();
}

uint64_t sub_1932197B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a64;
  char a67;
  int a70;
  _QWORD *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v74 = a70;
  LODWORD(STACK[0x1A9C]) = a70;
  LODWORD(STACK[0xF2C]) = v74;
  v70[414] = *(_QWORD *)(v71 + 232);
  v75 = *(_QWORD *)(v71 + 216);
  v70[415] = *(_QWORD *)(v71 + 224);
  v70[416] = v75;
  LODWORD(STACK[0xF48]) = STACK[0x1464];
  LODWORD(STACK[0xF4C]) = STACK[0x1460];
  LODWORD(STACK[0xF50]) = STACK[0x145C];
  LODWORD(STACK[0xF54]) = STACK[0x1458];
  v76 = *(_QWORD *)(v71 + 184);
  v70[419] = *(_QWORD *)(v71 + 192);
  v70[420] = v76;
  v77 = *(_QWORD *)(v71 + 168);
  v70[421] = *(_QWORD *)(v71 + 176);
  v70[422] = v77;
  LODWORD(STACK[0xF78]) = STACK[0x1434];
  LODWORD(STACK[0xF7C]) = STACK[0x1430];
  v70[424] = &a67;
  v70[425] = *(_QWORD *)(v71 + 152);
  LODWORD(STACK[0xF94]) = STACK[0x1424];
  v70[427] = *(_QWORD *)(v71 + 136);
  v78 = *(_QWORD *)(v71 + 120);
  v70[428] = *(_QWORD *)(v71 + 128);
  v70[429] = v78;
  LODWORD(STACK[0xFB4]) = STACK[0x1404];
  v70[431] = *(_QWORD *)(v71 + 104);
  v79 = *(_QWORD *)(v71 + 88);
  v70[432] = *(_QWORD *)(v71 + 96);
  v70[433] = v79;
  LODWORD(STACK[0xFD4]) = STACK[0x13E4];
  v70[435] = *(_QWORD *)(v71 + 72);
  LODWORD(STACK[0xFE0]) = STACK[0x13D4];
  LODWORD(v77) = 488 * ((*(_BYTE *)(v71 + 271) & 1) == 0);
  LODWORD(STACK[0xFE4]) = STACK[0x1498];
  return (*(uint64_t (**)(void))(v73 + 8 * (int)(v77 ^ (v72 + a64 + 718))))();
}

uint64_t sub_193219A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  int v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  int v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);

  v67[226] = a65;
  v70 = LODWORD(STACK[0x1A9C]) > *(_DWORD *)(a65 + 8);
  v66[366] = v67[29];
  v71 = v67[27];
  v66[367] = v67[28];
  v66[368] = v71;
  LODWORD(STACK[0xDCC]) = STACK[0x1464];
  LODWORD(STACK[0xDD0]) = STACK[0x145C];
  LODWORD(STACK[0xDD4]) = STACK[0x1458];
  v72 = v67[23];
  v66[371] = v67[24];
  v66[372] = v72;
  v73 = v67[21];
  v66[373] = v67[22];
  v74 = v70;
  v66[374] = v73;
  LODWORD(STACK[0xDF8]) = STACK[0x1434];
  LODWORD(STACK[0xDFC]) = STACK[0x1430];
  v66[376] = a4;
  v66[377] = v67[19];
  LODWORD(STACK[0xE14]) = STACK[0x1424];
  v66[379] = v67[17];
  v75 = v67[15];
  v66[380] = v67[16];
  v66[381] = v75;
  LODWORD(STACK[0xE34]) = STACK[0x1404];
  v66[383] = v67[13];
  v76 = v67[11];
  v66[384] = v67[12];
  v66[385] = v76;
  LODWORD(STACK[0xE54]) = STACK[0x13E4];
  v66[387] = v67[9];
  LODWORD(STACK[0xE60]) = STACK[0x13D4];
  v77 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68
                                                                               + 8
                                                                               * ((1866 * v74) ^ (147
                                                                                                * ((v69 + 969028606) & 0x321F4F6A ^ 0x562))))
                                                                   - ((147 * ((v69 + 969028606) & 0x321F4F6A ^ 0x562u)) ^ 0x12ALL));
  LODWORD(STACK[0xE64]) = v65;
  return v77(a1, a2, a3, 3713000404);
}

void sub_193219B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;
  int v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v68[185] = v69[29];
  v71 = v69[27];
  v68[186] = v69[28];
  v72 = *(_QWORD *)(v70 + 8 * v67) + (v67 + 929) - 1235;
  v68[187] = v71;
  LODWORD(STACK[0x820]) = STACK[0x1464];
  LODWORD(STACK[0x824]) = STACK[0x1460];
  LODWORD(STACK[0x828]) = STACK[0x145C];
  LODWORD(STACK[0x82C]) = STACK[0x1458];
  v68[190] = v72;
  v68[191] = v69[23];
  v73 = v69[21];
  v68[192] = v69[22];
  v68[193] = v73;
  LODWORD(STACK[0x850]) = STACK[0x1434];
  LODWORD(STACK[0x854]) = STACK[0x1430];
  v68[195] = &a67;
  v68[196] = v69[19];
  LODWORD(STACK[0x86C]) = STACK[0x1424];
  v68[198] = v69[17];
  v74 = v69[15];
  v68[199] = v69[16];
  v68[200] = v74;
  LODWORD(STACK[0x88C]) = STACK[0x1404];
  v68[202] = v69[9];
  LODWORD(STACK[0x89C]) = STACK[0x13D4];
  v68[204] = v69[226];
  JUMPOUT(0x193219C34);
}

uint64_t sub_193219D7C()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (((((v3 + 1967) ^ v2) + v3 + 1653) * (v1 <= v0)) ^ v3)))();
}

uint64_t sub_193219DE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(void);
  int v24;
  int v25;
  int v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v2[206] = v0;
  v3[126] = v1;
  v2[230] = v3[121];
  v2[231] = v3[120];
  v2[232] = v3[119];
  LODWORD(STACK[0x988]) = STACK[0x1744];
  LODWORD(STACK[0x98C]) = STACK[0x1740];
  LODWORD(STACK[0x990]) = STACK[0x173C];
  LODWORD(STACK[0x994]) = STACK[0x1738];
  v2[235] = v3[122];
  v2[236] = v3[116];
  v2[237] = v3[115];
  v2[238] = v3[114];
  LODWORD(STACK[0x9B8]) = STACK[0x171C];
  LODWORD(STACK[0x9BC]) = STACK[0x1718];
  v2[240] = v3[112];
  v2[241] = v3[111];
  LODWORD(STACK[0x9D4]) = STACK[0x1704];
  v2[243] = v3[109];
  v2[244] = v3[108];
  v2[245] = v3[107];
  LODWORD(STACK[0x9F4]) = STACK[0x16E4];
  v2[247] = v3[103];
  v2[248] = v3[123];
  v2[249] = v3[126];
  LODWORD(STACK[0xA14]) = 101330305;
  v2[251] = v3[105];
  LODWORD(STACK[0xA20]) = STACK[0x16D4];
  LODWORD(STACK[0xA24]) = 101330305;
  v4 = STACK[0xA24];
  v5 = STACK[0xA20];
  v6 = v2[251];
  v7 = STACK[0xA14];
  v8 = v2[249];
  v9 = v2[248];
  v10 = v2[247];
  v11 = STACK[0x9F4];
  v12 = v2[245];
  v13 = v2[244];
  v14 = v2[243];
  v15 = STACK[0x9D4];
  v16 = v2[241];
  v17 = v2[240];
  v18 = STACK[0x9BC];
  v19 = STACK[0x9B8];
  v20 = v2[238];
  v21 = v2[237];
  v22 = v2[236];
  v23 = (uint64_t (*)(void))v2[235];
  v24 = STACK[0x994];
  v25 = STACK[0x990];
  v26 = STACK[0x98C];
  v27 = STACK[0x988];
  v28 = STACK[0x980];
  v29 = STACK[0x978];
  v30 = STACK[0x970];
  STACK[0x698] = STACK[0x970];
  STACK[0x6A0] = v29;
  STACK[0x6A8] = v28;
  LODWORD(STACK[0x6B0]) = v27;
  LODWORD(STACK[0x6B4]) = v26;
  LODWORD(STACK[0x6B8]) = v25;
  LODWORD(STACK[0x6BC]) = v24;
  STACK[0x6C0] = (unint64_t)v23;
  STACK[0x6C8] = v22;
  STACK[0x6D0] = v21;
  STACK[0x6D8] = v20;
  LODWORD(STACK[0x6E0]) = v19;
  LODWORD(STACK[0x6E4]) = v18;
  STACK[0x6E8] = v17;
  STACK[0x6F0] = v16;
  LODWORD(STACK[0x6FC]) = v15;
  STACK[0x700] = v14;
  STACK[0x708] = v13;
  STACK[0x710] = v12;
  LODWORD(STACK[0x71C]) = v11;
  STACK[0x720] = v10;
  STACK[0x728] = v9;
  STACK[0x730] = v8;
  LODWORD(STACK[0x73C]) = v7;
  STACK[0x740] = v6;
  LODWORD(STACK[0x748]) = v5;
  LODWORD(STACK[0x74C]) = v4;
  STACK[0xAD8] = v30;
  STACK[0xAE0] = v29;
  STACK[0xAE8] = v28;
  LODWORD(STACK[0xAF0]) = v27;
  LODWORD(STACK[0xAF4]) = v26;
  LODWORD(STACK[0xAF8]) = v25;
  LODWORD(STACK[0xAFC]) = v24;
  STACK[0xB00] = (unint64_t)v23;
  STACK[0xB08] = v22;
  STACK[0xB10] = v21;
  STACK[0xB18] = v20;
  LODWORD(STACK[0xB20]) = v19;
  LODWORD(STACK[0xB24]) = v18;
  STACK[0xB28] = v17;
  STACK[0xB30] = v16;
  LODWORD(STACK[0xB3C]) = v15;
  STACK[0xB40] = v14;
  STACK[0xB48] = v13;
  STACK[0xB50] = v12;
  LODWORD(STACK[0xB5C]) = v11;
  STACK[0xB60] = v10;
  STACK[0xB68] = v9;
  STACK[0xB70] = v8;
  LODWORD(STACK[0xB7C]) = v7;
  STACK[0xB80] = v6;
  LODWORD(STACK[0xB8C]) = v4;
  STACK[0xDB0] = v30;
  STACK[0xDB8] = v29;
  STACK[0xDC0] = v28;
  LODWORD(STACK[0xDCC]) = v27;
  LODWORD(STACK[0xDD0]) = v25;
  LODWORD(STACK[0xDD4]) = v24;
  STACK[0xDD8] = (unint64_t)v23;
  STACK[0xDE0] = v22;
  STACK[0xDE8] = v21;
  STACK[0xDF0] = v20;
  LODWORD(STACK[0xDF8]) = v19;
  LODWORD(STACK[0xDFC]) = v18;
  STACK[0xE00] = v17;
  STACK[0xE08] = v16;
  LODWORD(STACK[0xE14]) = v15;
  STACK[0xE18] = v14;
  STACK[0xE20] = v13;
  STACK[0xE28] = v12;
  LODWORD(STACK[0xE34]) = v11;
  STACK[0xE38] = v10;
  STACK[0xE40] = v9;
  STACK[0xE48] = v8;
  LODWORD(STACK[0xE54]) = v7;
  STACK[0xE58] = v6;
  LODWORD(STACK[0xE60]) = v5;
  LODWORD(STACK[0xE64]) = v4;
  return v23();
}

uint64_t sub_19321AD6C()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  v6 = STACK[0xB8C];
  v3[156] = v2[296];
  LODWORD(STACK[0x187C]) = STACK[0xB7C];
  v3[158] = v2[294];
  v3[159] = v2[293];
  v3[160] = v2[292];
  LODWORD(STACK[0x189C]) = STACK[0xB5C];
  v3[162] = v2[290];
  v3[163] = v2[289];
  v3[164] = v2[288];
  LODWORD(STACK[0x18BC]) = STACK[0xB3C];
  v3[166] = v2[286];
  v3[167] = v2[285];
  LODWORD(STACK[0x18D0]) = STACK[0xB24];
  LODWORD(STACK[0x18D4]) = STACK[0xB20];
  v3[169] = v2[283];
  v3[170] = v2[282];
  v3[171] = v2[281];
  v3[172] = v2[280];
  v7 = STACK[0xAFC];
  LODWORD(STACK[0x18F8]) = STACK[0xAFC];
  v8 = STACK[0xAF8];
  LODWORD(STACK[0x18FC]) = STACK[0xAF8];
  v9 = STACK[0xAF4];
  LODWORD(STACK[0x1900]) = STACK[0xAF4];
  v10 = STACK[0xAF0];
  LODWORD(STACK[0x1904]) = STACK[0xAF0];
  v11 = v2[277];
  v3[175] = v11;
  v12 = v2[276];
  v3[176] = v12;
  v13 = v2[275];
  v3[177] = v13;
  v2[298] = v13;
  v2[299] = v12;
  v2[300] = v11;
  LODWORD(STACK[0xBA8]) = v10;
  LODWORD(STACK[0xBAC]) = v9;
  LODWORD(STACK[0xBB0]) = v8;
  LODWORD(STACK[0xBB4]) = v7;
  v2[303] = v3[172];
  v2[304] = v3[171];
  v2[305] = v3[170];
  v2[306] = v3[169];
  LODWORD(STACK[0xBD8]) = STACK[0x18D4];
  LODWORD(STACK[0xBDC]) = STACK[0x18D0];
  v2[308] = v3[167];
  v2[309] = v3[166];
  LODWORD(STACK[0xBF4]) = STACK[0x18BC];
  v2[311] = v3[164];
  v2[312] = v3[163];
  v2[313] = v3[162];
  LODWORD(STACK[0xC14]) = STACK[0x189C];
  v2[315] = v3[160];
  v2[316] = v3[159];
  v2[317] = v3[158];
  LODWORD(STACK[0xC34]) = STACK[0x187C];
  v2[319] = v3[156];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)(((v6 == v1) * ((v0 ^ 0x941E814C) + 234)) ^ (v4 + v0 + 1528)))
                          - ((2 * (v0 ^ 0x941E84BD)) ^ 0xA98));
  LODWORD(STACK[0xC44]) = v6;
  return v14();
}

uint64_t sub_19321AF3C@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _DWORD *v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t (*v37)(void);

  v5 = (uint64_t *)v3[162];
  v6 = *v5;
  v7 = (_DWORD *)v3[169];
  v8 = STACK[0x18D4];
  v9 = STACK[0x18D4];
  v10 = (v8 ^ 0x5B8A752C) & (2 * (v8 & 0x93D2798D)) ^ v8 & 0x93D2798D;
  v11 = ((2 * (v8 ^ 0x5DAE473E)) ^ 0x9CF87D66) & (v8 ^ 0x5DAE473E) ^ (2 * (v8 ^ 0x5DAE473E)) & 0xCE7C3EB2;
  v12 = v11 ^ 0x42040291;
  v13 = (v11 ^ 0x8C5C2CA0) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0x39F0FACC) & v12 ^ (4 * v12) & 0xCE7C3EB0;
  v15 = (v14 ^ 0x8703A80) & (16 * v13) ^ v13;
  v16 = ((16 * (v14 ^ 0xC60C0433)) ^ 0xE7C3EB30) & (v14 ^ 0xC60C0433) ^ (16 * (v14 ^ 0xC60C0433)) & 0xCE7C3EB0;
  v17 = v15 ^ 0xCE7C3EB3 ^ (v16 ^ 0xC6402A00) & (v15 << 8);
  v18 = LODWORD(STACK[0x18D4]) ^ (2
                                * ((v17 << 16) & 0x4E7C0000 ^ v17 ^ ((v17 << 16) ^ 0x3EB30000) & (((v16 ^ 0x83C1483) << 8) & 0x4E7C0000 ^ 0x2400000 ^ (((v16 ^ 0x83C1483) << 8) ^ 0x7C3E0000) & (v16 ^ 0x83C1483))));
  v19 = ((2 * *v7) & 0xB5DFFFFA) + (*v7 ^ (a1 + 1525677890)) - 1525678077;
  *(_BYTE *)(*v5 + v19) = HIBYTE(v18) ^ 0x13;
  *(_BYTE *)(v6 + v19 + 1) = BYTE2(v18) ^ 0x4A;
  *(_BYTE *)(v6 + v19 + 2) = (((BYTE1(v18) ^ 4) - ((v18 >> 7) & 6) + 11) ^ 3) - 8;
  v20 = a1 + 1234;
  *(_BYTE *)(v6 + v19 + 3) = v18 ^ 0xEB;
  v21 = (*v7 + 4);
  *v7 = v21;
  v22 = *v5;
  v23 = (v21 ^ 0x67DFAF0396FEFF75) - 0x62065C28C8BD85F7 + ((2 * v21) & 0x12DFDFEEALL);
  v24 = v3[170];
  v25 = *(_QWORD *)(v4 + 8 * a1);
  v2[489] = v3[177];
  v26 = (v24 ^ 0x1333B8937F8DCAELL) & (2 * (v24 & 0xA9BBBBC987F1190ELL)) ^ v24 & 0xA9BBBBC987F1190ELL;
  v2[490] = v3[176];
  v2[491] = v3[175];
  LODWORD(STACK[0x11A0]) = STACK[0x1904];
  v27 = ((2 * (v24 ^ 0x52012A8A36B8EEB2)) ^ 0xF77522876293EF78) & (v24 ^ 0x52012A8A36B8EEB2) ^ (2 * (v24 ^ 0x52012A8A36B8EEB2)) & 0x7BBA9143B149F7BCLL;
  LODWORD(STACK[0x11A4]) = STACK[0x1900];
  LODWORD(STACK[0x11A8]) = STACK[0x18FC];
  v28 = v27 ^ 0x88A914091481084;
  v29 = (v27 ^ 0xE33000022000E438) & (4 * v26) ^ v26;
  LODWORD(STACK[0x11AC]) = STACK[0x18F8];
  v2[494] = v3[172];
  v2[495] = v3[171];
  v30 = ((4 * v28) ^ 0xEEEA450EC527DEF0) & v28 ^ (4 * v28) & 0x7BBA9143B149F7BCLL;
  v2[496] = v3[170];
  v2[497] = v3[169];
  v31 = (v30 ^ 0xEAAA01028101D6A0) & (16 * v29) ^ v29;
  LODWORD(STACK[0x11D0]) = v9;
  LODWORD(STACK[0x11D4]) = STACK[0x18D0];
  v2[499] = v3[167];
  v32 = ((16 * (v30 ^ 0x111090413048210CLL)) ^ 0xBBA9143B149F7BC0) & (v30 ^ 0x111090413048210CLL) ^ (16 * (v30 ^ 0x111090413048210CLL)) & 0x7BBA9143B149F7B0;
  v2[500] = v3[166];
  LODWORD(STACK[0x11EC]) = STACK[0x18BC];
  v2[502] = v3[164];
  v2[503] = v3[163];
  v2[504] = v3[162];
  v2[505] = v25;
  v33 = (((v32 ^ 0x40128140A140843CLL) << 8) ^ 0xBA9143B149F7BC00) & (v32 ^ 0x40128140A140843CLL) ^ ((v32 ^ 0x40128140A140843CLL) << 8) & 0xFBBA9143B149F400;
  LODWORD(STACK[0x1214]) = STACK[0x189C];
  v2[507] = v3[160];
  v2[508] = v3[159];
  v2[509] = v3[158];
  LODWORD(STACK[0x1234]) = STACK[0x187C];
  v2[511] = v3[156];
  LODWORD(STACK[0x1244]) = v1;
  v2[513] = v22;
  v2[514] = v23;
  v2[515] = v3[175];
  v2[516] = v24 ^ (2
                 * (v33 & 0x1141B10800000000 ^ (v32 ^ 0xBBA8100310097300) & (v31 << 8) ^ v31 ^ (v33 ^ 0x3A90010101410000) & (((v32 ^ 0xBBA8100310097300) & (v31 << 8) ^ v31) << 16))) ^ 0x7291C88502DA916BLL;
  v3[304] = v2[516];
  v3[305] = v2[515];
  v3[306] = v2[514];
  v3[307] = v2[513];
  LODWORD(STACK[0x1D34]) = STACK[0x1244];
  v3[309] = v2[511];
  LODWORD(STACK[0x1D44]) = STACK[0x1234];
  v3[311] = v2[509];
  v3[312] = v2[508];
  v3[313] = v2[507];
  LODWORD(STACK[0x1D64]) = STACK[0x1214];
  v34 = v2[505];
  v3[315] = v2[504];
  v3[316] = v2[503];
  v3[317] = v2[502];
  LODWORD(STACK[0x1D84]) = STACK[0x11EC];
  v3[319] = v2[500];
  v3[320] = v2[499];
  LODWORD(STACK[0x1D98]) = STACK[0x11D4];
  LODWORD(STACK[0x1D9C]) = STACK[0x11D0];
  v3[322] = v2[497];
  v3[323] = v2[496];
  v3[324] = v2[495];
  v3[325] = v2[494];
  LODWORD(STACK[0x1DC0]) = STACK[0x11AC];
  LODWORD(STACK[0x1DC4]) = STACK[0x11A8];
  LODWORD(STACK[0x1DC8]) = STACK[0x11A4];
  LODWORD(STACK[0x1DCC]) = STACK[0x11A0];
  v3[328] = v2[491];
  v35 = v3[307] + v3[306] + ((v20 - 1261) ^ 0xFA26AD2531BE8622);
  v36 = v3[305];
  v3[329] = v2[490];
  v3[330] = v2[489];
  v37 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((2 * (v36 > v35)) | ((v36 > v35) << 6) | v20))
                          - (((v20 - 1261) | 0x405u) ^ 0x4A9));
  v3[331] = v34;
  return v37();
}

uint64_t sub_19321B434()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  LODWORD(STACK[0x1AA8]) = STACK[0xE64];
  LODWORD(STACK[0x1AAC]) = STACK[0xE60];
  v3[228] = v2[387];
  LODWORD(STACK[0x1ABC]) = STACK[0xE54];
  v3[230] = v2[385];
  v3[231] = v2[384];
  v3[232] = v2[383];
  LODWORD(STACK[0x1ADC]) = STACK[0xE34];
  v3[234] = v2[381];
  v3[235] = v2[380];
  v3[236] = v2[379];
  LODWORD(STACK[0x1AFC]) = STACK[0xE14];
  v3[238] = v2[377];
  v3[239] = v2[376];
  LODWORD(STACK[0x1B10]) = STACK[0xDFC];
  LODWORD(STACK[0x1B14]) = STACK[0xDF8];
  v3[241] = v2[374];
  v3[242] = v2[373];
  v3[243] = v2[372];
  v3[244] = v2[371];
  LODWORD(STACK[0x1B3C]) = STACK[0xDD4];
  LODWORD(STACK[0x1B40]) = STACK[0xDD0];
  LODWORD(STACK[0x1B44]) = STACK[0xDCC];
  v3[247] = v2[368];
  v3[248] = v2[367];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                     + 8
                                     * ((19
                                       * (LODWORD(STACK[0x1AA8]) == ((v0 + 1809940118) ^ (v1 + 667) ^ (v0 + 1809940521)))) ^ (v0 + 1809943980)))
                         - 8);
  v3[249] = v2[366];
  return v5();
}

void sub_19321B558(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,unsigned int a62,uint64_t *a63)
{
  int v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v67 = *a63;
  v68 = a62 + ((7 * (a1 ^ 0x46u)) ^ 0xFB2A714C852B8DE8) - ((2 * a62) & 0x10A5710CALL);
  v69 = *(_QWORD *)(v66 + 8 * a1) - 4;
  v64[489] = v65[249];
  v64[490] = v65[248];
  v64[491] = v65[247];
  LODWORD(STACK[0x11A0]) = STACK[0x1B44];
  LODWORD(STACK[0x11A4]) = v63;
  LODWORD(STACK[0x11A8]) = STACK[0x1B40];
  LODWORD(STACK[0x11AC]) = STACK[0x1B3C];
  v64[494] = v65[244];
  v64[495] = v65[243];
  v64[496] = v65[242];
  v64[497] = v65[241];
  LODWORD(STACK[0x11D0]) = STACK[0x1B14];
  LODWORD(STACK[0x11D4]) = STACK[0x1B10];
  v64[499] = v65[239];
  v64[500] = v65[238];
  LODWORD(STACK[0x11EC]) = STACK[0x1AFC];
  v64[502] = v65[236];
  v64[503] = v65[235];
  v64[504] = v65[234];
  v64[505] = v69;
  LODWORD(STACK[0x1214]) = STACK[0x1ADC];
  v64[507] = v65[232];
  v64[508] = v65[231];
  v64[509] = v65[230];
  LODWORD(STACK[0x1234]) = STACK[0x1ABC];
  v64[511] = v65[228];
  LODWORD(STACK[0x1244]) = STACK[0x1AAC];
  v64[513] = v67;
  v64[514] = 0x5D952DACE41797ELL;
  v64[515] = a59;
  v64[516] = v68;
  JUMPOUT(0x19321B6B8);
}

uint64_t sub_19321B818()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;

  v4 = LODWORD(STACK[0x1D10]) ^ 0x852B8865;
  LODWORD(STACK[0x1DF4]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v4 == 0) * (v2 + ((v0 + 803) | 0x81) - v1 - 527)) ^ v0)) - 8))();
}

uint64_t sub_19321B864@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  int v58;
  _QWORD *v59;
  uint64_t v60;

  v59[333] = (v58 ^ 0x10E8u) + v59[306] + (a1 ^ 0xFA26B92857081560);
  v59[334] = LODWORD(STACK[0x1DF4]);
  return (*(uint64_t (**)(void))(v60 + 8 * ((26 * (a58 == 2)) ^ v58)))();
}

uint64_t sub_19321B8B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W8>)
{
  uint64_t v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 3080) = 0;
  v7 = v4[334] - 1;
  *(_BYTE *)(v4[305] + a1 + v4[333]) = *(_BYTE *)(v4[303] + a1 + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((4 * (v7 != 0)) | (8 * (v7 != 0))) ^ (v5 + a3 + 668))) - 4))();
}

void sub_19321B920()
{
  JUMPOUT(0x19321B8D8);
}

uint64_t sub_19321B928()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unint64_t v25;
  unint64_t v26;

  v2 = STACK[0xC44];
  v3 = v0[319];
  v4 = STACK[0xC34];
  v5 = v0[317];
  v6 = v0[316];
  v7 = v0[315];
  v8 = STACK[0xC14];
  v9 = v0[313];
  v10 = v0[312];
  v11 = v0[311];
  v12 = STACK[0xBF4];
  v13 = v0[309];
  v14 = v0[308];
  v15 = STACK[0xBDC];
  v16 = STACK[0xBD8];
  v17 = v0[306];
  v18 = v0[305];
  v19 = v0[304];
  v20 = v0[303];
  v21 = STACK[0xBB4];
  v22 = STACK[0xBB0];
  v23 = STACK[0xBAC];
  v24 = STACK[0xBA8];
  v25 = STACK[0xBA0];
  v26 = STACK[0xB98];
  STACK[0xC48] = STACK[0xB90];
  STACK[0xC50] = v26;
  STACK[0xC58] = v25;
  LODWORD(STACK[0xC60]) = v24;
  LODWORD(STACK[0xC64]) = v23;
  LODWORD(STACK[0xC68]) = v22;
  LODWORD(STACK[0xC6C]) = v21;
  STACK[0xC70] = v20;
  STACK[0xC78] = v19;
  STACK[0xC80] = v18;
  STACK[0xC88] = v17;
  LODWORD(STACK[0xC90]) = v16;
  LODWORD(STACK[0xC94]) = v15;
  STACK[0xC98] = v14;
  STACK[0xCA0] = v13;
  LODWORD(STACK[0xCAC]) = v12;
  STACK[0xCB0] = v11;
  STACK[0xCB8] = v10;
  STACK[0xCC0] = v9;
  LODWORD(STACK[0xCCC]) = v8;
  STACK[0xCD0] = v7;
  STACK[0xCD8] = v6;
  STACK[0xCE0] = v5;
  LODWORD(STACK[0xCEC]) = v4;
  STACK[0xCF0] = v3;
  LODWORD(STACK[0xCF8]) = v2;
  LODWORD(STACK[0xCFC]) = v2;
  LODWORD(STACK[0x1920]) = STACK[0xCFC];
  LODWORD(STACK[0x1924]) = STACK[0xCF8];
  v1[179] = STACK[0xCF0];
  LODWORD(STACK[0x1934]) = STACK[0xCEC];
  v1[181] = STACK[0xCE0];
  v1[182] = STACK[0xCD8];
  v1[183] = STACK[0xCD0];
  LODWORD(STACK[0x1954]) = STACK[0xCCC];
  v1[185] = STACK[0xCC0];
  v1[186] = STACK[0xCB8];
  v1[187] = STACK[0xCB0];
  LODWORD(STACK[0x1974]) = STACK[0xCAC];
  v1[189] = STACK[0xCA0];
  v1[190] = STACK[0xC98];
  LODWORD(STACK[0x1988]) = STACK[0xC94];
  LODWORD(STACK[0x198C]) = STACK[0xC90];
  v1[192] = STACK[0xC88];
  v1[193] = STACK[0xC80];
  v1[194] = STACK[0xC78];
  v1[195] = STACK[0xC70];
  LODWORD(STACK[0x19B0]) = STACK[0xC6C];
  LODWORD(STACK[0x19B4]) = STACK[0xC68];
  LODWORD(STACK[0x19B8]) = STACK[0xC64];
  LODWORD(STACK[0x19BC]) = STACK[0xC60];
  v1[198] = STACK[0xC58];
  v1[199] = STACK[0xC50];
  v1[200] = STACK[0xC48];
  return ((uint64_t (*)(void))v1[186])();
}

void sub_19321BB14()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  int v3;

  v0[344] = v1[200];
  v0[345] = v1[199];
  v0[346] = v1[198];
  LODWORD(STACK[0xD18]) = STACK[0x19BC];
  LODWORD(STACK[0xD1C]) = STACK[0x19B8];
  LODWORD(STACK[0xD20]) = STACK[0x19B4];
  LODWORD(STACK[0xD24]) = STACK[0x19B0];
  v0[349] = v1[195];
  LODWORD(STACK[0xD34]) = v2 + v3 - 535;
  v0[351] = v1[193];
  v0[352] = v1[192];
  LODWORD(STACK[0xD48]) = STACK[0x198C];
  LODWORD(STACK[0xD4C]) = STACK[0x1988];
  v0[354] = v1[189];
  LODWORD(STACK[0xD5C]) = STACK[0x1974];
  v0[356] = v1[187];
  v0[357] = v1[186];
  v0[358] = v1[185];
  LODWORD(STACK[0xD7C]) = STACK[0x1954];
  v0[360] = v1[183];
  v0[361] = v1[182];
  v0[362] = v1[181];
  LODWORD(STACK[0xD9C]) = STACK[0x1934];
  v0[364] = v1[179];
  JUMPOUT(0x19321BBE0);
}

uint64_t sub_19321BDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t), unsigned int *a17, uint64_t a18, uint64_t (*a19)(_QWORD, uint64_t, uint64_t))
{
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v26 = *(_QWORD *)(v24 + 8 * (int)(v19 - 2058));
  v27 = 486723911 * ((((2 * v20) | 0xF36D3CA571D93516) - v20 + 0x64961AD47136575) ^ 0xCB0845C30826FA11);
  *(_QWORD *)(v23 + 520) = v21;
  *(_DWORD *)(v25 - 128) = v19 - 71468001 - v27;
  *(_QWORD *)(v23 + 528) = v26 - v27 + v19 - 2881;
  a16(v25 - 144);
  v28 = a19(*a17, a18, v22);
  v29 = ((2 * v28) & 0xAD7DEBF6) + (v28 ^ 0x56BEF5FB);
  v30 = *(_QWORD *)(v24 + 8 * ((int)(v19 - 2058) ^ 5));
  v31 = 486723911 * ((-2 - ((~v20 | 0x1FAEAC010C954779) + (v20 | 0xE05153FEF36AB886))) ^ 0x2D107790BC5F27E3);
  *(_QWORD *)(v23 + 520) = v21;
  *(_DWORD *)(v25 - 128) = v19 - 71468001 - v31;
  *(_QWORD *)(v23 + 528) = ((v19 - 2058) ^ 0xFFFFFFFFFFFFFCD7) - v31 + v30;
  v32 = ((uint64_t (*)(uint64_t))a16)(v25 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24
                                                      + 8 * (int)((v19 - 2058) ^ 0x811 ^ (120 * (v29 != 1455355387))))
                                          - 12))(v32);
}

uint64_t sub_19321BF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),void (*a23)(uint64_t),uint64_t (*a24)(uint64_t),_DWORD *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60)
{
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  unsigned int v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  int v70;
  int v71;
  uint64_t v72;

  a23(a26);
  v64 = **(_QWORD **)(v61 + 1776);
  v65 = **(_DWORD **)(v61 + 1792);
  v66 = *a25 ^ 0xBF7FFFBB;
  v67 = (a60 ^ 0x7EFFF44F) & (2 * *a25);
  v68 = *(_QWORD *)(v60 + 4152);
  v69 = *(_QWORD *)(v60 + 4160);
  v70 = 597255653 * ((((v63 - 144) | 0xB9FBE4D2) - ((v63 - 144) & 0xB9FBE4D2)) ^ 0xB0F09B4B);
  *(_DWORD *)(v63 - 112) = v70 + a60 + 367;
  STACK[0x2948] = v68;
  STACK[0x2968] = v69;
  STACK[0x2958] = v64;
  *(_DWORD *)(v63 - 128) = v66 - v70 + v67 + 1704585213;
  *(_DWORD *)(v63 - 140) = v70 + 1581691396 + v65 - ((2 * v65) & 0xBC8D6408);
  a22(v63 - 144);
  v71 = *(_DWORD *)(v63 - 144);
  v72 = a24(a26);
  LODWORD(STACK[0xDAC]) = v71;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v62
                                                      + 8
                                                      * (((v71 == 395293758)
                                                        * ((((a60 ^ 0x7F) - 1605565924) & 0x5FB2F7FD) + 317)) ^ a60 ^ 0x7F))
                                          - 12))(v72);
}

void sub_19321C0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;
  _QWORD *v67;
  _QWORD *v68;

  v67[437] = v68[221];
  v67[438] = v68[220];
  v67[439] = v68[219];
  LODWORD(STACK[0x1000]) = STACK[0x1A64];
  LODWORD(STACK[0x1004]) = STACK[0x1A60];
  LODWORD(STACK[0x1008]) = STACK[0x1A5C];
  LODWORD(STACK[0x100C]) = STACK[0x1A58];
  v67[442] = v68[216];
  v67[443] = v68[223];
  v67[444] = v68[215];
  v67[445] = v68[214];
  LODWORD(STACK[0x1030]) = STACK[0x1A3C];
  LODWORD(STACK[0x1034]) = STACK[0x1A38];
  v67[447] = &a67;
  v67[448] = v68[212];
  LODWORD(STACK[0x104C]) = STACK[0x1A2C];
  v67[450] = v68[210];
  v67[451] = v68[209];
  v67[452] = v68[208];
  LODWORD(STACK[0x106C]) = STACK[0x1A0C];
  v67[454] = v68[206];
  v67[455] = v68[205];
  v67[456] = v68[204];
  LODWORD(STACK[0x108C]) = STACK[0x19EC];
  v67[458] = v68[202];
  JUMPOUT(0x19321C1CCLL);
}

void sub_19321C2A8()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 8 * v0);
  v1[463] = v2[249];
  v1[464] = v2[248];
  v1[465] = v2[247];
  LODWORD(STACK[0x10D4]) = STACK[0x1B44];
  LODWORD(STACK[0x10D8]) = STACK[0x1AA8];
  LODWORD(STACK[0x10DC]) = STACK[0x1B40];
  v1[468] = ((23 * (v0 ^ 0x28Du)) ^ 0xFFFFFFFFFFFFF077) + v4;
  LODWORD(STACK[0x10EC]) = STACK[0x1B3C];
  v1[470] = v2[244];
  v1[471] = v2[243];
  v1[472] = v2[242];
  v1[473] = v2[241];
  LODWORD(STACK[0x1110]) = STACK[0x1B14];
  LODWORD(STACK[0x1114]) = STACK[0x1B10];
  v1[475] = v2[239];
  v1[476] = v2[238];
  LODWORD(STACK[0x112C]) = STACK[0x1AFC];
  v1[478] = v2[236];
  v1[479] = v2[235];
  v1[480] = v2[234];
  LODWORD(STACK[0x114C]) = STACK[0x1ADC];
  v1[482] = v2[232];
  v1[483] = v2[231];
  v1[484] = v2[230];
  LODWORD(STACK[0x116C]) = STACK[0x1ABC];
  v1[486] = v2[228];
  LODWORD(STACK[0x117C]) = STACK[0x1AAC];
  JUMPOUT(0x193219140);
}

uint64_t sub_19321C3A8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((LODWORD(STACK[0xDAC]) == 395293758)
                                          * (((v0 - 1605565924) & 0x5FB2F7FD) + 317)) ^ v0))
                            - 12))();
}

void sub_19321C3F4(int a1@<W8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 8 * a1) + ((a1 - 42) | 0x570u) - 1396;
  v1[92] = v2[221];
  v1[93] = v2[220];
  v1[94] = v2[219];
  LODWORD(STACK[0x538]) = STACK[0x1A64];
  LODWORD(STACK[0x53C]) = STACK[0x1A60];
  LODWORD(STACK[0x540]) = STACK[0x1A5C];
  LODWORD(STACK[0x544]) = STACK[0x1A58];
  v1[97] = v2[216];
  v1[98] = v4;
  v1[99] = v2[223];
  v1[100] = v2[215];
  v1[101] = v2[214];
  LODWORD(STACK[0x570]) = STACK[0x1A3C];
  LODWORD(STACK[0x574]) = STACK[0x1A38];
  v1[103] = v2[212];
  LODWORD(STACK[0x584]) = STACK[0x1A2C];
  v1[105] = v2[210];
  v1[106] = v2[209];
  v1[107] = v2[208];
  LODWORD(STACK[0x5A4]) = STACK[0x1A0C];
  v1[109] = v2[206];
  v1[110] = v2[205];
  v1[111] = v2[204];
  LODWORD(STACK[0x5C4]) = STACK[0x19EC];
  v1[113] = v2[202];
  LODWORD(STACK[0x5D4]) = STACK[0x19DC];
  JUMPOUT(0x193219590);
}

uint64_t sub_19321C4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;

  return ((uint64_t (*)(void))(*(_QWORD *)(v66
                                        + 8
                                        * (int)((29
                                               * ((((a65 - v65) | (v65 - a65)) >> (((v65 + 37) | 0xD1) ^ 0xE8)) & 1)) ^ (v65 + 3362)))
                            + 2485027307
                            - ((v65 + 268861649) | 0x84180125)))();
}

uint64_t sub_19321C574@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W8>)
{
  uint64_t v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 4136) = 0;
  v7 = v4[334] - 1;
  *(_BYTE *)(v4[307] + a1 + v4[333]) = *(_BYTE *)(v4[305] + a1 + a2);
  return (*(uint64_t (**)(void))(v6 + 8 * ((213 * (v7 == 0)) ^ (v5 + a3 + 1863))))();
}

uint64_t sub_19321C5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v6 + (v11 & a4) + (v10 ^ a2) + v5) = *(_BYTE *)(v4 + (v11 & a4) + (v10 ^ a2) + a3);
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 == v10) * v9) ^ v8)))();
}

uint64_t sub_19321C614@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;

  *(_QWORD *)(v59 + 4136) = v58;
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((a1 + 1809944124) ^ ((a58 != v60 + a1 - 551) << 6))) - 8))();
}

uint64_t sub_19321C61C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;

  *(_QWORD *)(v59 + 3080) = v58;
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((a1 + 1809944124) ^ ((a58 != v60 + a1 - 551) << 6))) - 8))();
}

uint64_t sub_19321C624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 3648) = 0;
  v8 = v5[334] - 1;
  *(_BYTE *)(v5[305] + a2 + v5[333]) = *(_BYTE *)(v5[303] + a2 + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1782 * (v8 == 0)) ^ (v6 + v3 + 1633))) - 4))();
}

void sub_19321C68C()
{
  JUMPOUT(0x19321C648);
}

uint64_t sub_19321C694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;

  *(_QWORD *)(v67 + 3648) = v66;
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((v65 + 1809944124) ^ ((a65 != v68 + v65 - 551) << 6))) - 8))();
}

uint64_t sub_19321C6A0()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;

  v3 = STACK[0x1D9C];
  **(_DWORD **)(v1 + 2576) += ((1354 * (v2 ^ 0x941E81F5)) ^ 0x93D27319) + LODWORD(STACK[0x1D9C]);
  v0[298] = *(_QWORD *)(v1 + 2640);
  v0[299] = *(_QWORD *)(v1 + 2632);
  v0[300] = *(_QWORD *)(v1 + 2624);
  LODWORD(STACK[0xBA8]) = STACK[0x1DCC];
  LODWORD(STACK[0xBAC]) = STACK[0x1DC8];
  LODWORD(STACK[0xBB0]) = STACK[0x1DC4];
  LODWORD(STACK[0xBB4]) = STACK[0x1DC0];
  v0[303] = *(_QWORD *)(v1 + 2600);
  v0[304] = *(_QWORD *)(v1 + 2592);
  v0[305] = *(_QWORD *)(v1 + 2584);
  v0[306] = *(_QWORD *)(v1 + 2576);
  LODWORD(STACK[0xBD8]) = v3;
  LODWORD(STACK[0xBDC]) = STACK[0x1D98];
  v0[308] = *(_QWORD *)(v1 + 2560);
  v0[309] = *(_QWORD *)(v1 + 2552);
  LODWORD(STACK[0xBF4]) = STACK[0x1D84];
  v0[311] = *(_QWORD *)(v1 + 2536);
  v0[312] = *(_QWORD *)(v1 + 2528);
  v0[313] = *(_QWORD *)(v1 + 2520);
  LODWORD(STACK[0xC14]) = STACK[0x1D64];
  v0[315] = *(_QWORD *)(v1 + 2504);
  v0[316] = *(_QWORD *)(v1 + 2496);
  v0[317] = *(_QWORD *)(v1 + 2488);
  LODWORD(STACK[0xC34]) = STACK[0x1D44];
  v0[319] = *(_QWORD *)(v1 + 2472);
  LODWORD(STACK[0xC44]) = STACK[0x1D34];
  return sub_19321B928();
}

void sub_19321C7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a69;
  uint64_t a70;
  _QWORD *v70;
  _QWORD *v71;

  *(_DWORD *)(a70 + 8) = a69;
  *(_DWORD *)(a70 + 12) = 0;
  v70[389] = v71[330];
  v70[390] = v71[329];
  v70[391] = v71[328];
  LODWORD(STACK[0xE80]) = STACK[0x1DCC];
  LODWORD(STACK[0xE84]) = STACK[0x1DC8];
  LODWORD(STACK[0xE88]) = STACK[0x1DC4];
  LODWORD(STACK[0xE8C]) = STACK[0x1DC0];
  v70[394] = v71[325];
  v70[395] = v71[324];
  v70[396] = v71[323];
  v70[397] = v71[322];
  LODWORD(STACK[0xEB0]) = STACK[0x1D9C];
  LODWORD(STACK[0xEB4]) = STACK[0x1D98];
  v70[399] = v71[320];
  v70[400] = v71[319];
  LODWORD(STACK[0xECC]) = STACK[0x1D84];
  v70[402] = v71[317];
  v70[403] = v71[316];
  v70[404] = v71[315];
  LODWORD(STACK[0xEEC]) = STACK[0x1D64];
  v70[406] = v71[313];
  v70[407] = v71[312];
  v70[408] = v71[311];
  LODWORD(STACK[0xF0C]) = STACK[0x1D44];
  v70[410] = v71[309];
  LODWORD(STACK[0xF1C]) = STACK[0x1D34];
  v70[412] = a70;
  JUMPOUT(0x193219498);
}

uint64_t sub_19321C894@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 4144) = v3;
  v9 = v3 - 1;
  v10 = (a2 & (2 * v9)) + (v9 ^ a1);
  *(_BYTE *)(v6[307] + v10 + v6[336]) = *(_BYTE *)(v6[305] + v10 + v4);
  return (*(uint64_t (**)(void))(v8 + 8 * ((39 * (v9 != 0)) | (v7 + a3 + 1895))))();
}

uint64_t sub_19321C8E8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v2 - 1;
  v11 = (a2 & (2 * v10)) + (v10 ^ a1);
  *(_BYTE *)(v5 + v11 + v4) = *(_BYTE *)(v3 + v11 + v8);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 != 0) * v7) | v6)))();
}

uint64_t sub_19321C920@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;

  *(_QWORD *)(v59 + 4144) = v58;
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((a1 + 1809944124) ^ ((a58 != v60 + a1 - 551) << 6))) - 8))();
}

uint64_t sub_19321C92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *);

  *(_QWORD *)(v7 + 2720) = *(_QWORD *)(v7 + 1136);
  *(_QWORD *)(v7 + 2728) = *(_QWORD *)(v7 + 1120);
  *(_QWORD *)(v7 + 2736) = *(_QWORD *)(v7 + 1112);
  *(_QWORD *)(v7 + 2744) = *(_QWORD *)(v7 + 1096);
  *(_QWORD *)(v7 + 2752) = *(_QWORD *)(v7 + 1224);
  *(_QWORD *)(v7 + 2760) = *(_QWORD *)(v7 + 1080);
  *(_QWORD *)(v7 + 2768) = *(_QWORD *)(v7 + 1072);
  LODWORD(STACK[0x538]) = STACK[0x1A64];
  LODWORD(STACK[0x53C]) = STACK[0x1A60];
  *(_QWORD *)(v7 + 2776) = *(_QWORD *)(v7 + 1048);
  *(_QWORD *)(v7 + 2784) = *(_QWORD *)(v7 + 1032);
  LODWORD(STACK[0x540]) = STACK[0x1A5C];
  *(_QWORD *)(v7 + 2792) = *(_QWORD *)(v7 + 1016);
  *(_QWORD *)(v7 + 2800) = *(_QWORD *)(v7 + 984);
  *(_QWORD *)(v7 + 2808) = *(_QWORD *)(v7 + 976);
  LODWORD(STACK[0x544]) = STACK[0x1A58];
  *(_QWORD *)(v7 + 2816) = *(_QWORD *)(v7 + 968);
  *(_QWORD *)(v7 + 2824) = *(_QWORD *)(v7 + 960);
  *(_QWORD *)(v7 + 2832) = *(_QWORD *)(v7 + 952);
  *(_QWORD *)(v7 + 2840) = *(_QWORD *)(v7 + 1216);
  LODWORD(STACK[0x570]) = STACK[0x1A3C];
  *(_QWORD *)(v7 + 2848) = *(_QWORD *)(v7 + 928);
  LODWORD(STACK[0x574]) = STACK[0x1A38];
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(v9 + 8 * ((*(unsigned __int8 *)(v7 + 271) * ((v10 + 1809940325) ^ 0xE27)) ^ (v8 + v10 - 205))) - 4);
  LODWORD(STACK[0x584]) = STACK[0x1A9C];
  return v11(a1, a2, a3, a4, a5, a6, a7, &STACK[0x128D]);
}

uint64_t sub_19321CA34@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t (*v21)(void);

  v5 = *(_QWORD *)(v4 + 8 * a1);
  v6 = v3[140];
  v2[27] = v3[142];
  v2[28] = v6;
  v2[30] = v3[139];
  v2[111] = v3[153];
  v7 = v3[134];
  v2[32] = v3[135];
  v2[33] = v7;
  LODWORD(STACK[0xD20]) = STACK[0x1A60];
  v8 = v3[131];
  LODWORD(STACK[0xD24]) = STACK[0x1A5C];
  v9 = v3[127];
  v2[35] = v8;
  v2[36] = v9;
  v2[37] = v3[123];
  v2[118] = v5 - 4;
  LODWORD(STACK[0xD34]) = STACK[0x1A58];
  v10 = v3[120];
  v2[39] = v3[121];
  v2[40] = v10;
  v2[43] = v3[119];
  v2[124] = v3[152];
  LODWORD(STACK[0xD48]) = STACK[0x1A3C];
  v2[45] = v3[116];
  LODWORD(STACK[0xD4C]) = STACK[0x1A38];
  LODWORD(STACK[0xD5C]) = v1 + 1;
  LODWORD(STACK[0x1AA8]) = STACK[0xD5C];
  LODWORD(STACK[0x1AAC]) = STACK[0xD4C];
  v3[148] = v2[45];
  LODWORD(STACK[0x1ABC]) = STACK[0xD48];
  v3[154] = v2[124];
  v3[149] = v2[43];
  v11 = v2[39];
  v3[150] = v2[40];
  v3[156] = v11;
  LODWORD(STACK[0x1ADC]) = STACK[0xD34];
  v12 = v2[118];
  v3[159] = v2[37];
  v13 = v2[35];
  v3[160] = v2[36];
  LODWORD(STACK[0x1AFC]) = STACK[0xD24];
  v3[162] = v13;
  LODWORD(STACK[0x1B10]) = STACK[0xD20];
  v14 = v2[32];
  v3[163] = v2[33];
  v3[164] = v14;
  v15 = v2[111];
  v3[155] = v15;
  v16 = v2[30];
  v3[166] = v16;
  v18 = v2[27];
  v17 = v2[28];
  v3[167] = v17;
  v3[169] = v18;
  v19 = v3[338];
  v3[171] = v19;
  v3[172] = v12;
  v2[77] = v19;
  v20 = *(_DWORD *)(v19 + 12);
  v19 += 12;
  v3[175] = v19;
  LODWORD(STACK[0x1B14]) = v20;
  v2[71] = v18;
  v2[74] = v17;
  v2[75] = v16;
  v2[158] = v15;
  v2[79] = v3[164];
  v2[80] = v3[163];
  LODWORD(STACK[0xDF8]) = STACK[0x1AA8];
  LODWORD(STACK[0xDFC]) = STACK[0x1B10];
  v2[82] = v3[162];
  v2[83] = v19;
  LODWORD(STACK[0xE14]) = STACK[0x1AFC];
  v2[84] = v3[160];
  v2[86] = v3[159];
  v2[87] = v3[172];
  LODWORD(STACK[0xE34]) = STACK[0x1ADC];
  v2[90] = v3[156];
  v2[92] = v3[150];
  v2[93] = v3[149];
  v2[169] = v3[154];
  LODWORD(STACK[0xE54]) = STACK[0x1ABC];
  v2[94] = v3[148];
  LODWORD(STACK[0xE60]) = STACK[0x1AAC];
  v21 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                      + 8
                                      * ((6469 * (v20 < ((2 * (((a1 - 320) | 0x941) ^ 0x144)) ^ 0xFFFFEFC9))) ^ ((a1 - 320) | 0x941)))
                          - (((((a1 - 320) | 0x941) ^ 0x144u) - 1809942050) ^ 0x941E81FBLL));
  LODWORD(STACK[0xE64]) = 101330305;
  return v21();
}

uint64_t sub_19321DEB0()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  _BOOL4 v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = LODWORD(STACK[0x1B14]);
  v6 = v3[171];
  v7 = *(unsigned int *)(v6 + 8);
  v8 = v3[167];
  v2[46] = v3[169];
  v2[47] = v8;
  v2[50] = v3[166];
  v2[51] = v6;
  v9 = (v5 ^ 0x767D65EDEB9FBAF5) - 0x767D65ED275EB985 + ((2 * v5) & 0x1D73F75EALL);
  v2[135] = v3[155];
  v2[53] = v3[164];
  v10 = (v7 ^ 0x5F577BF7EFFB7F5ELL)
      + (((v0 - 4102) | 0x42u) ^ 0xA0A88408D4458260)
      + ((v7 << (((v0 - 125) | 0x42) ^ 0xF6u)) & 0x1DFF6FEBCLL);
  v11 = v3[163];
  LODWORD(STACK[0xD7C]) = STACK[0x1AA8];
  v12 = (v9 < 0xC441016C) ^ (v10 < 0xC441016C);
  v13 = v9 > v10;
  LODWORD(STACK[0xD9C]) = STACK[0x1B10];
  if (v12)
    v14 = v9 < 0xC441016C;
  else
    v14 = v13;
  v15 = v3[162];
  v2[55] = v11;
  v2[56] = v15;
  v16 = v3[175];
  LODWORD(STACK[0xDA8]) = STACK[0x1AFC];
  v17 = v3[160];
  v2[58] = v16;
  v2[59] = v17;
  v2[60] = v3[159];
  v18 = v3[172];
  LODWORD(STACK[0xDAC]) = STACK[0x1ADC];
  v19 = v3[156];
  v2[62] = v18;
  v2[63] = v19;
  v2[66] = v3[150];
  v2[68] = v3[149];
  v2[146] = v3[154];
  LODWORD(STACK[0xDCC]) = STACK[0x1ABC];
  v2[69] = v3[148];
  LODWORD(STACK[0xDD0]) = STACK[0x1AAC];
  LODWORD(STACK[0xDD4]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((2 * v14) | (4 * v14)) ^ v0)) - 8))();
}

uint64_t sub_19321E064@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(v3 + 8 * a1);
  v1[97] = *(_QWORD *)(v2 + 1352);
  v1[99] = *(_QWORD *)(v2 + 1336);
  v1[101] = *(_QWORD *)(v2 + 1328);
  v1[103] = *(_QWORD *)(v2 + 1368);
  v1[181] = *(_QWORD *)(v2 + 1240);
  v1[105] = *(_QWORD *)(v2 + 1312);
  v1[106] = *(_QWORD *)(v2 + 1304);
  LODWORD(STACK[0xE80]) = STACK[0x1AA8];
  LODWORD(STACK[0xE84]) = STACK[0x1B10];
  v1[190] = v4;
  v1[107] = *(_QWORD *)(v2 + 1400);
  LODWORD(STACK[0xE88]) = STACK[0x1AFC];
  v1[109] = *(_QWORD *)(v2 + 1280);
  v1[110] = *(_QWORD *)(v2 + 1272);
  v1[113] = *(_QWORD *)(v2 + 1376);
  LODWORD(STACK[0xE8C]) = STACK[0x1ADC];
  v1[115] = *(_QWORD *)(v2 + 1248);
  v1[116] = *(_QWORD *)(v2 + 1184);
  LODWORD(STACK[0xEB0]) = STACK[0x1AAC];
  LODWORD(STACK[0xEB4]) = 4;
  v1[119] = *(_QWORD *)(v2 + 1368);
  v5 = (a1 + 1068);
  *(_QWORD *)(v2 + 1600) = v1[119];
  v6 = LODWORD(STACK[0xEB4]);
  LODWORD(STACK[0x1B94]) = STACK[0xEB0];
  *(_QWORD *)(v2 + 1616) = v1[116];
  *(_QWORD *)(v2 + 1640) = v1[115];
  LODWORD(STACK[0x1BB4]) = STACK[0xE8C];
  *(_QWORD *)(v2 + 1648) = v1[113];
  *(_QWORD *)(v2 + 1664) = v1[110];
  *(_QWORD *)(v2 + 1672) = v1[109];
  LODWORD(STACK[0x1BC8]) = STACK[0xE88];
  *(_QWORD *)(v2 + 1680) = v1[107];
  v7 = v1[190];
  LODWORD(STACK[0x1BCC]) = STACK[0xE84];
  LODWORD(STACK[0x1BF0]) = STACK[0xE80];
  *(_QWORD *)(v2 + 1696) = v1[106];
  *(_QWORD *)(v2 + 1712) = v1[105];
  *(_QWORD *)(v2 + 1448) = v1[181];
  *(_QWORD *)(v2 + 1728) = v1[103];
  *(_QWORD *)(v2 + 1752) = v1[101];
  *(_QWORD *)(v2 + 1760) = v1[99];
  *(_QWORD *)(v2 + 1768) = v1[97];
  *(_QWORD *)(v2 + 1776) = v7;
  v8 = *(_QWORD *)(v2 + 1600);
  v9 = *(unsigned int *)(v8 + 8);
  *(_QWORD *)(v2 + 1784) = v8 + 8;
  v10 = (v6 ^ 0xFEFFBF56DFD7F79FLL) + ((2 * v6) & 0x1BFAFEF3ELL) + 0x10040A920280861 + v9;
  *(_QWORD *)(v2 + 1544) = v10;
  *(_BYTE *)(v2 + 1007) = v10 < v5 + 4294966117;
  v1[192] = v9;
  v11 = v1[192];
  *(_QWORD *)(v2 + 1632) = 2 * v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((4 * ((v11 & 0xFFFFFFFF80000000) != 0)) | (((v11 & 0xFFFFFFFF80000000) != 0) << 6) | v5))
                            - ((v5 + 1422)
                             + ((v5 + 1277) ^ 0xFFFFFFFFFFFFFC77))))();
}

uint64_t sub_19321E110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);

  v14 = STACK[0x854];
  LODWORD(STACK[0x16A4]) = STACK[0x850];
  v9[480] = v10[458];
  LODWORD(STACK[0x16A8]) = STACK[0x82C];
  *(_QWORD *)(a8 + 235) = v10[457];
  v9[482] = v10[456];
  v9[483] = v10[455];
  v15 = v10[454];
  LODWORD(STACK[0x16AC]) = STACK[0x828];
  v9[486] = v10[453];
  v9[488] = v10[452];
  v16 = v10[451];
  LODWORD(STACK[0x16D4]) = STACK[0x824];
  v9[489] = v10[450];
  v9[490] = v10[449];
  v17 = STACK[0x820];
  LODWORD(STACK[0x16E4]) = STACK[0x804];
  v18 = v10[448];
  v9[491] = v18;
  v19 = v10[447];
  v9[494] = v19;
  v20 = v10[446];
  v21 = v10[445];
  v9[495] = v21;
  v22 = v10[444];
  v9[497] = v22;
  v23 = v10[443];
  v10[459] = v10[442];
  v10[460] = v23;
  v10[461] = v22;
  v10[462] = v21;
  v10[463] = v20;
  v10[464] = v19;
  v10[465] = v18;
  LODWORD(STACK[0x86C]) = STACK[0x16E4];
  LODWORD(STACK[0x88C]) = v17;
  v10[466] = v9[490];
  v10[467] = v9[489];
  LODWORD(STACK[0x89C]) = STACK[0x16D4];
  v10[468] = v16;
  v10[469] = v9[488];
  v10[470] = v9[486];
  LODWORD(STACK[0x8AC]) = STACK[0x16AC];
  v10[471] = v15;
  v10[472] = v9[483];
  v10[473] = v9[482];
  v10[474] = *(_QWORD *)(a8 + 235);
  LODWORD(STACK[0x8D0]) = STACK[0x16A8];
  v10[475] = v9[480];
  LODWORD(STACK[0x8D4]) = STACK[0x16A4];
  v24 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((3869 * (v14 == v8)) ^ (v11 + v13 - 478)))
                          - (v11 + v13 - 478)
                          + 63);
  LODWORD(STACK[0x8D8]) = v14;
  return v24();
}

void sub_19321E274(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(v9 + 8 * a2);
  v8[172] = a8;
  v8[173] = v8[497];
  v8[175] = v8[495];
  v8[176] = v8[494];
  v8[177] = v8[491];
  LODWORD(STACK[0xFE0]) = STACK[0x16E4];
  v8[179] = v8[490];
  v8[180] = v8[489];
  LODWORD(STACK[0xFE4]) = STACK[0x16D4];
  v8[183] = v8[488];
  v8[185] = v8[486];
  LODWORD(STACK[0x1000]) = STACK[0x16AC];
  v8[249] = v10 + ((a2 - 37) | 0x508u) - 1338;
  v8[186] = v8[483];
  v8[187] = v8[482];
  v8[264] = *(_QWORD *)(a1 + 235);
  LODWORD(STACK[0x1004]) = STACK[0x16A8];
  v8[191] = v8[480];
  LODWORD(STACK[0x1008]) = STACK[0x16A4];
  JUMPOUT(0x19321D6BCLL);
}

uint64_t sub_19321E328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  LODWORD(STACK[0x1704]) = STACK[0x8D8];
  LODWORD(STACK[0x1718]) = STACK[0x8D4];
  v8[499] = v9[475];
  LODWORD(STACK[0x171C]) = STACK[0x8D0];
  v13 = v9[474];
  v8[500] = v9[473];
  v8[502] = v9[472];
  v8[503] = v9[471];
  LODWORD(STACK[0x1738]) = STACK[0x8AC];
  v8[504] = v9[470];
  v8[507] = v9[469];
  v8[508] = v9[468];
  LODWORD(STACK[0x173C]) = STACK[0x89C];
  v8[511] = v9[467];
  v8[513] = v9[466];
  LODWORD(STACK[0x1740]) = STACK[0x88C];
  LODWORD(STACK[0x1744]) = STACK[0x86C];
  v8[515] = v9[465];
  v8[519] = v9[464];
  v14 = v9[463];
  v9[4] = v13;
  v9[5] = v14;
  v8[520] = v9[462];
  *(_QWORD *)(a8 + 3) = v9[461];
  *(_QWORD *)(a8 + 19) = v9[460];
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v11
                                      + 8
                                      * (int)(((*(unsigned __int8 *)(v10 + 2) | *(_BYTE *)(v10 + 3) & 1 | (LODWORD(STACK[0x1704]) != (v12 ^ 0x921455EC)))
                                             * ((97 * (v12 ^ 0x941E81FC)) ^ 0x424)) ^ (v12 + 1809944030)))
                          - 4);
  *(_QWORD *)(a8 + 35) = v9[459];
  return v15();
}

uint64_t sub_19321E464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X7>, int a6@<W8>)
{
  int v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = STACK[0x1718];
  v11 = (a6 - 499611832) & 0x1DC77DBF;
  LODWORD(STACK[0x98C]) = STACK[0x1718];
  v12 = STACK[0x1704];
  v13 = LODWORD(STACK[0x1704]) == ((a6 + 467614162) & 0xE420CFAF ^ (v6 + 1435));
  v8[493] = v7[499];
  v14 = STACK[0x171C];
  LODWORD(STACK[0x990]) = STACK[0x171C];
  v8[494] = v8[4];
  v8[495] = v7[500];
  v8[496] = v7[502];
  v8[497] = v7[503];
  v15 = STACK[0x1738];
  LODWORD(STACK[0x994]) = STACK[0x1738];
  v8[498] = v7[504];
  v8[499] = v7[507];
  v8[500] = v7[508];
  LODWORD(STACK[0x9B8]) = STACK[0x173C];
  v8[501] = v7[511];
  v8[502] = v7[513];
  v16 = STACK[0x1740];
  LODWORD(STACK[0x9BC]) = STACK[0x1740];
  v17 = STACK[0x1744];
  LODWORD(STACK[0x9D4]) = STACK[0x1744];
  v8[503] = v7[515];
  v8[504] = v7[519];
  v18 = v7[520];
  v8[506] = v18;
  v19 = *(_QWORD *)(a5 + 35);
  v8[509] = v19;
  v8[559] = v19;
  v20 = *(_QWORD *)(a5 + 19);
  v8[508] = v20;
  v8[560] = v20;
  v21 = *(_QWORD *)(a5 + 3);
  v8[507] = v21;
  v8[561] = v21;
  v8[562] = v18;
  v23 = v8[4];
  v22 = v8[5];
  v8[505] = v22;
  v7[21] = v22;
  v8[563] = v7[519];
  v8[564] = v7[515];
  LODWORD(STACK[0xB5C]) = v17;
  LODWORD(STACK[0xB7C]) = v16;
  v8[565] = v7[513];
  v8[566] = v7[511];
  v8[567] = v7[508];
  v8[568] = v7[507];
  v8[569] = v7[504];
  v24 = v13;
  LODWORD(STACK[0xB8C]) = v15;
  v8[570] = v7[503];
  v8[571] = v7[502];
  v8[572] = v7[500];
  v7[29] = v23;
  LODWORD(STACK[0xBA8]) = v14;
  v8[573] = v7[499];
  LODWORD(STACK[0xBAC]) = v10;
  v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((650 * v24) ^ a6))
                                                                            - v11
                                                                            + 2351);
  LODWORD(STACK[0xBB0]) = v12;
  return v25(a1, a2, a3, a4, v11);
}

uint64_t sub_19321E620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = v10[338];
  *(_QWORD *)(a8 + 43) = v12;
  v13 = *(_DWORD *)(v12 + 12);
  v12 += 12;
  v14 = (v8 + 1288);
  *(_QWORD *)(a8 + 59) = v12;
  v15 = ((v14 + 0x6EA7EF7FF7AE3043) ^ v8 ^ 0x822u ^ (unint64_t)v13) + v9[468] + ((2 * v13) & 0x1EF5C6AFELL);
  v10[11] = v15;
  v10[559] = *(_QWORD *)(a8 + 35);
  v10[560] = *(_QWORD *)(a8 + 19);
  v10[561] = *(_QWORD *)(a8 + 3);
  v10[562] = v9[520];
  v16 = v10[4];
  v9[21] = v10[5];
  v10[563] = v9[519];
  v10[564] = v12;
  LODWORD(STACK[0xB5C]) = STACK[0x1744];
  LODWORD(STACK[0xB7C]) = STACK[0x1740];
  v10[565] = v9[513];
  v10[566] = v9[511];
  v10[567] = v9[508];
  v10[568] = *(_QWORD *)(a8 + 43);
  v10[569] = v9[504];
  LODWORD(STACK[0xB8C]) = STACK[0x1738];
  v10[570] = v9[503];
  v10[571] = v9[502];
  v10[572] = v9[500];
  v9[29] = v16;
  LODWORD(STACK[0xBA8]) = STACK[0x171C];
  v10[573] = v9[499];
  LODWORD(STACK[0xBAC]) = STACK[0x1718];
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11
                                                                                        + 8
                                                                                        * ((3137 * (v15 < 0xFFFFFFFB)) ^ v8))
                                                                            - 4);
  LODWORD(STACK[0xBB0]) = 101330305;
  return v17(a1, a2, a3, a4, v14);
}

uint64_t sub_19321E75C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BOOL4 v10;
  uint64_t v11;

  v5 = *(unsigned int *)(*(_QWORD *)(a1 + 43) + 8);
  v6 = v3[11];
  v3[476] = *(_QWORD *)(a1 + 35);
  v7 = v6 + 1594010638;
  v3[477] = *(_QWORD *)(a1 + 19);
  v3[478] = *(_QWORD *)(a1 + 3);
  v8 = (a2 ^ 0x941E8DFE)
     + (unint64_t)(a2 ^ 0xC46u)
     + (v5 ^ 0xEEBEEFFCEBFEFB0DLL)
     + ((2 * v5) & 0x1D7FDF61ALL)
     + 0x11411002DEE52EB7;
  v10 = v8 > 0x5F02AC09 && v7 > v8;
  v3[479] = v2[520];
  v11 = v3[4];
  v3[480] = v3[5];
  v3[481] = v2[519];
  v3[482] = *(_QWORD *)(a1 + 59);
  LODWORD(STACK[0x8DC]) = STACK[0x1744];
  LODWORD(STACK[0x900]) = STACK[0x1740];
  v3[483] = v2[513];
  v3[484] = v2[511];
  LODWORD(STACK[0x904]) = STACK[0x173C];
  v3[485] = v2[508];
  v3[486] = *(_QWORD *)(a1 + 43);
  v3[487] = v2[504];
  LODWORD(STACK[0x91C]) = STACK[0x1738];
  v3[488] = v2[503];
  v3[489] = v2[502];
  v3[490] = v2[500];
  v3[491] = v11;
  LODWORD(STACK[0x93C]) = STACK[0x171C];
  v3[492] = v2[499];
  LODWORD(STACK[0x95C]) = STACK[0x1718];
  LODWORD(STACK[0x968]) = 101372955;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((28 * v10) ^ a2)) - 12))();
}

uint64_t sub_19321E8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v12 = *(_QWORD *)(v11 + 8 * v8);
  v9[97] = *(_QWORD *)(a8 + 35);
  v9[99] = *(_QWORD *)(a8 + 19);
  v9[101] = *(_QWORD *)(a8 + 3);
  v9[103] = v9[520];
  v9[181] = *(_QWORD *)(v10 + 40);
  v9[105] = v9[519];
  v9[106] = *(_QWORD *)(a8 + 59);
  LODWORD(STACK[0xE80]) = STACK[0x1744];
  LODWORD(STACK[0xE84]) = STACK[0x1740];
  v9[190] = v12;
  v9[107] = v9[511];
  LODWORD(STACK[0xE88]) = STACK[0x173C];
  v9[109] = v9[508];
  v9[110] = *(_QWORD *)(a8 + 43);
  v9[113] = v9[504];
  LODWORD(STACK[0xE8C]) = STACK[0x1738];
  v9[115] = v9[503];
  v9[116] = v9[499];
  LODWORD(STACK[0xEB0]) = STACK[0x1718];
  LODWORD(STACK[0xEB4]) = STACK[0x1460];
  v9[119] = *(_QWORD *)(a8 + 43);
  v13 = 13 * (v8 ^ 0x22) - 239;
  *(_QWORD *)(v10 + 1600) = v9[119];
  v14 = LODWORD(STACK[0xEB4]);
  LODWORD(STACK[0x1B94]) = STACK[0xEB0];
  *(_QWORD *)(v10 + 1616) = v9[116];
  *(_QWORD *)(v10 + 1640) = v9[115];
  LODWORD(STACK[0x1BB4]) = STACK[0xE8C];
  *(_QWORD *)(v10 + 1648) = v9[113];
  *(_QWORD *)(v10 + 1664) = v9[110];
  *(_QWORD *)(v10 + 1672) = v9[109];
  LODWORD(STACK[0x1BC8]) = STACK[0xE88];
  *(_QWORD *)(v10 + 1680) = v9[107];
  v15 = v9[190];
  LODWORD(STACK[0x1BCC]) = STACK[0xE84];
  LODWORD(STACK[0x1BF0]) = STACK[0xE80];
  *(_QWORD *)(v10 + 1696) = v9[106];
  *(_QWORD *)(v10 + 1712) = v9[105];
  *(_QWORD *)(v10 + 1448) = v9[181];
  *(_QWORD *)(v10 + 1728) = v9[103];
  *(_QWORD *)(v10 + 1752) = v9[101];
  *(_QWORD *)(v10 + 1760) = v9[99];
  *(_QWORD *)(v10 + 1768) = v9[97];
  *(_QWORD *)(v10 + 1776) = v15;
  v16 = *(_QWORD *)(v10 + 1600);
  v17 = *(unsigned int *)(v16 + 8);
  *(_QWORD *)(v10 + 1784) = v16 + 8;
  v18 = (v14 ^ 0xFEFFBF56DFD7F79FLL) + ((2 * v14) & 0x1BFAFEF3ELL) + 0x10040A920280861 + v17;
  *(_QWORD *)(v10 + 1544) = v18;
  *(_BYTE *)(v10 + 1007) = v18 < v13 + 4294966117;
  v9[192] = v17;
  v19 = v9[192];
  *(_QWORD *)(v10 + 1632) = 2 * v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (int)((4 * ((v19 & 0xFFFFFFFF80000000) != 0)) | (((v19 & 0xFFFFFFFF80000000) != 0) << 6) | v13))
                            - ((v13 + 1422)
                             + ((v13 + 1277) ^ 0xFFFFFFFFFFFFFC77))))();
}

uint64_t sub_19321E970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);

  v13 = STACK[0x968];
  LODWORD(STACK[0x1794]) = STACK[0x95C];
  *(_QWORD *)(a8 + 75) = v10[492];
  LODWORD(STACK[0x17A4]) = STACK[0x93C];
  v10[22] = v10[491];
  *(_QWORD *)(a8 + 83) = v10[490];
  *(_QWORD *)(a8 + 99) = v10[489];
  *(_QWORD *)(a8 + 115) = v10[488];
  LODWORD(STACK[0x17B4]) = STACK[0x91C];
  *(_QWORD *)(a8 + 131) = v10[487];
  *(_QWORD *)(a8 + 139) = v10[486];
  *(_QWORD *)(a8 + 155) = v10[485];
  LODWORD(STACK[0x17D4]) = STACK[0x904];
  *(_QWORD *)(a8 + 171) = v10[484];
  *(_QWORD *)(a8 + 179) = v10[483];
  LODWORD(STACK[0x17E4]) = STACK[0x900];
  LODWORD(STACK[0x17FC]) = STACK[0x8DC];
  v14 = v10[482];
  *(_QWORD *)(a8 + 195) = v14;
  v15 = v10[481];
  *(_QWORD *)(a8 + 211) = v15;
  v16 = v10[480];
  v10[37] = v16;
  v17 = v10[479];
  *(_QWORD *)(a8 + 243) = v17;
  v18 = v10[478];
  *(_QWORD *)(a8 + 251) = v18;
  v19 = v10[477];
  *v10 = v19;
  v20 = v10[476];
  v10[2] = v20;
  v10[559] = v20;
  v10[560] = v19;
  v10[561] = v18;
  v10[562] = v17;
  *(_QWORD *)(v9 + 168) = v16;
  v10[563] = v15;
  v10[564] = v14;
  LODWORD(STACK[0xB5C]) = STACK[0x17FC];
  LODWORD(STACK[0xB7C]) = STACK[0x17E4];
  v10[565] = *(_QWORD *)(a8 + 179);
  v10[566] = *(_QWORD *)(a8 + 171);
  v10[567] = *(_QWORD *)(a8 + 155);
  v10[568] = *(_QWORD *)(a8 + 139);
  v10[569] = *(_QWORD *)(a8 + 131);
  LODWORD(STACK[0xB8C]) = STACK[0x17B4];
  v10[570] = *(_QWORD *)(a8 + 115);
  v10[571] = *(_QWORD *)(a8 + 99);
  v10[572] = *(_QWORD *)(a8 + 83);
  *(_QWORD *)(v9 + 232) = v10[22];
  LODWORD(STACK[0xBA8]) = STACK[0x17A4];
  v10[573] = *(_QWORD *)(a8 + 75);
  LODWORD(STACK[0xBAC]) = STACK[0x1794];
  v21 = (uint64_t (*)(void))(*(_QWORD *)(v12
                                      + 8
                                      * ((914 * (v13 == ((3 * (v8 ^ 0x941E82E6)) ^ 0xF92) + 101371258)) ^ (v11 + v8 + 514)))
                          - 4);
  LODWORD(STACK[0xBB0]) = v13;
  return v21();
}

uint64_t sub_19321EB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  unsigned int v13;
  uint64_t (*v14)(void);

  v11 = **(_QWORD **)(a8 + 139);
  v12 = *(_DWORD **)(a8 + 195);
  v13 = ((2 * *v12) & 0xD517FB78) + ((v8 + 1804) ^ 0xEA8BF011 ^ *v12) + 359924292;
  *(_BYTE *)(v11 + v13) = *(_BYTE *)(a8 + 154);
  *(_BYTE *)(v11 + v13 + 1) = *(_BYTE *)(a8 + 169);
  *(_BYTE *)(v11 + v13 + 2) = *(_BYTE *)(a8 + 170);
  *(_BYTE *)(v11 + v13 + 3) = *(_BYTE *)(a8 + 194);
  LODWORD(v11) = ((2 * v8) ^ 0x2DC) + *v12 - 3994;
  LODWORD(STACK[0x1810]) = v11;
  *v12 = v11;
  LODWORD(STACK[0x98C]) = STACK[0x1794];
  v9[493] = *(_QWORD *)(a8 + 75);
  LODWORD(STACK[0x990]) = STACK[0x17A4];
  v9[494] = v9[22];
  v9[495] = *(_QWORD *)(a8 + 83);
  v9[496] = *(_QWORD *)(a8 + 99);
  v9[497] = *(_QWORD *)(a8 + 115);
  LODWORD(STACK[0x994]) = STACK[0x17B4];
  v9[498] = *(_QWORD *)(a8 + 131);
  v9[499] = *(_QWORD *)(a8 + 139);
  v9[500] = *(_QWORD *)(a8 + 155);
  LODWORD(STACK[0x9B8]) = STACK[0x17D4];
  v9[501] = *(_QWORD *)(a8 + 171);
  v9[502] = *(_QWORD *)(a8 + 179);
  LODWORD(STACK[0x9BC]) = STACK[0x17E4];
  LODWORD(STACK[0x9D4]) = STACK[0x17FC];
  v9[503] = *(_QWORD *)(a8 + 195);
  v9[504] = *(_QWORD *)(a8 + 211);
  v9[505] = v9[37];
  v9[506] = *(_QWORD *)(a8 + 243);
  v9[507] = *(_QWORD *)(a8 + 251);
  v9[508] = *v9;
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((2297 * ((STACK[0x10B3] & 1) == 0)) ^ v8)) - 4);
  v9[509] = v9[2];
  return v14();
}

uint64_t sub_19321EC84@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t *v57;
  int v58;
  uint64_t *v59;
  _DWORD *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  unsigned int v69;
  _BOOL4 v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v58 = STACK[0x1810];
  LODWORD(STACK[0x96C]) = STACK[0x1810];
  LODWORD(STACK[0x988]) = 872356362;
  v59 = *(uint64_t **)(a1 + 139);
  v60 = *(_DWORD **)(a1 + 195);
  v61 = LOBYTE(STACK[0x5EB]);
  v62 = LODWORD(STACK[0x145C]);
  v78 = *(_QWORD *)(a1 + 131);
  v77 = *(_QWORD *)(a1 + 155);
  LODWORD(a45) = STACK[0x17D4];
  v76 = *(_QWORD *)(a1 + 171);
  v75 = *(_QWORD *)(a1 + 179);
  LODWORD(a42) = STACK[0x17E4];
  LODWORD(a41) = STACK[0x17FC];
  v74 = *(_QWORD *)(a1 + 211);
  v73 = v57[37];
  v72 = *(_QWORD *)(a1 + 243);
  v63 = *(_QWORD *)(a1 + 251);
  v64 = *v57;
  v65 = v57[2];
  v66 = *v59;
  v67 = *(_DWORD *)(a21 + 4 * (((a2 - 2301) ^ 0xCC00E357) + 872356362));
  v68 = v67 + 451170848 - ((2 * v67) & 0x35C8A440);
  v69 = ((2 * v58) & 0x379FFFBA) + (v58 ^ 0x9BCFFFDD) + 1680867363;
  *(_BYTE *)(*v59 + v69) = HIBYTE(v68) ^ 0x1A;
  *(_BYTE *)(v66 + v69 + 1) = BYTE2(v68) ^ 0xE4;
  *(_BYTE *)(v66 + v69 + 2) = (((BYTE1(v68) ^ 0x52) - 2 * ((BYTE1(v68) ^ 0x52) & 7 ^ BYTE1(v68) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v66 + v69 + 3) = v68 ^ 0x20;
  *v60 += 4;
  v70 = v62 > 0x94E369DE;
  if (v61)
    v70 = v61;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a57 + 8 * ((8143 * !v70) ^ a2)) - 4))(v62, v63, v64, v65, 3422610263, 2614099933, 933232570, 26, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           v72,
           v73,
           v74,
           a41,
           a42,
           v75,
           v76,
           a45,
           v77,
           v78);
}

uint64_t sub_19321EE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),void (*a23)(uint64_t),uint64_t (*a24)(uint64_t),int *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,int a49,uint64_t a50,uint64_t a51,int a52,uint64_t a53,uint64_t a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,uint64_t a61,uint64_t a62,int a63)
{
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  _QWORD *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  unint64_t v82;
  int v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  int v87;
  uint64_t v88;

  LODWORD(STACK[0x988]) = v65;
  LODWORD(STACK[0x96C]) = v66;
  LODWORD(STACK[0x98C]) = a63;
  v67[493] = a61;
  LODWORD(STACK[0x990]) = a60;
  v67[494] = a59;
  v67[495] = a58;
  v67[496] = a57;
  v67[497] = a56;
  LODWORD(STACK[0x994]) = a55;
  v67[498] = a54;
  v67[499] = v64;
  v67[500] = a53;
  LODWORD(STACK[0x9B8]) = a52;
  v67[501] = a51;
  v67[502] = a50;
  LODWORD(STACK[0x9BC]) = a49;
  LODWORD(STACK[0x9D4]) = a47;
  v67[503] = v63;
  v67[504] = a46;
  v67[505] = a45;
  v67[506] = a44;
  v67[507] = a2;
  v67[508] = a3;
  v67[509] = a4;
  v71 = v67[508];
  v67[6] = v67[509];
  v67[7] = v71;
  v67[9] = v67[507];
  v72 = v67[506];
  v67[48] = v67[505];
  v73 = v67[504];
  v67[12] = v72;
  v67[13] = v73;
  v74 = v67[503];
  LODWORD(STACK[0x1814]) = STACK[0x9D4];
  LODWORD(STACK[0x1818]) = STACK[0x9BC];
  v75 = v67[502];
  v67[15] = v74;
  v67[16] = v75;
  v67[17] = v67[501];
  LODWORD(STACK[0x181C]) = STACK[0x9B8];
  v67[19] = v67[500];
  v67[21] = v67[499];
  v76 = v67[498];
  LODWORD(STACK[0x187C]) = STACK[0x994];
  v77 = v67[497];
  v67[23] = v76;
  v67[24] = v77;
  v78 = v67[495];
  v67[27] = v67[496];
  v67[28] = v78;
  v67[60] = v67[494];
  LODWORD(STACK[0x189C]) = STACK[0x990];
  v79 = v67[493];
  LODWORD(STACK[0x18BC]) = STACK[0x98C];
  v80 = v67[338];
  v67[29] = v79;
  v67[30] = v80;
  v67[337] = 0;
  LODWORD(STACK[0x50C]) = 0;
  a23(a26);
  v81 = *a25;
  v82 = *(_QWORD *)v80;
  v83 = *(_DWORD *)(v80 + 12);
  v67[31] = v80 + 12;
  v84 = STACK[0xD50];
  v85 = STACK[0xD60];
  v86 = 597255653 * ((((v70 - 144) | 0x5048ABE0) - ((v70 - 144) & 0x5048ABE0)) ^ 0x5943D479);
  STACK[0x2958] = v82;
  STACK[0x2968] = v85;
  STACK[0x2948] = v84;
  *(_DWORD *)(v70 - 128) = (v81 ^ 0xF77DEFFB)
                         - v86
                         + 765196221
                         + (((v68 ^ 0x3AB) - 285485123 + 163 * (v68 ^ 0x6A4)) & (2 * v81));
  *(_DWORD *)(v70 - 140) = v86 + 1581691396 + v83 - ((2 * v83) & 0xBC8D6408);
  *(_DWORD *)(v70 - 112) = v86 + (v68 ^ 0xB0C) - 261;
  a22(v70 - 144);
  v87 = *(_DWORD *)(v70 - 144);
  v88 = a24(a26);
  LODWORD(STACK[0x9F4]) = v87;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v69 + 8 * ((928 * (v87 == 663729217)) ^ v68 ^ 0xB0C)) - 12))(v88);
}

uint64_t sub_19321F114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t), unsigned int *a17, uint64_t a18, uint64_t (*a19)(_QWORD, uint64_t, uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int a64;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  int v72;
  unint64_t v73;

  v69 = *(_QWORD *)(v67 + 8 * v64);
  v70 = (v68 - 144) | 0xA40AC1260FF5F382;
  *(_QWORD *)(v65 + 520) = v66;
  *(_QWORD *)(v65 + 528) = v69
                         - 486723911
                         * ((((v68 - 144) | 0x5BF53ED9F00A0C7DLL) - v70 - 0x5BF53ED9F00A0C7ELL) ^ 0x694BE54840C06CE7)
                         - 8;
  *(_DWORD *)(v68 - 128) = v64 - 71465943 - 486723911 * ((((v68 - 144) | 0xF00A0C7D) - v70 + 267776898) ^ 0x40C06CE7);
  a16(v68 - 144);
  v71 = a19(*a17, a18, a25);
  v72 = ((2 * v71) & 0x1CB5FAF6) + (v71 ^ 0xE5AFD7B);
  v73 = 486723911
      * ((((v68 - 144) | 0x7EBFB95A74789A4DLL) - ((v68 - 144) | 0x814046A58B8765B2) - 0x7EBFB95A74789A4ELL) ^ 0x4C0162CBC4B2FAD7);
  *(_QWORD *)(v65 + 528) = *(_QWORD *)(v67 + 8 * (v64 & 0xA1FC36A)) - v73 - 8;
  *(_DWORD *)(v68 - 128) = v64 - 71465943 - v73;
  *(_QWORD *)(v65 + 520) = v66;
  a16(v68 - 144);
  return ((uint64_t (*)(_QWORD, unint64_t *))(*(_QWORD *)(v67
                                                                         + 8
                                                                         * (v64 ^ 0x625 ^ (5381
                                                                                         * (v72 == 1511 * (v64 ^ 0x32D)
                                                                                                 + 240841133))))
                                                             - 4))(a64, &STACK[0x128D]);
}

uint64_t sub_19321F2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),void (*a23)(uint64_t),void (*a24)(uint64_t),_DWORD *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,uint64_t a63)
{
  unsigned int a64;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  unsigned int v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  int v74;

  a23(a26);
  v68 = **(_DWORD **)(v65 + 248);
  v69 = *a25 ^ 0x7F5BFFFF;
  v70 = (2 * *a25) & 0xFEB7FFFE;
  v71 = *(_QWORD *)(v64 + 2832);
  v72 = *(_QWORD *)(v64 + 2848);
  v73 = 597255653 * ((((v67 - 144) | 0x729DB4A) - (v67 - 144) + ((v67 - 144) & 0xF8D624B0)) ^ 0xE22A4D3);
  STACK[0x2958] = **(_QWORD **)(v65 + 240);
  *(_DWORD *)(v67 - 112) = v73 + a62 - 1315651097;
  STACK[0x2948] = v71;
  *(_DWORD *)(v67 - 140) = (a62 ^ 0x102DF8C5) + v73 + v68 - ((2 * v68) & 0xBC8D6408);
  *(_DWORD *)(v67 - 128) = v69 - v73 + v70 - 1514281031;
  STACK[0x2968] = v72;
  a22(v67 - 144);
  v74 = *(_DWORD *)(v67 - 144);
  a24(a26);
  LODWORD(STACK[0x9F4]) = v74;
  return ((uint64_t (*)(_QWORD, unint64_t *))(*(_QWORD *)(v66
                                                                         + 8
                                                                         * (((8
                                                                            * (LODWORD(STACK[0x9F4]) == (a62 ^ 0x4E6B4FCB) + 395292468)) | (32 * (LODWORD(STACK[0x9F4]) == (a62 ^ 0x4E6B4FCB) + 395292468))) ^ a62 ^ 0x4E6B4FCB))
                                                             - ((2 * (a62 ^ 0x4E6B4FCBu)) ^ 0xA10)))(a64, &STACK[0x128D]);
}

void sub_19321F448(int a1@<W8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2[7];
  STACK[0x230] = v2[6];
  STACK[0x238] = v4;
  v1[1] = v2[9];
  v1[88] = v2[48];
  v5 = v2[13];
  v1[3] = v2[12];
  v1[4] = v5;
  LODWORD(STACK[0xCAC]) = STACK[0x1814];
  LODWORD(STACK[0xCCC]) = STACK[0x1818];
  v6 = v2[16];
  v1[6] = v2[15];
  v1[7] = v6;
  v1[8] = v2[17];
  LODWORD(STACK[0xCEC]) = STACK[0x181C];
  v7 = v2[21];
  v1[10] = v2[19];
  v1[11] = v7;
  v8 = v2[24];
  v1[14] = v2[23];
  LODWORD(STACK[0xCF8]) = STACK[0x187C];
  v2[339] = 0;
  v1[98] = *(_QWORD *)(v3 + 8 * a1);
  v1[17] = v8;
  v9 = v2[28];
  v1[19] = v2[27];
  v1[20] = v9;
  v1[100] = v2[60];
  LODWORD(STACK[0xCFC]) = STACK[0x189C];
  v1[22] = v2[29];
  LODWORD(STACK[0xD18]) = STACK[0x18BC];
  JUMPOUT(0x19321F4F4);
}

uint64_t sub_19321F62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(uint64_t, uint64_t))
{
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;

  v32 = *(_QWORD **)(v30 + 1168);
  *v32 = 0;
  v32[1] = 0;
  *(_QWORD *)(v30 + 1176) = v32 + 1;
  v33 = a29(4096, 2241923698);
  **(_QWORD **)(v30 + 1168) = v33;
  return ((uint64_t (*)(void))(2485027307 - (v29 ^ 0x941E8C21) + *(_QWORD *)(v31 + 8 * ((14 * (v33 == 0)) ^ v29)) + 8))();
}

uint64_t sub_19321F69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t (*a61)(_QWORD))
{
  int v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;

  v65 = a61(*(_QWORD *)(v63 + 1168));
  *(_QWORD *)(v62 + 192) = 0;
  *v64 = 0;
  LODWORD(STACK[0xD1C]) = v61;
  LODWORD(STACK[0x1A9C]) = STACK[0xD1C];
  *(_BYTE *)(v63 + 271) = *v64;
  **(_QWORD **)(v63 + 912) = *(_QWORD *)(v62 + 192);
  return (*(uint64_t (**)(uint64_t))(v63 + 1144))(v65);
}

uint64_t sub_19321F704()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);

  *(_QWORD *)(v1 + 4216) = *(_QWORD *)(v1 + 1136);
  *(_QWORD *)(v1 + 4224) = *(_QWORD *)(v1 + 1120);
  *(_QWORD *)(v1 + 4232) = *(_QWORD *)(v1 + 1112);
  *(_QWORD *)(v1 + 4240) = *(_QWORD *)(v1 + 1096);
  STACK[0x200] = *(_QWORD *)(v1 + 1224);
  *(_QWORD *)(v1 + 4248) = *(_QWORD *)(v1 + 1080);
  *(_QWORD *)(v1 + 4256) = *(_QWORD *)(v1 + 1072);
  LODWORD(STACK[0xA44]) = STACK[0x1A64];
  LODWORD(STACK[0xA5C]) = STACK[0x1A60];
  *(_QWORD *)(v1 + 4264) = *(_QWORD *)(v1 + 1048);
  *(_QWORD *)(v1 + 4272) = *(_QWORD *)(v1 + 1032);
  LODWORD(STACK[0xA74]) = STACK[0x1A5C];
  *(_QWORD *)(v1 + 4280) = *(_QWORD *)(v1 + 1016);
  *(_QWORD *)(v1 + 4288) = *(_QWORD *)(v1 + 984);
  *(_QWORD *)(v1 + 4296) = *(_QWORD *)(v1 + 976);
  LODWORD(STACK[0xA8C]) = STACK[0x1A58];
  *(_QWORD *)(v1 + 4304) = *(_QWORD *)(v1 + 968);
  *(_QWORD *)(v1 + 4312) = *(_QWORD *)(v1 + 960);
  *(_QWORD *)(v1 + 4320) = *(_QWORD *)(v1 + 952);
  *v0 = *(_QWORD *)(v1 + 1216);
  LODWORD(STACK[0xAAC]) = STACK[0x1A3C];
  *(_QWORD *)(v1 + 4328) = *(_QWORD *)(v1 + 928);
  LODWORD(STACK[0xABC]) = STACK[0x1A38];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3720 * *(unsigned __int8 *)(v1 + 271)) ^ (v2 + v4 - 221)))
                         - (v4 + 1809943503)
                         + 3518);
  LODWORD(STACK[0xACC]) = STACK[0x1A9C];
  return v5();
}

uint64_t sub_19321F7FC@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t (*v7)(void);

  v4 = STACK[0x50C];
  LODWORD(STACK[0x18D0]) = STACK[0x50C];
  v5 = v1[339];
  v1[32] = v5;
  v6 = v4 > *(_DWORD *)(v5 + 8);
  v1[510] = v1[142];
  v1[511] = v1[140];
  v1[512] = v1[139];
  v1[513] = v1[137];
  v1[514] = v1[153];
  v1[515] = v1[135];
  v1[516] = v1[134];
  LODWORD(STACK[0xA14]) = STACK[0x1A64];
  LODWORD(STACK[0xA20]) = STACK[0x1A60];
  v1[517] = v1[131];
  v1[518] = v1[129];
  LODWORD(STACK[0xA24]) = STACK[0x1A5C];
  v1[519] = v1[127];
  v1[520] = v1[123];
  v1[521] = v1[122];
  v1[522] = v1[121];
  v1[523] = v1[120];
  v1[524] = v1[119];
  v1[525] = v1[152];
  LODWORD(STACK[0xA38]) = STACK[0x1A3C];
  v1[526] = v1[116];
  LODWORD(STACK[0xA3C]) = STACK[0x1A38];
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((v6 * (v2 + ((a1 + 67924543) | 0x901201F2) - 498)) ^ a1)) - 8);
  LODWORD(STACK[0xA40]) = 101372955;
  return v7();
}

void sub_19321F908()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 8 * (v0 - 414));
  v1[97] = v2[142];
  v1[99] = v2[140];
  v1[101] = v2[139];
  v1[103] = v2[137];
  v1[181] = v2[153];
  v1[105] = v2[135];
  v1[106] = v2[134];
  LODWORD(STACK[0xE80]) = STACK[0x1A64];
  LODWORD(STACK[0xE84]) = STACK[0x1A60];
  v1[190] = v4;
  v1[107] = v2[129];
  LODWORD(STACK[0xE88]) = STACK[0x1A5C];
  v1[109] = v2[127];
  v1[110] = v2[123];
  v1[113] = v2[122];
  LODWORD(STACK[0xE8C]) = STACK[0x1A58];
  v1[115] = v2[121];
  v1[116] = v2[116];
  LODWORD(STACK[0xEB0]) = STACK[0x1A38];
  LODWORD(STACK[0xEB4]) = STACK[0x18D0];
  JUMPOUT(0x19321F9B4);
}

void sub_19321FB0C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0[147] = v1[221];
  v0[149] = v1[220];
  v0[150] = v1[219];
  v0[152] = v1[216];
  v0[226] = v1[181];
  v0[153] = v1[214];
  v0[154] = v1[212];
  v0[156] = v1[222];
  v0[157] = v1[210];
  v0[160] = v1[209];
  v0[162] = v1[208];
  v0[163] = v1[206];
  v0[164] = v1[205];
  v0[167] = v1[200];
  v0[168] = v1[223];
  v0[237] = v1[204];
  v0[170] = v1[202];
  v2 = v0[170];
  v3 = v0[237];
  v4 = v0[168];
  v5 = v0[167];
  v6 = v0[164];
  v7 = v0[163];
  v8 = v0[162];
  v9 = v0[160];
  v10 = v0[157];
  v11 = v0[156];
  v12 = v0[154];
  v13 = v0[153];
  v14 = v0[226];
  v15 = v0[152];
  v16 = v0[150];
  v17 = v0[149];
  v1[476] = v18;
  v1[477] = v17;
  v1[478] = v16;
  v1[479] = v15;
  v1[480] = v14;
  v1[481] = v13;
  v1[482] = v12;
  v1[483] = v11;
  v1[484] = v10;
  v1[485] = v9;
  v1[486] = v8;
  v1[487] = v7;
  v1[488] = v6;
  v1[489] = v5;
  v1[490] = v4;
  v1[491] = v3;
  v1[492] = v2;
  v1[510] = v18;
  v1[511] = v17;
  v1[512] = v16;
  v1[513] = v15;
  v1[514] = v14;
  v1[515] = v13;
  v1[516] = v12;
  v1[517] = v11;
  v1[518] = v10;
  v1[519] = v9;
  v1[520] = v8;
  v1[521] = v7;
  v1[522] = v6;
  v1[523] = v5;
  v1[524] = v4;
  v1[525] = v3;
  v1[526] = v2;
  __asm { BR              X13 }
}

uint64_t sub_193222940()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = STACK[0x1098];
  v7 = v0 + 1809940140;
  v8 = v4 + v0 + 773;
  v3[251] = v2[217];
  LODWORD(STACK[0x1C54]) = STACK[0x108C];
  v3[253] = v2[274];
  v3[254] = v2[215];
  v3[255] = v2[213];
  v3[257] = v2[212];
  LODWORD(STACK[0x1C74]) = STACK[0x106C];
  v3[258] = v2[209];
  v3[259] = v2[208];
  v3[261] = v2[207];
  LODWORD(STACK[0x1C94]) = STACK[0x104C];
  v3[262] = v2[204];
  v3[264] = v2[202];
  LODWORD(STACK[0x1CA8]) = STACK[0x1034];
  LODWORD(STACK[0x1CAC]) = STACK[0x1030];
  v9 = v2[200];
  v3[266] = v9;
  v10 = v2[199];
  v3[267] = v10;
  v11 = v2[268];
  v3[265] = v11;
  v12 = v2[198];
  v3[270] = v12;
  v13 = v2[196];
  v3[271] = v13;
  v14 = v2[195];
  v3[272] = v14;
  v15 = v2[193];
  v3[273] = v15;
  v2[218] = v15;
  v2[220] = v14;
  v2[221] = v13;
  v2[222] = v12;
  v2[282] = v11;
  v2[224] = v10;
  v2[225] = v9;
  LODWORD(STACK[0x109C]) = STACK[0x1CAC];
  LODWORD(STACK[0x10B4]) = STACK[0x1CA8];
  v2[228] = v3[264];
  v2[230] = v3[262];
  LODWORD(STACK[0x10D4]) = STACK[0x1C94];
  v2[231] = v3[261];
  v2[232] = v3[259];
  v2[235] = v3[258];
  LODWORD(STACK[0x10D8]) = STACK[0x1C74];
  v2[236] = v3[257];
  v2[238] = v3[255];
  v2[240] = v3[254];
  v2[294] = v3[253];
  LODWORD(STACK[0x10DC]) = STACK[0x1C54];
  v2[241] = v3[251];
  LODWORD(STACK[0x10EC]) = v6;
  LODWORD(STACK[0x1110]) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((31 * (v6 == (v7 ^ (v1 + 157)))) ^ v8)))();
}

void sub_193222ACC()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  _DWORD *v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v5 = (uint64_t *)v3[261];
  v6 = (_DWORD *)v3[272];
  v7 = STACK[0x1CA8];
  v8 = STACK[0x1CA8];
  v9 = (v7 ^ 0xAD604E16) & (2 * (v7 & 0xCD750E97)) ^ v7 & 0xCD750E97;
  v10 = ((2 * (v7 ^ 0x3FE04A3E)) ^ 0xE52A8952) & (v7 ^ 0x3FE04A3E) ^ (2 * (v7 ^ 0x3FE04A3E)) & 0xF29544A8;
  v11 = v10 ^ 0x129544A9;
  v12 = (v10 ^ 0x60010000) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xCA5512A4) & v11 ^ (4 * v11) & 0xF29544A8;
  v14 = v12 ^ 0xF29544A9 ^ (v13 ^ 0xC21500A0) & (16 * v12);
  v15 = (16 * (v13 ^ 0x30804409)) & 0xF29544A0 ^ 0xD2810429 ^ ((16 * (v13 ^ 0x30804409)) ^ 0x29544A90) & (v13 ^ 0x30804409);
  v16 = (v14 << 8) & 0xF2954400 ^ v14 ^ ((v14 << 8) ^ 0x9544A900) & v15;
  v17 = *v5;
  v18 = LODWORD(STACK[0x1CA8]) ^ (2
                                * ((v16 << 16) & 0x72950000 ^ v16 ^ ((v16 << 16) ^ 0x44A90000) & ((v15 << 8) & 0x72950000 ^ 0x62910000 ^ ((v15 << 8) ^ 0x15440000) & v15)));
  v19 = ((*v6 << ((-53 * (v0 ^ 0xA4)) ^ 0x8C)) & 0x7F5FFF3E) + (*v6 ^ 0x3FAFFF9F) - 1068498847;
  *(_BYTE *)(*v5 + v19) = HIBYTE(v18) ^ 0x89;
  *(_BYTE *)(v17 + v19 + 1) = BYTE2(v18) ^ 0x55;
  *(_BYTE *)(v17 + v19 + 2) = (((BYTE1(v18) ^ 0x87) - 2 * ((BYTE1(v18) ^ 0x87) & 3) + 11) ^ 3) - 8;
  *(_BYTE *)(v17 + v19 + 3) = v18 ^ 0xC5;
  v20 = (*v6 + 4);
  *v6 = v20;
  v21 = *v5;
  v22 = v3[265];
  v23 = (v22 ^ 0xDA9B8633C9C1226) & (2 * (v22 & 0x8E09C14B3EC05B34)) ^ v22 & 0x8E09C14B3EC05B34;
  v24 = *(_QWORD *)(v4 + 8 * v0);
  v25 = ((2 * (v22 ^ 0x9A8BA636D9C0446)) ^ 0xF42F650A6B8BEE4) & (v22 ^ 0x9A8BA636D9C0446) ^ (2
                                                                                                 * (v22 ^ 0x9A8BA636D9C0446)) & 0x87A17B28535C5F72;
  v2[323] = v3[273];
  v2[326] = v6;
  v2[327] = v3[271];
  v26 = v25 ^ 0x80A1092851444112;
  v27 = (v25 ^ 0x20002001C60) & (4 * v23) ^ v23;
  v2[329] = v3[270];
  v2[396] = v3[265];
  v2[331] = v3[267];
  v28 = ((4 * v26) ^ 0x1E85ECA14D717DC8) & v26 ^ (4 * v26) & 0x87A17B28535C5F70;
  v2[332] = v3[266];
  LODWORD(STACK[0x13D4]) = STACK[0x1CAC];
  v29 = v28 ^ 0x81201308120C0232;
  v30 = (v28 ^ 0x681682041505D40) & (16 * v27) ^ v27;
  LODWORD(STACK[0x13E4]) = v8;
  v2[334] = v3[264];
  v2[335] = v3[262];
  v31 = ((16 * v29) ^ 0x7A17B28535C5F720) & v29 ^ (16 * v29) & 0x87A17B28535C5F70;
  LODWORD(STACK[0x1404]) = STACK[0x1C94];
  v2[336] = v3[261];
  v2[338] = v3[259];
  v2[339] = v3[258];
  LODWORD(STACK[0x1424]) = STACK[0x1C74];
  v2[408] = v24 - 12;
  v32 = (((v31 ^ 0x85A0492842180852) << 8) ^ 0xA17B28535C5F7200) & (v31 ^ 0x85A0492842180852) ^ ((v31 ^ 0x85A0492842180852) << 8) & 0x87A17B28535C5F00;
  v2[342] = v3[257];
  v2[344] = v3[255];
  v2[345] = v3[254];
  v2[421] = v3[253];
  LODWORD(STACK[0x1430]) = STACK[0x1C54];
  v2[346] = v3[251];
  LODWORD(STACK[0x1434]) = v1;
  v2[349] = v21;
  v2[433] = (v20 ^ 0x3CDB7EB7F8BBADFCLL) - 0x37022BDD2A7A347ELL + ((2 * v20) & 0x1F1775BF8);
  v2[352] = v3[273];
  v2[444] = v22 ^ (2
                 * (v32 & 0x5308535000000000 ^ (v31 ^ 0x201320011445700) & (v30 << 8) ^ v30 ^ (v32 ^ 0x1212800505C0000) & (((v31 ^ 0x201320011445700) & (v30 << 8) ^ v30) << 16))) ^ 0x7723B007BBEBD351;
  JUMPOUT(0x193222F90);
}

uint64_t sub_1932230F8()
{
  _QWORD *v0;
  _QWORD *v1;
  _DWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v2 = (_DWORD *)v1[329];
  v3 = STACK[0x1DC8];
  *v2 += LODWORD(STACK[0x1DC8]) - 847966569;
  v0[218] = v1[330];
  v0[220] = v2;
  v0[221] = v1[328];
  v0[222] = v1[325];
  v0[282] = v1[323];
  v0[224] = v1[324];
  v0[225] = v1[322];
  LODWORD(STACK[0x109C]) = STACK[0x1DCC];
  LODWORD(STACK[0x10B4]) = v3;
  v0[228] = v1[320];
  v0[230] = v1[319];
  LODWORD(STACK[0x10D4]) = STACK[0x1DC4];
  v0[231] = v1[317];
  v0[232] = v1[316];
  v0[235] = v1[315];
  LODWORD(STACK[0x10D8]) = STACK[0x1DC0];
  v0[236] = v1[313];
  v0[238] = v1[312];
  v0[240] = v1[309];
  v0[294] = v1[311];
  LODWORD(STACK[0x10DC]) = STACK[0x1D9C];
  v0[241] = v1[307];
  LODWORD(v2) = STACK[0x1D98];
  LODWORD(STACK[0x10EC]) = STACK[0x1D98];
  LODWORD(STACK[0x1110]) = (_DWORD)v2;
  LODWORD(v2) = STACK[0x1110];
  v4 = STACK[0x10EC];
  v5 = v0[241];
  v6 = STACK[0x10DC];
  v7 = v0[294];
  v8 = v0[240];
  v9 = v0[238];
  v10 = (uint64_t (*)(void))v0[236];
  v11 = STACK[0x10D8];
  v12 = v0[235];
  v13 = v0[232];
  v14 = v0[231];
  v15 = STACK[0x10D4];
  v16 = v0[230];
  v17 = v0[228];
  v18 = STACK[0x10B4];
  v19 = STACK[0x109C];
  v20 = v0[225];
  v21 = v0[224];
  v22 = v0[282];
  v23 = v0[222];
  v24 = v0[221];
  v25 = v0[220];
  v26 = STACK[0x910];
  v1[391] = STACK[0x910];
  v1[392] = v25;
  v1[393] = v24;
  v1[394] = v23;
  v1[395] = v22;
  v1[396] = v21;
  v1[397] = v20;
  LODWORD(STACK[0x6B0]) = v19;
  LODWORD(STACK[0x6B4]) = v18;
  v1[398] = v17;
  v1[399] = v16;
  LODWORD(STACK[0x6B8]) = v15;
  v1[400] = v14;
  v1[401] = v13;
  v1[402] = v12;
  LODWORD(STACK[0x6BC]) = v11;
  v1[403] = v10;
  v1[404] = v9;
  v1[405] = v8;
  v1[406] = v7;
  LODWORD(STACK[0x6E0]) = v6;
  v1[407] = v5;
  LODWORD(STACK[0x6E4]) = v4;
  LODWORD(STACK[0x6FC]) = (_DWORD)v2;
  v1[408] = v26;
  v1[409] = v25;
  v1[410] = v24;
  v1[411] = v23;
  v1[412] = v22;
  v1[413] = v21;
  v1[414] = v20;
  LODWORD(STACK[0x71C]) = v19;
  LODWORD(STACK[0x73C]) = v18;
  v1[415] = v17;
  v1[416] = v16;
  LODWORD(STACK[0x748]) = v15;
  v1[417] = v14;
  v1[418] = v13;
  v1[419] = v12;
  LODWORD(STACK[0x74C]) = v11;
  v1[420] = v10;
  v1[421] = v9;
  v1[422] = v8;
  v1[423] = v7;
  LODWORD(STACK[0x768]) = v6;
  v1[424] = v5;
  LODWORD(STACK[0x76C]) = v4;
  LODWORD(STACK[0x770]) = (_DWORD)v2;
  v1[425] = v26;
  v1[426] = v25;
  v1[427] = v24;
  v1[428] = v23;
  v1[429] = v22;
  v1[430] = v21;
  v1[431] = v20;
  LODWORD(STACK[0x774]) = v19;
  LODWORD(STACK[0x798]) = v18;
  v1[432] = v17;
  v1[433] = v16;
  LODWORD(STACK[0x79C]) = v15;
  v1[434] = v14;
  v1[435] = v13;
  v1[436] = v12;
  LODWORD(STACK[0x7B4]) = v11;
  v1[437] = v10;
  v1[438] = v9;
  v1[439] = v8;
  v1[440] = v7;
  LODWORD(STACK[0x7D4]) = v6;
  v1[441] = v5;
  LODWORD(STACK[0x7F4]) = v4;
  LODWORD(STACK[0x800]) = (_DWORD)v2;
  v1[459] = v26;
  v1[460] = v25;
  v1[461] = v24;
  v1[462] = v23;
  v1[463] = v22;
  v1[464] = v21;
  v1[465] = v20;
  LODWORD(STACK[0x86C]) = v19;
  LODWORD(STACK[0x88C]) = v18;
  v1[466] = v17;
  v1[467] = v16;
  LODWORD(STACK[0x89C]) = v15;
  v1[468] = v14;
  v1[469] = v13;
  v1[470] = v12;
  LODWORD(STACK[0x8AC]) = v11;
  v1[471] = v10;
  v1[472] = v9;
  v1[473] = v8;
  v1[474] = v7;
  LODWORD(STACK[0x8D0]) = v6;
  v1[475] = v5;
  LODWORD(STACK[0x8D4]) = v4;
  LODWORD(STACK[0x8D8]) = (_DWORD)v2;
  return v10();
}

uint64_t sub_1932233CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void (*a61)(void),uint64_t a62,uint64_t a63)
{
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  int v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(void), uint64_t, uint64_t);

  v65 = (_QWORD *)v64[300];
  *v65 = 0;
  v65[1] = 0;
  a61();
  v63[299] = v64[301];
  LODWORD(STACK[0x1234]) = STACK[0x1D84];
  v63[300] = v64[299];
  LODWORD(STACK[0x1244]) = STACK[0x1D64];
  v63[373] = v64[293];
  v63[303] = v64[298];
  v63[304] = v64[295];
  v63[306] = v64[294];
  LODWORD(STACK[0x135C]) = STACK[0x1D44];
  v63[308] = v64[292];
  v63[309] = v64[290];
  v63[311] = v64[289];
  LODWORD(STACK[0x136C]) = STACK[0x1D34];
  v63[312] = v64[287];
  v63[313] = v64[286];
  LODWORD(STACK[0x139C]) = STACK[0x1CDC];
  LODWORD(STACK[0x13AC]) = STACK[0x1CD8];
  v63[315] = v64[285];
  v63[316] = v64[283];
  v63[385] = v64[281];
  v63[319] = v64[282];
  v63[321] = v64[279];
  v63[322] = v64[276];
  v66 = v63[322];
  v67 = v63[321];
  v68 = v63[319];
  v69 = v63[385];
  v70 = v63[316];
  v71 = v63[315];
  v72 = STACK[0x13AC];
  v73 = STACK[0x139C];
  v74 = v63[313];
  v75 = v63[312];
  v76 = STACK[0x136C];
  v77 = v63[311];
  v78 = v63[309];
  v79 = v63[308];
  v80 = LODWORD(STACK[0x135C]);
  v81 = v63[306];
  v82 = v63[304];
  v83 = v63[303];
  v84 = v63[373];
  v85 = STACK[0x1244];
  v86 = v63[300];
  v87 = STACK[0x1234];
  v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(void), uint64_t, uint64_t))v63[299];
  v64[527] = v66;
  v64[528] = v67;
  v64[529] = 0;
  v64[530] = v68;
  STACK[0x200] = v69;
  v64[531] = v70;
  v64[532] = v71;
  LODWORD(STACK[0xA44]) = v72;
  LODWORD(STACK[0xA5C]) = v73;
  v64[533] = v74;
  v64[534] = v75;
  LODWORD(STACK[0xA74]) = v76;
  v64[535] = v77;
  v64[536] = v78;
  v64[537] = v79;
  LODWORD(STACK[0xA8C]) = v80;
  v64[538] = v81;
  v64[539] = v82;
  v64[540] = v83;
  *v63 = v84;
  LODWORD(STACK[0xAAC]) = v85;
  v64[541] = v86;
  LODWORD(STACK[0xABC]) = v87;
  LODWORD(STACK[0xACC]) = v80;
  v64[589] = v66;
  v64[590] = v67;
  v64[591] = v68;
  v63[64] = v69;
  v64[592] = v70;
  v64[593] = v71;
  LODWORD(STACK[0xC44]) = v72;
  LODWORD(STACK[0xC60]) = v73;
  v64[594] = v74;
  v64[595] = v75;
  LODWORD(STACK[0xC64]) = v76;
  LODWORD(STACK[0xC68]) = v80;
  STACK[0x208] = v82;
  STACK[0x210] = v83;
  v63[76] = v84;
  LODWORD(STACK[0xC6C]) = v85;
  STACK[0x218] = v86;
  LODWORD(STACK[0xC90]) = v87;
  LODWORD(STACK[0xC94]) = v76;
  return v88(v75, v77, v78, v79, v80, v81, v82, v83, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1932235B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  int v66;
  uint64_t v67;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v67
                                                     + 8
                                                     * (((a65 == v65 - 1069) * ((v66 + v65 + 249) ^ (v66 + 1308))) ^ v65)))(0x767A3EBDF7FA0F3DLL, 0x1EFF41E7ALL);
}

uint64_t sub_193223610(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 3680) = v2;
  v8 = v2 - 1;
  v9 = (a2 & (2 * v8)) + (v8 ^ a1);
  *(_BYTE *)(v6[305] + v9 + v6[336]) = *(_BYTE *)(v6[303] + v9 + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((3393 * (v8 == 0)) ^ (v3 + 410))) - 8))();
}

uint64_t sub_193223670(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v2 - 1;
  v11 = (a2 & (2 * v10)) + (v10 ^ a1);
  *(_BYTE *)(v5 + v11 + v4) = *(_BYTE *)(v3 + v11 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v10 == 0) * v7) ^ v6)) - 8))();
}

uint64_t sub_1932236AC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;

  *(_QWORD *)(v59 + 3680) = v58;
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((a1 + 1809944124) ^ ((a58 != v60 + a1 - 551) << 6))) - 8))();
}

uint64_t sub_1932236B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;

  return ((uint64_t (*)(void))(2485027307
                            - ((v65 + 355) ^ 0x941E827B)
                            + *(_QWORD *)(v66 + 8 * (((a65 != 1) * ((v65 + 355) ^ 0x3A5)) ^ (v65 + 355)))))();
}

uint64_t sub_193223700()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);

  *(_QWORD *)(v1 + 29) = *(_QWORD *)(v0 + 1120);
  *(_QWORD *)(v1 + 37) = *(_QWORD *)(v0 + 1112);
  *(_QWORD *)(v1 + 45) = *(_QWORD *)(v0 + 1096);
  *(_QWORD *)(v1 + 53) = *(_QWORD *)(v0 + 1080);
  *(_QWORD *)(v1 + 61) = *(_QWORD *)(v0 + 1072);
  *(_QWORD *)(v1 + 69) = *(_QWORD *)(v0 + 1048);
  *(_QWORD *)(v1 + 77) = *(_QWORD *)(v0 + 1032);
  LODWORD(STACK[0x250]) = STACK[0x1A64];
  *(_QWORD *)(v1 + 85) = *(_QWORD *)(v0 + 1016);
  *(_QWORD *)(v1 + 93) = *(_QWORD *)(v0 + 984);
  *(_QWORD *)(v1 + 101) = *(_QWORD *)(v0 + 976);
  LODWORD(STACK[0x254]) = STACK[0x1A60];
  LODWORD(STACK[0x26C]) = STACK[0x1A5C];
  *(_QWORD *)(v1 + 109) = *(_QWORD *)(v0 + 968);
  *(_QWORD *)(v1 + 117) = *(_QWORD *)(v0 + 1224);
  *(_QWORD *)(v1 + 125) = *(_QWORD *)(v0 + 960);
  LODWORD(STACK[0x28C]) = STACK[0x1A58];
  *(_QWORD *)(v1 + 133) = *(_QWORD *)(v0 + 952);
  *(_QWORD *)(v1 + 141) = *(_QWORD *)(v0 + 928);
  *(_QWORD *)(v1 + 149) = *(_QWORD *)(v0 + 1216);
  LODWORD(STACK[0x2AC]) = STACK[0x1A3C];
  *(_QWORD *)(v1 + 157) = *(_QWORD *)(v0 + 912);
  LODWORD(STACK[0x2BC]) = STACK[0x1A38];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * (int)((*(unsigned __int8 *)(v0 + 271) * ((v4 - 556905340) & 0x8D1333DF ^ 0xCC0)) ^ (v2 + v4 + 50)))
                         - 8);
  LODWORD(STACK[0x308]) = STACK[0x1A9C];
  return v5();
}

uint64_t sub_19322380C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);

  v7 = *(_QWORD *)(v6 + 8 * a1);
  v8 = ((_DWORD)a1 + 747) | 0x200u;
  v3[581] = v3[140];
  v3[582] = v3[139];
  v3[583] = v3[137];
  v3[584] = v3[135];
  v3[585] = v3[134];
  v2[52] = v7 + v8 - 1870;
  v3[586] = v3[129];
  LODWORD(STACK[0xBF4]) = STACK[0x1A64];
  v3[587] = v3[127];
  v3[588] = v3[122];
  LODWORD(STACK[0xC14]) = STACK[0x1A60];
  LODWORD(STACK[0xC34]) = STACK[0x1A5C];
  v3[589] = v3[121];
  v2[64] = v3[153];
  v3[590] = v3[119];
  v3[591] = v3[116];
  v2[76] = v3[152];
  LODWORD(STACK[0xC44]) = STACK[0x1A3C];
  v3[592] = v3[114];
  LODWORD(STACK[0xC60]) = STACK[0x1A38];
  LODWORD(STACK[0xC64]) = v1;
  LODWORD(STACK[0x1AA8]) = STACK[0xC64];
  LODWORD(STACK[0x1AAC]) = STACK[0xC60];
  v3[147] = v3[592];
  LODWORD(STACK[0x1ABC]) = STACK[0xC44];
  v3[154] = v2[76];
  v3[148] = v3[591];
  v3[149] = v3[590];
  v3[155] = v2[64];
  v3[150] = v3[589];
  LODWORD(STACK[0x1ADC]) = STACK[0xC34];
  LODWORD(STACK[0x1AFC]) = STACK[0xC14];
  v3[156] = v3[588];
  v3[159] = v3[587];
  LODWORD(STACK[0x1B10]) = STACK[0xBF4];
  v3[160] = v3[586];
  v9 = v2[52];
  v10 = v3[585];
  v3[162] = v10;
  v11 = v3[584];
  v3[163] = v11;
  v12 = v3[583];
  v3[164] = v12;
  v13 = v3[582];
  v3[166] = v13;
  v14 = v3[581];
  v3[167] = v14;
  v15 = *(_QWORD *)(v4 + 13);
  v3[169] = v15;
  v3[171] = v9;
  v2[19] = v3[159];
  v2[20] = v15;
  v16 = *(_DWORD *)(v15 + 12);
  v3[172] = v15 + 12;
  LODWORD(STACK[0x1B14]) = v16;
  v2[6] = v14;
  v2[7] = v13;
  v2[8] = v12;
  v2[10] = v11;
  v2[11] = v10;
  v2[14] = v9;
  v2[17] = v3[160];
  LODWORD(STACK[0xCF8]) = STACK[0x1B10];
  v17 = v3[156];
  LODWORD(STACK[0xCFC]) = STACK[0x1AFC];
  LODWORD(STACK[0xD18]) = STACK[0x1ADC];
  v18 = v3[150];
  v2[22] = v17;
  v2[23] = v18;
  v2[100] = v3[155];
  v2[24] = v3[172];
  LODWORD(STACK[0xD1C]) = STACK[0x1AA8];
  v19 = v3[148];
  v2[27] = v3[149];
  v2[28] = v19;
  v2[111] = v3[154];
  LODWORD(STACK[0xD20]) = STACK[0x1ABC];
  v2[30] = v3[147];
  LODWORD(STACK[0xD24]) = STACK[0x1AAC];
  v20 = (uint64_t (*)(void))(*(_QWORD *)(v6
                                      + 8
                                      * (int)((3271 * (v16 < ((v5 + (v8 ^ 0x941E86B1) - 320) ^ 0xFFFFFF12))) ^ v8))
                          - 12);
  LODWORD(STACK[0xD34]) = 101330305;
  return v20();
}

uint64_t sub_193224F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  int v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _BOOL4 v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;

  v68 = LODWORD(STACK[0x1B14]);
  v69 = *(unsigned int *)(v66[169] + 8);
  v66[593] = v66[167];
  v66[594] = v66[166];
  v66[595] = v66[164];
  v70 = (v68 ^ 0xFC36DEE77FFDEAFDLL) + 0x3C92118BD2DEEC7 + ((v68 << (((v63 + 91) | 0xB3) ^ 0xF6u)) & 0xFFFBD5FALL);
  v71 = (v69 ^ 0xFDDFDBD5F9BDB55FLL) + 0x220242A436E2461 + ((2 * v69) & 0x1F37B6ABELL);
  v72 = v70 < 0x3D2BD9C0;
  v73 = v70 > v71;
  if (v72 != v71 < 0x3D2BD9C0)
    v73 = v72;
  LODWORD(STACK[0xC68]) = STACK[0x1B10];
  STACK[0x208] = v66[159];
  STACK[0x210] = v66[169];
  STACK[0x218] = v66[156];
  LODWORD(STACK[0xC6C]) = STACK[0x1AFC];
  LODWORD(STACK[0xC90]) = STACK[0x1ADC];
  STACK[0x230] = v66[150];
  v65[88] = v66[155];
  STACK[0x238] = v66[172];
  LODWORD(STACK[0xC94]) = STACK[0x1AA8];
  v65[1] = v66[149];
  v74 = v66[148];
  v65[98] = v66[154];
  LODWORD(STACK[0xCAC]) = STACK[0x1ABC];
  v75 = v66[147];
  v65[3] = v74;
  v65[4] = v75;
  LODWORD(STACK[0xCCC]) = STACK[0x1AAC];
  LODWORD(STACK[0xCEC]) = v64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * ((3917 * v73) ^ v63)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_193225104()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(v3 + 8 * v0);
  v5 = v2[166];
  v1[32] = v2[167];
  v1[33] = v5;
  v6 = v2[163];
  v1[35] = v2[164];
  v1[36] = v6;
  v1[37] = v2[162];
  v7 = v2[171];
  v1[118] = v4 + (v0 + 2510) - 2755;
  LODWORD(STACK[0xD48]) = STACK[0x1B10];
  v8 = v2[159];
  v1[39] = v7;
  v1[40] = v8;
  v1[43] = v2[169];
  v9 = v2[156];
  LODWORD(STACK[0xD4C]) = STACK[0x1AFC];
  LODWORD(STACK[0xD5C]) = STACK[0x1ADC];
  v10 = v2[150];
  v1[45] = v9;
  v1[46] = v10;
  v1[124] = v2[155];
  v1[47] = v2[172];
  LODWORD(STACK[0xD7C]) = STACK[0x1AA8];
  v11 = v2[147];
  LODWORD(STACK[0xD9C]) = STACK[0x1AAC];
  LODWORD(STACK[0xDA8]) = 4;
  v12 = v2[169];
  v1[50] = v11;
  v1[51] = v12;
  JUMPOUT(0x193225824);
}

uint64_t sub_1932251AC()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t (*v7)(void);

  LODWORD(STACK[0x1614]) = STACK[0x6E0];
  LODWORD(STACK[0x1624]) = STACK[0x6BC];
  v1[448] = v2[398];
  LODWORD(STACK[0x1644]) = STACK[0x6B8];
  v1[517] = v2[389];
  v1[450] = v2[397];
  v1[451] = v2[396];
  LODWORD(STACK[0x1664]) = STACK[0x6B4];
  v1[452] = v2[394];
  v1[518] = v2[378];
  v1[454] = v2[393];
  LODWORD(STACK[0x1678]) = STACK[0x6B0];
  LODWORD(STACK[0x167C]) = STACK[0x694];
  v1[455] = v2[392];
  v1[458] = v2[391];
  v1[461] = v2[390];
  LODWORD(STACK[0x16A0]) = STACK[0x690];
  v1[463] = v2[388];
  v1[464] = v2[387];
  v1[465] = v2[386];
  v1[470] = v2[385];
  v1[471] = v2[384];
  v6 = *(unsigned __int8 *)(v3 + 3) | *(_BYTE *)(v3 + 4) & 1 | (LODWORD(STACK[0x1614]) != v0);
  v1[473] = v2[383];
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((211 * v6) ^ (v5 + 1809943645)))
                         - ((((v5 + 1051795866) & 0x2D305DFEu) - 405) ^ 0xFFFFFFF7));
  v1[475] = v2[382];
  return v7();
}

uint64_t sub_1932252E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  BOOL v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t, unint64_t *);

  v6 = STACK[0x1624];
  v7 = STACK[0x1614];
  v8 = LODWORD(STACK[0x1614]) == (((a3 + 67108497) | 0x901E81D6) ^ 0x921455EC);
  LODWORD(STACK[0x774]) = STACK[0x1624];
  v4[416] = v3[448];
  v9 = STACK[0x1644];
  LODWORD(STACK[0x798]) = STACK[0x1644];
  v4[412] = v3[517];
  v4[417] = v3[450];
  v4[418] = v3[451];
  v10 = STACK[0x1664];
  LODWORD(STACK[0x79C]) = STACK[0x1664];
  v4[419] = v3[452];
  v4[423] = v3[518];
  v4[420] = v3[454];
  v11 = STACK[0x1678];
  LODWORD(STACK[0x7B4]) = STACK[0x1678];
  v12 = STACK[0x167C];
  LODWORD(STACK[0x7D4]) = STACK[0x167C];
  v4[421] = v3[455];
  v4[422] = v3[458];
  v4[424] = v3[461];
  v13 = STACK[0x16A0];
  LODWORD(STACK[0x7F4]) = STACK[0x16A0];
  v4[425] = v3[463];
  v4[426] = v3[464];
  v4[427] = v3[465];
  v4[428] = v3[470];
  v4[430] = v3[471];
  v4[431] = v3[473];
  v4[432] = v3[475];
  LODWORD(STACK[0x968]) = v6;
  v4[484] = v3[448];
  LODWORD(STACK[0x96C]) = v9;
  v4[480] = v3[517];
  v4[485] = v3[450];
  v4[486] = v3[451];
  LODWORD(STACK[0x988]) = v10;
  v4[487] = v3[452];
  v4[491] = v3[518];
  v4[488] = v3[454];
  LODWORD(STACK[0x98C]) = v11;
  LODWORD(STACK[0x990]) = v12;
  v4[489] = v3[455];
  v4[490] = v3[458];
  v4[492] = v3[461];
  v14 = v8;
  LODWORD(STACK[0x994]) = v13;
  v4[493] = v3[463];
  v4[495] = v3[464];
  v4[496] = v3[465];
  v4[497] = v3[470];
  v4[498] = v3[471];
  v4[499] = v3[473];
  v4[500] = v3[475];
  v15 = (uint64_t (*)(uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(v5
                                                                                 + 8
                                                                                 * (int)((v14
                                                                                        * (((a3 + 66083887) & 0xFC0FAFD5)
                                                                                         - 1498)) ^ a3))
                                                                     - 12);
  LODWORD(STACK[0x9B8]) = v7;
  return v15(a1, a2, &STACK[0x128D]);
}

uint64_t sub_1932254C0()
{
  unsigned int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;

  v6 = *(_QWORD *)(v3 + 13);
  v1[476] = v6;
  v7 = *(_DWORD *)(v6 + 12);
  v1[478] = v6 + 12;
  v8 = (v7 ^ 0x7BFEEEED9F3DFFEBLL)
     + v1[408]
     + (((unint64_t)v7 << ((v0 - 12) ^ 0xEE)) & ((v0 ^ (v4 - 550)) + 2858253791));
  STACK[0x1370] = v8;
  LODWORD(STACK[0x968]) = STACK[0x1624];
  v2[484] = v1[448];
  LODWORD(STACK[0x96C]) = STACK[0x1644];
  v2[480] = v1[517];
  v2[485] = v1[450];
  v2[486] = v1[451];
  LODWORD(STACK[0x988]) = STACK[0x1664];
  v2[487] = v1[452];
  v2[491] = v1[518];
  v2[488] = v1[454];
  LODWORD(STACK[0x98C]) = STACK[0x1678];
  LODWORD(STACK[0x990]) = STACK[0x167C];
  v2[489] = v1[455];
  v2[490] = v1[458];
  v2[492] = v1[461];
  LODWORD(STACK[0x994]) = STACK[0x16A0];
  v2[493] = v1[463];
  v2[495] = v1[464];
  v2[496] = v1[465];
  v2[497] = v1[476];
  v2[498] = v1[478];
  v2[499] = v1[473];
  v2[500] = v1[475];
  LODWORD(STACK[0x9B8]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((3626
                                          * ((((v8 ^ v0) & v0) >> (__clz(v8 ^ v0 | 1) ^ 0x3Fu)) & 1)) | v0 & 0x194))
                            - 12))();
}

uint64_t sub_193225630@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BOOL4 v10;

  v4 = STACK[0x1120];
  v5 = *(unsigned int *)(STACK[0x1120] + 8);
  v6 = *(_QWORD *)(a1 + 227);
  v2[399] = STACK[0x1118];
  v7 = v6 + 296511255;
  v2[400] = STACK[0x1108];
  v8 = (v5 ^ 0x766B7BA3F47D9EEFLL) + (a2 ^ 0x8994845C1D2EC8CBLL) + ((2 * v5) & 0x1E8FB3DDELL);
  v10 = v8 > 0x11AC6712 && v7 > v8;
  v2[401] = STACK[0x1130];
  v2[402] = v4;
  v2[403] = STACK[0x10C8];
  v2[404] = STACK[0x10C0];
  v2[405] = STACK[0x10B8];
  LODWORD(STACK[0x6E4]) = STACK[0x16A0];
  v2[407] = STACK[0x10A8];
  v2[408] = STACK[0x1090];
  v2[409] = STACK[0x1078];
  LODWORD(STACK[0x6FC]) = STACK[0x167C];
  LODWORD(STACK[0x71C]) = STACK[0x1678];
  v2[410] = STACK[0x1070];
  v2[395] = STACK[0x1270];
  v2[411] = STACK[0x1060];
  LODWORD(STACK[0x73C]) = STACK[0x1664];
  v2[413] = STACK[0x1058];
  v2[414] = STACK[0x1050];
  v2[406] = STACK[0x1268];
  LODWORD(STACK[0x748]) = STACK[0x1644];
  v2[415] = STACK[0x1040];
  LODWORD(STACK[0x74C]) = STACK[0x1624];
  LODWORD(STACK[0x768]) = 101372955;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((3768 * v10) ^ a2)) - 12))();
}

void sub_193225784(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v2 + 8 * a1);
  v4 = v1[473];
  v1[32] = v1[475];
  v1[33] = v4;
  v5 = v1[476];
  v1[35] = v1[478];
  v1[36] = v5;
  v1[37] = v1[465];
  v6 = v1[464];
  v1[118] = v3 + (a1 + 2504) - 2755;
  LODWORD(STACK[0xD48]) = STACK[0x16A0];
  v7 = v1[461];
  v1[39] = v6;
  v1[40] = v7;
  v1[43] = v1[458];
  v8 = v1[455];
  LODWORD(STACK[0xD4C]) = STACK[0x167C];
  LODWORD(STACK[0xD5C]) = STACK[0x1678];
  v9 = v1[454];
  v1[45] = v8;
  v1[46] = v9;
  v1[124] = v1[518];
  v1[47] = v1[452];
  LODWORD(STACK[0xD7C]) = STACK[0x1664];
  LODWORD(STACK[0xD9C]) = STACK[0x1624];
  LODWORD(STACK[0xDA8]) = STACK[0x11EC];
  JUMPOUT(0x193225820);
}

uint64_t sub_193225930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t (*v9)(void);

  v8 = STACK[0x768];
  LODWORD(STACK[0x16A4]) = STACK[0x74C];
  v4[479] = v5[415];
  LODWORD(STACK[0x16A8]) = STACK[0x748];
  *(_QWORD *)(a3 + 235) = v5[406];
  v4[480] = v5[414];
  v4[482] = v5[413];
  LODWORD(STACK[0x16AC]) = STACK[0x73C];
  v4[483] = v5[411];
  v5[4] = v5[395];
  v4[486] = v5[410];
  LODWORD(STACK[0x16D4]) = STACK[0x71C];
  LODWORD(STACK[0x16E4]) = STACK[0x6FC];
  v4[488] = v5[409];
  v4[489] = v5[408];
  v4[490] = v5[407];
  LODWORD(STACK[0x1704]) = STACK[0x6E4];
  v4[491] = v5[405];
  v4[494] = v5[404];
  v4[495] = v5[403];
  v4[497] = v5[402];
  v4[499] = v5[401];
  v4[500] = v5[400];
  v4[502] = v5[399];
  LODWORD(STACK[0x968]) = STACK[0x16A4];
  v5[484] = v4[479];
  LODWORD(STACK[0x96C]) = STACK[0x16A8];
  v5[480] = *(_QWORD *)(a3 + 235);
  v5[485] = v4[480];
  v5[486] = v4[482];
  LODWORD(STACK[0x988]) = STACK[0x16AC];
  v5[487] = v4[483];
  v5[491] = v5[4];
  v5[488] = v4[486];
  LODWORD(STACK[0x98C]) = STACK[0x16D4];
  LODWORD(STACK[0x990]) = STACK[0x16E4];
  v5[489] = v4[488];
  v5[490] = v4[489];
  v5[492] = v4[490];
  LODWORD(STACK[0x994]) = STACK[0x1704];
  v5[493] = v4[491];
  v5[495] = v4[494];
  v5[496] = v4[495];
  v5[497] = v4[497];
  v5[498] = v4[499];
  v5[499] = v4[500];
  v5[500] = v4[502];
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1804 * (v8 == v3 + 1911312932)) ^ (v6 + v3 - 153))) - 12);
  LODWORD(STACK[0x9B8]) = v8;
  return v9();
}

uint64_t sub_193225AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  unsigned int v8;
  uint64_t (*v9)(void);

  v6 = *(_QWORD *)STACK[0x11C8];
  v7 = (_DWORD *)STACK[0x11D8];
  v8 = ((((v3 - 4228) | 0xD00) - 1757416861) & (2 * *v7)) + (*v7 ^ 0xCB9FFFFC) + 878706692;
  *(_BYTE *)(v6 + v8) = *(_BYTE *)(a3 + 154);
  *(_BYTE *)(v6 + v8 + 1) = *(_BYTE *)(a3 + 169);
  *(_BYTE *)(v6 + v8 + 2) = *(_BYTE *)(a3 + 170);
  *(_BYTE *)(v6 + v8 + 3) = *(_BYTE *)(a3 + 194);
  LODWORD(v6) = ((v3 - 3033) | 0xA6) + *v7 - 1506;
  LODWORD(STACK[0x1718]) = v6;
  *v7 = v6;
  LODWORD(STACK[0x774]) = STACK[0x16A4];
  v4[416] = STACK[0x1138];
  LODWORD(STACK[0x798]) = STACK[0x16A8];
  v4[412] = *(_QWORD *)(a3 + 235);
  v4[417] = STACK[0x1140];
  v4[418] = STACK[0x1150];
  LODWORD(STACK[0x79C]) = STACK[0x16AC];
  v4[419] = STACK[0x1158];
  v4[423] = v4[4];
  v4[420] = STACK[0x1170];
  LODWORD(STACK[0x7B4]) = STACK[0x16D4];
  LODWORD(STACK[0x7D4]) = STACK[0x16E4];
  v4[421] = STACK[0x1180];
  v4[422] = STACK[0x1188];
  v4[424] = STACK[0x1190];
  LODWORD(STACK[0x7F4]) = STACK[0x1704];
  v4[425] = STACK[0x1198];
  v4[426] = STACK[0x11B0];
  v4[427] = STACK[0x11B8];
  v4[428] = STACK[0x11C8];
  v4[430] = STACK[0x11D8];
  v4[431] = STACK[0x11E0];
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((50 * LOBYTE(STACK[0x10B3])) ^ v3)) - 8);
  v4[432] = STACK[0x11F0];
  return v9();
}

uint64_t sub_193225C68@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  _DWORD *v57;
  int v58;
  unsigned int v59;
  unint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  unsigned int v64;
  _BOOL4 v65;

  v56 = STACK[0x1718];
  LODWORD(STACK[0x76C]) = STACK[0x1718];
  LODWORD(STACK[0x770]) = 1034286833;
  v57 = (_DWORD *)STACK[0x11D8];
  v58 = LOBYTE(STACK[0x5EB]);
  v59 = STACK[0x11D4];
  v60 = STACK[0x11B8];
  v61 = *(_QWORD *)STACK[0x11C8];
  v62 = *(_DWORD *)(a21 + 4 * (((a1 + 26) | 0x2Bu) - 1579));
  v63 = v62 + 451170848 - ((2 * v62) & 0x35C8A440);
  v64 = ((2 * v56) & 0xFD57FB38) + (v56 ^ 0xFEABFD9C) + 22282852;
  *(_BYTE *)(v61 + v64) = HIBYTE(v63) ^ 0x1A;
  *(_BYTE *)(v61 + v64 + 1) = BYTE2(v63) ^ 0xE4;
  *(_BYTE *)(v61 + v64 + 2) = (((BYTE1(v63) ^ 0x52) - 2 * ((BYTE1(v63) ^ 0x52) & 7 ^ BYTE1(v63) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v61 + v64 + 3) = v63 ^ 0x20;
  *v57 += 4;
  v65 = v59 > 0xB0E072DA;
  if (v58)
    v65 = v58;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(a56 + 8 * ((28 * !v65) ^ a1)) - 8))(v60);
}

uint64_t sub_193225E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),void (*a23)(uint64_t),uint64_t (*a24)(uint64_t),int *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,uint64_t a61,uint64_t a62,int a63)
{
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  unint64_t v76;
  int v77;
  int v78;
  uint64_t v79;

  LODWORD(STACK[0x770]) = v65;
  LODWORD(STACK[0x76C]) = v66;
  v71 = (v67 + 363554666) & 0xEA549FFF;
  LODWORD(STACK[0x774]) = a63;
  v68[416] = a61;
  LODWORD(STACK[0x798]) = a60;
  v68[412] = a59;
  v68[417] = a58;
  v68[418] = a57;
  LODWORD(STACK[0x79C]) = a56;
  v68[419] = a55;
  v68[423] = a54;
  v68[420] = a53;
  LODWORD(STACK[0x7B4]) = a52;
  LODWORD(STACK[0x7D4]) = a50;
  v68[421] = a49;
  v68[422] = a48;
  v68[424] = a47;
  LODWORD(STACK[0x7F4]) = a46;
  v68[425] = a45;
  v68[426] = a44;
  v68[427] = a1;
  v68[428] = v63;
  v68[430] = v64;
  v68[431] = a3;
  v68[432] = a4;
  STACK[0x11F8] = v68[432];
  STACK[0x1200] = v68[431];
  STACK[0x1218] = v68[430];
  STACK[0x1220] = v68[428];
  STACK[0x1238] = v68[427];
  STACK[0x1248] = v68[426];
  STACK[0x1258] = v68[425];
  LODWORD(STACK[0x171C]) = STACK[0x7F4];
  STACK[0x1278] = v68[424];
  STACK[0x1280] = v68[422];
  STACK[0x1290] = v68[421];
  LODWORD(STACK[0x1738]) = STACK[0x7D4];
  LODWORD(STACK[0x173C]) = STACK[0x7B4];
  STACK[0x12A0] = v68[420];
  v68[5] = v68[423];
  STACK[0x12B0] = v68[419];
  LODWORD(STACK[0x1740]) = STACK[0x79C];
  STACK[0x12B8] = v68[418];
  STACK[0x12C8] = v68[417];
  v68[11] = v68[412];
  LODWORD(STACK[0x1744]) = STACK[0x798];
  STACK[0x12D8] = v68[416];
  LODWORD(STACK[0x1794]) = STACK[0x774];
  v72 = STACK[0x2640];
  STACK[0x12E0] = STACK[0x2640];
  STACK[0x2638] = 0;
  LODWORD(STACK[0x220]) = 0;
  a23(a26);
  v73 = *(_QWORD *)v72;
  v74 = *(_DWORD *)(v72 + 12);
  v75 = *a25;
  STACK[0x12F0] = v72 + 12;
  v76 = STACK[0xB50];
  v77 = 597255653 * ((((v70 - 144) | 0xFE832577) + (~(v70 - 144) | 0x17CDA88)) ^ 0xF7885AEF);
  STACK[0x2948] = STACK[0xB48];
  STACK[0x2968] = v76;
  *(_DWORD *)(v70 - 112) = v77 + v71 - 237;
  *(_DWORD *)(v70 - 140) = (v71 ^ 0x5E46BF91) + v77 + v74 - ((2 * v74) & 0xBC8D6408);
  *(_DWORD *)(v70 - 128) = (((v71 + 268432025) | 0x78FB410) ^ v75 ^ 0xAAB45BC6)
                         - v77
                         + ((2 * v75) & 0x7A77DFF0)
                         + 1742600128;
  STACK[0x2958] = v73;
  a22(v70 - 144);
  v78 = *(_DWORD *)(v70 - 144);
  v79 = a24(a26);
  LODWORD(STACK[0x800]) = v78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v69 + 8 * (int)((7457 * (v78 == 663729217)) ^ v71)) - 12))(v79);
}

uint64_t sub_193226140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t), unsigned int *a17, uint64_t a18, uint64_t (*a19)(_QWORD, uint64_t, uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;

  *(_QWORD *)(v29 + 528) = *(_QWORD *)(v28 + 8 * v25)
                         - 486723911
                         * (((v27 | 0xFF4CF6DA60176B9FLL) - (v27 | 0xB309259FE89460) + 0xB309259FE89460) ^ 0xCDF22D4BD0DD0B05)
                         - 8;
  *(_DWORD *)(v31 - 128) = v25
                         - 71465943
                         - 486723911 * (((v27 | 0x60176B9F) - (v27 | 0x9FE89460) - 1612147616) ^ 0xD0DD0B05);
  *(_QWORD *)(v29 + 520) = v30;
  a16(v31 - 144);
  v32 = a19(*a17, a18, a25);
  v33 = ((v32 << (((v25 ^ v26) - 8) ^ 0x8C)) & 0x9CD7AABE) + (v32 ^ 0x4E6BD55F);
  v34 = *(_QWORD *)(v28 + 8 * (v25 & 0x22704B7A));
  *(_QWORD *)(v29 + 520) = v30;
  *(_DWORD *)(v31 - 128) = v25
                         - 71465943
                         - 486723911 * (((v27 | 0x633E0C62) - (v27 | 0x9CC1F39D) - 1665010787) ^ 0xD3F46CF8);
  *(_QWORD *)(v29 + 528) = v34
                         - 486723911
                         * (((v27 | 0xE5792BB8633E0C62) - (v27 | 0x1A86D4479CC1F39DLL) + 0x1A86D4479CC1F39DLL) ^ 0xD7C7F029D3F46CF8)
                         - 8;
  v35 = ((uint64_t (*)(uint64_t))a16)(v31 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28 + 8 * ((3906 * (v33 == 1315689823)) ^ ((int)v25 + 59)))
                                          - 4))(v35);
}

uint64_t sub_1932262D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),void (*a23)(uint64_t),uint64_t (*a24)(uint64_t),_DWORD *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  int v67;
  int v68;
  unint64_t v69;
  int v70;
  int v71;
  uint64_t v72;

  a23(a26);
  v65 = *(_QWORD *)STACK[0x12E0];
  v66 = *(_DWORD *)STACK[0x12F0];
  v67 = *a25 ^ 0x353FF7FE;
  v68 = ((a62 + 395290281) ^ 0x7DF05BC2) & (2 * *a25);
  v69 = *(_QWORD *)(v62 + 2312);
  v70 = 597255653 * (((v64 - 144) & 0x3DC92965 | ~((v64 - 144) | 0x3DC92965)) ^ 0xCB3DA903);
  STACK[0x2968] = *(_QWORD *)(v62 + 2320);
  STACK[0x2958] = v65;
  *(_DWORD *)(v64 - 128) = v67 - v70 - 270929990 + v68;
  *(_DWORD *)(v64 - 140) = v70 + 1581691396 + v66 - ((2 * v66) & 0xBC8D6408);
  STACK[0x2948] = v69;
  *(_DWORD *)(v64 - 112) = v70 + a62 - 237;
  a22(v64 - 144);
  v71 = *(_DWORD *)(v64 - 144);
  v72 = a24(a26);
  LODWORD(STACK[0x800]) = v71;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v63
                                                      + 8
                                                      * (int)((a62 + 395290281) ^ (a62 - 3348) ^ 0x178FB7DD ^ ((((LODWORD(STACK[0x800]) - (a62 + 395290281)) | (a62 + 395290281 - LODWORD(STACK[0x800]))) >> 31) * ((a62 - 520) ^ 0xB85))))
                                          - 4))(v72);
}

uint64_t sub_193226470()
{
  int v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  v4[467] = v3[503];
  v4[468] = v3[504];
  v4[469] = v3[507];
  v4[470] = v3[508];
  v4[471] = v3[511];
  v4[472] = v3[513];
  v4[473] = v3[515];
  LODWORD(STACK[0x8D8]) = STACK[0x171C];
  v4[475] = v3[519];
  v4[476] = v3[520];
  v4[477] = *(_QWORD *)(v1 + 3);
  LODWORD(STACK[0x8DC]) = STACK[0x1738];
  LODWORD(STACK[0x900]) = STACK[0x173C];
  v4[478] = *(_QWORD *)(v1 + 19);
  v4[463] = v4[5];
  v4[479] = *(_QWORD *)(v1 + 35);
  LODWORD(STACK[0x904]) = STACK[0x1740];
  v4[481] = *(_QWORD *)(v1 + 43);
  v4[482] = *(_QWORD *)(v1 + 59);
  v4[474] = v4[11];
  LODWORD(STACK[0x91C]) = STACK[0x1744];
  v4[483] = *(_QWORD *)(v1 + 75);
  v6 = STACK[0x1794];
  LODWORD(STACK[0x93C]) = STACK[0x1794];
  LODWORD(STACK[0x1818]) = v6;
  v4[13] = v4[483];
  LODWORD(STACK[0x181C]) = STACK[0x91C];
  v4[48] = v4[474];
  v7 = v4[481];
  v4[15] = v4[482];
  v4[16] = v7;
  LODWORD(STACK[0x187C]) = STACK[0x904];
  v4[17] = v4[479];
  v4[60] = v4[463];
  v4[19] = v4[478];
  LODWORD(STACK[0x189C]) = STACK[0x900];
  LODWORD(STACK[0x18BC]) = STACK[0x8DC];
  v4[21] = v4[477];
  v8 = v4[475];
  v4[23] = v4[476];
  v4[24] = v8;
  LODWORD(STACK[0x18D0]) = STACK[0x8D8];
  v9 = v4[472];
  v4[27] = v4[473];
  v4[28] = v9;
  v10 = v4[470];
  v4[29] = v4[471];
  v4[30] = v10;
  v11 = v4[468];
  v4[31] = v4[469];
  v4[32] = v11;
  v4[35] = v4[467];
  LODWORD(STACK[0x968]) = STACK[0x1818];
  v4[484] = v4[13];
  LODWORD(STACK[0x96C]) = STACK[0x181C];
  v4[480] = v4[48];
  v12 = v4[16];
  v4[485] = v4[15];
  v4[486] = v12;
  LODWORD(STACK[0x988]) = STACK[0x187C];
  v4[487] = v4[17];
  v4[491] = v4[60];
  v4[488] = v4[19];
  LODWORD(STACK[0x98C]) = STACK[0x189C];
  LODWORD(STACK[0x990]) = STACK[0x18BC];
  v4[489] = v4[21];
  v13 = v4[24];
  v4[490] = v4[23];
  v4[492] = v13;
  LODWORD(STACK[0x994]) = STACK[0x18D0];
  v14 = v4[28];
  v4[493] = v4[27];
  v4[495] = v14;
  v15 = v4[30];
  v4[496] = v4[29];
  v4[497] = v15;
  v16 = v4[32];
  v4[498] = v4[31];
  v4[499] = v16;
  v4[500] = v4[35];
  LODWORD(STACK[0x95C]) = 101330291;
  v17 = (uint64_t (*)(void))(2485027307
                          - (((v2 - 2701) | 0x90u)
                           - 1809940377)
                          + *(_QWORD *)(v5 + 8 * ((2920 * (v0 == 101330291)) ^ ((v2 - 2701) | 0x90))));
  LODWORD(STACK[0x9B8]) = 101330291;
  return v17();
}

void sub_193226540(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  STACK[0x2648] = 0;
  v5 = *(_QWORD *)(v4 + 8 * a1);
  v3[564] = v2[503];
  v3[565] = v2[504];
  v3[566] = v2[507];
  v3[567] = v2[508];
  v3[568] = v2[511];
  v3[569] = v2[513];
  v3[570] = v2[515];
  LODWORD(STACK[0xB8C]) = STACK[0x171C];
  v3[571] = v2[519];
  v2[21] = v5;
  v3[572] = v2[520];
  v3[573] = *(_QWORD *)(v1 + 3);
  LODWORD(STACK[0xBA8]) = STACK[0x1738];
  LODWORD(STACK[0xBAC]) = STACK[0x173C];
  v3[574] = *(_QWORD *)(v1 + 19);
  v2[29] = v3[5];
  v3[575] = *(_QWORD *)(v1 + 35);
  LODWORD(STACK[0xBB0]) = STACK[0x1740];
  v3[576] = *(_QWORD *)(v1 + 43);
  v3[577] = *(_QWORD *)(v1 + 59);
  v2[41] = v3[11];
  LODWORD(STACK[0xBB4]) = STACK[0x1744];
  v3[578] = *(_QWORD *)(v1 + 75);
  LODWORD(STACK[0xBD8]) = STACK[0x1794];
  JUMPOUT(0x193226618);
}

uint64_t sub_193226770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(uint64_t, uint64_t))
{
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  _QWORD *v34;
  uint64_t v35;

  v33 = (v30 - v29 + 1877573701) | 0x90168163;
  v34 = *(_QWORD **)(v31 + 1144);
  *v34 = 0;
  v34[1] = 0;
  *(_QWORD *)(v31 + 1168) = v34 + 1;
  v35 = a29(4096, 2241923698);
  **(_QWORD **)(v31 + 1144) = v35;
  return (*(uint64_t (**)(void))(v32 + 8 * (int)(((v35 != 0) * (v33 ^ 0x941E81F4)) ^ v30)))();
}

uint64_t sub_1932267E4()
{
  int v0;
  uint64_t v1;
  int v2;

  **(_DWORD **)(v1 + 1168) = v0;
  *(_QWORD *)(v1 + 4640) = *(_QWORD *)(v1 + 1144);
  LOBYTE(STACK[0x2634]) = 1;
  LODWORD(STACK[0xBDC]) = v2;
  LODWORD(STACK[0x1A9C]) = STACK[0xBDC];
  *(_BYTE *)(v1 + 271) = STACK[0x2634];
  **(_QWORD **)(v1 + 896) = *(_QWORD *)(v1 + 4640);
  return (*(uint64_t (**)(void))(v1 + 1136))();
}

uint64_t sub_193226864()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);

  *(_QWORD *)(v1 + 3600) = *(_QWORD *)(v1 + 1120);
  *(_QWORD *)(v1 + 3608) = *(_QWORD *)(v1 + 1112);
  *(_QWORD *)(v1 + 3616) = *(_QWORD *)(v1 + 1096);
  *(_QWORD *)(v1 + 3624) = *(_QWORD *)(v1 + 1080);
  *(_QWORD *)(v1 + 3632) = *(_QWORD *)(v1 + 1072);
  *(_QWORD *)(v1 + 3640) = *(_QWORD *)(v1 + 1048);
  *(_QWORD *)(v1 + 3648) = *(_QWORD *)(v1 + 1032);
  LODWORD(STACK[0x854]) = STACK[0x1A64];
  *(_QWORD *)(v1 + 3664) = *(_QWORD *)(v1 + 1016);
  *(_QWORD *)(v1 + 3672) = *(_QWORD *)(v1 + 984);
  *(_QWORD *)(v1 + 3680) = *(_QWORD *)(v1 + 976);
  LODWORD(STACK[0x86C]) = STACK[0x1A60];
  LODWORD(STACK[0x88C]) = STACK[0x1A5C];
  *(_QWORD *)(v1 + 3688) = *(_QWORD *)(v1 + 968);
  *(_QWORD *)(v1 + 3568) = *(_QWORD *)(v1 + 1224);
  *(_QWORD *)(v1 + 3696) = *(_QWORD *)(v1 + 960);
  LODWORD(STACK[0x89C]) = STACK[0x1A58];
  *(_QWORD *)(v1 + 3712) = *(_QWORD *)(v1 + 952);
  *(_QWORD *)(v1 + 3720) = *(_QWORD *)(v1 + 928);
  *(_QWORD *)(v1 + 3656) = *(_QWORD *)(v1 + 1216);
  LODWORD(STACK[0x8AC]) = STACK[0x1A3C];
  *(_QWORD *)(v1 + 3728) = *(_QWORD *)(v1 + 912);
  LODWORD(STACK[0x8D0]) = STACK[0x1A38];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8 * ((*(unsigned __int8 *)(v1 + 271) * (v0 + v4 - 4287)) | (v2 + v4 + 2140)))
                         - 4);
  LODWORD(STACK[0x8D4]) = STACK[0x1A9C];
  return v5();
}

uint64_t sub_193226950@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  _BOOL4 v6;
  uint64_t (*v7)(void);

  v4 = STACK[0x220];
  LODWORD(STACK[0x17A4]) = STACK[0x220];
  v5 = *(_QWORD *)(v2 + 21);
  STACK[0x1300] = v5;
  v6 = v4 > *(_DWORD *)(v5 + 8);
  v1[433] = v1[140];
  v1[434] = v1[139];
  v1[435] = v1[137];
  v1[436] = v1[135];
  v1[437] = v1[134];
  v1[438] = v1[131];
  v1[439] = v1[129];
  LODWORD(STACK[0x804]) = STACK[0x1A64];
  v1[441] = v1[127];
  v1[442] = v1[123];
  v1[443] = v1[122];
  LODWORD(STACK[0x820]) = STACK[0x1A60];
  v1[444] = v1[121];
  v1[429] = v1[153];
  v1[445] = v1[120];
  LODWORD(STACK[0x824]) = STACK[0x1A58];
  v1[447] = v1[119];
  v1[448] = v1[116];
  v1[440] = v1[152];
  LODWORD(STACK[0x828]) = STACK[0x1A3C];
  v1[449] = v1[114];
  LODWORD(STACK[0x82C]) = STACK[0x1A38];
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((121 * v6) ^ (a1 - 822))) - ((a1 - 839807214) & 0x320E60E7 ^ 0xEFLL));
  LODWORD(STACK[0x850]) = 101372955;
  return v7();
}

void sub_193226A84(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v15 = *(_QWORD *)(v14 + 8 * a2);
  v16 = *(_QWORD *)(v13 + 1112);
  v12[32] = *(_QWORD *)(v13 + 1120);
  v12[33] = v16;
  v17 = *(_QWORD *)(v13 + 1080);
  v12[35] = *(_QWORD *)(v13 + 1096);
  v12[36] = v17;
  v12[37] = *(_QWORD *)(v13 + 1072);
  v18 = *(_QWORD *)(v13 + 1048);
  v12[118] = v15;
  LODWORD(STACK[0xD48]) = STACK[0x1A64];
  v19 = *(_QWORD *)(v13 + 1016);
  v12[39] = v18;
  v12[40] = v19;
  v12[43] = *(_QWORD *)(v13 + 984);
  v20 = *(_QWORD *)(v13 + 976);
  LODWORD(STACK[0xD4C]) = STACK[0x1A60];
  LODWORD(STACK[0xD5C]) = STACK[0x1A5C];
  v21 = *(_QWORD *)(v13 + 968);
  v12[45] = v20;
  v12[46] = v21;
  v12[124] = *(_QWORD *)(v13 + 1224);
  v12[47] = *(_QWORD *)(v13 + 960);
  LODWORD(STACK[0xD7C]) = STACK[0x1A58];
  v22 = *(_QWORD *)(v13 + 912);
  LODWORD(STACK[0xD9C]) = STACK[0x1A38];
  LODWORD(STACK[0xDA8]) = STACK[0x17A4];
  v23 = *(_QWORD *)(a1 + 115);
  v12[50] = v22;
  v12[51] = v23;
  v2 = v12[50];
  *(_QWORD *)(v13 + 1592) = v12[51];
  v3 = LODWORD(STACK[0xDA8]);
  LODWORD(STACK[0x1B94]) = STACK[0xD9C];
  *(_QWORD *)(v13 + 1600) = v2;
  LODWORD(STACK[0x1BB4]) = STACK[0xD7C];
  *(_QWORD *)(v13 + 1616) = v12[47];
  *(_QWORD *)(v13 + 1448) = v12[124];
  v4 = v12[45];
  *(_QWORD *)(v13 + 1640) = v12[46];
  LODWORD(STACK[0x1BC8]) = STACK[0xD5C];
  LODWORD(STACK[0x1BCC]) = STACK[0xD4C];
  *(_QWORD *)(v13 + 1648) = v4;
  *(_QWORD *)(v13 + 1664) = v12[43];
  v5 = v12[39];
  *(_QWORD *)(v13 + 1672) = v12[40];
  LODWORD(STACK[0x1BF0]) = STACK[0xD48];
  v6 = v12[118];
  *(_QWORD *)(v13 + 1680) = v5;
  *(_QWORD *)(v13 + 1696) = v12[37];
  v7 = v12[35];
  *(_QWORD *)(v13 + 1712) = v12[36];
  *(_QWORD *)(v13 + 1728) = v7;
  v8 = v12[32];
  *(_QWORD *)(v13 + 1752) = v12[33];
  *(_QWORD *)(v13 + 1760) = v8;
  *(_QWORD *)(v13 + 1768) = v6;
  v9 = *(_QWORD *)(v13 + 1592);
  v10 = *(unsigned int *)(v9 + 8);
  *(_QWORD *)(v13 + 1776) = v9 + 8;
  v11 = (v3 ^ 0x57FAFB73DD7BFF77) + v10 - 0x57FAFB73DD7BFF77 + ((v3 << (((a2 - 98) | 0x36) ^ 0xB6)) & 0x1BAF7FEEELL);
  *(_QWORD *)(v13 + 1544) = v11;
  *(_BYTE *)(v13 + 1007) = v11 < 0xFFFFFFFF;
  v12[135] = v10;
  JUMPOUT(0x193229428);
}

uint64_t sub_193226B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;

  LODWORD(STACK[0x17B4]) = STACK[0x850];
  LODWORD(STACK[0x17D4]) = STACK[0x82C];
  v8 = v3 + 1809943517;
  *(_QWORD *)(a3 + 131) = v5[449];
  LODWORD(STACK[0x17E4]) = STACK[0x828];
  v5[22] = v5[440];
  *(_QWORD *)(a3 + 139) = v5[448];
  *(_QWORD *)(a3 + 155) = v5[447];
  LODWORD(STACK[0x17FC]) = STACK[0x824];
  *(_QWORD *)(a3 + 171) = v5[445];
  v5[37] = v5[429];
  *(_QWORD *)(a3 + 179) = v5[444];
  LODWORD(STACK[0x1810]) = STACK[0x820];
  *(_QWORD *)(a3 + 195) = v5[443];
  *(_QWORD *)(a3 + 211) = v5[442];
  *(_QWORD *)(a3 + 243) = v5[441];
  LODWORD(STACK[0x1814]) = STACK[0x804];
  *(_QWORD *)(a3 + 251) = v5[439];
  *v5 = v5[438];
  v5[2] = v5[437];
  v9 = v5[435];
  v5[6] = v5[436];
  v5[7] = v9;
  v10 = LODWORD(STACK[0x17B4]) == ((v3 + 1933258077) & 0xF8A651EB ^ (v4 + v6 + v3 - 348 + 115));
  v5[9] = v5[434];
  v5[12] = v5[433];
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * v10) | (8 * v10)) ^ v8)))();
}

uint64_t sub_193226C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, unint64_t, uint64_t, uint64_t);

  v9 = **(_QWORD **)(v7 + 21);
  v10 = 203 * (v3 ^ 0x147);
  v11 = LODWORD(STACK[0x220]);
  v5[258] = v6[12];
  v5[260] = v6[9];
  v12 = v6[6];
  v5[261] = v6[7];
  v13 = *(_QWORD *)(v7 + 5);
  v14 = *(_QWORD *)(v8 + 8 * v3) - 8;
  v5[263] = v12;
  v5[266] = v6[2];
  v5[267] = *v6;
  v5[270] = *(_QWORD *)(a3 + 251);
  LODWORD(STACK[0x114C]) = STACK[0x1814];
  v5[272] = *(_QWORD *)(a3 + 243);
  v5[275] = *(_QWORD *)(a3 + 211);
  v5[276] = *(_QWORD *)(a3 + 195);
  LODWORD(STACK[0x116C]) = STACK[0x1810];
  LODWORD(STACK[0x117C]) = v4;
  v5[277] = *(_QWORD *)(a3 + 179);
  v5[328] = v6[37];
  v5[280] = *(_QWORD *)(a3 + 171);
  LODWORD(STACK[0x11A0]) = STACK[0x17FC];
  v5[340] = v14;
  v5[281] = *(_QWORD *)(a3 + 155);
  v5[283] = *(_QWORD *)(a3 + 139);
  v5[351] = v6[22];
  LODWORD(STACK[0x11A4]) = STACK[0x17E4];
  v5[285] = *(_QWORD *)(a3 + 131);
  LODWORD(STACK[0x11A8]) = STACK[0x17D4];
  v5[286] = v9;
  v5[362] = 0x5D952DACE41797ELL;
  v5[288] = v13;
  v5[373] = v11 - 0x4D58EB37AD4779BLL - ((v10 + 0x10A570B3DLL) & (2 * v11));
  v6[304] = v5[373];
  v6[303] = v5[288];
  v6[306] = v5[362];
  v6[305] = v5[286];
  LODWORD(STACK[0x1D98]) = STACK[0x11A8];
  v6[307] = v5[285];
  LODWORD(STACK[0x1D9C]) = STACK[0x11A4];
  v6[311] = v5[351];
  v6[309] = v5[283];
  v6[312] = v5[281];
  LODWORD(STACK[0x1DC0]) = STACK[0x11A0];
  v6[313] = v5[280];
  v6[323] = v5[328];
  v6[315] = v5[277];
  LODWORD(STACK[0x1DC4]) = STACK[0x117C];
  LODWORD(STACK[0x1DC8]) = STACK[0x116C];
  v6[316] = v5[276];
  v6[317] = v5[275];
  v6[319] = v5[272];
  LODWORD(STACK[0x1DCC]) = STACK[0x114C];
  v6[320] = v5[270];
  v6[322] = v5[267];
  v6[324] = v5[266];
  v6[325] = v5[263];
  v6[328] = v5[261];
  v6[329] = v5[260];
  LODWORD(v11) = v6[303] > (unint64_t)(v6[306] - 0x5D952DACE417E23 + v6[305] + 1189);
  v15 = v5[340];
  v6[330] = v5[258];
  v16 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                                        + 8
                                                                                        * (int)((2 * v11) | ((_DWORD)v11 << 6) | v10))
                                                                            - ((43 * (v10 ^ 0x5C2) - 3392) | 0x4A0)
                                                                            + 1177);
  v6[331] = v15;
  return v16(a1, 0xFFFFF3FC6EA7F1EALL, 0xC0391580E16, 3713000404);
}

uint64_t sub_193226D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v9 = *(_QWORD *)(v6 + 21);
  v4[208] = v9;
  v10 = STACK[0x17D4];
  v11 = v9 == 0;
  LODWORD(STACK[0x106C]) = STACK[0x17D4];
  v4[209] = *(_QWORD *)(a3 + 131);
  v12 = STACK[0x17E4];
  LODWORD(STACK[0x108C]) = STACK[0x17E4];
  v4[282] = v5[22];
  v4[212] = *(_QWORD *)(a3 + 139);
  v4[213] = *(_QWORD *)(a3 + 155);
  v13 = STACK[0x17FC];
  LODWORD(STACK[0x1098]) = STACK[0x17FC];
  v4[215] = *(_QWORD *)(a3 + 171);
  v4[294] = v5[37];
  v4[217] = *(_QWORD *)(a3 + 179);
  v14 = STACK[0x17B4];
  LODWORD(STACK[0x109C]) = STACK[0x17B4];
  v15 = STACK[0x1810];
  LODWORD(STACK[0x10B4]) = STACK[0x1810];
  v4[218] = *(_QWORD *)(a3 + 211);
  v4[220] = *(_QWORD *)(a3 + 243);
  v16 = STACK[0x1814];
  LODWORD(STACK[0x10D4]) = STACK[0x1814];
  v4[221] = *(_QWORD *)(a3 + 251);
  v4[222] = *v5;
  v4[224] = v5[2];
  v4[225] = v5[6];
  v17 = v5[6];
  v4[228] = v5[7];
  v4[230] = v5[9];
  v4[231] = v5[12];
  v18 = *(_QWORD *)(v8 + 8 * v3);
  v4[207] = v18;
  v4[232] = v18;
  LODWORD(STACK[0x10D8]) = v10;
  v4[235] = *(_QWORD *)(a3 + 131);
  LODWORD(STACK[0x10DC]) = v12;
  v4[305] = v5[22];
  v4[236] = *(_QWORD *)(a3 + 139);
  v4[238] = *(_QWORD *)(a3 + 155);
  LODWORD(STACK[0x10EC]) = v13;
  v4[240] = *(_QWORD *)(a3 + 171);
  v4[317] = v5[37];
  v4[241] = *(_QWORD *)(a3 + 179);
  LODWORD(STACK[0x1110]) = v14;
  LODWORD(STACK[0x1114]) = v15;
  v4[243] = *(_QWORD *)(a3 + 211);
  v4[244] = *(_QWORD *)(a3 + 243);
  v19 = !v11;
  LODWORD(STACK[0x112C]) = v16;
  v4[245] = *(_QWORD *)(a3 + 251);
  v4[247] = *v5;
  v4[248] = v5[2];
  v4[251] = v17;
  v4[253] = v5[7];
  v4[254] = v5[9];
  v4[257] = v5[12];
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((v7 + v3 + ((v3 - 1237391566) & 0xDDDF99F7) + 47 * (v3 ^ 0xD8) + 617) ^ ((32 * v19) | (v19 << 6)))))();
}

void sub_193226F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned int *a30,void (*a31)(_QWORD, unint64_t, _QWORD))
{
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;

  v33 = *(_QWORD *)(v32 + 21);
  *(_DWORD *)(v33 + 8) = STACK[0x220];
  *(_DWORD *)(v33 + 12) = 0;
  v31[450] = v31[330];
  v31[451] = v31[329];
  v31[452] = v31[328];
  v31[453] = v31[325];
  v31[454] = v31[324];
  v31[455] = v31[322];
  v31[456] = v31[320];
  LODWORD(STACK[0x854]) = STACK[0x1DCC];
  v31[458] = v31[319];
  v31[459] = v31[317];
  v31[460] = v33;
  LODWORD(STACK[0x86C]) = STACK[0x1DC8];
  LODWORD(v33) = STACK[0x1DC4];
  LODWORD(STACK[0x88C]) = STACK[0x1DC4];
  v31[461] = v31[315];
  v31[446] = v31[323];
  v31[462] = v31[313];
  LODWORD(STACK[0x89C]) = STACK[0x1DC0];
  v31[464] = v31[312];
  v31[465] = v31[309];
  v31[457] = v31[311];
  LODWORD(STACK[0x8AC]) = STACK[0x1D9C];
  v31[466] = v31[307];
  LODWORD(STACK[0x8D0]) = STACK[0x1D98];
  LODWORD(STACK[0x8D4]) = v33;
  v55 = v31[466];
  v54 = STACK[0x8AC];
  v52 = v31[465];
  v53 = v31[457];
  v51 = v31[464];
  v50 = STACK[0x89C];
  v48 = v31[446];
  v49 = v31[462];
  v47 = v31[461];
  v46 = STACK[0x88C];
  v45 = STACK[0x86C];
  v43 = v31[459];
  v44 = v31[460];
  v42 = v31[458];
  v34 = STACK[0x854];
  v35 = v31[456];
  v36 = v31[455];
  v37 = v31[454];
  v38 = v31[453];
  v39 = v31[452];
  v40 = v31[451];
  v41 = v31[450];
  a31(*a30, STACK[0x2638], LODWORD(STACK[0x220]));
  v31[467] = v41;
  v31[468] = v40;
  v31[469] = v39;
  v31[470] = v38;
  v31[471] = v37;
  v31[472] = v36;
  v31[473] = v35;
  LODWORD(STACK[0x8D8]) = v34;
  v31[475] = v42;
  v31[476] = v43;
  v31[477] = v44;
  LODWORD(STACK[0x8DC]) = v45;
  LODWORD(STACK[0x900]) = v46;
  v31[478] = v47;
  v31[463] = v48;
  v31[479] = v49;
  LODWORD(STACK[0x904]) = v50;
  v31[481] = v51;
  v31[482] = v52;
  v31[474] = v53;
  LODWORD(STACK[0x91C]) = v54;
  v31[483] = v55;
  JUMPOUT(0x193227170);
}

uint64_t sub_193227310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  uint64_t v77;

  v67 = *(_QWORD *)(v66 + 8 * v63);
  v68 = (v63 - 1490268584);
  LODWORD(STACK[0x9BC]) = STACK[0x1818];
  v69 = v67 + v68 - 2804699124;
  v64[501] = v64[13];
  LODWORD(STACK[0x9D4]) = STACK[0x181C];
  v64[494] = v64[48];
  v70 = v64[16];
  v64[502] = v64[15];
  v64[503] = v70;
  LODWORD(STACK[0x9F4]) = STACK[0x187C];
  v64[504] = v64[17];
  v64[505] = v64[60];
  v64[506] = v64[19];
  LODWORD(STACK[0xA14]) = STACK[0x189C];
  LODWORD(STACK[0xA20]) = STACK[0x18BC];
  v64[507] = v64[21];
  v71 = v64[24];
  v64[508] = v64[23];
  v64[509] = v71;
  LODWORD(STACK[0xA24]) = STACK[0x18D0];
  v72 = v64[28];
  v64[510] = v64[27];
  v64[511] = v72;
  v73 = v64[30];
  v64[512] = v64[29];
  v64[513] = v73;
  v74 = v64[32];
  v64[515] = v64[31];
  v64[516] = v74;
  v75 = v64[35];
  v64[62] = v64[516];
  v76 = 433 * (v68 ^ 0xA72C4FEB);
  v64[64] = v64[515];
  v64[65] = v64[513];
  v64[66] = v64[512];
  v64[68] = v64[511];
  v64[69] = v64[510];
  LODWORD(STACK[0x1924]) = STACK[0xA24];
  v64[71] = v64[509];
  v64[73] = v64[508];
  v64[74] = v64[507];
  LODWORD(STACK[0x1934]) = STACK[0xA20];
  LODWORD(STACK[0x1954]) = STACK[0xA14];
  v64[77] = v64[506];
  v64[95] = v64[505];
  v77 = v64[74];
  v64[78] = v64[504];
  LODWORD(STACK[0x1974]) = STACK[0x9F4];
  v64[79] = v64[503];
  v64[81] = v64[502];
  v64[115] = v64[494];
  LODWORD(STACK[0x1988]) = STACK[0x9D4];
  v64[84] = v64[501];
  LODWORD(STACK[0x198C]) = STACK[0x9BC];
  LOBYTE(STACK[0x128D]) = v77 == 0;
  v64[85] = v77 + 12;
  v64[87] = v77 + 8;
  v64[517] = v75;
  v64[514] = v69;
  v64[518] = &STACK[0x224];
  STACK[0x7C0] = v75;
  STACK[0xA08] = v69;
  STACK[0x7C8] = (unint64_t)&STACK[0x224];
  v64[273] = &STACK[0x224];
  v64[274] = v75;
  v64[275] = v69;
  *(_BYTE *)(v65 + 2) = 0;
  LODWORD(STACK[0x1000]) = 101330305;
  return (*(uint64_t (**)(void))(a63
                              + 8
                              * (((((v76 - 48) ^ LOBYTE(STACK[0x128D])) & 1)
                                * (((v76 - 144) | 0x60) ^ 0x11DE)) ^ v76)))();
}

uint64_t sub_1932278F4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  _BOOL4 v7;

  v3 = **(unsigned int **)(v1 + 680);
  LODWORD(STACK[0x1CD0]) = v3;
  v4 = (v3 ^ 0xF5773FAFF37BEFFFLL) + 0xA88C0503BF580B3 + ((2 * v3) & 0x1E6F7DFFELL);
  v5 = (**(unsigned int **)(v1 + 696) ^ 0xFEFF5EFD3EF8FF77)
     + 0x100A102F0787137
     + (((unint64_t)**(unsigned int **)(v1 + 696) << (((a1 + 95) | 0xB5) ^ 0xF6u)) & ((a1 - 298941676) & 0x11D17D1B ^ 0x7DF1FBFDLL));
  v6 = (v4 < 0x2F7170AE) ^ (v5 < 0x2F7170AE);
  v7 = v4 > v5;
  if (v6)
    v7 = v4 < 0x2F7170AE;
  LODWORD(STACK[0x1000]) = 101330305;
  return (*(uint64_t (**)(void))(v2 + 8 * ((496 * v7) ^ a1)))();
}

uint64_t sub_193227A20()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  v4 = v0 - 20;
  v5 = **(_QWORD **)(v2 + 592);
  v6 = ((2 * LODWORD(STACK[0x1CD0])) & 0x3F2F7CE8) + (LODWORD(STACK[0x1CD0]) ^ 0x1F97BE74) - 530038388;
  v7 = *(unsigned __int8 *)(v5 + v6 + 2);
  v8 = ((*(unsigned __int8 *)(v5 + v6) << (v4 & 0xF7 ^ 0xEF)) - (*(unsigned __int8 *)(v5 + v6) << 25) - 0x1000000) | (*(unsigned __int8 *)(v5 + v6 + 1) << 16) | (((v7 + 4420934 - ((2 * v7) & 0x4C)) << 8) - 0x2000) ^ 0x43752600;
  LODWORD(v5) = *(unsigned __int8 *)(v5 + v6 + 3);
  v9 = (v8 ^ 0x5A6FFF) & ((v5 - 1636428685 - ((2 * v5) & 0xE6)) ^ 0x82C7F04) ^ v8 & 0x69A59400;
  v10 = (v9 & 0x324D5387 ^ 0x12494387) + (v9 ^ 0x28A41408) - ((v9 ^ 0x28A41408) & 0x324D5387);
  **(_DWORD **)(v2 + 2184) = (((v10 ^ 0x1FBDF440) - 789305555) ^ ((v10 ^ 0x7B8AD7DE) - 1262287693) ^ ((v10 ^ 0x81840F66) + 1322114059))
                           - 619719546;
  **(_DWORD **)(v2 + 680) += 4;
  *(_BYTE *)(v3 + 2) = 1;
  LODWORD(STACK[0x1000]) = v1;
  LODWORD(STACK[0x1CD4]) = STACK[0x1000];
  *(_BYTE *)(v2 + 2227) = *(_BYTE *)(v3 + 2);
  LODWORD(STACK[0x968]) = STACK[0x198C];
  *(_QWORD *)(v2 + 3872) = *(_QWORD *)(v2 + 672);
  LODWORD(STACK[0x96C]) = STACK[0x1988];
  *(_QWORD *)(v2 + 3840) = *(_QWORD *)(v2 + 920);
  *(_QWORD *)(v2 + 3880) = *(_QWORD *)(v2 + 648);
  *(_QWORD *)(v2 + 3888) = *(_QWORD *)(v2 + 632);
  LODWORD(STACK[0x988]) = STACK[0x1974];
  *(_QWORD *)(v2 + 3896) = *(_QWORD *)(v2 + 624);
  *(_QWORD *)(v2 + 3928) = *(_QWORD *)(v2 + 760);
  *(_QWORD *)(v2 + 3904) = *(_QWORD *)(v2 + 616);
  LODWORD(STACK[0x98C]) = STACK[0x1954];
  LODWORD(STACK[0x990]) = STACK[0x1934];
  *(_QWORD *)(v2 + 3912) = *(_QWORD *)(v2 + 592);
  *(_QWORD *)(v2 + 3920) = *(_QWORD *)(v2 + 584);
  *(_QWORD *)(v2 + 3936) = *(_QWORD *)(v2 + 568);
  LODWORD(STACK[0x994]) = STACK[0x1924];
  *(_QWORD *)(v2 + 3944) = *(_QWORD *)(v2 + 552);
  *(_QWORD *)(v2 + 3960) = *(_QWORD *)(v2 + 544);
  *(_QWORD *)(v2 + 3968) = *(_QWORD *)(v2 + 528);
  *(_QWORD *)(v2 + 3976) = *(_QWORD *)(v2 + 520);
  *(_QWORD *)(v2 + 3984) = *(_QWORD *)(v2 + 512);
  *(_QWORD *)(v2 + 3992) = *(_QWORD *)(v2 + 496);
  *(_QWORD *)(v2 + 4000) = *(_QWORD *)(v2 + 2192);
  LODWORD(STACK[0x9B8]) = STACK[0x1CD4];
  return (*(uint64_t (**)(void))(v2 + 2200))();
}

uint64_t sub_193227CB0(uint64_t a1, int a2)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t (*v8)(unint64_t *);

  *(_QWORD *)(v4 + 4152) = *(_QWORD *)(v4 + 2192);
  *(_QWORD *)(v4 + 4160) = *(_QWORD *)(v4 + 496);
  *(_QWORD *)(v4 + 4168) = *(_QWORD *)(v4 + 512);
  *(_QWORD *)(v4 + 4176) = *(_QWORD *)(v4 + 520);
  *(_QWORD *)(v4 + 4184) = *(_QWORD *)(v4 + 528);
  *(_QWORD *)(v4 + 4192) = *(_QWORD *)(v4 + 544);
  *(_QWORD *)(v4 + 4208) = *(_QWORD *)(v4 + 552);
  *(_QWORD *)(v4 + 4216) = *(_QWORD *)(v4 + 568);
  *(_QWORD *)(v4 + 4224) = *(_QWORD *)(v4 + 584);
  *(_QWORD *)(v4 + 4232) = *(_QWORD *)(v4 + 592);
  LODWORD(STACK[0xA38]) = STACK[0x1934];
  LODWORD(STACK[0xA3C]) = STACK[0x1954];
  *(_QWORD *)(v4 + 4240) = *(_QWORD *)(v4 + 616);
  *(_QWORD *)(v4 + 4200) = *(_QWORD *)(v4 + 760);
  *(_QWORD *)(v4 + 4248) = *(_QWORD *)(v4 + 624);
  LODWORD(STACK[0xA40]) = STACK[0x1974];
  *(_QWORD *)(v4 + 4256) = *(_QWORD *)(v4 + 632);
  *(_QWORD *)(v4 + 4264) = *(_QWORD *)(v4 + 648);
  STACK[0x200] = *(_QWORD *)(v4 + 920);
  LODWORD(STACK[0xA44]) = STACK[0x1988];
  *(_QWORD *)(v4 + 4272) = *(_QWORD *)(v4 + 672);
  LODWORD(STACK[0xA5C]) = STACK[0x198C];
  v8 = (uint64_t (*)(unint64_t *))(*(_QWORD *)(v6
                                                              + 8
                                                              * ((*(unsigned __int8 *)(v4 + 2227) * (v5 + a2 + 993)) ^ (v5 + a2 + 459)))
                                                  - (v7 & v2 ^ v3));
  LODWORD(STACK[0xA74]) = STACK[0x1CD4];
  return v8(&STACK[0x128D]);
}

uint64_t sub_193227DA0(_BYTE *a1, int a2, uint64_t a3, unsigned int a4, char a5, char a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t (*v12)(void);

  LODWORD(STACK[0x19B0]) = STACK[0x228];
  v10[519] = v10[274];
  v10[520] = v10[62];
  v10[521] = v10[64];
  v10[522] = v10[65];
  v10[523] = v10[66];
  v10[524] = v10[68];
  v10[526] = v10[69];
  v10[527] = v10[71];
  v10[528] = v10[73];
  LODWORD(STACK[0xA38]) = STACK[0x1934];
  LODWORD(STACK[0xA3C]) = STACK[0x1954];
  v10[530] = v10[77];
  v10[525] = v10[95];
  v10[531] = v10[78];
  LODWORD(STACK[0xA40]) = STACK[0x1974];
  v10[532] = v10[79];
  v10[533] = v10[81];
  STACK[0x200] = v10[115];
  LODWORD(STACK[0xA44]) = STACK[0x1988];
  v10[534] = v10[84];
  LODWORD(STACK[0xA5C]) = STACK[0x198C];
  v11 = (((a2 ^ a5) * a6) ^ *a1) & 1;
  v10[529] = 0;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v11 * a8) ^ a2)) - (a2 ^ a4) * a7 + v9);
  LODWORD(STACK[0xA74]) = 101330305;
  return v12();
}

uint64_t sub_193227E94()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v16;
  _BOOL4 v17;

  v11 = **(unsigned int **)(v9 + 680);
  LODWORD(STACK[0x19B4]) = v11;
  *(_QWORD *)(v9 + 992) = v11;
  v12 = LODWORD(STACK[0x19B0]);
  v13 = **(unsigned int **)(v9 + 696);
  LODWORD(STACK[0xA8C]) = 101330305;
  v14 = (v10 - 4108)
      + (v11 ^ 0x7E56D73BBDFDBF75)
      + v12
      + ((v11 << ((25 * (v10 ^ 0xD3)) ^ v0)) & v1)
      + ((unint64_t)(v12 < v8) << 32)
      + v4;
  LODWORD(STACK[0xAAC]) = STACK[0x198C];
  v15 = (v13 ^ v2) + v5 + (v3 & (2 * v13));
  v16 = v14 < 0xFD9EDB3B;
  *(_QWORD *)(v9 + 4280) = *(_QWORD *)(v9 + 672);
  v17 = v14 > v15;
  LODWORD(STACK[0xABC]) = STACK[0x1988];
  if (v16 != v15 < 0xFD9EDB3B)
    v17 = v16;
  STACK[0x240] = *(_QWORD *)(v9 + 920);
  *(_QWORD *)(v9 + 4288) = *(_QWORD *)(v9 + 648);
  *(_QWORD *)(v9 + 4296) = *(_QWORD *)(v9 + 632);
  LODWORD(STACK[0xACC]) = STACK[0x1974];
  *(_QWORD *)(v9 + 4304) = *(_QWORD *)(v9 + 624);
  STACK[0x2A0] = *(_QWORD *)(v9 + 760);
  *(_QWORD *)(v9 + 4312) = *(_QWORD *)(v9 + 616);
  LODWORD(STACK[0xAF0]) = STACK[0x1954];
  LODWORD(STACK[0xAF4]) = STACK[0x1934];
  *(_QWORD *)(v9 + 4320) = *(_QWORD *)(v9 + 592);
  *(_QWORD *)(v9 + 4328) = *(_QWORD *)(v9 + 584);
  *(_QWORD *)(v9 + 4336) = *(_QWORD *)(v9 + 568);
  *(_QWORD *)(v9 + 4344) = *(_QWORD *)(v9 + 552);
  *(_QWORD *)(v9 + 4352) = *(_QWORD *)(v9 + 544);
  *(_QWORD *)(v9 + 4360) = *(_QWORD *)(v9 + 528);
  *(_QWORD *)(v9 + 4368) = *(_QWORD *)(v9 + 520);
  *(_QWORD *)(v9 + 4376) = *(_QWORD *)(v9 + 512);
  *(_QWORD *)(v9 + 4384) = *(_QWORD *)(v9 + 496);
  *(_QWORD *)(v9 + 4392) = *(_QWORD *)(v9 + 2192);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((!v17 * v6) ^ v10)) - 4))();
}

void sub_193228028(uint64_t a1, int a2)
{
  uint64_t v2;

  **(_DWORD **)(v2 + 680) = LODWORD(STACK[0x19B0]) + LODWORD(STACK[0x19B4]) + ((433 * (a2 ^ 0x15D)) ^ 0xF9F52EF6);
  JUMPOUT(0x193227888);
}

uint64_t sub_19322807C(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 4152) = *(_QWORD *)(v2 + 2192);
  *(_QWORD *)(v2 + 4160) = *(_QWORD *)(v2 + 496);
  *(_QWORD *)(v2 + 4168) = *(_QWORD *)(v2 + 512);
  *(_QWORD *)(v2 + 4176) = *(_QWORD *)(v2 + 520);
  *(_QWORD *)(v2 + 4184) = *(_QWORD *)(v2 + 528);
  *(_QWORD *)(v2 + 4192) = *(_QWORD *)(v2 + 544);
  *(_QWORD *)(v2 + 4208) = *(_QWORD *)(v2 + 552);
  *(_QWORD *)(v2 + 4216) = *(_QWORD *)(v2 + 568);
  *(_QWORD *)(v2 + 4224) = *(_QWORD *)(v2 + 584);
  *(_QWORD *)(v2 + 4232) = *(_QWORD *)(v2 + 592);
  LODWORD(STACK[0xA38]) = STACK[0x1934];
  LODWORD(STACK[0xA3C]) = STACK[0x1954];
  *(_QWORD *)(v2 + 4240) = *(_QWORD *)(v2 + 616);
  *(_QWORD *)(v2 + 4200) = *(_QWORD *)(v2 + 760);
  *(_QWORD *)(v2 + 4248) = *(_QWORD *)(v2 + 624);
  LODWORD(STACK[0xA40]) = STACK[0x1974];
  *(_QWORD *)(v2 + 4256) = *(_QWORD *)(v2 + 632);
  *(_QWORD *)(v2 + 4264) = *(_QWORD *)(v2 + 648);
  STACK[0x200] = *(_QWORD *)(v2 + 920);
  LODWORD(STACK[0xA44]) = STACK[0x1988];
  *(_QWORD *)(v2 + 4272) = *(_QWORD *)(v2 + 672);
  LODWORD(STACK[0xA5C]) = STACK[0x198C];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                     + 8
                                     * ((*(unsigned __int8 *)(v2 + 2227) * (((a2 + 1809940381) | 0x260) + 1639)) ^ (v3 + a2 + 459)))
                         - 4);
  LODWORD(STACK[0xA74]) = STACK[0x1CD4];
  return v5();
}

uint64_t sub_193228178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(void))
{
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t (*v33)(void);

  v31[126] = (LODWORD(STACK[0x228]) - 101372955);
  v32 = a29();
  v31[88] = v32;
  *a9 = v32;
  v31[519] = v31[274];
  v31[520] = v31[62];
  v31[521] = v31[64];
  v31[522] = v31[65];
  v31[523] = v31[66];
  v31[524] = v31[68];
  v31[526] = v31[69];
  v31[527] = v31[71];
  v31[528] = v31[73];
  v31[529] = v31[74];
  LODWORD(STACK[0xA38]) = STACK[0x1934];
  LODWORD(STACK[0xA3C]) = STACK[0x1954];
  v31[530] = v31[77];
  v31[525] = v31[95];
  v31[531] = v31[78];
  LODWORD(STACK[0xA40]) = STACK[0x1974];
  v31[532] = v31[79];
  v31[533] = v31[81];
  STACK[0x200] = v31[115];
  LODWORD(STACK[0xA44]) = STACK[0x1988];
  v31[534] = v31[84];
  LODWORD(STACK[0xA5C]) = STACK[0x198C];
  v33 = (uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * (((v32 != 0) * (((2 * v30) ^ 0x6F8) + 2618)) ^ v30))
                          - ((v30 - 803) ^ 0xD5));
  LODWORD(STACK[0xA74]) = 101330303;
  return v33();
}

uint64_t sub_1932282A0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t, unint64_t, uint64_t, uint64_t);

  v4 = v3[126];
  v5 = *(_QWORD *)(v1 + 8 * v2);
  v6 = 29 * (v2 ^ 0x121u);
  STACK[0xA50] = v3[274];
  STACK[0xA60] = v3[62];
  STACK[0xA68] = v3[64];
  STACK[0xA78] = v3[65];
  STACK[0xA90] = v3[66];
  STACK[0xA98] = v3[68];
  STACK[0xAB0] = v3[69];
  LODWORD(STACK[0x114C]) = STACK[0x1924];
  STACK[0xAC0] = v3[71];
  STACK[0xAD8] = v3[73];
  STACK[0xAE0] = v3[74];
  LODWORD(STACK[0x116C]) = STACK[0x1934];
  LODWORD(STACK[0x117C]) = STACK[0x1954];
  STACK[0xAE8] = v3[77];
  STACK[0xC80] = v3[95];
  STACK[0xB00] = v3[78];
  LODWORD(STACK[0x11A0]) = STACK[0x1974];
  STACK[0xCE0] = v5 - 8;
  STACK[0xB08] = v3[79];
  STACK[0xB18] = v3[81];
  STACK[0xD38] = v3[115];
  LODWORD(STACK[0x11A4]) = STACK[0x1988];
  STACK[0xB28] = v3[84];
  LODWORD(STACK[0x11A8]) = STACK[0x198C];
  STACK[0xB30] = v3[88];
  STACK[0xD90] = 0x5D952DACE41797ELL;
  STACK[0xB40] = v3[274];
  STACK[0xDE8] = v4 - ((2 * v4) & 0x10A5710CALL) + (v6 ^ 0xFB2A714C852B8DE8);
  v3[304] = STACK[0xDE8];
  v3[303] = STACK[0xB40];
  v3[306] = STACK[0xD90];
  v3[305] = STACK[0xB30];
  LODWORD(STACK[0x1D98]) = STACK[0x11A8];
  v3[307] = STACK[0xB28];
  LODWORD(STACK[0x1D9C]) = STACK[0x11A4];
  v3[311] = STACK[0xD38];
  v3[309] = STACK[0xB18];
  v3[312] = STACK[0xB08];
  LODWORD(STACK[0x1DC0]) = STACK[0x11A0];
  v3[313] = STACK[0xB00];
  v3[323] = STACK[0xC80];
  v3[315] = STACK[0xAE8];
  LODWORD(STACK[0x1DC4]) = STACK[0x117C];
  LODWORD(STACK[0x1DC8]) = STACK[0x116C];
  v3[316] = STACK[0xAE0];
  v3[317] = STACK[0xAD8];
  v3[319] = STACK[0xAC0];
  LODWORD(STACK[0x1DCC]) = STACK[0x114C];
  v3[320] = STACK[0xAB0];
  v3[322] = STACK[0xA98];
  v3[324] = STACK[0xA90];
  v3[325] = STACK[0xA78];
  v3[328] = STACK[0xA68];
  v3[329] = STACK[0xA60];
  v7 = v3[303] > (unint64_t)(v3[306] - 0x5D952DACE417E23 + v3[305] + 1189);
  v8 = STACK[0xCE0];
  v3[330] = STACK[0xA50];
  v9 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                       + 8
                                                                                       * (int)((2 * v7) | (v7 << 6) | v6))
                                                                           - ((43 * (v6 ^ 0x5C2) - 3392) | 0x4A0)
                                                                           + 1177);
  v3[331] = v8;
  return v9(a1, 0xFFFFF3FC6EA7F1EALL, 0xC0391580E16, 3713000404);
}

uint64_t sub_1932283F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, _QWORD *a11)
{
  int v11;
  _QWORD *v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);

  *a10 = LODWORD(STACK[0x228]) - 101372955;
  v16 = (v15 - 51616550) & 0x6EF519FF;
  *a11 = LODWORD(STACK[0x22C]) + (v16 ^ 0xF9F52B34);
  v12[519] = v12[330];
  v12[520] = v12[329];
  v12[521] = v12[328];
  v12[522] = v12[325];
  v12[523] = v12[324];
  v12[524] = v12[322];
  v12[526] = v12[320];
  v12[527] = v12[319];
  v12[528] = v12[317];
  v12[529] = v12[316];
  LODWORD(STACK[0xA38]) = STACK[0x1DC8];
  LODWORD(STACK[0xA3C]) = STACK[0x1DC4];
  v12[530] = v12[315];
  v12[525] = v12[323];
  v12[531] = v12[313];
  LODWORD(STACK[0xA40]) = STACK[0x1DC0];
  v12[532] = v12[312];
  v12[533] = v12[309];
  STACK[0x200] = v12[311];
  LODWORD(STACK[0xA44]) = STACK[0x1D9C];
  v12[534] = v12[307];
  LODWORD(STACK[0xA5C]) = STACK[0x1D98];
  LODWORD(STACK[0xA74]) = v11;
  v17 = STACK[0xA74];
  v18 = STACK[0xA5C];
  v19 = v12[534];
  v20 = STACK[0xA44];
  v21 = STACK[0x200];
  v22 = v12[533];
  v23 = v12[532];
  v24 = STACK[0xA40];
  v25 = v12[531];
  v26 = v12[525];
  v27 = v12[530];
  v28 = STACK[0xA3C];
  v29 = STACK[0xA38];
  v30 = v12[529];
  v31 = v12[528];
  v32 = v12[527];
  v33 = v12[526];
  v34 = v12[524];
  v35 = v12[523];
  v36 = v12[522];
  v37 = v12[521];
  v38 = v12[520];
  v39 = v12[519];
  LODWORD(STACK[0xA8C]) = STACK[0xA74];
  LODWORD(STACK[0xAAC]) = v18;
  v12[535] = v19;
  LODWORD(STACK[0xABC]) = v20;
  STACK[0x240] = v21;
  v12[536] = v22;
  v12[537] = v23;
  LODWORD(STACK[0xACC]) = v24;
  v12[538] = v25;
  STACK[0x2A0] = v26;
  v12[539] = v27;
  LODWORD(STACK[0xAF0]) = v28;
  LODWORD(STACK[0xAF4]) = v29;
  v12[540] = v30;
  v12[541] = v31;
  v12[542] = v32;
  v12[543] = v33;
  v12[544] = v34;
  v12[545] = v35;
  v12[546] = v36;
  v12[547] = v37;
  v12[548] = v38;
  v12[549] = v39;
  v12[550] = v39;
  v12[551] = v38;
  v12[552] = v37;
  v12[553] = v36;
  v12[554] = v35;
  v12[555] = v34;
  v12[556] = v33;
  LODWORD(STACK[0xAF8]) = v17;
  v12[557] = v32;
  v12[558] = v31;
  LODWORD(STACK[0xAFC]) = v29;
  LODWORD(STACK[0xB20]) = v28;
  v12[559] = v27;
  STACK[0x2C0] = v26;
  v12[560] = v25;
  LODWORD(STACK[0xB24]) = v24;
  v12[561] = v23;
  v12[562] = v22;
  STACK[0x2D0] = v21;
  LODWORD(STACK[0xB3C]) = v20;
  v12[563] = v19;
  v40 = (uint64_t (*)(void))(2485027307
                          - (v16 - v13 + 344)
                          + *(_QWORD *)(v14 + 8 * ((950 * (v30 != 0)) ^ v16)));
  LODWORD(STACK[0xB5C]) = v18;
  return v40();
}

uint64_t sub_193228654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  int v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  int v83;
  unint64_t v84;
  int v85;
  int v86;
  unint64_t v87;
  int v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  unint64_t v97;
  unint64_t v98;
  int v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;

  v65 = v64[548];
  v66 = v64[547];
  v67 = v64[546];
  v68 = v64[545];
  v69 = v64[544];
  v70 = v64[543];
  v71 = v64[542];
  v72 = v64[541];
  v73 = v64[540];
  v74 = STACK[0xAF4];
  v75 = STACK[0xAF0];
  v76 = v64[539];
  v77 = STACK[0x2A0];
  v78 = v64[538];
  v79 = STACK[0xACC];
  v80 = v64[537];
  v81 = v64[536];
  v82 = STACK[0x240];
  v83 = STACK[0xABC];
  v84 = v64[535];
  v85 = STACK[0xAAC];
  v86 = STACK[0xA8C];
  v87 = *(_QWORD *)(a63 + 8 * v63) + ((v63 - 130831506) ^ 0xFFFFFFFF07CC53CBLL);
  STACK[0x7D8] = v64[549];
  STACK[0x7E0] = v65;
  STACK[0x7F8] = v66;
  STACK[0x808] = v67;
  STACK[0x810] = v68;
  STACK[0x818] = v69;
  STACK[0x838] = v70;
  LODWORD(STACK[0x1004]) = v86;
  STACK[0x848] = v71;
  STACK[0x858] = v72;
  LODWORD(STACK[0x1008]) = v74;
  LODWORD(STACK[0x100C]) = v75;
  STACK[0x860] = v76;
  STACK[0xA80] = v77;
  STACK[0x870] = v78;
  LODWORD(STACK[0x1030]) = v79;
  STACK[0xAA0] = v87;
  STACK[0x878] = v80;
  STACK[0x880] = v81;
  STACK[0xAD0] = v82;
  LODWORD(STACK[0x1034]) = v83;
  STACK[0x890] = v84;
  LODWORD(STACK[0x104C]) = v85;
  STACK[0x8A0] = v73;
  v88 = STACK[0x104C];
  v89 = STACK[0x890];
  LODWORD(v65) = STACK[0x1034];
  v90 = STACK[0xAD0];
  v91 = STACK[0x880];
  v92 = STACK[0x878];
  LODWORD(v70) = STACK[0x1030];
  v93 = STACK[0x870];
  v94 = STACK[0xA80];
  v95 = STACK[0x860];
  v96 = STACK[0x100C];
  LODWORD(v76) = STACK[0x1008];
  v97 = STACK[0x858];
  v98 = STACK[0x848];
  v99 = STACK[0x1004];
  v100 = STACK[0x838];
  v101 = STACK[0x818];
  v102 = STACK[0x810];
  v103 = STACK[0x808];
  v104 = STACK[0x7F8];
  v105 = STACK[0x7E0];
  v106 = STACK[0x7D8];
  STACK[0x8B8] = STACK[0xAA0];
  STACK[0x8C0] = v73;
  LODWORD(STACK[0x106C]) = v88;
  STACK[0x8C8] = v89;
  LODWORD(STACK[0x108C]) = v65;
  STACK[0xB10] = v90;
  STACK[0x8E0] = v91;
  STACK[0x8E8] = v92;
  LODWORD(STACK[0x1098]) = v70;
  STACK[0x8F8] = v93;
  STACK[0xB70] = v94;
  STACK[0x908] = v95;
  LODWORD(STACK[0x109C]) = v96;
  LODWORD(STACK[0x10B4]) = v76;
  STACK[0x910] = v97;
  STACK[0x920] = v98;
  LODWORD(STACK[0x10D4]) = v99;
  STACK[0x928] = v100;
  STACK[0x930] = v101;
  STACK[0x940] = v102;
  STACK[0x948] = v103;
  STACK[0x960] = v104;
  STACK[0x970] = v105;
  STACK[0x978] = v106;
  return sub_193228A14();
}

uint64_t sub_193228A14@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v2[276] = v1[231];
  v2[279] = v1[230];
  v2[282] = v1[228];
  v2[283] = v1[225];
  v2[285] = v1[224];
  v2[286] = v1[222];
  v2[287] = v1[221];
  LODWORD(STACK[0x1CD8]) = STACK[0x10D4];
  v2[289] = v1[220];
  v2[290] = v1[218];
  LODWORD(STACK[0x1CDC]) = STACK[0x10B4];
  LODWORD(STACK[0x1D34]) = STACK[0x109C];
  v2[292] = v1[217];
  v2[281] = v1[294];
  v2[294] = v1[215];
  LODWORD(STACK[0x1D44]) = STACK[0x1098];
  v2[295] = v1[213];
  v2[298] = v1[212];
  v2[293] = v1[282];
  LODWORD(STACK[0x1D64]) = STACK[0x108C];
  v2[299] = v1[209];
  LODWORD(STACK[0x1D84]) = STACK[0x106C];
  v4 = (uint64_t *)v1[208];
  v2[300] = v4;
  v5 = *v4;
  v2[301] = v1[207];
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                          * ((1237 * (((15 * (a1 ^ 0x9A)) ^ (v5 == 0)) & 1)) ^ a1))
                         - 8);
  v2[302] = v5;
  return v6();
}

uint64_t sub_193228B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t (*a61)(_QWORD),uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v68 = a61(*(_QWORD *)(v66 + 2416));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v67 + 8 * (((4 * (a65 == 2)) | (16 * (a65 == 2))) ^ v65))
                                          - ((((2 * v65) ^ 0xD20) + 1181430016) & 0xB994CD7A ^ 0x932)))(v68);
}

uint64_t sub_193228B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void (*a61)(void))
{
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t (*v86)(void);

  v63 = (_QWORD *)v62[300];
  *v63 = 0;
  v63[1] = 0;
  a61();
  v61[232] = v62[301];
  LODWORD(STACK[0x10D8]) = STACK[0x1D84];
  v61[235] = v62[299];
  LODWORD(STACK[0x10DC]) = STACK[0x1D64];
  v61[305] = v62[293];
  v61[236] = v62[298];
  v61[238] = v62[295];
  LODWORD(STACK[0x10EC]) = STACK[0x1D44];
  v61[240] = v62[294];
  v61[317] = v62[281];
  v61[241] = v62[292];
  LODWORD(STACK[0x1110]) = STACK[0x1D34];
  LODWORD(STACK[0x1114]) = STACK[0x1CDC];
  v61[243] = v62[290];
  v61[244] = v62[289];
  LODWORD(STACK[0x112C]) = STACK[0x1CD8];
  v61[245] = v62[287];
  v61[247] = v62[286];
  v61[248] = v62[285];
  v61[251] = v62[283];
  v61[253] = v62[282];
  v61[254] = v62[279];
  v61[257] = v62[276];
  v64 = v61[257];
  v65 = v61[254];
  v66 = v61[253];
  v67 = v61[251];
  v68 = v61[248];
  v69 = v61[247];
  v70 = v61[245];
  v71 = STACK[0x112C];
  v72 = v61[244];
  v73 = v61[243];
  v74 = STACK[0x1114];
  v75 = STACK[0x1110];
  v76 = v61[241];
  v77 = v61[317];
  v78 = v61[240];
  v79 = STACK[0x10EC];
  v80 = v61[238];
  v81 = v61[236];
  v82 = v61[305];
  v83 = STACK[0x10DC];
  v84 = v61[235];
  v85 = STACK[0x10D8];
  v86 = (uint64_t (*)(void))v61[232];
  v62[450] = v64;
  v62[451] = v65;
  v62[452] = v66;
  v62[453] = v67;
  v62[454] = v68;
  v62[455] = v69;
  v62[456] = v70;
  LODWORD(STACK[0x854]) = v71;
  v62[458] = v72;
  v62[459] = v73;
  v62[460] = 0;
  LODWORD(STACK[0x86C]) = v74;
  LODWORD(STACK[0x88C]) = v75;
  v62[461] = v76;
  v62[446] = v77;
  v62[462] = v78;
  LODWORD(STACK[0x89C]) = v79;
  v62[464] = v80;
  v62[465] = v81;
  v62[457] = v82;
  LODWORD(STACK[0x8AC]) = v83;
  v62[466] = v84;
  LODWORD(STACK[0x8D0]) = v85;
  LODWORD(STACK[0x8D4]) = v75;
  v62[550] = v64;
  v62[551] = v65;
  v62[552] = v66;
  v62[553] = v67;
  v62[554] = v68;
  v62[555] = v69;
  v62[556] = v70;
  LODWORD(STACK[0xAF8]) = v71;
  v62[557] = v72;
  v62[558] = v73;
  LODWORD(STACK[0xAFC]) = v74;
  LODWORD(STACK[0xB20]) = v75;
  v62[559] = v76;
  v61[16] = v77;
  v62[560] = v78;
  LODWORD(STACK[0xB24]) = v79;
  v62[561] = v80;
  v62[562] = v81;
  v61[18] = v82;
  LODWORD(STACK[0xB3C]) = v83;
  v62[563] = v84;
  LODWORD(STACK[0xB5C]) = v85;
  LODWORD(STACK[0xB7C]) = v71;
  return v86();
}

uint64_t sub_193228DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a66;
  uint64_t a67;
  uint64_t a69;
  uint64_t a71;
  int v71;
  int v72;
  _QWORD *v73;
  _QWORD *v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void);

  v77 = STACK[0xCEC];
  LODWORD(STACK[0x1B3C]) = STACK[0xCCC];
  v78 = v73[3];
  v74[175] = v73[4];
  LODWORD(STACK[0x1B40]) = STACK[0xCAC];
  v74[158] = v73[98];
  v74[176] = v78;
  v74[177] = v73[1];
  LODWORD(STACK[0x1B44]) = STACK[0xC94];
  v74[179] = STACK[0x238];
  v74[170] = v73[88];
  v74[182] = STACK[0x230];
  LODWORD(STACK[0x1B60]) = STACK[0xC90];
  LODWORD(STACK[0x1B64]) = STACK[0xC6C];
  v74[183] = STACK[0x218];
  v74[185] = STACK[0x210];
  v74[186] = STACK[0x208];
  LODWORD(STACK[0x1B74]) = STACK[0xC68];
  v74[187] = a71;
  v74[189] = a69;
  v74[190] = a67;
  v74[192] = a66;
  v79 = v74[595];
  v74[194] = v79;
  v80 = v74[594];
  v74[195] = v80;
  v81 = v74[593];
  v74[198] = v81;
  v73[6] = v81;
  v73[7] = v80;
  v73[8] = v79;
  v73[10] = a66;
  v73[11] = a67;
  v73[14] = a69;
  v73[17] = a71;
  LODWORD(STACK[0xCF8]) = STACK[0x1B74];
  v82 = v74[185];
  v73[19] = v74[186];
  v73[20] = v82;
  v83 = v74[183];
  LODWORD(STACK[0xCFC]) = STACK[0x1B64];
  LODWORD(STACK[0xD18]) = STACK[0x1B60];
  v84 = v74[182];
  v73[22] = v83;
  v73[23] = v84;
  v73[100] = v74[170];
  v73[24] = v74[179];
  LODWORD(STACK[0xD1C]) = STACK[0x1B44];
  v85 = v74[176];
  v73[27] = v74[177];
  v73[28] = v85;
  v73[111] = v74[158];
  LODWORD(STACK[0xD20]) = STACK[0x1B40];
  v73[30] = v74[175];
  LODWORD(STACK[0xD24]) = STACK[0x1B3C];
  v86 = (uint64_t (*)(void))(*(_QWORD *)(v76
                                      + 8
                                      * (((v77 == v72) * (((v71 + 1758506359) & 0x310D7D7) - 1718)) | (v75 + v71 + 1309)))
                          - 12);
  LODWORD(STACK[0xD34]) = v77;
  return v86();
}

uint64_t sub_193228F20@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _DWORD *v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  unint64_t v40;
  uint64_t (*v41)(void);
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;

  v5 = (a1 - 2145748357) | 0x14040036;
  v6 = *(_DWORD **)(v3 + 1432);
  v7 = STACK[0x1B44];
  v8 = STACK[0x1B44];
  v9 = (v5 ^ v7 ^ 0x6417D226) & (2 * (v7 & 0xE28C53D9)) ^ v7 & 0xE28C53D9;
  v10 = ((2 * (v7 ^ 0xF41952E3)) ^ 0x2D2A0274) & (v7 ^ 0xF41952E3) ^ (2 * (v7 ^ 0xF41952E3)) & 0x1695013A;
  v11 = (v10 ^ 0x4000020) & (4 * v9) ^ v9;
  v12 = ((4 * (v10 ^ 0x1295010A)) ^ 0x5A5404E8) & (v10 ^ 0x1295010A) ^ (4 * (v10 ^ 0x1295010A)) & 0x16950138;
  v13 = v11 ^ 0x1695013A ^ (v12 ^ 0x12140020) & (16 * v11);
  v14 = (16 * (v12 ^ 0x4810112)) & 0x16950130 ^ 0x1685001A ^ ((16 * (v12 ^ 0x4810112)) ^ 0x695013A0) & (v12 ^ 0x4810112);
  v15 = (v13 << 8) & 0x16950100 ^ v13 ^ ((v13 << 8) ^ 0x95013A00) & v14;
  v16 = **(_QWORD **)(v3 + 1480);
  v17 = LODWORD(STACK[0x1B44]) ^ (2
                                * ((v15 << 16) & 0x16950000 ^ v15 ^ ((v15 << 16) ^ 0x13A0000) & ((v14 << 8) & 0x16950000 ^ 0x2940000 ^ ((v14 << 8) ^ 0x15010000) & v14)));
  v18 = ((2 * *v6) & 0xD5FFFFFA) + (*v6 ^ 0x6AFFFFFD) - 1795162109;
  *(_BYTE *)(v16 + v18) = HIBYTE(v17) ^ 0xE7;
  *(_BYTE *)(v16 + v18 + 1) = BYTE2(v17) ^ 0x84;
  *(_BYTE *)(v16 + v18 + 2) = (((BYTE1(v17) ^ 0x51) - 2 * ((BYTE1(v17) ^ 0x51) & 7 ^ BYTE1(v17) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v16 + v18 + 3) = v17 ^ 0xAD;
  *v6 += 4;
  v19 = *(_QWORD *)(v3 + 1560);
  v2[6] = *(_QWORD *)(v3 + 1584);
  v2[7] = v19;
  v2[8] = *(_QWORD *)(v3 + 1552);
  v20 = *(_QWORD *)(v3 + 1520);
  v2[10] = *(_QWORD *)(v3 + 1536);
  v2[11] = v20;
  v2[14] = *(_QWORD *)(v3 + 1512);
  v2[17] = *(_QWORD *)(v3 + 1496);
  LODWORD(STACK[0xCF8]) = STACK[0x1B74];
  v21 = *(_QWORD *)(v3 + 1480);
  v2[19] = *(_QWORD *)(v3 + 1488);
  v2[20] = v21;
  v22 = *(_QWORD *)(v3 + 1464);
  LODWORD(STACK[0xCFC]) = STACK[0x1B64];
  LODWORD(STACK[0xD18]) = STACK[0x1B60];
  v23 = *(_QWORD *)(v3 + 1456);
  v2[22] = v22;
  v2[23] = v23;
  v2[100] = *(_QWORD *)(v3 + 1360);
  v2[24] = *(_QWORD *)(v3 + 1432);
  LODWORD(STACK[0xD1C]) = v8;
  v24 = *(_QWORD *)(v3 + 1408);
  v2[27] = *(_QWORD *)(v3 + 1416);
  v2[28] = v24;
  v2[111] = *(_QWORD *)(v3 + 1264);
  LODWORD(STACK[0xD20]) = STACK[0x1B40];
  v2[30] = *(_QWORD *)(v3 + 1400);
  LODWORD(STACK[0xD24]) = STACK[0x1B3C];
  LODWORD(STACK[0xD34]) = v1;
  LODWORD(v22) = STACK[0xD34];
  LODWORD(v24) = STACK[0xD24];
  v25 = v2[30];
  v26 = STACK[0xD20];
  v27 = v2[111];
  v29 = v2[27];
  v28 = v2[28];
  v30 = STACK[0xD1C];
  v31 = v2[23];
  v32 = v2[24];
  v33 = v2[100];
  v34 = STACK[0xD18];
  v35 = STACK[0xCFC];
  v36 = v2[22];
  v38 = v2[19];
  v37 = v2[20];
  v39 = STACK[0xCF8];
  v40 = v2[17];
  v41 = (uint64_t (*)(void))v2[14];
  v43 = v2[10];
  v42 = v2[11];
  v45 = v2[7];
  v44 = v2[8];
  v46 = STACK[0x270];
  *(_QWORD *)(v4 + 29) = STACK[0x270];
  *(_QWORD *)(v4 + 37) = v45;
  *(_QWORD *)(v4 + 45) = v44;
  *(_QWORD *)(v4 + 53) = v43;
  *(_QWORD *)(v4 + 61) = v42;
  *(_QWORD *)(v4 + 69) = v41;
  *(_QWORD *)(v4 + 77) = v40;
  LODWORD(STACK[0x250]) = v39;
  *(_QWORD *)(v4 + 85) = v38;
  *(_QWORD *)(v4 + 93) = v37;
  *(_QWORD *)(v4 + 101) = v36;
  LODWORD(STACK[0x254]) = v35;
  LODWORD(STACK[0x26C]) = v34;
  *(_QWORD *)(v4 + 109) = v31;
  *(_QWORD *)(v4 + 117) = v33;
  *(_QWORD *)(v4 + 125) = v32;
  LODWORD(STACK[0x28C]) = v30;
  *(_QWORD *)(v4 + 133) = v29;
  *(_QWORD *)(v4 + 141) = v28;
  *(_QWORD *)(v4 + 149) = v27;
  LODWORD(STACK[0x2AC]) = v26;
  *(_QWORD *)(v4 + 157) = v25;
  LODWORD(STACK[0x2BC]) = v24;
  LODWORD(STACK[0x308]) = v22;
  *(_QWORD *)(v4 + 165) = v46;
  *(_QWORD *)(v4 + 173) = v45;
  *(_QWORD *)(v4 + 181) = v44;
  *(_QWORD *)(v4 + 189) = v43;
  *(_QWORD *)(v4 + 197) = v42;
  *(_QWORD *)(v4 + 205) = v41;
  *(_QWORD *)(v4 + 213) = v40;
  LODWORD(STACK[0x30C]) = v39;
  *(_QWORD *)(v4 + 221) = v38;
  *(_QWORD *)(v4 + 229) = v37;
  *(_QWORD *)(v4 + 237) = v36;
  LODWORD(STACK[0x310]) = v35;
  LODWORD(STACK[0x314]) = v34;
  *(_QWORD *)(v4 + 245) = v31;
  *(_QWORD *)(v4 + 253) = v33;
  LODWORD(STACK[0x338]) = v30;
  STACK[0x2738] = v32;
  STACK[0x2740] = v29;
  STACK[0x2748] = v28;
  STACK[0x2750] = v27;
  LODWORD(STACK[0x33C]) = v26;
  LODWORD(STACK[0x354]) = v24;
  LODWORD(STACK[0x374]) = v22;
  STACK[0x2758] = v25;
  STACK[0x2760] = v46;
  STACK[0x2768] = v45;
  STACK[0x2770] = v44;
  STACK[0x2778] = v43;
  STACK[0x2780] = v42;
  STACK[0x2788] = (unint64_t)v41;
  STACK[0x2790] = v40;
  LODWORD(STACK[0x394]) = v39;
  STACK[0x2798] = v38;
  STACK[0x27A0] = v37;
  LODWORD(STACK[0x3A4]) = v35;
  LODWORD(STACK[0x3C4]) = v34;
  STACK[0x27A8] = v36;
  STACK[0x27B0] = v31;
  STACK[0x27B8] = v33;
  STACK[0x27C0] = v32;
  LODWORD(STACK[0x3C8]) = v30;
  STACK[0x27C8] = v29;
  STACK[0x27D0] = v28;
  LODWORD(STACK[0x3CC]) = v26;
  STACK[0x27D8] = v27;
  STACK[0x27E0] = v25;
  LODWORD(STACK[0x3F0]) = v24;
  LODWORD(STACK[0x3F4]) = v22;
  STACK[0x2870] = v46;
  STACK[0x2878] = v45;
  STACK[0x2880] = v44;
  STACK[0x2888] = v43;
  STACK[0x2890] = v42;
  STACK[0x2898] = (unint64_t)v41;
  LODWORD(STACK[0x488]) = v39;
  STACK[0x28A0] = v40;
  STACK[0x28A8] = v38;
  STACK[0x28B0] = v37;
  STACK[0x28B8] = v36;
  LODWORD(STACK[0x48C]) = v35;
  LODWORD(STACK[0x4B0]) = v34;
  STACK[0x28C0] = v31;
  STACK[0x28C8] = v33;
  LODWORD(STACK[0x4B4]) = v30;
  STACK[0x28D0] = v32;
  STACK[0x28D8] = v29;
  STACK[0x28E0] = v28;
  STACK[0x28E8] = v27;
  LODWORD(STACK[0x4CC]) = v26;
  LODWORD(STACK[0x4EC]) = v24;
  LODWORD(STACK[0x50C]) = v22;
  STACK[0x28F0] = v25;
  STACK[0x28F8] = v46;
  STACK[0x2900] = v45;
  STACK[0x2908] = v44;
  STACK[0x2910] = v43;
  STACK[0x2918] = v42;
  *(_QWORD *)(v3 + 2696) = v41;
  *(_QWORD *)(v3 + 2704) = v40;
  LODWORD(STACK[0x518]) = v39;
  *(_QWORD *)(v3 + 2712) = v38;
  *(_QWORD *)(v3 + 2720) = v37;
  *(_QWORD *)(v3 + 2728) = v36;
  LODWORD(STACK[0x51C]) = v35;
  LODWORD(STACK[0x538]) = v34;
  *(_QWORD *)(v3 + 2736) = v31;
  *(_QWORD *)(v3 + 2744) = v32;
  LODWORD(STACK[0x53C]) = v30;
  *(_QWORD *)(v3 + 2760) = v29;
  *(_QWORD *)(v3 + 2768) = v28;
  STACK[0x2920] = v33;
  STACK[0x2928] = v27;
  LODWORD(STACK[0x540]) = v26;
  *(_QWORD *)(v3 + 2776) = v25;
  LODWORD(STACK[0x544]) = v24;
  LODWORD(STACK[0x570]) = v22;
  *(_QWORD *)(v3 + 3056) = v46;
  *(_QWORD *)(v3 + 3064) = v45;
  *(_QWORD *)(v3 + 3072) = v44;
  *(_QWORD *)(v3 + 3080) = v43;
  *(_QWORD *)(v3 + 3088) = v42;
  *(_QWORD *)(v3 + 3096) = v41;
  *(_QWORD *)(v3 + 3104) = v40;
  LODWORD(STACK[0x690]) = v39;
  *(_QWORD *)(v3 + 3120) = v38;
  *(_QWORD *)(v3 + 3128) = v37;
  *(_QWORD *)(v3 + 3136) = v36;
  LODWORD(STACK[0x694]) = v35;
  LODWORD(STACK[0x6B0]) = v34;
  *(_QWORD *)(v3 + 3144) = v31;
  *(_QWORD *)(v3 + 3024) = v33;
  *(_QWORD *)(v3 + 3152) = v32;
  LODWORD(STACK[0x6B4]) = v30;
  *(_QWORD *)(v3 + 3168) = v29;
  *(_QWORD *)(v3 + 3176) = v28;
  *(_QWORD *)(v3 + 3112) = v27;
  LODWORD(STACK[0x6B8]) = v26;
  *(_QWORD *)(v3 + 3184) = v25;
  LODWORD(STACK[0x6BC]) = v24;
  LODWORD(STACK[0x6E0]) = v22;
  return v41();
}

uint64_t sub_193229490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;

  return ((uint64_t (*)(void))(*(_QWORD *)(v66
                                        + 8
                                        * ((30
                                          * (a65 == ((v65 - 1316874793) & 0x4E7DEAB7)
                                                  + ((v65 - 1347062831) & 0x504A878F)
                                                  - 4158)) ^ v65))
                            - 12))();
}

uint64_t sub_1932294F8@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 1080) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((v2 + 1049) ^ 0x9EB) * (v1 > a1)) ^ v2))
                            - ((167 * (v2 ^ 0xAB0u)) ^ 0x49DLL)))();
}

uint64_t sub_19322953C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v1[79] = *(_QWORD *)(v2 + 1760);
  v1[80] = *(_QWORD *)(v2 + 1752);
  v1[82] = *(_QWORD *)(v2 + 1728);
  v1[83] = *(_QWORD *)(v2 + 1712);
  v1[84] = *(_QWORD *)(v2 + 1696);
  v1[86] = *(_QWORD *)(v2 + 1680);
  v1[87] = *(_QWORD *)(v2 + 1768);
  LODWORD(STACK[0xE34]) = STACK[0x1BF0];
  v1[90] = *(_QWORD *)(v2 + 1672);
  v1[92] = *(_QWORD *)(v2 + 1664);
  v1[93] = *(_QWORD *)(v2 + 1648);
  LODWORD(STACK[0xE54]) = STACK[0x1BCC];
  LODWORD(STACK[0xE60]) = STACK[0x1BC8];
  v1[94] = *(_QWORD *)(v2 + 1640);
  v1[169] = *(_QWORD *)(v2 + 1448);
  v1[97] = *(_QWORD *)(v2 + 1616);
  LODWORD(STACK[0xE64]) = STACK[0x1BB4];
  v1[99] = *(_QWORD *)(v2 + 1592);
  v1[101] = *(_QWORD *)(v2 + 1776);
  v1[181] = *(_QWORD *)(v2 + 1632);
  LODWORD(STACK[0xE80]) = 101330305;
  v1[103] = *(_QWORD *)(v2 + 1600);
  LODWORD(STACK[0xE84]) = STACK[0x1B94];
  v4 = *(unsigned __int8 *)(v2 + 1007) * ((a1 + 2195) ^ (a1 - 1245));
  LODWORD(STACK[0xE88]) = 101330305;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 ^ a1)))();
}

uint64_t sub_19322961C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(_QWORD, uint64_t))
{
  int v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);

  v33 = a29(v31[204], 2241923698);
  v31[223] = v33;
  v30[53] = v31[220];
  v34 = v31[216];
  v30[55] = v31[219];
  v30[56] = v34;
  v35 = v31[212];
  v30[58] = v31[214];
  v30[59] = v35;
  v30[60] = v31[210];
  v36 = v31[221];
  LODWORD(STACK[0xDAC]) = STACK[0x1BF0];
  v37 = v31[209];
  v30[62] = v36;
  v30[63] = v37;
  v30[66] = v31[208];
  v30[68] = v31[206];
  LODWORD(STACK[0xDCC]) = STACK[0x1BCC];
  LODWORD(STACK[0xDD0]) = STACK[0x1BC8];
  v30[69] = v31[205];
  v30[146] = v31[181];
  v30[71] = v31[202];
  LODWORD(STACK[0xDD4]) = STACK[0x1BB4];
  v30[74] = v31[199];
  v30[75] = v31[222];
  v30[158] = v31[204];
  LODWORD(STACK[0xDF8]) = 101372955;
  v30[77] = 0;
  LODWORD(STACK[0xDFC]) = STACK[0x1B94];
  v38 = (uint64_t (*)(void))(*(_QWORD *)(v32
                                      + 8
                                      * ((1048
                                        * (((v33 == 0) ^ ((-117 * (v29 ^ 0xF1)) ^ (v29 + 10))) & 1)) ^ v29))
                          - 12);
  LODWORD(STACK[0xE14]) = 101330303;
  return v38();
}

uint64_t sub_193229738(int a1)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);

  v5 = (v1 + 1134) | 9u;
  v6 = **(_QWORD **)(v3 + 1592);
  v7 = (**(unsigned int **)(v3 + 1776) ^ 0xF7DBAF78F9CFFFDCLL)
     + 0x7B2C5CFFF6FC5DBCLL
     + ((2 * **(unsigned int **)(v3 + 1776)) & 0x1F39FFFB8);
  v8 = (2 * (v7 & (v5 ^ 0x70F33A7E5))) & (v7 ^ 0xF8EA22755B2F1B6ELL) ^ v7 & (v5 ^ 0x70F33A7E5) ^ ((2 * (v7 & (v5 ^ 0x70F33A7E5))) & 0x214040000 | 0x601900C000181000);
  v9 = *(_QWORD *)(v4 + 8 * v1);
  v2[258] = *(_QWORD *)(v3 + 1760);
  v2[260] = *(_QWORD *)(v3 + 1752);
  v2[261] = *(_QWORD *)(v3 + 1728);
  v2[263] = *(_QWORD *)(v3 + 1712);
  v10 = (2 * (v7 ^ 0xF8EA22755B2F1B6ELL)) & 0x741DD1F2541CB906 ^ 0x1404501254048902 ^ ((2
                                                                                          * (v7 ^ 0xF8EA22755B2F1B6ELL)) ^ 0x88222204A839720CLL) & (v7 ^ 0xF8EA22755B2F1B6ELL);
  v11 = (4 * v8) & 0x741DD1F2541CB904 ^ v8 ^ ((4 * v8) ^ 0x8064030000604000) & v10;
  v2[266] = *(_QWORD *)(v3 + 1696);
  v2[267] = *(_QWORD *)(v3 + 1680);
  v2[270] = *(_QWORD *)(v3 + 1768);
  LODWORD(STACK[0x114C]) = STACK[0x1BF0];
  v12 = (4 * v10) & 0x741DD1F2541CB904 ^ 0x24089032040C1906 ^ ((4 * v10) ^ 0xD07747C95072E418) & v10;
  v13 = (16 * v11) & 0x741DD1F2541CB900 ^ v11 ^ ((16 * v11) ^ 0x1D01C0001810000) & v12;
  v2[272] = *(_QWORD *)(v3 + 1672);
  v2[275] = *(_QWORD *)(v3 + 1664);
  v2[276] = *(_QWORD *)(v3 + 1648);
  LODWORD(STACK[0x116C]) = STACK[0x1BCC];
  v14 = (16 * v12) & 0x741DD1F2541CB900 ^ 0x3400C0D214142906 ^ ((16 * v12) ^ 0x41DD1F2541CB9060) & v12;
  v15 = (v13 << 8) & 0x741DD1F2541CB900 ^ v13 ^ ((v13 << 8) ^ 0xD11C00018100000) & v14;
  LODWORD(STACK[0x117C]) = STACK[0x1BC8];
  v2[277] = *(_QWORD *)(v3 + 1640);
  v2[328] = *(_QWORD *)(v3 + 1448);
  v16 = (v14 << 8) & 0x741DD1F2541CB900 ^ 0x600C01A24004B906 ^ ((v14 << 8) ^ 0x1DD1F2541CB90600) & v14;
  v2[280] = *(_QWORD *)(v3 + 1616);
  LODWORD(STACK[0x11A0]) = STACK[0x1BB4];
  v2[340] = v9 - 12;
  v2[281] = *(_QWORD *)(v3 + 1592);
  v2[283] = *(_QWORD *)(v3 + 1776);
  v17 = v7 ^ (2
            * (v15 ^ (v16 & 0x5010100400000000 | 0x40C810200000000) ^ (v15 << 16) & 0x741DD1F2541C0000 ^ ((v15 << 16) ^ 0x51C0100810000000) & v16)) ^ 0xB7DD234F8A080A0DLL;
  v2[351] = *(_QWORD *)(v3 + 1632);
  LODWORD(STACK[0x11A4]) = a1;
  v18 = *(_QWORD *)(v3 + 1784);
  v2[285] = v18;
  LODWORD(STACK[0x11A8]) = STACK[0x1B94];
  v2[286] = v18;
  v2[362] = 0x5D952DACE41797ELL;
  v2[288] = v6;
  v2[373] = v17;
  *(_QWORD *)(v3 + 2432) = v2[373];
  *(_QWORD *)(v3 + 2424) = v2[288];
  *(_QWORD *)(v3 + 2448) = v2[362];
  *(_QWORD *)(v3 + 2440) = v2[286];
  LODWORD(STACK[0x1D98]) = STACK[0x11A8];
  *(_QWORD *)(v3 + 2456) = v2[285];
  LODWORD(STACK[0x1D9C]) = STACK[0x11A4];
  *(_QWORD *)(v3 + 2488) = v2[351];
  *(_QWORD *)(v3 + 2472) = v2[283];
  *(_QWORD *)(v3 + 2496) = v2[281];
  LODWORD(STACK[0x1DC0]) = STACK[0x11A0];
  *(_QWORD *)(v3 + 2504) = v2[280];
  *(_QWORD *)(v3 + 2584) = v2[328];
  *(_QWORD *)(v3 + 2520) = v2[277];
  LODWORD(STACK[0x1DC4]) = STACK[0x117C];
  LODWORD(STACK[0x1DC8]) = STACK[0x116C];
  *(_QWORD *)(v3 + 2528) = v2[276];
  *(_QWORD *)(v3 + 2536) = v2[275];
  *(_QWORD *)(v3 + 2552) = v2[272];
  LODWORD(STACK[0x1DCC]) = STACK[0x114C];
  *(_QWORD *)(v3 + 2560) = v2[270];
  *(_QWORD *)(v3 + 2576) = v2[267];
  *(_QWORD *)(v3 + 2592) = v2[266];
  *(_QWORD *)(v3 + 2600) = v2[263];
  *(_QWORD *)(v3 + 2624) = v2[261];
  *(_QWORD *)(v3 + 2632) = v2[260];
  LODWORD(v18) = *(_QWORD *)(v3 + 2424) > (unint64_t)(*(_QWORD *)(v3 + 2448)
                                                           - 0x5D952DACE417E23
                                                           + *(_QWORD *)(v3 + 2440)
                                                           + 1189);
  v19 = v2[340];
  *(_QWORD *)(v3 + 2640) = v2[258];
  v20 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((2 * v18) | ((_DWORD)v18 << 6) | v5))
                          - ((43 * (v5 ^ 0x5C2) - 3392) | 0x4A0)
                          + 1177);
  *(_QWORD *)(v3 + 2648) = v19;
  return v20();
}

uint64_t sub_193229ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *v63;
  _QWORD *v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  int v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(unint64_t, uint64_t, unint64_t *, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;

  v63[79] = v64[220];
  v63[80] = v64[219];
  v63[82] = v64[216];
  v63[83] = v64[214];
  v63[84] = v64[212];
  v63[86] = v64[210];
  v63[87] = v64[221];
  LODWORD(STACK[0xE34]) = STACK[0x1BF0];
  v63[90] = v64[209];
  v63[92] = v64[208];
  v63[93] = v64[206];
  LODWORD(STACK[0xE54]) = STACK[0x1BCC];
  LODWORD(STACK[0xE60]) = STACK[0x1BC8];
  v63[94] = v64[205];
  v63[169] = v64[181];
  v63[97] = v64[202];
  LODWORD(STACK[0xE64]) = STACK[0x1BB4];
  v63[99] = v64[199];
  v63[101] = v64[222];
  v63[181] = v64[204];
  LODWORD(STACK[0xE80]) = 101330305;
  v63[103] = v64[200];
  LODWORD(STACK[0xE84]) = STACK[0x1B94];
  LODWORD(STACK[0xE88]) = 101330305;
  v65 = STACK[0xE88];
  v66 = LODWORD(STACK[0xE84]);
  v67 = v63[103];
  v68 = STACK[0xE80];
  v69 = v63[181];
  v70 = v63[101];
  v71 = v63[99];
  v72 = STACK[0xE64];
  v73 = v63[97];
  v74 = v63[169];
  v75 = v63[94];
  v76 = LODWORD(STACK[0xE60]);
  v77 = STACK[0xE54];
  v78 = v63[93];
  v79 = v63[92];
  v80 = v63[90];
  v81 = LODWORD(STACK[0xE34]);
  v82 = (uint64_t (*)(unint64_t, uint64_t, unint64_t *, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v63[87];
  v83 = v63[86];
  v84 = v63[84];
  v85 = v63[83];
  v86 = v63[82];
  v87 = v63[80];
  v88 = STACK[0x4B8];
  v64[399] = STACK[0x4B8];
  v64[400] = v87;
  v64[401] = v86;
  v64[402] = v85;
  v64[403] = v84;
  v64[404] = v83;
  v64[405] = v82;
  LODWORD(STACK[0x6E4]) = v81;
  v64[407] = v80;
  v64[408] = v79;
  v64[409] = v78;
  LODWORD(STACK[0x6FC]) = v77;
  LODWORD(STACK[0x71C]) = v76;
  v64[410] = v75;
  v64[395] = v74;
  v64[411] = v73;
  LODWORD(STACK[0x73C]) = v72;
  v64[413] = v71;
  v64[414] = v70;
  v64[406] = v69;
  LODWORD(STACK[0x748]) = v68;
  v64[415] = v67;
  LODWORD(STACK[0x74C]) = v66;
  LODWORD(STACK[0x768]) = v65;
  v64[433] = v88;
  v64[434] = v87;
  v64[435] = v86;
  v64[436] = v85;
  v64[437] = v84;
  v64[438] = v83;
  v64[439] = v82;
  LODWORD(STACK[0x804]) = v81;
  v64[441] = v80;
  v64[442] = v79;
  v64[443] = v78;
  LODWORD(STACK[0x820]) = v77;
  v64[444] = v75;
  v64[429] = v74;
  v64[445] = v73;
  LODWORD(STACK[0x824]) = v72;
  v64[447] = v71;
  v64[448] = v70;
  v64[440] = v69;
  LODWORD(STACK[0x828]) = v68;
  v64[449] = v67;
  LODWORD(STACK[0x82C]) = v66;
  LODWORD(STACK[0x850]) = v65;
  v64[593] = v88;
  v64[594] = v87;
  v64[595] = v86;
  LODWORD(STACK[0xC68]) = v81;
  STACK[0x208] = v80;
  STACK[0x210] = v79;
  STACK[0x218] = v78;
  LODWORD(STACK[0xC6C]) = v77;
  LODWORD(STACK[0xC90]) = v76;
  STACK[0x230] = v75;
  STACK[0x500] = v74;
  STACK[0x238] = v73;
  LODWORD(STACK[0xC94]) = v72;
  STACK[0x248] = v71;
  STACK[0x550] = v69;
  LODWORD(STACK[0xCAC]) = v68;
  STACK[0x258] = v70;
  STACK[0x260] = v67;
  LODWORD(STACK[0xCCC]) = v66;
  LODWORD(STACK[0xCEC]) = v65;
  STACK[0x638] = v88;
  STACK[0x648] = v87;
  STACK[0x650] = v86;
  STACK[0x658] = v85;
  STACK[0x668] = v84;
  STACK[0x670] = v83;
  STACK[0x688] = (unint64_t)v82;
  LODWORD(STACK[0xF1C]) = v81;
  STACK[0x698] = v80;
  STACK[0x6A0] = v79;
  STACK[0x6A8] = v78;
  LODWORD(STACK[0xF2C]) = v77;
  LODWORD(STACK[0xF48]) = v76;
  STACK[0x6C0] = v75;
  STACK[0x8B0] = v74;
  STACK[0x6C8] = v73;
  LODWORD(STACK[0xF4C]) = v72;
  STACK[0x6D8] = v71;
  STACK[0x6E8] = v70;
  STACK[0x8F0] = v69;
  LODWORD(STACK[0xF50]) = v68;
  STACK[0x6F0] = v67;
  LODWORD(STACK[0xF54]) = v65;
  return v82(v75, v76, &STACK[0x128D], v66, v78, v79, v80, v81, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_193229F1C()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v6 = v4 + v0;
  v7 = STACK[0xF54];
  v8 = v0 + 1809943839;
  v3[249] = v2[150];
  LODWORD(STACK[0x1C54]) = STACK[0xF50];
  v3[253] = v2[214];
  v3[251] = v2[149];
  v3[254] = v2[147];
  LODWORD(STACK[0x1C74]) = STACK[0xF4C];
  v3[255] = v2[145];
  v3[265] = v2[206];
  v3[257] = v2[144];
  LODWORD(STACK[0x1C94]) = STACK[0xF48];
  LODWORD(STACK[0x1CA8]) = STACK[0xF2C];
  v3[258] = v2[141];
  v3[259] = v2[140];
  v3[261] = v2[139];
  LODWORD(STACK[0x1CAC]) = STACK[0xF1C];
  v9 = v2[137];
  v3[262] = v9;
  v10 = v2[134];
  v3[264] = v10;
  v11 = v2[133];
  v3[266] = v11;
  v12 = v2[131];
  v3[267] = v12;
  v13 = v2[130];
  v3[270] = v13;
  v14 = v2[129];
  v3[271] = v14;
  v15 = v2[127];
  v3[272] = v15;
  v2[152] = v15;
  v2[153] = v14;
  v2[154] = v13;
  v2[156] = v12;
  v2[157] = v11;
  v2[160] = v10;
  v2[162] = v9;
  LODWORD(STACK[0xF78]) = STACK[0x1CAC];
  v2[163] = v3[261];
  v2[164] = v3[259];
  v2[167] = v3[258];
  LODWORD(STACK[0xF7C]) = STACK[0x1CA8];
  LODWORD(STACK[0xF94]) = STACK[0x1C94];
  v2[168] = v3[257];
  v2[226] = v3[265];
  v2[170] = v3[255];
  LODWORD(STACK[0xFB4]) = STACK[0x1C74];
  v2[172] = v3[254];
  v2[173] = v3[251];
  v2[237] = v3[253];
  LODWORD(STACK[0xFD4]) = STACK[0x1C54];
  v2[175] = v3[249];
  LODWORD(STACK[0xFE0]) = v7;
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v7 == v1) * (v6 - 541)) ^ v8)) - 8);
  LODWORD(STACK[0xFE4]) = v7;
  return v16();
}

void sub_19322A0A0(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;
  int v6;
  int v7;
  uint64_t *v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v5 = (_DWORD *)v3[257];
  v6 = STACK[0x1CA8];
  v7 = STACK[0x1CA8];
  v8 = (uint64_t *)v3[266];
  v9 = ((v6 & 0xCB1FE69F) << ((a1 + 100) ^ 0x8C)) & (v6 ^ 0xEA1FF6DE) ^ v6 & 0xCB1FE69F;
  v10 = ((2 * (v6 ^ 0xE820FAC4)) ^ 0x467E38B6) & (v6 ^ 0xE820FAC4) ^ (2 * (v6 ^ 0xE820FAC4)) & 0x233F1C5A;
  v11 = v10 ^ 0x21010449;
  v12 = (v10 ^ 0x13E1810) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0x8CFC716C) & v11 ^ (4 * v11) & 0x233F1C58;
  v14 = (v13 ^ 0x3C1040) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x23030C13)) ^ 0x33F1C5B0) & (v13 ^ 0x23030C13) ^ (16 * (v13 ^ 0x23030C13)) & 0x233F1C50;
  v16 = v14 ^ 0x233F1C5B ^ (v15 ^ 0x23310400) & (v14 << 8);
  v17 = *v8;
  v18 = LODWORD(STACK[0x1CA8]) ^ (2
                                * ((v16 << 16) & 0x233F0000 ^ v16 ^ ((v16 << 16) ^ 0x1C5B0000) & (((v15 ^ 0xE184B) << 8) & 0x233F0000 ^ 0x230000 ^ (((v15 ^ 0xE184B) << 8) ^ 0x3F1C0000) & (v15 ^ 0xE184B))));
  v19 = ((2 * *v5) & 0xBD37FF78) + (*v5 ^ 0x5E9BFFBC) - 1587281852;
  *(_BYTE *)(*v8 + v19) = HIBYTE(v18) ^ 0x8D;
  *(_BYTE *)(v17 + v19 + 1) = BYTE2(v18) ^ 0x57;
  *(_BYTE *)(v17 + v19 + 2) = (((BYTE1(v18) ^ 0xDE) - 2 * ((BYTE1(v18) ^ 0xDE) & 3) + 11) ^ 3) - 8;
  *(_BYTE *)(v17 + v19 + 3) = v18 ^ 0x29;
  v20 = (*v5 + 4);
  *v5 = v20;
  v21 = *v8;
  v22 = v3[265];
  v23 = (v22 ^ 0x26BDF68BBFBB6463) & (2 * (v22 & 0xA63DF693B003684ALL)) ^ v22 & 0xA63DF693B003684ALL;
  v24 = *(_QWORD *)(v4 + 8 * (a1 - 266));
  v2[258] = v3[272];
  v25 = ((2 * (v22 ^ 0x669C3F8B9FBBE4E3)) ^ 0x814392305F711952) & (v22 ^ 0x669C3F8B9FBBE4E3) ^ (2 * (v22 ^ 0x669C3F8B9FBBE4E3)) & 0x40A1C9182FB88CA8;
  v2[260] = v3[271];
  v2[261] = v3[270];
  v26 = v25 ^ 0x40A04908208884A9;
  v27 = (v25 ^ 0x8001801000100000) & (4 * v23) ^ v23;
  v2[263] = v3[267];
  v2[266] = v3[266];
  v2[267] = v3[264];
  v28 = ((4 * v26) ^ 0x2872460BEE232A4) & v26 ^ (4 * v26) & 0xC0A1C9182FB88CA8;
  v2[270] = v3[262];
  LODWORD(STACK[0x114C]) = STACK[0x1CAC];
  v29 = (v28 ^ 0x8100002EA000A0) & (16 * v27) ^ v27;
  v2[272] = v3[261];
  v2[275] = v3[259];
  v2[276] = v3[258];
  v30 = ((16 * (v28 ^ 0xC020C91801188C09)) ^ 0xA1C9182FB88CA90) & (v28 ^ 0xC020C91801188C09) ^ (16 * (v28 ^ 0xC020C91801188C09)) & 0xC0A1C9182FB88CA0;
  LODWORD(STACK[0x116C]) = v7;
  LODWORD(STACK[0x117C]) = STACK[0x1C94];
  v2[277] = v3[257];
  v2[328] = v3[265];
  v2[280] = v3[255];
  LODWORD(STACK[0x11A0]) = STACK[0x1C74];
  v2[340] = v24 - 12;
  v2[281] = v3[254];
  v2[283] = v3[251];
  v2[351] = v3[253];
  LODWORD(STACK[0x11A4]) = STACK[0x1C54];
  v2[285] = v3[249];
  LODWORD(STACK[0x11A8]) = v1;
  v2[286] = v21;
  v2[362] = (v20 ^ 0xFF4AAE6BEBC79FECLL) + 0x68EA46EE279D992 + ((2 * v20) & 0x1D78F3FD8);
  v2[288] = v3[261];
  v2[373] = v22 ^ (2
                 * ((((((v30 ^ 0xC0A1481804300429) << 8) ^ 0xA1C9182FB88CA900) & (v30 ^ 0xC0A1481804300429) ^ ((v30 ^ 0xC0A1481804300429) << 8) & 0xC0A1C9182FB88C00) & 0x9180CA800000000 | 0xA0800000000000) ^ (v30 ^ 0x81002B888800) & (v29 << 8) ^ v29 ^ ((((v30 ^ 0xC0A1481804300429) << 8) ^ 0xA1C9182FB88CA900) & (v30 ^ 0xC0A1481804300429) ^ ((v30 ^ 0xC0A1481804300429) << 8) & 0xC0A1C9182FB88C00 ^ 0x81080828880000) & (((v30 ^ 0x81002B888800) & (v29 << 8) ^ v29) << 16))) ^ 0x5C5697CF3528E02FLL;
  JUMPOUT(0x19322A58CLL);
}

uint64_t sub_19322A6EC()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;

  v3 = (((v0 - v1 - 636) ^ 0x941E8941) - 2060746833) ^ LODWORD(STACK[0x1D10]);
  LODWORD(STACK[0x1E0C]) = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((3558 * (v3 != 0)) ^ v0)))();
}

uint64_t sub_19322A738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;

  *(_QWORD *)(v66 + 2688) = *(_QWORD *)(v66 + 2448) - 0x7C539198C63B88BBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v68
                                        + 8
                                        * ((15 * (a65 == v67 + v65 - 1809942207 + 535 * (v65 ^ 0x8B4) - 1621)) ^ v65))
                            - 4))();
}

uint64_t sub_19322A7A8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 3168) = v0;
  v5 = v1 + 1285;
  v6 = v0 - 1;
  v7 = ((2 * v6) & 0x1EFF41E7ALL) + (v6 ^ 0x767A3EBDF7FA0F3DLL);
  *(_BYTE *)(v3[305] + v7 + v3[336]) = *(_BYTE *)(v3[303] + v7 - 0x767A3EBDF7FA0F3DLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((2514 * (v6 == 0)) ^ v5)))();
}

uint64_t sub_19322A824@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = v3 - 1;
  v12 = (a2 & (2 * v11)) + (v11 ^ a1);
  *(_BYTE *)(v6 + v12 + v5) = *(_BYTE *)(v4 + v12 + v8);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v11 == 0) * v7) ^ (v9 + a3 + 1285))))();
}

uint64_t sub_19322A8A4()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(void);
  unint64_t v27;

  v2 = STACK[0x1DC8];
  **(_DWORD **)(v1 + 2520) += LODWORD(STACK[0x1DC8]) - 887101793;
  v0[152] = *(_QWORD *)(v1 + 2640);
  v0[153] = *(_QWORD *)(v1 + 2632);
  v0[154] = *(_QWORD *)(v1 + 2624);
  v0[156] = *(_QWORD *)(v1 + 2600);
  v0[157] = *(_QWORD *)(v1 + 2592);
  v0[160] = *(_QWORD *)(v1 + 2576);
  v0[162] = *(_QWORD *)(v1 + 2560);
  LODWORD(STACK[0xF78]) = STACK[0x1DCC];
  v0[163] = *(_QWORD *)(v1 + 2552);
  v0[164] = *(_QWORD *)(v1 + 2536);
  v0[167] = *(_QWORD *)(v1 + 2528);
  LODWORD(STACK[0xF7C]) = v2;
  LODWORD(STACK[0xF94]) = STACK[0x1DC4];
  v0[168] = *(_QWORD *)(v1 + 2520);
  v0[226] = *(_QWORD *)(v1 + 2584);
  v0[170] = *(_QWORD *)(v1 + 2504);
  LODWORD(STACK[0xFB4]) = STACK[0x1DC0];
  v0[172] = *(_QWORD *)(v1 + 2496);
  v0[173] = *(_QWORD *)(v1 + 2472);
  v0[237] = *(_QWORD *)(v1 + 2488);
  LODWORD(STACK[0xFD4]) = STACK[0x1D9C];
  v0[175] = *(_QWORD *)(v1 + 2456);
  v3 = STACK[0x1D98];
  LODWORD(STACK[0xFE0]) = STACK[0x1D98];
  LODWORD(STACK[0xFE4]) = v3;
  v4 = STACK[0xFE4];
  v5 = STACK[0xFE0];
  v6 = v0[175];
  v7 = STACK[0xFD4];
  v8 = v0[237];
  v9 = v0[173];
  v10 = v0[172];
  v11 = STACK[0xFB4];
  v12 = v0[170];
  v13 = v0[226];
  v14 = v0[168];
  v15 = STACK[0xF94];
  v16 = STACK[0xF7C];
  v17 = v0[167];
  v18 = v0[164];
  v19 = v0[163];
  v20 = STACK[0xF78];
  v21 = v0[162];
  v22 = v0[160];
  v23 = v0[157];
  v24 = v0[156];
  v25 = v0[154];
  v26 = (uint64_t (*)(void))v0[153];
  v27 = STACK[0x700];
  STACK[0x27E8] = STACK[0x700];
  STACK[0x27F0] = (unint64_t)v26;
  STACK[0x27F8] = v25;
  STACK[0x2800] = v24;
  STACK[0x2808] = v23;
  STACK[0x2810] = v22;
  LODWORD(STACK[0x40C]) = v20;
  STACK[0x2818] = v21;
  STACK[0x2820] = v19;
  STACK[0x2828] = v18;
  STACK[0x2830] = v17;
  LODWORD(STACK[0x42C]) = v16;
  LODWORD(STACK[0x44C]) = v15;
  STACK[0x2838] = v14;
  STACK[0x2840] = v13;
  LODWORD(STACK[0x458]) = v11;
  STACK[0x2848] = v12;
  STACK[0x2850] = v10;
  STACK[0x2858] = v9;
  STACK[0x2860] = v8;
  LODWORD(STACK[0x45C]) = v7;
  STACK[0x2868] = v6;
  LODWORD(STACK[0x474]) = v5;
  LODWORD(STACK[0x484]) = v4;
  *(_QWORD *)(v1 + 2784) = v27;
  *(_QWORD *)(v1 + 2792) = v26;
  *(_QWORD *)(v1 + 2800) = v25;
  *(_QWORD *)(v1 + 2808) = v24;
  *(_QWORD *)(v1 + 2816) = v23;
  *(_QWORD *)(v1 + 2824) = v22;
  *(_QWORD *)(v1 + 2832) = v21;
  LODWORD(STACK[0x574]) = v20;
  *(_QWORD *)(v1 + 2848) = v19;
  *(_QWORD *)(v1 + 2856) = v18;
  *(_QWORD *)(v1 + 2864) = v17;
  LODWORD(STACK[0x584]) = v16;
  LODWORD(STACK[0x5A4]) = v15;
  *(_QWORD *)(v1 + 2872) = v14;
  *(_QWORD *)(v1 + 2752) = v13;
  *(_QWORD *)(v1 + 2880) = v12;
  LODWORD(STACK[0x5C4]) = v11;
  *(_QWORD *)(v1 + 2896) = v10;
  *(_QWORD *)(v1 + 2904) = v9;
  *(_QWORD *)(v1 + 2840) = v8;
  LODWORD(STACK[0x5D4]) = v7;
  *(_QWORD *)(v1 + 2912) = v6;
  LODWORD(STACK[0x5EC]) = v5;
  LODWORD(STACK[0x600]) = v4;
  *(_QWORD *)(v1 + 2920) = v27;
  *(_QWORD *)(v1 + 2928) = v26;
  *(_QWORD *)(v1 + 2936) = v25;
  *(_QWORD *)(v1 + 2944) = v24;
  *(_QWORD *)(v1 + 2952) = v23;
  *(_QWORD *)(v1 + 2960) = v22;
  *(_QWORD *)(v1 + 2968) = v21;
  LODWORD(STACK[0x604]) = v20;
  *(_QWORD *)(v1 + 2984) = v19;
  *(_QWORD *)(v1 + 2992) = v18;
  *(_QWORD *)(v1 + 3000) = v17;
  LODWORD(STACK[0x608]) = v16;
  LODWORD(STACK[0x60C]) = v15;
  *(_QWORD *)(v1 + 3008) = v14;
  *(_QWORD *)(v1 + 2888) = v13;
  *(_QWORD *)(v1 + 3016) = v12;
  LODWORD(STACK[0x634]) = v11;
  *(_QWORD *)(v1 + 3032) = v10;
  *(_QWORD *)(v1 + 3040) = v9;
  *(_QWORD *)(v1 + 2976) = v8;
  LODWORD(STACK[0x644]) = v7;
  *(_QWORD *)(v1 + 3048) = v6;
  LODWORD(STACK[0x664]) = v5;
  LODWORD(STACK[0x684]) = v4;
  return v26();
}

void sub_19322AB04()
{
  uint64_t v0;

  v0 = MEMORY[0x1E0C80A78]();
  __asm { BR              X13 }
}

void sub_19322ACA4()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = -42789;
}

uint64_t sub_193231584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v4;

  return a4(a1, a2, a3, v4);
}

uint64_t sub_1932315A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  int v34;
  _QWORD *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v37 = STACK[0x4E4];
  v38 = v35[107];
  v35[170] = v38;
  v39 = v35[106];
  v35[171] = v39;
  v40 = STACK[0x4CC];
  v41 = v35[104];
  v35[172] = v41;
  v35[109] = v41;
  LODWORD(STACK[0x4F4]) = v40;
  v35[111] = v39;
  v35[112] = v38;
  LODWORD(STACK[0x50C]) = v37;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8 * (((v37 == v36) * ((v33 ^ 0x177C1AA2) + 404)) ^ (v34 + v33 + 1970))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_19323160C@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  _QWORD *v35;
  char v36;
  int v37;
  uint64_t *v38;
  uint64_t v39;
  _DWORD *v40;
  int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  uint64_t v46;

  v38 = (uint64_t *)v35[170];
  v39 = *v38;
  v40 = (_DWORD *)v35[172];
  v41 = a35 - ((2 * a35) & 0x35C8A440) + 451170848;
  v42 = ((*v40 << ((a1 + 31) & 0x3E ^ (v36 + 26))) & 0x5D3FFBF8) + (*v40 ^ 0x2E9FFDFC) - 782237180;
  *(_BYTE *)(*v38 + v42) = HIBYTE(v41) ^ 0x1A;
  *(_BYTE *)(v39 + v42 + 1) = BYTE2(v41) ^ 0xE4;
  *(_BYTE *)(v39 + v42 + 2) = (((BYTE1(v41) ^ 0x52) - 2 * ((BYTE1(v41) ^ 0x52) & 7 ^ BYTE1(v41) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v39 + v42 + 3) = (a35 - ((2 * a35) & 0x40) + 32) ^ 0x20;
  *v40 += 4;
  v35[109] = v40;
  LODWORD(STACK[0x4F4]) = a35;
  v35[111] = v35[171];
  v35[112] = v38;
  LODWORD(STACK[0x50C]) = v37;
  v43 = STACK[0x50C];
  v44 = v35[112];
  v45 = (uint64_t (*)(void))v35[111];
  LODWORD(v40) = STACK[0x4F4];
  v46 = v35[109];
  v35[72] = v46;
  LODWORD(STACK[0x3CC]) = (_DWORD)v40;
  v35[74] = v45;
  v35[75] = v44;
  LODWORD(STACK[0x3E4]) = v43;
  v35[77] = v46;
  LODWORD(STACK[0x3F4]) = (_DWORD)v40;
  v35[79] = v45;
  v35[80] = v44;
  LODWORD(STACK[0x40C]) = v43;
  v35[82] = v46;
  LODWORD(STACK[0x41C]) = (_DWORD)v40;
  v35[84] = v45;
  v35[85] = v44;
  LODWORD(STACK[0x434]) = v43;
  return v45();
}

uint64_t sub_193231758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  char v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * ((((((v9 & 0xFFFFFFFF80000000) != 0) ^ ((v8 ^ (v10 - 1)) + 1)) & 1)
                                          * (((v8 - 413) | 0x200) - 1729)) | v8))
                            - 12))();
}

uint64_t sub_193231794@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)(((v2 ^ 0x12B2) * a2) ^ v2 ^ 0x19CA)) - (v2 ^ 0x1F68)))();
}

uint64_t sub_1932317C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((5704 * ((((v8 - v9) ^ (a1 == 0)) & 1) == 0)) ^ v8))
                            - (((v8 - 1709) | 0x1040u) ^ 0x104DLL)))();
}

uint64_t sub_193231818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int **v9;
  unsigned int *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v10 = *(unsigned int **)v9[173];
  v9[24] = v10;
  v11 = (**v9 ^ 0x669F1BBFEDA7FFBELL) - 0x2614081001869916 + ((2 * **v9) & 0x1DB4FFF7CLL);
  v12 = (v11 ^ 0x3B0F93540BDC5551) & (2
                                      * (v11 & ((v8 ^ 0x19F0u)
                                              + (unint64_t)(v8 - 468)
                                              + 0x1013DE813ALL))) ^ v11 & ((v8 ^ 0x19F0u)
                                                                         + (unint64_t)(v8 - 468)
                                                                         + 0x1013DE813ALL);
  v13 = ((2 * (v11 ^ 0x3B0F93742DE47741)) ^ 0x88480487C75DC32) & (v11 ^ 0x3B0F93742DE47741) ^ (2 * (v11 ^ 0x3B0F93742DE47741)) & 0x847B7F243E3AEE18;
  v14 = v13 ^ 0x84090124020A2209;
  v15 = (v13 ^ 0x840901241C30CC08) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x11EDFC90F8EBB864) & v14 ^ (4 * v14) & 0x847B7F243E3AEE18;
  v17 = (v16 ^ 0x697C00382AA810) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0x8412032406104619)) ^ 0x47B7F243E3AEE190) & (v16 ^ 0x8412032406104619) ^ (16 * (v16 ^ 0x8412032406104619)) & 0x847B7F243E3AEE10;
  v9[66] = (unsigned int *)(v11 ^ (2
                                 * (((((v18 ^ 0x80480D241C100E09) << 8) ^ 0x7B7F243E3AEE1900) & (v18 ^ 0x80480D241C100E09) ^ ((v18 ^ 0x80480D241C100E09) << 8) & 0x847B7F243E3AEE00) & 0x3E202E1800000000 ^ (v18 ^ 0x4337200222AE000) & (v17 << 8) ^ v17 ^ ((((v18 ^ 0x80480D241C100E09) << 8) ^ 0x7B7F243E3AEE1900) & (v18 ^ 0x80480D241C100E09) ^ ((v18 ^ 0x80480D241C100E09) << 8) & 0x847B7F243E3AEE00 ^ 0x7B24243A2A0000) & (((v18 ^ 0x4337200222AE000) & (v17 << 8) ^ v17) << 16))) ^ 0xC26A487C75DC32);
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((23 * (v10 <= v9[12])) ^ v8)) - 8))();
}

uint64_t sub_193231A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((1319 * (((v55 == 0) ^ ((v54 ^ 0x8D) + (v54 ^ 0xAD) + 1)) & 1)) ^ v54)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_193231AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (((6 * ((a9 - 545386702) & 0x37FDFF7C ^ (v55 - 240)) - 1595) * (v54 == 0)) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_193231B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t (*a53)(void))
{
  _QWORD *v53;
  int v54;

  v54 = STACK[0x544];
  LODWORD(STACK[0x43C]) = STACK[0x544];
  v53[104] = a47;
  LODWORD(STACK[0x4CC]) = a49;
  v53[106] = v53[175];
  v53[107] = v53[174];
  LODWORD(STACK[0x4E4]) = v54;
  return a53();
}

uint64_t sub_193231B44(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;

  v9[72] = v9[161];
  v9[74] = v9[159];
  v9[75] = v9[158];
  LODWORD(STACK[0x3CC]) = STACK[0x684];
  LODWORD(STACK[0x3E4]) = STACK[0x6A8];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((1191 * LOBYTE(STACK[0x307])) ^ (v8 + a4 + 236))) - 4))();
}

uint64_t sub_193231B98@<X0>(int a1@<W3>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v4[49] = *(_QWORD *)(a2 + 8 * a3) - 4;
  LODWORD(STACK[0x4BC]) = 1;
  v5 = STACK[0x4BC];
  LODWORD(STACK[0x6AC]) = STACK[0x4BC];
  v6 = v4[49];
  v7 = v4[70];
  v4[166] = v7;
  v4[167] = v6;
  v4[111] = v7;
  v8 = *(_DWORD *)(v7 + 12);
  v7 += 12;
  v4[168] = v7;
  LODWORD(STACK[0x6CC]) = v8;
  v4[109] = v6;
  v4[112] = v7;
  LODWORD(STACK[0x4F4]) = v5;
  LODWORD(STACK[0x50C]) = 101330305;
  return (*(uint64_t (**)(void))(a2 + 8 * ((124 * ((((v3 + a1 + 66) ^ (v8 < 0xFFFFFFFB)) & 1) == 0)) ^ (v3 + a1 + 936))))();
}

uint64_t sub_193231D64@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v4 = v2[166];
  v5 = ((2 * LODWORD(STACK[0x6CC])) & 0x1EC2393EELL)
     + 0x40780350598DB2F6
     + (LODWORD(STACK[0x6CC]) ^ ((a2 + 392168630) | 0x1C1818u) ^ 0xBF87FCAFE16DD4EBLL);
  v6 = (*(unsigned int *)(v4 + 8) ^ 0x7FF6D6AE3FFFBFFFLL)
     - 0x7FF6D6ADF0604316
     + ((2 * *(_DWORD *)(v4 + 8)) & 0x7FFF7FFE);
  v7 = v5 < 0x4F9F7CE9;
  v8 = v5 > v6;
  if (v7 != v6 < 0x4F9F7CE9)
    v8 = v7;
  v2[104] = v2[167];
  v2[106] = v4;
  v2[107] = v2[168];
  LODWORD(STACK[0x4CC]) = STACK[0x6AC];
  LODWORD(STACK[0x4E4]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2681 * v8) ^ a2)) - 8))();
}

uint64_t sub_193231E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v46 = *(_QWORD *)(a8 + 8 * a9);
  v47 = (a9 - 515746171);
  v45[114] = v45[167];
  v45[50] = v46 + v47 - 3779221211;
  v48 = v45[166];
  v45[116] = v48;
  v45[117] = v45[168];
  LODWORD(STACK[0x51C]) = STACK[0x6AC];
  v45[119] = v48;
  v49 = (v47 + 515749354);
  LODWORD(STACK[0x534]) = 4;
  v50 = v45[119];
  v45[173] = v50;
  v45[174] = v45[117];
  v45[175] = v45[116];
  v51 = *(unsigned int *)(v50 + 8);
  *v45 = v50 + 8;
  v52 = v51 - 0x248021788002063FLL + (v49 ^ 0x2480217880020AFELL);
  v45[63] = v52;
  LOBYTE(STACK[0x35F]) = v52 < 0xFFFFFFFF;
  v45[52] = v51;
  v45[64] = v45[52];
  LODWORD(STACK[0x544]) = 101330305;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (int)(((HIDWORD(a41) != 18) * (((v49 - 1725) | 0xAE) + ((v49 - 1987) | 0x204) - 3374)) ^ v49)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_193231EB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  int v9;
  int v10;

  v10 = STACK[0x434];
  LODWORD(STACK[0x5BC]) = STACK[0x41C];
  v8[133] = v8[85];
  v8[134] = v8[84];
  v8[136] = v8[82];
  v8[92] = 0;
  LODWORD(STACK[0x46C]) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8
                                             * ((2079 * (v10 == (a4 ^ 0x177C1A36) + 2461 + v9)) ^ (a4 - 394008667)))
                            - 8))();
}

uint64_t sub_193231F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,int *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  _QWORD *v48;
  int v49;
  uint64_t v50;

  v42 = (uint64_t *)v40[70];
  v40[137] = v42;
  v40[71] = 0;
  LODWORD(STACK[0x3AC]) = 0;
  a25(a29);
  v43 = *a30;
  v44 = *v42;
  v45 = *((_DWORD *)v42 + 3);
  v40[138] = (char *)v42 + 12;
  v46 = v40[132];
  v47 = 597255653 * ((1208285996 - ((v41 - 144) | 0x4804FB2C) + ((v41 - 144) | 0xB7FB04D3)) ^ 0xBEF07B4A);
  v48 = (_QWORD *)(v41 - 160);
  v48[3] = v40[131];
  *(_DWORD *)(v41 - 112) = v47 + v39 + 1406;
  v48[5] = v44;
  *(_DWORD *)(v41 - 140) = v47 + ((v39 + 726) | 0x599) + v45 + 1581691396 - ((2 * v45) & 0xBC8D6408) - 3993;
  *(_DWORD *)(v41 - 128) = (v43 ^ 0x35FBFFFC) - v47 + ((v43 << ((v39 - 59) & 0x3F ^ 0x2E)) & 0x6BF7FFF8) - 283252804;
  v48[7] = v46;
  a24(v41 - 144);
  v49 = *(_DWORD *)(v41 - 144);
  v50 = a26(a29);
  LODWORD(STACK[0x438]) = v49;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a39
                                                      + 8
                                                      * (((2 * (v49 == 663729217)) | (4 * (v49 == 663729217))) ^ v39))
                                          - 8))(v50);
}

uint64_t sub_193232098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t), uint64_t (*a11)(_QWORD, uint64_t, uint64_t), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v45 = *(_QWORD *)(a8 + 8 * v42);
  v46 = 486723911 * ((-2 - ((~v43 | 0x97112B4BFB9E4475) + (v43 | 0x68EED4B40461BB8ALL))) ^ 0xA5AFF0DA4B5424EFLL);
  *(_DWORD *)(v44 - 128) = v42 - 71465943 - v46;
  *(_QWORD *)(v39 + 16) = v41;
  *(_QWORD *)(v39 + 24) = v45 - v46 - 8;
  a10(v44 - 144);
  v47 = a11(*a28, a27, v40);
  v48 = ((2 * v47) & 0x6D5DF9BE) + (v47 ^ (((v42 + 209) ^ 0x32A) + 917435829));
  v49 = *(_QWORD *)(a39 + 8 * (v42 ^ 5));
  v50 = 486723911 * (((v43 | 0x2E08C79AD8053B4FLL) - (v43 & 0x2E08C79AD8053B4FLL)) ^ 0x1CB61C0B68CF5BD5);
  *(_DWORD *)(v44 - 128) = v42 - 71465943 - v50;
  *(_QWORD *)(v39 + 16) = v41;
  *(_QWORD *)(v39 + 24) = v49 - v50 - 8;
  v51 = ((uint64_t (*)(uint64_t))a10)(v44 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a39
                                                               + 8
                                                               * ((1460
                                                                 * (v48 == ((((_DWORD)v42 + 209) | 0xC1) ^ 0x36AEF81E))) ^ (v42 + 1776)))
                                                   - 4))(v51, 101372955);
}

void sub_19323223C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  _QWORD *v38;

  a25(a29);
  v33 = **(_QWORD **)(v31 + 1096);
  v34 = **(_DWORD **)(v31 + 1104);
  v35 = *(_QWORD *)(v31 + 1048);
  v36 = *(_QWORD *)(v31 + 1056);
  v37 = 597255653
      * ((1718613900 - ((v32 - 144) ^ 0x567CADB7 | 0x666FF78C) + ((v32 - 144) ^ 0x567CADB7 | 0x99900873)) ^ 0xC6E7DA5D);
  *(_DWORD *)(v32 - 112) = v37 + a31 + 1406;
  v38 = (_QWORD *)(v32 - 160);
  v38[3] = v35;
  v38[5] = v33;
  v38[7] = v36;
  *(_DWORD *)(v32 - 140) = v34 + 1581691396 + v37 - ((2 * v34) & 0xBC8D6408);
  JUMPOUT(0x193232338);
}

uint64_t sub_1932323B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  int v39;
  int v40;
  int v41;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a8
                                                                                + 8
                                                                                * (((((v41 - 3800) | 0x400) - 749)
                                                                                  * (v39 == v40)) ^ (v41 - 1402)))
                                                                    - ((v41 - 1402) ^ 0xB22u)
                                                                    + 313))(a1, 101372955, a3, a39);
}

void sub_193232420()
{
  _QWORD *v0;

  v0[68] = 0;
  v0[97] = v0[136];
  v0[99] = v0[134];
  v0[100] = v0[133];
  LODWORD(STACK[0x494]) = STACK[0x5BC];
  JUMPOUT(0x193232478);
}

uint64_t sub_193232524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v43 = *(_QWORD **)(v41 + 1304);
  *v43 = 0;
  v43[1] = 0;
  *(_QWORD *)(v41 + 1312) = v43 + 1;
  v44 = a33(4096, 2241923698);
  **(_QWORD **)(v41 + 1304) = v44;
  return ((uint64_t (*)(void))(*(_QWORD *)(a39 + 8 * ((232 * (v44 != 0)) ^ v39))
                            - ((v39 - 1400) ^ (unint64_t)(v42 - 813) ^ (v39 - v40 - 2655))))();
}

uint64_t sub_193232590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  int v41;
  int v42;
  int v43;
  uint64_t v44;

  **(_DWORD **)(v44 + 1312) = v42;
  *(_QWORD *)(v44 + 816) = *(_QWORD *)(v44 + 1304);
  LOBYTE(STACK[0x28B]) = 1;
  LODWORD(STACK[0x4B8]) = 101372955;
  LODWORD(STACK[0x6A8]) = STACK[0x4B8];
  LOBYTE(STACK[0x307]) = STACK[0x28B];
  **(_QWORD **)(v44 + 1256) = *(_QWORD *)(v44 + 816);
  return (*(uint64_t (**)(void))(a8 + 8 * (int)((v43 + ((v41 + 528349900) & 0xF7FE1D5C) + 2813) ^ (4 * (a41 == 18)))))();
}

uint64_t sub_193232638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v4;

  return a4(a1, a2, a3, v4);
}

uint64_t sub_193232654(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  *(_QWORD *)(v9 + 704) = 0;
  LODWORD(STACK[0x44C]) = STACK[0x6A8];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (int)(((LOBYTE(STACK[0x307]) << 9) | (LOBYTE(STACK[0x307]) << 12)) ^ (v8 + a4 + 647)))
                            - (a4 ^ 0x177C1D14)))();
}

uint64_t sub_1932326A8@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (a2 - 3436);
  v5 = (a2 - v2 + 32);
  v6 = STACK[0x3AC];
  LODWORD(STACK[0x5DC]) = STACK[0x3AC];
  v7 = *(_QWORD *)(v3 + 544);
  *(_QWORD *)(v3 + 1120) = v7;
  v8 = *(_QWORD *)(a1 + 8 * ((972 * (v6 <= *(_DWORD *)(v7 + 8))) ^ a2));
  LODWORD(STACK[0x43C]) = 101372955;
  return ((uint64_t (*)(void))(v8 - (v4 + (v5 ^ 0xFFFFFFFFE883E28CLL))))();
}

void sub_193232708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;

  v10 = *(_QWORD *)(a8 + 8 * v8);
  v9[114] = v9[161];
  v9[50] = v10;
  v9[116] = v9[159];
  v9[117] = v9[158];
  LODWORD(STACK[0x51C]) = STACK[0x684];
  v9[119] = v9[140];
  JUMPOUT(0x193232754);
}

uint64_t sub_193232800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  unsigned __int8 v11;
  int v12;
  int v13;
  int v14;

  v11 = v8 - 101;
  v12 = v8 ^ 0x177C189F;
  v13 = v9 + v8 + 3004;
  v14 = STACK[0x43C];
  LODWORD(STACK[0x5EC]) = STACK[0x43C];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((((v14 == v10) ^ v11) & 1) * (v12 ^ 0x59B)) ^ v13)) - 12))();
}

uint64_t sub_193232858@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v3 = a2 & 0xFFFFFFFF9449E6DBLL;
  v4 = v2[68];
  v5 = *(_QWORD *)(a1 + 8 * v3) - 8;
  v6 = v4 == 0;
  v2[124] = v5;
  v2[125] = v4;
  v2[127] = 0;
  LODWORD(v4) = STACK[0x5EC];
  LODWORD(STACK[0x570]) = STACK[0x5EC];
  v2[128] = v5;
  v2[130] = 0;
  LODWORD(STACK[0x588]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((v3 + ((v3 + 497) | 0x12) - 579) ^ (732 * v6))) - 8))();
}

uint64_t sub_1932328C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;

  v10 = (unint64_t *)v9[68];
  v9[142] = v10;
  v11 = *v10;
  v9[143] = v11;
  v12 = v9[71];
  v9[144] = v12;
  v9[56] = LODWORD(STACK[0x3AC])
         - ((((v8 ^ 0xA8Eu) - 636) ^ 0x10A571C5BLL) & (2 * LODWORD(STACK[0x3AC])))
         - 0x4D58EB37AD4779BLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((v12 <= v11) | (32 * (v12 <= v11))) ^ v8)) - 12))();
}

uint64_t sub_193232940@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  LODWORD(STACK[0x60C]) = LODWORD(STACK[0x340]) ^ 0x852B8865;
  return (*(uint64_t (**)(void))(a1 + 8 * (((a35 == 18) * ((a2 - 1169) ^ 0x837)) ^ a2)))();
}

uint64_t sub_19323299C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2959 * (v2 ^ 1)) ^ (a2 - 1804))) - 8))();
}

void sub_1932329DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 456) = LODWORD(STACK[0x60C]);
  *(_QWORD *)(v0 + 360) = 0;
  JUMPOUT(0x193230AE8);
}

uint64_t sub_193232B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  BOOL v10;

  v10 = *(_QWORD *)(v9 + 1176) == 0;
  LODWORD(STACK[0x468]) = STACK[0x614];
  *(_QWORD *)(v9 + 736) = 0;
  LODWORD(STACK[0x46C]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((2424 * ((v10 ^ (v8 + 6)) & 1)) ^ v8)) - 8))();
}

uint64_t sub_193232B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v16;
  _BOOL4 v17;

  v10 = v9[147];
  v11 = *(unsigned int *)(v10 + 8);
  v9[92] = v10;
  v12 = *(_DWORD *)(v10 + 12);
  v9[148] = v10 + 12;
  LODWORD(STACK[0x62C]) = v12;
  v9[58] = v11;
  v13 = v11 ^ 0x6E9CB5FFFF71D7F5;
  v11 *= 2;
  v9[60] = v11;
  v14 = (v12 ^ 0xA0E4FEE7DFCFF7D3) + 0x5F1B011865084019 + (((unint64_t)v12 << (v8 ^ 0xC0u)) & 0x1BF9FEFA6);
  v15 = ((v8 - 1211) | 0x10C1u) + v13 + (v11 & 0x1FEE3AFEALL) - 0x6E9CB5FFBA99B0D4;
  v16 = v14 < 0x44D837E8;
  v17 = v14 > v15;
  if (v16 != v15 < 0x44D837E8)
    v17 = v16;
  LODWORD(STACK[0x468]) = STACK[0x614];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((2644 * !v17) ^ v8)) - 8))();
}

uint64_t sub_193232C98(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;

  v11 = **(_QWORD **)(v10 + 1176);
  *(_QWORD *)(v10 + 1200) = v11;
  v12 = STACK[0x62C];
  v13 = ((((v8 - 1100981671) & 0x419FAEEF) - 1107300096) & (2 * LODWORD(STACK[0x62C])))
      + (LODWORD(STACK[0x62C]) ^ 0x5EFFFFF3)
      - 1593835507;
  v14 = *(unsigned __int8 *)(v11 + v13 + 2);
  v15 = ((*(unsigned __int8 *)(v11 + v13) << ((v8 ^ v9) + 87)) - (*(unsigned __int8 *)(v11 + v13) << 25) - 0x1000000) | (*(unsigned __int8 *)(v11 + v13 + 1) << 16) | (((v14 - ((2 * v14) & 0x4C) + 4420934) << 8) - 0x2000) ^ 0x43752600;
  LODWORD(v11) = *(unsigned __int8 *)(v11 + v13 + 3);
  LODWORD(v11) = (v15 ^ 0x5A6FFF) & ((v11 - ((2 * v11) & 0xE6) - 1636428685) ^ 0x82C7F04) ^ v15 & 0x69A59400;
  LODWORD(v11) = (v11 & 0x324D5387 ^ 0x12494387) + (v11 ^ 0x28A41408) - ((v11 ^ 0x28A41408) & 0x324D5387);
  LODWORD(v11) = (((v11 ^ 0x1FBDF440) - 789305555) ^ ((v11 ^ 0x7B8AD7DE) - 1262287693) ^ ((v11 ^ 0x81840F66) + 1322114059))
               - 619719546;
  LODWORD(STACK[0x638]) = v11;
  v12 += 4;
  LODWORD(STACK[0x63C]) = v12;
  **(_DWORD **)(v10 + 1184) = v12;
  return (*(uint64_t (**)(void))(a8 + 8 * ((84 * ((_DWORD)v11 == a2)) ^ v8)))();
}

uint64_t sub_193232E50@<X0>(uint64_t a1@<X7>, unsigned int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v3 = LODWORD(STACK[0x63C]);
  v2[61] = v3;
  v2[62] = 2 * v3;
  v4 = (v3 ^ 0x5AEE5BBBFEFB4FF6) - 0x5AEE5BBB5974564ELL + (((859 * (a2 ^ 0xEE3)) ^ 0x1FDF68F2ALL) & (2 * v3));
  v5 = (v2[58] ^ 0x3FBDE76BA3F7DD49) + (v2[60] & 0x147EFBA92) - 0x3FBDE76AFE70E3A9;
  v6 = v4 < ((a2 - 2597) ^ 0xA586FD61uLL);
  v7 = v4 > v5;
  if (v6 != v5 < 0xA586F9A0)
    v7 = v6;
  LODWORD(STACK[0x468]) = STACK[0x614];
  v2[92] = v2[147];
  LODWORD(STACK[0x46C]) = 101330305;
  return (*(uint64_t (**)(void))(a1 + 8 * ((452 * !v7) ^ a2)))();
}

uint64_t sub_193232F60(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t *a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  v37 = v35 ^ 0x1406u;
  v38 = (*(_QWORD *)(v36 + 496) & 0x1DE7B9E7CLL)
      + (*(_QWORD *)(v36 + 488) ^ 0x77EF2E7EEF3DCF3ELL)
      + *(_QWORD *)(v36 + 1200);
  v39 = ((unint64_t)*(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF3ELL) << 56) | ((unint64_t)*(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF3DLL) << 48) | ((unint64_t)*(unsigned __int8 *)(v38 + v37 - 0x77EF2E7EEF3DE003) << 40) | ((unint64_t)(*(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF3BLL) + 1761281547 + (~(2 * *(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF3BLL)) | 0xFFFFFFEB)) << 32) ^ 0x68FB060A00000000 | (((*(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF3ALL) - ((2 * *(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF3ALL)) & 0x17ELL) + 0x69D8038CC4) << 24) - 83886080) ^ 0x69D8038CBF000000 | (((*(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF39) - ((2 * *(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF39)) & 0xCLL) + 0x350361AEA51ALL) << 16) - 1310720) ^ 0x350361AEA5060000 | (((*(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF38) - ((2 * *(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF38)) & 0x1CELL) + 0x434761C106CB23) << 8) - 15360) ^ 0x434761C106CAE700;
  v40 = *(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF37)
      - ((2 * *(unsigned __int8 *)(v38 - 0x77EF2E7EEF3DCF37)) & 0x182)
      + 0x9405164B5B020C1;
  *a35 = v40 & 0x546 ^ 0x5BA00EFBBE6F7AF9 ^ ((v39 - ((2 * v39) & 0xA03818AD1A802476) + 0x501C0C568D401213) ^ 0xBBC02AD332F68AALL) & (v40 ^ 0xF6BFAE9B4A4FDF3ELL);
  **(_DWORD **)(v36 + 1184) += 8;
  LODWORD(STACK[0x468]) = STACK[0x614];
  *(_QWORD *)(v36 + 736) = *(_QWORD *)(v36 + 1176);
  LODWORD(STACK[0x46C]) = a2;
  LODWORD(v39) = STACK[0x46C];
  LODWORD(STACK[0x640]) = STACK[0x46C];
  v41 = *(_QWORD *)(v36 + 736);
  *(_QWORD *)(v36 + 1224) = v41;
  v42 = STACK[0x468];
  LODWORD(STACK[0x644]) = STACK[0x468];
  v43 = *(_QWORD *)(v36 + 560);
  *(_QWORD *)(v36 + 1232) = v43;
  LODWORD(STACK[0x47C]) = v39;
  LODWORD(STACK[0x480]) = v42;
  *(_QWORD *)(v36 + 752) = v41;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (int)(((((v37 - 24) ^ (v43 == 0)) & 1) * (v37 - 4251)) ^ v37))
                            - 8))();
}

uint64_t sub_193233254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;

  v35 = *(_QWORD *)(a8 + 8 * (a9 - 3609));
  LODWORD(STACK[0x550]) = STACK[0x640];
  LODWORD(STACK[0x554]) = STACK[0x644];
  v34[121] = v34[153];
  v34[55] = v35;
  v36 = v34[154];
  v34[123] = v36;
  v37 = v34[121];
  v38 = STACK[0x554];
  v39 = STACK[0x550];
  v34[124] = v34[55];
  v34[125] = v36;
  v34[127] = v37;
  LODWORD(STACK[0x570]) = v38;
  LODWORD(STACK[0x574]) = v39;
  LODWORD(STACK[0x28C]) = STACK[0x574];
  v34[35] = v34[127];
  v40 = (uint64_t *)v34[125];
  v34[38] = v40;
  v34[43] = v34[124];
  v41 = *v40;
  v34[51] = v41;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 - ((((a9 - 3609) ^ 0x648) + 391385898) | 0x28050Cu) + *(_QWORD *)(a8 + 8 * (((v41 == 0) * (((((a9 - 3609) ^ 0x648) - 188) | 0x210) - 1024)) ^ (((a9 - 3609) ^ 0x648) - 80)))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1932333C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(void),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);

  v42 = (_QWORD *)v41[38];
  *v42 = 0;
  v42[1] = 0;
  v43 = a36();
  v41[128] = v41[43];
  v41[130] = v41[35];
  LODWORD(STACK[0x588]) = a41;
  LODWORD(STACK[0x58C]) = STACK[0x28C];
  v44 = STACK[0x58C];
  v45 = STACK[0x588];
  v46 = v41[130];
  v47 = (uint64_t (*)(uint64_t))v41[128];
  LODWORD(STACK[0x448]) = STACK[0x588];
  v41[88] = 0;
  LODWORD(STACK[0x44C]) = v45;
  LODWORD(STACK[0x47C]) = v44;
  LODWORD(STACK[0x480]) = v45;
  v41[94] = v46;
  LODWORD(STACK[0x484]) = v44;
  return v47(v43);
}

uint64_t sub_193233438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  int v34;
  _QWORD *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v38 = STACK[0x4E4];
  v39 = STACK[0x4CC];
  v40 = v35[107];
  v35[170] = v40;
  v41 = v35[106];
  v35[171] = v41;
  v42 = v35[104];
  v35[172] = v42;
  v35[109] = v42;
  v35[111] = v41;
  v35[112] = v40;
  LODWORD(STACK[0x4F4]) = v39;
  LODWORD(STACK[0x50C]) = v38;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8 * (((v38 == v37) * ((v33 ^ (v36 + 465)) + 1531)) ^ (v34 + v33 + 956))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_19323349C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  int v35;
  _QWORD *v36;
  int v37;
  int v38;
  uint64_t *v39;
  uint64_t v40;
  _DWORD *v41;
  int v42;
  unsigned int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);

  v38 = v35 ^ a1;
  v39 = (uint64_t *)v36[171];
  v40 = *v39;
  v41 = (_DWORD *)v36[170];
  v42 = v38 + 57160964 + a35 - ((2 * a35) & 0x35C8A440);
  v43 = ((2 * *v41) & 0x775FFBF8) + (*v41 ^ 0xBBAFFDFC) + 1146094084;
  *(_BYTE *)(*v39 + v43) = HIBYTE(v42) ^ 0x1A;
  *(_BYTE *)(v40 + v43 + 1) = BYTE2(v42) ^ 0xE4;
  *(_BYTE *)(v40 + v43 + 2) = (((BYTE1(v42) ^ 0x52) - 2 * ((BYTE1(v42) ^ 0x52) & 7 ^ BYTE1(v42) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v40 + v43 + 3) = v42 ^ 0x20;
  *v41 += 4;
  v36[109] = v36[172];
  v36[111] = v39;
  v36[112] = v41;
  LODWORD(STACK[0x4F4]) = a35;
  LODWORD(STACK[0x50C]) = v37;
  v44 = STACK[0x50C];
  LODWORD(v39) = STACK[0x4F4];
  v45 = v36[112];
  v46 = v36[111];
  v47 = (uint64_t (*)(void))v36[109];
  v36[72] = v47;
  v36[74] = v46;
  v36[75] = v45;
  LODWORD(STACK[0x3CC]) = (_DWORD)v39;
  LODWORD(STACK[0x3E4]) = v44;
  v36[77] = v47;
  v36[79] = v46;
  v36[80] = v45;
  LODWORD(STACK[0x3F4]) = (_DWORD)v39;
  LODWORD(STACK[0x40C]) = v44;
  v36[82] = v47;
  v36[84] = v46;
  v36[85] = v45;
  LODWORD(STACK[0x41C]) = (_DWORD)v39;
  LODWORD(STACK[0x434]) = v44;
  return v47();
}

uint64_t sub_193233624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v8 ^ (3313 * ((v9 & 0xFFFFFFFF80000000) != 0))))
                            - (v8 ^ 0x1EFu ^ (unint64_t)(v10 - 783) ^ (v8 + 394008094))))();
}

uint64_t sub_193233668@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 416) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((a2 + 1185809373) & 0xB951FDBD ^ (388 * (v2 > v3))))
                            - ((((a2 + 1185809373) & 0xB951FDBD) - 1884829871) & 0x70583CBF)
                            + 3253))();
}

uint64_t sub_1932336C0@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  LODWORD(STACK[0x544]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)(((a35 == ((2 * (a2 + 1798)) ^ 0x1F76))
                                               * ((a2 + 1200382771) & 0xB8739E2F ^ 0xA64)) ^ (a2 + 1798)))
                            - 12))();
}

uint64_t sub_193233720@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (375 * a2)))
                            - ((((v2 + 394048431) & 0xFFFF5F5D) - 394005856) ^ 0xFB0)))();
}

uint64_t sub_193233764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(_QWORD, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  int v41;
  uint64_t v42;

  *(_QWORD *)(v42 + 96) = a33(*(_QWORD *)(v42 + 520), 2241923698);
  LODWORD(STACK[0x544]) = 101330303;
  return (*(uint64_t (**)(void))(a39 + 8 * ((92 * (a41 == ((v41 + 2) ^ 0x910) - 1692)) ^ v41)))();
}

uint64_t sub_1932337C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return (*(uint64_t (**)(void))(a8 + 8 * (((v8 - 4999 + v8 - 2934) * (a1 == 0)) ^ v8)))();
}

uint64_t sub_1932337F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int **v9;
  unsigned int *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v10 = *(unsigned int **)v9[173];
  v9[24] = v10;
  v11 = (**v9 ^ 0xAEBFFFFF65EF8FEFLL) + 0x59E52DBFFEFEFFB7 + ((2 * **v9) & 0xCBDF1FDE);
  v12 = (v11 ^ 0xD153CD649BD06753) & (2 * (v11 & 0x409B11705ALL)) ^ v11 & 0x409B11705ALL;
  v13 = ((2 * (((v8 - 40) | 0xA4Du) ^ v11 ^ 0xD153CD65BFF2493ELL)) ^ 0x4812204A49C66E12) & (((v8 - 40) | 0xA4Du) ^ v11 ^ 0xD153CD65BFF2493ELL) ^ (2 * (((v8 - 40) | 0xA4Du) ^ v11 ^ 0xD153CD65BFF2493ELL)) & 0x26091F2524E33708;
  v14 = v13 ^ 0x2209012524211109;
  v15 = (v13 ^ 0x20000C20200) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x98247C94938CDC24) & v14 ^ (4 * v14) & 0x26091F2524E33708;
  v17 = (v16 ^ 0x1C0400801400) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0x2609032124632309)) ^ 0x6091F2524E337090) & (v16 ^ 0x2609032124632309) ^ (16 * (v16 ^ 0x2609032124632309)) & 0x26091F2524E33700;
  v9[66] = (unsigned int *)(v11 ^ (2
                                 * (((((v18 ^ 0x6080D2520C00709) << 8) ^ 0x91F2524E3370900) & (v18 ^ 0x6080D2520C00709) ^ ((v18 ^ 0x6080D2520C00709) << 8) & 0x26091F2524E33700) & 0x421240100000000 ^ (v18 ^ 0x2001120004233000) & (v17 << 8) ^ v17 ^ ((((v18 ^ 0x6080D2520C00709) << 8) ^ 0x91F2524E3370900) & (v18 ^ 0x6080D2520C00709) ^ ((v18 ^ 0x6080D2520C00709) << 8) & 0x26091F2524E33700 ^ 0x9052420230000) & (((v18 ^ 0x2001120004233000) & (v17 << 8) ^ v17) << 16))) ^ 0x412184849C66E12);
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((v10 <= v9[12]) ^ v8)) - 12))();
}

uint64_t sub_193233A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((((((v54 + 992) | 0x14) + 394007776) ^ 0x177C183B) * (v55 != 0)) ^ (v54 + 1385))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_193233A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,unsigned int a63)
{
  int v63;
  uint64_t v64;
  int v65;
  _QWORD *v66;
  uint64_t v67;

  v66[54] = a63;
  v67 = ((a63 - 1) ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + ((2 * (a63 - 1)) & 0x1EFF41E7ALL);
  *(_BYTE *)(v66[12] + v67) = *(_BYTE *)(v66[24] + v67);
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((4042
                                * (a63 - 1 != ((((v63 - 2072) | 0x7D2u) - v65 - 2026) ^ (unint64_t)(v64 + 12)))) ^ ((v63 - 2072) | 0x7D2))))();
}

uint64_t sub_193233B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  uint64_t v55;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (a9 ^ (31 * (v54 == 0)))) + v55 - (((a9 - 2589) | 0x20Au) + 394008258)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_193233B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,unsigned int a62)
{
  int v62;
  uint64_t v63;

  *(_QWORD *)(v63 + 536) = a62;
  *(_QWORD *)(v63 + 424) = 0;
  **(_BYTE **)(v63 + 96) = **(_BYTE **)(v63 + 192);
  return (*(uint64_t (**)(void))(a8 + 8 * ((2450 * (a62 == 1)) ^ v62)))();
}

void sub_193233BD0()
{
  JUMPOUT(0x193233B9CLL);
}

uint64_t sub_193233BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(_QWORD),uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  _QWORD *v46;
  uint64_t v47;

  *(_QWORD *)(v44 + 432) = v41;
  v45 = v43 + v42 + 1698;
  v46 = *(_QWORD **)(v44 + 1384);
  v47 = a36(*v46);
  *v46 = *(_QWORD *)(v44 + 96);
  **(_DWORD **)v44 = *(_QWORD *)(v44 + 520);
  LODWORD(STACK[0x544]) = 101372955;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a39 + 8 * ((3233 * (a41 == 18)) ^ v45)) - 12))(v47);
}

uint64_t sub_193233C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t (*a53)(void))
{
  _QWORD *v53;
  int v54;

  v54 = STACK[0x544];
  LODWORD(STACK[0x43C]) = STACK[0x544];
  v53[104] = a47;
  v53[106] = v53[175];
  v53[107] = v53[174];
  LODWORD(STACK[0x4CC]) = a49;
  LODWORD(STACK[0x4E4]) = v54;
  return a53();
}

uint64_t sub_193233C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  uint64_t v41;
  int v42;

  return ((uint64_t (*)(void))(*(_QWORD *)(v41
                                        + 8
                                        * ((250 * (a41 == ((2 * (v42 ^ 0xE7E) - 28) ^ 0x628))) ^ (2 * (v42 ^ 0xE7E))))
                            - 12))();
}

uint64_t sub_193233CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  int v39;
  _QWORD *v40;

  LODWORD(STACK[0x72C]) = STACK[0x658];
  v40[182] = v40[157];
  v40[183] = v40[156];
  v40[184] = v40[154];
  LODWORD(STACK[0x748]) = STACK[0x65C];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((LOBYTE(STACK[0x28B]) * (v39 + a39 + 1717)) ^ (v39 + a39 + 20)))
                            - 12))();
}

uint64_t sub_193233D20@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v4 = (a2 + 270795004) | 0x7581C00u;
  v3[42] = (v4 ^ 0xFFFFFFFFE883E2E8) + *(_QWORD *)(a1 + 8 * a2);
  LODWORD(STACK[0x468]) = 1;
  v5 = STACK[0x468];
  LODWORD(STACK[0x684]) = STACK[0x468];
  v6 = v3[42];
  v7 = v3[178];
  v3[162] = v7;
  v3[163] = v6;
  v3[88] = v7;
  v8 = *(_DWORD *)(v7 + 12);
  v7 += 12;
  v3[164] = v7;
  LODWORD(STACK[0x6A8]) = v8;
  LODWORD(STACK[0x480]) = v5;
  v3[90] = v7;
  v3[92] = v6;
  LODWORD(STACK[0x484]) = 101330305;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((56 * (v8 >= ((((_DWORD)v4 + v2) | 0x202) ^ 0xFFFFFDF5))) ^ ((int)v4 + v2 + 2437))))();
}

uint64_t sub_193233EDC@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v5 = v3[162];
  v6 = (LODWORD(STACK[0x6A8]) ^ 0x54AEDFF7FF7DB977)
     - 0x54AEDFF7C3572D4DLL
     + ((2 * LODWORD(STACK[0x6A8])) & 0x1FEFB72EELL);
  v7 = ((a2 - v2 - 514) ^ *(_DWORD *)(v5 + 8) ^ 0xFF3BFFAD8AC6FEE7)
     + ((2 * *(unsigned int *)(v5 + 8)) & 0x13B75C7F6)
     + 0xC400529E6BA82BLL;
  v8 = v6 < 0x3C268C26;
  v9 = v6 > v7;
  if (v8 != v7 < 0x3C268C26)
    v9 = v8;
  LODWORD(STACK[0x46C]) = STACK[0x684];
  v3[82] = v5;
  v3[84] = v3[164];
  v3[85] = v3[163];
  LODWORD(STACK[0x47C]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((3751 * v9) ^ a2)) - 12))();
}

uint64_t sub_193233FD0@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = (2 * a2) ^ 0xDA0;
  v4 = ((2 * a2) ^ 0xFFFFFFFFFFFFFBE8) + *(_QWORD *)(a1 + 8 * a2);
  LODWORD(STACK[0x494]) = STACK[0x684];
  v5 = v2[162];
  v2[94] = v5;
  v2[97] = v2[164];
  v2[44] = v4;
  v2[99] = v2[163];
  LODWORD(STACK[0x4B8]) = 4;
  v6 = 895 * (v3 ^ 0x9BEu);
  v2[100] = v5;
  v2[170] = v5;
  v7 = LODWORD(STACK[0x4B8]);
  v2[171] = v2[99];
  v2[172] = v2[97];
  v2[173] = v2[94];
  v8 = *(unsigned int *)(v5 + 8);
  LODWORD(STACK[0x6CC]) = STACK[0x494];
  v2[45] = v8;
  v2[174] = v2[44];
  v2[175] = v5 + 8;
  v9 = v6 + (v7 ^ 0xCD38F8FAF37F3DEFLL) + ((2 * v7) & 0x1E6FE7BDELL) + v8 + 0x32C707050C80BB13;
  LOBYTE(STACK[0x307]) = v9 < 0xFFFFFFFF;
  v2[63] = v9;
  v2[64] = v8;
  LODWORD(STACK[0x4BC]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((((v8 & 0xFFFFFFFF80000000) != 0)
                                               * (((v6 ^ 0x1EF) + 394005614) ^ (v6 + 394008094))) ^ v6))
                            - 12))();
}

uint64_t sub_193234018(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  int v10;
  int v11;

  v11 = STACK[0x788];
  v9[121] = v9[192];
  v9[123] = v9[191];
  v9[124] = v9[190];
  LODWORD(STACK[0x554]) = STACK[0x76C];
  v9[201] = 0;
  LODWORD(STACK[0x3CC]) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((v11 == v10) * ((a4 - 394007057) ^ 0xFC1)) ^ (v8 + a4 + 460)))
                            - 8))();
}

uint64_t sub_193234094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,int *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  _QWORD *v48;
  uint64_t v49;

  v42 = (uint64_t *)v40[178];
  v40[125] = v42;
  v40[176] = 0;
  LODWORD(STACK[0x71C]) = 0;
  a25(a29);
  v43 = *a30;
  v44 = *v42;
  v45 = *((_DWORD *)v42 + 3);
  v40[127] = (char *)v42 + 12;
  v46 = v40[116];
  v47 = 597255653 * ((((v41 - 144) | 0xFAF6EFA8) - (v41 - 144) + ((v41 - 144) & 0x5091050)) ^ 0xF3FD9031);
  v48 = (_QWORD *)(v41 - 160);
  v48[7] = v40[117];
  v48[5] = v44;
  *(_DWORD *)(v41 - 112) = v47 + v39 + 413;
  *(_DWORD *)(v41 - 128) = (v43 ^ 0x7F1BE7BB) - v47 + ((2 * v43) & 0xFE37CF76) - 1510080515;
  *(_DWORD *)(v41 - 140) = (((163 * (v39 ^ 0xB0E) - 431) | 0x478) ^ 0x5E46B7FC) + v47 + v45 - ((2 * v45) & 0xBC8D6408);
  v48[3] = v46;
  a24(v41 - 144);
  LODWORD(v42) = *(_DWORD *)(v41 - 144);
  v49 = a26(a29);
  LODWORD(STACK[0x78C]) = (_DWORD)v42;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a39 + 8 * ((45 * ((_DWORD)v42 == 663729217)) ^ v39)) - 4))(v49);
}

uint64_t sub_1932341EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t), uint64_t (*a11)(_QWORD, uint64_t, uint64_t), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v45 = *(_QWORD *)(a8 + 8 * v41);
  v46 = 486723911 * ((v42 - 2 * (v42 & 0xC76274B4E8C2D773) - 0x389D8B4B173D288DLL) ^ 0xF5DCAF255808B7E9);
  *(_DWORD *)(v44 - 128) = v41 - 71465943 - v46;
  *(_QWORD *)(v43 + 16) = v39;
  *(_QWORD *)(v43 + 24) = v45 - v46 + (v41 ^ 0xF9A1DC99) - 4188135358;
  a10(v44 - 144);
  v47 = a11(*a28, a27, v40);
  v48 = ((2 * v47) & 0x6F77F876) + (v47 ^ 0xB7BBFC3B);
  v49 = *(_QWORD *)(a39 + 8 * (v41 ^ 5));
  v50 = 486723911 * ((((2 * v42) | 0x7DF766685A4473D4) - v42 - 0x3EFBB3342D2239EALL) ^ 0xC4568A59DE85970);
  *(_DWORD *)(v44 - 128) = v41 - 71465943 - v50;
  *(_QWORD *)(v43 + 16) = v39;
  *(_QWORD *)(v43 + 24) = v49 - v50 - 8;
  v51 = ((uint64_t (*)(uint64_t))a10)(v44 - 144);
  return (*(uint64_t (**)(uint64_t))(a39 + 8 * (v41 ^ 0x6D7 ^ (3152 * (v48 == ((v41 - 343) ^ 0xB7BBFDE3))))))(v51);
}

uint64_t sub_193234390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  _QWORD *v47;
  int v48;
  uint64_t v49;

  a25(a29);
  v41 = **(_QWORD **)(v39 + 1000);
  v42 = **(_DWORD **)(v39 + 1016);
  v43 = *a30 ^ 0x6FDBE7FA;
  v44 = (2 * *a30) & 0xDFB7CFF4;
  v45 = *(_QWORD *)(v39 + 936);
  v46 = 597255653 * ((v40 - 144) ^ 0x90B7F99);
  v47 = (_QWORD *)(v40 - 160);
  v47[3] = *(_QWORD *)(v39 + 928);
  *(_DWORD *)(v40 - 112) = v46 + 106835186 + a22;
  v47[7] = v45;
  v47[5] = v41;
  *(_DWORD *)(v40 - 128) = v43 - v46 + v44 - 1254228034;
  *(_DWORD *)(v40 - 140) = v46 + 1581691396 + v42 - ((a22 ^ 0x452CBBBE) & (2 * v42));
  a24(v40 - 144);
  v48 = *(_DWORD *)(v40 - 144);
  v49 = a26(a29);
  LODWORD(STACK[0x78C]) = v48;
  return (*(uint64_t (**)(uint64_t))(a39
                                            + 8
                                            * (int)(((LODWORD(STACK[0x78C]) == (((a22 ^ 0xF9A1DA4E) - 1072) | 0x10)
                                                                             + 395293286)
                                                   * ((((a22 ^ 0xF9A1DA4E) - 1072) ^ 0x3B2) + 4679)) ^ a22 ^ 0xF9A1DA4E)))(v49);
}

void sub_1932344F8(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  unint64_t v3;

  v2[180] = 0;
  v3 = ((9 * (a2 ^ 0x21C)) ^ 0xFFFFFFFFFFFFFC6ELL) + *(_QWORD *)(a1 + 8 * a2);
  LODWORD(STACK[0x458]) = STACK[0x554];
  v2[74] = v2[124];
  v2[75] = v2[123];
  v2[41] = v3;
  v2[77] = v2[121];
  JUMPOUT(0x193234570);
}

uint64_t sub_1932345F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = 10 * (((v39 + 6555758) | 0x17181118) ^ (v41 + 206));
  v43 = *(_QWORD **)(v40 + 1272);
  *v43 = 0;
  v43[1] = 0;
  *(_QWORD *)(v40 + 1288) = v43 + 1;
  v44 = a33(4096, 2241923698);
  **(_QWORD **)(v40 + 1272) = v44;
  return ((uint64_t (*)(void))(*(_QWORD *)(a39
                                        + 8
                                        * ((46 * ((((((v42 + 30) | 0x90) - 26) ^ (v44 == 0)) & 1) == 0)) ^ v42))
                            - 8))();
}

uint64_t sub_1932346A0@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;

  **(_DWORD **)(v2 + 1288) = v1;
  *(_QWORD *)(v2 + 640) = *(_QWORD *)(v2 + 1272);
  LOBYTE(STACK[0x80D]) = a1;
  LODWORD(STACK[0x45C]) = 101372955;
  LODWORD(STACK[0x65C]) = STACK[0x45C];
  LOBYTE(STACK[0x28B]) = STACK[0x80D];
  **(_QWORD **)(v2 + 1224) = *(_QWORD *)(v2 + 640);
  return (*(uint64_t (**)(void))(v2 + 1264))();
}

uint64_t sub_193234714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  int v39;
  uint64_t v40;

  *(_QWORD *)(v40 + 1568) = 0;
  LODWORD(STACK[0x7A8]) = STACK[0x65C];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((2592 * LOBYTE(STACK[0x28B])) ^ (v39 + a39 + 667)))
                            - ((a39 + 1774137938) & 0x7EC4BDF9 ^ 0xD6CLL)))();
}

uint64_t sub_19323476C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  _BOOL4 v45;

  v43 = STACK[0x71C];
  LODWORD(STACK[0x570]) = STACK[0x71C];
  v44 = *(_QWORD *)(v41 + 1440);
  *(_QWORD *)(v41 + 1024) = v44;
  v45 = v43 > *(_DWORD *)(v44 + 8);
  LODWORD(STACK[0x790]) = v42;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a8
                                                                                + 8
                                                                                * ((v45
                                                                                  * (v40
                                                                                   + ((3 * (v39 ^ 0xDC3) + 285481499) | 0x6780100)
                                                                                   + 217)) ^ v39))
                                                                    - 12))(a1, a2, a3, a39);
}

void sub_1932347D0(uint64_t a1@<X7>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8 * a2);
  LODWORD(STACK[0x494]) = STACK[0x658];
  v2[94] = v2[157];
  v2[97] = v2[156];
  v2[44] = v3;
  v2[99] = v2[154];
  LODWORD(STACK[0x4B8]) = STACK[0x570];
  JUMPOUT(0x19323480CLL);
}

uint64_t sub_193234904@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  uint64_t v35;

  *(_QWORD *)(v35 + 520) = 2 * *(_QWORD *)(v35 + 512);
  return (*(uint64_t (**)(void))(a1 + 8 * ((99 * (((a35 == 19) ^ (a2 - 34)) & 1)) ^ a2)))();
}

uint64_t sub_193234944@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 360) = v2;
  return (*(uint64_t (**)(void))(a1 + 8 * ((((9 * ((a2 + 683) ^ 0x949)) ^ 0xF19) * (v2 > v3)) ^ (a2 + 683))))();
}

uint64_t sub_193234978@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 360);
  *(_QWORD *)(v2 + 512) = v3;
  LODWORD(STACK[0x4BC]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((v3 & 0xFFFFFFFF80000000) != 0)
                                          * (((a2 ^ 0xEAD) + 394005614) ^ ((a2 ^ 0xF42) + 394008094))) ^ a2 ^ 0xF42))
                            - 12))();
}

uint64_t sub_1932349D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  LODWORD(STACK[0x4BC]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((LOBYTE(STACK[0x307]) * (v8 ^ 0xA1B)) ^ v8)) - 12))();
}

uint64_t sub_193234A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(_QWORD, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;

  v49 = a33(*(_QWORD *)(v41 + 520), 2241923698);
  LODWORD(STACK[0x4BC]) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 - (v39 + 394007679) + *(_QWORD *)(a39 + 8 * ((723 * (((v49 == 0) ^ (v39 + 106)) & 1)) ^ v39))))(v49, v43, v44, a4, v45, v46, v47, a39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_193234A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unint64_t a47)
{
  int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v49 = **(_QWORD **)(v48 + 1360);
  v50 = (**(unsigned int **)(v48 + 1400) ^ 0xEDFD9FFAF61E997BLL)
      + ((v47 - 1180) ^ 0x1BBE69FD6FFBFADELL)
      + ((2 * **(unsigned int **)(v48 + 1400)) & 0x1EC3D32F6);
  v51 = v50 ^ (((v47 - 1180) | 0x820u) + 0x7A960C364A23029ELL);
  v52 = (2 * (v50 & 0x799E567A6)) & 0x113C24908 ^ v50 & 0x799E567A6 ^ ((2 * (v50 & 0x799E567A6)) | 0x2000000000) & v51;
  v53 = ((2 * v51) ^ 0x112A0443A78CD232) & v51 ^ (2 * v51) & 0x8CD5FA31D3C66918;
  v54 = v53 ^ 0x84540A1050422909;
  v55 = (v53 ^ 0x8881F02183844011) & (4 * v52) ^ v52;
  v56 = ((4 * v54) ^ 0x3357E8C74F19A464) & v54 ^ (4 * v54) & 0x8CD5FA31D3C66918;
  v57 = (v56 ^ 0x55E80143002000) & (16 * v55) ^ v55;
  v58 = ((16 * (v56 ^ 0x8C80123090C64919)) ^ 0xCD5FA31D3C669190) & (v56 ^ 0x8C80123090C64919) ^ (16 * (v56 ^ 0x8C80123090C64919)) & 0x8CD5FA31D3C66910;
  *(_QWORD *)(v48 + 528) = v50 ^ (2
                                * (((((v58 ^ 0x805820C3806809) << 8) ^ 0xD5FA31D3C6691900) & (v58 ^ 0x805820C3806809) ^ ((v58 ^ 0x805820C3806809) << 8) & 0x8CD5FA31D3C66900) & 0x5200410000000000 ^ (v58 ^ 0x8C55A21110460100) & (v57 << 8) ^ v57 ^ ((((v58 ^ 0x805820C3806809) << 8) ^ 0xD5FA31D3C6691900) & (v58 ^ 0x805820C3806809) ^ ((v58 ^ 0x805820C3806809) << 8) & 0x8CD5FA31D3C66900 ^ 0x4D03011C2400000) & (((v58 ^ 0x8C55A21110460100) & (v57 << 8) ^ v57) << 16))) ^ 0x18232441A78CD232;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((19 * (v49 > a47)) ^ (v47 - 151))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_193234CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  int v34;
  int v35;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (((v35 + ((v33 - 1619259138) & 0x77FFFFFC) + 461) * (v34 != 0)) ^ v33)) - (((v33 - 2589) | 0x4E2u) ^ 0x6EALL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_193234D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,unsigned int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;

  *(_QWORD *)(v54 + 536) = a42;
  *(_QWORD *)(v54 + 368) = 0;
  *(_BYTE *)(a48 + (((v53 ^ 0x30u) + 394008134) ^ 0xFFFFF3FC79DBECF6) + 0xC0391580E16) = *(_BYTE *)(a53 + (((v53 ^ 0x30u) + 394008134) ^ 0xFFFFF3FC79DBECF6) + 0xC0391580E16);
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((16 * (a42 != 1)) | (32 * (a42 != 1))) ^ v53 ^ 0x30)) - 4))();
}

void sub_193234DC0()
{
  JUMPOUT(0x193234D70);
}

uint64_t sub_193234DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (a9 ^ (112 * (v41 != 0)))) + v42 - ((311 * (a9 ^ 0xC2A) + 321649343) | 0x4501500u)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_193234E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,unsigned int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;

  v55 = (v53 - 2077) | 0x808;
  *(_QWORD *)(v54 + 376) = a49;
  v56 = ((a49 - 1) ^ 0x767A3EBDF7FA0F3DLL)
      - 0x767A3EBDF7FA0F3DLL
      + (((unint64_t)(a49 - 1) << (((v55 + 119) & 0x5Cu) - 27)) & 0x1EFF41E7ALL);
  *(_BYTE *)(a47 + v56) = *(_BYTE *)(a53 + v56);
  return (*(uint64_t (**)(void))(a8 + 8 * ((21 * (a49 != 1)) ^ v55)))();
}

uint64_t sub_193234EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(_QWORD),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int v51;

  *(_QWORD *)(v48 + 368) = v47;
  v49 = *(_QWORD **)(v48 + 1360);
  v50 = a36(*v49);
  *v49 = a47;
  **(_DWORD **)(v48 + 1400) = *(_QWORD *)(v48 + 520);
  LODWORD(STACK[0x4BC]) = 101372955;
  v51 = STACK[0x4BC];
  LODWORD(STACK[0x790]) = STACK[0x4BC];
  LODWORD(STACK[0x46C]) = STACK[0x6CC];
  *(_QWORD *)(v48 + 656) = *(_QWORD *)(v48 + 1384);
  *(_QWORD *)(v48 + 672) = *(_QWORD *)(v48 + 1376);
  *(_QWORD *)(v48 + 680) = *(_QWORD *)(v48 + 1368);
  LODWORD(STACK[0x47C]) = v51;
  return (*(uint64_t (**)(uint64_t))(v48 + 1392))(v50);
}

uint64_t sub_193234F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;

  v12 = STACK[0x47C];
  v13 = v10[85];
  v10[166] = v13;
  v14 = v10[84];
  v10[167] = v14;
  v15 = v10[82];
  v10[168] = v15;
  v16 = STACK[0x46C];
  LODWORD(STACK[0x6AC]) = STACK[0x46C];
  LODWORD(STACK[0x480]) = v16;
  v10[88] = v15;
  v10[90] = v14;
  v10[92] = v13;
  LODWORD(STACK[0x484]) = v12;
  return (*(uint64_t (**)(void))(a8 + 8 * (((v12 == v11) * (((v9 + v8 + 157) | 0x900) ^ 0x10AE)) ^ (v9 + v8 + 2461))))();
}

uint64_t sub_193234FB8@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;
  _DWORD *v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  int v13;

  v3 = (uint64_t *)v1[168];
  v4 = *v3;
  v5 = (_DWORD *)v1[167];
  v6 = STACK[0x6AC];
  v7 = v6 - ((((a1 - 142674541) & 0x1FFD1DDF) + 508331812) & (2 * v6)) + 451170848;
  v8 = ((2 * *v5) & 0x57D7FBBC) + (*v5 ^ 0xABEBFDDE) + 1410597410;
  *(_BYTE *)(*v3 + v8) = HIBYTE(v7) ^ 0x1A;
  *(_BYTE *)(v4 + v8 + 1) = BYTE2(v7) ^ 0xE4;
  *(_BYTE *)(v4 + v8 + 2) = (((BYTE1(v7) ^ 0x52) - 2 * ((BYTE1(v7) ^ 0x52) & 7 ^ BYTE1(v7) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v4 + v8 + 3) = v7 ^ 0x20;
  *v5 += 4;
  LODWORD(STACK[0x480]) = v6;
  v1[88] = v3;
  v1[90] = v5;
  v1[92] = v1[166];
  LODWORD(STACK[0x484]) = v2;
  v9 = STACK[0x484];
  v10 = (uint64_t (*)(void))v1[92];
  v11 = v1[90];
  v12 = v1[88];
  v13 = STACK[0x480];
  LODWORD(STACK[0x72C]) = STACK[0x480];
  v1[182] = v12;
  v1[183] = v11;
  v1[184] = v10;
  LODWORD(STACK[0x748]) = v9;
  LODWORD(STACK[0x74C]) = v13;
  v1[186] = v12;
  v1[187] = v11;
  v1[188] = v10;
  LODWORD(STACK[0x768]) = v9;
  LODWORD(STACK[0x76C]) = v13;
  v1[190] = v12;
  v1[191] = v11;
  v1[192] = v10;
  LODWORD(STACK[0x788]) = v9;
  return v10();
}

uint64_t sub_1932350FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;

  v11 = STACK[0x790];
  LODWORD(STACK[0x574]) = STACK[0x790];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * ((225 * (v11 == v10 + v9 + v8 - 12 + ((v9 + v8 + 154) | 0x201) + 3616)) ^ (v9 + v8 + 1393)))
                            - 4))();
}

uint64_t sub_19323514C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  _QWORD *v2;
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;

  v3 = (unint64_t *)v2[180];
  v2[130] = v3;
  v4 = *v3;
  v2[131] = v4;
  v5 = v2[176];
  v2[132] = v5;
  v2[54] = LODWORD(STACK[0x71C])
         - ((((a2 + 776) | 0x82u) ^ 0x10A571340) & (2 * LODWORD(STACK[0x71C])))
         - 0x4D58EB37AD4779BLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (a2 ^ 0x1072 ^ (182 * (v5 > v4)))) - 8))();
}

uint64_t sub_193235214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;

  LODWORD(STACK[0x588]) = v9;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((((((v8 - 403850283) & 0x181244F8) + 394007885) ^ (v8 - v11 - 894)) * (v10 ^ 1)) ^ v8)))();
}

uint64_t sub_193235260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  _QWORD *v9;
  uint64_t v10;

  v10 = LODWORD(STACK[0x588]);
  v9[55] = v10;
  v9[34] = 0;
  *(_BYTE *)(v9[131] + a5 + v8 + 579 - 394009884) = *(_BYTE *)(v9[132] + a5 + v8 + 579 - 394009884);
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((4018 * (v10 == 1)) ^ v8)) - 12))();
}

void sub_1932352E8()
{
  JUMPOUT(0x1932352A4);
}

uint64_t sub_1932352F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  v10 = v9[180];
  v11 = (v8 + 394009205) - 394009883 + *(_QWORD *)(a8 + 8 * v8) - 5;
  v12 = v10 == 0;
  v9[107] = v11;
  v9[109] = v10;
  LODWORD(v10) = STACK[0x574];
  LODWORD(STACK[0x51C]) = STACK[0x574];
  v9[112] = v11;
  LODWORD(STACK[0x544]) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8
                                             * (int)(v8 ^ 0xB59 ^ (659 * ((v12 ^ (v8 + 90)) & 1))))
                            - 8))();
}

uint64_t sub_193235368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;

  LODWORD(STACK[0x28C]) = STACK[0x51C];
  v33[35] = v33[111];
  v34 = (uint64_t *)v33[109];
  v33[38] = v34;
  v33[43] = v33[107];
  v35 = *v34;
  v33[51] = v35;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((6558 * (v35 == 0)) ^ (a9 | 0x880))) - (((a9 | 0x880) + 355410558) & 0xEAD0DDFE ^ 0x9FALL)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1932367C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(void),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t (*v47)(uint64_t);

  v42 = (_QWORD *)v41[38];
  *v42 = 0;
  v42[1] = 0;
  v43 = a36();
  v41[112] = v41[43];
  LODWORD(STACK[0x534]) = a41;
  v41[114] = v41[35];
  LODWORD(STACK[0x544]) = STACK[0x28C];
  v44 = STACK[0x544];
  v45 = v41[114];
  v46 = STACK[0x534];
  v47 = (uint64_t (*)(uint64_t))v41[112];
  LODWORD(STACK[0x794]) = STACK[0x544];
  v41[195] = v45;
  v41[196] = 0;
  LODWORD(STACK[0x7A8]) = v44;
  LODWORD(STACK[0x43C]) = v44;
  v41[72] = v45;
  LODWORD(STACK[0x448]) = v46;
  LODWORD(STACK[0x44C]) = v46;
  return v47(v43);
}

void sub_193236840()
{
  JUMPOUT(0x193231530);
}

uint64_t sub_193236848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  uint64_t v41;
  int v42;

  return ((uint64_t (*)(void))(*(_QWORD *)(v41 + 8 * (((a41 != 19) * (((v42 - 1612637015) & 0x601EDFFF) - 2508)) ^ v42))
                            - 12))();
}

uint64_t sub_1932368F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  _BOOL4 v62;

  v57 = *(_QWORD *)(v56 + 96);
  v58 = *(_DWORD *)(v57 + 12);
  v57 += 12;
  *(_QWORD *)(v56 + 280) = v57;
  v59 = (v58 ^ 0xF1F6DFF7EBFAFF3ELL)
      + ((a9 - v55 - 2640) ^ 0xE0920087A75BD21)
      + ((2 * v58) & 0x1D7F5FE7CLL);
  v60 = (*(unsigned int *)(v57 - 4) ^ 0x8FD4F7DFFFDDFF5FLL)
      + 0x702B08205926A018
      + ((2 * *(unsigned int *)(v57 - 4)) & 0x1FFBBFEBELL);
  v61 = (v59 < 0x59049F77) ^ (v60 < 0x59049F77);
  v62 = v59 > v60;
  if (v61)
    v62 = v59 < 0x59049F77;
  LODWORD(STACK[0x448]) = v54;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8 * ((1857 * !v62) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1932369DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;

  v65 = **(_QWORD **)(v64 + 96);
  v66 = ((2 * a62) & 0xF98D6DF2) + 54085895 + (v62 ^ a62 ^ 0xEBBAABE5);
  v67 = *(unsigned __int8 *)(v65 + v66 + 2);
  v68 = (((v67 - ((2 * v67) & 0x4C) + 4420934) << 8) - 0x2000) ^ 0x43752600 | (((-16777216
                                                                               * *(unsigned __int8 *)(v65 + v66)) | (*(unsigned __int8 *)(v65 + v66 + 1) << 16))
                                                                             - 0x1000000);
  v69 = *(unsigned __int8 *)(v65 + v66 + 3);
  v70 = (v68 ^ 0x5A6FFF) & ((v69 - ((2 * v69) & 0xE6) - 1636428685) ^ 0x82C7F04) ^ v68 & 0x69A59400;
  v71 = (v70 & 0x324D5387 ^ 0x12494387) + (v70 ^ 0x28A41408) - ((v70 ^ 0x28A41408) & 0x324D5387);
  **(_DWORD **)v64 = (((v71 ^ 0x1FBDF440) - 789305555) ^ ((v71 ^ 0x7B8AD7DE) - 1262287693) ^ ((v71 ^ 0x81840F66)
                                                                                            + 1322114059))
                   - 619719546;
  **(_DWORD **)(v64 + 280) = a62 + 4;
  LODWORD(STACK[0x448]) = v63;
  v72 = STACK[0x448];
  LOBYTE(STACK[0x35F]) = 1;
  LODWORD(STACK[0xA14]) = HIDWORD(a48);
  *(_QWORD *)(v64 + 2200) = *(_QWORD *)(v64 + 96);
  LODWORD(STACK[0xA20]) = v72;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 192))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_193236B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;

  v12 = STACK[0xA20];
  v13 = v10[275];
  v10[100] = v13;
  v14 = STACK[0xA14];
  LODWORD(STACK[0x554]) = STACK[0xA14];
  LODWORD(STACK[0xA24]) = v14;
  v10[277] = v13;
  LODWORD(STACK[0xA34]) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (((v12 == v11 + ((v8 - 1611401437) & 0x488FFBEF) + 152)
                                          * ((v9 + v8 + 837) ^ 0x65F)) ^ (v9 + v8 + 837)))
                            - 12))();
}

uint64_t sub_193236BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  _BOOL4 v11;

  v10 = STACK[0x834];
  v11 = LODWORD(STACK[0x834]) == 101372955;
  LODWORD(STACK[0xA24]) = STACK[0x554];
  *(_QWORD *)(v9 + 2216) = *(_QWORD *)(v9 + 800);
  LODWORD(STACK[0xA34]) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((((((v8 - 837) | 0x1023) - 4083) ^ 0x658) * v11) ^ v8)) - 12))();
}

uint64_t sub_193236C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v54;
  int v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;

  v57 = 78 * (v54 ^ 0x1Eu);
  v58 = (v57 ^ 0xFFFFFFFFFFFFF5A4) + *(_QWORD *)(a8 + 8 * v54);
  LODWORD(STACK[0x43C]) = STACK[0x554];
  v59 = v56[100];
  v56[178] = v59;
  v56[41] = v58;
  v56[180] = &STACK[0x810];
  *v56 = &STACK[0x810];
  v56[12] = v59;
  HIDWORD(a48) = STACK[0x43C];
  v56[24] = v58;
  LODWORD(STACK[0x448]) = 101330305;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8 * (int)(((v59 != 0) * (v55 + ((v57 - 1082305664) & 0x57FEBF3F) + 237)) ^ v57)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_193236C80(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  uint64_t v65;

  LODWORD(STACK[0xA24]) = a49;
  *(_QWORD *)(v65 + 2216) = *(_QWORD *)(v65 + 96);
  LODWORD(STACK[0xA34]) = a64;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * ((25 * (((a4 + 53) ^ LOBYTE(STACK[0x35F])) & 1)) ^ (v64 + a4 + 828)))
                            - 12))();
}

uint64_t sub_193236CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  _QWORD *v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;

  *(_QWORD *)(a35 + 32) = (LODWORD(STACK[0x810]) | ((unint64_t)(LODWORD(STACK[0x810]) < ((v64 + 3294) ^ (v66 + 224))) << 32))
                        - 101372955;
  LODWORD(STACK[0xA24]) = a49;
  v65[277] = v65[12];
  LODWORD(STACK[0xA34]) = a64;
  v67 = STACK[0xA34];
  LODWORD(STACK[0x570]) = STACK[0xA34];
  v68 = v65[277];
  v65[101] = v68;
  v69 = STACK[0xA24];
  LODWORD(STACK[0x574]) = STACK[0xA24];
  LODWORD(STACK[0xA38]) = v67;
  LODWORD(STACK[0xA3C]) = v69;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((31 * (((v68 == 0) ^ (v64 - 72)) & 1)) ^ (v64 + 3294))) - (v64 - 797) + 48))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

void sub_193236DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;

  LODWORD(STACK[0x44C]) = STACK[0x570];
  LODWORD(STACK[0x458]) = STACK[0x574];
  LODWORD(STACK[0x45C]) = v8;
  v10 = v9[101];
  v9[182] = v10;
  v11 = STACK[0x458];
  v12 = STACK[0x44C];
  v9[183] = *(_QWORD *)(a8 + 8 * SLODWORD(STACK[0x45C])) - 12;
  v9[184] = v10;
  LODWORD(STACK[0x468]) = v11;
  LODWORD(STACK[0x46C]) = v12;
  JUMPOUT(0x193236E94);
}

uint64_t sub_193236F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(void),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t (*v46)(uint64_t);

  v42 = (_QWORD *)v41[38];
  *v42 = 0;
  v42[1] = 0;
  v43 = a36();
  v41[186] = v41[43];
  LODWORD(STACK[0x47C]) = a41;
  LODWORD(STACK[0x480]) = STACK[0x28C];
  v44 = STACK[0x480];
  v45 = STACK[0x47C];
  v46 = (uint64_t (*)(uint64_t))v41[186];
  v41[270] = 0;
  LODWORD(STACK[0x9F8]) = v45;
  LODWORD(STACK[0x9FC]) = v45;
  LODWORD(STACK[0xA38]) = v44;
  LODWORD(STACK[0xA3C]) = v45;
  LODWORD(STACK[0x70C]) = v44;
  return v46(v43);
}

void sub_193236F64()
{
  JUMPOUT(0x193231530);
}

uint64_t sub_193236F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(void),uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  int v41;
  uint64_t v42;

  v42 = a36();
  return (*(uint64_t (**)(uint64_t))(a39
                                            + 8
                                            * ((236 * (a41 == ((v41 - 1807608713) ^ 0x6BBDD661) + v41 - 786)) ^ v41)))(v42);
}

uint64_t sub_193236FB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  unsigned __int8 a64;
  _QWORD *v64;
  uint64_t v65;
  uint64_t (*v66)(void);

  v64[338] = v64[327];
  v64[339] = v64[326];
  v64[340] = v64[325];
  v64[341] = v64[324];
  v64[342] = v64[323];
  v64[343] = v64[322];
  LODWORD(STACK[0xC44]) = STACK[0x40C];
  v64[345] = v64[321];
  v64[346] = v64[320];
  v64[347] = v64[319];
  v65 = v64[39];
  v64[348] = v64[40];
  LODWORD(STACK[0xC6C]) = STACK[0x3F4];
  LODWORD(STACK[0xC70]) = STACK[0x3E4];
  LODWORD(STACK[0xC74]) = STACK[0x3CC];
  v64[351] = v64[318];
  v64[352] = v64[317];
  v64[353] = v65;
  LODWORD(STACK[0xC94]) = STACK[0x3AC];
  v64[355] = v64[316];
  LODWORD(STACK[0xCA0]) = STACK[0x7C4];
  v66 = (uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((a64 * (((a4 - 394009592) | 0x80) ^ 0xBC0)) ^ (a4 - 394009464)))
                          - 12);
  LODWORD(STACK[0xCA4]) = STACK[0x41C];
  return v66();
}

uint64_t sub_1932370A8@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v3 = *(_QWORD *)(a1 + 8 * a2);
  v4 = ((_DWORD)a2 - 420) | 0x89Cu;
  v2[606] = v2[327];
  v2[607] = v2[326];
  v2[608] = v2[325];
  v2[609] = v3 + v4 - 2216;
  v2[610] = v2[322];
  LODWORD(STACK[0x149C]) = STACK[0x40C];
  v2[612] = v2[320];
  v2[613] = v2[319];
  v5 = v2[39];
  v2[614] = v2[40];
  LODWORD(STACK[0x14B8]) = STACK[0x3E4];
  LODWORD(STACK[0x14BC]) = STACK[0x3CC];
  v2[616] = v2[318];
  v2[617] = v2[317];
  v2[618] = v5;
  LODWORD(STACK[0x14DC]) = STACK[0x3AC];
  v2[620] = v2[316];
  LODWORD(STACK[0x14E8]) = STACK[0x7C4];
  LODWORD(STACK[0x14EC]) = 1;
  LODWORD(STACK[0x434]) = STACK[0x14EC];
  LODWORD(STACK[0x438]) = STACK[0x14E8];
  v2[331] = v2[620];
  LODWORD(STACK[0x43C]) = STACK[0x14DC];
  v6 = v2[618];
  v2[176] = v2[617];
  v2[178] = v2[616];
  LODWORD(STACK[0x448]) = STACK[0x14BC];
  LODWORD(STACK[0x44C]) = STACK[0x14B8];
  v7 = v2[614];
  v2[41] = v6;
  v2[42] = v7;
  v2[180] = v2[613];
  v2[182] = v2[612];
  LODWORD(STACK[0x458]) = STACK[0x149C];
  v8 = v2[610];
  v2[183] = v8;
  v9 = v2[609];
  v10 = v2[608];
  v2[184] = v10;
  v11 = v2[607];
  v2[186] = v11;
  v12 = v2[606];
  v2[187] = v12;
  v13 = v2[337];
  v2[188] = v13;
  v2[190] = v9;
  v2[648] = v13;
  v14 = *(_DWORD *)(v13 + 12);
  v13 += 12;
  v2[191] = v13;
  LODWORD(STACK[0x45C]) = v14;
  v2[641] = v12;
  v2[642] = v11;
  v2[643] = v10;
  v2[644] = v13;
  v2[645] = v9;
  v2[646] = v8;
  LODWORD(STACK[0x15BC]) = STACK[0x458];
  v2[649] = v2[182];
  v2[650] = v2[180];
  v15 = v2[41];
  v2[651] = v2[42];
  LODWORD(STACK[0x15E4]) = STACK[0x434];
  LODWORD(STACK[0x15E8]) = STACK[0x44C];
  LODWORD(STACK[0x15EC]) = STACK[0x448];
  v2[654] = v2[178];
  v2[655] = v2[176];
  v2[656] = v15;
  LODWORD(STACK[0x160C]) = STACK[0x43C];
  v2[658] = v2[331];
  LODWORD(STACK[0x1618]) = STACK[0x438];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((1378 * (v14 < 0xFFFFFFFB)) ^ v4))
                          - ((v4 ^ 0x177C1580)
                           + (unint64_t)(((_DWORD)v4 - 2043) | 0x44u))
                          + 394010109);
  LODWORD(STACK[0x161C]) = 101330305;
  return v16();
}

uint64_t sub_193238034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL4 v15;
  _BOOL4 v16;
  uint64_t v17;

  v11 = v9[188];
  v12 = *(unsigned int *)(v11 + 8);
  v13 = ((v8 - 1753391977) & 0x7FFEBF9F ^ 0x400104C45B9C8CELL)
      + (LODWORD(STACK[0x45C]) ^ 0xFBFFEFB3D7FB5CD5)
      + ((2 * LODWORD(STACK[0x45C])) & 0x1AFF6B9AALL);
  v9[622] = v9[187];
  v14 = (v12 ^ 0xEBEBFEBCFA9BFFFFLL) + 0x14140143302532A4 + ((2 * v12) & 0x1F537FFFELL);
  v9[623] = v9[186];
  v9[624] = v9[184];
  v15 = v13 < 0x2AC132A3;
  v9[625] = v9[191];
  v9[626] = v9[190];
  v16 = v13 > v14;
  v9[627] = v9[183];
  if (v15 != v14 < 0x2AC132A3)
    v16 = v15;
  LODWORD(STACK[0x1524]) = STACK[0x458];
  v9[629] = v11;
  v9[630] = v9[182];
  v9[631] = v9[180];
  v17 = v9[41];
  v9[632] = v9[42];
  LODWORD(STACK[0x154C]) = STACK[0x434];
  LODWORD(STACK[0x1550]) = STACK[0x44C];
  LODWORD(STACK[0x1554]) = STACK[0x448];
  v9[635] = v9[178];
  v9[636] = v9[176];
  v9[637] = v17;
  LODWORD(STACK[0x1574]) = STACK[0x43C];
  v9[639] = v9[331];
  LODWORD(STACK[0x1580]) = STACK[0x438];
  LODWORD(STACK[0x1584]) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((4597 * v16) ^ v8)) - 4))();
}

uint64_t sub_1932381AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  unint64_t v17;

  v10 = *(_QWORD *)(a8 + 8 * v8);
  v11 = v8 ^ 0xA1A;
  v9[660] = v9[187];
  v9[661] = v9[186];
  v9[662] = v9[184];
  v9[663] = v9[191];
  v9[664] = v9[190];
  v9[665] = v10 + v11 - 2819;
  LODWORD(STACK[0x1654]) = STACK[0x458];
  v9[667] = v9[188];
  v9[668] = v9[182];
  v9[669] = v9[180];
  v9[670] = v9[42];
  LODWORD(STACK[0x167C]) = STACK[0x434];
  LODWORD(STACK[0x1680]) = STACK[0x44C];
  LODWORD(STACK[0x1684]) = STACK[0x448];
  v9[673] = v9[331];
  LODWORD(STACK[0x1690]) = STACK[0x438];
  LODWORD(STACK[0x1694]) = 4;
  v9[675] = v9[188];
  LODWORD(v11) = 263 * (v11 ^ 0xAEF);
  v9[208] = v9[675];
  v12 = LODWORD(STACK[0x1694]);
  LODWORD(STACK[0x4B8]) = STACK[0x1690];
  v9[68] = v9[673];
  LODWORD(STACK[0x4BC]) = STACK[0x1684];
  LODWORD(STACK[0x4CC]) = STACK[0x1680];
  LODWORD(STACK[0x4E4]) = STACK[0x167C];
  v13 = v9[670];
  v9[70] = v9[669];
  v9[71] = v9[668];
  v9[72] = v9[667];
  LODWORD(STACK[0x4F4]) = STACK[0x1654];
  v14 = v9[665];
  v9[74] = v9[664];
  v9[75] = v9[663];
  v9[77] = v9[662];
  v9[79] = v9[661];
  v9[80] = v9[660];
  v9[82] = v14;
  v15 = (unsigned int *)(v9[208] + 8);
  v9[84] = v15;
  v16 = *v15;
  v17 = (v12 ^ 0x1E172AE7E7ADEF7FLL)
      + v16
      - 0x1E172AE7E7ADEF7FLL
      + ((v12 << (v11 ^ 0x71u)) & 0x1CF5BDEFELL);
  v9[46] = v13;
  v9[47] = v17;
  LOBYTE(STACK[0x28B]) = v17 < 0xFFFFFFFF;
  v9[676] = v16;
  return (*(uint64_t (**)(void))(a8 + 8 * (int)((254 * (v16 <= ((v11 - 2848) ^ 0x7FFFFAAFuLL))) ^ v11)))();
}

uint64_t sub_19323824C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v11 = STACK[0xFA0];
  LODWORD(STACK[0x960]) = STACK[0xF9C];
  v9[235] = v9[450];
  LODWORD(STACK[0x964]) = STACK[0xF8C];
  v12 = v9[448];
  v9[236] = v9[447];
  v9[237] = v9[446];
  LODWORD(STACK[0x99C]) = STACK[0xF6C];
  LODWORD(STACK[0x9A8]) = STACK[0xF68];
  LODWORD(STACK[0x9AC]) = STACK[0xF64];
  v13 = v9[443];
  v9[22] = v12;
  v9[23] = v13;
  v9[238] = v9[442];
  v9[239] = v9[441];
  v9[240] = v9[440];
  LODWORD(STACK[0x9E4]) = STACK[0xF3C];
  v9[242] = v9[438];
  v9[244] = v9[437];
  v9[245] = v9[436];
  v9[246] = v9[435];
  v9[247] = v9[434];
  v9[248] = v9[433];
  LODWORD(STACK[0x1174]) = STACK[0x960];
  v9[511] = v9[235];
  LODWORD(STACK[0x1184]) = STACK[0x964];
  v14 = v9[23];
  v9[513] = v9[22];
  v9[514] = v9[236];
  v9[515] = v9[237];
  LODWORD(STACK[0x11A4]) = STACK[0x99C];
  LODWORD(STACK[0x11A8]) = STACK[0x9A8];
  LODWORD(STACK[0x11AC]) = STACK[0x9AC];
  v9[518] = v14;
  v9[519] = v9[238];
  v9[520] = v9[239];
  v9[521] = v9[240];
  LODWORD(STACK[0x11D4]) = STACK[0x9E4];
  v9[523] = v9[242];
  v9[524] = v9[244];
  v9[525] = v9[245];
  v9[526] = v9[246];
  v9[527] = v9[247];
  v9[528] = v9[248];
  v15 = (uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((2489 * (v11 == v10)) ^ (v8 + a4 - 10)))
                          - ((a4 - 289603046) & 0xF9C6ECFB ^ 0xC3ALL));
  LODWORD(STACK[0x120C]) = v11;
  return v15();
}

uint64_t sub_1932383D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,int *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  _QWORD *v49;
  uint64_t v50;

  v42 = (uint64_t *)v40[337];
  v40[249] = v42;
  v40[333] = 0;
  LODWORD(STACK[0xC04]) = 0;
  a25(a29);
  v43 = *a30;
  v44 = *v42;
  v45 = *((_DWORD *)v42 + 3);
  v40[251] = (char *)v42 + 12;
  v46 = v40[854];
  v47 = v40[855];
  v48 = 597255653
      * ((((v41 - 144) ^ 0x4D1B858F | 0x5080CFE8)
        - ((v41 - 144) ^ 0x4D1B858F)
        + (((v41 - 144) ^ 0x4D1B858F) & 0xAF7F3017)) ^ 0x149035FE);
  *(_DWORD *)(v41 - 128) = ((v39 - 1401644163) & 0x538B5B7F)
                         - 813
                         - v48
                         + (v43 ^ 0xBDBFFFFC)
                         + ((2 * v43) & 0x7B7FFFF8)
                         + 1733945274;
  *(_DWORD *)(v41 - 140) = v48 + v45 + 1581691396 - ((2 * v45) & 0xBC8D6408);
  *(_DWORD *)(v41 - 112) = v48 + v39 + 118;
  v49 = (_QWORD *)(v41 - 160);
  v49[5] = v44;
  v49[3] = v46;
  v49[7] = v47;
  a24(v41 - 144);
  LODWORD(v42) = *(_DWORD *)(v41 - 144);
  v50 = a26(a29);
  LODWORD(STACK[0xFA4]) = (_DWORD)v42;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a39 + 8 * ((84 * ((_DWORD)v42 == 663729217)) ^ v39)) - 4))(v50);
}

uint64_t sub_193238538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t), uint64_t (*a11)(_QWORD, uint64_t, uint64_t), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);

  v45 = *(_QWORD *)(a8 + 8 * v42)
      - 486723911
      * ((2 * ((v44 - 144) & 0x16E2F0A52C20F7B0) - (v44 - 144) + 0x691D0F5AD3DF0848) ^ 0x5BA3D4CB631568D2)
      - 8;
  *(_QWORD *)(v39 + 16) = v43;
  *(_QWORD *)(v39 + 24) = v45;
  *(_DWORD *)(v44 - 128) = v42
                         - 71465943
                         - 486723911 * ((2 * ((v44 - 144) & 0x2C20F7B0) - (v44 - 144) - 740358072) ^ 0x631568D2);
  a10(v44 - 144);
  v46 = a11(*a28, a27, v40);
  v47 = (((((v42 - 1065336599) | 0x20080286) ^ 0x776B8D04) + v42 + 394009069) & (2 * v46)) + (v46 ^ 0x57AFF45B);
  v48 = *(_QWORD *)(a39 + 8 * (v42 ^ 5));
  v49 = 486723911 * ((((v44 - 144) | 0xC84DDA8A77BCEAELL) - ((v44 - 144) & 0xC84DDA8A77BCEAELL)) ^ 0x3E3A063917B1AE34);
  *(_DWORD *)(v44 - 128) = v42 - 71465943 - v49;
  *(_QWORD *)(v39 + 16) = v43;
  *(_QWORD *)(v39 + 24) = v48 - v49 - 8;
  v50 = ((uint64_t (*)(uint64_t))a10)(v44 - 144);
  LODWORD(STACK[0x1174]) = STACK[0x960];
  v41[511] = v41[235];
  LODWORD(STACK[0x1184]) = STACK[0x964];
  v51 = v41[23];
  v41[513] = v41[22];
  v41[514] = v41[236];
  v41[515] = v41[237];
  LODWORD(STACK[0x11A4]) = STACK[0x99C];
  LODWORD(STACK[0x11A8]) = STACK[0x9A8];
  LODWORD(STACK[0x11AC]) = STACK[0x9AC];
  v41[518] = v51;
  v41[519] = v41[238];
  v41[520] = v41[239];
  v41[521] = v41[240];
  LODWORD(STACK[0x11D4]) = STACK[0x9E4];
  v41[523] = v41[242];
  v41[524] = v41[244];
  v41[525] = v41[245];
  v41[526] = v41[246];
  v41[527] = v41[247];
  v41[528] = v41[248];
  v52 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a39
                                                    + 8
                                                    * ((2910 * (v47 == 1471149147)) ^ v42 & 0x3043FC52))
                                        - 8);
  LODWORD(STACK[0x120C]) = 101330291;
  return v52(v50);
}

uint64_t sub_193238794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,int a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _QWORD *v48;
  int v49;
  uint64_t v50;
  int v51;
  BOOL v52;
  uint64_t v53;
  int v54;
  uint64_t (*v55)(uint64_t);

  v41 = (a31 + 524784732) & 0x302507;
  a25(a29);
  v42 = **(_DWORD **)(v39 + 2008);
  v43 = *a30 ^ 0x3F7BEFFB;
  v44 = (v41 ^ 0x7EF7DFF4) & (2 * *a30);
  v45 = *(_QWORD *)(v39 + 6832);
  v46 = *(_QWORD *)(v39 + 6840);
  v47 = 597255653 * ((2 * ((v40 - 144) & 0x12ECAA58) - (v40 - 144) - 317499999) ^ 0xE4182A38);
  v48 = (_QWORD *)(v40 - 160);
  v48[5] = **(_QWORD **)(v39 + 1992);
  v48[3] = v45;
  v48[7] = v46;
  *(_DWORD *)(v40 - 140) = v47 + v42 + 1581691396 - ((2 * v42) & 0xBC8D6408);
  *(_DWORD *)(v40 - 128) = v43 - v47 - 442632259 + v44;
  *(_DWORD *)(v40 - 112) = v47 + a31 + 527943178;
  a24(v40 - 144);
  v49 = *(_DWORD *)(v40 - 144);
  v50 = a26(a29);
  LODWORD(STACK[0xFA4]) = v49;
  v51 = STACK[0xFA4];
  LODWORD(STACK[0x1174]) = STACK[0x960];
  v52 = v51 == ((9 * (v41 ^ 1)) ^ 0x178FB425);
  *(_QWORD *)(v39 + 4088) = *(_QWORD *)(v39 + 1880);
  LODWORD(STACK[0x1184]) = STACK[0x964];
  v53 = *(_QWORD *)(v39 + 184);
  *(_QWORD *)(v39 + 4104) = *(_QWORD *)(v39 + 176);
  *(_QWORD *)(v39 + 4112) = *(_QWORD *)(v39 + 1888);
  *(_QWORD *)(v39 + 4120) = *(_QWORD *)(v39 + 1896);
  LODWORD(STACK[0x11A4]) = STACK[0x99C];
  LODWORD(STACK[0x11A8]) = STACK[0x9A8];
  LODWORD(STACK[0x11AC]) = STACK[0x9AC];
  v54 = v52;
  *(_QWORD *)(v39 + 4144) = v53;
  *(_QWORD *)(v39 + 4152) = *(_QWORD *)(v39 + 1904);
  *(_QWORD *)(v39 + 4160) = *(_QWORD *)(v39 + 1912);
  *(_QWORD *)(v39 + 4168) = *(_QWORD *)(v39 + 1920);
  LODWORD(STACK[0x11D4]) = STACK[0x9E4];
  *(_QWORD *)(v39 + 4184) = *(_QWORD *)(v39 + 1936);
  *(_QWORD *)(v39 + 4192) = *(_QWORD *)(v39 + 1952);
  *(_QWORD *)(v39 + 4200) = *(_QWORD *)(v39 + 1960);
  *(_QWORD *)(v39 + 4208) = *(_QWORD *)(v39 + 1968);
  *(_QWORD *)(v39 + 4216) = *(_QWORD *)(v39 + 1976);
  *(_QWORD *)(v39 + 4224) = *(_QWORD *)(v39 + 1984);
  v55 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a39 + 8 * ((v54 * (((v41 ^ 1) + 394009881) ^ 0x177C1722)) ^ v41))
                                        - 8);
  LODWORD(STACK[0x120C]) = 101330291;
  return v55(v50);
}

void sub_193238A08(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;

  v1[335] = 0;
  v1[584] = v1[248];
  v1[585] = v1[247];
  v1[586] = v1[246];
  v1[587] = v1[245];
  v1[588] = v1[244];
  v1[589] = v1[242];
  LODWORD(STACK[0x13F0]) = a1;
  LODWORD(STACK[0x13F4]) = STACK[0x9E4];
  v1[591] = v1[240];
  v1[592] = v1[239];
  v1[593] = v1[238];
  v2 = v1[22];
  v1[594] = v1[23];
  LODWORD(STACK[0x141C]) = STACK[0x9AC];
  LODWORD(STACK[0x1420]) = STACK[0x9A8];
  LODWORD(STACK[0x1424]) = STACK[0x99C];
  v1[597] = v1[237];
  v1[598] = v1[236];
  v1[599] = v2;
  LODWORD(STACK[0x1444]) = STACK[0x964];
  v1[601] = v1[235];
  LODWORD(STACK[0x1454]) = STACK[0x960];
  JUMPOUT(0x193238AB8);
}

uint64_t sub_193238BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v41 = *(_QWORD **)(v40 + 2632);
  *v41 = 0;
  v41[1] = 0;
  *(_QWORD *)(v40 + 2640) = v41 + 1;
  v42 = a33(4096, 2241923698);
  **(_QWORD **)(v40 + 2632) = v42;
  return ((uint64_t (*)(void))(*(_QWORD *)(a39
                                        + 8
                                        * (((v42 != 0)
                                          * ((v39 & 0x76F48B61) + 752 + (v39 & 0x76F48B61) + 201501168 - 201503581)) ^ v39 & 0x76F48B61))
                            - 4))();
}

uint64_t sub_193238C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  int v39;
  int v40;
  uint64_t v41;

  **(_DWORD **)(v41 + 2640) = v39;
  *(_QWORD *)(v41 + 4832) = *(_QWORD *)(v41 + 2632);
  LOBYTE(STACK[0x80E]) = 1;
  LODWORD(STACK[0x146C]) = v40;
  LODWORD(STACK[0x41C]) = STACK[0x146C];
  **(_QWORD **)(v41 + 2520) = *(_QWORD *)(v41 + 4832);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v41 + 2624))(a1, a2, a3, a39);
}

uint64_t sub_193238CE8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  unsigned __int8 a64;
  _QWORD *v64;
  int v65;
  uint64_t v66;
  uint64_t (*v67)(void);

  v65 = STACK[0xC04];
  LODWORD(STACK[0x9E8]) = STACK[0xC04];
  LODWORD(STACK[0x10D4]) = v65;
  v64[491] = v64[327];
  v64[492] = v64[326];
  v64[493] = v64[325];
  v64[494] = v64[324];
  v64[495] = v64[323];
  v64[496] = v64[322];
  LODWORD(STACK[0x110C]) = STACK[0x40C];
  v64[498] = v64[321];
  v64[499] = v64[320];
  v64[500] = v64[319];
  v66 = v64[39];
  v64[501] = v64[40];
  LODWORD(STACK[0x1134]) = STACK[0x3F4];
  LODWORD(STACK[0x1138]) = STACK[0x3E4];
  LODWORD(STACK[0x113C]) = STACK[0x3CC];
  v64[504] = v64[318];
  v64[505] = v64[317];
  v64[506] = v66;
  LODWORD(STACK[0x115C]) = STACK[0x3AC];
  v64[508] = v64[316];
  LODWORD(STACK[0x116C]) = STACK[0x7C4];
  v67 = (uint64_t (*)(void))(*(_QWORD *)(a8
                                      + 8
                                      * (int)((a64 * ((((a4 + 476259011) & 0xCC20CB7A) - 1674) ^ ((a4 - 394009884) | 2))) ^ (a4 - 394007635)))
                          - 8);
  LODWORD(STACK[0x1170]) = STACK[0x41C];
  return v67();
}

uint64_t sub_193238DF8@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  int v8;
  uint64_t (*v9)(void);

  v5 = v3[335];
  v3[253] = v5;
  v6 = LODWORD(STACK[0x9E8]) > *(_DWORD *)(v5 + 8);
  v3[453] = v3[327];
  v3[454] = v3[326];
  v3[455] = v3[325];
  v3[456] = v3[324];
  v3[457] = v3[323];
  v3[458] = v3[322];
  LODWORD(STACK[0xFDC]) = STACK[0x40C];
  v3[460] = v3[321];
  v3[461] = v3[320];
  v3[462] = v3[319];
  v7 = v3[39];
  v3[463] = v3[40];
  LODWORD(STACK[0x1000]) = STACK[0x3F4];
  LODWORD(STACK[0x1004]) = STACK[0x3CC];
  v3[465] = v3[318];
  v3[466] = v3[317];
  v8 = !v6;
  v3[467] = v7;
  LODWORD(STACK[0x1024]) = STACK[0x3AC];
  v3[469] = v3[316];
  LODWORD(STACK[0x1030]) = STACK[0x7C4];
  v9 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((51 * v8) ^ a2))
                         - (((a2 + v2) & 0xBF7F9D7F)
                          + ((a2 + v2) ^ (v2 + 2833) ^ 0xFFFFFFFFE883E227)));
  LODWORD(STACK[0x1034]) = v4;
  return v9();
}

void sub_193238EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;

  v10 = *(_QWORD *)(a8 + 8 * v8);
  v9[660] = v9[327];
  v9[661] = v9[326];
  v9[662] = v9[325];
  v9[663] = v9[324];
  v9[664] = v9[323];
  v9[665] = v10;
  LODWORD(STACK[0x1654]) = STACK[0x40C];
  v9[667] = v9[321];
  v9[668] = v9[320];
  v9[669] = v9[319];
  v9[670] = v9[40];
  LODWORD(STACK[0x167C]) = STACK[0x3F4];
  LODWORD(STACK[0x1680]) = STACK[0x3E4];
  LODWORD(STACK[0x1684]) = STACK[0x3CC];
  v9[673] = v9[316];
  LODWORD(STACK[0x1690]) = STACK[0x7C4];
  LODWORD(STACK[0x1694]) = STACK[0x9E8];
  JUMPOUT(0x193238F80);
}

uint64_t sub_1932390CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  unint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (int)(((((v10 - 1209259657) & 0x4813DBF9 ^ 0xFFFFEC39) + v10 - 1455)
                                               * (v9 > v8)) ^ v10))
                            - 4))();
}

uint64_t sub_193239110@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(a1
                              + 8 * ((254 * (v2 <= ((v3 - 2848) ^ (unint64_t)(a2 + 1409)))) ^ v3)))();
}

uint64_t sub_193239148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v42[676] = v41;
  v42[49] = v40;
  v42[696] = v42[80];
  v42[697] = v42[79];
  v42[698] = v42[77];
  v42[699] = v42[75];
  v42[700] = v42[74];
  v42[701] = v42[82];
  LODWORD(STACK[0x1774]) = STACK[0x4F4];
  v42[703] = v42[72];
  v42[704] = v42[71];
  v42[705] = v42[70];
  v42[706] = v42[46];
  LODWORD(STACK[0x179C]) = STACK[0x4E4];
  LODWORD(STACK[0x17A0]) = STACK[0x4CC];
  LODWORD(STACK[0x17A4]) = STACK[0x4BC];
  v42[709] = v42[208];
  v42[710] = v42[84];
  v42[711] = v42[49];
  LODWORD(STACK[0x17C4]) = 101330305;
  v42[713] = v42[68];
  LODWORD(STACK[0x17D0]) = STACK[0x4B8];
  LODWORD(STACK[0x17D4]) = 101330305;
  v43 = STACK[0x17D4];
  v44 = LODWORD(STACK[0x17D0]);
  v45 = v42[713];
  v46 = STACK[0x17C4];
  v47 = v42[711];
  v48 = v42[710];
  v49 = v42[709];
  v50 = STACK[0x17A4];
  v51 = STACK[0x17A0];
  v52 = STACK[0x179C];
  v53 = v42[706];
  v54 = v42[705];
  v55 = v42[704];
  v56 = v42[703];
  v57 = LODWORD(STACK[0x1774]);
  v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v42[701];
  v59 = v42[700];
  v60 = v42[699];
  v61 = v42[698];
  v62 = v42[697];
  v63 = v42[696];
  v42[453] = v63;
  v42[454] = v62;
  v42[455] = v61;
  v42[456] = v60;
  v42[457] = v59;
  v42[458] = v58;
  LODWORD(STACK[0xFDC]) = v57;
  v42[460] = v56;
  v42[461] = v55;
  v42[462] = v54;
  v42[463] = v53;
  LODWORD(STACK[0x1000]) = v52;
  LODWORD(STACK[0x1004]) = v50;
  v42[465] = v49;
  v42[466] = v48;
  v42[467] = v47;
  LODWORD(STACK[0x1024]) = v46;
  v42[469] = v45;
  LODWORD(STACK[0x1030]) = v44;
  LODWORD(STACK[0x1034]) = v43;
  v42[622] = v63;
  v42[623] = v62;
  v42[624] = v61;
  v42[625] = v60;
  v42[626] = v59;
  v42[627] = v58;
  LODWORD(STACK[0x1524]) = v57;
  v42[629] = v56;
  v42[630] = v55;
  v42[631] = v54;
  v42[632] = v53;
  LODWORD(STACK[0x154C]) = v52;
  LODWORD(STACK[0x1550]) = v51;
  LODWORD(STACK[0x1554]) = v50;
  v42[635] = v49;
  v42[636] = v48;
  v42[637] = v47;
  LODWORD(STACK[0x1574]) = v46;
  v42[639] = v45;
  LODWORD(STACK[0x1580]) = v44;
  LODWORD(STACK[0x1584]) = v43;
  v42[729] = v63;
  v42[730] = v62;
  v42[731] = v61;
  v42[732] = v60;
  v42[733] = v59;
  v42[734] = v58;
  LODWORD(STACK[0x187C]) = v57;
  v42[736] = v56;
  v42[737] = v55;
  v42[738] = v54;
  LODWORD(STACK[0x189C]) = v52;
  LODWORD(STACK[0x18A0]) = v51;
  LODWORD(STACK[0x18A4]) = v50;
  v42[741] = v49;
  v42[742] = v48;
  LODWORD(STACK[0x18BC]) = v46;
  v42[744] = v45;
  LODWORD(STACK[0x18CC]) = v43;
  return v58(v53, v54, v44, a39, v56, v57, v59, a40, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_19323B9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  int v46;
  _QWORD *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t (*v59)(_BOOL8, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v50 = STACK[0x18CC];
  v47[109] = v47[744];
  LODWORD(STACK[0x570]) = STACK[0x18BC];
  v47[111] = v47[742];
  v47[112] = v47[741];
  LODWORD(STACK[0x574]) = STACK[0x18A4];
  LODWORD(STACK[0x588]) = STACK[0x18A0];
  LODWORD(STACK[0x58C]) = STACK[0x189C];
  v47[54] = a45;
  v47[55] = a44;
  v47[114] = v47[738];
  v47[116] = v47[737];
  v47[117] = v47[736];
  v51 = STACK[0x187C];
  LODWORD(STACK[0x5BC]) = STACK[0x187C];
  v52 = v47[734];
  v47[119] = v52;
  v53 = v47[733];
  v47[121] = v53;
  v54 = v47[732];
  v47[123] = v54;
  v55 = v47[731];
  v47[124] = v55;
  v56 = v47[730];
  v47[125] = v56;
  v57 = v47[729];
  v47[127] = v57;
  v58 = v50 == v49;
  v47[746] = v57;
  v47[747] = v56;
  v47[748] = v55;
  v47[749] = v54;
  v47[750] = v53;
  v47[751] = v52;
  LODWORD(STACK[0x1904]) = v51;
  v47[753] = v47[117];
  v47[754] = v47[116];
  v47[755] = v47[114];
  LODWORD(STACK[0x1924]) = STACK[0x58C];
  LODWORD(STACK[0x1928]) = STACK[0x588];
  LODWORD(STACK[0x192C]) = STACK[0x574];
  v47[758] = v47[112];
  v47[759] = v47[111];
  LODWORD(STACK[0x1944]) = STACK[0x570];
  v47[761] = v47[109];
  LODWORD(STACK[0x1954]) = v50;
  v59 = (uint64_t (*)(_BOOL8, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((3520 * v58) ^ (v46 + v45 + 1444))) - (v45 ^ (v48 + 70) ^ 0x5DLL));
  LODWORD(STACK[0x1958]) = v50;
  return v59(v58, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

void sub_19323BB44(uint64_t a1@<X7>, int a2@<W8>)
{
  _QWORD *v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  _DWORD *v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v4 = (uint64_t *)v2[116];
  v5 = *v4;
  v6 = (_DWORD *)v2[127];
  v7 = STACK[0x5BC];
  v8 = LODWORD(STACK[0x5BC]) - ((2 * LODWORD(STACK[0x5BC])) & 0x35C8A440) + 451170848;
  v9 = ((2 * *v6) & 0x5F37FFFA) + (*v6 ^ 0x2F9BFFFD) - 798752765;
  *(_BYTE *)(*v4 + v9) = (v8 >> (a2 ^ 0x4D)) ^ 0x1A;
  *(_BYTE *)(v5 + v9 + 1) = BYTE2(v8) ^ 0xE4;
  *(_BYTE *)(v5 + v9 + 2) = (((BYTE1(v8) ^ 0x52) - 2 * ((BYTE1(v8) ^ 0x52) & 7 ^ BYTE1(v8) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v5 + v9 + 3) = v8 ^ 0x20;
  v10 = (*v6 + 4);
  *v6 = v10;
  v12 = v2[54];
  v11 = v2[55];
  v13 = (v11 ^ 0x387E6EB1D714AB8) & (2 * (v11 & 0x9017F6EB9D7588BDLL)) ^ v11 & 0x9017F6EB9D7588BDLL;
  v14 = ((2 * (v11 ^ 0x2383EBBC35384B90)) ^ 0x67283AAF509B865ALL) & (v11 ^ 0x2383EBBC35384B90) ^ (2 * (v11 ^ 0x2383EBBC35384B90)) & 0xB3941D57A84DC32CLL;
  v15 = *v4;
  v16 = (v14 ^ 0x180600080208) & (4 * v13) ^ v13;
  v2[835] = v6;
  v2[836] = v2[125];
  v2[837] = v2[124];
  v17 = ((4 * (v14 ^ 0x90940550A8444125)) ^ 0xCE50755EA1370CB4) & (v14 ^ 0x90940550A8444125) ^ (4 * (v14 ^ 0x90940550A8444125)) & 0xB3941D57A84DC32CLL;
  v2[838] = v2[123];
  v2[839] = v2[121];
  v2[840] = v2[119];
  LODWORD(STACK[0x1BCC]) = v7;
  v2[842] = v2[117];
  v18 = *(_QWORD *)(a1 + 8 * a2);
  v19 = ((16 * (v17 ^ 0x318408010848C309)) ^ 0x3941D57A84DC32D0) & (v17 ^ 0x318408010848C309) ^ (16 * (v17 ^ 0x318408010848C309)) & 0xB3941D57A84DC320;
  v2[843] = v2[116];
  v2[844] = v2[114];
  v20 = (v19 ^ 0x31001552804C0200) & (((v17 ^ 0x82101556A0050020) & (16 * v16) ^ v16) << 8) ^ (v17 ^ 0x82101556A0050020) & (16 * v16) ^ v16;
  LODWORD(STACK[0x1BEC]) = STACK[0x58C];
  v2[6] = v2[55];
  v2[7] = v18 - 12;
  v21 = (((v19 ^ 0x829408052801C12DLL) << 8) ^ 0x941D57A84DC32D00) & (v19 ^ 0x829408052801C12DLL) ^ ((v19 ^ 0x829408052801C12DLL) << 8) & 0xB3941D57A84DC300;
  LODWORD(STACK[0x1BF0]) = STACK[0x588];
  LODWORD(STACK[0x1BF4]) = STACK[0x574];
  v2[847] = v2[112];
  v2[848] = v2[111];
  LODWORD(STACK[0x1C0C]) = STACK[0x570];
  v2[850] = v2[109];
  LODWORD(STACK[0x1C1C]) = v3;
  v2[852] = v15;
  v2[8] = v12;
  v2[9] = (v10 ^ 0xECFFD57FF86F1FE6) + 0x18D97D5AD5D25998 + ((2 * v10) & 0x1F0DE3FCCLL);
  v2[853] = v2[124];
  v2[10] = v11 ^ (2 * (v21 & 0x845800D00000000 ^ v20 ^ (v21 ^ 0x1014150008410000) & (v20 << 16))) ^ 0x6B3587A7185E00D8;
  JUMPOUT(0x19323BEBCLL);
}

uint64_t sub_19323BFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;

  v11 = LODWORD(STACK[0x368]) ^ 0x852B8865;
  LODWORD(STACK[0x28C]) = v11;
  return ((uint64_t (*)(void))(v9
                            + *(_QWORD *)(a8 + 8 * ((6496 * (v11 != 0)) ^ v8))
                            - (((v8 - 2344) | 0xB86u)
                             - v10
                             - 3027)
                            + 8))();
}

uint64_t sub_19323C01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  int v41;
  _QWORD *v42;

  v42[65] = v42[62] - 0x5D946D73CE97597 + ((v41 - 3033) | 0xA29u);
  v42[66] = LODWORD(STACK[0x28C]);
  return (*(uint64_t (**)(void))(a8 + 8 * ((1996 * (a41 != 22)) ^ v41)))();
}

uint64_t sub_19323C098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;

  v12[11] = 0;
  v13 = v12[66] - 1;
  *(_BYTE *)(v12[171] + v8 + v12[65]) = *(_BYTE *)(v12[170] + v8 + 0xC0391580E16);
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (((v13 != 0) * (v11 + ((v9 + v10 + 3082) | 0x6A) + 394006690 + 170)) ^ ((v9 + v10 + 3082) | 0x6A)))
                            - 8))();
}

void sub_19323C128()
{
  JUMPOUT(0x19323C0D4);
}

uint64_t sub_19323C130@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;

  v4[17] = 0;
  v5 = v4[66] - 1;
  *(_BYTE *)(v4[171] + v2 + v4[65]) = *(_BYTE *)(v4[170] + (a2 - v3 - 2595) + v2 + 0xC0379DBF0FALL);
  return (*(uint64_t (**)(uint64_t))(a1 + 8 * ((1149 * (v5 == 0)) ^ a2)))(1);
}

void sub_19323C1A4()
{
  JUMPOUT(0x19323C168);
}

uint64_t sub_19323C1AC@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  uint64_t v35;
  int v36;
  uint64_t v37;

  *(_QWORD *)(v37 + 88) = v35;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * (((a35 == 22) * (((v36 + a2 + 2116) | 0x188) - 2492)) ^ (v36 + a2 + 1856)))
                                         - 8))(*(_QWORD *)(v37 + 408));
}

void sub_19323C1B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  JUMPOUT(0x19323F340);
}

uint64_t sub_19323C1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  _QWORD *v64;
  _DWORD *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;

  v65 = (_DWORD *)v64[43];
  *v65 += a64;
  v64[746] = v65;
  v64[747] = v64[38];
  v64[748] = v64[35];
  v64[749] = v64[24];
  v64[750] = v64[12];
  v64[751] = *v64;
  LODWORD(STACK[0x1904]) = a64;
  v64[753] = a53;
  v64[754] = a47;
  v64[755] = v64[175];
  v66 = v64[63];
  v85 = v64[64];
  LODWORD(STACK[0x1924]) = a63;
  LODWORD(STACK[0x1928]) = a49;
  LODWORD(STACK[0x192C]) = HIDWORD(a41);
  v64[758] = v64[174];
  v64[759] = v64[173];
  v86 = v66;
  LODWORD(STACK[0x1944]) = STACK[0x6CC];
  v64[761] = v64[172];
  LODWORD(v65) = STACK[0x6AC];
  LODWORD(STACK[0x1954]) = STACK[0x6AC];
  LODWORD(STACK[0x1958]) = (_DWORD)v65;
  LODWORD(v65) = STACK[0x1958];
  LODWORD(v66) = STACK[0x1954];
  v67 = v64[761];
  v68 = STACK[0x1944];
  v69 = v64[759];
  v70 = v64[758];
  v71 = STACK[0x192C];
  v72 = STACK[0x1928];
  v73 = STACK[0x1924];
  v74 = v64[755];
  v75 = v64[754];
  v76 = v64[753];
  v77 = LODWORD(STACK[0x1904]);
  v78 = v64[751];
  v79 = v64[750];
  v80 = v64[749];
  v81 = v64[748];
  v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v64[747];
  v83 = v64[746];
  v64[395] = v83;
  v64[396] = v82;
  v64[397] = v81;
  v64[398] = v80;
  v64[399] = v79;
  v64[400] = v78;
  LODWORD(STACK[0xE0C]) = v77;
  v64[402] = v76;
  v64[403] = v75;
  v64[404] = v74;
  v64[405] = v85;
  LODWORD(STACK[0xE34]) = v73;
  LODWORD(STACK[0xE38]) = v72;
  LODWORD(STACK[0xE3C]) = v71;
  v64[408] = v70;
  v64[409] = v69;
  v64[410] = v86;
  LODWORD(STACK[0xE5C]) = v68;
  v64[412] = v67;
  LODWORD(STACK[0xE68]) = v66;
  LODWORD(STACK[0xE6C]) = (_DWORD)v65;
  v64[414] = v83;
  v64[415] = v82;
  v64[416] = v81;
  v64[417] = v80;
  v64[418] = v79;
  v64[419] = v78;
  LODWORD(STACK[0xEA4]) = v77;
  v64[421] = v76;
  v64[422] = v75;
  v64[423] = v74;
  v64[424] = v85;
  LODWORD(STACK[0xECC]) = v73;
  LODWORD(STACK[0xED0]) = v72;
  LODWORD(STACK[0xED4]) = v71;
  v64[427] = v70;
  v64[428] = v69;
  v64[429] = v86;
  LODWORD(STACK[0xEF4]) = v68;
  v64[431] = v67;
  LODWORD(STACK[0xF00]) = v66;
  LODWORD(STACK[0xF04]) = (_DWORD)v65;
  return v82(v85, v74, v75, HIDWORD(a38), v77, v78, v79, a39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_19323C380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  void (*v39)(void);
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v41 = (_QWORD *)v40[166];
  *v41 = 0;
  v41[1] = 0;
  v39();
  v40[818] = v40[167];
  LODWORD(STACK[0x1B1C]) = STACK[0x6A8];
  v40[820] = v40[164];
  LODWORD(STACK[0x1B2C]) = STACK[0x684];
  v42 = v40[60];
  v40[822] = v40[163];
  v40[823] = v40[162];
  LODWORD(STACK[0x1B44]) = STACK[0x65C];
  LODWORD(STACK[0x1B48]) = STACK[0x658];
  LODWORD(STACK[0x1B4C]) = STACK[0x644];
  v43 = v40[58];
  v40[2] = v42;
  v40[3] = v43;
  v40[826] = v40[161];
  v40[827] = v40[159];
  LODWORD(STACK[0x1B64]) = STACK[0x640];
  v40[829] = v40[158];
  v40[830] = v40[157];
  v40[831] = v40[156];
  v40[832] = v40[154];
  v40[833] = v40[153];
  v40[834] = v40[150];
  v44 = v40[834];
  v45 = v40[833];
  v46 = v40[832];
  v47 = v40[831];
  v48 = v40[830];
  v49 = v40[829];
  v50 = STACK[0x1B64];
  v51 = v40[827];
  v52 = v40[826];
  v53 = STACK[0x1B4C];
  v54 = LODWORD(STACK[0x1B48]);
  v55 = LODWORD(STACK[0x1B44]);
  v56 = v40[823];
  v57 = v40[822];
  v59 = v40[2];
  v58 = v40[3];
  v60 = LODWORD(STACK[0x1B2C]);
  v61 = v40[820];
  v62 = STACK[0x1B1C];
  v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v40[818];
  v40[471] = v44;
  v40[472] = v45;
  v40[473] = v46;
  v40[474] = v47;
  v40[475] = v48;
  v40[476] = v49;
  LODWORD(STACK[0x106C]) = v50;
  v40[478] = v51;
  v40[479] = v52;
  v40[480] = v58;
  LODWORD(STACK[0x108C]) = v53;
  LODWORD(STACK[0x1090]) = v54;
  LODWORD(STACK[0x1094]) = v55;
  v40[483] = v56;
  v40[484] = v57;
  v40[485] = v59;
  LODWORD(STACK[0x10B4]) = v60;
  v40[487] = v61;
  LODWORD(STACK[0x10C4]) = v62;
  v40[489] = 0;
  v40[566] = v44;
  v40[567] = v45;
  v40[568] = v46;
  v40[569] = v47;
  v40[570] = v48;
  v40[571] = v49;
  LODWORD(STACK[0x1364]) = v50;
  v40[573] = v51;
  v40[574] = v52;
  v40[575] = v58;
  LODWORD(STACK[0x1384]) = v53;
  LODWORD(STACK[0x1388]) = v54;
  LODWORD(STACK[0x138C]) = v55;
  v40[578] = v56;
  v40[579] = v57;
  v40[580] = v59;
  LODWORD(STACK[0x13AC]) = v60;
  v40[582] = v61;
  LODWORD(STACK[0x13B8]) = v62;
  LODWORD(STACK[0x13BC]) = v55;
  return v63(v54, v55, v56, v57, v58, v59, v60, a39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_19323C52C@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v7 = v4 ^ v3;
  v6[13] = v2;
  v8 = v2 - 1;
  v9 = (a2 & (2 * v8)) + ((v7 - v5 - 959) ^ v8 ^ 0x767A3EBDE0861221);
  *(_BYTE *)(v6[171] + v9 + v6[67]) = *(_BYTE *)(v6[170] + v9 - 0x767A3EBDF7FA0F3DLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((42 * (v8 == 0)) ^ v7)) - 4))();
}

uint64_t sub_19323C5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;

  *(_QWORD *)(v44 + 104) = v41;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a8
                                                     + 8
                                                     * (((a41 == 22) * (((v43 + v42 + 2116) | 0x188) - 2492)) ^ (v43 + v42 + 1856)))
                                         - 8))(*(_QWORD *)(v44 + 408));
}

uint64_t sub_19323C5BC@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  uint64_t v35;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((50 * (a35 == ((323 * (a2 ^ 0x9D5)) ^ 0x1072))) ^ a2))
                            + v35
                            - ((a2 + 6552364) | 0x17181818u)))();
}

uint64_t sub_19323C618(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  int v10;
  uint64_t (*v11)(void);

  LODWORD(STACK[0x10D4]) = STACK[0x4CC];
  v9[478] = v9[79];
  LODWORD(STACK[0x110C]) = STACK[0x4BC];
  v9[479] = v9[77];
  LODWORD(STACK[0x1134]) = STACK[0x4B8];
  v9[467] = v9[49];
  v9[483] = v9[75];
  v9[484] = v9[74];
  v9[487] = v9[72];
  LODWORD(STACK[0x1138]) = STACK[0x494];
  v9[489] = v9[71];
  v9[491] = v9[70];
  v9[492] = v9[68];
  v9[493] = v9[208];
  LODWORD(STACK[0x113C]) = 101372955;
  v9[494] = v9[207];
  v9[495] = v9[206];
  v9[480] = v9[47];
  LODWORD(STACK[0x115C]) = STACK[0x484];
  v9[496] = v9[205];
  v11 = (uint64_t (*)(void))(*(_QWORD *)(a8
                                      + 8
                                      * ((LOBYTE(STACK[0x28B]) * (2 * (a4 ^ (v10 + 235)) + 2983)) ^ (v8 + a4 + 472)))
                          - 4);
  LODWORD(STACK[0x116C]) = STACK[0x4E4];
  return v11();
}

uint64_t sub_19323C6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;

  v42 = *(_QWORD *)(a8 + 8 * a9);
  v43 = a9 ^ 0x87Fu;
  v40[734] = v40[79];
  LODWORD(STACK[0x187C]) = STACK[0x4BC];
  v40[736] = v40[77];
  LODWORD(STACK[0x189C]) = STACK[0x4B8];
  v40[706] = v40[49];
  v40[737] = v40[75];
  v40[738] = v40[74];
  v40[711] = v42 + v43 - 2463;
  LODWORD(STACK[0x18A0]) = STACK[0x494];
  v40[741] = v40[70];
  v40[742] = v40[208];
  LODWORD(STACK[0x18A4]) = v41;
  v40[744] = v40[207];
  v40[746] = v40[206];
  v53 = v40[47];
  LODWORD(STACK[0x18BC]) = STACK[0x484];
  v40[747] = v40[205];
  LODWORD(STACK[0x18CC]) = 1;
  LODWORD(STACK[0x4F4]) = STACK[0x18CC];
  v40[85] = v40[747];
  LODWORD(STACK[0x50C]) = STACK[0x18BC];
  v40[50] = v53;
  v40[88] = v40[746];
  v40[90] = v40[744];
  LODWORD(STACK[0x51C]) = STACK[0x18A4];
  v40[92] = v40[742];
  v40[94] = v40[741];
  LODWORD(STACK[0x534]) = STACK[0x18A0];
  v44 = v40[711];
  v40[97] = v40[738];
  v40[99] = v40[737];
  v40[52] = v40[706];
  v45 = STACK[0x189C];
  LODWORD(STACK[0x544]) = STACK[0x189C];
  v46 = v40[736];
  v40[100] = v46;
  v47 = STACK[0x187C];
  LODWORD(STACK[0x550]) = STACK[0x187C];
  v48 = v40[734];
  v40[101] = v48;
  v49 = v40[474];
  v40[102] = v49;
  v50 = *(_DWORD *)(v49 + 12);
  v40[104] = v44;
  v40[106] = v49 + 12;
  LODWORD(STACK[0x554]) = v50;
  LODWORD(STACK[0x195C]) = STACK[0x4F4];
  v40[767] = v48;
  LODWORD(STACK[0x196C]) = v47;
  v40[770] = v46;
  LODWORD(STACK[0x1984]) = v45;
  v40[771] = v40[99];
  v40[772] = v40[97];
  v40[774] = v44;
  LODWORD(STACK[0x1988]) = STACK[0x534];
  v40[775] = v40[102];
  v40[776] = v40[94];
  v40[777] = v40[106];
  v40[778] = v40[92];
  LODWORD(STACK[0x198C]) = STACK[0x51C];
  v40[779] = v40[90];
  v40[781] = v40[88];
  LODWORD(STACK[0x19AC]) = STACK[0x50C];
  v40[783] = v40[85];
  v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (int)(((v50 < 0xFFFFFFFB) * (((v43 + 72089193) | 0x13301518) ^ (v39 + 821))) ^ v43)) - 8);
  LODWORD(STACK[0x19E4]) = 101330305;
  return v51(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_19323CCF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  _QWORD *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _BOOL4 v44;
  _BOOL4 v45;

  v39 = a9 - 1850;
  v40 = LODWORD(STACK[0x554]);
  v41 = *(unsigned int *)(v37[102] + 8);
  LODWORD(STACK[0x1904]) = STACK[0x4F4];
  v42 = (v40 ^ 0x3FF3E7DFDEEDFFEDLL)
      - 0x3FF3E7DF724BB292
      + ((((v39 + 273155747) | 0x7341418u) + 0x1A65FE2BELL) & (2 * v40));
  v37[748] = v37[101];
  v43 = (v41 ^ 0xEFAEDBFA675F6BF5) + 0x105124060542E162 + ((2 * (_DWORD)v41) & 0xCEBED7EA);
  LODWORD(STACK[0x1924]) = STACK[0x550];
  v37[749] = v37[100];
  v44 = v42 < 0x6CA24D57;
  LODWORD(STACK[0x1928]) = STACK[0x544];
  v45 = v42 > v43;
  if (v44 != v43 < 0x6CA24D57)
    v45 = v44;
  v37[750] = v37[99];
  v37[751] = v37[97];
  v37[753] = v37[104];
  LODWORD(STACK[0x192C]) = STACK[0x534];
  v37[754] = v37[102];
  v37[755] = v37[94];
  v37[758] = v37[106];
  v37[759] = v37[92];
  LODWORD(STACK[0x1944]) = STACK[0x51C];
  v37[761] = v37[90];
  v37[764] = v37[88];
  LODWORD(STACK[0x1954]) = STACK[0x50C];
  v37[766] = v37[85];
  LODWORD(STACK[0x1958]) = v38;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((1480 * v45) ^ v39)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_19323CE80@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;

  v42 = *(_QWORD *)(a5 + 8 * a6);
  v43 = 213 * (a6 ^ 0x26Cu);
  LODWORD(STACK[0x19F4]) = STACK[0x4F4];
  LODWORD(STACK[0x1A2C]) = STACK[0x550];
  v41[784] = v41[100];
  LODWORD(STACK[0x1A44]) = STACK[0x544];
  v52 = v42 + v43 - 2781;
  v53 = v41[52];
  v41[785] = v41[99];
  v41[786] = v41[97];
  v41[787] = v41[104];
  LODWORD(STACK[0x1A48]) = STACK[0x534];
  v44 = v41[102];
  v41[788] = v44;
  v41[790] = v41[94];
  v41[791] = v41[106];
  v41[794] = v41[92];
  LODWORD(STACK[0x1A4C]) = STACK[0x51C];
  v41[795] = v41[85];
  v41[797] = v44;
  LODWORD(STACK[0x1A64]) = 4;
  v45 = LODWORD(STACK[0x1A64]);
  v46 = v43 ^ 0x5A1;
  v41[127] = v41[797];
  v41[128] = v41[795];
  LODWORD(STACK[0x5EC]) = STACK[0x1A4C];
  v41[130] = v41[794];
  v41[131] = v41[791];
  v41[132] = v41[790];
  v41[133] = v41[788];
  LODWORD(STACK[0x60C]) = STACK[0x1A48];
  v41[134] = v41[787];
  v41[136] = v41[786];
  v41[137] = v41[785];
  LODWORD(STACK[0x610]) = STACK[0x1A44];
  v41[138] = v41[784];
  LODWORD(STACK[0x614]) = STACK[0x1A2C];
  v47 = (unsigned int *)(v41[127] + 8);
  LODWORD(STACK[0x62C]) = STACK[0x19F4];
  v41[140] = v52;
  v48 = (v45 ^ 0xE769FFF7DAFFDFB8) + ((2 * v45) & 0x1B5FFBF70) + 0x1896000825002048;
  v49 = *v47;
  v41[142] = v47;
  v41[55] = v53;
  v41[56] = v48 + v49;
  LOBYTE(STACK[0x307]) = v48 + v49 < v46 + 4294963343;
  v50 = ((_DWORD)v46 - 1327) | 0x90u;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8 * (int)((v49 > v50 + 2147480878) | (4 * (v49 > v50 + 2147480878)) | v46)))(v50, (v49 > v50 + 2147480878) | (4 * (v49 > v50 + 2147480878)), a1, 3900961000, a2, a3, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_19323CF28(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t (*v18)(uint64_t);

  v12 = STACK[0x129C];
  v9[248] = v9[535];
  LODWORD(STACK[0x9E4]) = STACK[0x1298];
  v9[23] = v9[513];
  v9[249] = v9[534];
  v9[251] = v9[533];
  LODWORD(STACK[0x9E8]) = STACK[0x128C];
  v13 = v9[532];
  v9[253] = v9[531];
  v14 = v9[530];
  v9[254] = v9[528];
  LODWORD(STACK[0x9EC]) = STACK[0x126C];
  v9[255] = v9[527];
  v9[256] = v9[526];
  v15 = v9[525];
  v16 = v9[506];
  v17 = STACK[0x1268];
  v9[257] = v9[524];
  LODWORD(STACK[0x9F8]) = STACK[0x1244];
  v9[258] = v9[523];
  LODWORD(STACK[0x9FC]) = STACK[0x120C];
  v9[613] = v9[248];
  LODWORD(STACK[0x1524]) = STACK[0x9E4];
  v9[599] = v9[23];
  v9[616] = v9[249];
  v9[617] = v9[251];
  LODWORD(STACK[0x154C]) = STACK[0x9E8];
  v9[620] = v13;
  v9[622] = v9[253];
  v9[623] = v14;
  v9[624] = v9[254];
  LODWORD(STACK[0x1550]) = STACK[0x9EC];
  v9[625] = v9[255];
  v9[626] = v9[256];
  v9[627] = v15;
  v9[609] = v16;
  LODWORD(STACK[0x1554]) = v17;
  LODWORD(STACK[0x1574]) = STACK[0x9F8];
  v9[629] = v9[258];
  LODWORD(STACK[0x1580]) = STACK[0x9FC];
  v9[630] = v9[257];
  v18 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a8
                                                    + 8
                                                    * (((v12 == v11) * ((2 * (a4 ^ (v10 + 36))) ^ 0x8D0)) ^ (v8 + a4 + 106)))
                                        - 8);
  LODWORD(STACK[0x1584]) = v12;
  return v18(3900957424);
}

uint64_t sub_19323D0A4@<X0>(char a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unint64_t v40;

  *(_QWORD *)(v34 + 2080) = **(_QWORD **)(v34 + 1760);
  v35 = ((**(_DWORD **)(v34 + 1768) << ((((a2 - 110) | 0x14) ^ (a1 - 103)) + ((a2 - 22) | 0xC))) & 0xBEDE9FEA)
      + (**(_DWORD **)(v34 + 1768) ^ 0xDF6F4FF5);
  LODWORD(STACK[0xA0C]) = v35;
  v36 = v35 + 1979037948;
  LODWORD(STACK[0xA10]) = v36;
  v37 = *(_QWORD *)(v34 + 3792);
  *(_QWORD *)(v34 + 2096) = v37;
  *(_QWORD *)(v34 + 4960) = v37;
  v38 = *(_DWORD *)(v37 + 12);
  *(_QWORD *)(v34 + 2104) = v37 + 12;
  v39 = (v36 | ((unint64_t)(v36 < 0x556508F1) << 32)) + 0xE845BC25D5F1A32;
  v40 = (v38 ^ 0x4FBCAEEFE3EBBBE5) + ((2 * v38) & 0x1C7D777CALL) - 0x180A880808800C0 + v39;
  *(_QWORD *)(v34 + 200) = v39;
  *(_QWORD *)(v34 + 208) = v40;
  *(_QWORD *)(v34 + 4904) = *(_QWORD *)(v34 + 1984);
  LODWORD(STACK[0x1524]) = STACK[0x9E4];
  *(_QWORD *)(v34 + 4792) = *(_QWORD *)(v34 + 184);
  *(_QWORD *)(v34 + 4928) = *(_QWORD *)(v34 + 1992);
  *(_QWORD *)(v34 + 4936) = *(_QWORD *)(v34 + 2008);
  LODWORD(STACK[0x154C]) = STACK[0x9E8];
  *(_QWORD *)(v34 + 4976) = *(_QWORD *)(v34 + 2024);
  *(_QWORD *)(v34 + 4984) = *(_QWORD *)(v34 + 2104);
  *(_QWORD *)(v34 + 4992) = *(_QWORD *)(v34 + 2032);
  LODWORD(STACK[0x1550]) = STACK[0x9EC];
  *(_QWORD *)(v34 + 5000) = *(_QWORD *)(v34 + 2040);
  *(_QWORD *)(v34 + 5008) = *(_QWORD *)(v34 + 2048);
  *(_QWORD *)(v34 + 5016) = *(_QWORD *)(v34 + 2080);
  *(_QWORD *)(v34 + 4872) = *(_QWORD *)(v34 + 200);
  LODWORD(STACK[0x1554]) = STACK[0xA10];
  LODWORD(STACK[0x1574]) = STACK[0x9F8];
  *(_QWORD *)(v34 + 5032) = *(_QWORD *)(v34 + 2064);
  LODWORD(STACK[0x1580]) = STACK[0x9FC];
  *(_QWORD *)(v34 + 5040) = *(_QWORD *)(v34 + 2056);
  LODWORD(STACK[0x1584]) = v33;
  return ((uint64_t (*)(void))(*(_QWORD *)(a33 + 8 * ((3972 * (v40 - 0x5CC062321627DE48 < 0xFFFFFFFB)) ^ a2)) - 8))();
}

uint64_t sub_19323D278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  _QWORD *v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t (*v46)(void);

  v43 = v41[25];
  v44 = v40 + v41[26] + 4;
  v45 = *(unsigned int *)(v41[262] + 8);
  LODWORD(STACK[0x12A0]) = STACK[0x9FC];
  v41[537] = v41[258];
  LODWORD(STACK[0x12A4]) = STACK[0x9F8];
  v41[538] = v41[257];
  LODWORD(STACK[0x12B4]) = STACK[0xA10];
  v41[518] = v43;
  v41[539] = v41[260];
  v41[542] = v41[256];
  v41[543] = v41[255];
  LODWORD(STACK[0x12D0]) = STACK[0x9EC];
  v41[546] = v41[254];
  v41[549] = v41[263];
  v41[552] = v41[253];
  v41[553] = v41[262];
  v41[556] = v41[251];
  v41[557] = v41[249];
  v41[540] = v41[23];
  LODWORD(STACK[0x12D4]) = STACK[0x9E4];
  v41[558] = v41[248];
  v46 = (uint64_t (*)(void))(*(_QWORD *)(a39
                                      + 8 * (((v44 > v45) * ((v39 - 1208206448) & 0x5F7FDF1F ^ (v42 - 1391))) ^ v39))
                          - 12);
  LODWORD(STACK[0x12FC]) = 101372955;
  return v46();
}

void sub_19323D380()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;

  v2 = LODWORD(STACK[0xA0C]) + 546350398;
  LODWORD(STACK[0x19F4]) = STACK[0x9FC];
  LODWORD(STACK[0x1A2C]) = STACK[0x9F8];
  v1[784] = v1[257];
  LODWORD(STACK[0x1A44]) = STACK[0xA10];
  v1[785] = v1[260];
  v1[786] = v1[256];
  v1[787] = v1[255];
  LODWORD(STACK[0x1A48]) = STACK[0x9EC];
  v1[788] = v1[254];
  v1[790] = v1[263];
  v1[791] = v1[253];
  v3 = v1[262];
  v1[794] = v3;
  LODWORD(STACK[0x1A4C]) = STACK[0x9E8];
  v1[795] = v1[248];
  v1[797] = v3;
  LODWORD(STACK[0x1A64]) = v2 + 213 * (v0 ^ 0x261);
  JUMPOUT(0x19323E5DCLL);
}

uint64_t sub_19323D430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v12 = STACK[0x12FC];
  v10[264] = v10[558];
  LODWORD(STACK[0xA14]) = STACK[0x12D4];
  v13 = v10[540];
  v10[265] = v10[557];
  v10[266] = v10[556];
  v10[267] = v10[553];
  v10[270] = v10[552];
  v10[272] = v10[549];
  v10[275] = v10[546];
  LODWORD(STACK[0xA20]) = STACK[0x12D0];
  v10[277] = v10[543];
  v10[280] = v10[542];
  v10[281] = v10[539];
  v14 = v10[518];
  v10[27] = v13;
  v10[28] = v14;
  LODWORD(STACK[0xA24]) = STACK[0x12B4];
  v10[282] = v10[538];
  LODWORD(STACK[0xA34]) = STACK[0x12A4];
  v10[283] = v10[537];
  LODWORD(STACK[0xA38]) = STACK[0x12A0];
  v10[613] = v10[264];
  LODWORD(STACK[0x1524]) = STACK[0xA14];
  v10[599] = v10[27];
  v10[616] = v10[265];
  v10[617] = v10[266];
  v10[620] = v10[267];
  v10[622] = v10[270];
  v10[623] = v10[272];
  v10[624] = v10[275];
  LODWORD(STACK[0x1550]) = STACK[0xA20];
  v10[625] = v10[277];
  v10[626] = v10[280];
  v10[627] = v10[281];
  LODWORD(STACK[0x154C]) = v12;
  v10[609] = v14;
  LODWORD(STACK[0x1554]) = STACK[0xA24];
  LODWORD(STACK[0x1574]) = STACK[0xA34];
  v10[629] = v10[283];
  LODWORD(STACK[0x1580]) = STACK[0xA38];
  v10[630] = v10[282];
  v15 = (uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((v12 == v11) * (((v8 + v9) | 0x180) + 2448)) ^ (v8 + v9 + 106)))
                          - 8);
  LODWORD(STACK[0x1584]) = v12;
  return v15();
}

uint64_t sub_19323D5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  uint64_t v54;
  _QWORD *v55;
  int v56;
  uint64_t *v57;
  _DWORD *v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  uint64_t v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;

  v56 = (v54 - 1167800781) & 0x459B3BF9;
  v57 = (uint64_t *)v55[267];
  v58 = (_DWORD *)v55[272];
  v59 = STACK[0xA24];
  v60 = (LODWORD(STACK[0xA24]) ^ 0x92F7AE) & (2 * (STACK[0xA24] & 0xAA9AF70F)) ^ STACK[0xA24] & 0xAA9AF70F;
  v61 = ((2 * (LODWORD(STACK[0xA24]) ^ 0x558631BE)) ^ 0xFE398D62) & (LODWORD(STACK[0xA24]) ^ 0x558631BE) ^ (2 * (LODWORD(STACK[0xA24]) ^ 0x558631BE)) & 0xFF1CC6B0;
  v62 = v61 ^ 0x1044291;
  v63 = (v61 ^ 0xFE188420) & (4 * v60) ^ v60;
  v64 = ((4 * v62) ^ 0xFC731AC4) & v62 ^ (4 * v62) & 0xFF1CC6B0;
  v65 = (v64 ^ 0xFC100280) & (16 * v63) ^ v63;
  v66 = ((16 * (v64 ^ 0x30CC431)) ^ 0xF1CC6B10) & (v64 ^ 0x30CC431) ^ (16 * (v64 ^ 0x30CC431)) & 0xFF1CC6B0;
  v67 = v65 ^ 0xFF1CC6B1 ^ (v66 ^ 0xF10C4200) & (v65 << 8);
  v68 = *v57;
  v69 = LODWORD(STACK[0xA24]) ^ (2
                               * ((v67 << 16) & 0x7F1C0000 ^ v67 ^ ((v67 << 16) ^ 0x46B10000) & (((v66 ^ 0xE1084A1) << 8) & 0x7F1C0000 ^ 0x63180000 ^ (((v66 ^ 0xE1084A1) << 8) ^ 0x1CC60000) & (v66 ^ 0xE1084A1))));
  v70 = ((*v58 << ((v54 + 51) & 0xF9 ^ 0xB8)) & 0x557FFFBC) + (*v58 ^ 0x2ABFFFDE) - 717225950;
  *(_BYTE *)(*v57 + v70) = HIBYTE(v69) ^ 0xD8;
  *(_BYTE *)(v68 + v70 + 1) = BYTE2(v69) ^ 0x83;
  *(_BYTE *)(v68 + v70 + 2) = (((BYTE1(v69) ^ 0x7A) - 2 * ((BYTE1(v69) ^ 0x7A) & 7 ^ BYTE1(v69) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v68 + v70 + 3) = v69 ^ 0x6D;
  v71 = (*v58 + 4);
  *v58 = v71;
  v72 = *v57;
  v73 = (v71 ^ 0xA778FFFDDAF5BFFELL) + 0x5E6052DCF34BB980 + ((2 * v71) & 0x1B5EB7FFCLL);
  v75 = v55[27];
  v74 = v55[28];
  v76 = (v74 ^ 0xE57B94BC09BBDADDLL) & (2 * (v74 & 0xF17BA43D4D3BDCDDLL)) ^ v74 & 0xF17BA43D4D3BDCDDLL;
  v77 = ((2 * (v74 ^ 0x277D9CFE91F963D5)) ^ 0xAC0C7187B9857E10) & (v74 ^ 0x277D9CFE91F963D5) ^ (2 * (v74 ^ 0x277D9CFE91F963D5)) & 0x560638C3DCC2BF08;
  v78 = v77 ^ 0x5202084044428108;
  v79 = (v77 ^ 0x8404308318803600) & (4 * v76) ^ v76;
  v80 = *(_QWORD *)(a39 + 8 * v54);
  LODWORD(STACK[0x844]) = STACK[0xA38];
  v55[885] = v55[283];
  v81 = ((4 * v78) ^ 0x5818E30F730AFC20) & v78 ^ (4 * v78) & 0xD60638C3DCC2BF08;
  LODWORD(STACK[0x87C]) = STACK[0xA34];
  v55[886] = v55[282];
  LODWORD(STACK[0x888]) = v59;
  v82 = (v81 ^ 0x500020035002BC00) & (16 * v79) ^ v79;
  v55[11] = v55[28];
  v55[887] = v55[281];
  v55[888] = v55[280];
  v83 = ((16 * (v81 ^ 0x860618C08CC00308)) ^ 0x60638C3DCC2BF080) & (v81 ^ 0x860618C08CC00308) ^ (16 * (v81 ^ 0x860618C08CC00308)) & 0xD60638C3DCC2BF00;
  v55[889] = v55[277];
  LODWORD(STACK[0x88C]) = STACK[0xA20];
  v84 = (v83 ^ 0x40020801CC02B000) & (v82 << 8) ^ v82;
  v55[890] = v55[275];
  v55[891] = v55[272];
  v55[892] = v55[270];
  v85 = (((v83 ^ 0x960430C210C00F08) << 8) ^ 0x638C3DCC2BF0800) & (v83 ^ 0x960430C210C00F08) ^ ((v83 ^ 0x960430C210C00F08) << 8) & 0xD60638C3DCC2BF00;
  v55[893] = v55[267];
  LODWORD(STACK[0x8C4]) = 101372955;
  v55[211] = v55[266];
  v55[212] = v55[265];
  v55[13] = v80 - 8;
  v55[14] = v75;
  LODWORD(STACK[0x8D0]) = STACK[0xA14];
  v55[213] = v55[264];
  v55[215] = v72;
  v55[217] = v55[281];
  v55[15] = v73;
  v55[16] = v74 ^ (2 * (v85 & 0x18C29C0000000000 ^ v84 ^ (v85 ^ 0x60000C0C0820000) & (v84 << 16))) ^ 0xA51D571C81054B8;
  v55[170] = v55[217];
  v86 = v55[15];
  v55[61] = v55[16];
  v55[62] = v86;
  v55[171] = v55[215];
  v55[172] = v55[213];
  LODWORD(STACK[0x6AC]) = STACK[0x8D0];
  v55[173] = v55[212];
  v55[174] = v55[211];
  LODWORD(STACK[0x6CC]) = STACK[0x8C4];
  v55[175] = v55[893];
  v91 = v55[892];
  v88 = v55[13];
  v87 = v55[14];
  v92 = v55[891];
  *v55 = v55[890];
  HIDWORD(a41) = STACK[0x88C];
  v55[12] = v55[889];
  v55[24] = v55[888];
  v55[35] = v55[887];
  v89 = v55[11];
  v55[63] = v87;
  v55[64] = v89;
  HIDWORD(a48) = STACK[0x888];
  v55[38] = v55[886];
  v55[43] = v55[885];
  LODWORD(v89) = v55[170] > (unint64_t)((v56 + 1559439842) & 0xA30CDBE5)
                          + v55[62]
                          + v55[171]
                          - 0x5D952DACE4182FFLL;
  v55[51] = v88;
  return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a39 + 8 * (int)((79 * v89) ^ v56)))(0x18C29C0000000000, 0xD60638C3DCC2BF00, 0xD60638C3DCC2BF08, a4, a5, a6, a7, a39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           v91,
           a48,
           a49,
           a50,
           a51,
           v92,
           a53,
           a54);
}

uint64_t sub_19323DA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,_DWORD *a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  _QWORD *v66;
  int v67;
  int v68;
  uint64_t v69;
  int v70;
  BOOL v71;
  int v72;
  uint64_t (*v73)(void);

  *a55 += a51 - 1432684785;
  v66[613] = v66[172];
  LODWORD(STACK[0x1524]) = STACK[0x6AC];
  v69 = v66[64];
  v66[599] = v66[63];
  v66[616] = v66[173];
  v66[617] = v66[174];
  v70 = STACK[0x6CC];
  v71 = LODWORD(STACK[0x6CC]) == v68;
  LODWORD(STACK[0x154C]) = STACK[0x6CC];
  v66[620] = v66[175];
  v66[622] = a49;
  v66[623] = a55;
  v66[624] = *v66;
  LODWORD(STACK[0x1550]) = a43;
  v66[625] = v66[12];
  v66[626] = v66[24];
  v66[627] = v66[35];
  v72 = v71;
  v66[609] = v69;
  LODWORD(STACK[0x1554]) = a51;
  LODWORD(STACK[0x1574]) = a65;
  v66[629] = v66[43];
  LODWORD(STACK[0x1580]) = a66;
  v66[630] = v66[38];
  v73 = (uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((v72 * ((3 * (a39 ^ (v67 + 620))) ^ 0x17C7)) ^ (a39 - 394009766)))
                          - 8);
  LODWORD(STACK[0x1584]) = v70;
  return v73();
}

uint64_t sub_19323DBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,int *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  _QWORD *v48;
  int v49;
  uint64_t v50;

  v42 = (uint64_t *)v40[474];
  v40[284] = v42;
  v40[475] = 0;
  LODWORD(STACK[0x1090]) = 0;
  a25(a29);
  v43 = *a30;
  v44 = *v42;
  v45 = *((_DWORD *)v42 + 3);
  v40[285] = (char *)v42 + 12;
  v46 = v40[218];
  v47 = 597255653 * ((v41 - 144) ^ 0x90B7F99);
  v48 = (_QWORD *)(v41 - 160);
  v48[7] = v40[219];
  *(_DWORD *)(v41 - 128) = v39 - 720 - v47 + (v43 ^ 0x2D5DE7BD) + ((2 * v43) & 0x5ABBCF7A) - 138675342;
  *(_DWORD *)(v41 - 140) = v47 + v39 - 1066 + 1581691396 + v45 - ((2 * v45) & 0xBC8D6408) - 815;
  *(_DWORD *)(v41 - 112) = v47 + v39 + 1359;
  v48[3] = v46;
  v48[5] = v44;
  a24(v41 - 144);
  v49 = *(_DWORD *)(v41 - 144);
  v50 = a26(a29);
  LODWORD(STACK[0x1364]) = v49;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a39 + 8 * ((5965 * (v49 == 663729217)) ^ v39)) - 12))(v50);
}

uint64_t sub_19323DCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t), uint64_t (*a11)(_QWORD, uint64_t, uint64_t), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;

  v46 = *(_QWORD *)(v39 + 8 * v43);
  v47 = 486723911 * (((v44 | 0x3726246F842FC54ELL) - v44 + (v44 & 0xC8D9DB907BD03AB0)) ^ 0x598FFFE34E5A5D4);
  *(_DWORD *)(v45 - 128) = v43 - 71465943 - v47;
  *(_QWORD *)(v42 + 16) = v41;
  *(_QWORD *)(v42 + 24) = v46 - v47 - 8;
  a10(v45 - 144);
  v48 = a11(*a28, a27, v40);
  v49 = ((2 * v48) & 0x4E57AD3E) + (v48 ^ 0x272BD69F);
  v50 = *(_QWORD *)(a39 + 8 * (v43 - 5));
  v51 = 486723911
      * (((v44 ^ 0x5CA4EAAE3D17FEC0 | 0x6E80BA2395655D7BLL) - ((v44 ^ 0x5CA4EAAE3D17FEC0) & 0x6E80BA2395655D7BLL)) ^ 0x9A8B1C18B8C321);
  *(_DWORD *)(v45 - 128) = v43 - 71465943 - v51;
  *(_QWORD *)(v42 + 16) = v41;
  *(_QWORD *)(v42 + 24) = v50 - v51 - 8;
  v52 = ((uint64_t (*)(uint64_t))a10)(v45 - 144);
  v53 = v49 == ((v43 + 1525705615) & 0xA50F99FB) + 657182181;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a39 + 8 * (((16 * v53) | (v53 << 6)) ^ (v43 + 356))) - 4))(v52);
}

uint64_t sub_19323DE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),void (*a25)(uint64_t),uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;

  a25(a29);
  v42 = **(_QWORD **)(v40 + 2272);
  v43 = **(_DWORD **)(v40 + 2280);
  v44 = *a30 ^ 0x67B9FFBB;
  v45 = (*a30 << ((v39 + 90) ^ 0x88)) & 0xCF73FF76;
  v46 = *(_QWORD *)(v40 + 1744);
  v47 = *(_QWORD *)(v40 + 1752);
  v48 = 597255653 * (((v41 - 144) & 0xCAA69F89 | ~((v41 - 144) | 0xCAA69F89)) ^ 0x3C521FEF);
  *(_DWORD *)(v41 - 112) = v48 + v39 + 1066 + 1359;
  v49 = (_QWORD *)(v41 - 160);
  v49[7] = v47;
  *(_DWORD *)(v41 - 140) = v48 + 1581691396 + v43 - ((2 * v43) & 0xBC8D6408);
  *(_DWORD *)(v41 - 128) = v44 - v48 - 1117788163 + v45;
  v49[3] = v46;
  v49[5] = v42;
  a24(v41 - 144);
  v50 = *(_DWORD *)(v41 - 144);
  v51 = a26(a29);
  LODWORD(STACK[0x1364]) = v50;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a39
                                                      + 8
                                                      * ((26 * (LODWORD(STACK[0x1364]) != ((v39 - 478) ^ 0x178FB56F))) ^ (v39 + 346)))
                                          - ((v39 + 346) ^ 0x48DLL)))(v51);
}

uint64_t sub_19323DFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a64;
  int a65;
  uint64_t v65;
  uint64_t v66;
  int v67;
  _QWORD *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(void);

  LODWORD(STACK[0x146C]) = a65;
  v68[592] = v68[43];
  LODWORD(STACK[0x149C]) = a64;
  v68[593] = v68[38];
  LODWORD(STACK[0x14B8]) = a50;
  v70 = v68[63];
  v68[580] = v68[64];
  v68[597] = v68[35];
  v68[598] = v68[24];
  v68[601] = v68[12];
  LODWORD(STACK[0x14BC]) = a42;
  v68[603] = *v68;
  v68[604] = a54;
  v68[606] = a48;
  v68[607] = v68[175];
  LODWORD(STACK[0x14DC]) = 101372955;
  v68[608] = v68[174];
  v68[610] = v68[173];
  v68[594] = v70;
  LODWORD(STACK[0x14E8]) = STACK[0x6AC];
  v71 = v68[172];
  v68[612] = v71;
  LODWORD(STACK[0x14EC]) = 101330291;
  v68[299] = v71;
  LODWORD(STACK[0x74C]) = STACK[0x14E8];
  v72 = v68[594];
  v68[300] = v68[610];
  v68[301] = v68[608];
  LODWORD(STACK[0x768]) = STACK[0x14DC];
  v68[302] = v68[607];
  v68[303] = v68[606];
  v68[304] = v68[604];
  v68[305] = v68[603];
  LODWORD(STACK[0x76C]) = STACK[0x14BC];
  v68[306] = v68[601];
  v68[307] = v68[598];
  v68[308] = v68[597];
  v73 = v68[580];
  v68[31] = v72;
  v68[32] = v73;
  LODWORD(STACK[0x788]) = STACK[0x14B8];
  v68[309] = v68[593];
  LODWORD(STACK[0x78C]) = STACK[0x149C];
  v68[310] = v68[592];
  LODWORD(STACK[0x790]) = STACK[0x146C];
  v68[613] = v68[299];
  LODWORD(STACK[0x1524]) = STACK[0x74C];
  v68[599] = v68[31];
  v68[616] = v68[300];
  v68[617] = v68[301];
  LODWORD(STACK[0x154C]) = STACK[0x768];
  v68[620] = v68[302];
  v68[622] = v68[303];
  v68[623] = v68[304];
  v68[624] = v68[305];
  LODWORD(STACK[0x1550]) = STACK[0x76C];
  v68[625] = v68[306];
  v68[626] = v68[307];
  v68[627] = v68[308];
  v68[609] = v73;
  LODWORD(STACK[0x1554]) = STACK[0x788];
  LODWORD(STACK[0x1574]) = STACK[0x78C];
  v68[629] = v68[310];
  LODWORD(STACK[0x1580]) = STACK[0x790];
  v68[630] = v68[309];
  v74 = (uint64_t (*)(void))(v66
                          - (v69
                           + ((v67 - 2184) | 0x44u)
                           - 93)
                          + *(_QWORD *)(v65 + 8 * ((v67 - 2184) | 0x44))
                          + 4);
  LODWORD(STACK[0x1584]) = 101330291;
  return v74();
}

void sub_19323E080(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;

  LODWORD(STACK[0x1804]) = a58;
  v59[715] = v59[43];
  LODWORD(STACK[0x1808]) = a57;
  v59[716] = v59[38];
  LODWORD(STACK[0x180C]) = a43;
  v60 = v59[63];
  v59[676] = v59[64];
  v59[717] = v59[35];
  v59[476] = 0;
  v59[687] = *(_QWORD *)(v58 + 8 * a1);
  v59[718] = v59[24];
  v59[719] = v59[12];
  LODWORD(STACK[0x1824]) = a35;
  v59[722] = *v59;
  v59[723] = a47;
  v59[725] = a41;
  v59[727] = v59[175];
  v59[729] = v59[174];
  v59[730] = v59[173];
  v59[692] = v60;
  LODWORD(STACK[0x1834]) = STACK[0x6AC];
  v59[731] = v59[172];
  JUMPOUT(0x19323E154);
}

uint64_t sub_19323E288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v41 = *(_QWORD **)(v40 + 656);
  *v41 = 0;
  v41[1] = 0;
  *(_QWORD *)(v40 + 672) = v41 + 1;
  v42 = a33(4096, 2241923698);
  **(_QWORD **)(v40 + 656) = v42;
  return (*(uint64_t (**)(void))(a39
                              + 8
                              * ((((((v39 | 0x6C) + 97) ^ (v42 == 0)) & 1)
                                * ((((v39 | 0x86C) + 57935644) | 0x14080D14) - 394009413)) ^ (v39 | 0x86C))))();
}

uint64_t sub_19323E310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  int v39;
  int v40;
  uint64_t v41;

  **(_DWORD **)(v41 + 672) = v40;
  *(_QWORD *)(v41 + 5864) = *(_QWORD *)(v41 + 656);
  LOBYTE(STACK[0x80E]) = 1;
  LODWORD(STACK[0x1844]) = v39;
  LODWORD(STACK[0x4E4]) = STACK[0x1844];
  LOBYTE(STACK[0x28B]) = STACK[0x80E];
  **(_QWORD **)(v41 + 1632) = *(_QWORD *)(v41 + 5864);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v41 + 640))(a1, a2, a3, a39);
}

uint64_t sub_19323E37C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  int v11;

  LODWORD(STACK[0x13F0]) = STACK[0x4CC];
  v10[573] = v10[79];
  LODWORD(STACK[0x13F4]) = STACK[0x4BC];
  v10[574] = v10[77];
  LODWORD(STACK[0x141C]) = STACK[0x4B8];
  v10[555] = v10[49];
  v10[578] = v10[75];
  v10[579] = v10[74];
  v10[582] = v10[72];
  LODWORD(STACK[0x1420]) = STACK[0x494];
  v10[584] = v10[71];
  v10[585] = v10[70];
  v10[586] = v10[68];
  v10[587] = v10[208];
  LODWORD(STACK[0x1424]) = v8;
  v10[588] = v10[207];
  v10[589] = v10[206];
  v10[575] = v10[47];
  LODWORD(STACK[0x1444]) = STACK[0x484];
  v10[591] = v10[205];
  v11 = (LOBYTE(STACK[0x28B]) * (v9 + a4 + 820)) ^ (v9 + a4 + 3364);
  LODWORD(STACK[0x1454]) = STACK[0x4E4];
  return (*(uint64_t (**)(void))(a8 + 8 * v11))();
}

uint64_t sub_19323E444@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2;
  int v3;
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t (*v8)(void);

  v5 = STACK[0x1090];
  LODWORD(STACK[0xA3C]) = STACK[0x1090];
  v6 = v4[476];
  v4[286] = v6;
  v7 = v5 > *(_DWORD *)(v6 + 8);
  LODWORD(STACK[0x1384]) = STACK[0x4CC];
  v4[560] = v4[79];
  LODWORD(STACK[0x1388]) = STACK[0x4BC];
  v4[561] = v4[77];
  LODWORD(STACK[0x138C]) = STACK[0x4B8];
  v4[544] = v4[49];
  v4[562] = v4[75];
  v4[563] = v4[74];
  v4[564] = v4[72];
  v4[565] = v4[71];
  v4[566] = v4[70];
  v4[567] = v4[68];
  v4[568] = v4[208];
  v4[569] = v4[207];
  v4[570] = v4[206];
  v4[551] = v4[47];
  LODWORD(STACK[0x13B8]) = STACK[0x484];
  v4[571] = v4[205];
  LODWORD(STACK[0x13AC]) = 101372955;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8
                                          * (int)((v7 * (v3 + ((a2 + 581 + v2) & 0x97FDFD9C) + 3159)) ^ (a2 + 581)))
                         - 4);
  LODWORD(STACK[0x13BC]) = 101372955;
  return v8();
}

void sub_19323E534()
{
  _QWORD *v0;
  int v1;

  LODWORD(STACK[0x19F4]) = STACK[0x4CC];
  LODWORD(STACK[0x1A2C]) = STACK[0x4BC];
  v0[784] = v0[77];
  LODWORD(STACK[0x1A44]) = STACK[0x4B8];
  v0[785] = v0[75];
  v0[786] = v0[74];
  v0[787] = v0[72];
  LODWORD(STACK[0x1A48]) = STACK[0x494];
  v0[788] = v0[71];
  v0[790] = v0[70];
  v0[791] = v0[68];
  v0[794] = v0[208];
  LODWORD(STACK[0x1A4C]) = v1;
  v0[795] = v0[205];
  v0[797] = v0[286];
  JUMPOUT(0x19323E5D8);
}

uint64_t sub_19323E734(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  unint64_t v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((((a1 - 417) | v11) - 3634) * (v12 > v8)) ^ a1))
                            - ((a1 + v9) & v10)
                            + 832))();
}

void sub_19323E768()
{
  JUMPOUT(0x19323E704);
}

uint64_t sub_19323E770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v68;
  uint64_t v70;
  uint64_t v71;

  v49[57] = v48;
  LODWORD(STACK[0x1B1C]) = STACK[0x62C];
  v49[816] = v49[140];
  LODWORD(STACK[0x1B2C]) = STACK[0x614];
  v49[817] = v49[138];
  LODWORD(STACK[0x1B44]) = STACK[0x610];
  v70 = v49[55];
  v49[818] = v49[137];
  v49[820] = v49[136];
  v49[822] = v49[134];
  LODWORD(STACK[0x1B48]) = STACK[0x60C];
  v49[823] = v49[133];
  v49[826] = v49[132];
  v49[827] = v49[131];
  v49[829] = v49[130];
  LODWORD(STACK[0x1B4C]) = STACK[0x5EC];
  v49[830] = v49[127];
  v49[831] = v49[142];
  v71 = v49[57];
  LODWORD(STACK[0x1B64]) = 101330305;
  v49[832] = v49[128];
  LODWORD(STACK[0x1BCC]) = 101330305;
  v50 = STACK[0x1BCC];
  v51 = v49[832];
  v52 = STACK[0x1B64];
  v53 = v49[831];
  v54 = v49[830];
  v55 = STACK[0x1B4C];
  v56 = v49[829];
  v57 = v49[827];
  v58 = v49[826];
  v59 = v49[823];
  v60 = LODWORD(STACK[0x1B48]);
  v61 = v49[822];
  v62 = v49[820];
  v63 = v49[818];
  v64 = STACK[0x1B44];
  v65 = v49[817];
  v66 = STACK[0x1B2C];
  v67 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v49[816];
  v68 = STACK[0x1B1C];
  LODWORD(STACK[0x12A0]) = STACK[0x1B1C];
  v49[537] = v67;
  LODWORD(STACK[0x12A4]) = v66;
  v49[538] = v65;
  LODWORD(STACK[0x12B4]) = v64;
  v49[518] = v70;
  v49[539] = v63;
  v49[542] = v62;
  v49[543] = v61;
  LODWORD(STACK[0x12D0]) = v60;
  v49[546] = v59;
  v49[549] = v58;
  v49[552] = v57;
  v49[553] = v56;
  v49[556] = v54;
  v49[557] = v53;
  v49[540] = v71;
  LODWORD(STACK[0x12D4]) = v52;
  v49[558] = v51;
  LODWORD(STACK[0x12FC]) = v50;
  LODWORD(STACK[0x1384]) = v68;
  v49[560] = v67;
  LODWORD(STACK[0x1388]) = v66;
  v49[561] = v65;
  LODWORD(STACK[0x138C]) = v64;
  v49[544] = v70;
  v49[562] = v63;
  v49[563] = v62;
  v49[564] = v61;
  v49[565] = v59;
  v49[566] = v58;
  v49[567] = v57;
  v49[568] = v56;
  LODWORD(STACK[0x13AC]) = v55;
  v49[569] = v54;
  v49[570] = v53;
  v49[551] = v71;
  LODWORD(STACK[0x13B8]) = v52;
  v49[571] = v51;
  LODWORD(STACK[0x13BC]) = v50;
  LODWORD(STACK[0x1904]) = v68;
  v49[748] = v67;
  LODWORD(STACK[0x1924]) = v66;
  v49[749] = v65;
  LODWORD(STACK[0x1928]) = v64;
  v49[750] = v63;
  v49[751] = v62;
  v49[753] = v61;
  LODWORD(STACK[0x192C]) = v60;
  v49[754] = v59;
  v49[755] = v58;
  v49[758] = v57;
  v49[759] = v56;
  LODWORD(STACK[0x1944]) = v55;
  v49[761] = v54;
  v49[764] = v53;
  LODWORD(STACK[0x1954]) = v52;
  v49[766] = v51;
  LODWORD(STACK[0x1958]) = v50;
  return v67(v58, v59, v60, HIDWORD(a38), v62, v63, v70, a39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v70,
           v71,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_19323E82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  _QWORD *v50;
  int v51;

  v50[57] = v49;
  LODWORD(STACK[0x1B1C]) = STACK[0x62C];
  v50[816] = v50[140];
  LODWORD(STACK[0x1B2C]) = STACK[0x614];
  v50[817] = v50[138];
  LODWORD(STACK[0x1B44]) = STACK[0x610];
  v50[818] = v50[137];
  v50[820] = v50[136];
  v50[822] = v50[134];
  LODWORD(STACK[0x1B48]) = STACK[0x60C];
  v50[823] = v50[133];
  v50[826] = v50[132];
  v50[827] = v50[131];
  v50[829] = v50[130];
  LODWORD(STACK[0x1B4C]) = STACK[0x5EC];
  v50[830] = v50[127];
  v50[831] = v50[142];
  LODWORD(STACK[0x1B64]) = 101330305;
  v50[832] = v50[128];
  v51 = LOBYTE(STACK[0x307]);
  LODWORD(STACK[0x1BCC]) = 101330305;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8 * (int)((v51 * (((107 * (v48 ^ 0x354)) ^ (a4 + 1989)) + ((v48 + 118753464) | 0x10681118))) ^ v48)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_19323E92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(_QWORD, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v48 = a33(v47[57], 2241923698);
  v47[143] = v48;
  LODWORD(STACK[0x1A74]) = STACK[0x62C];
  v47[799] = v47[140];
  LODWORD(STACK[0x1A94]) = STACK[0x614];
  v47[800] = v47[138];
  LODWORD(STACK[0x1AA4]) = STACK[0x610];
  v47[801] = v47[137];
  v47[803] = v47[136];
  v47[805] = v47[134];
  LODWORD(STACK[0x1ABC]) = STACK[0x60C];
  v47[806] = v47[133];
  v47[809] = v47[132];
  v47[810] = v47[131];
  v47[812] = v47[130];
  LODWORD(STACK[0x1AC0]) = STACK[0x5EC];
  v47[813] = v47[127];
  v47[814] = v47[142];
  LODWORD(STACK[0x1AC4]) = 101372955;
  v47[815] = 0;
  LODWORD(STACK[0x1ADC]) = 101330303;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a39 + 8 * ((6968 * ((((v46 - 2156) ^ (v46 - 1724) ^ (v48 == 0)) & 1) == 0)) ^ v46)))(v48, v49, v50, v51, v52, v53, v54, a39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

void sub_19323EA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v11 = **(_QWORD **)(v9 + 1016);
  v12 = (**(unsigned int **)(v9 + 1136) ^ 0xBDFFFB7FFFBCDE1FLL)
      + 0x727DD7FFDAFFC000
      + ((2 * **(unsigned int **)(v9 + 1136)) & 0x1FF79BC3ELL);
  v13 = ((v12 & 0x80254361E1) << (v8 + 101)) & (v12 ^ 0x5A78E4D9143359F8) ^ v12 & 0x80254361E1;
  v14 = ((2 * (v12 ^ 0x5A78E4D95EB59AFALL)) ^ 0x2A0510B2F7EDF636) & (v12 ^ 0x5A78E4D95EB59AFALL) ^ (2 * (v12 ^ 0x5A78E4D95EB59AFALL)) & 0x95FAC8597BF6FB1ALL;
  v15 = (v14 ^ 0x940A484833048200) & (4 * v13) ^ v13;
  LODWORD(STACK[0x844]) = STACK[0x62C];
  *(_QWORD *)(v9 + 7080) = *(_QWORD *)(v9 + 1120);
  LODWORD(STACK[0x87C]) = STACK[0x614];
  v16 = ((4 * (v14 ^ 0x940A484908120909)) ^ 0x57EB2165EFDBEC6CLL) & (v14 ^ 0x940A484908120909) ^ (4 * (v14 ^ 0x940A484908120909)) & 0x95FAC8597BF6FB18;
  *(_QWORD *)(v9 + 7088) = *(_QWORD *)(v9 + 1104);
  LODWORD(STACK[0x888]) = STACK[0x610];
  v17 = (v16 ^ 0x15EA00416BD2E800) & (16 * v15) ^ v15;
  *(_QWORD *)(v9 + 88) = *(_QWORD *)(v9 + 440);
  *(_QWORD *)(v9 + 7096) = *(_QWORD *)(v9 + 1096);
  *(_QWORD *)(v9 + 7104) = *(_QWORD *)(v9 + 1088);
  v18 = ((16 * (v16 ^ 0x8010C81810241313)) ^ 0x5FAC8597BF6FB1B0) & (v16 ^ 0x8010C81810241313) ^ (16 * (v16 ^ 0x8010C81810241313)) & 0x95FAC8597BF6FB10;
  *(_QWORD *)(v9 + 7112) = *(_QWORD *)(v9 + 1072);
  LODWORD(STACK[0x88C]) = STACK[0x60C];
  *(_QWORD *)(v9 + 7120) = *(_QWORD *)(v9 + 1064);
  *(_QWORD *)(v9 + 7128) = *(_QWORD *)(v9 + 1056);
  v19 = *(_QWORD *)(a8 + 8 * v8);
  *(_QWORD *)(v9 + 7136) = *(_QWORD *)(v9 + 1048);
  v20 = (((v18 ^ 0x8052484840904A0BLL) << 8) ^ 0xFAC8597BF6FB1B00) & (v18 ^ 0x8052484840904A0BLL) ^ ((v18 ^ 0x8052484840904A0BLL) << 8) & 0x95FAC8597BF6FB00;
  *(_QWORD *)(v9 + 7144) = *(_QWORD *)(v9 + 1040);
  LODWORD(STACK[0x8C4]) = STACK[0x5EC];
  *(_QWORD *)(v9 + 1688) = *(_QWORD *)(v9 + 1016);
  *(_QWORD *)(v9 + 1696) = *(_QWORD *)(v9 + 1136);
  v21 = v12 ^ (2
             * (v20 & 0x48507B1200000000 ^ (v18 ^ 0x15A880113B66B100) & (v17 << 8) ^ v17 ^ (v20 ^ 0x10C8485972F20000) & (((v18 ^ 0x15A880113B66B100) & (v17 << 8) ^ v17) << 16))) ^ 0x3428CDECA068E984;
  v22 = *(_QWORD *)(v9 + 456);
  *(_QWORD *)(v9 + 104) = v19 - 8;
  *(_QWORD *)(v9 + 112) = v22;
  LODWORD(STACK[0x8D0]) = v10;
  v23 = *(_QWORD *)(v9 + 1144);
  *(_QWORD *)(v9 + 1704) = v23;
  *(_QWORD *)(v9 + 1720) = v23;
  *(_QWORD *)(v9 + 1736) = v11;
  *(_QWORD *)(v9 + 120) = 0x5D952DACE41797ELL;
  *(_QWORD *)(v9 + 128) = v21;
  JUMPOUT(0x19323F0ACLL);
}

uint64_t sub_19323ED20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  LODWORD(STACK[0x70C]) = STACK[0x13BC];
  v9[287] = v9[571];
  LODWORD(STACK[0x718]) = STACK[0x13B8];
  v11 = v9[551];
  v9[288] = v9[570];
  v9[289] = v9[569];
  LODWORD(STACK[0x71C]) = STACK[0x13AC];
  v9[290] = v9[568];
  v9[291] = v9[567];
  v9[292] = v9[566];
  v9[293] = v9[565];
  v9[294] = v9[564];
  v9[295] = v9[563];
  v9[296] = v9[562];
  v12 = v9[544];
  v9[29] = v11;
  v9[30] = v12;
  LODWORD(STACK[0x728]) = STACK[0x138C];
  v9[297] = v9[561];
  LODWORD(STACK[0x72C]) = STACK[0x1388];
  v9[298] = v9[560];
  LODWORD(v11) = LODWORD(STACK[0x70C]) != v10;
  LODWORD(STACK[0x748]) = STACK[0x1384];
  return (*(uint64_t (**)(void))(a8 + 8 * (int)((v11 | (4 * v11)) ^ (v8 - 394005571))))();
}

uint64_t sub_19323EDEC@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t (*v17)(void);

  v4 = v2[476];
  v2[853] = v4;
  v2[854] = v2[287];
  v5 = STACK[0x718];
  v6 = v4 == 0;
  LODWORD(STACK[0x1C90]) = STACK[0x718];
  v7 = v2[29];
  v2[855] = v2[288];
  v2[856] = v2[289];
  v8 = STACK[0x71C];
  LODWORD(STACK[0x1C94]) = STACK[0x71C];
  v2[857] = v2[290];
  v2[858] = v2[291];
  v2[859] = v2[292];
  v2[860] = v2[293];
  v9 = STACK[0x70C];
  LODWORD(STACK[0x1CAC]) = STACK[0x70C];
  v2[862] = v2[294];
  v2[864] = v2[296];
  v11 = v2[29];
  v10 = v2[30];
  v2[7] = v7;
  v2[8] = v10;
  LODWORD(v10) = STACK[0x728];
  LODWORD(STACK[0x1CD4]) = STACK[0x728];
  v2[865] = v2[297];
  v12 = STACK[0x72C];
  LODWORD(STACK[0x1CE4]) = STACK[0x72C];
  v2[867] = v2[298];
  v13 = STACK[0x748];
  LODWORD(STACK[0x1CF8]) = STACK[0x748];
  v14 = *(_QWORD *)(a1 + 8 * ((a2 + 39) | 5));
  v2[852] = v14;
  v2[868] = v14;
  v2[870] = v2[287];
  LODWORD(STACK[0x1CFC]) = v5;
  v2[871] = v2[288];
  v2[872] = v2[289];
  LODWORD(STACK[0x1D14]) = v8;
  v2[873] = v2[290];
  v2[875] = v2[291];
  v2[877] = v2[292];
  v2[878] = v2[293];
  LODWORD(STACK[0x810]) = v9;
  v2[880] = v2[294];
  v2[881] = v2[296];
  v15 = v2[30];
  v2[9] = v11;
  v2[10] = v15;
  LODWORD(STACK[0x814]) = v10;
  v2[883] = v2[297];
  v16 = !v6;
  LODWORD(STACK[0x834]) = v12;
  v2[884] = v2[298];
  v17 = (uint64_t (*)(void))(*(_QWORD *)(a1
                                      + 8
                                      * ((v16 * ((((a2 + 39) | 5) - 679624966) & 0x3FFE5DDC ^ v3)) ^ ((a2 + 39) | 0x825)))
                          - ((((a2 + 39) | 5) - 824960142) & 0x312BEFF9 ^ 0xBB9));
  LODWORD(STACK[0x840]) = v13;
  return v17();
}

void sub_19323EFA0(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = **(_QWORD **)(v2 + 3808);
  v5 = *(_QWORD *)(v2 + 3800);
  v6 = (a2 + 928)
     + LODWORD(STACK[0x1090])
     - 0x4D58EB37AD4779BLL
     - ((2 * LODWORD(STACK[0x1090])) & 0x10A5710CALL)
     - 953;
  v7 = *(_QWORD *)(a1 + 8 * (a2 + 345)) - 4;
  LODWORD(STACK[0x844]) = STACK[0x748];
  *(_QWORD *)(v2 + 7080) = *(_QWORD *)(v2 + 2384);
  LODWORD(STACK[0x87C]) = STACK[0x72C];
  *(_QWORD *)(v2 + 7088) = *(_QWORD *)(v2 + 2376);
  LODWORD(STACK[0x888]) = STACK[0x728];
  v8 = *(_QWORD *)(v2 + 232);
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(v2 + 240);
  *(_QWORD *)(v2 + 7096) = *(_QWORD *)(v2 + 2368);
  *(_QWORD *)(v2 + 7104) = *(_QWORD *)(v2 + 2360);
  *(_QWORD *)(v2 + 7112) = *(_QWORD *)(v2 + 2352);
  LODWORD(STACK[0x88C]) = v3;
  *(_QWORD *)(v2 + 7120) = *(_QWORD *)(v2 + 2344);
  *(_QWORD *)(v2 + 7128) = *(_QWORD *)(v2 + 2336);
  *(_QWORD *)(v2 + 7136) = *(_QWORD *)(v2 + 2328);
  *(_QWORD *)(v2 + 7144) = *(_QWORD *)(v2 + 2320);
  LODWORD(STACK[0x8C4]) = STACK[0x71C];
  *(_QWORD *)(v2 + 1688) = *(_QWORD *)(v2 + 2312);
  *(_QWORD *)(v2 + 1696) = *(_QWORD *)(v2 + 2304);
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 112) = v8;
  LODWORD(STACK[0x8D0]) = STACK[0x718];
  *(_QWORD *)(v2 + 1704) = *(_QWORD *)(v2 + 2296);
  *(_QWORD *)(v2 + 1720) = v4;
  *(_QWORD *)(v2 + 1736) = v5;
  *(_QWORD *)(v2 + 120) = 0x5D952DACE41797ELL;
  *(_QWORD *)(v2 + 128) = v6;
  JUMPOUT(0x19323F0A4);
}

uint64_t sub_19323F1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  int v33;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((229 * ((LODWORD(STACK[0x368]) ^ 0x852B8865) == ((v32 - v33 - 1570346977) & 0x461D7F7F) - 3603)) ^ v32)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_19323F224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  int v41;
  uint64_t v42;

  *(_QWORD *)(v42 + 536) = *(_QWORD *)(v42 + 496) - 0x7C539198C63B88BBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (v41 | (32
                                                * (a41 != ((((v41 - 2126970315) | 0x3C000294) + 1564824667) ^ 0x1A7E6721)))))
                            - 8))();
}

uint64_t sub_19323F29C@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v3 + 1120335377;
  v4[18] = v2;
  v6 = v2 - 1;
  v7 = (a2 & (2 * v6)) + (v6 ^ 0x767A3EBDF7FA0F3DLL);
  *(_BYTE *)(v4[171] + v7 + v4[67]) = *(_BYTE *)(v4[170] + ((v5 + 57149487) | 0x14140C00u) + v7 - 0x767A3EBE0F762C59);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((911 * (v6 == 0)) ^ v5)) - 12))();
}

void sub_19323F380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void (*a32)(_QWORD, _QWORD, _QWORD),uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a64;
  int a65;
  unsigned int *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  unsigned int *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;

  v67 = v66[476];
  *(_DWORD *)(v67 + 8) = STACK[0x1090];
  *(_DWORD *)(v67 + 12) = 0;
  LODWORD(STACK[0x13F0]) = a65;
  v66[573] = v66[43];
  LODWORD(STACK[0x13F4]) = a64;
  v66[574] = v66[38];
  LODWORD(STACK[0x141C]) = a50;
  v68 = v66[63];
  v66[555] = v66[64];
  v66[578] = v66[35];
  v66[579] = v67;
  v66[582] = v66[12];
  LODWORD(STACK[0x1420]) = a42;
  v66[584] = *v66;
  v66[585] = a54;
  v66[586] = a48;
  v66[587] = v66[175];
  LODWORD(STACK[0x1424]) = STACK[0x6CC];
  v66[588] = v66[174];
  v66[589] = v66[173];
  v66[575] = v68;
  LODWORD(STACK[0x1444]) = STACK[0x6AC];
  v66[591] = v66[172];
  LODWORD(STACK[0x1454]) = a42;
  v88 = STACK[0x1444];
  v86 = v66[589];
  v87 = v66[575];
  v85 = v66[588];
  v84 = STACK[0x1424];
  v82 = v66[586];
  v83 = v66[587];
  v80 = v66[584];
  v81 = v66[585];
  v79 = STACK[0x1420];
  v77 = v66[579];
  v78 = v66[582];
  v76 = v66[578];
  v69 = v66[555];
  v70 = STACK[0x141C];
  v71 = v66[574];
  v72 = STACK[0x13F4];
  v73 = v66[573];
  v74 = v65;
  v75 = STACK[0x13F0];
  a32(*v74, v66[475], LODWORD(STACK[0x1090]));
  LODWORD(STACK[0x146C]) = v75;
  v66[592] = v73;
  LODWORD(STACK[0x149C]) = v72;
  v66[593] = v71;
  LODWORD(STACK[0x14B8]) = v70;
  v66[580] = v69;
  v66[597] = v76;
  v66[598] = v77;
  v66[601] = v78;
  LODWORD(STACK[0x14BC]) = v79;
  v66[603] = v80;
  v66[604] = v81;
  v66[606] = v82;
  v66[607] = v83;
  LODWORD(STACK[0x14DC]) = v84;
  v66[608] = v85;
  v66[610] = v86;
  v66[594] = v87;
  LODWORD(STACK[0x14E8]) = v88;
  JUMPOUT(0x19323FD4CLL);
}

void sub_19323F434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void (*a36)(_QWORD),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a64;
  int a65;
  uint64_t v65;
  _QWORD *v66;
  int v67;

  v66 = *(_QWORD **)(v65 + 1392);
  a36(*v66);
  *v66 = *(_QWORD *)(v65 + 1376);
  **(_DWORD **)(v65 + 1384) = *(_QWORD *)(v65 + 504);
  LODWORD(STACK[0x1A74]) = a65;
  *(_QWORD *)(v65 + 6392) = *(_QWORD *)(v65 + 344);
  LODWORD(STACK[0x1A94]) = a64;
  *(_QWORD *)(v65 + 6400) = *(_QWORD *)(v65 + 304);
  LODWORD(STACK[0x1AA4]) = a50;
  *(_QWORD *)(v65 + 6408) = *(_QWORD *)(v65 + 280);
  *(_QWORD *)(v65 + 6424) = *(_QWORD *)(v65 + 192);
  *(_QWORD *)(v65 + 6440) = *(_QWORD *)(v65 + 96);
  LODWORD(STACK[0x1ABC]) = a42;
  *(_QWORD *)(v65 + 6448) = *(_QWORD *)v65;
  *(_QWORD *)(v65 + 6472) = a54;
  *(_QWORD *)(v65 + 6480) = a48;
  *(_QWORD *)(v65 + 6496) = *(_QWORD *)(v65 + 1400);
  LODWORD(STACK[0x1AC0]) = STACK[0x6CC];
  *(_QWORD *)(v65 + 6504) = *(_QWORD *)(v65 + 1392);
  *(_QWORD *)(v65 + 6512) = *(_QWORD *)(v65 + 1384);
  v67 = STACK[0x6AC];
  LODWORD(STACK[0x1AC4]) = STACK[0x6AC];
  *(_QWORD *)(v65 + 6520) = *(_QWORD *)(v65 + 1376);
  LODWORD(STACK[0x1ADC]) = v67;
  JUMPOUT(0x19323F508);
}

uint64_t sub_19323F700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  _QWORD *v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  _BOOL8 v55;
  uint64_t (*v56)(_BOOL8, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v48 = STACK[0x1958];
  v46[107] = v46[766];
  LODWORD(STACK[0x570]) = STACK[0x1954];
  v46[109] = v46[764];
  v46[111] = v46[761];
  LODWORD(STACK[0x574]) = STACK[0x1944];
  v46[112] = v46[759];
  v46[114] = v46[758];
  v46[116] = v46[755];
  v46[117] = v46[754];
  LODWORD(STACK[0x588]) = STACK[0x192C];
  v46[119] = v46[753];
  v46[121] = v46[751];
  v49 = v46[750];
  v46[123] = v49;
  v46[53] = a44;
  v46[54] = a43;
  v50 = STACK[0x1928];
  LODWORD(STACK[0x58C]) = STACK[0x1928];
  v51 = v46[749];
  v46[124] = v51;
  v52 = STACK[0x1924];
  LODWORD(STACK[0x5BC]) = STACK[0x1924];
  v53 = v46[748];
  v46[125] = v53;
  v54 = STACK[0x1904];
  LODWORD(STACK[0x5DC]) = STACK[0x1904];
  v55 = v48 == v47;
  LODWORD(STACK[0x195C]) = v54;
  v46[767] = v53;
  LODWORD(STACK[0x196C]) = v52;
  v46[770] = v51;
  LODWORD(STACK[0x1984]) = v50;
  v46[771] = v49;
  v46[772] = v46[121];
  v46[774] = v46[119];
  LODWORD(STACK[0x1988]) = STACK[0x588];
  v46[775] = v46[117];
  v46[776] = v46[116];
  v46[777] = v46[114];
  v46[778] = v46[112];
  LODWORD(STACK[0x198C]) = STACK[0x574];
  v46[779] = v46[111];
  v46[781] = v46[109];
  LODWORD(STACK[0x19AC]) = STACK[0x570];
  v46[783] = v46[107];
  v56 = (uint64_t (*)(_BOOL8, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((v55 * (((v44 - 1927873377) & 0x5B6CEFDFu) - 932)) ^ (v45 + v44 + 2447))) - 8);
  LODWORD(STACK[0x19E4]) = v48;
  return v56(v55, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_19323F868@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  int v33;
  uint64_t v34;
  _DWORD *v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v59;
  uint64_t v60;

  v34 = **(_QWORD **)(v32 + 936);
  v35 = *(_DWORD **)(v32 + 912);
  v36 = STACK[0x5DC];
  v37 = LODWORD(STACK[0x5DC])
      - ((((a1 + 1073518083) & 0xD77F7D7D) + 508331812) & (2 * LODWORD(STACK[0x5DC])))
      + 451170848;
  v38 = ((2 * *v35) & 0x75FFFB3E) + (*v35 ^ 0xBAFFFD9F) + 1157628513;
  *(_BYTE *)(v34 + v38) = HIBYTE(v37) ^ 0x1A;
  *(_BYTE *)(v34 + v38 + 1) = BYTE2(v37) ^ 0xE4;
  *(_BYTE *)(v34 + v38 + 2) = (((BYTE1(v37) ^ 0x52) - 2 * ((BYTE1(v37) ^ 0x52) & 7 ^ BYTE1(v37) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v34 + v38 + 3) = v37 ^ 0x20;
  *v35 += 4;
  LODWORD(STACK[0x195C]) = v36;
  *(_QWORD *)(v32 + 6136) = *(_QWORD *)(v32 + 1000);
  LODWORD(STACK[0x196C]) = STACK[0x5BC];
  *(_QWORD *)(v32 + 6160) = *(_QWORD *)(v32 + 992);
  LODWORD(STACK[0x1984]) = STACK[0x58C];
  v39 = *(_QWORD *)(v32 + 424);
  v59 = *(_QWORD *)(v32 + 432);
  *(_QWORD *)(v32 + 6168) = *(_QWORD *)(v32 + 984);
  *(_QWORD *)(v32 + 6176) = *(_QWORD *)(v32 + 968);
  *(_QWORD *)(v32 + 6192) = *(_QWORD *)(v32 + 952);
  LODWORD(STACK[0x1988]) = STACK[0x588];
  *(_QWORD *)(v32 + 6200) = *(_QWORD *)(v32 + 936);
  *(_QWORD *)(v32 + 6208) = *(_QWORD *)(v32 + 928);
  *(_QWORD *)(v32 + 6216) = *(_QWORD *)(v32 + 912);
  *(_QWORD *)(v32 + 6224) = *(_QWORD *)(v32 + 896);
  LODWORD(STACK[0x198C]) = STACK[0x574];
  *(_QWORD *)(v32 + 6232) = *(_QWORD *)(v32 + 888);
  *(_QWORD *)(v32 + 6248) = *(_QWORD *)(v32 + 872);
  v60 = v39;
  LODWORD(STACK[0x19AC]) = STACK[0x570];
  *(_QWORD *)(v32 + 6264) = *(_QWORD *)(v32 + 856);
  LODWORD(STACK[0x19E4]) = v33;
  v40 = STACK[0x19E4];
  v41 = *(_QWORD *)(v32 + 6264);
  LODWORD(v34) = STACK[0x19AC];
  v42 = *(_QWORD *)(v32 + 6248);
  v43 = *(_QWORD *)(v32 + 6232);
  v44 = STACK[0x198C];
  v45 = *(_QWORD *)(v32 + 6224);
  v46 = *(_QWORD *)(v32 + 6216);
  v47 = *(_QWORD *)(v32 + 6208);
  v48 = *(_QWORD *)(v32 + 6200);
  v49 = LODWORD(STACK[0x1988]);
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 6192);
  v51 = *(_QWORD *)(v32 + 6176);
  v52 = *(_QWORD *)(v32 + 6168);
  v53 = LODWORD(STACK[0x1984]);
  v54 = *(_QWORD *)(v32 + 6160);
  v55 = STACK[0x196C];
  v56 = *(_QWORD *)(v32 + 6136);
  v57 = STACK[0x195C];
  LODWORD(STACK[0x10D4]) = STACK[0x195C];
  *(_QWORD *)(v32 + 3824) = v56;
  LODWORD(STACK[0x110C]) = v55;
  *(_QWORD *)(v32 + 3832) = v54;
  LODWORD(STACK[0x1134]) = v53;
  *(_QWORD *)(v32 + 3736) = v59;
  *(_QWORD *)(v32 + 3864) = v52;
  *(_QWORD *)(v32 + 3872) = v51;
  *(_QWORD *)(v32 + 3896) = v50;
  LODWORD(STACK[0x1138]) = v49;
  *(_QWORD *)(v32 + 3912) = v48;
  *(_QWORD *)(v32 + 3928) = v47;
  *(_QWORD *)(v32 + 3936) = v46;
  *(_QWORD *)(v32 + 3944) = v45;
  LODWORD(STACK[0x113C]) = v44;
  *(_QWORD *)(v32 + 3952) = v43;
  *(_QWORD *)(v32 + 3960) = v42;
  *(_QWORD *)(v32 + 3840) = v60;
  LODWORD(STACK[0x115C]) = v34;
  *(_QWORD *)(v32 + 3968) = v41;
  LODWORD(STACK[0x116C]) = v40;
  LODWORD(STACK[0x1170]) = v57;
  *(_QWORD *)(v32 + 3984) = v56;
  LODWORD(STACK[0x1174]) = v55;
  *(_QWORD *)(v32 + 3992) = v54;
  LODWORD(STACK[0x1184]) = v53;
  *(_QWORD *)(v32 + 3880) = v59;
  *(_QWORD *)(v32 + 4000) = v52;
  *(_QWORD *)(v32 + 4032) = v51;
  *(_QWORD *)(v32 + 4040) = v50;
  LODWORD(STACK[0x11A4]) = v49;
  *(_QWORD *)(v32 + 4064) = v48;
  *(_QWORD *)(v32 + 4088) = v47;
  *(_QWORD *)(v32 + 4112) = v46;
  *(_QWORD *)(v32 + 4120) = v45;
  LODWORD(STACK[0x11A8]) = v44;
  *(_QWORD *)(v32 + 4152) = v43;
  *(_QWORD *)(v32 + 4160) = v42;
  *(_QWORD *)(v32 + 4008) = v60;
  LODWORD(STACK[0x11AC]) = v34;
  *(_QWORD *)(v32 + 4168) = v41;
  LODWORD(STACK[0x11D4]) = v40;
  LODWORD(STACK[0x120C]) = v57;
  *(_QWORD *)(v32 + 4184) = v56;
  LODWORD(STACK[0x1244]) = v55;
  *(_QWORD *)(v32 + 4192) = v54;
  LODWORD(STACK[0x1268]) = v53;
  *(_QWORD *)(v32 + 4048) = v59;
  *(_QWORD *)(v32 + 4200) = v52;
  *(_QWORD *)(v32 + 4208) = v51;
  *(_QWORD *)(v32 + 4216) = v50;
  LODWORD(STACK[0x126C]) = v49;
  *(_QWORD *)(v32 + 4224) = v48;
  *(_QWORD *)(v32 + 4240) = v47;
  *(_QWORD *)(v32 + 4248) = v46;
  *(_QWORD *)(v32 + 4256) = v45;
  LODWORD(STACK[0x128C]) = v44;
  *(_QWORD *)(v32 + 4264) = v43;
  *(_QWORD *)(v32 + 4272) = v42;
  *(_QWORD *)(v32 + 4104) = v60;
  LODWORD(STACK[0x1298]) = v34;
  *(_QWORD *)(v32 + 4280) = v41;
  LODWORD(STACK[0x129C]) = v40;
  return v50(v47, v48, v49, HIDWORD(a31), v52, v59, v53, a32, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_19323FB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a66;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t (*v91)(void);

  v69 = v66 + a39 + 1386;
  **(_DWORD **)(v67 + 1776) = (v69 ^ 0xF9F52E93) + LODWORD(STACK[0x10B4]);
  LODWORD(STACK[0x167C]) = a66;
  *(_QWORD *)(v67 + 5264) = *(_QWORD *)(v67 + 344);
  *(_QWORD *)(v67 + 5280) = *(_QWORD *)(v67 + 304);
  LODWORD(STACK[0x1680]) = a51;
  v70 = *(_QWORD *)(v67 + 504);
  *(_QWORD *)(v67 + 5056) = *(_QWORD *)(v67 + 512);
  *(_QWORD *)(v67 + 5288) = *(_QWORD *)(v67 + 280);
  *(_QWORD *)(v67 + 5296) = *(_QWORD *)(v67 + 192);
  *(_QWORD *)(v67 + 5304) = *(_QWORD *)(v67 + 96);
  LODWORD(STACK[0x1684]) = a43;
  *(_QWORD *)(v67 + 5312) = *(_QWORD *)v67;
  *(_QWORD *)(v67 + 5336) = a55;
  *(_QWORD *)(v67 + 5344) = a49;
  *(_QWORD *)(v67 + 5352) = *(_QWORD *)(v67 + 1400);
  LODWORD(STACK[0x1690]) = STACK[0x6CC];
  *(_QWORD *)(v67 + 5384) = *(_QWORD *)(v67 + 1392);
  *(_QWORD *)(v67 + 5400) = *(_QWORD *)(v67 + 1384);
  *(_QWORD *)(v67 + 5096) = v70;
  LODWORD(STACK[0x1694]) = STACK[0x6AC];
  *(_QWORD *)(v67 + 5416) = *(_QWORD *)(v67 + 1376);
  LODWORD(STACK[0x16DC]) = v68;
  v71 = STACK[0x16DC];
  v72 = *(_QWORD *)(v67 + 5416);
  v73 = STACK[0x1694];
  v74 = *(_QWORD *)(v67 + 5096);
  v75 = *(_QWORD *)(v67 + 5400);
  v76 = *(_QWORD *)(v67 + 5384);
  v77 = STACK[0x1690];
  v78 = *(_QWORD *)(v67 + 5352);
  v79 = *(_QWORD *)(v67 + 5344);
  v80 = *(_QWORD *)(v67 + 5336);
  v81 = *(_QWORD *)(v67 + 5312);
  v82 = STACK[0x1684];
  v83 = *(_QWORD *)(v67 + 5304);
  v84 = *(_QWORD *)(v67 + 5296);
  v85 = *(_QWORD *)(v67 + 5288);
  v86 = *(_QWORD *)(v67 + 5056);
  v87 = STACK[0x1680];
  v88 = *(_QWORD *)(v67 + 5280);
  v89 = *(_QWORD *)(v67 + 5264);
  v90 = STACK[0x167C];
  LODWORD(STACK[0x1704]) = STACK[0x16DC];
  *(_QWORD *)(v67 + 5424) = v72;
  LODWORD(STACK[0x1708]) = v73;
  *(_QWORD *)(v67 + 5208) = v74;
  *(_QWORD *)(v67 + 5432) = v75;
  *(_QWORD *)(v67 + 5440) = v76;
  LODWORD(STACK[0x170C]) = v77;
  *(_QWORD *)(v67 + 5448) = v78;
  *(_QWORD *)(v67 + 5456) = v79;
  *(_QWORD *)(v67 + 5472) = v80;
  *(_QWORD *)(v67 + 5480) = v81;
  LODWORD(STACK[0x172C]) = v82;
  *(_QWORD *)(v67 + 5488) = v83;
  *(_QWORD *)(v67 + 5520) = v84;
  *(_QWORD *)(v67 + 5528) = v85;
  *(_QWORD *)(v67 + 5248) = v86;
  LODWORD(STACK[0x1738]) = v87;
  *(_QWORD *)(v67 + 5552) = v88;
  *(_QWORD *)(v67 + 5568) = v89;
  LODWORD(STACK[0x173C]) = v90;
  LODWORD(STACK[0x1774]) = v90;
  *(_QWORD *)(v67 + 5576) = v89;
  LODWORD(STACK[0x179C]) = v71;
  *(_QWORD *)(v67 + 5584) = v88;
  LODWORD(STACK[0x17A0]) = v87;
  *(_QWORD *)(v67 + 5320) = v86;
  *(_QWORD *)(v67 + 5592) = v85;
  *(_QWORD *)(v67 + 5600) = v83;
  LODWORD(STACK[0x17A4]) = v82;
  *(_QWORD *)(v67 + 5608) = v81;
  *(_QWORD *)(v67 + 5624) = v80;
  *(_QWORD *)(v67 + 5632) = v79;
  *(_QWORD *)(v67 + 5640) = v78;
  LODWORD(STACK[0x17C4]) = v77;
  *(_QWORD *)(v67 + 5672) = v76;
  *(_QWORD *)(v67 + 5680) = v75;
  *(_QWORD *)(v67 + 5360) = v74;
  LODWORD(STACK[0x17D0]) = v73;
  v91 = (uint64_t (*)(void))(*(_QWORD *)(a40 + 8 * ((2618 * (v84 == 0)) ^ v69)) - (((v66 + a39 + 52) | 1u) ^ 0x45));
  *(_QWORD *)(v67 + 5704) = v72;
  return v91();
}

uint64_t sub_19323FECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  _QWORD *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v54[631] = v54[299];
  LODWORD(STACK[0x15BC]) = STACK[0x74C];
  v56 = v54[32];
  v54[614] = v54[31];
  v54[635] = v54[300];
  v54[636] = v54[301];
  LODWORD(STACK[0x15E4]) = STACK[0x768];
  v54[639] = v54[302];
  v54[641] = v54[303];
  v54[642] = v54[304];
  v54[643] = v54[305];
  LODWORD(STACK[0x15E8]) = STACK[0x76C];
  v54[644] = v54[306];
  v54[645] = v54[307];
  v54[646] = v54[308];
  v54[618] = v56;
  LODWORD(STACK[0x15EC]) = STACK[0x788];
  LODWORD(STACK[0x160C]) = STACK[0x78C];
  v54[648] = v54[310];
  LODWORD(STACK[0x1618]) = STACK[0x790];
  v57 = v54[309];
  LODWORD(STACK[0x3E4]) = STACK[0x1618];
  v54[323] = v54[648];
  LODWORD(STACK[0x3F4]) = STACK[0x160C];
  LODWORD(STACK[0x40C]) = STACK[0x15EC];
  v54[37] = v54[618];
  v54[324] = v54[646];
  v54[325] = v54[645];
  v54[326] = v54[644];
  v58 = v54[325];
  LODWORD(STACK[0x41C]) = STACK[0x15E8];
  v54[327] = v54[643];
  v54[328] = v54[642];
  v54[329] = v54[641];
  v54[330] = v54[639];
  LODWORD(STACK[0x434]) = STACK[0x15E4];
  v54[331] = v54[636];
  v54[176] = v54[635];
  v54[39] = v54[614];
  LODWORD(STACK[0x438]) = STACK[0x15BC];
  v54[178] = v54[631];
  LODWORD(STACK[0x161C]) = v53;
  v59 = *(_QWORD *)(a39 + 8 * v53);
  v54[180] = v58 + 12;
  v54[182] = v58 + 8;
  v60 = (v55 + v53 + 2427 - 854) + v59 - 394009892;
  v54[649] = v57;
  v54[650] = &STACK[0x10C4];
  v54[833] = v57;
  v54[1] = v60;
  v54[834] = &STACK[0x10C4];
  v54[144] = &STACK[0x10C4];
  v54[147] = v57;
  v54[148] = v60;
  LOBYTE(STACK[0x80F]) = 0;
  LODWORD(STACK[0x1BEC]) = 101330305;
  return ((uint64_t (*)(unint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a39 + 8 * ((1019 * ((((v55 + v53 + 123 - 86) ^ (v55 - 42)) ^ (v58 == 0)) & 1)) ^ (v55 + v53 + 2427 - 394009383))) - 8))(&STACK[0x10C4], (v55 + 470), 3900957424, a39, 1, 6293, 3674486271, 394008193, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_19324049C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v53;
  _BOOL4 v54;

  v50 = **(unsigned int **)(v48 + 1440);
  LODWORD(STACK[0x638]) = v50;
  v51 = (v50 ^ v39) + v44 + ((v50 << (v49 - a3 - 63 + v40)) & v41);
  v52 = (**(unsigned int **)(v48 + 1456) ^ v42) + v45 + (v43 & (2 * **(unsigned int **)(v48 + 1456)));
  v53 = v51 < a7;
  v54 = v51 > v52;
  if (v53 != v52 < a7)
    v54 = v53;
  LODWORD(STACK[0x1BEC]) = v47;
  return ((uint64_t (*)(void))(*(_QWORD *)(a39 + 8 * ((!v54 * v46) ^ v49)) - 8))();
}

uint64_t sub_193240524(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  v12 = **(_QWORD **)(v9 + 2600);
  v13 = ((2 * LODWORD(STACK[0x638])) & 0x7D0FDDFC) + (LODWORD(STACK[0x638]) ^ 0x3E87EEFE) - 1049095934;
  v14 = (*(unsigned __int8 *)(v12 + v13) << (a3 + (v10 ^ (a8 - 42)) + 12))
      - (*(unsigned __int8 *)(v12 + v13) << 25)
      - 0x1000000;
  v15 = *(unsigned __int8 *)(v12 + v13 + 2);
  v16 = v14 | (*(unsigned __int8 *)(v12 + v13 + 1) << 16) | (((v15 + 4420934 - ((2 * v15) & 0x4C)) << 8) - 0x2000) ^ 0x43752600;
  LODWORD(v12) = *(unsigned __int8 *)(v12 + v13 + 3);
  v17 = (v16 ^ 0x5A6FFF) & ((v12 - 1636428685 - ((2 * v12) & 0xE6)) ^ 0x82C7F04) ^ v16 & 0x69A59400;
  v18 = (v17 & v11 ^ 0x12494387) + (v17 ^ 0x28A41408) - ((v17 ^ 0x28A41408) & v11);
  **(_DWORD **)(v9 + 1152) = (((v18 ^ 0x1FBDF440) - 789305555) ^ ((v18 ^ 0x7B8AD7DE) - 1262287693) ^ ((v18 ^ 0x81840F66) + 1322114059))
                           - 619719546;
  **(_DWORD **)(v9 + 1440) += 4;
  LOBYTE(STACK[0x80F]) = a5;
  LODWORD(STACK[0x1BEC]) = v8;
  LODWORD(STACK[0x63C]) = STACK[0x1BEC];
  LOBYTE(STACK[0x35F]) = STACK[0x80F];
  *(_QWORD *)(v9 + 4904) = *(_QWORD *)(v9 + 1424);
  LODWORD(STACK[0x1524]) = STACK[0x438];
  *(_QWORD *)(v9 + 4792) = *(_QWORD *)(v9 + 312);
  *(_QWORD *)(v9 + 4928) = *(_QWORD *)(v9 + 1408);
  *(_QWORD *)(v9 + 4936) = *(_QWORD *)(v9 + 2648);
  LODWORD(STACK[0x154C]) = STACK[0x434];
  *(_QWORD *)(v9 + 4960) = *(_QWORD *)(v9 + 2640);
  *(_QWORD *)(v9 + 4976) = *(_QWORD *)(v9 + 2632);
  *(_QWORD *)(v9 + 4984) = *(_QWORD *)(v9 + 2624);
  *(_QWORD *)(v9 + 4992) = *(_QWORD *)(v9 + 2616);
  LODWORD(STACK[0x1550]) = STACK[0x41C];
  *(_QWORD *)(v9 + 5000) = *(_QWORD *)(v9 + 2608);
  *(_QWORD *)(v9 + 5008) = *(_QWORD *)(v9 + 2600);
  *(_QWORD *)(v9 + 5016) = *(_QWORD *)(v9 + 2592);
  *(_QWORD *)(v9 + 4872) = *(_QWORD *)(v9 + 296);
  LODWORD(STACK[0x1554]) = STACK[0x40C];
  LODWORD(STACK[0x1574]) = STACK[0x3F4];
  *(_QWORD *)(v9 + 5032) = *(_QWORD *)(v9 + 2584);
  LODWORD(STACK[0x1580]) = STACK[0x3E4];
  *(_QWORD *)(v9 + 5040) = *(_QWORD *)(v9 + 1176);
  LODWORD(STACK[0x1584]) = STACK[0x63C];
  return (*(uint64_t (**)(void))(v9 + 1184))();
}

uint64_t sub_193240788(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  unint64_t v39;
  uint64_t v40;
  int v41;

  *(_QWORD *)(v40 + 5232) = *(_QWORD *)(v40 + 1176);
  LODWORD(STACK[0x1654]) = STACK[0x63C];
  return ((uint64_t (*)(void))(*(_QWORD *)(a39 + 8 * ((LOBYTE(STACK[0x35F]) * (a2 + a4 + a6)) ^ (a2 + a4 + 2155)))
                            - (a4 ^ (v41 + 648) ^ v39)))();
}

uint64_t sub_1932407CC@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,__int16 a57,char a58,unsigned __int8 a59)
{
  int v59;
  int v60;
  uint64_t v61;
  _BOOL4 v62;

  v62 = LODWORD(STACK[0x1094]) != v60 + 8;
  *(_QWORD *)(v61 + 5240) = *(_QWORD *)(v61 + 1176);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((13 * (a2 & ~(v59 ^ a3 ^ (a59 | v62)))) ^ v59)) - 8))();
}

uint64_t sub_19324081C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _BOOL4 v11;

  v7 = **(unsigned int **)(v6 + 1440);
  LODWORD(STACK[0x43C]) = v7;
  *(_QWORD *)(v6 + 320) = v7;
  v8 = (v7 ^ 0x66B9FEBFCBB737FFLL) - 0x66B9FEBF403B0E9ALL + ((v5 ^ 0x1976E6BEBLL) & (2 * v7));
  v9 = (**(unsigned int **)(v6 + 1456) ^ 0x77FEEFB7FC78FFFFLL)
     - 0x77FEEFB770FCD6A2
     + (((unint64_t)**(unsigned int **)(v6 + 1456) << (v5 - a2 - 9 + v4)) & 0x1F8F1FFFELL);
  v10 = (v8 < 0x8B7C295D) ^ (v9 < 0x8B7C295D);
  v11 = v8 > v9;
  if (v10)
    v11 = v8 < 0x8B7C295D;
  *(_QWORD *)(v6 + 5240) = *(_QWORD *)(v6 + 1176);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (int)((3337 * !v11) ^ v5)) - 8))();
}

uint64_t sub_19324091C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  _BOOL4 v48;

  v43 = 5 * (a1 ^ 0x8A6);
  v44 = **(_QWORD **)(v42 + 2600) + *(_QWORD *)(v42 + 320);
  **(_DWORD **)(v42 + 1440) = LODWORD(STACK[0x43C]) + (v43 ^ 0x41D);
  *(_QWORD *)(v42 + 5232) = v44;
  LODWORD(STACK[0x1654]) = v39;
  v45 = STACK[0x1654];
  v46 = *(_QWORD *)(v42 + 5232);
  *(_QWORD *)(v42 + 1464) = v46;
  v48 = v45 != v39 || v46 == 0;
  *(_QWORD *)(v42 + 5240) = v46;
  return ((uint64_t (*)(void))(*(_QWORD *)(a39 + 8 * (((a5 & ~((v43 + v40) ^ v48)) * v41) ^ v43)) - 8))();
}

void sub_1932409B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t *a35)
{
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  unsigned __int8 *v39;
  unint64_t v40;
  uint64_t v41;

  v38 = (v36 - 679732759) & 0x3FFFFF1D;
  v39 = *(unsigned __int8 **)(v37 + 1464);
  v40 = ((unint64_t)*v39 << 56) | ((unint64_t)v39[1] << 48) | ((unint64_t)v39[2] << 40) | ((unint64_t)(v39[3] + 1761281547 + ~((v35 + v38 + 19) & (2 * v39[3]))) << 32) ^ 0x68FB060A00000000 | (((v39[4] + 0x69D8038CC4 - ((2 * v39[4]) & 0x17ELL)) << 24) - 83886080) ^ 0x69D8038CBF000000 | (((v39[5] + 0x350361AEA51ALL - ((2 * v39[5]) & 0xCLL)) << 16) - 1310720) ^ 0x350361AEA5060000 | (((v39[6] + 0x434761C106CB23 - ((2 * v39[6]) & 0x1CELL)) << 8) - 15360) ^ 0x434761C106CAE700;
  v41 = v39[7] + 0x9405164B5B020C1 - ((2 * v39[7]) & 0x182);
  *a35 = v41 & 0x546 ^ 0x5BA00EFBBE6F7AF9 ^ ((v40 + 0x501C0C568D401213 - ((2 * v40) & 0xA03818AD1A802476)) ^ 0xBBC02AD332F68AALL) & (v41 ^ 0xF6BFAE9B4A4FDF3ELL);
  *(_QWORD *)(v37 + 5240) = v39;
  JUMPOUT(0x19324041CLL);
}

uint64_t sub_193240BA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  _QWORD *v39;
  int v40;

  LODWORD(STACK[0x167C]) = STACK[0x3E4];
  v39[658] = v39[323];
  v39[660] = v39[147];
  LODWORD(STACK[0x1680]) = STACK[0x40C];
  v39[632] = v39[37];
  v39[661] = v39[324];
  v39[662] = v39[325];
  v39[663] = v39[326];
  LODWORD(STACK[0x1684]) = STACK[0x41C];
  v39[664] = v39[327];
  v39[667] = v39[328];
  v39[668] = v39[329];
  v39[669] = v39[330];
  LODWORD(STACK[0x1690]) = STACK[0x434];
  v39[673] = v39[331];
  v39[675] = v39[176];
  v39[637] = v39[39];
  LODWORD(STACK[0x1694]) = STACK[0x438];
  v39[677] = v39[178];
  v40 = LOBYTE(STACK[0x35F]) * (a4 ^ 0x177C13D6 ^ (677 * (a4 ^ 0x177C1D1E)));
  LODWORD(STACK[0x16DC]) = STACK[0x63C];
  return (*(uint64_t (**)(void))(a39 + 8 * (v40 ^ (a4 - 394008530))))();
}

uint64_t sub_193240CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  char a64;
  int v64;
  int v65;
  _QWORD *v66;

  LODWORD(STACK[0x448]) = STACK[0x10B4];
  LODWORD(STACK[0x167C]) = STACK[0x3E4];
  v66[658] = v66[323];
  v66[660] = v66[147];
  LODWORD(STACK[0x1680]) = STACK[0x40C];
  v66[632] = v66[37];
  v66[661] = v66[324];
  v66[663] = v66[326];
  LODWORD(STACK[0x1684]) = STACK[0x41C];
  v66[664] = v66[327];
  v66[667] = v66[328];
  v66[668] = v66[329];
  v66[669] = v66[330];
  LODWORD(STACK[0x1690]) = STACK[0x434];
  v66[673] = v66[331];
  v66[675] = v66[176];
  v66[637] = v66[39];
  LODWORD(STACK[0x1694]) = STACK[0x438];
  v66[677] = v66[178];
  v66[662] = 0;
  LODWORD(STACK[0x16DC]) = v65;
  return (*(uint64_t (**)(void))(a8
                              + 8 * ((((a64 & 1) == 0) * (((v64 - 120624459) & 0x7309BFF ^ 0x1B84) + v64 + 44)) ^ v64)))();
}

uint64_t sub_193240D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BOOL4 v17;
  _BOOL4 v18;

  v12 = **(unsigned int **)(v11 + 1440);
  LODWORD(STACK[0x44C]) = v12;
  v13 = LODWORD(STACK[0x448]);
  v14 = v13 < v9;
  *(_QWORD *)(v11 + 328) = v12;
  *(_QWORD *)(v11 + 336) = v13;
  *(_QWORD *)(v11 + 352) = v14 << 32;
  v15 = ((v8 - 3033) | 0x550)
      + (v12 ^ 0xFC7B3FFDBF6FDF39)
      + v13
      + ((v12 << ((v8 + 108) & 0xD5)) & 0x17EDFBE72)
      + (v14 << 32)
      + 0x384C0029EE86AADLL;
  v16 = (**(unsigned int **)(v11 + 1456) ^ 0x23EAFFF6FE9EDFEFLL)
      - 0x23EAFFF69A3BBC78
      + ((2 * **(unsigned int **)(v11 + 1456)) & 0x1FD3DBFDELL);
  LODWORD(STACK[0x1704]) = v10;
  *(_QWORD *)(v11 + 5424) = *(_QWORD *)(v11 + 1424);
  v17 = v15 < 0x64632377;
  LODWORD(STACK[0x1708]) = STACK[0x438];
  *(_QWORD *)(v11 + 5208) = *(_QWORD *)(v11 + 312);
  *(_QWORD *)(v11 + 5432) = *(_QWORD *)(v11 + 1408);
  v18 = v15 > v16;
  if (v16 < 0x64632377 != v17)
    v18 = v17;
  *(_QWORD *)(v11 + 5440) = *(_QWORD *)(v11 + 2648);
  LODWORD(STACK[0x170C]) = STACK[0x434];
  *(_QWORD *)(v11 + 5448) = *(_QWORD *)(v11 + 2640);
  *(_QWORD *)(v11 + 5456) = *(_QWORD *)(v11 + 2632);
  *(_QWORD *)(v11 + 5472) = *(_QWORD *)(v11 + 2624);
  *(_QWORD *)(v11 + 5480) = *(_QWORD *)(v11 + 2616);
  LODWORD(STACK[0x172C]) = STACK[0x41C];
  *(_QWORD *)(v11 + 5488) = *(_QWORD *)(v11 + 2608);
  *(_QWORD *)(v11 + 5520) = *(_QWORD *)(v11 + 2600);
  *(_QWORD *)(v11 + 5528) = *(_QWORD *)(v11 + 2592);
  *(_QWORD *)(v11 + 5248) = *(_QWORD *)(v11 + 296);
  LODWORD(STACK[0x1738]) = STACK[0x40C];
  *(_QWORD *)(v11 + 5552) = *(_QWORD *)(v11 + 1176);
  *(_QWORD *)(v11 + 5568) = *(_QWORD *)(v11 + 2584);
  LODWORD(STACK[0x173C]) = STACK[0x3E4];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((2041 * !v18) ^ v8)) - 12))();
}

uint64_t sub_193240F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(void),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);

  *(_QWORD *)(v40 + 1472) = **(_QWORD **)(v40 + 2600);
  **(_DWORD **)(v40 + 1440) = LODWORD(STACK[0x448]) - 101372955 + LODWORD(STACK[0x44C]);
  v41 = a33();
  *(_QWORD *)(v40 + 1488) = v41;
  **(_QWORD **)(v40 + 1792) = v41;
  LODWORD(STACK[0x1704]) = 101330303;
  *(_QWORD *)(v40 + 5424) = *(_QWORD *)(v40 + 1424);
  LODWORD(STACK[0x1708]) = STACK[0x438];
  *(_QWORD *)(v40 + 5208) = *(_QWORD *)(v40 + 312);
  *(_QWORD *)(v40 + 5432) = *(_QWORD *)(v40 + 1408);
  *(_QWORD *)(v40 + 5440) = *(_QWORD *)(v40 + 2648);
  LODWORD(STACK[0x170C]) = STACK[0x434];
  *(_QWORD *)(v40 + 5448) = *(_QWORD *)(v40 + 2640);
  *(_QWORD *)(v40 + 5456) = *(_QWORD *)(v40 + 2632);
  *(_QWORD *)(v40 + 5472) = *(_QWORD *)(v40 + 2624);
  *(_QWORD *)(v40 + 5480) = *(_QWORD *)(v40 + 2616);
  LODWORD(STACK[0x172C]) = STACK[0x41C];
  *(_QWORD *)(v40 + 5488) = *(_QWORD *)(v40 + 2608);
  *(_QWORD *)(v40 + 5520) = *(_QWORD *)(v40 + 2600);
  *(_QWORD *)(v40 + 5528) = *(_QWORD *)(v40 + 2592);
  *(_QWORD *)(v40 + 5248) = *(_QWORD *)(v40 + 296);
  LODWORD(STACK[0x1738]) = STACK[0x40C];
  *(_QWORD *)(v40 + 5552) = *(_QWORD *)(v40 + 1176);
  *(_QWORD *)(v40 + 5568) = *(_QWORD *)(v40 + 2584);
  v42 = (uint64_t (*)(void))(*(_QWORD *)(a39 + 8 * (((v41 != 0) * (((v39 - 985) ^ 0x1DC) + 86)) ^ v39)) - 4);
  LODWORD(STACK[0x173C]) = STACK[0x3E4];
  return v42();
}

void sub_193241068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v10 = v9[184] + v9[41];
  v11 = v9[42] + v9[44] + 0x67B87A143EC94BB3;
  v12 = ((v8 + 3) | 0x219u) ^ v11 ^ 0xA484FBF32E2ECE08;
  v13 = (2 * (v11 & 0x3BB2BE032)) & v12 ^ v11 & 0x3BB2BE032 ^ ((2 * (v11 & 0x3BB2BE032)) & 0x14050000 | 0x3000140000000002);
  LODWORD(STACK[0x844]) = STACK[0x3E4];
  v9[885] = v9[323];
  v14 = (2 * v12) & 0x441020895052D82 ^ 0x441020895052481 ^ ((2 * v12) ^ 0x410480212A0A5B06) & v12;
  LODWORD(STACK[0x87C]) = STACK[0x3F4];
  v9[886] = v9[147];
  v15 = (4 * v13) & 0x3CC37E1895052D80 ^ v13 ^ ((4 * v13) ^ 0xC000500000000008) & v14;
  LODWORD(STACK[0x888]) = STACK[0x40C];
  v9[11] = v9[37];
  v16 = (4 * v14) & 0x3CC37E1895052D80 ^ 0xCC2061881010983 ^ ((4 * v14) ^ 0xF30DF8625414B60CLL) & v14;
  v9[887] = v9[324];
  v9[888] = v9[325];
  v17 = (16 * v15) & 0x3CC37E1895052D80 ^ v15 ^ ((16 * v15) ^ 0x4400000000020) & v16;
  v9[889] = v9[326];
  LODWORD(STACK[0x88C]) = STACK[0x41C];
  v18 = (16 * v16) & 0x3CC37E1895052D80 ^ 0x30C01E1085052583 ^ ((16 * v16) ^ 0xCC37E1895052D830) & v16;
  v9[890] = v9[327];
  v9[891] = v9[328];
  v19 = *(_QWORD *)(a8 + 8 * v8);
  v20 = (v17 << 8) & 0x3CC37E1895052D00 ^ v17 ^ ((v17 << 8) ^ 0x4000000000200) & v18;
  v9[892] = v9[329];
  v9[893] = v9[330];
  v21 = (v18 << 8) & 0x3CC37E1895052D00 ^ 0x3C81660890002C83 ^ ((v18 << 8) ^ 0xC37E1895052D8300) & v18;
  LODWORD(STACK[0x8C4]) = STACK[0x434];
  v9[211] = v9[331];
  v9[212] = v9[176];
  v22 = v9[39];
  v9[13] = v19;
  v9[14] = v22;
  LODWORD(STACK[0x8D0]) = STACK[0x438];
  v9[213] = v9[178];
  v9[215] = v9[186];
  v9[217] = v10;
  v9[15] = 0x5D952DACE41797ELL;
  v9[16] = v11 ^ (2
                * (v20 ^ (v20 << 16) & 0x3CC37E1895050000 ^ ((v20 << 16) ^ 0x400000000020000) & v21 ^ (v21 & 0x1400050100000000 | 0x1280000000000))) ^ 0x236FA4A73E006853;
  JUMPOUT(0x19323ED14);
}

uint64_t sub_1932414A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  BOOL v81;
  int v82;
  uint64_t (*v83)(void);

  v41 = v39 ^ 0x83B;
  v42 = v40[696];
  v43 = v40[694];
  v44 = STACK[0x1738];
  v45 = v40[656];
  v46 = v40[691];
  v47 = v40[690];
  v48 = v40[686];
  v49 = STACK[0x172C];
  v50 = v40[685];
  v51 = v40[684];
  v52 = v40[682];
  v53 = v40[681];
  v54 = STACK[0x170C];
  v55 = v40[680];
  v56 = v40[679];
  v58 = v40[651];
  v59 = STACK[0x1708];
  v60 = v40[678];
  v61 = STACK[0x1704];
  v62 = *(_QWORD *)(a8 + 8 * v39);
  LODWORD(STACK[0x1BF0]) = STACK[0x173C];
  v40[835] = v42;
  LODWORD(STACK[0x1BF4]) = v61;
  v40[836] = v43;
  LODWORD(STACK[0x1C0C]) = v44;
  v40[2] = v62;
  v40[3] = v45;
  v40[837] = v46;
  v40[838] = v48;
  LODWORD(STACK[0x1C1C]) = v49;
  v40[839] = v50;
  v40[840] = v51;
  v40[842] = v52;
  v40[843] = v53;
  LODWORD(STACK[0x1C6C]) = v54;
  v40[844] = v55;
  v40[847] = v56;
  v40[6] = v58;
  LODWORD(STACK[0x1C7C]) = v59;
  v40[848] = v60;
  v40[850] = v47;
  v63 = v40[848];
  v64 = 73 * (v41 ^ 0x853);
  v65 = STACK[0x1C7C];
  v66 = v40[6];
  v67 = v40[847];
  v68 = v40[844];
  LODWORD(v46) = STACK[0x1C6C];
  v69 = v40[843];
  v70 = v40[842];
  v71 = v40[840];
  v72 = v40[839];
  LODWORD(v52) = STACK[0x1C1C];
  v73 = v40[838];
  v74 = v40[837];
  LODWORD(v55) = STACK[0x1C0C];
  v75 = v40[3];
  v76 = v40[836];
  LODWORD(v60) = STACK[0x1BF4];
  v77 = v40[835];
  LODWORD(v62) = STACK[0x1BF0];
  v40[852] = v40[2];
  v40[853] = v47;
  v40[854] = v63;
  LODWORD(STACK[0x1C90]) = v65;
  v40[855] = v67;
  v40[856] = v68;
  LODWORD(STACK[0x1C94]) = v46;
  v40[857] = v69;
  v40[858] = v70;
  v40[859] = v71;
  v40[860] = v72;
  LODWORD(STACK[0x1CAC]) = v52;
  v40[862] = v73;
  v40[864] = v74;
  v40[7] = v66;
  v40[8] = v75;
  LODWORD(STACK[0x1CD4]) = v55;
  v40[865] = v76;
  LODWORD(STACK[0x1CE4]) = v60;
  v40[867] = v77;
  LODWORD(STACK[0x1CF8]) = v62;
  LODWORD(STACK[0x640]) = STACK[0x1CF8];
  v40[150] = v40[867];
  LODWORD(STACK[0x644]) = STACK[0x1CE4];
  v40[153] = v40[865];
  LODWORD(STACK[0x658]) = STACK[0x1CD4];
  v78 = v40[7];
  v40[58] = v40[8];
  v40[154] = v40[864];
  v40[156] = v40[862];
  LODWORD(STACK[0x65C]) = STACK[0x1CAC];
  v40[157] = v40[860];
  v40[158] = v40[859];
  v40[159] = v40[858];
  v40[161] = v40[857];
  LODWORD(STACK[0x684]) = STACK[0x1C94];
  v40[162] = v40[856];
  v40[163] = v40[855];
  v40[60] = v78;
  LODWORD(STACK[0x6A8]) = STACK[0x1C90];
  v40[164] = v40[854];
  v79 = (uint64_t *)v40[853];
  v80 = *v79;
  v81 = *v79 == 0;
  v40[166] = v79;
  v82 = v81;
  v40[167] = v40[852];
  v83 = (uint64_t (*)(void))(*(_QWORD *)(a39 + 8 * ((1839 * v82) ^ v64))
                          - (((v64 - 4) - 844) ^ (v64 - 844)));
  v40[168] = v80;
  return v83();
}

uint64_t sub_19324187C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  int v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t v44;

  v44 = v42(*(_QWORD *)(v43 + 1344));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a39 + 8 * ((1843 * (a41 == 22)) ^ v41))
                                          - ((17 * (v41 ^ 0xBF4)) ^ ((v41 - 2953) | 0x841u) ^ 0xD88)))(v44);
}

uint64_t sub_1932418D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  void (*v40)(void);
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v42 = (_QWORD *)v41[166];
  *v42 = 0;
  v42[1] = 0;
  v40();
  v41[868] = v41[167];
  v41[870] = v41[164];
  LODWORD(STACK[0x1CFC]) = STACK[0x6A8];
  v43 = v41[60];
  v41[871] = v41[163];
  v41[872] = v41[162];
  LODWORD(STACK[0x1D14]) = STACK[0x684];
  v41[873] = v41[161];
  v41[875] = v41[159];
  v41[877] = v41[158];
  v41[878] = v41[157];
  LODWORD(STACK[0x810]) = STACK[0x65C];
  v41[880] = v41[156];
  v41[881] = v41[154];
  v44 = v41[58];
  v41[9] = v43;
  v41[10] = v44;
  LODWORD(STACK[0x814]) = STACK[0x658];
  v41[883] = v41[153];
  LODWORD(STACK[0x834]) = STACK[0x644];
  v41[884] = v41[150];
  LODWORD(STACK[0x840]) = STACK[0x640];
  LODWORD(v44) = STACK[0x840];
  v45 = v41[884];
  LODWORD(v43) = STACK[0x834];
  v46 = v41[883];
  v47 = STACK[0x814];
  v48 = v41[881];
  v49 = v41[880];
  v50 = STACK[0x810];
  v51 = v41[878];
  v52 = v41[877];
  v53 = v41[875];
  v54 = v41[873];
  v55 = LODWORD(STACK[0x1D14]);
  v56 = v41[872];
  v57 = v41[871];
  v59 = v41[9];
  v58 = v41[10];
  v60 = STACK[0x1CFC];
  v61 = v41[870];
  v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v41[868];
  LODWORD(STACK[0x13F0]) = STACK[0x840];
  v41[573] = v45;
  LODWORD(STACK[0x13F4]) = v43;
  v41[574] = v46;
  LODWORD(STACK[0x141C]) = v47;
  v41[555] = v58;
  v41[578] = v48;
  v41[579] = 0;
  v41[582] = v49;
  LODWORD(STACK[0x1420]) = v50;
  v41[584] = v51;
  v41[585] = v52;
  v41[586] = v53;
  v41[587] = v54;
  LODWORD(STACK[0x1424]) = v55;
  v41[588] = v56;
  v41[589] = v57;
  v41[575] = v59;
  LODWORD(STACK[0x1444]) = v60;
  v41[591] = v61;
  LODWORD(STACK[0x1454]) = v50;
  LODWORD(STACK[0x1774]) = v44;
  v41[697] = v45;
  LODWORD(STACK[0x179C]) = v43;
  v41[698] = v46;
  LODWORD(STACK[0x17A0]) = v47;
  v41[665] = v58;
  v41[699] = v48;
  v41[700] = v49;
  LODWORD(STACK[0x17A4]) = v50;
  v41[701] = v51;
  v41[703] = v52;
  v41[704] = v53;
  v41[705] = v54;
  LODWORD(STACK[0x17C4]) = v55;
  v41[709] = v56;
  v41[710] = v57;
  v41[670] = v59;
  LODWORD(STACK[0x17D0]) = v60;
  v41[713] = v61;
  LODWORD(STACK[0x17D4]) = v43;
  return v62(v53, v54, v55, v39, v57, v58, v59, a39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

void sub_193241A80()
{
  JUMPOUT(0x193231530);
}

uint64_t sub_193241A88(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 629424707 * (a1 ^ 0x989F7379);
  return (*(uint64_t (**)(void))(qword_1E2FD4D00[v1 - 2818]
                              + 8
                              * (int)(((((v1 + 530710553) & 0xE05DFFFB) - 2772)
                                     * *(unsigned __int8 *)qword_1E2FD4D00[v1 - 2849]) ^ v1)
                              - 8))();
}

_DWORD *sub_193241AF0@<X0>(_DWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = 1;
  *result = 1009597724;
  return result;
}

void sub_193241B08(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_193241B90@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  v7 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(qword_1E2FD4D00[a1 ^ 0xC28CAD19] + 8 * (a1 + 1030968765) - 8);
  v10 = (v2 ^ 0xFD2F7753) + 1073727936 + ((2 * v2) & 0xFA5EEEA6);
  v11 = v7;
  v12 = (v1 ^ 0x7DFFDFDE) - 279649808 + ((2 * v1) & 0xFBFFBFBC);
  v13 = v6;
  v14 = v5;
  *(_DWORD *)(v4 - 40) = a1
                       - 1629346421 * ((((v4 - 40) | 0x368FADD7) - ((v4 - 40) & 0x368FADD7)) ^ 0xD7D74CB6)
                       - 1122467788;
  *(_QWORD *)(v4 - 32) = &v9;
  result = ((uint64_t (*)(uint64_t))(qword_1E2FD4D00[a1 ^ 0xC28CAD37] - 4))(v4 - 40);
  *(_DWORD *)(v3 + 48) = *(_DWORD *)(v4 - 36) - 101372955;
  return result;
}

void fcexHpmxKluw(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[8];
  unsigned int v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v7 = (unint64_t)&v23[qword_1EE29F038 - qword_1EE29F050];
  qword_1EE29F050 = 151185677 * (v7 + 0x442F1C6725233D1DLL);
  qword_1EE29F038 = 151185677 * (v7 ^ 0xBBD0E398DADCC2E3);
  v11 = *a4;
  v8 = qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29F050) ^ 0xE3)) ^ byte_19334C100[byte_19334BCC0[(13 * ((qword_1EE29F038 + qword_1EE29F050) ^ 0xE3))] ^ 0x86])
                     - 183];
  v9 = v8 + 8 * ((2 * (a6 != 0)) | (4 * (a6 != 0)) | 0xA51u);
  v12 = *(_QWORD *)(v8 + 5672);
  v14 = a1;
  v13 = (a3 ^ 0xF6F9BA33) + 1337982943 + ((2 * a3) & 0xEDF37466);
  v18 = 13;
  v15 = a2;
  v16 = &v11;
  v17 = a5;
  v19 = 0x11B003C355E1FB62;
  v20 = 0x52214B67DD7D558ALL;
  v21 = 0x3661B8258914B089;
  v22 = 0x43B51972E76A1B48;
  v24 = 2141531495
      - 1629346421
      * (((&v24 | 0xE08E51D8) - &v24 + (&v24 & 0x1F71AE20)) ^ 0x1D6B0B9);
  v10 = byte_19334C220[(13 * ((qword_1EE29F038 - qword_1EE29F050) ^ 0xE3))];
  v25 = &v12;
  ((void (*)(unsigned int *))(qword_1E2FD4D00[((13
                                                                          * ((qword_1EE29F038 - qword_1EE29F050) ^ 0xE3)) ^ byte_19334C540[v10 ^ 0x7F])
                                                       - 126]
                                       - 4))(&v24);
  *a4 = v11;
  __asm { BR              X9 }
}

uint64_t sub_193241F28@<X0>(int a1@<W8>)
{
  _DWORD *v1;

  *v1 = 1;
  return (a1 - 101372955);
}

void cPeaf6n8Mhpzlmx(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  int v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v7 = qword_1EE29EF68 ^ (unint64_t)&v13 ^ qword_1EE29F038;
  qword_1EE29EF68 = 151185677 * v7 - 0x305AD97674A37F79;
  qword_1EE29F038 = 151185677 * (v7 ^ 0xBBD0E398DADCC2E3);
  v8 = 0x72BBABA1ECF1B841 * a1 + 0x510E487A1A3390CDLL;
  v9 = 2106769199
     * ((((unint64_t)&v14 | 0xC3692BC4F02D4D58)
       - ((unint64_t)&v14 | 0x3C96D43B0FD2B2A7)
       + 0x3C96D43B0FD2B2A7) ^ 0x46267437BC8D22F4);
  v10 = qword_1E2FD4D00[((13 * ((qword_1EE29F038 + qword_1EE29EF68) ^ 0xE3)) ^ byte_19334C540[byte_19334C220[(13 * ((qword_1EE29F038 + qword_1EE29EF68) ^ 0xE3))] ^ 0x7F])
                      - 88];
  v11 = v10 - 8;
  v17 = *(_QWORD *)(v10 + 6400) - v9 - 4;
  v18 = a2;
  v23 = (a5 ^ 0x7F3FFF1F) + ((2 * a5) & 0xFE7FFE3E) - v9 - 1107302404;
  v24 = a4;
  v21 = a7;
  v22 = &STACK[0x25154715FE2E6167];
  v19 = v9 ^ v8;
  v20 = v9 + 711387026;
  v14 = (a3 ^ 0x3F3FEF3F) + ((2 * a3) & 0x7E7FDE7E) - 33556516 + v9;
  v12 = byte_19334BCC0[(13 * (qword_1EE29EF68 ^ 0xE3 ^ qword_1EE29F038))];
  v15 = a6;
  v16 = &STACK[0x2E29F0B9C308E86D];
  ((void (*)(int *))(qword_1E2FD4D00[((13 * (qword_1EE29EF68 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C100[v12 ^ 0x7F])
                                              - 221]
                              - 4))(&v14);
  __asm { BR              X9 }
}

uint64_t sub_1932421E4()
{
  int v0;

  sub_19322AB04();
  return (v0 - 101372955);
}

void sub_1932422A4(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_193242454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;

  HIDWORD(a18) = v31;
  STACK[0x598] = (unint64_t)&STACK[0x46AAD4E1DD9019BC];
  STACK[0x5A0] = (unint64_t)&STACK[0x54D2A68F3DE7FC6A];
  STACK[0x7E0] = 0;
  LODWORD(STACK[0x53C]) = v30;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((1016 * (((v29 == 0) ^ (v32 + v34 - 1)) & 1)) ^ (v32 + v34 + 711))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v29,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

#error "19324270C: call analysis failed (funcsize=123)"

uint64_t sub_193242710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t, uint64_t))
{
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = (_QWORD *)STACK[0x218];
  *v36 = 0;
  v36[1] = 0;
  STACK[0x228] = (unint64_t)(v36 + 1);
  v37 = a34(4096, 2241923698);
  *(_QWORD *)STACK[0x218] = v37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((62 * (v37 == 0)) ^ v34))
                            - ((v34 ^ 0x7F8u)
                             + (unint64_t)(v34 - 1720))
                            + 4406))();
}

uint64_t sub_193242770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(unint64_t),uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,_QWORD *a62)
{
  uint64_t v62;

  v62 = a37(STACK[0x218]);
  STACK[0x790] = 0;
  LODWORD(STACK[0x560]) = a17;
  LODWORD(STACK[0x34C]) = STACK[0x560];
  LOBYTE(STACK[0x3BB]) = 0;
  *a62 = STACK[0x790];
  return ((uint64_t (*)(uint64_t))STACK[0x208])(v62);
}

uint64_t sub_1932427F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unint64_t a63)
{
  unint64_t a64;
  unint64_t a68;
  unint64_t a69;
  unint64_t a70;
  unint64_t a71;
  uint64_t v71;
  int v72;

  STACK[0x7F8] = STACK[0x200];
  STACK[0x800] = a71;
  STACK[0x808] = a70;
  STACK[0x810] = a69;
  LODWORD(STACK[0x81C]) = STACK[0x348];
  STACK[0x820] = a68;
  STACK[0x828] = STACK[0x570];
  STACK[0x830] = a64;
  LODWORD(STACK[0x83C]) = STACK[0x344];
  STACK[0x840] = a63;
  LODWORD(STACK[0x84C]) = STACK[0x34C];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71
                                                                                 + 8
                                                                                 * (int)((LOBYTE(STACK[0x3BB])
                                                                                        * (6 * (v72 ^ 0x833BC4F8) + 3516)) ^ (v72 + 2093235008)))
                                                                     - 8))(a1, a2, a3, 101372955);
}

uint64_t sub_19324289C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a64;
  unint64_t a65;
  unint64_t a66;
  unint64_t a67;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unsigned int v76;

  v70 = (a9 - 1967247473) & 0x7541D77C;
  v71 = (v70 ^ 0xFFFFFFFFFFFFF8C4) + *(_QWORD *)(v68 + 8 * a9);
  STACK[0x798] = a67;
  STACK[0x7A0] = a66;
  STACK[0x7A8] = a65;
  v72 = STACK[0x570];
  LODWORD(STACK[0x564]) = STACK[0x344];
  STACK[0x7B0] = a64;
  HIDWORD(a42) = 1;
  LODWORD(STACK[0x358]) = 1;
  STACK[0x230] = STACK[0x7B0];
  LODWORD(STACK[0x35C]) = STACK[0x564];
  STACK[0x510] = v72;
  STACK[0x238] = STACK[0x7A8];
  v73 = STACK[0x7A0];
  STACK[0x278] = STACK[0x7A0];
  v74 = STACK[0x798];
  STACK[0x280] = STACK[0x798];
  v75 = STACK[0x7E0];
  STACK[0x288] = STACK[0x7E0];
  STACK[0x2A0] = v71;
  STACK[0x638] = v75;
  v76 = *(_DWORD *)(v75 + 12);
  v75 += 12;
  STACK[0x2B8] = v75;
  LODWORD(STACK[0x360]) = v76;
  STACK[0x640] = v71;
  STACK[0x648] = v74;
  STACK[0x650] = v73;
  STACK[0x658] = STACK[0x238];
  *(_QWORD *)(v69 - 200) = STACK[0x510];
  STACK[0x660] = v75;
  STACK[0x668] = STACK[0x230];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * (int)(((v76 < 0xFFFFFFFB) * (((v67 + v70 + 294) ^ 0x833BC669) - 545)) ^ v70)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_193242CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _BOOL4 v46;
  _BOOL4 v47;

  v44 = (LODWORD(STACK[0x360]) ^ 0xEF77BBD7F777FEFFLL)
      + 0x108844286799D888
      + ((2 * LODWORD(STACK[0x360])) & 0x1EEEFFDFELL);
  v45 = (a9 ^ v41 ^ *(_DWORD *)(STACK[0x288] + 8) ^ 0xAE7BDF705CE63F9BLL)
      + ((2 * *(unsigned int *)(STACK[0x288] + 8)) & 0x1BFBBF6D6)
      + 0x5184208F7F33DC18;
  v46 = v44 < 0x5F11D783;
  v47 = v44 > v45;
  if (v46 != v45 < 0x5F11D783)
    v47 = v46;
  STACK[0x7B8] = STACK[0x288];
  STACK[0x608] = STACK[0x2A0];
  STACK[0x610] = STACK[0x280];
  STACK[0x618] = STACK[0x278];
  STACK[0x620] = STACK[0x238];
  *(_QWORD *)(v43 - 208) = STACK[0x510];
  STACK[0x628] = STACK[0x2B8];
  STACK[0x630] = STACK[0x230];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * ((3284 * v47) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

void sub_193242DF8()
{
  unint64_t v0;

  v0 = STACK[0x288];
  STACK[0x670] = STACK[0x288];
  STACK[0x678] = STACK[0x2A0];
  STACK[0x680] = STACK[0x280];
  STACK[0x688] = STACK[0x278];
  STACK[0x690] = STACK[0x238];
  STACK[0x698] = STACK[0x2B8];
  STACK[0x6A0] = STACK[0x230];
  STACK[0x6A8] = v0;
  JUMPOUT(0x1932432ECLL);
}

uint64_t sub_1932433F4@<X0>(int a1@<W4>, int a2@<W5>, char a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  unint64_t v5;
  int v6;
  uint64_t v7;
  char v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((a5 << (((v6 + 12) | v8) ^ a3) > v5)
                                          * (((v6 ^ a1) * a2) ^ a4)) | v6))
                            - 8))();
}

uint64_t sub_19324342C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v0 & 0xFFFFFFFF80000000) != 0) * v4) ^ v1))
                            - ((v1 + v2) & v3)
                            + 2672))();
}

uint64_t sub_193243458@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  unint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  unsigned int v67;
  unint64_t v68;
  uint64_t v70;

  *(_QWORD *)(v58 - 192) = a8;
  LODWORD(a56) = v59;
  STACK[0x220] = v57;
  v60 = STACK[0x388];
  STACK[0x7B8] = STACK[0x388];
  v61 = STACK[0x380];
  STACK[0x608] = STACK[0x380];
  v62 = STACK[0x378];
  STACK[0x610] = STACK[0x378];
  v63 = STACK[0x370];
  STACK[0x618] = STACK[0x370];
  LODWORD(v70) = STACK[0x3BC];
  v64 = STACK[0x3BC];
  v65 = STACK[0x368];
  STACK[0x620] = STACK[0x368];
  *(_QWORD *)(v58 - 208) = a47;
  v66 = STACK[0x350];
  STACK[0x628] = STACK[0x350];
  HIDWORD(v70) = STACK[0x3B4];
  v67 = STACK[0x3B4];
  v68 = STACK[0x338];
  STACK[0x630] = STACK[0x338];
  STACK[0x6D0] = v60;
  STACK[0x6D8] = v61;
  STACK[0x6E0] = v62;
  STACK[0x6E8] = v63;
  HIDWORD(a57) = v64;
  STACK[0x6F0] = v65;
  *(_QWORD *)(v58 - 168) = a47;
  LODWORD(STACK[0x9B4]) = v59;
  HIDWORD(a48) = v59;
  STACK[0x6F8] = v66;
  STACK[0x700] = v68;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))STACK[0x398])(v68, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           v70,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           __PAIR64__(v59, v67));
}

uint64_t sub_193243A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,int a49,int a50)
{
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v60;

  STACK[0x2C0] = STACK[0x630];
  LODWORD(STACK[0x364]) = a46;
  STACK[0x2C8] = STACK[0x628];
  v60 = *(_QWORD *)(v53 - 208);
  v54 = STACK[0x620];
  STACK[0x2D0] = STACK[0x620];
  LODWORD(STACK[0x394]) = a45;
  v55 = STACK[0x618];
  STACK[0x2E0] = STACK[0x618];
  v56 = STACK[0x610];
  STACK[0x2F0] = STACK[0x610];
  v57 = STACK[0x608];
  STACK[0x2F8] = STACK[0x608];
  v58 = STACK[0x7B8];
  STACK[0x300] = STACK[0x7B8];
  STACK[0x638] = v58;
  STACK[0x640] = v57;
  STACK[0x648] = v56;
  STACK[0x650] = v55;
  STACK[0x658] = v54;
  *(_QWORD *)(v53 - 200) = v60;
  STACK[0x660] = STACK[0x2C8];
  STACK[0x668] = STACK[0x2C0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * ((2603 * (a50 == v50 - v51 + 101370809)) ^ (v50 + 2093236812))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_193243B2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  unint64_t v50;
  int v51;
  int v52;
  unsigned int v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t (*v61)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v62;
  int v64;

  v47 = STACK[0x300];
  v48 = *(_QWORD *)STACK[0x300];
  v49 = (_DWORD *)STACK[0x2C8];
  v50 = STACK[0x2C8];
  v51 = STACK[0x394];
  v52 = LODWORD(STACK[0x394]) + 451170848 - ((LODWORD(STACK[0x394]) << (a8 - 59)) & 0x35C8A440);
  v53 = ((2 * *(_DWORD *)STACK[0x2C8]) & 0x7FF7FB78) + (*(_DWORD *)STACK[0x2C8] ^ 0x3FFBFDBC) - 1073479100;
  *(_BYTE *)(v48 + v53 + 1) = BYTE2(v52) ^ 0xE4;
  *(_BYTE *)(v48 + v53 + 2) = (((BYTE1(v52) ^ 0x52) - 2 * ((BYTE1(v52) ^ 0x52) & 7 ^ BYTE1(v52) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v48 + v53) = HIBYTE(v52) ^ 0x1A;
  *(_BYTE *)(v48 + v53 + 3) = v52 ^ 0x20;
  *v49 += 4;
  STACK[0x638] = v47;
  STACK[0x640] = STACK[0x2F8];
  STACK[0x648] = STACK[0x2F0];
  STACK[0x650] = STACK[0x2E0];
  STACK[0x658] = STACK[0x2D0];
  *(_QWORD *)(v46 - 200) = a46;
  STACK[0x660] = v50;
  v64 = STACK[0x364];
  STACK[0x668] = STACK[0x2C0];
  v54 = STACK[0x668];
  v55 = STACK[0x660];
  v56 = *(_QWORD *)(v46 - 200);
  v57 = STACK[0x658];
  v58 = v51;
  v59 = STACK[0x650];
  v60 = STACK[0x648];
  v61 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x640];
  v62 = STACK[0x638];
  STACK[0x7F8] = STACK[0x638];
  STACK[0x800] = (unint64_t)v61;
  STACK[0x808] = v60;
  STACK[0x810] = v59;
  LODWORD(STACK[0x81C]) = v58;
  STACK[0x820] = v57;
  STACK[0x828] = v56;
  STACK[0x830] = v55;
  LODWORD(STACK[0x83C]) = v64;
  STACK[0x840] = v54;
  LODWORD(STACK[0x84C]) = a3;
  STACK[0x850] = v62;
  STACK[0x858] = (unint64_t)v61;
  STACK[0x860] = v60;
  STACK[0x868] = v59;
  LODWORD(STACK[0x874]) = v58;
  STACK[0x878] = v57;
  STACK[0x880] = v56;
  STACK[0x888] = v55;
  LODWORD(STACK[0x894]) = v64;
  STACK[0x898] = v54;
  LODWORD(STACK[0x8A4]) = a3;
  STACK[0x8A8] = v62;
  STACK[0x8B0] = (unint64_t)v61;
  STACK[0x8B8] = v60;
  STACK[0x8C0] = v59;
  LODWORD(STACK[0x8CC]) = v58;
  STACK[0x8D0] = v57;
  STACK[0x8D8] = v56;
  STACK[0x8E0] = v55;
  LODWORD(STACK[0x8EC]) = v64;
  STACK[0x8F0] = v54;
  LODWORD(STACK[0x8FC]) = a3;
  return v61(v62, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_193243CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;

  STACK[0x410] = STACK[0x700];
  LODWORD(STACK[0x444]) = a58;
  STACK[0x420] = STACK[0x6F8];
  STACK[0x318] = *(_QWORD *)(v61 - 168);
  v62 = STACK[0x6F0];
  STACK[0x428] = STACK[0x6F0];
  LODWORD(STACK[0x494]) = HIDWORD(a57);
  v63 = STACK[0x6E8];
  STACK[0x430] = STACK[0x6E8];
  v64 = STACK[0x6E0];
  STACK[0x438] = STACK[0x6E0];
  v65 = STACK[0x6D8];
  STACK[0x448] = STACK[0x6D8];
  v66 = STACK[0x6D0];
  STACK[0x450] = STACK[0x6D0];
  STACK[0x708] = v66;
  STACK[0x710] = v65;
  STACK[0x718] = v64;
  STACK[0x720] = v63;
  STACK[0x728] = v62;
  STACK[0x7C8] = STACK[0x318];
  STACK[0x730] = STACK[0x420];
  STACK[0x738] = STACK[0x410];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((14 * (HIDWORD(a58) != (_DWORD)a4)) ^ (v59 + 2093236743))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_193243DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  _DWORD *v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unint64_t *v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  int v48;

  v17 = 2 * (v14 ^ (v15 + 1552));
  v18 = 58 * (v17 ^ 0xCF9);
  v19 = (_DWORD *)STACK[0x428];
  v20 = (LODWORD(STACK[0x444]) ^ 0x839D16DE) & (2 * (STACK[0x444] & (37 * (v17 ^ 0xCE6) - 2145628547))) ^ STACK[0x444] & (37 * (v17 ^ 0xCE6) - 2145628547);
  v21 = ((2 * (LODWORD(STACK[0x444]) ^ 0x83BD3E70)) ^ 0x742D15E) & (LODWORD(STACK[0x444]) ^ 0x83BD3E70) ^ (2 * (LODWORD(STACK[0x444]) ^ 0x83BD3E70)) & 0x3A168AE;
  v22 = v21 ^ 0xA128A1;
  v23 = (v21 ^ 0x400C) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0xE85A2BC) & v22 ^ (4 * v22) & 0x3A168AC;
  v25 = (v24 ^ 0x28120A0) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ a14)) ^ 0x3A168AF0) & (v24 ^ a14) ^ (16 * (v24 ^ a14)) & 0x3A168A0;
  v27 = v26 ^ 0x1A1600F;
  v28 = v25 ^ 0x3A168AF ^ (v26 ^ 0x2000800) & (v25 << 8);
  v29 = ((v28 << 16) ^ 0x68AF0000) & ((v27 << 8) & 0x3A10000 ^ 0x2810000 ^ ((v27 << 8) ^ 0x21680000) & v27);
  v30 = (unint64_t *)STACK[0x410];
  v31 = *(_QWORD *)STACK[0x410];
  v32 = LODWORD(STACK[0x444]) ^ (2 * ((v28 << 16) & 0x3A10000 ^ v28 ^ v29));
  v33 = ((2 * *(_DWORD *)STACK[0x428]) & 0x5737FB78) + (v18 ^ 0xAB9BF5DE ^ *(_DWORD *)STACK[0x428]) + 1415840260;
  *(_BYTE *)(v31
           + ((2 * *(_DWORD *)STACK[0x428]) & 0x5737FB78)
           + (v18 ^ 0xAB9BF5DE ^ *(_DWORD *)STACK[0x428])
           + 1415840324) = HIBYTE(v32) ^ 0x86;
  *(_BYTE *)(v31 + v33 + 65) = BYTE2(v32) ^ 0x1C;
  *(_BYTE *)(v31 + v33 + 66) = (((BYTE1(v32) ^ 0x87) - 2 * ((BYTE1(v32) ^ 0x87) & 3) + 11) ^ 3) - 8;
  *(_BYTE *)(v31 + v33 + 67) = v32 ^ 0x81;
  v34 = (*v19 + 4);
  *v19 = v34;
  v35 = ((2 * v34) & 0x1EDF3DFEELL) + (v34 ^ 0xF8A71EFCF6F9EFF7);
  v36 = STACK[0x318];
  v37 = (STACK[0x318] ^ 0xEC6D150E9129299BLL) & (2 * (STACK[0x318] & 0xE14D464F224C01C0)) ^ STACK[0x318] & 0xE14D464F224C01C0;
  v38 = ((2 * (STACK[0x318] ^ 0xEC67998ED531291BLL)) ^ 0x1A55BF83EEFA51B6) & (STACK[0x318] ^ 0xEC67998ED531291BLL) ^ (2 * (STACK[0x318] ^ 0xEC67998ED531291BLL)) & 0xD2ADFC1F77D28DALL;
  v39 = v38 ^ 0x52A404011052849;
  v40 = (v38 ^ 0x8001B0182700000) & (4 * v37) ^ v37;
  v41 = ((4 * v39) ^ 0x34AB7F07DDF4A36CLL) & v39 ^ (4 * v39) & 0xD2ADFC1F77D28D8;
  v42 = (v41 ^ 0x42A5F01D5742040) & (16 * v40) ^ v40;
  v43 = ((16 * (v41 ^ 0x90080C022090893)) ^ 0xD2ADFC1F77D28DB0) & (v41 ^ 0x90080C022090893) ^ (16 * (v41 ^ 0x90080C022090893)) & 0xD2ADFC1F77D28D0;
  v44 = *v30;
  STACK[0x478] = v44;
  STACK[0x458] = v35;
  v45 = STACK[0x438] > v35 + v44 + 0x758E10309061009;
  v46 = (((v43 ^ 0xD0203C0802D204BLL) << 8) ^ 0x2ADFC1F77D28DB00) & (v43 ^ 0xD0203C0802D204BLL) ^ ((v43 ^ 0xD0203C0802D204BLL) << 8) & 0xD2ADFC1F77D2800;
  v47 = v36 ^ (2
             * (v46 & 0x5741205900000000 ^ (v43 ^ 0x28DC0177500800) & (v42 << 8) ^ v42 ^ (v46 ^ 0x80AC1C175280000) & (((v43 ^ 0x28DC0177500800) & (v42 << 8) ^ v42) << 16)));
  v48 = !v45;
  STACK[0x468] = v47 ^ 0x1005AE83EEFA51B6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((474 * v48) ^ v17)) - 12))();
}

uint64_t sub_1932441F0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x49C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((((a1 + v2) ^ (v1 == 0)) & 1) == 0) * (a1 - 1353)) ^ a1)) - 8))();
}

uint64_t sub_193244224@<X0>(int a1@<W8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = (a1 - 973);
  v4 = STACK[0x458] - 0x6F215DBAEEF403C9 + v3;
  v5 = LODWORD(STACK[0x49C]);
  STACK[0x7C0] = v5;
  LODWORD(v5) = v5 - 1;
  v6 = (((unint64_t)v5 << (((v3 - 5) | 0x60) ^ (v2 + 13))) & 0x1EFF41E7ALL)
     + (v5 ^ 0x767A3EBDF7FA0F3DLL);
  *(_BYTE *)(STACK[0x478] + v6 + v4) = *(_BYTE *)(STACK[0x438] + v6 - 0x767A3EBDF7FA0F3DLL);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (int)(((2 * (v5 != 0)) | (32
                                                                                                * (v5 != 0))) ^ v3))
                                          - 4))(0x767A3EBDF7FA0F3DLL);
}

uint64_t sub_1932442F0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0x498]) = v1;
  return ((uint64_t (*)(void))(v4 - (v0 + v2) + *(_QWORD *)(v3 + 8 * (((v0 - 1910) * (v1 != 0)) ^ v0)) + 4))();
}

uint64_t sub_193244320()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = STACK[0x458] + 0x758ED069A5E1E1FLL;
  STACK[0x470] = v3;
  v4 = LODWORD(STACK[0x498]);
  STACK[0x488] = v4;
  *(_QWORD *)(v2 - 160) = 0;
  *(_BYTE *)(STACK[0x478] + v3 - 0xC0391580E16) = *(_BYTE *)STACK[0x438];
  return (*(uint64_t (**)(unint64_t))(v1 + 8 * ((112 * (v4 == 1)) ^ (v0 - 804))))(0xFFFFF3FC6EA7F1EALL);
}

void sub_1932443C8()
{
  JUMPOUT(0x193244378);
}

uint64_t sub_1932443D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unint64_t v59;
  _DWORD *v60;
  int v61;
  unint64_t v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t (*v67)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v72;

  STACK[0x7C0] = v59;
  v60 = (_DWORD *)STACK[0x428];
  v61 = STACK[0x444];
  *v60 = LODWORD(STACK[0x444]) - 2145628547 + *(_DWORD *)STACK[0x428] + 2146;
  STACK[0x708] = STACK[0x450];
  STACK[0x710] = STACK[0x448];
  STACK[0x718] = STACK[0x438];
  STACK[0x720] = STACK[0x430];
  v72 = STACK[0x494];
  STACK[0x728] = (unint64_t)v60;
  STACK[0x7C8] = STACK[0x318];
  STACK[0x730] = STACK[0x420];
  STACK[0x738] = STACK[0x410];
  v62 = STACK[0x738];
  v63 = v61;
  v64 = STACK[0x730];
  v65 = STACK[0x7C8];
  v66 = STACK[0x728];
  v67 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x720];
  v68 = STACK[0x718];
  v69 = STACK[0x710];
  v70 = STACK[0x708];
  STACK[0x900] = STACK[0x708];
  STACK[0x908] = v69;
  STACK[0x910] = v68;
  STACK[0x918] = (unint64_t)v67;
  LODWORD(STACK[0x924]) = v72;
  STACK[0x928] = v66;
  STACK[0x930] = v65;
  STACK[0x938] = v64;
  LODWORD(STACK[0x944]) = v63;
  STACK[0x948] = v62;
  LODWORD(STACK[0x954]) = a4;
  STACK[0x958] = v70;
  STACK[0x960] = v69;
  STACK[0x968] = v68;
  STACK[0x970] = (unint64_t)v67;
  LODWORD(STACK[0x97C]) = v72;
  STACK[0x980] = v66;
  STACK[0x988] = v65;
  STACK[0x990] = v64;
  LODWORD(STACK[0x99C]) = v63;
  STACK[0x9A0] = v62;
  LODWORD(STACK[0x9AC]) = a4;
  return v67(v70, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1932444D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;

  v6 = STACK[0x9AC];
  STACK[0x4C0] = STACK[0x9A0];
  LODWORD(STACK[0x294]) = STACK[0x99C];
  STACK[0x4C8] = STACK[0x990];
  STACK[0x5E8] = STACK[0x988];
  STACK[0x4D0] = STACK[0x980];
  LODWORD(STACK[0x298]) = STACK[0x97C];
  STACK[0x4D8] = STACK[0x970];
  STACK[0x4E0] = STACK[0x968];
  STACK[0x4E8] = STACK[0x960];
  STACK[0x4F0] = STACK[0x958];
  STACK[0x9D8] = 0;
  LODWORD(STACK[0x594]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8
                                             * (int)(((v6 == a4) * ((v5 ^ 0x833BC58A) + 3639)) ^ (v5 + 2093236608)))
                            - 4))();
}

uint64_t sub_193244574@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int *a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t))
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t v38;

  v29 = a1 + 679;
  v30 = STACK[0x7E0];
  v31 = a1 + 437;
  STACK[0x4F8] = STACK[0x7E0];
  STACK[0x7E8] = 0;
  LODWORD(STACK[0x7F4]) = 0;
  a24(v25);
  v32 = *a22;
  v33 = *(_QWORD *)v30;
  v34 = *(_DWORD *)(v30 + 12);
  STACK[0x500] = v30 + 12;
  v35 = STACK[0x598];
  v36 = STACK[0x5A0];
  v37 = 597255653 * ((779557180 - (v26 | 0x2E77193C) + (v26 | 0xD188E6C3)) ^ 0xD883995A);
  *(_QWORD *)(v28 - 120) = v33;
  *(_QWORD *)(v28 - 136) = v35;
  *(_QWORD *)(v28 - 104) = v36;
  *(_DWORD *)(v28 - 128) = v31 - v37 + (v32 ^ (v29 + 1979442076)) + ((2 * v32) & 0xEBF7CF7A) - 1356989236;
  *(_DWORD *)(v28 - 112) = v37 + v29 + 2183;
  *(_DWORD *)(v28 - 140) = v37 + v34 + 1581691396 - ((2 * v34) & 0xBC8D6408);
  a23(v28 - 144);
  LODWORD(v30) = *(_DWORD *)(v28 - 144);
  v38 = a25(v25);
  LODWORD(STACK[0x9B0]) = v30;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * ((4 * ((_DWORD)v30 == 663729217)) | (8
                                                                                           * ((_DWORD)v30 == 663729217)) | v29))
                                          - 4))(v38);
}

uint64_t sub_1932446B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int *a23,uint64_t a24,void (*a25)(uint64_t),uint64_t (*a26)(_QWORD, uint64_t, uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;

  v39 = 486723911 * ((~(v33 | 0x569F0A206922C90ELL) + (v33 & 0x569F0A206922C90ELL)) ^ 0x9BDE2E4E2617566BLL);
  v40 = *(_QWORD *)(v36 + 8 * v34) - v39 - 8;
  *(_QWORD *)(v38 - 144) = v35;
  *(_QWORD *)(v38 - 136) = v40;
  *(_DWORD *)(v38 - 128) = v34 - 71465943 - v39;
  a25(v38 - 144);
  v41 = a26(*a23, a24, v37);
  v42 = ((2 * v41) & 0x8E55ACFE) + (v41 ^ 0xC72AD67F);
  v43 = *(_QWORD *)(v36 + 8 * (v34 ^ 5));
  *(_DWORD *)(v38 - 128) = v34 - 71465943 - a15;
  *(_QWORD *)(v38 - 144) = a33;
  *(_QWORD *)(v38 - 136) = v43 - a15 - 8;
  v44 = ((uint64_t (*)(uint64_t))a25)(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v36
                                            + 8
                                            * (int)((3057 * (v42 == -953493889)) ^ (((((v34 - 2093990607) | 0xB8490)
                                                                                    + 59859537) ^ 0x86CD241F)
                                                                                  + v34))))(v44);
}

uint64_t sub_193244800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29,void (*a30)(uint64_t),void (*a31)(uint64_t),uint64_t (*a32)(uint64_t))
{
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  unsigned int v40;
  int v41;
  unint64_t v42;
  int v43;
  int v44;
  uint64_t v45;

  v37 = (v34 - 1412202308) & 0xCD5F5E8F;
  a31(v33);
  v38 = *(_QWORD *)STACK[0x4F8];
  v39 = *(_DWORD *)STACK[0x500];
  v40 = *a29 ^ 0xBF3DE7FE;
  v41 = (2 * *a29) & 0x7E7BCFFC;
  v42 = STACK[0x5A0];
  v43 = 597255653 * (v32 ^ 0x90B7F99);
  *(_QWORD *)(v36 - 136) = STACK[0x598];
  *(_DWORD *)(v36 - 112) = v43 + 2033378663 + v34;
  *(_QWORD *)(v36 - 120) = v38;
  *(_DWORD *)(v36 - 140) = (v37 ^ 0x5E46B489) + v43 + v39 - ((2 * v39) & 0xBC8D6408);
  *(_QWORD *)(v36 - 104) = v42;
  *(_DWORD *)(v36 - 128) = v40 - v43 + v41 + 1708916666;
  a30(v36 - 144);
  v44 = *(_DWORD *)(v36 - 144);
  v45 = a32(v33);
  LODWORD(STACK[0x9B0]) = v44;
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * (int)(((LODWORD(STACK[0x9B0]) == ((v37 - 1346644115) & 0xD37FE6F5)
                                                                             - 1806438578)
                                                   * (((v37 - 1657) | 0x20A) - 497)) ^ v37)))(v45);
}

void sub_193244978()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  STACK[0x7D8] = 0;
  v1 = STACK[0x4E8];
  *(_QWORD *)(v0 - 248) = STACK[0x4F0];
  *(_QWORD *)(v0 - 240) = v1;
  v2 = STACK[0x4D8];
  *(_QWORD *)(v0 - 232) = STACK[0x4E0];
  *(_QWORD *)(v0 - 224) = v2;
  LODWORD(STACK[0x540]) = STACK[0x298];
  STACK[0x770] = STACK[0x4D0];
  *(_QWORD *)(v0 - 216) = STACK[0x5E8];
  STACK[0x778] = STACK[0x4C8];
  LODWORD(STACK[0x544]) = STACK[0x294];
  STACK[0x780] = STACK[0x4C0];
  JUMPOUT(0x193242660);
}

uint64_t sub_1932449E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  BOOL v55;
  int v56;

  HIDWORD(a18) = v51;
  LODWORD(a38) = 17;
  STACK[0x558] = (unint64_t)&STACK[0x46AAD4E1DD901954];
  STACK[0x568] = (unint64_t)&STACK[0x54D2A68F3DE7FA06];
  STACK[0x778] = 0;
  LODWORD(STACK[0x76C]) = v49;
  if (v48)
    v55 = v50 == 0;
  else
    v55 = 1;
  v56 = v55;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * ((v52 + v54 + 1190) ^ (8152 * v56))) - ((v52 + v54 - 2536) | 0xA2u) + 482))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v48,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_193244A78@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v54 = a1 + 1766;
  v55 = 0x968643D577EBD10BLL * v51 + 0x3A72205B43EDE947;
  v56 = ((v55 & 0xF9FC1FD4E558C8CCLL) << ((a1 - 26) ^ 0xCD)) & (v55 ^ 0xF9FB9F80C456828ALL) ^ v55 & 0xF9FC1FD4E558C8CCLL;
  v57 = ((2 * (v55 ^ 0x9B23A42044E6931ALL)) ^ 0xC5BF77E9437CB7ACLL) & (v55 ^ 0x9B23A42044E6931ALL) ^ (2 * (v55 ^ 0x9B23A42044E6931ALL)) & 0x62DFBBF4A1BE5BD6;
  v58 = v57 ^ 0x22408814A0824852;
  v59 = (v57 ^ 0x409033E001240B02) & (4 * v56) ^ v56;
  v60 = ((4 * v58) ^ 0x8B7EEFD286F96F58) & v58 ^ (4 * v58) & 0x62DFBBF4A1BE5BD4;
  v61 = (v60 ^ 0x25EABD080B84B46) & (16 * v59) ^ v59;
  v62 = ((16 * (v60 ^ 0x6081102421061086)) ^ 0x2DFBBF4A1BE5BD60) & (v60 ^ 0x6081102421061086) ^ (16 * (v60 ^ 0x6081102421061086)) & 0x62DFBBF4A1BE5BD0;
  v63 = (v62 ^ 0x20DBBB4001A41996) & (v61 << 8) ^ v61;
  v64 = (((v62 ^ 0x420400B4A01A4296) << 8) ^ 0xDFBBF4A1BE5BD600) & (v62 ^ 0x420400B4A01A4296) ^ ((v62 ^ 0x420400B4A01A4296) << 8) & 0x62DFBBF4A1BE5B00;
  v65 = v63 ^ 0x62DFBBF4A1BE5BD6 ^ (v64 ^ 0x429BB0A0A01A09D6) & (v63 << 16);
  v66 = v55 ^ (2
             * ((v65 << 32) & 0x62DFBBF400000000 ^ v65 ^ ((v65 << 32) ^ 0x21BE5BD600000000) & (((v64 ^ 0x20440B5401A409D6) << 16) & 0x62DFBBF400000000 ^ 0x400B1A4000000000 ^ (((v64 ^ 0x20440B5401A409D6) << 16) ^ 0x3BF4A1BE00000000) & (v64 ^ 0x20440B5401A409D6))));
  *(_BYTE *)(v53 - 152) = HIBYTE(v66) ^ 0x7D;
  *(_BYTE *)(v53 - 151) = BYTE6(v66) ^ 0x7F;
  *(_BYTE *)(v53 - 150) = BYTE5(v66) ^ 0x5F;
  *(_BYTE *)(v53 - 149) = BYTE4(v66) ^ 0x95;
  *(_BYTE *)(v53 - 148) = BYTE3(v66) ^ 0xA6;
  *(_BYTE *)(v53 - 147) = BYTE2(v66) ^ 0x24;
  *(_BYTE *)(v53 - 146) = BYTE1(v66) ^ 0x7F;
  *(_BYTE *)(v53 - 145) = v66 ^ 0x60;
  v67 = *(_QWORD *)(v52 + 8 * a1) - 4;
  STACK[0x4B0] = v53 + 0x27F95742180B68C7;
  STACK[0x5E0] = v67;
  STACK[0x6D0] = (unint64_t)&STACK[0x778];
  STACK[0x288] = (unint64_t)&STACK[0x778];
  LODWORD(STACK[0x394]) = a51;
  STACK[0x2A0] = STACK[0x6C8];
  STACK[0x2B8] = STACK[0x6C0];
  STACK[0x2C0] = STACK[0x6B8];
  v68 = STACK[0x5E0];
  STACK[0x2C8] = STACK[0x6B0];
  STACK[0x2D0] = STACK[0x6A8];
  STACK[0x2E0] = STACK[0x6A0];
  STACK[0x2F0] = v68;
  v69 = a27(16, 2241923698);
  STACK[0x2F8] = v69;
  STACK[0x6D8] = 0;
  LOBYTE(STACK[0x607]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (((((v54 + 1) ^ (v69 == 0)) & 1) * ((v54 - 219) ^ 0x1F43)) ^ v54)))(v69, v70, v71, v72, v73, v74, v75, v76, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_193244D4C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  STACK[0x4D8] = (unint64_t)&STACK[0x46AAD4E1DD9017E4];
  STACK[0x4E0] = (unint64_t)&STACK[0x54D2A68F3DE7F596];
  v6 = (v1 ^ 0xC4E5E060457F694DLL) & (2 * (v1 & 0xE6E5C270117F8D6ELL)) ^ v1 & 0xE6E5C270117F8D6ELL;
  v7 = ((v0 + v4 + 4) - 0x11F7DD6FABA80382) & (2 * (v1 ^ 0x8EDE0E0452871C5)) ^ ((2
                                                                                                 * (v1 ^ 0x8EDE0E0452871C5)) ^ 0xDC104520A8AFF956) & (v1 ^ 0x8EDE0E0452871C5);
  v8 = v7 ^ 0x22082290545004A9;
  v9 = (v7 ^ 0x8C00000000067800) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0xB8208A41515FF2ACLL) & v8 ^ (4 * v8) & 0xEE0822905457FCA8;
  v11 = (v10 ^ 0xA80002005057F0A0) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x4608209004000C03)) ^ 0xE0822905457FCAB0) & (v10 ^ 0x4608209004000C03) ^ (16 * (v10 ^ 0x4608209004000C03)) & 0xEE0822905457FCA0;
  v13 = (v12 ^ 0xE00020004457C800) & (v11 << 8) ^ v11;
  v14 = (((v12 ^ 0xE0802901000340BLL) << 8) ^ 0x822905457FCAB00) & (v12 ^ 0xE0802901000340BLL) ^ ((v12 ^ 0xE0802901000340BLL) << 8) & 0xEE0822905457FC00;
  v15 = v13 ^ 0xEE0822905457FCABLL ^ (v14 ^ 0x800001054540000) & (v13 << 16);
  v16 = v1 ^ (2
            * ((v15 << 32) & 0x6E08229000000000 ^ v15 ^ ((v15 << 32) ^ 0x5457FCAB00000000) & (((v14 ^ 0xE6082280000354ABLL) << 16) & 0x6E08229000000000 ^ 0x4C08228000000000 ^ (((v14 ^ 0xE6082280000354ABLL) << 16) ^ 0x2290545700000000) & (v14 ^ 0xE6082280000354ABLL))));
  *(_BYTE *)(v5 - 152) = HIBYTE(v16) ^ 0xB2;
  *(_BYTE *)(v5 - 151) = BYTE6(v16) ^ 0xF5;
  *(_BYTE *)(v5 - 150) = BYTE5(v16) ^ 0xC6;
  *(_BYTE *)(v5 - 149) = BYTE4(v16) ^ 0x50;
  *(_BYTE *)(v5 - 148) = BYTE3(v16) ^ 0xB9;
  *(_BYTE *)(v5 - 147) = BYTE2(v16) ^ 0xD0;
  *(_BYTE *)(v5 - 146) = BYTE1(v16) ^ 0x74;
  *(_BYTE *)(v5 - 145) = v16 ^ 0x38;
  *(_DWORD *)(v5 - 140) = v2
                        + v4
                        + 629424707 * ((868974308 - ((v5 - 144) | 0x33CB7EE4) + ((v5 - 144) | 0xCC34811B)) ^ 0x54ABF262);
  v17 = sub_193241A88(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((2 * (*(_DWORD *)(v5 - 144) != 1009597723)) | (4
                                                                                             * (*(_DWORD *)(v5 - 144) != 1009597723))) ^ (v2 + v4 - 882))))(v17);
}

uint64_t sub_1932450A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t, uint64_t),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  STACK[0x618] = 0;
  STACK[0x4E8] = v60 + 0x27F95742180B68C7;
  LODWORD(STACK[0x210]) = v57;
  STACK[0x718] = (unint64_t)&STACK[0x618];
  STACK[0x2C8] = (unint64_t)&STACK[0x618];
  STACK[0x2D0] = STACK[0x710];
  LODWORD(STACK[0x3DC]) = STACK[0x214];
  STACK[0x2E0] = STACK[0x708];
  STACK[0x2F0] = STACK[0x700];
  v61 = SLODWORD(STACK[0x210]);
  STACK[0x2F8] = STACK[0x6F8];
  STACK[0x300] = STACK[0x6F0];
  STACK[0x328] = STACK[0x6E8];
  STACK[0x338] = 119 * (v57 ^ 9u) + *(_QWORD *)(v58 + 8 * v61) - 4407;
  v62 = a34(16, 2241923698);
  STACK[0x350] = v62;
  STACK[0x720] = 0;
  LODWORD(STACK[0x244]) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 - (v56 + (v57 ^ 9u) + 2109) + *(_QWORD *)(v58 + 8 * ((2459 * (v62 != 0)) ^ v57 ^ 0x506)) + 8))(v62, v63, v64, 101372955, v65, v66, v67, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1932450DC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = (v0 + v3 - 24);
  STACK[0x208] = (unint64_t)&STACK[0x46AAD4E1DD90176C];
  STACK[0x218] = (unint64_t)&STACK[0x54D2A68F3DE7FA0A];
  *(_DWORD *)(v4 - 140) = v1 + v3 + 629424707 * (((~(v4 - 144) & 0xD05534F4) - (~(v4 - 144) | 0xD05534F5)) ^ 0x48CA478C);
  v6 = sub_193241A88(v4 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((440 * (*(_DWORD *)(v4 - 144) == 1009597723)) ^ (v1 + v3 + 899)))
                                          - v5
                                          + 4))(v6);
}

uint64_t sub_1932451B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t, uint64_t),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v61 = (v59 + 1016) | 2u;
  STACK[0x580] = 0;
  LODWORD(STACK[0x57C]) = v58;
  LODWORD(STACK[0x2AC]) = a19;
  v62 = *(_QWORD *)(v60 + 8 * v59);
  LODWORD(STACK[0x590]) = v58;
  STACK[0x5F8] = v62 + (v61 ^ 0xFFFFFFFFFFFFFBFELL);
  STACK[0x4E8] = (unint64_t)&STACK[0x580];
  STACK[0x350] = (unint64_t)&STACK[0x580];
  LODWORD(STACK[0x394]) = a58;
  STACK[0x368] = STACK[0x4E0];
  v63 = STACK[0x5F8];
  STACK[0x370] = STACK[0x4D8];
  STACK[0x378] = STACK[0x4D0];
  STACK[0x380] = v63;
  v64 = a34(16, 2241923698);
  STACK[0x388] = v64;
  STACK[0x4F0] = 0;
  LOBYTE(STACK[0x607]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * (int)(((v64 == 0) * (((v61 - 1212417558) & 0xCB7FC6FB) + 2093234966)) ^ v61)) - ((v61 + 205) ^ 0x4DBLL)))(v64, v65, v66, 101372955, v67, v68, v69, v70, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1932451EC()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x278] = (unint64_t)&STACK[0x46AAD4E1DD901704];
  STACK[0x280] = (unint64_t)&STACK[0x54D2A68F3DE7F9B6];
  *(_DWORD *)(v3 - 140) = v0 + v2 + 629424707 * ((((v3 - 144) | 0xFC3D2043) - ((v3 - 144) & 0xFC3D2043)) ^ 0x64A2533A);
  v4 = sub_193241A88(v3 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((16 * (*(_DWORD *)(v3 - 144) == 1009597723)) | (32 * (*(_DWORD *)(v3 - 144) == 1009597723)) | (v0 + v2 + 796)))
                                          - ((v2 + 2093234986) ^ 0x1ELL)))(v4);
}

void sub_1932452D4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 + 8 * (int)((3139 * (v3(16, 2241923698) != 0)) ^ (v0 + 1086164947) & 0xBF427397));
  __asm { BR              X8 }
}

uint64_t sub_19324C45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t, uint64_t))
{
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = (_QWORD *)STACK[0x398];
  *v36 = 0;
  v36[1] = 0;
  STACK[0x3A0] = (unint64_t)(v36 + 1);
  v37 = a34(4096, 2241923698);
  *(_QWORD *)STACK[0x398] = v37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8
                                              * (((v37 != 0) * (53 * ((v34 + 2743) ^ 0xE2D) - 822)) ^ (v34 + 2743)))
                            - 53 * ((v34 + 2743) ^ 0xE2Du)
                            + 889))();
}

uint64_t sub_19324C4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  int v63;
  unint64_t v65;

  *(_DWORD *)STACK[0x3A0] = v62;
  v65 = STACK[0x398];
  LOBYTE(STACK[0x57A]) = 1;
  LODWORD(STACK[0x3B4]) = v63;
  *(_QWORD *)STACK[0x368] = v65;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x388])(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           v65,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_19324C52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 a67;
  int v67;
  uint64_t v68;
  int v69;

  STACK[0x4F0] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68
                                                                                 + 8
                                                                                 * (int)((a67 * (v69 ^ 0x833BC817)) ^ (v67 + v69 - 2483)))
                                                                     - 8))(a1, a2, a3, 101372955);
}

uint64_t sub_19324C57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;

  v4 = STACK[0x540];
  LODWORD(STACK[0x320]) = STACK[0x540];
  v5 = STACK[0x518];
  STACK[0x2D0] = STACK[0x518];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                        + 8
                                                                        * (int)(((v4 > *(_DWORD *)(v5 + 8))
                                                                               * (((a3 - 1149250097) & 0xC7BBECFA)
                                                                                + 2093239756)) ^ a3))
                                                            - 8))(a1, a2, 101330305);
}

void sub_19324C5E0()
{
  LODWORD(STACK[0x268]) = STACK[0x394];
  LODWORD(STACK[0x26C]) = STACK[0x320];
  JUMPOUT(0x19324C62CLL);
}

uint64_t sub_19324C6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53)
{
  int v53;
  int v54;
  int v55;
  uint64_t v56;

  LODWORD(STACK[0x324]) = a53;
  return (*(uint64_t (**)(void))(v56
                              + 8
                              * ((v55 + v53 + 113) ^ (32
                                                    * (a53 == ((82 * (v53 ^ (v54 + 2114)) + 101370658) ^ (29 * (v53 ^ 0x833BC4FD))))))))();
}

uint64_t sub_19324C734@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (unint64_t *)STACK[0x518];
  STACK[0x2E0] = STACK[0x518];
  v3 = *v2;
  STACK[0x2F0] = v3;
  v4 = STACK[0x530];
  STACK[0x2F8] = STACK[0x530];
  STACK[0x308] = LODWORD(STACK[0x540])
               + ((211 * (a1 ^ 0xA4Bu)) ^ 0xFB2A714C852B8174)
               - ((2 * LODWORD(STACK[0x540])) & 0x10A5710CALL);
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * (v4 <= v3)) | (4 * (v4 <= v3))) ^ a1)))();
}

uint64_t sub_19324C7C8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x344]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((((v0 ^ 0xF36) - v2 + 1285) ^ (v1 == 0)) & 1) == 0) | (2 * (((((v0 ^ 0xF36) - v2 + 1285) ^ (v1 == 0)) & 1) == 0))) ^ v0))
                            - 4))();
}

uint64_t sub_19324C804@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v3 = LODWORD(STACK[0x344]);
  STACK[0x510] = v3--;
  v4 = (v3 ^ ((v1 + a1 + 571) + 0x767A3EBD74BE4A4DLL))
     + ((2 * v3) & 0x1EFF41E7ALL)
     - 0x767A3EBDF7FA0F3DLL;
  *(_BYTE *)(STACK[0x2F0] + v4) = *(_BYTE *)(STACK[0x2F8] + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (((v3 == 0) | (8 * (v3 == 0))) ^ a1))
                            - 4))();
}

uint64_t sub_19324C888()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = STACK[0x518];
  v3 = *(_QWORD *)(v1 + 8 * v0) - 8;
  v4 = STACK[0x518] == 0;
  STACK[0x228] = v3;
  STACK[0x230] = v2;
  LODWORD(v2) = STACK[0x324];
  LODWORD(STACK[0x2AC]) = STACK[0x324];
  STACK[0x238] = v3;
  LODWORD(STACK[0x2B4]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (v0 ^ 0x57C ^ (846 * ((v4 ^ (v0 + v0 + 110 - 1)) & 1))))
                            - 4))();
}

uint64_t sub_19324C8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  _QWORD *v34;

  v34 = (_QWORD *)STACK[0x230];
  STACK[0x4A0] = STACK[0x230];
  STACK[0x4A8] = STACK[0x228];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * (int)(((((7 * (a9 & 0xFB ^ 0x70)) ^ (*v34 == 0)) & 1) * ((((a9 & 0x8B3E4FFB) + 141) | 0x889) - 3314)) ^ a9 & 0x8B3E4FFB)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_19324D180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(void),int a38,int a39,uint64_t a40,uint64_t a41,int a42)
{
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);

  v42 = (_QWORD *)STACK[0x4A0];
  *v42 = 0;
  v42[1] = 0;
  v43 = a37();
  STACK[0x238] = STACK[0x4A8];
  LODWORD(STACK[0x2B4]) = a39;
  LODWORD(STACK[0x2DC]) = a42;
  v44 = (uint64_t (*)(uint64_t))STACK[0x238];
  STACK[0x4F0] = 0;
  return v44(v43);
}

void sub_19324D1D8()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 16) = v1;
}

uint64_t sub_19324D1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unint64_t a60,unint64_t a61)
{
  int v61;
  uint64_t v62;
  int v63;
  int v64;

  v63 = STACK[0x214];
  STACK[0x3D0] = a61;
  STACK[0x3E0] = a60;
  STACK[0x3E8] = a54;
  v64 = STACK[0x210];
  LODWORD(STACK[0x3F8]) = STACK[0x210];
  LODWORD(STACK[0x244]) = v64;
  LODWORD(STACK[0x264]) = v63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * (((((v63 - (v61 - 2100359381)) | (v61 - 2100359381 - v63)) >= 0) * (((v61 + 2093234964) | 0x841) - 2091)) | (v61 - 2100359381) ^ ((int)a4 + 2115))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_19324D268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  unint64_t v57;
  uint64_t v58;
  _DWORD *v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v57 = STACK[0x3D0];
  v58 = *(_QWORD *)STACK[0x3D0];
  v59 = (_DWORD *)STACK[0x3E8];
  v60 = STACK[0x3F8];
  v61 = ((a9 - 683940432) & 0xABFFD6FA) + v60 - 1750561488 - ((2 * v60) & 0x35C8A440);
  v62 = ((2 * *(_DWORD *)STACK[0x3E8]) & 0x15F7FBBE) + (*(_DWORD *)STACK[0x3E8] ^ 0xAFBFDDF) - 184286687;
  *(_BYTE *)(v58 + v62) = HIBYTE(v61) ^ 0x1A;
  *(_BYTE *)(v58 + v62 + 1) = BYTE2(v61) ^ 0xE4;
  *(_BYTE *)(v58 + v62 + 2) = (((BYTE1(v61) ^ 0x52) - 2 * ((BYTE1(v61) ^ 0x52) & 7 ^ BYTE1(v61) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v58 + v62 + 3) = v61 ^ 0x20;
  *v59 += 4;
  LODWORD(STACK[0x244]) = v60;
  v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x3E0];
  LODWORD(STACK[0x264]) = a4;
  v63 = STACK[0x264];
  v64 = STACK[0x244];
  LODWORD(STACK[0x544]) = STACK[0x244];
  STACK[0x548] = (unint64_t)v59;
  STACK[0x550] = (unint64_t)v66;
  STACK[0x558] = v57;
  LODWORD(STACK[0x560]) = v63;
  LODWORD(STACK[0x564]) = v64;
  STACK[0x568] = (unint64_t)v59;
  STACK[0x4B0] = (unint64_t)v66;
  STACK[0x4B8] = v57;
  HIDWORD(a42) = v63;
  STACK[0x4C0] = (unint64_t)v59;
  STACK[0x4C8] = (unint64_t)v66;
  STACK[0x4D0] = v57;
  HIDWORD(a49) = v64;
  STACK[0x4D8] = (unint64_t)v59;
  STACK[0x4E0] = (unint64_t)v66;
  STACK[0x4E8] = v57;
  LODWORD(a51) = v63;
  return v66(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           __PAIR64__(v63, v64),
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_19324D3B8@<X0>(int a1@<W2>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2 > v3;
  v6 = (a2 - 1681924287) & 0xE77BDFF8;
  v7 = (a2 + 1528);
  v8 = *(_QWORD *)(v4 + 8 * (a2 ^ (967 * v5)));
  LODWORD(STACK[0x270]) = a1;
  return ((uint64_t (*)(void))(v8 - (v7 ^ 0xFFFFFFFF7CC430BALL) - v6))();
}

uint64_t sub_19324D410(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = STACK[0x270];
  LODWORD(STACK[0x210]) = STACK[0x3FC];
  LODWORD(STACK[0x214]) = v2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x420])(a1, a2, 101330305);
}

uint64_t sub_19324D450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39
                                        + 8
                                        * (((a38 == ((v38 + 1336169281) & 0xB05BA7FF ^ 0x7D3)) * (v38 - 3146)) ^ v38))
                            - 4))();
}

uint64_t sub_19324D494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * (v59 ^ (2821 * (a9 & 1)))) - ((v59 - 989) | 0x38Fu) - 17 * (v59 ^ 0x7BCu) + 3580))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_19324D4D4(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x270]) = a3;
  return ((uint64_t (*)(void))(v6
                            - (v4 ^ (v3 + 1523))
                            + *(_QWORD *)(v5 + 8 * ((3891 * LOBYTE(STACK[0x3BB])) ^ v4))
                            + 8))();
}

uint64_t sub_19324D504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(unint64_t, uint64_t))
{
  int v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a34(STACK[0x470], 2241923698);
  STACK[0x430] = v36;
  LODWORD(STACK[0x270]) = 101330303;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35
                                        + 8
                                        * ((3957
                                          * ((((v36 == 0) ^ ((v34 ^ 0xF1) - 113)) ^ (11 * (v34 ^ 0xF1))) & 1)) ^ v34))
                            - 4))();
}

uint64_t sub_19324D588()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2 = *(_QWORD *)STACK[0x3F0];
  STACK[0x438] = v2;
  v3 = (*(unsigned int *)STACK[0x428] ^ 0xEAFCBDFEB67ABFFDLL)
     + 0x574BFB3F7BF7F4F7
     + (((unint64_t)*(unsigned int *)STACK[0x428] << ((99 * (v0 ^ 0x82)) ^ 0xC7u)) & 0x16CF57FFALL);
  v4 = (v3 ^ 0xF6897DA5E9EC2B09) & (2 * (v3 & (((v0 - 861048225) & 0x33528F69) + 0x41CD8D43C3))) ^ v3 & (((v0 - 861048225) & 0x33528F69) + 0x41CD8D43C3);
  v5 = ((2 * (v3 ^ 0xF6897D266AEC3901)) ^ 0x9440444F4EC2E41ALL) & (v3 ^ 0xF6897D266AEC3901) ^ (2
                                                                                                 * (v3 ^ 0xF6897D266AEC3901)) & 0x4B3E3BE7A761720CLL;
  v6 = v5 ^ 0x49020820A1211205;
  v7 = (v5 ^ 0x49020B2787406204) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x2CF8EF9E9D85C834) & v6 ^ (4 * v6) & 0x4B3E3BE7A761720CLL;
  v9 = (v8 ^ 0x8382B8685014000) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x4306106122603209)) ^ 0xB3E3BE7A761720D0) & (v8 ^ 0x4306106122603209) ^ (16 * (v8 ^ 0x4306106122603209)) & 0x4B3E3BE7A7617200;
  STACK[0x488] = v3 ^ (2
                     * (((((v10 ^ 0x481C01858160520DLL) << 8) ^ 0x3E3BE7A761720D00) & (v10 ^ 0x481C01858160520DLL) ^ ((v10 ^ 0x481C01858160520DLL) << 8) & 0x4B3E3BE7A7617200) & 0x2361220100000000 ^ (v10 ^ 0x3223A6226012000) & (v9 << 8) ^ v9 ^ ((((v10 ^ 0x481C01858160520DLL) << 8) ^ 0x3E3BE7A761720D00) & (v10 ^ 0x481C01858160520DLL) ^ ((v10 ^ 0x481C01858160520DLL) << 8) & 0x4B3E3BE7A7617200 ^ 0xA3A23A721600000) & (((v10 ^ 0x3223A6226012000) & (v9 << 8) ^ v9) << 16))) ^ 0x947C57C74EC2E41ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2 * (v2 <= STACK[0x430])) | (8 * (v2 <= STACK[0x430])) | v0))
                            - 4))();
}

uint64_t sub_19324D7F8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x444]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v0 - 2113799222) | 0x139C060) ^ (v2 + 1178) ^ (v0 - 294904539) & 0x1193DFFF)
                                          * (v1 == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_19324D854@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v3 = LODWORD(STACK[0x444]);
  STACK[0x248] = v3--;
  v4 = (v3 ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + ((2 * v3) & 0x1EFF41E7ALL);
  *(_BYTE *)(STACK[0x430] + v4) = *(_BYTE *)(STACK[0x438] + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2896 * (v3 == a1 - v1 + 1345 - 2201732336)) ^ a1))
                            - 12))();
}

uint64_t sub_19324D8EC@<X0>(unsigned int a1@<W8>)
{
  int v1;
  char v2;
  uint64_t v3;

  LODWORD(STACK[0x41C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((7 * (((v1 == 0) ^ (-125 * (a1 ^ (v2 + 43) ^ 0xF9))) & 1)) ^ a1))
                            - 8))();
}

uint64_t sub_19324D938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(_QWORD))
{
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  STACK[0x248] = v37;
  v38 = (_QWORD *)STACK[0x3F0];
  v39 = a37(*(_QWORD *)STACK[0x3F0]);
  *v38 = STACK[0x430];
  *(_DWORD *)STACK[0x428] = STACK[0x470];
  LODWORD(STACK[0x270]) = 101372955;
  return sub_19324D410(v39, v40);
}

uint64_t sub_19324DA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * (((2 * (a38 != 14)) | (16 * (a38 != 14))) ^ v38))
                            - ((v38 + 1124) ^ 0xC42u)
                            + 1017))();
}

uint64_t sub_19324DA44(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;

  STACK[0x5A0] = STACK[0x378];
  STACK[0x5A8] = STACK[0x370];
  STACK[0x5B0] = STACK[0x368];
  LODWORD(STACK[0x5BC]) = STACK[0x394];
  LODWORD(STACK[0x52C]) = STACK[0x3B4];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                        + 8
                                                                        * ((54 * LOBYTE(STACK[0x57B])) ^ (v2 + v4 - 922)))
                                                            - (v2 + v4 - 2330)
                                                            + 526))(a1, a2, 101330305);
}

uint64_t sub_19324DAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unsigned int v67;
  unint64_t v69;

  STACK[0x570] = *(_QWORD *)(v64 + 8 * v63);
  LODWORD(STACK[0x3BC]) = 1;
  v65 = STACK[0x570];
  v66 = STACK[0x580];
  STACK[0x3A0] = STACK[0x580];
  STACK[0x3A8] = v65;
  v69 = v66;
  v67 = *(_DWORD *)(v66 + 12);
  v66 += 12;
  STACK[0x3C0] = v66;
  LODWORD(STACK[0x3DC]) = v67;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * (int)(((v67 < ((v63 + 1887110605) & 0x8F84FF3F ^ 0xFFFFF8E4)) * ((v63 + 1887110605) & 0x8F84FF3F ^ 0xDC4)) ^ (v63 + 1887110605) & 0x8F84FF3F)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           v66,
           v69,
           v65,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_19324DCE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _BOOL4 v65;
  _BOOL4 v66;

  v62 = STACK[0x3A0];
  v63 = (((a9 ^ 0x127u) - v60 + 1268) ^ LODWORD(STACK[0x3DC]) ^ 0xF6AF7D1FFDD4392ELL)
      + (((unint64_t)LODWORD(STACK[0x3DC]) << (((a9 ^ 0x27) - 73) & 0x31 ^ 0x20u)) & 0xFDDFFBBC)
      + 0x95082E132C54C26;
  v64 = (*(unsigned int *)(STACK[0x3A0] + 8) ^ 0xDEE2FB1FBEEEF5FBLL)
      + 0x211D04E0F2C65405
      + ((2 * *(unsigned int *)(STACK[0x3A0] + 8)) & 0x17DDDEBF6);
  v65 = v63 < 0xB1B54A00;
  v66 = v63 > v64;
  if (v65 != v64 < 0xB1B54A00)
    v66 = v65;
  STACK[0x4F8] = STACK[0x3C0];
  STACK[0x500] = v62;
  STACK[0x508] = STACK[0x3A8];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * ((118 * !v66) ^ a9 ^ 0x127)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_19324DE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;

  v63 = STACK[0x3C0];
  STACK[0x510] = *(_QWORD *)(v57 + 8 * (v56 & 0xFFFFFFFFFA006E31));
  v64 = STACK[0x3A0];
  v58 = STACK[0x3A0];
  v65 = STACK[0x3A8];
  LODWORD(STACK[0x210]) = STACK[0x3BC];
  v59 = 86 * (((v56 & 0xFA006E31) + 2052544478) & 0xE5BFFF5F ^ 0x6017594E);
  LODWORD(STACK[0x214]) = 4;
  STACK[0x3E8] = v58;
  LODWORD(STACK[0x3FC]) = STACK[0x210];
  STACK[0x3F0] = v65;
  STACK[0x400] = v64;
  v60 = STACK[0x510];
  STACK[0x408] = v63;
  STACK[0x410] = v60;
  v61 = *(unsigned int *)(v58 + 8);
  STACK[0x420] = v58 + 8;
  STACK[0x458] = v61 + 4;
  STACK[0x468] = v61;
  LODWORD(STACK[0x244]) = a3;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * ((941 * (v61 > ((598 * (v59 ^ 0x5B3)) ^ (v59 - 2025850309) & 0xFBFBC4FE ^ 0xFCC430A1uLL))) ^ v59)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           v61,
           a47,
           a48,
           v63,
           a50,
           v64,
           a52,
           a53,
           v65,
           a55,
           a56);
}

uint64_t sub_19324DE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  int v47;

  LODWORD(STACK[0x2B0]) = STACK[0x564];
  STACK[0x228] = STACK[0x558];
  STACK[0x230] = STACK[0x550];
  STACK[0x238] = STACK[0x548];
  STACK[0x4B8] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * ((3552 * (HIDWORD(a41) == (((v45 + v47 - 1292) | 0x85) ^ ((_DWORD)a4 - 349)))) ^ (v45 + v47 - 2650))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_19324DED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void (*a30)(uint64_t),void (*a31)(uint64_t),uint64_t (*a32)(uint64_t),uint64_t a33)
{
  int v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;

  v37 = STACK[0x580];
  STACK[0x278] = STACK[0x580];
  STACK[0x598] = 0;
  LODWORD(STACK[0x594]) = 0;
  a31(a33);
  v38 = *v35;
  v39 = *(_QWORD *)v37;
  v40 = *(_DWORD *)(v37 + 12);
  STACK[0x280] = v37 + 12;
  v41 = STACK[0x208];
  v42 = STACK[0x218];
  v43 = 597255653 * (((~(v36 - 144) & 0xA51ACF50) - (~(v36 - 144) | 0xA51ACF51)) ^ 0xAC11B0C8);
  *(_DWORD *)(v36 - 140) = (v33 ^ 0x6A0) + 1581691406 + v43 + v40 - ((2 * v40) & 0xBC8D6408) - 15;
  *(_QWORD *)(v36 - 136) = v41;
  *(_QWORD *)(v36 - 120) = v39;
  *(_DWORD *)(v36 - 128) = (v38 ^ 0xAF5FEFFE) - v43 + ((2 * v38) & 0x5EBFDFFC) + 1975121850;
  *(_QWORD *)(v36 - 104) = v42;
  *(_DWORD *)(v36 - 112) = v43 + v33 + 1539;
  a30(v36 - 144);
  LODWORD(v37) = *(_DWORD *)(v36 - 144);
  v44 = a32(a33);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v34
                                                      + 8
                                                      * ((26 * ((_DWORD)v37 == ((163 * (v33 ^ 0x6A0)) ^ 0x278FB76E))) | v33))
                                          - 4))(v44);
}

uint64_t sub_19324E018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int *a23,uint64_t a24,void (*a25)(uint64_t),uint64_t (*a26)(_QWORD, uint64_t, uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;

  v37 = *(_QWORD *)(v35 + 8 * v33);
  v38 = 486723911
      * (((v34 | 0xA4ED84C9B892D9A5) - (v34 | 0x5B127B36476D265ALL) + 0x5B127B36476D265ALL) ^ 0x96535F580858B93FLL);
  *(_DWORD *)(v36 - 128) = v33 - 71465943 - v38;
  *(_QWORD *)(v36 - 144) = a33;
  *(_QWORD *)(v36 - 136) = v37 - v38 - 8;
  a25(v36 - 144);
  v39 = a26(*a23, a24, a29);
  v40 = ((v39 << ((3 * (v33 ^ 0x18)) ^ 0xA4)) & 0x6FDFFF36) + (v39 ^ (((v33 - 1287664954) & 0xCFFBF6FA) - 1263256917));
  v41 = *(_QWORD *)(v35 + 8 * (v33 - 5));
  *(_DWORD *)(v36 - 128) = v33 - 71465943 - 486723911 * ((v34 - 2 * (v34 & 0xC515DB4F) - 988423345) ^ 0x75DFBBD5);
  *(_QWORD *)(v36 - 144) = a33;
  *(_QWORD *)(v36 - 136) = v41
                         - 486723911
                         * ((v34 - 2 * (v34 & 0x68534377C515DB4FLL) + 0x68534377C515DB4FLL) ^ 0x5AED98E675DFBBD5)
                         - 8;
  v42 = ((uint64_t (*)(uint64_t))a25)(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((110 * (v40 != 938475419)) ^ (v33 + 1625))))(v42);
}

void sub_19324E1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void (*a30)(uint64_t),void (*a31)(uint64_t),uint64_t a32,uint64_t a33)
{
  int v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  int v40;

  a31(a33);
  v36 = *(_QWORD *)STACK[0x278];
  v37 = *(_DWORD *)STACK[0x280];
  v38 = STACK[0x208];
  v39 = STACK[0x218];
  v40 = 597255653 * ((((v35 - 144) | 0xCE6CF794) - ((v35 - 144) & 0xCE6CF794)) ^ 0xC767880D);
  *(_DWORD *)(v35 - 128) = ((v33 + 1392039402) & 0xAD07237F ^ *v34 ^ 0xAD3FF7F5)
                         - v40
                         + ((2 * *v34) & 0x5A7FEFF4)
                         + 2010771390;
  *(_DWORD *)(v35 - 140) = v40 + 1581691396 + v37 - ((2 * v37) & 0xBC8D6408);
  *(_QWORD *)(v35 - 104) = v39;
  *(_DWORD *)(v35 - 112) = v40 + v33 + 1539;
  *(_QWORD *)(v35 - 120) = v36;
  *(_QWORD *)(v35 - 136) = v38;
  a30(v35 - 144);
  JUMPOUT(0x19324E2B0);
}

uint64_t sub_19324E33C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v0 - 75766507) & 0x87BFD5F4 ^ (v3 + v0 - 2534 + 1625)) * (v2 == v1)) ^ v0)))();
}

void sub_19324E37C(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  STACK[0x588] = 0;
  v2 = *(_QWORD *)(v1 + 8 * a1);
  STACK[0x4D0] = STACK[0x238];
  STACK[0x4D8] = STACK[0x230];
  STACK[0x5F8] = v2;
  STACK[0x4E0] = STACK[0x228];
  JUMPOUT(0x19324E3B0);
}

uint64_t sub_19324E470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t, uint64_t))
{
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = (_QWORD *)STACK[0x388];
  *v36 = 0;
  v36[1] = 0;
  STACK[0x398] = (unint64_t)(v36 + 1);
  v37 = a34(4096, 2241923698);
  *(_QWORD *)STACK[0x388] = v37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35
                                        + 8 * (int)(((v37 == 0) * (((v34 + 778020823) & 0xD1A0575D) - 586)) ^ v34))
                            - 4))();
}

uint64_t sub_19324E4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(unint64_t))
{
  int v37;
  uint64_t v38;

  v38 = a37(STACK[0x388]);
  STACK[0x4F0] = 0;
  LOBYTE(STACK[0x607]) = 0;
  LODWORD(STACK[0x3B4]) = v37;
  LOBYTE(STACK[0x57B]) = STACK[0x607];
  *(_QWORD *)STACK[0x350] = STACK[0x4F0];
  return ((uint64_t (*)(uint64_t))STACK[0x380])(v38);
}

uint64_t sub_19324E554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  uint64_t v42;
  unsigned int v43;

  STACK[0x568] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (int)((1456 * LOBYTE(STACK[0x57B])) ^ (v41 + v43 - 2256))) - (v43 ^ 0x833BC4F4)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_19324E5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;

  v5 = STACK[0x594];
  LODWORD(STACK[0x2B4]) = STACK[0x594];
  v6 = STACK[0x588];
  STACK[0x288] = STACK[0x588];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                        + 8
                                                                        * ((4550 * (v5 > *(_DWORD *)(v6 + 8))) ^ a3))
                                                            - ((a3 - 885007612) & 0xB7FBE7FB ^ (unint64_t)(v4 + 16))))(a1, a2, 101330305);
}

void sub_19324E600(int a1@<W8>)
{
  uint64_t v1;

  STACK[0x510] = ((a1 + 1612142447) ^ 0xFFFFFFFF9FE8A6A3) + *(_QWORD *)(v1 + 8 * a1);
  LODWORD(STACK[0x210]) = STACK[0x394];
  JUMPOUT(0x19324E650);
}

uint64_t sub_19324E76C(uint64_t a1, uint64_t a2)
{
  STACK[0x4F8] = STACK[0x408];
  STACK[0x500] = STACK[0x400];
  STACK[0x508] = STACK[0x3F0];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x410])(a1, a2, 101330305);
}

uint64_t sub_19324E7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int a65;
  int a66;
  int v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;

  LODWORD(STACK[0x3F8]) = a65;
  v68 = STACK[0x508];
  STACK[0x3C8] = STACK[0x508];
  v69 = STACK[0x500];
  STACK[0x3D0] = STACK[0x500];
  v70 = STACK[0x4F8];
  STACK[0x3E0] = STACK[0x4F8];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * (((a66 == (_DWORD)a4) * ((v66 + a9 - 1037) ^ 0xCFE)) ^ (v66 + a9 - 1037))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v70,
           v69,
           v68,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_19324E80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  unint64_t v64;
  uint64_t v65;
  _DWORD *v66;
  int v67;
  int v68;
  unsigned int v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v72;

  v64 = STACK[0x3D0];
  v65 = *(_QWORD *)STACK[0x3D0];
  v66 = (_DWORD *)STACK[0x3E0];
  v67 = STACK[0x3F8];
  v68 = v67 - ((v67 << (((a9 + 81) | 0x80) ^ 0xF1)) & 0x35C8A440) + 451170848;
  v69 = ((2 * *(_DWORD *)STACK[0x3E0]) & 0xD71FFF3E) + (*(_DWORD *)STACK[0x3E0] ^ 0x6B8FFF9F) - 1804599199;
  *(_BYTE *)(v65 + v69) = HIBYTE(v68) ^ 0x1A;
  *(_BYTE *)(v65 + v69 + 1) = BYTE2(v68) ^ 0xE4;
  *(_BYTE *)(v65 + v69 + 2) = (((BYTE1(v68) ^ 0x52) - 2 * ((BYTE1(v68) ^ 0x52) & 7 ^ BYTE1(v68) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v65 + v69 + 3) = v68 ^ 0x20;
  *v66 += 4;
  v72 = STACK[0x3C8];
  v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x3C8];
  STACK[0x5A0] = (unint64_t)v66;
  STACK[0x5A8] = v64;
  STACK[0x5B0] = (unint64_t)v70;
  LODWORD(STACK[0x5BC]) = v67;
  LODWORD(STACK[0x52C]) = a4;
  STACK[0x5C0] = (unint64_t)v66;
  STACK[0x5C8] = v64;
  STACK[0x5D0] = (unint64_t)v70;
  LODWORD(STACK[0x53C]) = v67;
  LODWORD(STACK[0x540]) = a4;
  STACK[0x518] = (unint64_t)v66;
  STACK[0x520] = v64;
  STACK[0x530] = (unint64_t)v70;
  LODWORD(STACK[0x544]) = v67;
  LODWORD(STACK[0x560]) = a4;
  STACK[0x548] = (unint64_t)v66;
  STACK[0x550] = v64;
  STACK[0x558] = (unint64_t)v70;
  LODWORD(STACK[0x564]) = v67;
  HIDWORD(a42) = a4;
  return v70(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v66,
           v64,
           v72,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_19324E96C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int v46;
  int v47;
  uint64_t v48;

  LODWORD(STACK[0x2DC]) = a46;
  return ((uint64_t (*)(void))(*(_QWORD *)(v48
                                        + 8
                                        * ((((a46 == a4) ^ (((v46 - 20) & 0x7F) + 13)) & 1 | (2 * (((a46 == a4) ^ (((v46 - 20) & 0x7F) + 13)) & 1))) ^ (v47 + v46 + 544)))
                            - 12))();
}

#error "19324EA24: call analysis failed (funcsize=25)"

uint64_t sub_19324EA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;
  _QWORD *a66;
  unint64_t a67;
  uint64_t v67;

  STACK[0x480] = a67;
  STACK[0x4A0] = (unint64_t)a66;
  STACK[0x4A8] = a65;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * (((*a66 == 0) * (((a9 + 2188) | 0x89) ^ 0x349)) ^ a9)) - ((a9 - 609887802) & 0x245A27D7) + 1398))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_19324F858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(void),int a38,int a39,uint64_t a40,uint64_t a41,int a42)
{
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t v45;

  v42 = (_QWORD *)STACK[0x4A0];
  *v42 = 0;
  v42[1] = 0;
  v43 = a37();
  v44 = (uint64_t (*)(uint64_t))STACK[0x4A8];
  LODWORD(STACK[0x298]) = a39;
  LODWORD(STACK[0x29C]) = a42;
  STACK[0x200] = STACK[0x480];
  v45 = STACK[0x200];
  STACK[0x568] = 0;
  STACK[0x4C8] = v45;
  return v44(v43);
}

void sub_19324F8B8()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 16) = v1;
}

void sub_19324F8C0()
{
  JUMPOUT(0x19324E708);
}

uint64_t sub_19324F8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  unsigned int v38;
  uint64_t v39;
  _BOOL4 v40;

  v40 = a38 == ((v38 + 100552368) & 0xFA01AD9E ^ 0xC93);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (int)((v40 | (16 * v40)) ^ v38))
                                                            - (v38 ^ 0x1041)))(a1, a2, 101330305);
}

uint64_t sub_19324F920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (v39 ^ (117 * (a9 & 1)))) - ((v39 - 1535370079) & 0x5B83DEBF) - ((v39 - 278702843) & 0x109CA5F6) + 3017))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_19324F978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 a67;
  int v67;
  int v68;
  uint64_t v69;

  LODWORD(STACK[0x244]) = 101330305;
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8
                                              * (int)(((v68 + ((v67 + 35846805) | 0x8118C440) - 2856) * a67) ^ v67))
                            - 4))();
}

uint64_t sub_19324F9C0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x244]) = 101330303;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v1 - 2129594368) | 0x22AC0D0) ^ 0x833BC4FF) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_19324FA18()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2 = *(_QWORD *)STACK[0x3E8];
  STACK[0x430] = v2;
  v3 = (*(unsigned int *)STACK[0x420] ^ 0xFBFEEEFBBCECF3EBLL)
     + 0x5EE3F9C7FF9BDD00
     + (((unint64_t)*(unsigned int *)STACK[0x420] << ((((v0 - 127) ^ 0x96) + 106) ^ 0xA0u)) & 0x179D9E7D6);
  v4 = (v3 ^ 0xCB5C0F4802760ED1) & (2 * (v3 & ((34 * ((v0 + 129) ^ 0xC96u)) ^ 0x44377285BLL))) ^ v3 & ((34 * ((v0 + 129) ^ 0xC96u)) ^ 0x44377285BLL);
  v5 = ((2 * (v3 ^ 0xCB5C0F40827A04D9)) ^ 0x90822081821A5798) & (v3 ^ 0xCB5C0F40827A04D9) ^ (2
                                                                                                 * (v3 ^ 0xCB5C0F40827A04D9)) & 0x6E41187CC10D2BCCLL;
  v6 = v5 ^ 0x2241080441052844;
  v7 = (v5 ^ 0x2241083440080088) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0xB90461F30434AF30) & v6 ^ (4 * v6) & 0x6E41187CC10D2BCCLL;
  v9 = (v8 ^ 0x2800007000042B00) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x4641180CC10900CCLL)) ^ 0xE41187CC10D2BCC0) & (v8 ^ 0x4641180CC10900CCLL) ^ (16 * (v8 ^ 0x4641180CC10900CCLL)) & 0x6E41187CC10D2BC0;
  STACK[0x488] = v3 ^ (2
                     * (((((v10 ^ 0xA401830C10D030CLL) << 8) ^ 0x41187CC10D2BCC00) & (v10 ^ 0xA401830C10D030CLL) ^ ((v10 ^ 0xA401830C10D030CLL) << 8) & 0x6E41187CC10D2B00) & 0xC010C00000000 ^ (v10 ^ 0x6401004C00002800) & (v9 << 8) ^ v9 ^ ((((v10 ^ 0xA401830C10D030CLL) << 8) ^ 0x41187CC10D2BCC00) & (v10 ^ 0xA401830C10D030CLL) ^ ((v10 ^ 0xA401830C10D030CLL) << 8) & 0x6E41187CC10D2B00 ^ 0x4000184001090000) & (((v10 ^ 0x6401004C00002800) & (v9 << 8) ^ v9) << 16))) ^ 0x5C802061821A5798;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((2 * (v2 <= STACK[0x428])) | (4 * (v2 <= STACK[0x428])) | (v0 + 129)))
                            - 12))();
}

uint64_t sub_19324FC78()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x444]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v0 - v2 + ((v0 - 1138320418) & 0x43D95BD3 ^ (v2 - 1250)) - 117) * (v1 != 0)) ^ v0))
                            - 8))();
}

uint64_t sub_19324FCC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;
  unsigned int v54;
  unint64_t v55;

  v54 = LODWORD(STACK[0x444]) - 1;
  v55 = (v54 ^ 0x767A3EBDF7FA0F3DLL)
      + ((2 * (LODWORD(STACK[0x444]) - 1)) & 0x1EFF41E7ALL)
      + ((a9 - v52 + 2009) ^ 0x8985C1428B3E3433);
  *(_BYTE *)(STACK[0x428] + v55) = *(_BYTE *)(STACK[0x430] + v55);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * ((211 * (v54 == 0)) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_19324FD4C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x41C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((v2 + ((a1 - 693) | 2) + ((a1 - 1350576719) & 0xD3BBE7F0) - 728)
                                               * (v1 == 0)) ^ a1))
                            - 8))();
}

uint64_t sub_19324FDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(_QWORD))
{
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v37 = (_QWORD *)STACK[0x3E8];
  v38 = a37(*(_QWORD *)STACK[0x3E8]);
  *v37 = STACK[0x428];
  *(_DWORD *)STACK[0x420] = STACK[0x470];
  LODWORD(STACK[0x244]) = 101372955;
  return sub_19324E76C(v38, v39);
}

uint64_t sub_19324FEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * ((1923 * (a38 == 5 * (v38 ^ 0xB10) - 980)) ^ v38))
                            - ((v38 - 2007) | 0x182u)
                            + 1398))();
}

uint64_t sub_19324FEF4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;

  STACK[0x620] = STACK[0x328];
  STACK[0x628] = STACK[0x300];
  STACK[0x630] = STACK[0x2F8];
  STACK[0x638] = STACK[0x2F0];
  STACK[0x640] = STACK[0x2E0];
  STACK[0x648] = STACK[0x2D0];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                        + 8
                                                                        * ((LOBYTE(STACK[0x3BB])
                                                                          * ((v4 ^ (v2 + 2090)) + 4220)) ^ (v4 + 2093235032)))
                                                            - 4))(a1, a2, 101330305);
}

uint64_t sub_19324FF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unsigned int v49;

  v43 = (a9 - 666464417) & 0x27B97B5A;
  v44 = (v43 ^ 0xFFFFFFFFFFFFF4FELL) + *(_QWORD *)(v41 + 8 * a9);
  STACK[0x728] = STACK[0x328];
  STACK[0x730] = STACK[0x2F8];
  STACK[0x738] = STACK[0x2F0];
  LODWORD(STACK[0x264]) = 1;
  LODWORD(STACK[0x3FC]) = STACK[0x264];
  v45 = STACK[0x738];
  STACK[0x370] = STACK[0x738];
  v46 = STACK[0x730];
  STACK[0x378] = STACK[0x730];
  v47 = STACK[0x728];
  STACK[0x380] = STACK[0x728];
  v48 = STACK[0x618];
  STACK[0x388] = STACK[0x618];
  STACK[0x398] = v44;
  STACK[0x5C0] = v48;
  v49 = *(_DWORD *)(v48 + 12);
  v48 += 12;
  STACK[0x3A0] = v48;
  LODWORD(STACK[0x41C]) = v49;
  STACK[0x588] = v47;
  STACK[0x598] = v48;
  STACK[0x5A0] = v46;
  STACK[0x5A8] = v45;
  STACK[0x5B0] = v44;
  LODWORD(STACK[0x270]) = STACK[0x3FC];
  LODWORD(STACK[0x274]) = a3;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * (int)((7048 * (v49 < 0xFFFFFFFB)) ^ v43)) - (((v40 + v43 - 672) ^ (unint64_t)(v42 + 18)) + (((_DWORD)v43 - 444089204) & 0x1A783877))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_19325020C@<X0>(int a1@<W3>, unsigned int a2@<W8>)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v4 = STACK[0x388];
  v5 = (LODWORD(STACK[0x41C]) ^ 0x59BEBBFBF7BC971DLL)
     - 0x59BEBBFB03A82A91
     + (((unint64_t)LODWORD(STACK[0x41C]) << ((a2 - 15) & 0xF8 ^ (v3 + 13))) & 0x1EF792E3ALL);
  v6 = (*(unsigned int *)(STACK[0x388] + 8) ^ 0x7DDEBBEDF3F593FFLL)
     - 0x7DDEBBECFFE12777
     + ((2 * *(unsigned int *)(STACK[0x388] + 8)) & 0x1E7EB27FELL);
  v7 = v5 < 0xF4146C88;
  v8 = v5 > v6;
  if (v7 != v6 < 0xF4146C88)
    v8 = v7;
  STACK[0x740] = STACK[0x380];
  STACK[0x748] = STACK[0x3A0];
  STACK[0x750] = STACK[0x378];
  STACK[0x758] = STACK[0x370];
  STACK[0x760] = STACK[0x398];
  LODWORD(STACK[0x268]) = STACK[0x3FC];
  STACK[0x580] = v4;
  LODWORD(STACK[0x26C]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((943 * v8) ^ a2)) - 4))();
}

void sub_193250330(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v2 = *(_QWORD *)(v1 + 8 * a1);
  v3 = a1 ^ 0x7DB;
  v9 = (v3 ^ 0xFFFFFFFFFFFFF821) + v2;
  STACK[0x5C8] = STACK[0x380];
  STACK[0x5D0] = STACK[0x3A0];
  STACK[0x518] = STACK[0x378];
  STACK[0x520] = STACK[0x370];
  STACK[0x530] = STACK[0x398];
  LODWORD(STACK[0x294]) = STACK[0x3FC];
  v4 = STACK[0x388];
  STACK[0x548] = STACK[0x388];
  LODWORD(STACK[0x298]) = 4;
  STACK[0x550] = v4;
  v5 = ((_DWORD)v3 - 583919582) & 0x22CDE78F;
  STACK[0x3F0] = STACK[0x550];
  v6 = LODWORD(STACK[0x298]);
  STACK[0x400] = STACK[0x548];
  LODWORD(STACK[0x494]) = STACK[0x294];
  STACK[0x408] = STACK[0x530];
  STACK[0x410] = STACK[0x520];
  STACK[0x420] = STACK[0x518];
  STACK[0x428] = STACK[0x5D0];
  STACK[0x430] = STACK[0x5C8];
  STACK[0x438] = v9;
  v7 = *(unsigned int *)(STACK[0x3F0] + 8);
  STACK[0x448] = STACK[0x3F0] + 8;
  v8 = (v6 ^ (v5 + 0x6F75BFFEFD993770)) + ((2 * v6) & 0x1FB327DFELL) + v7 - 0x6F75BFFEFD993EFFLL;
  STACK[0x458] = v8;
  LOBYTE(STACK[0x467]) = v8 < 0xFFFFFFFF;
  JUMPOUT(0x193251150);
}

uint64_t sub_193250390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  int v60;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;

  v62 = STACK[0x690];
  LODWORD(STACK[0x324]) = HIDWORD(a52);
  v63 = STACK[0x688];
  v64 = STACK[0x680];
  STACK[0x6D8] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * ((((_DWORD)a53 == ((v60 - 524033333) & 0x9C005FDF ^ ((_DWORD)a4 - 155))) * (((v58 + v60 - 2188) | 0x101) - 810)) ^ (v58 + v60 - 1931))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           v62,
           a45,
           a46,
           a47,
           a48,
           v63,
           a50,
           v64,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_193250410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v62;

  v62 = STACK[0x618];
  v60 = ((2 * *(unsigned int *)(STACK[0x618] + 12)) & 0x1DDF7A7F4)
      + (*(unsigned int *)(STACK[0x618] + 12) ^ 0x7B73EDAFEEFBD3FALL);
  STACK[0x250] = v60;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * ((3292 * (v60 + ((v58 - 861) ^ 0x848C125011042C4ALL) < 0xFFFFFFFB)) ^ v58)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           v62,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_193250498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,unint64_t a51,uint64_t a52,uint64_t a53,unint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unint64_t a60)
{
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  _BOOL4 v65;

  v65 = v61 + STACK[0x250] + 125 > *(unsigned int *)(a54 + 8);
  STACK[0x698] = a60;
  STACK[0x6A0] = a51;
  STACK[0x6A8] = STACK[0x4E8];
  STACK[0x6B0] = a54;
  STACK[0x6B8] = a49;
  STACK[0x6C0] = a44;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v64 - (v60 ^ (v62 + 2086)) + *(_QWORD *)(v63 + 8 * ((2361 * v65) ^ v60))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_193250510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,unint64_t a51,uint64_t a52,uint64_t a53,unint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unint64_t a60)
{
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;

  v65 = ((v60 + 1945) ^ 0xFFFFFFFFFFFFF829) + *(_QWORD *)(v61 + 8 * v60);
  STACK[0x5C8] = a60;
  STACK[0x5D0] = a51;
  STACK[0x518] = STACK[0x4E8];
  STACK[0x520] = a54;
  STACK[0x530] = a49;
  LODWORD(STACK[0x294]) = STACK[0x324];
  STACK[0x548] = a44;
  LODWORD(STACK[0x298]) = 12;
  STACK[0x550] = a54;
  STACK[0x3F0] = STACK[0x550];
  v62 = LODWORD(STACK[0x298]);
  STACK[0x400] = STACK[0x548];
  LODWORD(STACK[0x494]) = STACK[0x294];
  STACK[0x408] = STACK[0x530];
  STACK[0x410] = STACK[0x520];
  STACK[0x420] = STACK[0x518];
  STACK[0x428] = STACK[0x5D0];
  STACK[0x430] = STACK[0x5C8];
  STACK[0x438] = v65;
  v63 = *(unsigned int *)(STACK[0x3F0] + 8);
  STACK[0x448] = STACK[0x3F0] + 8;
  v64 = (v62 ^ (((v60 - 583917637) & 0x22CDE78F) + 0x6F75BFFEFD993770))
      + ((2 * v62) & 0x1FB327DFELL)
      + v63
      - 0x6F75BFFEFD993EFFLL;
  STACK[0x458] = v64;
  LOBYTE(STACK[0x467]) = v64 < 0xFFFFFFFF;
  JUMPOUT(0x193251150);
}

uint64_t sub_19325056C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  unint64_t v64;

  v64 = STACK[0x6C0];
  LODWORD(STACK[0x334]) = HIDWORD(a53);
  STACK[0x6D8] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v63 + 8 * (((HIDWORD(a55) == ((v62 + v60 - 913) ^ ((_DWORD)a4 - 155))) * ((v60 - v61 - 417) ^ 0x151B)) ^ (v62 + v60 - 1931))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           v64);
}

#error "1932506F0: call analysis failed (funcsize=53)"

uint64_t sub_1932506F4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,_DWORD *a62,uint64_t a63)
{
  _BYTE *a65;
  int v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _BYTE *v72;
  char v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  unint64_t v78;
  int v79;
  uint64_t v80;

  v69 = (v65 ^ 0xA65E53CA) + 1503768637;
  *(_BYTE *)STACK[0x200] = *a65;
  v70 = STACK[0x258];
  v71 = STACK[0x258];
  v72 = (_BYTE *)(a1 + STACK[0x258] + a63);
  *v72 = *(_BYTE *)(a57 - 0x27F95742180B695ELL);
  v72[1] = *(_BYTE *)(a57 - 0x27F95742180B695DLL);
  *(_BYTE *)(a63 + v70 + (v69 ^ (a1 + 842))) = *(_BYTE *)(a57 - 0x27F95742180B695CLL);
  v72[3] = *(_BYTE *)(a57 - 0x27F95742180B695BLL);
  v72[4] = *(_BYTE *)(a57 - 0x27F95742180B695ALL);
  v72[5] = *(_BYTE *)(a57 - 0x27F95742180B6959);
  *(_BYTE *)(a1 + v71 + a63 + 6) = *(_BYTE *)(a57 - 0x27F95742180B6958);
  v73 = ((v65 ^ 0xCA) + 35) & 0xD1;
  *a62 += 8;
  v74 = STACK[0x618];
  STACK[0x208] = STACK[0x618];
  STACK[0x610] = 0;
  a24(a26);
  v75 = *v67;
  v76 = *(_QWORD *)v74;
  v77 = *(_DWORD *)(v74 + 12);
  STACK[0x218] = v74 + 12;
  v78 = STACK[0x4D8];
  v79 = 597255653 * ((((2 * (v68 - 144)) | 0x2A08826C) - (v68 - 144) - 352600374) ^ 0x1C0F3EAF);
  *(_QWORD *)(v68 - 104) = STACK[0x4E0];
  *(_DWORD *)(v68 - 112) = v79 + v69 + 1888;
  *(_DWORD *)(v68 - 140) = v79 + v77 + 1581691396 - ((2 * v77) & 0xBC8D6408);
  *(_QWORD *)(v68 - 136) = v78;
  *(_DWORD *)(v68 - 128) = (v75 ^ 0xA579F7FE) - v79 + ((v75 << (v73 + 1)) & 0x4AF3EFFC) + 2141188026;
  *(_QWORD *)(v68 - 120) = v76;
  a23(v68 - 144);
  LODWORD(v74) = *(_DWORD *)(v68 - 144);
  v80 = a25(a26);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v66 + 8 * (int)((3483 * ((_DWORD)v74 == 663729217)) ^ v69))
                                          - 8))(v80);
}

uint64_t sub_193250A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int *a23,uint64_t a24,void (*a25)(uint64_t),uint64_t (*a26)(_QWORD, uint64_t, uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v37 = *(_QWORD *)(v35 + 8 * (v33 - 537));
  v38 = 486723911 * (((v34 | 0x53F677BADDC7990) - v34 + (v34 & 0xFAC0988452238668)) ^ 0x3781BCEA1D16190ALL);
  *(_DWORD *)(v36 - 128) = v33 - 71466480 - v38;
  *(_QWORD *)(v36 - 144) = a33;
  *(_QWORD *)(v36 - 136) = v37 - v38 - 8;
  a25(v36 - 144);
  v39 = a26(*a23, a24, a29);
  v40 = ((((v33 - 717827533) & 0x2AC92DCC) + 2134881646) & (2 * v39)) + (v39 ^ 0xBF9FDD5B);
  v41 = 486723911 * ((-2 - ((~v34 | 0x5198AD0027B4DD57) + (v34 | 0xAE6752FFD84B22A8))) ^ 0x63267691977EBDCDLL);
  v42 = *(_QWORD *)(v35 + 8 * (v33 - 542)) - v41;
  *(_DWORD *)(v36 - 128) = v33 - 71466480 - v41;
  *(_QWORD *)(v36 - 144) = a33;
  *(_QWORD *)(v36 - 136) = v42 - 8;
  v43 = ((uint64_t (*)(uint64_t))a25)(v36 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v35 + 8 * ((14 * (v40 == -1080042149)) | (v33 - 537) ^ 0x4E))
                                          - 4))(v43);
}

void sub_193250BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void (*a30)(uint64_t),void (*a31)(uint64_t),uint64_t a32,uint64_t a33)
{
  int v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  int v40;

  a31(a33);
  v36 = *(_QWORD *)STACK[0x208];
  v37 = *(_DWORD *)STACK[0x218];
  v38 = STACK[0x4D8];
  v39 = STACK[0x4E0];
  v40 = 597255653 * ((2 * ((v35 - 144) & 0xD79A060) - (v35 - 144) + 1921408922) ^ 0x7B8D2003);
  *(_DWORD *)(v35 - 128) = (*v34 ^ 0x779FFFFF) - v40 - 1384519751 + (((52 * (v33 ^ 0x508)) ^ 0xEF3FF2FE) & (2 * *v34));
  *(_DWORD *)(v35 - 112) = v40 + v33 + 1888;
  *(_DWORD *)(v35 - 140) = v40 + v37 + 1581691396 - ((2 * v37) & 0xBC8D6408);
  *(_QWORD *)(v35 - 120) = v36;
  *(_QWORD *)(v35 - 104) = v39;
  *(_QWORD *)(v35 - 136) = v38;
  a30(v35 - 144);
  JUMPOUT(0x193250CB8);
}

uint64_t sub_193250D08@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((1447 * (a1 ^ 0x362)) ^ 0x1EC4) * (v2 == v1)) ^ a1))
                            - (a1 - 804)
                            + 57))();
}

void sub_193250D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,unint64_t a61,unint64_t a62,unint64_t a63)
{
  unint64_t a64;
  unint64_t a68;
  unint64_t a69;
  int v69;

  STACK[0x608] = 0;
  STACK[0x6E8] = a69;
  STACK[0x6F0] = a68;
  STACK[0x6F8] = a64;
  LODWORD(STACK[0x210]) = v69;
  STACK[0x700] = a63;
  STACK[0x708] = a62;
  LODWORD(STACK[0x214]) = STACK[0x334];
  STACK[0x710] = a61;
  JUMPOUT(0x193250DB4);
}

uint64_t sub_193250E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t, uint64_t))
{
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = (_QWORD *)STACK[0x350];
  *v36 = 0;
  v36[1] = 0;
  STACK[0x368] = (unint64_t)(v36 + 1);
  v37 = a34(4096, 2241923698);
  *(_QWORD *)STACK[0x350] = v37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35
                                        + 8 * (int)(((v37 != 0) * (((v34 ^ 0xC6C65F90) + 960083591) ^ 0x523)) ^ v34))
                            - 12))();
}

uint64_t sub_193250EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;

  *(_DWORD *)STACK[0x368] = v56;
  STACK[0x720] = STACK[0x350];
  LODWORD(STACK[0x244]) = 101372955;
  LODWORD(STACK[0x3F8]) = STACK[0x244];
  LOBYTE(STACK[0x3BB]) = 1;
  *(_QWORD *)STACK[0x2C8] = STACK[0x720];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x338])(a1, a2, a3, 101372955, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_193250F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  int v50;

  STACK[0x6C8] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((LOBYTE(STACK[0x3BB]) * (((v50 + 1645528335) & 0x1AAF7649) + 4209)) ^ (v50 + 2093235027))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_193250FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,unsigned int a40)
{
  int v40;
  uint64_t v41;
  unint64_t v42;

  LODWORD(STACK[0x344]) = a40;
  v42 = STACK[0x608];
  STACK[0x228] = STACK[0x608];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41
                                                                        + 8
                                                                        * (int)(((a40 > *(_DWORD *)(v42 + 8))
                                                                               * (v40
                                                                                + ((a3 - 268436307) & 0x933BC7F9)
                                                                                - 409)) ^ a3))
                                                            - 12))(a1, a2, 101330305);
}

void sub_193251028()
{
  STACK[0x5C8] = STACK[0x328];
  STACK[0x5D0] = STACK[0x300];
  STACK[0x518] = STACK[0x2F8];
  STACK[0x520] = STACK[0x2F0];
  STACK[0x530] = STACK[0x2E0];
  LODWORD(STACK[0x294]) = STACK[0x3DC];
  STACK[0x548] = STACK[0x2D0];
  LODWORD(STACK[0x298]) = STACK[0x344];
  JUMPOUT(0x193251080);
}

uint64_t sub_1932511A0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x29C]) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((((v3 - 1194) | 0xAA2) - 598) * (v4 > v5)) ^ v3)) - 4))();
}

uint64_t sub_1932511D0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  int v10;

  v2 = STACK[0x428];
  STACK[0x6A0] = STACK[0x428];
  v3 = STACK[0x420];
  STACK[0x6A8] = STACK[0x420];
  v4 = STACK[0x410];
  STACK[0x6B0] = STACK[0x410];
  v5 = STACK[0x408];
  STACK[0x6B8] = STACK[0x408];
  v6 = STACK[0x494];
  v7 = STACK[0x400];
  STACK[0x6C0] = STACK[0x400];
  v8 = STACK[0x430];
  STACK[0x698] = STACK[0x430];
  STACK[0x740] = v8;
  STACK[0x748] = v2;
  STACK[0x750] = v3;
  STACK[0x758] = v4;
  v10 = STACK[0x29C];
  STACK[0x760] = v5;
  LODWORD(STACK[0x268]) = v6;
  STACK[0x580] = v7;
  LODWORD(STACK[0x26C]) = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x438])(a1, a2, 101330305);
}

uint64_t sub_193251268(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v7 = STACK[0x26C];
  STACK[0x3A8] = STACK[0x580];
  v8 = STACK[0x268];
  LODWORD(STACK[0x444]) = STACK[0x268];
  v9 = STACK[0x760];
  STACK[0x3C0] = STACK[0x760];
  v10 = STACK[0x758];
  STACK[0x3C8] = STACK[0x758];
  v11 = STACK[0x750];
  STACK[0x3D0] = STACK[0x750];
  v12 = STACK[0x748];
  STACK[0x3E0] = STACK[0x748];
  v13 = STACK[0x740];
  STACK[0x3E8] = STACK[0x740];
  STACK[0x588] = v13;
  STACK[0x598] = v12;
  STACK[0x5A0] = v11;
  STACK[0x5A8] = v10;
  STACK[0x5B0] = v9;
  LODWORD(STACK[0x270]) = v8;
  STACK[0x5C0] = STACK[0x3A8];
  LODWORD(STACK[0x274]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)(((v7 != a4) * ((v4 ^ 0x833BCFF2) - 2314)) ^ (v5 + v4 - 50)))
                            - 12))();
}

uint64_t sub_193251300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  int v50;
  int v51;
  unsigned int v52;
  unint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v46 = v45 ^ a9;
  v47 = STACK[0x3A8];
  v48 = *(_QWORD *)STACK[0x3A8];
  v49 = (_DWORD *)STACK[0x3E0];
  v50 = STACK[0x444];
  v51 = v46 - 1750561488 + LODWORD(STACK[0x444]) - ((2 * LODWORD(STACK[0x444])) & 0x35C8A440);
  v52 = ((2 * *(_DWORD *)STACK[0x3E0]) & 0x9FB7FB78) + (*(_DWORD *)STACK[0x3E0] ^ 0x4FDBFDBC) - 1339817404;
  *(_BYTE *)(v48 + v52) = HIBYTE(v51) ^ 0x1A;
  *(_BYTE *)(v48 + v52 + 1) = BYTE2(v51) ^ 0xE4;
  *(_BYTE *)(v48 + v52 + 2) = (((BYTE1(v51) ^ 0x52) - 2 * ((BYTE1(v51) ^ 0x52) & 7 ^ BYTE1(v51) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v48 + v52 + 3) = v51 ^ 0x20;
  *v49 += 4;
  STACK[0x588] = STACK[0x3E8];
  STACK[0x598] = (unint64_t)v49;
  STACK[0x5A0] = STACK[0x3D0];
  STACK[0x5A8] = STACK[0x3C8];
  STACK[0x5B0] = STACK[0x3C0];
  LODWORD(STACK[0x270]) = v50;
  STACK[0x5C0] = v47;
  LODWORD(STACK[0x274]) = a4;
  v53 = STACK[0x5C0];
  v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x5B0];
  v55 = STACK[0x5A8];
  v56 = STACK[0x5A0];
  v57 = STACK[0x598];
  v58 = STACK[0x588];
  STACK[0x620] = STACK[0x588];
  STACK[0x628] = v57;
  STACK[0x630] = v56;
  STACK[0x638] = v55;
  STACK[0x640] = (unint64_t)v54;
  STACK[0x648] = v53;
  STACK[0x650] = v58;
  STACK[0x658] = v57;
  STACK[0x660] = v56;
  STACK[0x668] = v55;
  STACK[0x670] = (unint64_t)v54;
  STACK[0x678] = v53;
  STACK[0x680] = v57;
  STACK[0x688] = (unint64_t)v54;
  STACK[0x690] = v53;
  return v54(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_193251474(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57)
{
  int v57;
  int v58;
  uint64_t v59;

  LODWORD(STACK[0x348]) = a57;
  return ((uint64_t (*)(void))(*(_QWORD *)(v59
                                        + 8
                                        * ((107
                                          * (a57 == ((2 * (v57 ^ 0x833BC519)) ^ (a4 - 1041))
                                                  + ((v57 - 1102881821) & 0xBE80DF6F))) ^ (v58 + v57 + 385)))
                            - 4))();
}

uint64_t sub_1932514E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unsigned int a45)
{
  int v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;

  v47 = (unint64_t *)STACK[0x608];
  STACK[0x230] = STACK[0x608];
  v48 = *v47;
  STACK[0x238] = v48;
  v49 = STACK[0x610];
  STACK[0x278] = STACK[0x610];
  STACK[0x308] = ((425 * (v45 ^ 0x3D4) + 1002597889) & 0xC43D8E7B)
               + a45
               - 0x4D58EB37AD4779BLL
               - ((2 * a45) & 0x10A5710CALL)
               - 1651;
  return ((uint64_t (*)(void))(*(_QWORD *)(v46 + 8 * ((3003 * (v49 <= v48)) ^ v45)) - 12))();
}

uint64_t sub_193251578@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  uint64_t v31;
  _BOOL4 v32;

  LODWORD(STACK[0x358]) = (((a1 + 1580001415) & 0xA1D317CD) - 2060746339) ^ LODWORD(STACK[0x308]);
  v32 = a31 == ((a1 - 2026637398) & 0x78CC09EB ^ 0x819);
  return ((uint64_t (*)(void))(*(_QWORD *)(v31 + 8 * (((2 * v32) | (4 * v32)) ^ a1)) - 12))();
}

uint64_t sub_1932515F0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v0 ^ (1791 * (v1 == 0))))
                            - ((v2 + v0 + 89) ^ 0xFFFFFFFF7CC43364)
                            - ((v0 - 531164561) & 0x1FA8EDFF)))();
}

uint64_t sub_193251648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (((_DWORD)a39 == a9 - v39 + 2093235668) | (2 * ((_DWORD)a39 == a9 - v39 + 2093235668)) | a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_193251684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;

  v49 = ((a46 - 1) ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + ((2 * (a46 - 1)) & 0x1EFF41E7ALL);
  *(_BYTE *)(STACK[0x238] + v49) = *(_BYTE *)(STACK[0x278] + v49);
  return ((uint64_t (*)(void))(*(_QWORD *)(v48 + 8 * ((1277 * ((_DWORD)a46 == 1)) ^ (v47 + v46 + 7))) - 4))();
}

uint64_t sub_193251700@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = v5 - 1;
  v10 = (v9 ^ v1) + a1 + (v2 & (2 * v9));
  *(_BYTE *)(v4 + v10) = *(_BYTE *)(v3 + v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v9 == 0) * v7) ^ v6)) - 4))();
}

uint64_t sub_193251738(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int *a35,uint64_t (*a36)(_QWORD, unint64_t, _QWORD),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unsigned int a45)
{
  int v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  unint64_t v51;
  uint64_t v53;

  v48 = STACK[0x230];
  *(_DWORD *)(v48 + 8) = a45;
  *(_DWORD *)(v48 + 12) = 0;
  STACK[0x6C8] = v48;
  v49 = (v46 + v45 + 1256) | 0xE1;
  v51 = STACK[0x6C8];
  v53 = a36(*a35, STACK[0x610], a45);
  STACK[0x6D0] = v51;
  STACK[0x280] = v51;
  LODWORD(STACK[0x35C]) = a4;
  STACK[0x6D8] = v51;
  return (*(uint64_t (**)(uint64_t))(v47
                                            + 8
                                            * ((484
                                              * (((v49 - 58) ^ (a4 == ((v49 + 1598311110) ^ 0x5F445C20)
                                                                                     + 101371008)) & 1)) ^ v49)))(v53);
}

uint64_t sub_193251AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  _BOOL4 v60;

  v60 = STACK[0x280] != 0;
  STACK[0x6D8] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (int)((((((v58 & 0xA0BBA7E5) - 913) | 0x78B) ^ 0x8CF) * v60) ^ v58 & 0xA0BBA7E5)) - (((v58 & 0xA0BBA7E5) + 3183) | 0xED) + 4337))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_193251B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unint64_t v62;
  unint64_t v63;
  _BOOL4 v64;
  _BOOL4 v65;

  v59 = STACK[0x280];
  v60 = *(unsigned int *)(STACK[0x280] + 8);
  STACK[0x6D8] = STACK[0x280];
  v61 = *(_DWORD *)(v59 + 12);
  STACK[0x288] = v59 + 12;
  LODWORD(STACK[0x360]) = v61;
  v62 = (v57 - 3420) + (v61 ^ 0x3EE72FEEFCBCFF74) + ((2 * v61) & 0x1F979FEE8) - 0x3EE72FEE686C8E3FLL;
  v63 = (v60 ^ 0xB7EDDBFCBFF3FCDBLL) + 0x48122403D45C77F7 + (((v57 ^ 0x1766u) + 0x17FE7F21BLL) & (2 * v60));
  v64 = v62 < 0x945074D2;
  v65 = v62 > v63;
  if (v64 != v63 < 0x945074D2)
    v65 = v64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((492 * v65) ^ v57)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_193251C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  int v75;

  v64 = STACK[0x280];
  v65 = *(_QWORD *)STACK[0x280];
  v66 = ((2 * LODWORD(STACK[0x360])) & 0xFF4FDCEC) + (LODWORD(STACK[0x360]) ^ 0x7FA7EE76) - 2141713936;
  v67 = v62 + 1018;
  v68 = *(unsigned __int8 *)(v65 + v66 + 1948);
  v69 = (((v68 + 4420934 - ((2 * v68) & 0x4C)) << 8) - 0x2000) ^ 0x43752600 | (((-16777216
                                                                               * *(unsigned __int8 *)(v65 + v66 + 1946)) | (*(unsigned __int8 *)(v65 + v66 + v62 + 1018) << 16))
                                                                             - 0x1000000);
  LODWORD(v65) = *(unsigned __int8 *)(v65 + v66 + 1949);
  v70 = (v69 ^ 0x5A6FFF) & ((v65 - 1636428685 - ((2 * v65) & 0xE6)) ^ 0x82C7F04) ^ v69 & 0x69A59400;
  v71 = (v70 & 0x324D5387 ^ 0x12494387) + (v70 ^ 0x28A41408) - ((v70 ^ 0x28A41408) & 0x324D5387);
  *(_DWORD *)STACK[0x288] = LODWORD(STACK[0x360]) + 4;
  v75 = STACK[0x35C];
  STACK[0x6D8] = v64;
  LODWORD(STACK[0x364]) = (((v71 ^ 0x1FBDF440) - 789305555) ^ ((v71 ^ 0x7B8AD7DE) - 1262287693) ^ ((v71 ^ 0x81840F66)
                                                                                                 + 1322114059))
                        - 619719546;
  v72 = STACK[0x6D8];
  STACK[0x2A0] = STACK[0x6D8];
  LODWORD(STACK[0x394]) = v75;
  v73 = STACK[0x618];
  STACK[0x2B8] = STACK[0x618];
  STACK[0x6E0] = v72;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * (int)((((((v67 - 1901) ^ (v73 == 0)) & 1) == 0) * (((v67 + 54082661) | 0x800280F0) + 2093234967)) ^ v67)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_193251E14()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;

  v2 = v0 ^ 0x70A;
  LODWORD(STACK[0x2AC]) = STACK[0x364];
  LODWORD(STACK[0x2B0]) = v0;
  LODWORD(STACK[0x2B4]) = STACK[0x394];
  STACK[0x558] = STACK[0x2A0];
  v3 = STACK[0x2B8];
  STACK[0x568] = STACK[0x2B8];
  v4 = STACK[0x558];
  v5 = STACK[0x2B4];
  v6 = STACK[0x2AC];
  STACK[0x4B0] = ((v2 + 1068001497) & 0xC05793E6) + *(_QWORD *)(v1 + 8 * SLODWORD(STACK[0x2B0])) - 1000;
  STACK[0x4B8] = v3;
  STACK[0x4C0] = v4;
  LODWORD(STACK[0x2DC]) = v5;
  LODWORD(STACK[0x2EC]) = v6;
  JUMPOUT(0x193251EFCLL);
}

uint64_t sub_193251F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(void),int a38,int a39,uint64_t a40,uint64_t a41,int a42)
{
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t);

  v42 = (_QWORD *)STACK[0x4A0];
  *v42 = 0;
  v42[1] = 0;
  v43 = a37();
  STACK[0x4C8] = STACK[0x4A8];
  STACK[0x4D0] = STACK[0x480];
  LODWORD(STACK[0x314]) = a39;
  LODWORD(STACK[0x320]) = a42;
  v44 = STACK[0x4D0];
  v45 = (uint64_t (*)(uint64_t))STACK[0x4C8];
  STACK[0x6C8] = 0;
  STACK[0x6E0] = v44;
  return v45(v43);
}

void sub_193251FCC()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 16) = v1;
}

uint64_t sub_193251FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39
                                        + 8
                                        * (((33 * (((v38 + 1179) | 4) ^ 0x1070) - 1772) * (a38 == 16)) ^ (v38 + 207)))
                            - 8))();
}

uint64_t sub_193252010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * ((((215 * (v3 ^ 0x7D4) - 1115) ^ (5 * (v3 ^ 0x54B)))
                                                                          * (a3 & 1)) ^ v3))
                                                            - 4))(a1, a2, 101330305);
}

uint64_t sub_193252058(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  LODWORD(STACK[0x29C]) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8
                                             * (int)((LOBYTE(STACK[0x467]) * ((v4 + v3 - 1164) ^ 0x833BC751)) ^ v3))
                            - (v3 ^ 0x2A2u)
                            + 3656))();
}

uint64_t sub_1932520A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(unint64_t, uint64_t))
{
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a34(STACK[0x470], 2241923698);
  STACK[0x450] = v38;
  LODWORD(STACK[0x29C]) = v35 - 2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v36 + 8 * ((55 * (v38 == 0)) ^ v34))
                            - ((v37 + ((v34 - 3372) | 0x488u) - 1424) ^ ((v34 - 2095860236) | 0x2800B0u))))();
}

uint64_t sub_19325212C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)STACK[0x3F0];
  STACK[0x478] = v2;
  v3 = (*(unsigned int *)STACK[0x448] ^ 0xF1ECFABFF09E6F3FLL)
     + 0x2FF75DEFAFEDF800
     + ((2 * *(unsigned int *)STACK[0x448]) & 0x1E13CDE7ELL);
  v4 = (v3 ^ 0xFF33D6D81F7B5CD5) & (2 * (v3 & ((v0 - 979629641) & 0x3A63F6AE ^ 0x105F739ECFLL))) ^ v3 & ((v0 - 979629641) & 0x3A63F6AE ^ 0x105F739ECFLL);
  v5 = ((2 * (v3 ^ 0xFF33D6F8A73E7DD7)) ^ 0x42508251F09BCA2CLL) & (v3 ^ 0xFF33D6F8A73E7DD7) ^ (2
                                                                                                 * (v3 ^ 0xFF33D6F8A73E7DD7)) & 0x212871A8F84DE516;
  v6 = v5 ^ 0x212810A808442512;
  v7 = (v5 ^ 0x21281028F008C014) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x84A1C6A3E1379458) & v6 ^ (4 * v6) & 0x212871A8F84DE514;
  v9 = (v8 ^ 0x2040A0E0058410) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x2108310818486106)) ^ 0x12871A8F84DE5160) & (v8 ^ 0x2108310818486106) ^ (16 * (v8 ^ 0x2108310818486106)) & 0x212871A8F84DE510;
  v11 = (v10 ^ 0x1088804C4100) & (v9 << 8) ^ v9;
  v12 = (((v10 ^ 0x212861207801A416) << 8) ^ 0x2871A8F84DE51600) & (v10 ^ 0x212861207801A416) ^ ((v10 ^ 0x212861207801A416) << 8) & 0x212871A8F84DE500;
  STACK[0x488] = v3 ^ (2 * (v12 & 0x7008E00400000000 ^ v11 ^ (v12 ^ 0x202020A848450000) & (v11 << 16))) ^ 0x42406151F09BCA2CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((26 * (v2 > STACK[0x450])) ^ v0)) - 8))();
}

uint64_t sub_19325238C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LODWORD(STACK[0x498]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 - 1411) * (v1 != 0)) ^ a1))
                            - (((a1 - 2094318046) | 0x1080C0u) ^ (unint64_t)(v3 + 16))))();
}

uint64_t sub_1932523D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((167 * (a38 == (v38 ^ 0xE6F) - 2805)) ^ v38)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_19325240C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;

  STACK[0x220] = 0;
  *(_BYTE *)STACK[0x450] = *(_BYTE *)STACK[0x478];
  return ((uint64_t (*)(void))(*(_QWORD *)(v41 + 8 * ((492 * (a40 == 1)) ^ (v40 + 1509))) - 8))();
}

void sub_193252498()
{
  JUMPOUT(0x193252460);
}

uint64_t sub_1932524A0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x49C]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v1 + 102) ^ (2235 * (v0 != 0))))
                            - ((v1 + 102 - v2 - 1443051475) & 0xD2C77CEC ^ 0x4E8)))();
}

uint64_t sub_1932524EC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = LODWORD(STACK[0x49C]);
  STACK[0x248] = v2--;
  v3 = (v2 ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + ((2 * v2) & 0x1EFF41E7ALL);
  *(_BYTE *)(STACK[0x450] + v3) = *(_BYTE *)(STACK[0x478] + v3);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v2 == 0) * ((a1 - 67372283) & 0x873FC4FE ^ 0x833BC91F)) ^ a1)))();
}

uint64_t sub_193252584@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = v6 - 1;
  v10 = (v9 ^ v2) + v1 + (v3 & (2 * v9));
  *(_BYTE *)(v5 + v10) = *(_BYTE *)(v4 + v10);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 == 0) * v7) ^ a1)))();
}

uint64_t sub_1932525B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(_QWORD))
{
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  STACK[0x248] = v37;
  v38 = (_QWORD *)STACK[0x3F0];
  v39 = a37(*(_QWORD *)STACK[0x3F0]);
  *v38 = STACK[0x450];
  *(_DWORD *)STACK[0x448] = STACK[0x470];
  LODWORD(STACK[0x29C]) = 101372955;
  return sub_1932511D0(v39, v40);
}

uint64_t sub_1932525F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  uint64_t v31;

  return (*(uint64_t (**)(void))(v31
                              + 8
                              * (int)(((a31 == ((a1 - 2236) | 0x8D4) - 3015) * (((a1 + 1420606366) & 0xAB533FBA) - 1707)) ^ a1)))();
}

uint64_t sub_193252640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  STACK[0x788] = STACK[0x2E0];
  STACK[0x790] = STACK[0x2D0];
  STACK[0x798] = STACK[0x2C8];
  STACK[0x7A0] = STACK[0x2C0];
  STACK[0x7A8] = STACK[0x2B8];
  STACK[0x7B0] = STACK[0x2A0];
  LODWORD(STACK[0x594]) = STACK[0x394];
  LODWORD(STACK[0x5BC]) = STACK[0x3B4];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((LOBYTE(STACK[0x57B])
                                                                                   * (((v5 + 2093234965) | 0x222) ^ 0xD65)) ^ (v3 + v5 - 2309)))
                                                                     - 12))(a1, 101330305, a3, 101372955);
}

uint64_t sub_1932526DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unsigned int v71;

  v65 = ((_DWORD)a9 + 1578) | 0x108u;
  v66 = *(_QWORD *)(v63 + 8 * a9) + v65 - 2405;
  STACK[0x6E0] = STACK[0x2D0];
  STACK[0x6E8] = STACK[0x2C8];
  STACK[0x5E8] = v66;
  STACK[0x6F0] = STACK[0x2A0];
  HIDWORD(a59) = 1;
  LODWORD(STACK[0x3BC]) = 1;
  STACK[0x328] = STACK[0x6F0];
  v67 = STACK[0x5E8];
  v68 = STACK[0x6E8];
  STACK[0x338] = STACK[0x6E8];
  v69 = STACK[0x6E0];
  STACK[0x350] = STACK[0x6E0];
  v70 = STACK[0x778];
  STACK[0x368] = STACK[0x778];
  STACK[0x740] = v70;
  v71 = *(_DWORD *)(v70 + 12);
  v70 += 12;
  STACK[0x370] = v67;
  STACK[0x378] = v70;
  LODWORD(STACK[0x3DC]) = v71;
  STACK[0x728] = v70;
  STACK[0x730] = v69;
  STACK[0x738] = v68;
  STACK[0x748] = v67;
  STACK[0x750] = STACK[0x328];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 - (v65 ^ 0x833BCDA9) + *(_QWORD *)(v63 + 8 * (int)((219 * (v71 < (((_DWORD)v65 - 2374) ^ 0xFFFFFFE8))) ^ v65)) + 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_193252958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _BOOL4 v63;
  _BOOL4 v64;

  v60 = STACK[0x368];
  v61 = (LODWORD(STACK[0x3DC]) ^ 0xB3FBA9F25EB7F6FFLL)
      + 0x4C04560DD0257238
      + ((2 * LODWORD(STACK[0x3DC])) & (a9 ^ 0xBD6FEDEDLL));
  v62 = (*(unsigned int *)(STACK[0x368] + 8) ^ 0x7FDB72DFCF7627D7)
      - 0x7FDB72DFA098BEA4
      + ((2 * *(unsigned int *)(STACK[0x368] + 8)) & 0x19EEC4FAELL);
  v63 = v61 < 0x2EDD6933;
  v64 = v61 > v62;
  if (v63 != v62 < 0x2EDD6933)
    v64 = v63;
  STACK[0x6F8] = STACK[0x378];
  STACK[0x700] = STACK[0x350];
  STACK[0x708] = STACK[0x338];
  STACK[0x710] = v60;
  STACK[0x718] = STACK[0x370];
  STACK[0x720] = STACK[0x328];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (int)((3007 * v64) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_193252A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  int v75;

  v66 = *(_QWORD *)(v64 + 8 * a9);
  v67 = (a9 - 596654322);
  STACK[0x758] = STACK[0x378];
  STACK[0x760] = STACK[0x350];
  STACK[0x580] = STACK[0x338];
  v68 = STACK[0x368];
  STACK[0x588] = STACK[0x368];
  STACK[0x5F0] = v66 + v67 - 3698313005;
  STACK[0x598] = STACK[0x370];
  STACK[0x5A0] = STACK[0x328];
  v75 = STACK[0x3BC];
  LODWORD(STACK[0x210]) = 4;
  STACK[0x5A8] = v68;
  v69 = v67 ^ 0xDC6FC297;
  STACK[0x3C8] = STACK[0x5A8];
  v70 = LODWORD(STACK[0x210]);
  LODWORD(STACK[0x3FC]) = v75;
  STACK[0x3D0] = STACK[0x5A0];
  STACK[0x3E0] = STACK[0x598];
  v71 = STACK[0x5F0];
  STACK[0x3E8] = STACK[0x588];
  STACK[0x3F0] = STACK[0x580];
  STACK[0x400] = STACK[0x760];
  STACK[0x408] = STACK[0x758];
  STACK[0x410] = v71;
  v72 = *(unsigned int *)(STACK[0x3C8] + 8);
  STACK[0x420] = STACK[0x3C8] + 8;
  STACK[0x458] = (v69 ^ v70 ^ 0x7DF2BE5CDF7FDA0DLL)
               + ((2 * v70) & 0x1BEFFBF76)
               + v72
               - 0x7DF2BE5CDF7FDFBBLL;
  STACK[0x5F8] = v72;
  v73 = STACK[0x5F8];
  STACK[0x468] = STACK[0x5F8];
  LODWORD(STACK[0x214]) = 101330305;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 - ((v69 - 2144175446) | 0x3094490u) + *(_QWORD *)(v64 + 8 * (((((v73 & 0xFFFFFFFF80000000) != 0) << 10) | (((v73 & 0xFFFFFFFF80000000) != 0) << 11)) ^ v69)) + 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_193252ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  int v46;
  int v47;

  v47 = STACK[0x544];
  LODWORD(STACK[0x29C]) = STACK[0x540];
  STACK[0x4E8] = STACK[0x640];
  STACK[0x4F0] = STACK[0x638];
  STACK[0x4F8] = STACK[0x630];
  STACK[0x688] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * ((1807 * (v47 == v44 + v46 + 101370095)) ^ (v44 + v46 - 288))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_193252B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;

  v53 = STACK[0x778];
  STACK[0x500] = STACK[0x778];
  v54 = *(_DWORD *)(v53 + 12);
  STACK[0x508] = v53 + 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * ((976 * (((v51 - 2129085772) | 0x2230060u) + 0x48004309D1D3B59 + ((((v51 - 2492) | 1u) + 0x1BF4DFF5DLL) & (2 * v54)) + (v54 ^ 0xFB7FFBCEDFA6FFBFLL) >= 0xFFFFFFFB)) ^ v51)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_193252BFC@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  unint64_t v55;
  _BOOL4 v56;

  v55 = STACK[0x500];
  v56 = (a2 ^ (v53 + 2115) ^ 0x4800431A362C4BDuLL) + a53 > *(unsigned int *)(STACK[0x500] + 8);
  STACK[0x648] = STACK[0x4F8];
  STACK[0x650] = STACK[0x508];
  STACK[0x658] = STACK[0x4B0];
  STACK[0x660] = STACK[0x4F0];
  STACK[0x668] = STACK[0x4E8];
  STACK[0x670] = v55;
  LODWORD(STACK[0x560]) = STACK[0x29C];
  LODWORD(STACK[0x564]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v54 + 8 * ((3414 * v56) | a2)) - 12))();
}

void sub_193252C80(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0x758] = STACK[0x4F8];
  v2 = *(_QWORD *)(v1 + 8 * a1);
  STACK[0x760] = STACK[0x508];
  STACK[0x580] = STACK[0x4B0];
  STACK[0x588] = STACK[0x4F0];
  STACK[0x5F0] = v2 + (((_DWORD)a1 - 2144795904) | 0x5C46C400u) - 3698313005;
  STACK[0x598] = STACK[0x4E8];
  v3 = STACK[0x500];
  STACK[0x5A0] = STACK[0x500];
  LODWORD(STACK[0x210]) = 12;
  STACK[0x5A8] = v3;
  JUMPOUT(0x19325380CLL);
}

uint64_t sub_193252CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v50 = STACK[0x564];
  LODWORD(STACK[0x2AC]) = STACK[0x560];
  v52 = STACK[0x670];
  v53 = STACK[0x668];
  v54 = STACK[0x660];
  STACK[0x688] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((105 * (v50 == (_DWORD)a4)) ^ (v48 + v46 - 288))) - ((v46 - v47 + 1408) ^ 0xDEELL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           v52,
           v53,
           v54,
           a45,
           a46);
}

uint64_t sub_193252D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,_DWORD *a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;

  v60 = *a42;
  v61 = ((2 * *a51) & 0xFFF7FF3C) + (*a51 ^ 0xFFFBFF9E);
  *(_BYTE *)(*a42 + v61 + 262242) = 0;
  *(_BYTE *)(v60 + v61 + 262243) = 0;
  *(_BYTE *)(v60 + v61 + ((v58 - 3034) ^ 0x4026C)) = 0;
  *(_BYTE *)(v60 + v61 + 262245) = 8;
  v62 = *a51 + (((v58 - 3034) | 0x972) ^ 0xB7Eu);
  *a51 = v62;
  LODWORD(v62) = a49 - 0x27F95742180B695FLL > ((2 * v62) & 0x1FFEF2EDELL)
                                            + (v62 ^ 0xFFBFF96FFFF7976FLL)
                                            + *a42
                                            + 0x40069000086522
                                            + 879;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (int)((4 * v62) | (16 * v62) | v58)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_193252E88@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_DWORD *a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,_BYTE *a54,_BYTE *a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  unsigned int v63;
  _BYTE *v64;
  int v65;
  uint64_t v66;
  int v67;
  unint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  unint64_t v73;

  *a55 = *a54;
  v63 = (v59 - 2330) | 0x112;
  v64 = (_BYTE *)(a1 + a59 + a53);
  v64[880] = *(_BYTE *)(a42 - 0x27F95742180B695ELL);
  v64[881] = *(_BYTE *)(a42 - 0x27F95742180B695DLL);
  v64[v63] = *(_BYTE *)(a42 - 0x27F95742180B695CLL);
  v64[883] = *(_BYTE *)(a42 - 0x27F95742180B695BLL);
  v64[884] = *(_BYTE *)(a42 - 0x27F95742180B695ALL);
  v64[885] = *(_BYTE *)(a42 - 0x27F95742180B6959);
  v64[886] = *(_BYTE *)(a42 - 0x27F95742180B6958);
  *a44 += 8;
  v73 = STACK[0x778];
  STACK[0x780] = 0;
  LODWORD(STACK[0x590]) = 0;
  a24(a26);
  v65 = *v61;
  v66 = *(_QWORD *)v73;
  v67 = *(_DWORD *)(v73 + 12);
  v68 = STACK[0x568];
  v69 = 597255653 * ((((v62 - 144) | 0xB3DDBBC2) - (v62 - 144) + ((v62 - 144) & 0x4C224438)) ^ 0xBAD6C45B);
  *(_QWORD *)(v62 - 136) = STACK[0x558];
  *(_DWORD *)(v62 - 140) = v67 + 1581691396 + v69 - ((((v63 + 1215) | 0x48E) - 1131587767) & (2 * v67));
  *(_DWORD *)(v62 - 128) = (v65 ^ 0xEF3FF7B9) - v69 + ((2 * v65) & 0xDE7FEF72) + 903475199;
  *(_QWORD *)(v62 - 120) = v66;
  *(_DWORD *)(v62 - 112) = v69 + v63 + 2358;
  *(_QWORD *)(v62 - 104) = v68;
  a23(v62 - 144);
  v70 = *(_DWORD *)(v62 - 144);
  v71 = a25(a26);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v60 + 8 * (int)((7 * (v70 != 663729217)) ^ v63)) - 4))(v71);
}

uint64_t sub_1932531D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(void))(*(_QWORD *)(v43
                                        + 8 * (v42 ^ ((a42 != (((v42 - 2113178607) | 0x1304420) ^ 0x94B470CE)) << 6)))
                            - 12))();
}

uint64_t sub_193253218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int *a23,uint64_t a24,void (*a25)(uint64_t),uint64_t (*a26)(_QWORD, uint64_t, uint64_t),uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;

  v35 = *(_QWORD *)(v32 + 8 * v29);
  *(_DWORD *)(v34 - 128) = v29 - 71465943 - 486723911 * ((((2 * v30) | 0x9D8786F2) - v30 + 826031239) ^ 0x7E09A3E3);
  *(_QWORD *)(v34 - 144) = v31;
  *(_QWORD *)(v34 - 136) = v35
                         - 486723911
                         * ((((2 * v30) | 0x953DB4CF9D8786F2) - v30 - 0x4A9EDA67CEC3C379) ^ 0x782001F67E09A3E3)
                         + ((v33 + v29 + 1331) ^ 0xFFFFFFFF7CC43B08);
  a25(v34 - 144);
  v36 = a26(*a23, a24, a29);
  v37 = ((v36 << (((v29 + 78) & 0xF7) - 116)) & 0x3C55FA7E) + (v36 ^ 0x9E2AFD3F);
  v38 = *(_QWORD *)(v32 + 8 * (v29 & 0x1FFFFFFFA423D36ALL));
  *(_DWORD *)(v34 - 128) = v29 - 71465943 - 486723911 * ((((2 * v30) | 0xB2143B28) - v30 + 653648492) ^ 0x69C07D0E);
  *(_QWORD *)(v34 - 144) = v31;
  *(_QWORD *)(v34 - 136) = v38
                         - 486723911
                         * ((((2 * v30) | 0x3B56BAEBB2143B28) - v30 - 0x1DAB5D75D90A1D94) ^ 0x2F1586E469C07D0ELL)
                         - 8;
  v39 = ((uint64_t (*)(uint64_t))a25)(v34 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v32 + 8 * (v29 ^ 0xFD0 ^ (998 * (v37 == -1641349825)))) - 12))(v39);
}

uint64_t sub_1932533CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void (*a30)(uint64_t),void (*a31)(uint64_t),uint64_t (*a32)(uint64_t),uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t *a63)
{
  int *a64;
  int v64;
  uint64_t v65;
  _DWORD *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  int v73;
  uint64_t v74;

  a31(a33);
  v68 = *a63;
  v69 = *a64;
  v70 = STACK[0x558];
  v71 = STACK[0x568];
  v72 = 597255653 * ((((2 * (v67 - 144)) | 0x32575698) - (v67 - 144) + 1725191348) ^ 0x9020D4D5);
  *(_DWORD *)(v67 - 128) = (*v66 ^ 0x7539F7BD) - v72 + ((2 * *v66) & 0xEA73EF7A) - 1344278533;
  *(_QWORD *)(v67 - 120) = v68;
  *(_DWORD *)(v67 - 112) = v72 + v64 + 2355;
  *(_DWORD *)(v67 - 140) = v72 + v69 + 1581691396 - ((v69 << ((v64 + 74) ^ 0xBE)) & 0xBC8D6408);
  *(_QWORD *)(v67 - 136) = v70;
  *(_QWORD *)(v67 - 104) = v71;
  a30(v67 - 144);
  v73 = *(_DWORD *)(v67 - 144);
  v74 = a32(a33);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v65
                                                      + 8
                                                      * ((v64 + 2378) ^ ((v73 != (((v64 - 2113176229) | 0x1304420) ^ 0x94B470CE)) << 6)))
                                          - 12))(v74);
}

void sub_19325350C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t a35,unint64_t a36,unint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42,uint64_t a43,unint64_t a44,uint64_t a45,uint64_t a46,unint64_t a47)
{
  uint64_t v47;
  unint64_t v48;

  STACK[0x770] = 0;
  v48 = *(_QWORD *)(v47 + 8 * a1);
  STACK[0x6A0] = a47;
  STACK[0x6A8] = a44;
  STACK[0x6B0] = a42;
  STACK[0x5E0] = v48;
  STACK[0x6B8] = a37;
  STACK[0x6C0] = a36;
  STACK[0x6C8] = a35;
  JUMPOUT(0x193253560);
}

uint64_t sub_193253608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t, uint64_t))
{
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = (_QWORD *)STACK[0x2F8];
  *v36 = 0;
  v36[1] = 0;
  STACK[0x300] = (unint64_t)(v36 + 1);
  v37 = a34(4096, 2241923698);
  *(_QWORD *)STACK[0x2F8] = v37;
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * (int)(((v37 != 0) * (((v34 - 1841) | 0x80C) + ((v34 + 760000749) & 0xD2B34FED) - 4496)) | v34)))();
}

uint64_t sub_193253680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;

  *(_DWORD *)STACK[0x300] = v49;
  STACK[0x6D8] = STACK[0x2F8];
  LOBYTE(STACK[0x607]) = 1;
  LODWORD(STACK[0x3B4]) = 101372955;
  LOBYTE(STACK[0x57B]) = STACK[0x607];
  *(_QWORD *)STACK[0x288] = STACK[0x6D8];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x2F0])(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1932536EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  STACK[0x678] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((4296 * LOBYTE(STACK[0x57B])) ^ (v3 + v5 - 2639)))
                                                                     - ((v5 + 2093234963) ^ 0xBLL)))(a1, a2, a3, 101372955);
}

uint64_t sub_193253748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  uint64_t v62;

  v62 = LODWORD(STACK[0x590]);
  LODWORD(STACK[0x2B0]) = v62;
  LODWORD(a46) = a4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * (int)(((((unint64_t)~*(_DWORD *)(STACK[0x770] + 8) + v62) >> 32) * (a9 ^ 0xE90)) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_193253798(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8 * a1);
  STACK[0x758] = STACK[0x2E0];
  STACK[0x760] = STACK[0x2D0];
  STACK[0x580] = STACK[0x2C8];
  STACK[0x588] = STACK[0x2C0];
  STACK[0x5F0] = ((a1 - 596654306) ^ 0xFFFFFFFF239038D9) + v2;
  STACK[0x598] = STACK[0x2B8];
  STACK[0x5A0] = STACK[0x2A0];
  LODWORD(STACK[0x210]) = STACK[0x2B0];
  JUMPOUT(0x193253808);
}

uint64_t sub_193253924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v58 = STACK[0x400];
  STACK[0x650] = STACK[0x400];
  v59 = STACK[0x3F0];
  STACK[0x658] = STACK[0x3F0];
  v60 = STACK[0x3E8];
  STACK[0x660] = STACK[0x3E8];
  v61 = STACK[0x3E0];
  STACK[0x668] = STACK[0x3E0];
  v62 = STACK[0x3D0];
  STACK[0x670] = STACK[0x3D0];
  LODWORD(STACK[0x560]) = STACK[0x3FC];
  v63 = STACK[0x408];
  STACK[0x648] = STACK[0x408];
  STACK[0x6F8] = v63;
  STACK[0x700] = v58;
  STACK[0x708] = v59;
  STACK[0x710] = v60;
  LODWORD(v63) = STACK[0x214];
  LODWORD(STACK[0x564]) = STACK[0x214];
  LODWORD(a45) = v63;
  STACK[0x718] = v61;
  STACK[0x720] = v62;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x410])(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1932539B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a66;
  int a67;
  int v67;
  int v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;

  LODWORD(STACK[0x3F8]) = a66;
  v70 = STACK[0x720];
  STACK[0x380] = STACK[0x720];
  v71 = STACK[0x718];
  STACK[0x388] = STACK[0x718];
  v72 = STACK[0x710];
  STACK[0x398] = STACK[0x710];
  v73 = STACK[0x708];
  STACK[0x3A0] = STACK[0x708];
  v74 = STACK[0x700];
  STACK[0x3A8] = STACK[0x700];
  v75 = STACK[0x6F8];
  STACK[0x3C0] = STACK[0x6F8];
  STACK[0x728] = v75;
  STACK[0x730] = v74;
  STACK[0x738] = v73;
  STACK[0x740] = v72;
  STACK[0x748] = v71;
  STACK[0x750] = v70;
  return ((uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 + 8 * ((1930 * (a67 == (v67 ^ 0x833BCDA9 ^ ((_DWORD)a4 + 2343)))) ^ (v68 + v67 - 467))) - 8))(a67 == (v67 ^ 0x833BCDA9 ^ ((_DWORD)a4 + 2343)), 101330305, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_193253A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _DWORD *v67;
  int v68;
  int v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;

  v64 = v63 ^ a9;
  v65 = STACK[0x398];
  v66 = *(_QWORD *)STACK[0x398];
  v67 = (_DWORD *)STACK[0x3C0];
  v68 = STACK[0x3F8];
  v69 = LODWORD(STACK[0x3F8]) - ((2 * LODWORD(STACK[0x3F8])) & 0x35C8A440) + 451170848;
  v70 = ((2 * *(_DWORD *)STACK[0x3C0]) & 0x5737FBF8) + (*(_DWORD *)STACK[0x3C0] ^ 0xAB9BFDFC) + 1415840260;
  *(_BYTE *)(v66 + v70) = (v64 + 42) ^ HIBYTE(v69);
  *(_BYTE *)(v66 + v70 + 1) = BYTE2(v69) ^ 0xE4;
  *(_BYTE *)(v66 + v70 + 2) = (((BYTE1(v69) ^ 0x52) - 2 * ((BYTE1(v69) ^ 0x52) & 7 ^ BYTE1(v69) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v66 + v70 + 3) = v69 ^ 0x20;
  *v67 += 4;
  STACK[0x728] = (unint64_t)v67;
  STACK[0x730] = STACK[0x3A8];
  STACK[0x738] = STACK[0x3A0];
  STACK[0x740] = v65;
  STACK[0x748] = STACK[0x388];
  STACK[0x750] = STACK[0x380];
  v71 = STACK[0x750];
  v72 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x748];
  v73 = STACK[0x740];
  v74 = STACK[0x738];
  v75 = STACK[0x730];
  v76 = STACK[0x728];
  STACK[0x788] = STACK[0x728];
  STACK[0x790] = v75;
  STACK[0x798] = v74;
  STACK[0x7A0] = v73;
  STACK[0x7A8] = (unint64_t)v72;
  STACK[0x7B0] = v71;
  LODWORD(STACK[0x594]) = v68;
  LODWORD(STACK[0x5BC]) = a4;
  STACK[0x7B8] = v76;
  STACK[0x608] = v75;
  STACK[0x610] = v74;
  STACK[0x618] = v73;
  STACK[0x620] = (unint64_t)v72;
  STACK[0x628] = v71;
  LODWORD(STACK[0x52C]) = v68;
  LODWORD(STACK[0x53C]) = a4;
  STACK[0x630] = v76;
  STACK[0x638] = v73;
  STACK[0x640] = (unint64_t)v72;
  LODWORD(STACK[0x540]) = v68;
  LODWORD(STACK[0x544]) = a4;
  return v72(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_193253BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  STACK[0x470] = 2 * STACK[0x468];
  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * ((1928 * (a38 != 17)) ^ v38))
                            - ((v38 + 2006006833) & 0x886EBEEB)
                            + 1731))();
}

uint64_t sub_193253C38@<X0>(char a1@<W8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x5F8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((((v2 + 1038293282) ^ 0x3DE31A5B) - 462) ^ (v2 + 1038293282) & 0xC21CE3D3)
                                               * (a1 & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_193253C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 a67;
  int v67;
  int v68;
  uint64_t v69;

  LODWORD(STACK[0x214]) = 101330305;
  return (*(uint64_t (**)(void))(v69
                              + 8
                              * (int)(((v68 + ((v67 - 12854986) & 0x83FFE7F8) + 11 * (v67 ^ 0x35A) - 2219) * a67) ^ v67)))();
}

uint64_t sub_193253CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(unint64_t, uint64_t),uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  STACK[0x428] = a34(STACK[0x470], 2241923698);
  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * (((a38 == 17) * (((v38 + 375) | 0x400) - 2987)) ^ v38))
                            - (v38 - 744)
                            + 953))();
}

uint64_t sub_193253D18(uint64_t a1)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x214]) = 101330303;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 + 20152543) ^ 0x1338B17)
                                      + 2093235000
                                      + ((v1 + 20152543) | 0x82084050)
                                      - 4018)
                                     * (a1 != 0)) ^ v1)))();
}

uint64_t sub_193253D7C()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2 = *(_QWORD *)STACK[0x3C8];
  STACK[0x430] = v2;
  v3 = (*(unsigned int *)STACK[0x420] ^ 0x18DBFB7AB238FDFFLL)
     + ((2 * *(unsigned int *)STACK[0x420]) & 0x16471FBFELL)
     + (v0 ^ 0xEFAFDEE7EDFFF07BLL);
  v4 = ((v3 & 0x55FC70235) << ((2 * v0) ^ 0x6F)) & (v3 ^ 0x8993068C1FE78BB5) ^ v3 & 0x55FC70235;
  v5 = ((2 * (v3 ^ 0x89930684A2678F97)) ^ 0x81084423FB411B44) & (v3 ^ 0x89930684A2678F97) ^ (2
                                                                                                 * (v3 ^ 0x89930684A2678F97)) & 0x7EE72319FDA08DA2;
  v6 = v5 ^ 0x221210804A084A2;
  v7 = (v5 ^ 0x2212111F9808D00) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0xFB9C8C67F6823688) & v6 ^ (4 * v6) & 0x7EE72319FDA08DA0;
  v9 = (v8 ^ 0x7A840001F4800480) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x463231809208922)) ^ 0xEE72319FDA08DA20) & (v8 ^ 0x463231809208922) ^ (16
                                                                                                 * (v8 ^ 0x463231809208922)) & 0x7EE72319FDA08DA0;
  STACK[0x488] = v3 ^ (2
                     * ((((((v10 ^ 0x1085020025A00582) << 8) ^ 0xE72319FDA08DA200) & (v10 ^ 0x1085020025A00582) ^ ((v10 ^ 0x1085020025A00582) << 8) & 0x7EE72319FDA08D00) & 0x21008DA000000000 | 0x5CA0000000000000) ^ (v10 ^ 0x6E622119D8008800) & (v9 << 8) ^ v9 ^ ((((v10 ^ 0x1085020025A00582) << 8) ^ 0xE72319FDA08DA200) & (v10 ^ 0x1085020025A00582) ^ ((v10 ^ 0x1085020025A00582) << 8) & 0x7EE72319FDA08D00 ^ 0x66230119A0800000) & (((v10 ^ 0x6E622119D8008800) & (v9 << 8) ^ v9) << 16))) ^ 0xFDCE4633FB411B44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((99 * (v2 <= STACK[0x428])) ^ v0)) - 12))();
}

uint64_t sub_193253FE0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x444]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((47 * (a1 ^ 0x8E4) + ((v2 + a1 - 64) ^ 0x7CC437CF)) * (v1 == 0)) | a1))
                            - 12))();
}

uint64_t sub_19325402C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = LODWORD(STACK[0x444]);
  STACK[0x510] = v2;
  LODWORD(v2) = v2 - 1;
  v3 = (v2 ^ 0x767A3EBDF7FA0F3DLL)
     - 0x767A3EBDF7FA0F3DLL
     + (((unint64_t)v2 << ((v0 ^ 0x2Au) + 17)) & 0x1EFF41E7ALL);
  *(_BYTE *)(STACK[0x428] + v3) = *(_BYTE *)(STACK[0x430] + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((525 * (v2 == 0)) ^ v0)) - 12))();
}

void sub_1932540C8()
{
  JUMPOUT(0x1932538D4);
}

uint64_t sub_1932540D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  int v50;
  uint64_t v51;
  unint64_t v52;

  STACK[0x680] = 0;
  LODWORD(STACK[0x314]) = a50;
  v52 = STACK[0x680];
  STACK[0x200] = STACK[0x680];
  STACK[0x688] = v52;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 + 8 * (v50 + 2093237532))
                                                                     - ((v50 + 2093235273) ^ 0x135)))(a1, a2, a3, 101372955);
}

uint64_t sub_1932546A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;

  v40 = 29 * (v38 ^ 0x103);
  v41 = *(_QWORD *)(v39 + 8 * v38);
  LODWORD(STACK[0x244]) = STACK[0x314];
  v42 = STACK[0x200];
  STACK[0x5B0] = STACK[0x200];
  STACK[0x5C0] = (unint64_t)&STACK[0x76C];
  STACK[0x438] = (unint64_t)&STACK[0x76C];
  STACK[0x448] = v42;
  LODWORD(STACK[0x494]) = STACK[0x244];
  STACK[0x450] = v41;
  LOBYTE(STACK[0x3BB]) = v42 == 0;
  LOBYTE(STACK[0x57A]) = 0;
  LODWORD(STACK[0x264]) = 101330305;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((3952 * (((v42 == 0) ^ (v40 + 1)) & 1)) ^ v40)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_193254804@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  _BOOL4 v9;

  v4 = (unsigned int *)(STACK[0x448] + 12);
  v5 = *v4;
  STACK[0x478] = (unint64_t)v4;
  LODWORD(STACK[0x498]) = v5;
  v6 = (a1 ^ (v2 + 1492) ^ v5 ^ 0xEB5FDFFF7C853B0FLL) + ((2 * v5) & 0x1FF7DFFFELL) + 0x14A02000EF9B562DLL;
  v7 = (*(v4 - 1) ^ 0xFBBE6BDE76F9F8BLL) - 0xFBBE6BCF8154963 + ((2 * *(v4 - 1)) & 0x1CEDF3F16);
  v8 = (v6 < 0xEF5A5628) ^ (v7 < 0xEF5A5628);
  v9 = v6 > v7;
  if (v8)
    v9 = v6 < 0xEF5A5628;
  LODWORD(STACK[0x264]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((79 * !v9) ^ a1)) - 12))();
}

uint64_t sub_1932548E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  char v45;
  char v46;
  uint64_t v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;

  v46 = a9 ^ v45;
  v47 = *(_QWORD *)STACK[0x448];
  v48 = STACK[0x498];
  v49 = ((v48 << (v46 + 17)) & 0xBDEF5FE6) + (v48 ^ 0xDEF7AFF3) + 554192909;
  v50 = *(unsigned __int8 *)(v47 + v49 + 2);
  v51 = (((v50 + 4420934 - ((2 * v50) & 0x4C)) << 8) - 0x2000) ^ 0x43752600 | (((-16777216
                                                                               * *(unsigned __int8 *)(v47 + v49)) | (*(unsigned __int8 *)(v47 + v49 + 1) << 16))
                                                                             - 0x1000000);
  v52 = *(unsigned __int8 *)(v47 + v49 + 3);
  v53 = (v51 ^ 0x5A6FFF) & ((v52 - 1636428685 - ((2 * v52) & 0xE6)) ^ 0x82C7F04) ^ v51 & 0x69A59400;
  v54 = (v53 & 0x324D5387 ^ 0x12494387) + (v53 ^ 0x28A41408) - ((v53 ^ 0x28A41408) & 0x324D5387);
  *(_DWORD *)STACK[0x438] = (((v54 ^ 0x1FBDF440) - 789305555) ^ ((v54 ^ 0x7B8AD7DE) - 1262287693) ^ ((v54 ^ 0x81840F66) + 1322114059))
                          - 619719546;
  *(_DWORD *)STACK[0x478] = v48 + 4;
  LOBYTE(STACK[0x57A]) = 1;
  LODWORD(STACK[0x264]) = a4;
  LODWORD(STACK[0x49C]) = STACK[0x264];
  LOBYTE(STACK[0x467]) = STACK[0x57A];
  STACK[0x688] = STACK[0x448];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x450])(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_193254AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  int v48;
  uint64_t v49;
  int v50;

  STACK[0x690] = STACK[0x448];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((6229 * LOBYTE(STACK[0x467])) ^ (v48 + v50 - 698))) - ((23 * (v50 ^ (v47 + 2080))) ^ (v50 + 1695283973) & 0x17B84B6Fu ^ 0x31FLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_193254B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;

  LODWORD(STACK[0x324]) = STACK[0x57C];
  STACK[0x690] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * ((1123 * ((STACK[0x3BB] & 1) == 0)) ^ a9)) - (a9 + 755) + 2909))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_193254B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v53;
  _BOOL4 v54;

  v48 = STACK[0x448];
  v49 = *(unsigned int *)(STACK[0x448] + 8);
  STACK[0x690] = STACK[0x448];
  v50 = *(_DWORD *)(v48 + 12);
  STACK[0x218] = v48 + 12;
  LODWORD(STACK[0x334]) = v50;
  STACK[0x250] = v50;
  v51 = (v50 ^ 0x3FFFFDABC6EEFFFDLL)
      + (a9 ^ 0xC00002551DBB877CLL)
      + LODWORD(STACK[0x324])
      + (((unint64_t)v50 << (v46 - 100)) & 0x18DDDFFFALL)
      + ((unint64_t)(LODWORD(STACK[0x324]) < a4) << 32);
  v52 = (v49 ^ 0x1F6F1FBEFFF28DF9) - 0x1F6F1FBE153D2AD3 + ((2 * v49) & 0x1FFE51BF2);
  v53 = v51 < 0xEAB56326;
  v54 = v51 > v52;
  if (v53 != v52 < 0xEAB56326)
    v54 = v53;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * (int)((291 * !v54) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_193254C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(void),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  STACK[0x228] = *(_QWORD *)STACK[0x448] + STACK[0x250];
  v49 = LODWORD(STACK[0x324]) + ((v47 + 1512288034) & 0xA5DC4BED ^ 0xF9F52080);
  LODWORD(STACK[0x344]) = v49;
  *(_DWORD *)STACK[0x218] = LODWORD(STACK[0x334]) + v49;
  STACK[0x258] = v49;
  v50 = a34();
  STACK[0x230] = v50;
  *a19 = v50;
  STACK[0x690] = STACK[0x448];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(void), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((54 * (v50 != 0)) ^ v47)))(v50, v51, v52, 101372955, v53, v54, v55, v56, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_193254D30()
{
  int v0;
  uint64_t v1;

  STACK[0x308] = STACK[0x258] - ((2 * STACK[0x258]) & 0x10A5710CALL) - 0x4D58EB37AD4779BLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((31
                                          * ((((15 * ((v0 - 3208) ^ 0x367)) ^ (STACK[0x228] > STACK[0x230])) & 1) == 0)) ^ (v0 - 3208)))
                            - (((v0 - 3208) ^ 0x367u)
                             + 774)
                            + 932))();
}

uint64_t sub_193254DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  LODWORD(STACK[0x34C]) = LODWORD(STACK[0x308]) ^ 0x852B8865;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((a38 != (v38 ^ 0x9E7)) | v38))
                                                            - ((v38 - 716774156) & 0x2AB91FFF ^ 0xEE6)))(a1, a2, a21);
}

uint64_t sub_193254E0C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(v4
                            + *(_QWORD *)(v3 + 8 * (v0 ^ ((2 * (v1 != 0)) | (16 * (v1 != 0)))))
                            - (v0 - 1360)
                            - (v0 - v2 - 958)
                            + 2458))();
}

uint64_t sub_193254E44@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = LODWORD(STACK[0x34C]);
  STACK[0x5D8] = v2;
  LODWORD(v2) = v2 - 1;
  v3 = (v2 ^ 0x767A3EBDF7FA0F3DLL)
     - 0x767A3EBDF7FA0F3DLL
     + ((((a1 - 2084584358) & 0xFF7BF6FB) + 0x16CB8598ALL) & (2 * v2));
  *(_BYTE *)(STACK[0x230] + v3) = *(_BYTE *)(STACK[0x228] + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((75 * (v2 == 0)) ^ a1)) - 4))();
}

uint64_t sub_193254EDC(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  unint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v55;

  STACK[0x5D8] = v48;
  *a3 = STACK[0x344];
  v55 = STACK[0x494];
  STACK[0x690] = STACK[0x448];
  LODWORD(STACK[0x358]) = a4;
  v52 = STACK[0x690];
  STACK[0x238] = STACK[0x690];
  LODWORD(STACK[0x35C]) = v55;
  v53 = STACK[0x778];
  STACK[0x278] = STACK[0x778];
  STACK[0x698] = v52;
  return ((uint64_t (*)(uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 + 8 * (int)(((v53 == 0) * (v50 + (((v49 ^ 0x833BCF95) - 2025860201) & 0xFBFBE5F3) - 2698)) ^ v49 ^ 0x833BCF95)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

void sub_1932550D4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v6 = ((v0 + 778) ^ 0xFFFFFFFFFFFFF193) + *(_QWORD *)(v1 + 8 * (v0 - 2695));
  STACK[0x5C8] = STACK[0x238];
  LODWORD(STACK[0x268]) = STACK[0x358];
  LODWORD(STACK[0x26C]) = STACK[0x35C];
  v2 = STACK[0x278];
  STACK[0x5D0] = STACK[0x278];
  v3 = STACK[0x26C];
  v4 = STACK[0x268];
  v5 = STACK[0x5C8];
  STACK[0x518] = v6;
  STACK[0x520] = v2;
  LODWORD(STACK[0x270]) = v3;
  LODWORD(STACK[0x274]) = v4;
  STACK[0x530] = v5;
  JUMPOUT(0x1932551ECLL);
}

uint64_t sub_193255260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(void),int a38,int a39,uint64_t a40,uint64_t a41,int a42)
{
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t);

  v42 = (_QWORD *)STACK[0x4A0];
  *v42 = 0;
  v42[1] = 0;
  v43 = a37();
  STACK[0x548] = STACK[0x4A8];
  LODWORD(STACK[0x294]) = a39;
  LODWORD(STACK[0x298]) = a42;
  STACK[0x550] = STACK[0x480];
  v44 = STACK[0x550];
  v45 = (uint64_t (*)(uint64_t))STACK[0x548];
  STACK[0x678] = 0;
  STACK[0x698] = v44;
  return v45(v43);
}

void sub_1932552C8()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 16) = v1;
}

uint64_t sub_1932552D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * ((237 * (a38 == 17)) ^ v38)) - ((v38 - 2292) ^ 0xF38u) + 3003))();
}

uint64_t sub_193255304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  _BOOL4 v57;

  LODWORD(STACK[0x324]) = STACK[0x52C];
  v56 = STACK[0x5BC];
  LODWORD(STACK[0x334]) = STACK[0x5BC];
  v57 = *(_QWORD *)(v55 - 256) != 0;
  LODWORD(STACK[0x53C]) = v56;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * ((v57 * (v53 + 2093238146)) ^ (v53 + 2093235328))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

void sub_193255350(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unint64_t a54)
{
  uint64_t v54;

  STACK[0x7D0] = (((a1 + 732) | 0x190u) ^ 0xFFFFFFFFFFFFFA20) + *(_QWORD *)(v54 + 8 * a1);
  STACK[0x740] = a54;
  JUMPOUT(0x193255388);
}

uint64_t sub_193255420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(uint64_t),int a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a37(a39);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40
                                                      + 8
                                                      * (((a38 != 18)
                                                        * (((v39 - 2937) | 0x45B) ^ 0x951 ^ (493 * (v39 ^ 0xCFE)))) ^ v39))
                                          - 8))(v41);
}

uint64_t sub_19325547C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(void),int a38,int a39,uint64_t a40,uint64_t a41,int a42)
{
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  uint64_t (*v48)(uint64_t);

  v43 = (_QWORD *)STACK[0x4A0];
  *v43 = 0;
  v43[1] = 0;
  v44 = a37();
  STACK[0x580] = STACK[0x4A8];
  LODWORD(STACK[0x244]) = a39;
  LODWORD(STACK[0x264]) = a42;
  STACK[0x588] = STACK[0x480];
  v45 = STACK[0x588];
  v46 = STACK[0x264];
  v47 = STACK[0x244];
  v48 = (uint64_t (*)(uint64_t))STACK[0x580];
  STACK[0x9C8] = 0;
  LODWORD(STACK[0x9D0]) = v47;
  LODWORD(STACK[0x9D4]) = v47;
  *(_QWORD *)(v42 - 256) = v45;
  LODWORD(STACK[0x5BC]) = v46;
  LODWORD(STACK[0x52C]) = v47;
  LODWORD(STACK[0x53C]) = v46;
  return v48(v44);
}

void sub_19325552C(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1932556CC()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  int v6;
  uint64_t v7;

  v5 = v1 - 82;
  v6 = v0 + v1 + 645;
  *(_QWORD *)(v3 + 248) = &STACK[0x46AAD4E1DD90127C];
  *(_QWORD *)(v3 + 256) = &STACK[0x54D2A68F3DE7F52A];
  *(_DWORD *)(v4 - 140) = v0 + v1 + 629424707 * ((((v4 - 144) | 0xF8D368B2) - ((v4 - 144) & 0xF8D368B2)) ^ 0x604C1BCB);
  v7 = sub_193241A88(v4 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((14 * ((v5 ^ (*(_DWORD *)(v4 - 144) == 1009597723)) & 1)) ^ v6))
                                          - 4))(v7);
}

uint64_t sub_193255794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, uint64_t),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,signed int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,__int16 a50,char a51,char a52,int a53)
{
  int v53;
  int v54;
  uint64_t v55;
  _QWORD *v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v58 = v54 & 0x8DF7DF43;
  v59 = v54 & 0x8DF7DF43 ^ 0x7B1;
  LODWORD(STACK[0x224]) = (v58 ^ 0x16202041) + ((2 * v53) & 0xD3BFBD7C) + (v53 ^ 0xE9DFDEBE);
  a45 = v58;
  v56[3] = &a29;
  v60 = v56[2];
  v56[50] = &a29;
  v56[51] = v60;
  LODWORD(STACK[0x2BC]) = a46;
  v61 = a45;
  v62 = a43;
  v56[53] = *v56;
  v56[54] = v62;
  v56[55] = *(_QWORD *)(v55 + 8 * v61) + ((v59 - v57 - 1091) ^ 0xFFFFFFFF245D83E9);
  v63 = a22(16, 2241923698);
  v56[56] = v63;
  v56[4] = 0;
  a52 = 0;
  a53 = 101330303;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (int)(((v63 != 0) * (((v59 + 1045669701) & 0xC1AC5F5F) - 3410)) | v59)))(v63, v64, v65, v66, v67, v68, v69, v70, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_193257CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, uint64_t))
{
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v25 = *(_QWORD **)(v24 + 448);
  *v25 = 0;
  v25[1] = 0;
  *(_QWORD *)(v24 + 456) = v25 + 1;
  v26 = a22(4096, 2241923698);
  **(_QWORD **)(v24 + 448) = v26;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23
                                        + 8 * (((v26 != 0) * (((((2 * v22) ^ 0x1C1C) - 1072) | 0x430) ^ 0x69C)) ^ v22))
                            - 12))();
}

uint64_t sub_193257D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *(_QWORD *)(v42 + 448);
  **(_DWORD **)(v42 + 456) = v41;
  *(_QWORD *)(v42 + 32) = v43;
  LODWORD(STACK[0x2EC]) = 101372955;
  LOBYTE(STACK[0x2F3]) = 1;
  **(_QWORD **)(v42 + 400) = *(_QWORD *)(v42 + 32);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 440))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_193257D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  int v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)((LOBYTE(STACK[0x2F3]) * (((v31 + a27 - 231) | 0x11) ^ 0xC23)) ^ (v31 + a27 - 9))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_193257DE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;

  LODWORD(STACK[0x23C]) = a32;
  *(_QWORD *)(v33 + 296) = a28;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * (((a32 > *(_DWORD *)(a28 + 8)) * ((a8 - v34 + 214) ^ (v35 + 2631))) ^ a8)) - 8))(101372955, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

void sub_193257E34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[53];
  v0[18] = v0[54];
  v0[19] = v1;
  v2 = v0[37];
  v0[21] = v0[51];
  v0[22] = v2;
  JUMPOUT(0x193257E74);
}

uint64_t sub_193257F04(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  int v33;
  uint64_t v34;

  LODWORD(STACK[0x24C]) = a33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v34
                                        + 8
                                        * ((39 * (((a33 == a1) ^ (v33 + 110)) & 1)) ^ (v33 + 610111539)))
                            - ((v33 - 472522899) & 0x4087A6E7 ^ 0x262)))();
}

#error "193258680: call analysis failed (funcsize=36)"

uint64_t sub_193257F9C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,uint64_t a22,unint64_t a23,int a24,unsigned int a25)
{
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;

  v27 = *a21;
  v26[39] = a21;
  v26[40] = v27;
  v26[41] = a23;
  v26[42] = a25 - ((2 * a25) & 0x10A5710CALL) - 0x4D58EB37AD4779BLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v25 + 8 * (int)((457 * (a23 <= v27)) ^ a1 ^ 0xBF7857AE)) - 4))();
}

uint64_t sub_193258020@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  LODWORD(STACK[0x284]) = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((a1 + 329278652) | 0xC8020C01) ^ (v4 - 1593)) + 197 * (a1 ^ 0xB51))
                                     * (v2 != v1)) ^ a1)))();
}

uint64_t sub_193258070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;

  v30 = 50 * (v26 ^ 0x3CB);
  v31 = LODWORD(STACK[0x284]) - 1;
  v32 = (v30 ^ (v29 + 236)) + 0x11451A269;
  v33 = (v31 ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + (v32 & (2 * v31));
  *(_BYTE *)(*(_QWORD *)(v28 + 320) + v33) = *(_BYTE *)(*(_QWORD *)(v28 + 328) + v33);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * ((93 * (v31 != 0)) ^ v30)) - 12))(v32, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_193258104@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  LODWORD(STACK[0x274]) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((a1 - 1700640579) | 0x41002800) - v4 - 837) ^ 0xCED) * (v2 != v1)) ^ a1)))();
}

uint64_t sub_193258148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v29 = LODWORD(STACK[0x274]);
  v27[44] = v29;
  v30 = (v25 - v28 - 1577);
  v31 = *(unsigned __int8 *)(v27[41] + v30 - 3684858897);
  *(_BYTE *)(v27[40] + v30 - 3684858897) = v31;
  v32 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((1604 * (v29 == 1)) | v25)) - 12);
  return v32(v32, v31, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_1932581CC()
{
  JUMPOUT(0x193258194);
}

uint64_t sub_1932581D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int *a24,uint64_t (*a25)(_QWORD, uint64_t, _QWORD),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;

  v42 = *(_QWORD *)(v39 + 312);
  *(_DWORD *)(v42 + 8) = a32;
  *(_DWORD *)(v42 + 12) = 0;
  *(_QWORD *)(v39 + 368) = v42;
  LODWORD(STACK[0x290]) = 101372955;
  LODWORD(STACK[0x294]) = a37;
  v43 = a25(*a24, a30, a32);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38 + 8 * ((119 * (v37 ^ (v41 + 3034)) - 1659) ^ (v37 + v40)))
                                          - 12))(v43);
}

uint64_t sub_193258290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;
  uint64_t v32;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * (((*(_QWORD *)(v32 + 368) != 0) * ((v30 - 3066) ^ 0x1C80)) ^ v30)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1932582C8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  _BOOL4 v8;

  v3 = *(_QWORD *)(v2 + 368);
  v4 = *(_DWORD *)(v3 + 12);
  v3 += 12;
  *(_QWORD *)(v2 + 384) = v3;
  LODWORD(STACK[0x2A4]) = v4;
  v5 = (v4 ^ 0x5F29CE1EDC7E9B1FLL) - 0x5F29CE1DECF3F7B1 + ((2 * v4) & 0x1B8FD363ELL);
  v6 = (*(unsigned int *)(v3 - 4) ^ 0x79EEFEBF76B7DFFFLL)
     - 0x79EEFEBE872D3C95
     + (((unint64_t)*(unsigned int *)(v3 - 4) << ((v0 - 106) & 0x6F ^ 0x6Eu)) & 0xED6FBFFE);
  v7 = (v5 < 0xEF8AA36A) ^ (v6 < 0xEF8AA36A);
  v8 = v5 > v6;
  if (v7)
    v8 = v5 < 0xEF8AA36A;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((19 * !v8) ^ v0)) - 8))();
}

#error "193258680: call analysis failed (funcsize=121)"

void sub_193258590()
{
  JUMPOUT(0x1932585A4);
}

void sub_1932585F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v31 + 232) = *(_QWORD *)(v30 + 8 * v29);
  *(_QWORD *)(v31 + 240) = a29;
  JUMPOUT(0x193258618);
}

uint64_t sub_193258684@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = **(_QWORD **)(v2 + 720);
  *(_QWORD *)(v2 + 752) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v3 == 0) * ((a1 ^ 0x28F) + 2015)) ^ a1)) - 12))();
}

uint64_t sub_1932586C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,uint64_t a56,int a57,int a58)
{
  int v58;
  uint64_t v59;
  _QWORD *v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v63 = v60[11];
  v60[64] = v63;
  LODWORD(STACK[0x324]) = a55;
  v65 = v60[8];
  v64 = v60[9];
  v60[66] = v64;
  v60[67] = v65;
  v60[13] = v65;
  v60[14] = v64;
  v60[16] = v63;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * ((3622 * (a58 == (_DWORD)a1 + (v58 ^ (v62 + 2525)) - 1536)) ^ (v61 + v58 + 913))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_193258728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  _QWORD *v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  _DWORD *v58;
  int v59;
  int v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v64;

  v56 = (uint64_t *)v54[64];
  v57 = *v56;
  v58 = (_DWORD *)v54[67];
  v59 = STACK[0x324];
  v60 = v59 + 451170848 - ((v59 << ((a9 + 29) & 0xF3 ^ (v55 - 36))) & 0x35C8A440);
  v61 = ((2 * *v58) & 0x1777FB7A) + (*v58 ^ 0x8BBBFDBD) + 1950614083;
  *(_BYTE *)(*v56 + v61) = HIBYTE(v60) ^ 0x1A;
  *(_BYTE *)(v57 + v61 + 1) = BYTE2(v60) ^ 0xE4;
  *(_BYTE *)(v57 + v61 + 2) = (((BYTE1(v60) ^ 0x52) - 2 * ((BYTE1(v60) ^ 0x52) & 7 ^ BYTE1(v60) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v57 + v61 + 3) = v60 ^ 0x20;
  *v58 += 4;
  v62 = v54[66];
  v54[13] = v58;
  v54[14] = v62;
  v54[16] = v56;
  LODWORD(STACK[0x33C]) = a1;
  v54[69] = v54[16];
  LODWORD(STACK[0x34C]) = v59;
  v64 = v54[13];
  v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v54[14];
  v54[71] = v63;
  v54[72] = v64;
  return v63(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_193258840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)((((v10 + ((v8 - 5245157) ^ 0xFFAFFA8D) + 669) ^ (v8 - 5245157) & a7) * v9) ^ v8))
                            - 12))();
}

uint64_t sub_1932588C8(int a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v4 + 755) ^ (v4 + 1526) ^ a1) * (v1 > v3)) ^ v4)) - 8))();
}

uint64_t sub_1932588FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (v13 ^ ((8 * (v8 <= v12)) | (16 * (v8 <= v12)))))
                            - (((v13 ^ a8) * v9 + 14) | v10)
                            + 3366))();
}

uint64_t sub_193258938()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * (v2 | (v0 == 1))))();
}

uint64_t sub_193258974(uint64_t a1, int a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v6;
  int v7;
  unsigned __int8 v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((((v8 ^ ((v7 ^ a2 ^ a5) * a6)) & 1)
                                          * ((v9 + (v7 ^ a2) + 1129) ^ (v9 + 3249))) ^ v7 ^ a2))
                            - 12))();
}

uint64_t sub_1932589B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int v66;

  v65[24] = v62;
  v65[82] = v63;
  v65[83] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * ((LOBYTE(STACK[0x3A7]) * (5 * (v66 ^ 0xB9C) - 1735)) ^ v66)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_193258A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 192) = v3;
  *(_QWORD *)(v4 + 656) = v3;
  *(_QWORD *)(v4 + 664) = v2;
  *(_QWORD *)v4 = *(_QWORD *)(v4 + 616);
  v5 = *(_QWORD *)(v4 + 592);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v4 + 608);
  *(_QWORD *)(v4 + 24) = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 624))(a1, a2, 101372955);
}

uint64_t sub_193258A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 192) = v1;
  *(_QWORD *)(v2 + 656) = v1;
  *(_QWORD *)(v2 + 664) = v0;
  v3 = *(_QWORD *)(v2 + 608);
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v2 + 616);
  *(_QWORD *)(v2 + 72) = v3;
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(v2 + 592);
  return (*(uint64_t (**)(uint64_t))(v2 + 624))(101372955);
}

void sub_193259468()
{
  JUMPOUT(0x193258A3CLL);
}

uint64_t sub_193259480()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 720);
  *v2 = 0;
  v2[1] = 0;
  v3 = v1();
  return (*(uint64_t (**)(uint64_t))(v0 + 744))(v3);
}

uint64_t sub_1932594D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v28[99] = v28[57];
  v29 = v28[55];
  v28[100] = v28[56];
  LODWORD(STACK[0x444]) = STACK[0x314];
  v28[102] = v29;
  LODWORD(STACK[0x454]) = STACK[0x324];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27
                                                                        + 8
                                                                        * ((69 * LOBYTE(STACK[0x2F3])) ^ (a27 + 610111785)))
                                                            - (a27 ^ 0xDBA27C92)
                                                            + 119))(a1, a2, 101372955);
}

uint64_t sub_193259544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  _QWORD *v53;
  unsigned int v54;
  int v55;
  uint64_t v56;
  unsigned int v57;
  _BOOL4 v58;
  uint64_t v60;

  v60 = *(_QWORD *)(v52 + 8 * a9);
  HIDWORD(a50) = 1;
  LODWORD(STACK[0x33C]) = 1;
  v56 = v53[96];
  v53[64] = v56;
  v53[66] = v60;
  v53[8] = v60;
  v53[9] = v56;
  v57 = *(_DWORD *)(v56 + 12);
  v56 += 12;
  v53[67] = v56;
  LODWORD(STACK[0x34C]) = v57;
  v58 = v57 >= ((v55 + a9 + 3023 - 117) ^ v54) - 701;
  v53[4] = v56;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (((2 * v58) | (8 * v58)) ^ (a9 + 3023))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           v60,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_193259750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  _QWORD *v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v53;
  _BOOL4 v54;

  v50 = v48[64];
  v51 = (LODWORD(STACK[0x34C]) ^ 0xFFDE13FEADEDFEDLL)
      - 0xFFDE13F711C0700
      + ((2 * LODWORD(STACK[0x34C])) & 0x1D5BDBFDALL);
  v52 = (a9 ^ v49 ^ *(_DWORD *)(v50 + 8) ^ 0x737FB0FF251C88BELL)
      + ((2 * *(unsigned int *)(v50 + 8)) & 0x1FD7DE95ELL)
      - 0x737FB0FF84FC1BC6;
  v53 = v51 < 0x79C2D8E9;
  v54 = v51 > v52;
  if (v53 != v52 < 0x79C2D8E9)
    v54 = v53;
  *v48 = v48[67];
  v48[2] = v48[66];
  v48[3] = v50;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((1634 * v54) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_19325983C(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v2[6] = *(_QWORD *)(v1 + 8 * a1) + (a1 ^ 0x175DBCEFu) - 392019551;
  v2[11] = v2[67];
  v5 = STACK[0x33C];
  v3 = v2[64];
  v2[13] = v2[66];
  v2[14] = v3;
  v2[16] = v3;
  v2[73] = v3;
  v4 = v2[13];
  v2[74] = v2[14];
  LODWORD(STACK[0x3D4]) = v5;
  v2[76] = v4;
  v2[77] = v2[11];
  v2[78] = v2[6];
  v2[79] = v3 + 8;
  JUMPOUT(0x19325A274);
}

uint64_t sub_19325988C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  int v55;
  uint64_t v56;
  uint64_t *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v60 = v57[2];
  v59 = v57[3];
  v57[69] = v59;
  LODWORD(STACK[0x374]) = HIDWORD(a51);
  v57[71] = v60;
  v61 = *v57;
  v57[72] = *v57;
  v57[4] = v61;
  v57[8] = v60;
  v57[9] = v59;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * (((a55 == (_DWORD)a3) * (((v58 + v55 + 1505) | 0x408) ^ 0x1057)) ^ (v55 + 610111559))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_193259900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  _DWORD *v55;
  int v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;

  v53 = (uint64_t *)v52[69];
  v54 = *v53;
  v55 = (_DWORD *)v52[72];
  v56 = STACK[0x374];
  v57 = a9 + 451170848 + v56 - ((2 * v56) & 0x35C8A440) - 3160;
  v58 = ((2 * *v55) & 0x7777FFBC) + (*v55 ^ 0x3BBBFFDE) - 1002176478;
  *(_BYTE *)(*v53 + v58) = HIBYTE(v57) ^ 0x1A;
  *(_BYTE *)(v54 + v58 + 1) = BYTE2(v57) ^ 0xE4;
  *(_BYTE *)(v54 + v58 + 2) = (((BYTE1(v57) ^ 0x52) - 2 * ((BYTE1(v57) ^ 0x52) & 7 ^ BYTE1(v57) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v54 + v58 + 3) = v57 ^ 0x20;
  *v55 += 4;
  v52[4] = v55;
  v52[8] = v52[71];
  v52[9] = v53;
  v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v52[8];
  v59 = v52[9];
  v61 = v52[4];
  v52[99] = v61;
  v52[100] = v60;
  LODWORD(STACK[0x444]) = v56;
  v52[102] = v59;
  LODWORD(STACK[0x454]) = a3;
  v52[104] = v61;
  v52[105] = v60;
  LODWORD(STACK[0x46C]) = v56;
  v52[107] = v59;
  LODWORD(STACK[0x47C]) = a3;
  v52[109] = v61;
  v52[110] = v60;
  LODWORD(STACK[0x494]) = v56;
  v52[112] = v59;
  LODWORD(STACK[0x4A4]) = a3;
  v52[114] = v61;
  v52[115] = v60;
  HIDWORD(a32) = v56;
  LODWORD(a33) = a3;
  v52[116] = v59;
  return v60(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_193259A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v32;
  uint64_t v33;
  _QWORD *v34;
  int v35;
  uint64_t v36;

  v34[32] = v34[116];
  LODWORD(STACK[0x24C]) = HIDWORD(a31);
  v36 = v34[114];
  v34[34] = v34[115];
  v34[35] = v36;
  v34[120] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * (((((v32 - 584368996) & 0x47324FFA ^ 0x3E3) + ((v35 + v32 + 133) | 0x802)) * (a32 == (_DWORD)a3)) ^ (v35 + v32 + 1067))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_193259AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int *a18, void (*a19)(uint64_t), void (*a20)(uint64_t),uint64_t (*a21)(uint64_t))
{
  unsigned int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;

  v26 = (uint64_t *)v23[96];
  v23[37] = v26;
  v23[98] = 0;
  LODWORD(STACK[0x424]) = 0;
  a20(v24);
  v27 = *a18;
  v28 = *v26;
  v29 = *((_DWORD *)v26 + 3);
  v23[39] = (char *)v26 + 12;
  v30 = v23[30];
  v31 = 597255653 * ((-1523268540 - ((v25 - 144) | 0xA534C444) + ((v25 - 144) | 0x5ACB3BBB)) ^ 0x53C04422);
  v23[180] = v23[31];
  v23[176] = v30;
  *(_DWORD *)(v25 - 112) = v31 + v21 + 1024;
  v23[178] = v28;
  *(_DWORD *)(v25 - 140) = v31 + v29 + 1581691396 - ((v29 << ((v21 ^ 0xAD) - 4)) & 0xBC8D6408);
  *(_DWORD *)(v25 - 128) = ((163 * (v21 ^ 0x8AD)) ^ 0x257FE495) - v31 + (v27 ^ 0xFF99FFFE) + ((2 * v27) & 0xFF33FFFC);
  a19(v25 - 144);
  v32 = *(_DWORD *)(v25 - 144);
  v33 = a21(v24);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22 + 8 * ((1384 * (v32 == 663729217)) ^ v21)) - 12))(v33);
}

uint64_t sub_193259BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int *a13, uint64_t a14, void (*a15)(uint64_t), uint64_t (*a16)(_QWORD, uint64_t, uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;

  v30 = v23 - v28;
  v31 = 486723911 * ((2 * (v26 & 0x55F6A6B699288018) - v26 + 0x2A09594966D77FE3) ^ 0x18B782D8D61D1F79);
  *(_QWORD *)(v25 + 1408) = *(_QWORD *)(v24 + 8 * v23) - v31 - 8;
  *(_QWORD *)(v25 + 1400) = a23;
  *(_DWORD *)(v29 - 128) = v23 - 71465943 - v31;
  a15(v29 - 144);
  v32 = a16(*a13, a14, v27);
  v33 = ((v32 << ((v23 - 64) & 0xB8 ^ 0xA9)) & 0x6E37AB7E) + (v32 ^ 0xB71BD5BF);
  v34 = 486723911 * ((~v26 & 0xDE2073E71F252FBELL | v26 & 0x21DF8C18E0DAD041) ^ 0xEC9EA876AFEF4F24);
  *(_QWORD *)(v25 + 1408) = *(_QWORD *)(v24 + 8 * (v23 ^ 5)) - v34 - 8;
  *(_QWORD *)(v25 + 1400) = a23;
  *(_DWORD *)(v29 - 128) = v23 - 71465943 - v34;
  v35 = ((uint64_t (*)(uint64_t))a15)(v29 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * (v23 ^ 0x736 ^ (53 * (v33 != v30 - 612804370))))
                                          - 8))(v35);
}

uint64_t sub_193259DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _DWORD *a18, void (*a19)(uint64_t), void (*a20)(uint64_t),uint64_t (*a21)(uint64_t),uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;

  a20(a23);
  v28 = **(_QWORD **)(v24 + 296);
  v29 = **(_DWORD **)(v24 + 312);
  v30 = *a18 ^ 0x673DFFBB;
  v31 = (2 * *a18) & 0xCE7BFF76;
  v32 = *(_QWORD *)(v24 + 240);
  v33 = 597255653 * ((-1617313986 - ((v27 - 144) | 0x9F99BF3E) + ((v27 - 144) | 0x606640C1)) ^ 0x696D3F58);
  *(_QWORD *)(v24 + 1440) = *(_QWORD *)(v24 + 248);
  *(_QWORD *)(v24 + 1408) = v32;
  *(_QWORD *)(v24 + 1424) = v28;
  *(_DWORD *)(v27 - 112) = v33 + v25 + 1024;
  *(_DWORD *)(v27 - 140) = v33 + v29 + 1581691396 - ((v25 - 1131586720) & (2 * v29));
  *(_DWORD *)(v27 - 128) = v30 - v33 + v31 - 1109661699;
  a19(v27 - 144);
  v34 = *(_DWORD *)(v27 - 144);
  v35 = a21(a23);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * (((v34 == 15 * ((v25 - 1148) ^ 0x427) + 395293593)
                                                        * (v26 + v25 - 610110615 + 1607)) ^ (v25 - 1148)))
                                          - 8))(v35);
}

void sub_193259F34()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 760) = 0;
  JUMPOUT(0x193259F74);
}

uint64_t sub_19325A010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, uint64_t))
{
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v25 = *(_QWORD **)(v24 + 488);
  *v25 = 0;
  v25[1] = 0;
  *(_QWORD *)(v24 + 496) = v25 + 1;
  v26 = a22(4096, 2241923698);
  **(_QWORD **)(v24 + 488) = v26;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((222 * (v26 == 0)) ^ v22))
                            - (((v22 - 2026694781) & 0x78CCEFFD)
                             + (unint64_t)(v22 ^ 0xF81u))
                            + 6066))();
}

uint64_t sub_19325A090()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  v3 = v2(*(_QWORD *)(v1 + 488));
  LODWORD(STACK[0x324]) = v0;
  LOBYTE(STACK[0x2F3]) = 0;
  **(_QWORD **)(v1 + 432) = 0;
  return (*(uint64_t (**)(uint64_t))(v1 + 480))(v3);
}

uint64_t sub_19325A0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  int v30;

  *(_QWORD *)(v29 + 952) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((1046 * LOBYTE(STACK[0x2F3])) ^ (v30 + (int)a27 - 247))) - (a27 + 610112275) + 3868))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_19325A140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;

  v29 = STACK[0x424];
  LODWORD(STACK[0x274]) = STACK[0x424];
  v30 = *(_QWORD *)(v28 + 760);
  *(_QWORD *)(v28 + 320) = v30;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * (a8 | (2 * (v29 > *(_DWORD *)(v30 + 8))))) - (((a8 - 1029702419) | 0x19027000u) ^ 0xDBA27C19)))(a1, a2, 101372955, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_19325A1A0(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = *(_QWORD *)(v1 + 8 * (a1 - 3224));
  v2[11] = v2[57];
  v3 = v2[55];
  v2[13] = v2[56];
  v2[14] = v3;
  JUMPOUT(0x19325A1F0);
}

uint64_t sub_19325A2F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  int v36;
  uint64_t v37;
  int v38;

  LODWORD(STACK[0x284]) = a36;
  return ((uint64_t (*)(void))(*(_QWORD *)(v37
                                        + 8
                                        * (int)(((((v36 - 1111450261) & 0x669CE7FB ^ 0xFFFFF132) + v36 + 610112653)
                                               * (a36 == a3)) ^ (v38 + v36 + 2045)))
                            - 4))();
}

uint64_t sub_19325A350@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (unint64_t *)v2[95];
  v4 = *v3;
  v2[46] = *v3;
  v5 = LODWORD(STACK[0x424])
     - (((4 * a1) ^ 0x10A5752B2) & (2 * LODWORD(STACK[0x424])))
     - 0x4D58EB37AD4779BLL;
  v6 = v2[98];
  v2[48] = v6;
  v2[41] = v3;
  v2[42] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((8 * (((a1 - 1) ^ (v6 > v4)) & 1)) & 0xDF | (32 * (((a1 - 1) ^ (v6 > v4)) & 1))) ^ a1))
                            - 12))();
}

uint64_t sub_19325A3D8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x294]) = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v3 + ((v0 - 541364597) & 0xFBE6FE71) + ((v0 - 2831) | 0x1C0) - 2040) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_19325A420@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v5 = LODWORD(STACK[0x294]);
  v2[118] = v5--;
  v6 = (v5 ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + ((2 * v5) & 0x1EFF41E7ALL);
  *(_BYTE *)(v2[46] + v6) = *(_BYTE *)(v2[48] + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v5 == 0) * ((a1 - v3 - 854) ^ (v4 + 747))) ^ a1))
                            - 8))();
}

uint64_t sub_19325A4A4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = v6 - 1;
  v10 = (v9 ^ v2) + v1 + (v3 & (2 * v9));
  *(_BYTE *)(v5 + v10) = *(_BYTE *)(v4 + v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v9 == 0) * v7) ^ a1)) - 8))();
}

uint64_t sub_19325A4DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int *a24,uint64_t (*a25)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  uint64_t v33;
  uint64_t v34;

  v28[118] = v25;
  v30 = v28[41];
  *(_DWORD *)(v30 + 8) = STACK[0x424];
  *(_DWORD *)(v30 + 12) = 0;
  v28[119] = v30;
  v33 = v28[119];
  v34 = a25(*a24, v28[98], LODWORD(STACK[0x424]));
  LODWORD(STACK[0x2A4]) = a3;
  v28[50] = v33;
  v28[120] = v33;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * (int)(((a3 == v26 + 711481354) * ((v26 ^ 0xDBA276E7) - 2772)) ^ (v29 + v26 + 1067)))
                                          - 12))(v34);
}

uint64_t sub_19325A6D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  _BOOL4 v34;

  v34 = *(_QWORD *)(v33 + 400) == 0;
  *(_QWORD *)(v33 + 960) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * ((2618 * ((((a9 + 466774364) ^ v34) & 1) == 0)) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_19325A734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  _BOOL4 v40;
  _BOOL4 v41;

  v35 = v34[50];
  v36 = *(unsigned int *)(v35 + 8);
  v34[121] = v35;
  v37 = *(_DWORD *)(v35 + 12);
  v34[51] = v35 + 12;
  LODWORD(STACK[0x2BC]) = v37;
  v38 = (v37 ^ 0xDB39DBD3ED6BC39DLL) + 0x24C6242C38D21A53 + ((2 * v37) & 0x1DAD7873ALL);
  v39 = (v36 ^ 0xD3CBFDFFBF7CCFDFLL) + 0x2C34020066C10E0DLL + ((v36 << (((v32 + 10) | 0x66) ^ 0x67u)) & 0x17EF99FBELL);
  v40 = v38 < 0x263DDDEC;
  v41 = v38 > v39;
  if (v40 != v39 < 0x263DDDEC)
    v41 = v40;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((274 * !v41) ^ v32)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

void sub_19325A838()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (v0 - 2518) | 0x46;
  v4 = *(_QWORD *)(v2 + 400);
  **(_DWORD **)(v2 + 408) = LODWORD(STACK[0x2BC]) + 4;
  *(_QWORD *)(v2 + 968) = v4;
  v5 = *(_QWORD *)(v2 + 968);
  *(_QWORD *)(v2 + 232) = *(_QWORD *)(v1 + 8 * v3);
  v6 = *(_QWORD *)(v2 + 232);
  *(_QWORD *)(v2 + 144) = v5;
  *(_QWORD *)(v2 + 152) = v6;
  *(_QWORD *)(v2 + 168) = v5;
  JUMPOUT(0x19325AAF4);
}

uint64_t sub_19325AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;

  v32 = v31(*(_QWORD *)(v30 + 752));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29 + 8 * ((3502 * (a28 != 1)) ^ v28))
                                          - ((v28 - 641) ^ 0x473)))(v32);
}

uint64_t sub_19325ABA0()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v2 = (_QWORD *)v0[90];
  *v2 = 0;
  v2[1] = 0;
  v3 = v1();
  v0[22] = v0[93];
  LODWORD(STACK[0x224]) = STACK[0x3F8];
  v4 = (uint64_t (*)(uint64_t))v0[22];
  v0[119] = 0;
  return v4(v3);
}

void sub_19325AC00(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = a1;
}

void sub_19325AC44()
{
  JUMPOUT(0x19325AC5CLL);
}

uint64_t sub_19325ACE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = **(_QWORD **)(v2 + 680);
  *(_QWORD *)(v2 + 744) = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((2886 * ((v0 ^ (v3 == 0)) & 1)) ^ v0)))();
}

uint64_t sub_19325AD10()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  ((void (*)(_QWORD))v0)(*(_QWORD *)(v1 + 744));
  v2 = *(_QWORD **)(v1 + 680);
  *v2 = 0;
  v2[1] = 0;
  v3 = v0();
  return (*(uint64_t (**)(uint64_t))(v1 + 720))(v3);
}

uint64_t sub_19325AD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v44 = (a27 - 621633307) & 0x496AE35B;
  LODWORD(STACK[0x2A4]) = a42;
  sub_1931EEEAC(&STACK[0x5D0], 0, 0xC0uLL);
  v43[130] = v44 + *(_QWORD *)(v42 + 8 * (a27 + 610108678)) - 90;
  v45 = (((LOBYTE(STACK[0x5D4]) - ((2 * LOBYTE(STACK[0x5D4])) & 0x17ELL)) << 24) + 0x69D8038CBF000000) ^ 0x69D8038CBF000000;
  v46 = ((unint64_t)LOBYTE(STACK[0x5D0]) << 56) | ((unint64_t)LOBYTE(STACK[0x5D1]) << 48) | ((unint64_t)LOBYTE(STACK[0x5D2]) << 40) | ((unint64_t)(LOBYTE(STACK[0x5D3]) + 1761281547 + (~(2 * LOBYTE(STACK[0x5D3])) | 0xFFFFFFEB)) << 32) ^ 0x68FB060A00000000 | v45 | (((LOBYTE(STACK[0x5D5]) - ((2 * LOBYTE(STACK[0x5D5])) & 0xCLL)) << 16) + 0x350361AEA5060000) ^ 0x350361AEA5060000 | (((LOBYTE(STACK[0x5D6]) - ((2 * LOBYTE(STACK[0x5D6])) & 0x1CELL)) << 8) + 0x434761C106CAE700) ^ 0x434761C106CAE700;
  v47 = LOBYTE(STACK[0x5D7]) - ((2 * LOBYTE(STACK[0x5D7])) & 0x182) + 0x9405164B5B020C1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (int)v44) - 8))(462, 0x434761C106CAE700, 115, v43[44], v45, ((v46 - ((2 * v46) & 0xA03818AD1A802476) + 0x501C0C568D401213) ^ 0xBBC02AD332F68AALL) & (v47 ^ 0xF6BFAE9B4A4FDF3ELL) ^ v47 & 0x40110400900546 ^ 0x628F7FA1EE661F7ALL, v43[42], v43[131], a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_19325AFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28
                                                                                          + 8
                                                                                          * ((a27 + 610112373) ^ (93 * ((((v27 ^ 0x59E4FD4BF5D5E00) - 0x67113075513B417ALL) ^ ((v27 ^ 0x41F5A9BA88058E62) - 0x237AD61B66639118) ^ ((v27 ^ 0x1F8BF99189A7AA9BuLL) - 0x7D04863067C1B5E1)) + 0x396F605E50996583 < 0x16))))
                                                                              - 12))(a1, a2, a3, a4, v29);
}

void sub_19325B084()
{
  JUMPOUT(0x19325AE40);
}

uint64_t sub_19325B0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27)
{
  uint64_t v27;
  uint64_t v28;
  int v29;

  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * (int)((v29 + a27 - 56) ^ (1252 * (v27 == a6))))
                            - (a27 ^ 0xDBA27C15)))();
}

uint64_t sub_19325B0F4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (1004 * (v1 == 0x396F605E50996583))))
                            + 3684858885
                            - ((a1 - 895328745) | 0x11001010u)))();
}

uint64_t sub_19325B158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v34;

  v30 = (v28 + v22 - 112);
  v31 = (((v23 ^ 0x1300CDED05C39C6BLL) - 0x1300CDED05C39C6BLL) ^ ((v23 ^ 0x198811ACF835809ELL) - 0x198811ACF835809ELL) ^ ((v23 ^ 0x33E7BC1FAD6F7976) - 0x33E7BC1FAD6F7976))
      + 0x396F605E50996584;
  v32 = a22 - 0x66807B60838C58F9 - ((2 * a22) & 0x32FF093EF8E74E0ELL);
  v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * (int)v30) - 4);
  v34 = (_BYTE *)(v25
                + ((((8 * v23) ^ 0xCB7B02F284CB2C18) + 16) ^ 0xFAFEFF33EF3FBF29)
                + 0x7DFFDFFEFDF1CAF8
                + ((2 * (((8 * v23) ^ 0xCB7B02F284CB2C18) + 16)) & 0xF5FDFE67DE7F7E50)
                - 0x78FEDF32ED318A21);
  *v34 = HIBYTE(v32) ^ 0x99;
  v34[1] = BYTE6(v32) ^ 0x7F;
  v34[2] = BYTE5(v32) ^ 0x84;
  v34[3] = BYTE4(v32) ^ 0x9F;
  v34[4] = (((((_DWORD)a22 + 2087954183 - ((2 * (_DWORD)a22) & 0xF8E74E0E)) >> 24) ^ 0x7C)
          - ((2 * ((((_DWORD)a22 + 2087954183 - ((2 * (_DWORD)a22) & 0xF8E74E0E)) >> 24) ^ 0x7C)) & 0x7C)
          + 62) ^ 0x3E;
  v34[5] = (((((_DWORD)a22 + 2087954183 - ((2 * (_DWORD)a22) & 0xF8E74E0E)) >> 16) ^ a3)
          - (v29 & (2 * ((((_DWORD)a22 + 2087954183 - ((2 * (_DWORD)a22) & 0xF8E74E0E)) >> 16) ^ a3)))
          - 117) ^ v24;
  v34[6] = v27 ^ BYTE1(v32);
  v34[7] = (a22 + 7 - ((2 * a22) & 0xE)) ^ 7;
  return v33(v30, a2, a3, v31 - 0x66807B60838C58F9 - ((2 * v31) & 0x32FF093EF8E74E0ELL), v31, a6, v31, 0x396F605E50996583, a9, a10, a11, a12);
}

void sub_19325B374()
{
  JUMPOUT(0x19325B2A8);
}

uint64_t sub_19325B398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(void))
{
  return a23();
}

uint64_t sub_19325B3A0()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned __int8 v3;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v3 ^ (v2 + v0 - 78)) & 1) * ((v2 + v0 + 156) ^ 0x306)) ^ (v2 + v0 + 1511))))();
}

void sub_19325B3D0()
{
  JUMPOUT(0x19325AE2CLL);
}

void sub_19325B400()
{
  JUMPOUT(0x19325B280);
}

uint64_t sub_19325B444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;

  v68[26] = a23;
  v68[130] = a24;
  v68[129] = a21;
  v68[128] = v69;
  v68[29] = v69;
  v68[94] = a24;
  v68[132] = a5;
  v68[133] = v71;
  LOBYTE(STACK[0x54F]) = v70;
  v68[83] = v65;
  v68[86] = v64;
  v68[88] = a6;
  v68[131] = a8;
  v68[42] = a7;
  v68[44] = a4;
  v68[135] = a9;
  LOBYTE(STACK[0x3A7]) = v70;
  v68[80] = v71;
  v68[82] = a5;
  LODWORD(a43) = STACK[0x2A4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * ((v70 * ((v66 + 610109161) ^ 0x1130)) ^ (v66 + 610109178))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_19325B4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  int v29;
  uint64_t v30;
  _QWORD *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = (v29 + 295855383) | 0xCA001400;
  v31[137] = (v34 ^ 0xFFFFFFFF245D83E9) + *(_QWORD *)(v30 + 8 * v29);
  LODWORD(STACK[0x570]) = -1624313226;
  v31[138] = &STACK[0x5D0];
  v31[176] = &STACK[0x560];
  *(_DWORD *)(v33 - 144) = (v29 - 2093235722) ^ (486723911
                                               * ((((v33 - 144) | 0x4C8D32E8) - (v33 - 144) + ((v33 - 144) & 0xB372CD10)) ^ 0xFC475272));
  v35 = ((uint64_t (*)(uint64_t))(qword_1E2FD4D00[v29 ^ 0x2E5] - 12))(v33 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30
                                                      + 8
                                                      * ((81 * (a28 != ((2 * (v34 ^ (v32 - 416))) ^ 0x232))) ^ ((int)v34 + 610111489)))
                                          - 4))(v35);
}

uint64_t sub_19325B5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;

  v69[26] = a23;
  v69[130] = a24;
  v69[129] = a21;
  v69[128] = v70;
  v69[29] = v70;
  v69[94] = a24;
  v69[132] = a5;
  v69[133] = v72;
  LOBYTE(STACK[0x54F]) = v71;
  v69[83] = v67;
  v69[86] = v65;
  v69[88] = a6;
  v69[131] = a8;
  v69[42] = a7;
  v69[44] = a4;
  v69[135] = a9;
  LOBYTE(STACK[0x3A7]) = v71;
  v69[80] = v72;
  v69[82] = a5;
  LODWORD(a43) = a19;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * (int)((81 * (HIDWORD(a28) != ((2 * (v66 ^ 0x213)) ^ 0x232))) ^ ((v66 ^ 0xDBA27F1A) + 610111489))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

void sub_19325B670(uint64_t a1)
{
  __asm { BR              X15 }
}

void sub_19325B748(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = a1;
}

void sub_19325BB34()
{
  uint64_t v0;

  v0 = **(_QWORD **)(MEMORY[0x1E0C80A78]() + 8);
  __asm { BR              X9 }
}

uint64_t sub_19325BD10@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)(v5 + 4200) = &STACK[0x46AAD4E1DD901394];
  *(_QWORD *)(v5 + 4208) = &STACK[0x54D2A68F3DE7F632];
  v4[1936] = HIBYTE(a1) ^ 0x7B;
  v4[1937] = (a1 >> ((v6 ^ 0x70u) - 86)) ^ 0x5F;
  v4[1938] = BYTE5(a1) ^ 0x69;
  v4[1939] = BYTE4(a1) ^ 0x11;
  v4[1940] = ((BYTE3(a1) ^ 0x15) - ((2 * (BYTE3(a1) ^ 0x15)) & 0x7C) + 62) ^ 0x3E;
  v4[1941] = ((BYTE2(a1) ^ 0xB1) - ((2 * (BYTE2(a1) ^ 0xB1)) & 0x16) - 117) ^ 0x8B;
  v4[1942] = BYTE1(a1) ^ 0x98;
  v4[1943] = a1 ^ 0x17;
  *(_DWORD *)(v7 - 140) = v1 + v6 + 629424707 * ((v7 - 144) ^ 0x989F7379) + 2764;
  v8 = sub_193241A88(v7 - 144);
  v9 = *(_DWORD *)(v7 - 144) != 1009597723;
  LODWORD(STACK[0x8CC]) = v3;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((15 * v9) ^ (v1 + v6 + 1890))))(v8);
}

uint64_t sub_19325BE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  BOOL v64;
  int v66;

  if (a21)
    v64 = a32 == 0;
  else
    v64 = 1;
  LODWORD(STACK[0x8CC]) = 101330305;
  v66 = !v64 && a19 != 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * ((((((v61 + 147) | 2) - v62 - 443) ^ (v60 - 1608)) * v66) ^ v61)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_19325BECC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t, uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v65 = *(_QWORD *)(v62 + 8 * a1);
  v64[527] = a4 - 0x37D414369B065A91;
  v64[528] = a21 - 0x33D7F666902D96D9;
  v66 = a1 + 731;
  v64[216] = 0;
  v64[220] = v65;
  v64[234] = &a61;
  v63[18] = &a61;
  v67 = (a1 + 545788121) | 0xB328802;
  LODWORD(STACK[0x1894]) = STACK[0x984];
  v63[20] = v64[232];
  LODWORD(STACK[0x18A4]) = STACK[0x974];
  v68 = v64[229];
  v63[22] = v64[230];
  v63[23] = v68;
  v63[24] = v64[228];
  LODWORD(STACK[0x18C4]) = STACK[0x954];
  v69 = v64[225];
  v63[26] = v64[226];
  v63[27] = v69;
  v70 = v64[223];
  v63[28] = v64[224];
  v63[29] = v70;
  v63[30] = v64[222];
  LODWORD(STACK[0x18F4]) = STACK[0x924];
  v71 = v64[220];
  v63[32] = v64[219];
  LODWORD(STACK[0x1900]) = STACK[0x90C];
  LODWORD(STACK[0x1904]) = STACK[0x908];
  v72 = v64[216];
  v63[34] = v64[217];
  v63[35] = v72;
  v63[36] = v64[215];
  LODWORD(STACK[0x1924]) = STACK[0x8EC];
  v63[38] = v64[213];
  LODWORD(STACK[0x1934]) = STACK[0x8DC];
  v63[40] = v64[211];
  v63[41] = v71;
  v73 = a20(16, 2241923698);
  v63[42] = v73;
  v64[235] = 0;
  LOBYTE(STACK[0x99F]) = 0;
  LODWORD(STACK[0x9A0]) = 101330303;
  return (*(uint64_t (**)(void))(a55 + 8 * (((v73 != 0) * (v61 + v67 + 2681)) ^ v66)))();
}

uint64_t sub_19325BF1C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  *(_QWORD *)(v3 + 4544) = &STACK[0x46AAD4E1DD9014EC];
  *(_QWORD *)(v3 + 4560) = &STACK[0x54D2A68F3DE7FCD6];
  *(_DWORD *)(v5 - 140) = v0
                        + v4
                        + 629424707 * (((~(v5 - 144) & 0x4CB745B2) - (~(v5 - 144) | 0x4CB745B3)) ^ 0xD42836CA)
                        + 2764;
  v6 = sub_193241A88(v5 - 144);
  v7 = *(_DWORD *)(v5 - 144) == ((v4 - 235974735) & 0xE25617FB ^ 0x3C2D3FB8);
  LODWORD(STACK[0xD9C]) = v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * ((29 * v7) ^ (v0 + v4 + 1994))) - 4))(v6);
}

uint64_t sub_19325BFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t))
{
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;

  v33 = (v29 + 1537) | 0x408;
  v34 = v27 & 0xC75F216E;
  v35 = 2 * (v27 & 0xC75F216E);
  v36 = ((v33 + 98793202) ^ (2 * (v27 ^ 0xC5AEE0A1))) & (v27 ^ 0xC5AEE0A1) ^ (2 * (v27 ^ 0xC5AEE0A1)) & 0x2F1C1CE;
  v37 = v36 ^ 0x2104041;
  v38 = (v36 ^ 0xE1C189) & (4 * (v35 & (v27 ^ 0xC71EA06D) ^ v34)) ^ v35 & (v27 ^ 0xC71EA06D) ^ v34;
  v39 = ((4 * v37) ^ 0xBC7073C) & v37 ^ (4 * v37) & 0x2F1C1CC;
  v40 = (v39 ^ 0x2C10100) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x30C0C3)) ^ 0x2F1C1CF0) & (v39 ^ 0x30C0C3) ^ (16 * (v39 ^ 0x30C0C3)) & 0x2F1C1C0;
  v42 = v40 ^ 0x2F1C1CF ^ (v41 ^ 0x2100000) & (v40 << 8);
  v32[582] = 4
           * (v27 ^ (2
                   * ((v42 << 16) & 0x2F10000 ^ v42 ^ ((v42 << 16) ^ 0x41CF0000) & (((v41 ^ 0xE1C10F) << 8) & 0x2F10000 ^ 0x2300000 ^ (((v41 ^ 0xE1C10F) << 8) ^ 0x71C10000) & (v41 ^ 0xE1C10F)))) ^ 0xC33EA2F0)
           + 0x153812050B800009;
  v43 = ((2 * (v27 ^ 0x3901828D)) ^ 0xFCBD47C6) & (v27 ^ 0x3901828D) ^ (2 * (v27 ^ 0x3901828D)) & 0xFE5EA3E2;
  v44 = v43 ^ 0x242A021;
  v45 = (v43 ^ 0x3C1C03C0) & (4 * (v35 & (v27 ^ 0xB71F804D) ^ v34)) ^ v35 & (v27 ^ 0xB71F804D) ^ v34;
  v46 = ((4 * v44) ^ 0xF97A8F8C) & v44 ^ (4 * v44) & 0xFE5EA3E0;
  v47 = (v46 ^ 0xF85A8380) & (16 * v45) ^ v45;
  v48 = ((16 * (v46 ^ 0x6042063)) ^ 0xE5EA3E30) & (v46 ^ 0x6042063) ^ (16 * (v46 ^ 0x6042063)) & 0xFE5EA3E0;
  v49 = v47 ^ 0xFE5EA3E3 ^ (v48 ^ 0xE44A2200) & (v47 << 8);
  v50 = v27 ^ (2
             * ((v49 << 16) & 0x7E5E0000 ^ v49 ^ ((v49 << 16) ^ 0x23E30000) & (((v48 ^ 0x1A1481C3) << 8) & 0x7E5E0000 ^ 0x205C0000 ^ (((v48 ^ 0x1A1481C3) << 8) ^ 0x5EA30000) & (v48 ^ 0x1A1481C3))));
  *(_BYTE *)(v31 + 1932) = HIBYTE(v50) ^ 0x7F;
  *(_BYTE *)(v31 + 1933) = BYTE2(v50) ^ 0x66;
  *(_BYTE *)(v31 + 1934) = (((BYTE1(v50) ^ 0x66) - 2 * ((BYTE1(v50) ^ 0x66) & 3) + 11) ^ 3) - 8;
  *(_BYTE *)(v31 + 1935) = v50 ^ 0xA8;
  LODWORD(STACK[0x1614]) = v27 - 444484535;
  LOBYTE(STACK[0x99F]) = (v27 - 444484535) < 0x1E2292DB;
  LOBYTE(STACK[0xFB3]) = v27 == 950066834;
  v51 = v35 & (v27 ^ 0xD65E214C) ^ v27 & 0xC75F216E;
  v52 = ((2 * (v27 ^ 0x546463D8)) ^ 0x2676856C) & (v27 ^ 0x546463D8) ^ (2 * (v27 ^ 0x546463D8)) & 0x933B42B6;
  v53 = (v52 ^ 0x2300020) & (4 * v51) ^ v51;
  v54 = ((4 * (v52 ^ 0x91094292)) ^ 0x4CED0AD8) & (v52 ^ 0x91094292) ^ (4 * (v52 ^ 0x91094292)) & 0x933B42B4;
  v55 = (v54 ^ 0x290280) & (16 * v53) ^ v53;
  v56 = ((16 * (v54 ^ 0x93124026)) ^ 0x33B42B60) & (v54 ^ 0x93124026) ^ (16 * (v54 ^ 0x93124026)) & 0x933B42B0;
  v57 = v55 ^ 0x933B42B6 ^ (v56 ^ 0x13300200) & (v55 << 8);
  LODWORD(STACK[0x163C]) = (4 * v27) ^ (8
                                      * ((v57 << 16) & 0x133B0000 ^ v57 ^ ((v57 << 16) ^ 0x2B60000) & (((v56 ^ 0x800B4096) << 8) & 0x133B0000 ^ 0x390000 ^ (((v56 ^ 0x800B4096) << 8) ^ 0x1B420000) & (v56 ^ 0x800B4096)))) ^ 0x95369008;
  LODWORD(STACK[0xDAC]) = v29;
  v32[255] = 0;
  v32[263] = &STACK[0x330];
  v32[660] = &STACK[0x330];
  LODWORD(STACK[0x1894]) = STACK[0xE3C];
  v32[662] = v32[262];
  LODWORD(STACK[0x18A4]) = STACK[0xE2C];
  *(_QWORD *)v31 = v32[292];
  *(_QWORD *)(v30 + 1) = v32[261];
  *(_QWORD *)(v30 + 9) = v32[259];
  *(_QWORD *)(v30 + 17) = v32[257];
  *(_QWORD *)(v30 + 49) = v32[255];
  *(_QWORD *)(v30 + 65) = v32[252];
  LODWORD(STACK[0x18C4]) = STACK[0xE1C];
  LODWORD(STACK[0x18F4]) = STACK[0xDFC];
  LODWORD(STACK[0x1900]) = STACK[0xDE4];
  *(_QWORD *)(v30 + 81) = v32[251];
  *(_QWORD *)(v30 + 105) = v32[249];
  LODWORD(STACK[0x1904]) = STACK[0xDD4];
  *(_QWORD *)(v30 + 113) = v32[247];
  *(_QWORD *)(v30 + 121) = v32[246];
  *(_QWORD *)(v30 + 137) = v32[245];
  *(_QWORD *)(v30 + 145) = v32[241];
  LODWORD(STACK[0x1924]) = STACK[0xDBC];
  *(_QWORD *)(v30 + 153) = v32[240];
  *(_QWORD *)(v30 + 161) = v32[238];
  *(_QWORD *)(v31 + 32) = v32[275];
  *(_QWORD *)(v30 + 177) = v32[235];
  *(_QWORD *)(v30 + 185) = *(_QWORD *)(v28 + 8 * SLODWORD(STACK[0xDAC]));
  v58 = a27(16, 2241923698);
  *(_QWORD *)(v30 + 193) = v58;
  v32[265] = 0;
  *(_BYTE *)(v31 + 1930) = 0;
  LODWORD(STACK[0xE4C]) = 101330303;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((405 * (v58 == 0)) ^ v33)) - (((v33 - 480) | 0x10u) ^ 0xAD4)))();
}

uint64_t sub_19325C458()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  *(_QWORD *)(v3 + 4600) = &STACK[0x46AAD4E1DD901544];
  *(_QWORD *)(v3 + 4608) = &STACK[0x54D2A68F3DE7FCEA];
  *(_DWORD *)(v5 - 140) = v0
                        + v4
                        + 629424707 * (((~(v5 - 144) & 0xB0C41560) - (~(v5 - 144) | 0xB0C41561)) ^ 0x285B6618)
                        + 2764;
  v6 = sub_193241A88(v5 - 144);
  v7 = *(_DWORD *)(v5 - 144) == ((v0 + v4 + 509) ^ 0x3C2D3F46);
  LODWORD(STACK[0xDBC]) = v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (((2 * v7) | (16 * v7)) ^ (v4 - 733645387))) - 4))(v6);
}

uint64_t sub_19325C540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  char v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v59 = 2 * (v54 & 0x9A8F2A7C);
  v60 = v59 & (v54 ^ 0xD86AA1FD) ^ v54 & 0x9A8F2A7C ^ (v59 & 0x40080 | 0x810200);
  v61 = (2 * (v54 ^ 0xD86AA1FD)) & 0x42E58B80 ^ 0x42248881 ^ ((2 * (v54 ^ 0xD86AA1FD)) ^ 0x85CB1702) & (v54 ^ 0xD86AA1FD);
  v62 = (4 * v60) & 0x42E58B80 ^ v60 ^ ((4 * v60) ^ 0x2040800) & v61;
  v63 = (4 * v61) & 0x42E58B80 ^ 0x40618181 ^ ((4 * v61) ^ 0xB962E04) & v61;
  v64 = (16 * v62) & 0x42E58B80 ^ v62 ^ ((16 * v62) ^ 0x2850A000) & v63;
  v65 = (16 * v63) & 0x42E58B80 ^ 0x40A50381 ^ ((16 * v63) ^ 0x2E58B810) & v63;
  v66 = v64 ^ (v64 << 8) & 0x42E58B00 ^ ((v64 << 8) ^ 0xC58A0000) & v65 ^ 0xA00181;
  v58[598] = 4
           * (v54 ^ (2
                   * ((v66 << 16) & 0x42E50000 ^ v66 ^ ((v66 << 16) ^ 0xB810000) & ((v65 << 8) & 0x42E50000 ^ 0x2640000 ^ ((v65 << 8) ^ 0x658B0000) & v65))) ^ 0x1A463D7E)
           + 0x2CE1D0000442040;
  v67 = ((2 * (v54 ^ 0x7DCEB0C1)) ^ 0xCE83357A) & (v54 ^ 0x7DCEB0C1) ^ (2 * (v54 ^ 0x7DCEB0C1)) & 0xE7419ABC;
  v68 = v67 ^ 0x21408A85;
  v69 = (v67 ^ 0xC6011030) & (4 * (v59 & (v54 ^ 0x58CEA079) ^ v54 & 0x9A8F2A7C)) ^ v59 & (v54 ^ 0x58CEA079) ^ v54 & 0x9A8F2A7C;
  v70 = ((4 * v68) ^ 0x9D066AF4) & v68 ^ (4 * v68) & 0xE7419ABC;
  v71 = (v70 ^ 0x85000AA0) & (16 * v69) ^ v69;
  v72 = ((16 * (v70 ^ 0x62419009)) ^ 0x7419ABD0) & (v70 ^ 0x62419009) ^ (16 * (v70 ^ 0x62419009)) & 0xE7419AB0;
  v73 = v71 ^ 0xE7419ABD ^ (v72 ^ 0x64018A00) & (v71 << 8);
  v74 = v54 ^ (2
             * ((v73 << 16) & 0x67410000 ^ v73 ^ ((v73 << 16) ^ 0x1ABD0000) & (((v72 ^ 0x8340102D) << 8) & 0x67410000 ^ 0x26410000 ^ (((v72 ^ 0x8340102D) << 8) ^ 0x419A0000) & (v72 ^ 0x8340102D))));
  *(_BYTE *)(v57 + 1932) = HIBYTE(v74) ^ 0x50;
  *(_BYTE *)(v57 + 1933) = BYTE2(v74) ^ 0xE;
  *(_BYTE *)(v57 + 1934) = (((BYTE1(v74) ^ 0x1F) - 2 * ((BYTE1(v74) ^ 0x1F) & 3) + 11) ^ 3) - 8;
  *(_BYTE *)(v57 + 1935) = v74 ^ 6;
  LODWORD(STACK[0x163C]) = v54 + 398489005;
  LOBYTE(STACK[0x99F]) = (v54 + 398489005) < 0x7D314B31;
  LOBYTE(STACK[0xFB3]) = v54 == 1701893508;
  v75 = v59 & (v54 ^ 0xDAAE027D) ^ v54 & 0x9A8F2A7C;
  v76 = ((2 * (v54 ^ 0xCBA40265)) ^ 0xA2565032) & (v54 ^ 0xCBA40265) ^ (2 * (v54 ^ 0xCBA40265)) & 0x512B2818;
  v77 = (v76 ^ 0x10) & (4 * v75) ^ v75;
  v78 = ((4 * (v76 ^ 0x51292809)) ^ 0x44ACA064) & (v76 ^ 0x51292809) ^ (4 * (v76 ^ 0x51292809)) & 0x512B2818;
  v79 = (v78 ^ 0x40282000) & (16 * v77) ^ v77;
  v80 = ((16 * (v78 ^ 0x11030819)) ^ 0x12B28190) & (v78 ^ 0x11030819) ^ (16 * (v78 ^ 0x11030819)) & 0x512B2810;
  v81 = v79 ^ 0x512B2819 ^ (v80 ^ 0x10220000) & (v79 << 8);
  LODWORD(STACK[0x164C]) = (4 * v54) ^ (8
                                      * ((v81 << 16) & 0x112B0000 ^ v81 ^ ((v81 << 16) ^ 0x8190000) & (((v80 ^ 0x41092809) << 8) & 0x112B0000 ^ 0x10030000 ^ (((v80 ^ 0x41092809) << 8) ^ 0xB280000) & (v80 ^ 0x41092809)))) ^ 0xE32DE938;
  v58[292] = ((v52 + 455) ^ 0xFFFFFFFFFFFFFBD8) + *(_QWORD *)(v55 + 8 * v52);
  v58[263] = 0;
  v58[269] = &STACK[0x368];
  v58[660] = &STACK[0x368];
  LODWORD(STACK[0x1894]) = STACK[0xE4C];
  v58[662] = v58[268];
  LODWORD(STACK[0x18A4]) = STACK[0xE3C];
  *(_QWORD *)v57 = v58[297];
  *(_QWORD *)(v56 + 1) = v58[267];
  *(_QWORD *)(v56 + 9) = v58[265];
  *(_QWORD *)(v56 + 17) = v58[263];
  *(_QWORD *)(v56 + 49) = v58[262];
  *(_QWORD *)(v56 + 65) = v58[261];
  LODWORD(STACK[0x18C4]) = STACK[0xE2C];
  LODWORD(STACK[0x18F4]) = STACK[0xE1C];
  *(_QWORD *)(v56 + 81) = v58[259];
  *(_QWORD *)(v56 + 105) = v58[257];
  *(_QWORD *)(v56 + 113) = v58[255];
  v82 = v58[292];
  LODWORD(STACK[0x1900]) = STACK[0xDFC];
  *(_QWORD *)(v56 + 121) = v58[252];
  *(_QWORD *)(v56 + 137) = v58[251];
  *(_QWORD *)(v56 + 145) = v58[249];
  *(_QWORD *)(v57 + 32) = v58[275];
  *(_QWORD *)(v56 + 153) = v58[247];
  *(_QWORD *)(v56 + 161) = v58[246];
  LODWORD(STACK[0x1904]) = STACK[0xDE4];
  LODWORD(STACK[0x1924]) = STACK[0xDD4];
  *(_QWORD *)(v56 + 177) = v58[245];
  *(_QWORD *)(v56 + 185) = v82;
  v83 = a27(16, 2241923698);
  *(_QWORD *)(v56 + 193) = v83;
  v58[271] = 0;
  *(_BYTE *)(v57 + 1930) = 0;
  LODWORD(STACK[0xE5C]) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((2184 * (((v53 + ((v52 - 119) | 0x10) - 1) ^ (v83 == 0)) & 1)) ^ (v52 + 455))) - 8))(v83, v84, v85, v86, v87, v88, v89, v90, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_19325C9C4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;

  *(_QWORD *)(v5 + 4344) = &STACK[0x46AAD4E1DD9013E4];
  *(_QWORD *)(v5 + 4360) = &STACK[0x54D2A68F3DE7FB72];
  v8 = (a1 ^ 0x8EE4574A36DA03DLL) & (2 * (a1 & 0xAAEE46783361C03ELL)) ^ a1 & 0xAAEE46783361C03ELL;
  v9 = ((2 * ((((v1 + v6 + 432) | 0x820u) + 0x4C76C9F4A3AC95D1) ^ a1)) ^ 0xCD311F19219AC07ELL) & ((((v1 + v6 + 432) | 0x820u) + 0x4C76C9F4A3AC95D1) ^ a1) ^ (2 * ((((v1 + v6 + 432) | 0x820u) + 0x4C76C9F4A3AC95D1) ^ a1)) & 0xE6988F8C90CD603ELL;
  v10 = v9 ^ 0x2288808490452001;
  v11 = (v9 ^ 0xC4100B0000880038) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0x9A623E32433580FCLL) & v10 ^ (4 * v10) & 0xE6988F8C90CD603CLL;
  v13 = (v12 ^ 0x82000E0000050020) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x6498818C90C86003)) ^ 0x6988F8C90CD603F0) & (v12 ^ 0x6498818C90C86003) ^ (16 * (v12 ^ 0x6498818C90C86003)) & 0xE6988F8C90CD6030;
  v15 = (v14 ^ 0x6088888800C40000) & (v13 << 8) ^ v13;
  v16 = (((v14 ^ 0x861007049009600FLL) << 8) ^ 0x988F8C90CD603F00) & (v14 ^ 0x861007049009600FLL) ^ ((v14 ^ 0x861007049009600FLL) << 8) & 0xE6988F8C90CD6000;
  v17 = v15 ^ 0xE6988F8C90CD603FLL ^ (v16 ^ 0x80888C8080400000) & (v15 << 16);
  v18 = a1 ^ (2
            * ((v17 << 32) & 0x66988F8C00000000 ^ v17 ^ ((v17 << 32) ^ 0x10CD603F00000000) & (((v16 ^ 0x6610030C108D403FLL) << 16) & 0x66988F8C00000000 ^ 0x60100F0000000000 ^ (((v16 ^ 0x6610030C108D403FLL) << 16) ^ 0xF8C90CD00000000) & (v16 ^ 0x6610030C108D403FLL))));
  v4[1936] = HIBYTE(v18) ^ 0x66;
  v4[1937] = BYTE6(v18) ^ 0xCF;
  v4[1938] = BYTE5(v18) ^ 0x59;
  v4[1939] = BYTE4(v18) ^ 0x79;
  v4[1940] = ((BYTE3(v18) ^ 0x12) - ((2 * (BYTE3(v18) ^ 0x12)) & 0x7C) + 62) ^ 0x3E;
  v4[1941] = ((BYTE2(v18) ^ 0xFB) - ((2 * (BYTE2(v18) ^ 0xFB)) & 0x16) - 117) ^ 0x8B;
  v4[1942] = BYTE1(v18);
  v4[1943] = v18 ^ 0x40;
  *(_DWORD *)(v7 - 140) = v1
                        + v6
                        + 629424707 * ((((v7 - 144) | 0xE4A568E6) - ((v7 - 144) & 0xE4A568E6)) ^ 0x7C3A1B9F)
                        + 2764;
  v19 = sub_193241A88(v7 - 144);
  v20 = *(_DWORD *)(v7 - 144) != 1009597723;
  LODWORD(STACK[0xDD4]) = v3;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((1241 * v20) ^ (v1 + v6 + 2512))))(v19);
}

uint64_t sub_19325CD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  int v25;

  STACK[0x208] = 0;
  LODWORD(STACK[0x754]) = v23;
  LODWORD(STACK[0xDD4]) = 101330305;
  if (a21)
    v24 = a19 == 0;
  else
    v24 = 1;
  v25 = !v24;
  return (*(uint64_t (**)(void))(v22 + 8 * ((((v21 + 733647046) ^ 0x2BBA9A99) * v25) ^ v21)))();
}

uint64_t sub_19325CD78@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t, uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  _QWORD *v56;
  _QWORD *v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  LODWORD(STACK[0xDFC]) = v55 + a1 + 89;
  v57[274] = 0;
  LODWORD(a4) = -1346437385;
  v60 = v55 + a1;
  v57[283] = &STACK[0x208];
  LODWORD(STACK[0x1B0C]) = STACK[0xE5C];
  v61 = v57[281];
  v56[63] = &STACK[0x208];
  v56[64] = v61;
  LODWORD(STACK[0x1B2C]) = STACK[0xE4C];
  v56[69] = v57[248];
  v56[65] = v57[279];
  v56[67] = v57[277];
  v56[70] = v57[274];
  v56[71] = v57[273];
  v56[73] = v57[271];
  v56[75] = v57[269];
  v56[76] = v57[268];
  LODWORD(STACK[0x1B3C]) = STACK[0xE3C];
  LODWORD(STACK[0x1B7C]) = STACK[0xE2C];
  LODWORD(STACK[0x1B8C]) = STACK[0xE1C];
  v56[77] = v57[267];
  v56[79] = v57[265];
  v56[81] = v57[263];
  v56[82] = v57[262];
  v56[74] = v57[243];
  v62 = SLODWORD(STACK[0xDFC]);
  LODWORD(STACK[0x1B9C]) = STACK[0xDE4];
  v56[83] = v57[261];
  v56[85] = *(_QWORD *)(v59 + 8 * v62) - 12;
  v63 = a20(16, 2241923698);
  v56[87] = v63;
  v57[284] = 0;
  LOBYTE(STACK[0x99F]) = 0;
  LODWORD(STACK[0xE78]) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a55 + 8 * ((1527 * (((v60 - 1) ^ (v63 == 0)) & 1)) ^ (v60 + 2185))) - 4))(v63, v64, v65, v66, v67, v68, v69, v70, a2, a3, a4, (v58 - 1750280519) & 0x3C988E79, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           (v58 - 1750280519) & 0x3C988E79 ^ 0x25,
           a25);
}

uint64_t sub_19325D040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  int v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;

  v65 = *(_QWORD **)(v64 + 696);
  *v65 = 0;
  v65[1] = 0;
  *(_QWORD *)(v64 + 704) = v65 + 1;
  v66 = a27(4096, 2241923698);
  **(_QWORD **)(v64 + 696) = v66;
  return (*(uint64_t (**)(void))(a62
                              + 8
                              * (((v66 == 0) * (v63 + ((((v62 + 1008) | 0x98A) + 690522682) | 0x29202E2) - 49)) ^ ((v62 + 1008) | 0x98A))))();
}

uint64_t sub_19325D0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(_QWORD),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = a34(*(_QWORD *)(v41 + 696));
  *(_QWORD *)(v42 + 2272) = 0;
  LOBYTE(STACK[0x99F]) = 0;
  LODWORD(STACK[0xE78]) = a41;
  LODWORD(STACK[0x1BBC]) = STACK[0xE78];
  *(_BYTE *)(v41 + 359) = STACK[0x99F];
  **(_QWORD **)(v41 + 504) = *(_QWORD *)(v42 + 2272);
  return (*(uint64_t (**)(uint64_t))(v41 + 680))(v43);
}

uint64_t sub_19325D124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  STACK[0x220] = *(_QWORD *)(v32 + 664);
  LODWORD(STACK[0x758]) = STACK[0x1B9C];
  *(_QWORD *)(v32 + 1896) = *(_QWORD *)(v32 + 592);
  STACK[0x230] = *(_QWORD *)(v32 + 656);
  v36 = *(_QWORD *)(v32 + 632);
  *v33 = *(_QWORD *)(v32 + 648);
  v33[1] = v36;
  v33[3] = *(_QWORD *)(v32 + 616);
  LODWORD(STACK[0x75C]) = STACK[0x1B8C];
  LODWORD(STACK[0x784]) = STACK[0x1B7C];
  LODWORD(STACK[0x79C]) = STACK[0x1B3C];
  v37 = *(_QWORD *)(v32 + 600);
  v33[5] = *(_QWORD *)(v32 + 608);
  v33[6] = v37;
  v33[9] = *(_QWORD *)(v32 + 584);
  v33[11] = *(_QWORD *)(v32 + 568);
  v33[13] = *(_QWORD *)(v32 + 560);
  v38 = *(_QWORD *)(v32 + 520);
  v33[15] = *(_QWORD *)(v32 + 536);
  v33[16] = v38;
  *(_QWORD *)(v32 + 1904) = *(_QWORD *)(v32 + 552);
  LODWORD(STACK[0x7AC]) = STACK[0x1B2C];
  v33[17] = *(_QWORD *)(v32 + 512);
  LODWORD(STACK[0x7C8]) = STACK[0x1B0C];
  v39 = (uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((2886 * *(unsigned __int8 *)(v32 + 359)) | (v31 + v34 - 55))) - a31);
  LODWORD(STACK[0x7CC]) = STACK[0x1BBC];
  return v39();
}

uint64_t sub_19325D1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t (*v23)(void);

  v15 = 5 * (a12 ^ 0x23E);
  v13[253] = (v15 ^ 0xFFFFFFFFFFFFF587) + *(_QWORD *)(v14 + 8 * a12);
  LODWORD(STACK[0xE7C]) = STACK[0x1B9C];
  v13[270] = v12[74];
  v13[285] = v12[82];
  v13[287] = v12[79];
  v13[289] = v12[77];
  LODWORD(STACK[0xE8C]) = STACK[0x1B8C];
  LODWORD(STACK[0xEBC]) = STACK[0x1B3C];
  v13[290] = v12[76];
  v13[291] = v12[73];
  v13[293] = v12[71];
  v13[295] = v12[70];
  v13[296] = v12[67];
  v13[299] = v12[65];
  v13[275] = v12[69];
  LODWORD(STACK[0xEDC]) = STACK[0x1B2C];
  v13[301] = v12[64];
  LODWORD(STACK[0xEEC]) = STACK[0x1B0C];
  LODWORD(STACK[0xEFC]) = 1;
  LODWORD(STACK[0x1BD4]) = STACK[0xEFC];
  LODWORD(STACK[0x1BE4]) = STACK[0xEEC];
  v12[90] = v13[301];
  LODWORD(STACK[0x1BF8]) = STACK[0xEDC];
  v12[93] = v13[275];
  v12[92] = v13[299];
  v12[94] = v13[296];
  v12[95] = v13[295];
  v12[97] = v13[293];
  v12[99] = v13[291];
  v12[100] = v13[290];
  LODWORD(STACK[0x1BFC]) = STACK[0xEBC];
  LODWORD(STACK[0x1C3C]) = STACK[0xE8C];
  v12[101] = v13[289];
  v16 = v13[287];
  v12[103] = v16;
  v17 = v13[285];
  v12[105] = v17;
  v18 = v13[270];
  v12[108] = v18;
  v19 = STACK[0xE7C];
  LODWORD(STACK[0x1C5C]) = STACK[0xE7C];
  v20 = v13[253];
  v21 = STACK[0x208];
  v12[106] = STACK[0x208];
  v12[107] = v20;
  v22 = *(_DWORD *)(v21 + 12);
  v21 += 12;
  v12[111] = v21;
  LODWORD(STACK[0x1C8C]) = v22;
  v13[326] = v20;
  LODWORD(STACK[0xF9C]) = v19;
  v13[311] = v18;
  v13[327] = v17;
  v13[329] = v21;
  v13[331] = v16;
  v13[332] = v12[101];
  LODWORD(STACK[0xFB4]) = STACK[0x1C3C];
  LODWORD(STACK[0xFC0]) = STACK[0x1BD4];
  LODWORD(STACK[0xFC4]) = STACK[0x1BFC];
  v13[333] = v12[100];
  v13[335] = v12[106];
  v13[337] = v12[99];
  v13[338] = v12[97];
  v13[341] = v12[95];
  v13[343] = v12[94];
  v13[345] = v12[92];
  v13[314] = v12[93];
  LODWORD(STACK[0xFD4]) = STACK[0x1BF8];
  v13[347] = v12[90];
  LODWORD(STACK[0xFE8]) = STACK[0x1BE4];
  v23 = (uint64_t (*)(void))(*(_QWORD *)(v14
                                      + 8
                                      * (int)(((v22 < (int)v15 - 2680) * (((v15 + 1971662532) & 0x8A7AC7DD) + 45)) ^ v15))
                          - 4);
  LODWORD(STACK[0xFEC]) = 101330305;
  return v23();
}

uint64_t sub_19325DA88@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v6 = LODWORD(STACK[0x1C8C]);
  v7 = *(unsigned int *)(v3[106] + 8);
  v4[303] = v3[107];
  v8 = (v6 ^ 0xFE6FF17FBAEE5F2BLL) + 0x1900E808B782D98 + ((2 * v6) & 0x175DCBE56);
  v9 = (v7 ^ ((a1 - v1 - 181) - 0x21A00400AC2F7C0BLL))
     + ((2 * (_DWORD)v7) & 0xFF163DD6)
     + 0x21A00400C6DB6DD4;
  LODWORD(STACK[0xF0C]) = STACK[0x1C5C];
  v4[292] = v3[108];
  v10 = (v8 < 0x46668CBF) ^ (v9 < 0x46668CBF);
  v11 = v8 > v9;
  v4[305] = v3[105];
  if (v10)
    v12 = v8 < 0x46668CBF;
  else
    v12 = v11;
  v4[306] = v3[111];
  v4[307] = v3[103];
  v4[309] = v3[101];
  LODWORD(STACK[0xF28]) = STACK[0x1C3C];
  LODWORD(STACK[0xF2C]) = STACK[0x1BD4];
  LODWORD(STACK[0xF3C]) = STACK[0x1BFC];
  v4[312] = v3[100];
  v4[313] = v3[106];
  v4[315] = v3[99];
  v4[317] = v3[97];
  v4[319] = v3[95];
  v4[321] = v3[94];
  v4[323] = v3[92];
  v4[297] = v3[93];
  LODWORD(STACK[0xF6C]) = STACK[0x1BF8];
  v4[325] = v3[90];
  LODWORD(STACK[0xF8C]) = STACK[0x1BE4];
  LODWORD(STACK[0xF98]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2093 * v12) ^ a1)) - 4))();
}

void sub_19325DC08(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 8 * a1);
  v2[348] = v1[107];
  LODWORD(STACK[0xFFC]) = STACK[0x1C5C];
  v2[320] = v1[108];
  v2[334] = (((_DWORD)a1 + 745991904) & 0xD38917FF ^ 0xFFFFFFFFFFFFF809) + v4;
  v2[349] = v1[111];
  v2[351] = v1[103];
  v2[353] = v1[101];
  LODWORD(STACK[0x1044]) = STACK[0x1C3C];
  LODWORD(STACK[0x1054]) = STACK[0x1BD4];
  LODWORD(STACK[0x1074]) = STACK[0x1BFC];
  v2[354] = v1[100];
  v2[355] = v1[106];
  v2[357] = v1[99];
  v2[359] = v1[97];
  v2[360] = v1[95];
  v2[363] = v1[90];
  LODWORD(STACK[0x1084]) = STACK[0x1BE4];
  LODWORD(STACK[0x10CC]) = 4;
  JUMPOUT(0x19325DCBCLL);
}

uint64_t sub_19325DCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t (*v26)(void);

  v13 = STACK[0x908];
  LODWORD(STACK[0x1614]) = STACK[0x8EC];
  v10[583] = v10[61];
  LODWORD(STACK[0x163C]) = STACK[0x8DC];
  v10[566] = v10[7];
  v14 = v10[59];
  v10[584] = v10[60];
  v10[586] = v14;
  v10[587] = v10[57];
  v15 = v10[55];
  v16 = v10[53];
  v17 = v10[49];
  v10[589] = v10[50];
  v18 = STACK[0x8CC];
  LODWORD(STACK[0x164C]) = STACK[0x8C8];
  LODWORD(STACK[0x165C]) = STACK[0x8BC];
  v19 = v10[47];
  v10[591] = v19;
  v21 = v10[44];
  v20 = v10[45];
  v22 = v10[43];
  v10[592] = v21;
  v10[594] = v22;
  v23 = v10[2];
  v24 = STACK[0x874];
  LODWORD(STACK[0x16A4]) = STACK[0x874];
  v25 = v10[41];
  v10[596] = v25;
  v10[63] = v25;
  LODWORD(STACK[0x90C]) = v24;
  v10[24] = v23;
  v10[65] = v22;
  v10[66] = v21;
  v10[67] = v20;
  v10[69] = v19;
  LODWORD(STACK[0x924]) = STACK[0x165C];
  LODWORD(STACK[0x954]) = STACK[0x164C];
  LODWORD(STACK[0x974]) = v18;
  v10[71] = v17;
  v10[72] = v10[589];
  v10[75] = v16;
  v10[77] = v15;
  v10[79] = v10[587];
  v10[81] = v10[586];
  v10[82] = v10[584];
  v10[29] = v10[566];
  LODWORD(STACK[0x984]) = STACK[0x163C];
  v10[83] = v10[583];
  LODWORD(STACK[0x9A0]) = STACK[0x1614];
  v26 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((3266 * (v13 == v9)) ^ (v8 + v11 + 124)))
                          - (v11 - a8 + 124)
                          + 212);
  LODWORD(STACK[0x9A4]) = v13;
  return v26();
}

uint64_t sub_19325DE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22)
{
  int v22;
  int v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t (*v38)(uint64_t);

  v27 = (v22 + 1354) | 0x40;
  v25[413] = v25[596];
  LODWORD(STACK[0x11F4]) = STACK[0x16A4];
  v25[415] = v25[594];
  v25[417] = v25[592];
  v25[418] = v25[591];
  LODWORD(STACK[0x1204]) = STACK[0x165C];
  LODWORD(STACK[0x123C]) = STACK[0x164C];
  v25[419] = v25[589];
  v25[421] = v26 + 8 * v22;
  v25[423] = v25[587];
  v25[424] = v25[586];
  v25[427] = v25[584];
  v25[398] = v25[566];
  LODWORD(STACK[0x125C]) = STACK[0x163C];
  v25[430] = v25[583];
  LODWORD(STACK[0x126C]) = STACK[0x1614];
  LODWORD(STACK[0x12C4]) = a21;
  v25[432] = a22;
  v24[160] = v25[432];
  LODWORD(STACK[0x1D6C]) = STACK[0x12C4];
  LODWORD(STACK[0x1D7C]) = STACK[0x126C];
  v24[161] = v25[430];
  LODWORD(STACK[0x1D9C]) = STACK[0x125C];
  v24[142] = v25[398];
  v24[163] = v25[427];
  v24[165] = v25[424];
  v24[166] = v25[423];
  v28 = (_QWORD *)v25[421];
  v24[167] = v25[419];
  LODWORD(STACK[0x1DA0]) = STACK[0x123C];
  LODWORD(STACK[0x1DB4]) = STACK[0x1204];
  v24[169] = v25[418];
  v24[171] = v25[417];
  v29 = v25[415];
  v24[172] = v29;
  v30 = STACK[0x11F4];
  LODWORD(STACK[0x1DC4]) = STACK[0x11F4];
  v31 = v25[413];
  v24[173] = v31;
  v32 = *v28 + ((v27 - 1346) ^ 0xFFFFFFFFFFFFFEDCLL);
  v33 = STACK[0x208];
  v24[175] = STACK[0x208];
  v24[177] = v32;
  v34 = *(_DWORD *)(v33 + 12);
  v24[178] = v33 + 12;
  v35 = STACK[0x1D6C];
  v36 = (v27 - v23 - 1542)
      + (unint64_t)LODWORD(STACK[0x1D6C])
      + ((unint64_t)(LODWORD(STACK[0x1D6C]) < 0xF6C12F6) << 32)
      + 0x3C9367B65F572808;
  v24[159] = v36;
  v37 = (v34 ^ 0x6EFF7FD77DEC75BFLL) + ((2 * v34) & 0xFBD8EB7E) + v36;
  v24[164] = v37 - 0x604804C450800005;
  v25[454] = v31;
  LODWORD(STACK[0x134C]) = v30;
  v25[425] = v36;
  v25[456] = v29;
  v25[459] = v24[171];
  v25[460] = v24[160];
  v25[461] = v24[169];
  LODWORD(STACK[0x135C]) = STACK[0x1DB4];
  LODWORD(STACK[0x137C]) = STACK[0x1DA0];
  LODWORD(STACK[0x13A8]) = v35;
  v25[463] = v24[178];
  v25[464] = v24[167];
  v25[465] = v24[175];
  v25[467] = v24[177];
  v25[469] = v24[166];
  v25[470] = v24[165];
  v25[472] = v24[163];
  v25[429] = v24[142];
  LODWORD(STACK[0x13AC]) = STACK[0x1D9C];
  v25[474] = v24[161];
  LODWORD(STACK[0x13C4]) = STACK[0x1D7C];
  v38 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8
                                                          * (v27 ^ (8 * (v37 + 0x546D1871E795B44DLL < 0xFFFFFFFB))))
                                        - 4);
  LODWORD(STACK[0x13D0]) = 101330305;
  return v38(258740982);
}

uint64_t sub_19325E28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t (*v14)(void);

  v13 = v10[164] - 0x4B4AE2C9F3A4E6A0 + (unint64_t)(a8 + v8 - 196) > *(unsigned int *)(v10[175] + 8);
  v11[434] = v10[173];
  LODWORD(STACK[0x12D4]) = STACK[0x1DC4];
  v11[403] = v10[159];
  v11[436] = v10[172];
  v11[437] = v10[171];
  v11[439] = v10[160];
  v11[441] = v10[169];
  LODWORD(STACK[0x12F4]) = STACK[0x1DB4];
  LODWORD(STACK[0x1320]) = STACK[0x1DA0];
  LODWORD(STACK[0x1324]) = STACK[0x1D6C];
  v11[442] = v10[178];
  v11[443] = v10[167];
  v11[445] = v10[175];
  v11[446] = v10[177];
  v11[447] = v10[166];
  v11[450] = v10[165];
  v11[452] = v10[163];
  v11[420] = v10[142];
  LODWORD(STACK[0x133C]) = STACK[0x1D9C];
  v11[453] = v10[161];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((2529 * v13) ^ v8)) - 8);
  LODWORD(STACK[0x1348]) = v9;
  return v14();
}

void sub_19325E37C()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v3 + 8 * v0);
  v5 = STACK[0x1D6C];
  v6 = (v0 ^ 0xF093EC2A) + LODWORD(STACK[0x1D6C]);
  v2[348] = v1[173];
  LODWORD(STACK[0xFFC]) = STACK[0x1DC4];
  v2[320] = v1[159];
  v2[334] = v4 - 8;
  v2[349] = v1[171];
  v2[351] = v1[160];
  v2[353] = v1[169];
  LODWORD(STACK[0x1044]) = STACK[0x1DB4];
  LODWORD(STACK[0x1054]) = STACK[0x1DA0];
  LODWORD(STACK[0x1074]) = v5;
  v2[354] = v1[178];
  v2[355] = v1[167];
  v7 = v1[175];
  v2[357] = v7;
  v2[359] = v1[177];
  v2[360] = v1[166];
  v2[363] = v1[161];
  LODWORD(STACK[0x1084]) = STACK[0x1D7C];
  LODWORD(STACK[0x10CC]) = v6;
  v2[365] = v7;
  JUMPOUT(0x19325E430);
}

uint64_t sub_19325E588(int a1, unsigned int a2, int a3)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v5 | ((v4 <= v3) * a3))) - 17 * (((v5 - 1868) | a1) ^ a2) + 1756))();
}

void sub_19325E5B8()
{
  JUMPOUT(0x19325E554);
}

uint64_t sub_19325E5C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  int v24;
  uint64_t v25;

  v3[339] = v0;
  v2[137] = v1;
  v3[391] = v2[151];
  LODWORD(STACK[0x1180]) = STACK[0x1D4C];
  v3[367] = v2[133];
  v3[393] = v2[153];
  v3[395] = v2[150];
  v3[396] = v2[149];
  v3[397] = v2[147];
  LODWORD(STACK[0x1184]) = STACK[0x1D48];
  LODWORD(STACK[0x119C]) = STACK[0x1D3C];
  LODWORD(STACK[0x11AC]) = STACK[0x1D0C];
  v3[399] = v2[145];
  v3[401] = v2[144];
  v3[402] = v2[143];
  v3[405] = v2[141];
  v3[407] = v2[139];
  v3[409] = v2[135];
  v3[411] = v2[155];
  v3[379] = v2[137];
  LODWORD(STACK[0x11C4]) = 101330305;
  v3[412] = v2[138];
  LODWORD(STACK[0x11D4]) = STACK[0x1CEC];
  LODWORD(STACK[0x11F0]) = 101330305;
  v4 = STACK[0x11F0];
  v5 = STACK[0x11D4];
  v6 = v3[412];
  v7 = STACK[0x11C4];
  v8 = v3[379];
  v9 = v3[411];
  v10 = v3[409];
  v11 = v3[407];
  v12 = v3[405];
  v13 = v3[402];
  v14 = v3[401];
  v15 = v3[399];
  v16 = STACK[0x11AC];
  v17 = STACK[0x119C];
  v18 = STACK[0x1184];
  v19 = v3[397];
  v20 = v3[396];
  v21 = v3[395];
  v22 = (uint64_t (*)(void))v3[393];
  v23 = v3[367];
  v24 = STACK[0x1180];
  v25 = v3[391];
  v3[130] = v25;
  v3[90] = v23;
  v3[131] = v22;
  v3[132] = v21;
  v3[134] = v20;
  v3[135] = v19;
  LODWORD(STACK[0xAEC]) = v18;
  LODWORD(STACK[0xAFC]) = v17;
  LODWORD(STACK[0xB0C]) = v16;
  v3[136] = v15;
  v3[139] = v14;
  v3[141] = v13;
  v3[143] = v12;
  v3[145] = v11;
  v3[147] = v10;
  v3[148] = v9;
  v3[95] = v8;
  LODWORD(STACK[0xB28]) = v7;
  v3[149] = v6;
  LODWORD(STACK[0xB2C]) = v5;
  LODWORD(STACK[0xB3C]) = v4;
  v3[303] = v25;
  LODWORD(STACK[0xF0C]) = v24;
  v3[292] = v23;
  v3[305] = v22;
  v3[306] = v21;
  v3[307] = v20;
  v3[309] = v19;
  LODWORD(STACK[0xF28]) = v18;
  LODWORD(STACK[0xF2C]) = v17;
  LODWORD(STACK[0xF3C]) = v16;
  v3[312] = v15;
  v3[313] = v14;
  v3[315] = v13;
  v3[317] = v12;
  v3[319] = v11;
  v3[321] = v10;
  v3[323] = v9;
  v3[297] = v8;
  LODWORD(STACK[0xF6C]) = v7;
  v3[325] = v6;
  LODWORD(STACK[0xF8C]) = v5;
  LODWORD(STACK[0xF98]) = v4;
  v3[434] = v25;
  LODWORD(STACK[0x12D4]) = v24;
  v3[403] = v23;
  v3[436] = v22;
  v3[437] = v21;
  v3[439] = v20;
  v3[441] = v19;
  LODWORD(STACK[0x12F4]) = v18;
  LODWORD(STACK[0x1320]) = v17;
  LODWORD(STACK[0x1324]) = v16;
  v3[442] = v15;
  v3[443] = v14;
  v3[445] = v13;
  v3[446] = v12;
  v3[447] = v11;
  v3[450] = v10;
  v3[452] = v9;
  v3[420] = v8;
  LODWORD(STACK[0x133C]) = v7;
  v3[453] = v6;
  LODWORD(STACK[0x1348]) = v4;
  return v22();
}

uint64_t sub_19325E67C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v4[339] = v1;
  *(_QWORD *)(v3 + 1096) = v1;
  v4[391] = *(_QWORD *)(v3 + 1208);
  LODWORD(STACK[0x1180]) = STACK[0x1D4C];
  v4[367] = *(_QWORD *)(v3 + 1064);
  v4[393] = *(_QWORD *)(v3 + 1224);
  v4[395] = *(_QWORD *)(v3 + 1200);
  v4[396] = *(_QWORD *)(v3 + 1192);
  v4[397] = *(_QWORD *)(v3 + 1176);
  LODWORD(STACK[0x1184]) = STACK[0x1D48];
  LODWORD(STACK[0x119C]) = STACK[0x1D3C];
  LODWORD(STACK[0x11AC]) = STACK[0x1D0C];
  v4[399] = *(_QWORD *)(v3 + 1160);
  v4[401] = *(_QWORD *)(v3 + 1152);
  v4[402] = *(_QWORD *)(v3 + 1144);
  v4[405] = *(_QWORD *)(v3 + 1128);
  v4[407] = *(_QWORD *)(v3 + 1112);
  v4[409] = *(_QWORD *)(v3 + 1080);
  v4[411] = *(_QWORD *)(v3 + 1240);
  v4[379] = *(_QWORD *)(v3 + 1096);
  LODWORD(STACK[0x11C4]) = 101330305;
  v4[412] = *(_QWORD *)(v3 + 1104);
  LODWORD(STACK[0x11D4]) = STACK[0x1CEC];
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v5
                                     + 8 * ((*(unsigned __int8 *)(v3 + 879) * (v2 + (v0 ^ 0x2BBA9C1E) + 2157)) ^ v0))
                         - ((v0 + 292475735) & 0xEE912DF4)
                         + 2096);
  LODWORD(STACK[0x11F0]) = 101330305;
  return v6();
}

uint64_t sub_19325E780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(_QWORD, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  int v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;

  v66 = a27(v64[137], 2241923698);
  v64[157] = v66;
  v65[369] = v64[151];
  LODWORD(STACK[0x10D8]) = STACK[0x1D4C];
  v65[356] = v64[133];
  v65[370] = v64[153];
  v65[372] = v64[150];
  v65[374] = v64[149];
  v65[375] = v64[147];
  LODWORD(STACK[0x10DC]) = STACK[0x1D48];
  LODWORD(STACK[0x10F4]) = STACK[0x1D3C];
  LODWORD(STACK[0x1104]) = STACK[0x1D0C];
  v65[377] = v64[145];
  v65[378] = v64[144];
  v65[381] = v64[143];
  v65[383] = v64[141];
  v65[385] = v64[139];
  v65[387] = v64[135];
  v65[389] = v64[155];
  v65[361] = v64[137];
  LODWORD(STACK[0x111C]) = v63;
  v65[390] = 0;
  LODWORD(STACK[0x112C]) = STACK[0x1CEC];
  LODWORD(STACK[0x1174]) = a41;
  return (*(uint64_t (**)(void))(a62 + 8 * (int)(((v66 == 0) * (((v62 - 1647) ^ 0xFFFFF84D) + (v62 ^ 0xEDC))) ^ v62)))();
}

uint64_t sub_19325E874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  int v63;
  uint64_t *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v101;

  v67 = v62 ^ 0x77A81670u;
  v68 = (*(unsigned int *)v64[155] ^ 0xF13B4D6FEFEFBCFFLL)
      + 0x2EEFBF9FD5F1FBF3
      + ((2 * *(unsigned int *)v64[155]) & 0x1DFDF79FELL);
  v69 = (v68 ^ 0x9766AFEC315C16CELL) & (2 * (v68 & 0x103A1E470ELL)) ^ v68 & 0x103A1E470ELL;
  v65[193] = v64[151];
  v70 = ((2 * (v68 ^ (v67 - 0x68995014322FFCE3))) ^ 0x9144A238FECCBBB8) & (v68 ^ (v67 - 0x68995014322FFCE3)) ^ (2 * (v68 ^ (v67 - 0x68995014322FFCE3))) & 0x48B25D1C7F665DDCLL;
  LODWORD(STACK[0xC78]) = STACK[0x1D4C];
  v71 = v70 ^ 0x4892450401224444;
  v72 = (v70 ^ 0x78401818) & (4 * v69) ^ v69;
  v65[160] = v64[133];
  v65[195] = v64[153];
  v65[196] = v64[150];
  v65[198] = v64[149];
  v73 = ((4 * v71) ^ 0x22C97471FD997770) & v71 ^ (4 * v71) & 0x48B25D1C7F665DDCLL;
  v65[200] = v64[147];
  v74 = (v73 ^ 0x8054107D005540) & (16 * v72) ^ v72;
  LODWORD(STACK[0xC7C]) = STACK[0x1D48];
  LODWORD(STACK[0xC8C]) = STACK[0x1D3C];
  v75 = ((16 * (v73 ^ 0x4832090C0266088CLL)) ^ 0x8B25D1C7F665DDC0) & (v73 ^ 0x4832090C0266088CLL) ^ (16 * (v73 ^ 0x4832090C0266088CLL)) & 0x48B25D1C7F665DD0;
  LODWORD(STACK[0xCBC]) = STACK[0x1D0C];
  v76 = (v75 ^ 0x820510476645D00) & (v74 << 8) ^ v74;
  v65[201] = v64[145];
  v77 = (((v75 ^ 0x40920C180902001CLL) << 8) ^ 0xB25D1C7F665DDC00) & (v75 ^ 0x40920C180902001CLL) ^ ((v75 ^ 0x40920C180902001CLL) << 8) & 0x48B25D1C7F665D00;
  v65[202] = v64[144];
  v65[204] = v64[143];
  v65[165] = *(_QWORD *)(v66 + 8 * v62) - 4;
  v78 = v68 ^ (2 * (v77 & 0x5D045D4400000000 ^ v76 ^ (v77 ^ 0x101C1C66440000) & (v76 << 16)));
  v65[205] = v64[141];
  v65[206] = v64[139];
  v65[209] = v64[135];
  v65[211] = v64[155];
  v65[183] = v64[137];
  LODWORD(STACK[0xCE8]) = STACK[0x1CEC];
  v79 = v64[157];
  v65[213] = v79;
  v65[215] = v79;
  v65[216] = *(_QWORD *)v64[135];
  v65[203] = v78 ^ 0x24FEBBB4BF35CF6BLL;
  LODWORD(STACK[0xCDC]) = v63;
  v65[187] = 0x5D952DACE41797ELL;
  v80 = v65[203];
  v81 = v65[216];
  v82 = v65[187];
  v83 = v65[215];
  LODWORD(STACK[0x1994]) = STACK[0xCE8];
  v84 = v65[213];
  LODWORD(STACK[0x19C0]) = STACK[0xCDC];
  *v64 = v65[183];
  v85 = v65[209];
  v64[5] = v65[211];
  v64[6] = v85;
  v64[7] = v65[206];
  v64[9] = v65[205];
  v86 = v65[165];
  v87 = v65[202];
  v64[11] = v65[204];
  v64[12] = v87;
  v64[14] = v65[201];
  LODWORD(STACK[0x19C4]) = STACK[0xCBC];
  LODWORD(STACK[0x19DC]) = STACK[0xC8C];
  LODWORD(STACK[0x19EC]) = STACK[0xC7C];
  v88 = v65[198];
  v101 = v65[200];
  v64[16] = v101;
  v64[17] = v88;
  v64[18] = v65[196];
  v64[20] = v65[195];
  v89 = v65[160];
  v64[3] = v84;
  v64[4] = v89;
  LODWORD(STACK[0x1A08]) = STACK[0xC78];
  v64[23] = v65[193];
  v65[515] = v86;
  v65[540] = v83;
  v65[520] = v82;
  LODWORD(a59) = STACK[0x19C4];
  v90 = v64[14];
  v92 = v64[11];
  v91 = v64[12];
  v93 = v64[9];
  v95 = v64[6];
  v94 = v64[7];
  v96 = v64[5];
  v97 = *v64;
  v65[542] = v81;
  v65[522] = v80;
  STACK[0x1E98] = v80;
  STACK[0x1F18] = v81;
  v98 = v65[520];
  STACK[0x1EC0] = v98;
  v99 = STACK[0x1318];
  STACK[0x1F28] = STACK[0x1318];
  STACK[0x1F30] = STACK[0x1250];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * ((7 * (v81 > v99 + v98 - 0x5D952DACE41797ELL)) ^ ((int)v67 - 2007503019))) - 4))(v90, v91, v92, v93, v94, v95, v96, v97, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           v101,
           a59);
}

uint64_t sub_19325EB58()
{
  int v0;
  int v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  v5 = STACK[0xA3C];
  LODWORD(STACK[0x1718]) = STACK[0xA38];
  v2[612] = v2[105];
  LODWORD(STACK[0x171C]) = STACK[0xA2C];
  v2[598] = v2[51];
  v2[614] = v2[104];
  v2[616] = v2[103];
  v2[617] = v2[102];
  v6 = v2[100];
  v7 = v2[97];
  v2[618] = v2[94];
  v8 = v2[93];
  v9 = STACK[0xA0C];
  LODWORD(STACK[0x1734]) = STACK[0x9DC];
  LODWORD(STACK[0x1740]) = STACK[0x9CC];
  v10 = v2[91];
  v2[620] = v10;
  v11 = v2[89];
  v12 = v2[88];
  v2[622] = v12;
  v13 = v2[87];
  v2[625] = v13;
  v14 = v2[46];
  v15 = STACK[0x9B4];
  LODWORD(STACK[0x1744]) = STACK[0x9B4];
  v16 = v2[85];
  v2[626] = v16;
  v2[107] = v16;
  LODWORD(STACK[0xA4C]) = v15;
  v2[68] = v14;
  v2[109] = v13;
  v2[110] = v12;
  v2[111] = v11;
  v2[113] = v10;
  LODWORD(STACK[0xA5C]) = STACK[0x1740];
  LODWORD(STACK[0xA78]) = STACK[0x1734];
  LODWORD(STACK[0xA7C]) = v9;
  v2[115] = v8;
  v2[116] = v2[618];
  v2[119] = v7;
  v2[121] = v6;
  v2[123] = v2[617];
  v2[125] = v2[616];
  v2[126] = v2[614];
  v2[73] = v2[598];
  LODWORD(STACK[0xA8C]) = STACK[0x171C];
  v2[128] = v2[612];
  LODWORD(STACK[0xABC]) = STACK[0x1718];
  v17 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v5 == v1) * ((v0 + v3 + 179) ^ 0x608)) ^ (v0 + v3 + 179))) - 8);
  LODWORD(STACK[0xADC]) = v5;
  return v17();
}

void sub_19325EC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  _QWORD *v20;
  uint64_t v21;

  v20[413] = v20[626];
  LODWORD(STACK[0x11F4]) = STACK[0x1744];
  v20[415] = v20[625];
  v20[417] = v20[622];
  v20[418] = v20[620];
  LODWORD(STACK[0x1204]) = STACK[0x1740];
  LODWORD(STACK[0x123C]) = STACK[0x1734];
  v20[419] = v20[618];
  v20[421] = v21 + 8 * v19;
  v20[423] = v20[617];
  v20[424] = v20[616];
  v20[427] = v20[614];
  v20[398] = v20[598];
  LODWORD(STACK[0x125C]) = STACK[0x171C];
  v20[430] = v20[612];
  LODWORD(STACK[0x126C]) = STACK[0x1718];
  LODWORD(STACK[0x12C4]) = a19;
  JUMPOUT(0x19325DE94);
}

uint64_t sub_19325ED34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t (*v19)(void);

  v12 = STACK[0xADC];
  LODWORD(STACK[0x1754]) = STACK[0xABC];
  v9[628] = v9[128];
  LODWORD(STACK[0x17A0]) = STACK[0xA8C];
  v9[603] = v9[73];
  v9[630] = v9[126];
  v9[631] = v9[125];
  v9[632] = v9[123];
  v9[634] = v9[121];
  v9[636] = v9[119];
  v9[637] = v9[116];
  v9[638] = v9[115];
  LODWORD(STACK[0x17A4]) = STACK[0xA7C];
  LODWORD(STACK[0x17C4]) = STACK[0xA78];
  LODWORD(STACK[0x17D4]) = STACK[0xA5C];
  v9[639] = v9[113];
  v13 = v9[111];
  v9[641] = v13;
  v14 = v9[110];
  v9[643] = v14;
  v15 = v9[109];
  v9[646] = v15;
  v16 = v9[68];
  v9[624] = v16;
  v17 = STACK[0xA4C];
  LODWORD(STACK[0x17E4]) = STACK[0xA4C];
  v18 = v9[107];
  v9[647] = v18;
  v9[217] = v18;
  LODWORD(STACK[0xCEC]) = v17;
  v9[207] = v16;
  v9[219] = v15;
  v9[222] = v14;
  v9[223] = v13;
  LODWORD(STACK[0xCFC]) = STACK[0x17C4];
  LODWORD(STACK[0xD0C]) = STACK[0x17A4];
  v9[224] = v9[638];
  v9[226] = v9[637];
  v9[228] = v9[636];
  v9[229] = v9[634];
  v9[232] = v9[632];
  v9[234] = v9[631];
  v9[235] = v9[630];
  v9[220] = v9[603];
  LODWORD(STACK[0xD28]) = STACK[0x17A0];
  v9[238] = v9[628];
  LODWORD(STACK[0xD2C]) = STACK[0x1754];
  v19 = (uint64_t (*)(void))(*(_QWORD *)(v11
                                      + 8
                                      * ((v10 - 632276699) ^ (v8 - 405) ^ (313 * (v10 ^ (a8 + 95))) ^ (2517 * (((v12 - (v10 - 632276699)) | (v10 - 632276699 - v12)) >= 0))))
                          - 12);
  LODWORD(STACK[0xD3C]) = v12;
  return v19();
}

uint64_t sub_19325EEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t),int *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  uint64_t v72;

  v65 = STACK[0x208];
  *(_QWORD *)(v63 + 5184) = STACK[0x208];
  STACK[0x210] = 0;
  LODWORD(STACK[0x6FC]) = 0;
  a24(a22);
  v66 = *a26;
  v67 = *(_QWORD *)v65;
  v68 = *(_DWORD *)(v65 + 12);
  STACK[0x1688] = v65 + 12;
  v69 = STACK[0x1330];
  v70 = STACK[0x1340];
  v71 = 597255653
      * ((((v64 - 144) ^ 0x583C5CFF) - 833904006 - 2 * (((v64 - 144) ^ 0x583C5CFF) & 0xCE4BA27A)) ^ 0x9F7C811C);
  *(_DWORD *)(v64 - 128) = (v62 ^ 0x21E) + 378 - v71 + (v66 ^ 0xFF3DF7FA) + ((2 * v66) & 0xFE7BEFF4) + 635169935;
  *(_DWORD *)(v64 - 140) = v71 + v68 + 1581691396 - ((2 * v68) & 0xBC8D6408);
  STACK[0x1F98] = v69;
  *(_DWORD *)(v64 - 112) = v71 + v62 + 2301;
  STACK[0x1FA8] = v67;
  STACK[0x1FB8] = v70;
  a23(v64 - 144);
  LODWORD(v65) = *(_DWORD *)(v64 - 144);
  v72 = a25(a22);
  LODWORD(STACK[0xAE8]) = v65;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62
                                                      + 8
                                                      * (((4 * ((_DWORD)v65 != 663729217)) | (16
                                                                                            * ((_DWORD)v65 != 663729217))) ^ v62))
                                          - 12))(v72);
}

uint64_t sub_19325F010()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;
  uint64_t (*v3)(void);

  v2 = LODWORD(STACK[0xAE8]) == 395293758;
  STACK[0x900] = STACK[0x1670];
  LODWORD(STACK[0xCEC]) = STACK[0x17E4];
  STACK[0x8B0] = STACK[0x15B8];
  STACK[0x910] = STACK[0x1668];
  STACK[0x928] = STACK[0x1650];
  STACK[0x930] = STACK[0x1640];
  LODWORD(STACK[0xCFC]) = STACK[0x17C4];
  LODWORD(STACK[0xD0C]) = STACK[0x17A4];
  STACK[0x938] = STACK[0x1628];
  STACK[0x948] = STACK[0x1620];
  STACK[0x958] = STACK[0x1618];
  STACK[0x960] = STACK[0x1608];
  STACK[0x978] = STACK[0x15F8];
  STACK[0x988] = STACK[0x15F0];
  STACK[0x990] = STACK[0x15E8];
  STACK[0x918] = STACK[0x1510];
  LODWORD(STACK[0xD28]) = STACK[0x17A0];
  STACK[0x9A8] = STACK[0x15D8];
  LODWORD(STACK[0xD2C]) = STACK[0x1754];
  v3 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((4433 * v2) ^ v0))
                         - ((v0 - 254)
                          + ((v0 + 733649217) ^ 0xFFFFFFFFD44565BBLL)));
  LODWORD(STACK[0xD3C]) = 101330291;
  return v3();
}

uint64_t sub_19325F444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  _BOOL4 v14;

  LODWORD(STACK[0x183C]) = STACK[0xB3C];
  LODWORD(STACK[0x1848]) = STACK[0xB2C];
  v12[652] = v12[149];
  LODWORD(STACK[0x184C]) = STACK[0xB28];
  v12[629] = v12[95];
  v12[654] = v12[148];
  v12[656] = v12[147];
  v12[657] = v12[145];
  v12[658] = v12[143];
  v12[660] = v12[141];
  v12[662] = v12[139];
  *(_QWORD *)(v10 + 1) = v12[136];
  LODWORD(STACK[0x1864]) = STACK[0xB0C];
  LODWORD(STACK[0x1874]) = STACK[0xAFC];
  LODWORD(STACK[0x1894]) = STACK[0xAEC];
  *(_QWORD *)(v10 + 9) = v12[135];
  *(_QWORD *)(v10 + 17) = v12[134];
  *(_QWORD *)(v10 + 49) = v12[132];
  *(_QWORD *)(v10 + 65) = v12[131];
  v12[645] = v12[90];
  v14 = LODWORD(STACK[0x183C]) == v11;
  *(_QWORD *)(v10 + 81) = v12[130];
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((v14 * ((v8 - a8 + 321) ^ 0x1D7 ^ (v8 + 1993607425) & 0x5D715DE9)) ^ (v9 + v8 + 1588)))
                            - 12))();
}

uint64_t sub_19325F540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t *v65;
  _QWORD *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v94;

  v68 = v62 + 2007504340;
  v69 = *(_QWORD *)STACK[0x200];
  v70 = STACK[0x210];
  v71 = LODWORD(STACK[0x6FC])
      - 0x4D58EB37AD4779BLL
      - (((unint64_t)LODWORD(STACK[0x6FC]) << (v62 + 32)) & 0x10A5710CALL);
  v72 = *(_QWORD *)(v67 + 8 * v62);
  v66[193] = *(_QWORD *)(v63 + 81);
  LODWORD(STACK[0xC78]) = v64;
  v66[160] = v66[645];
  v66[195] = *(_QWORD *)(v63 + 65);
  v66[196] = *(_QWORD *)(v63 + 49);
  v66[198] = *(_QWORD *)(v63 + 17);
  v66[200] = *(_QWORD *)(v63 + 9);
  LODWORD(STACK[0xC7C]) = STACK[0x1894];
  LODWORD(STACK[0xC8C]) = STACK[0x1874];
  LODWORD(STACK[0xCBC]) = STACK[0x1864];
  v66[201] = *(_QWORD *)(v63 + 1);
  v66[202] = v66[662];
  v66[204] = v66[660];
  v66[165] = v72;
  v66[205] = v66[658];
  v66[206] = v66[657];
  v66[209] = v66[656];
  v66[211] = v66[654];
  v66[183] = v66[629];
  LODWORD(STACK[0xCDC]) = STACK[0x184C];
  v66[213] = v66[652];
  LODWORD(STACK[0xCE8]) = STACK[0x1848];
  v66[215] = v69;
  v66[187] = 0x5D952DACE41797ELL;
  v66[216] = v70;
  v66[203] = v71;
  v73 = v66[203];
  v74 = v66[216];
  v75 = v66[187];
  v76 = v66[215];
  LODWORD(STACK[0x1994]) = STACK[0xCE8];
  v77 = v66[213];
  LODWORD(STACK[0x19C0]) = STACK[0xCDC];
  *v65 = v66[183];
  v78 = v66[209];
  v65[5] = v66[211];
  v65[6] = v78;
  v65[7] = v66[206];
  v65[9] = v66[205];
  v79 = v66[165];
  v80 = v66[202];
  v65[11] = v66[204];
  v65[12] = v80;
  v65[14] = v66[201];
  LODWORD(STACK[0x19C4]) = STACK[0xCBC];
  LODWORD(STACK[0x19DC]) = STACK[0xC8C];
  LODWORD(STACK[0x19EC]) = STACK[0xC7C];
  v81 = v66[198];
  v94 = v66[200];
  v65[16] = v94;
  v65[17] = v81;
  v65[18] = v66[196];
  v65[20] = v66[195];
  v82 = v66[160];
  v65[3] = v77;
  v65[4] = v82;
  LODWORD(STACK[0x1A08]) = STACK[0xC78];
  v65[23] = v66[193];
  v66[515] = v79;
  v66[540] = v76;
  v66[520] = v75;
  LODWORD(a59) = STACK[0x19C4];
  v83 = v65[14];
  v85 = v65[11];
  v84 = v65[12];
  v86 = v65[9];
  v88 = v65[6];
  v87 = v65[7];
  v89 = v65[5];
  v90 = *v65;
  v66[542] = v74;
  v66[522] = v73;
  STACK[0x1E98] = v73;
  STACK[0x1F18] = v74;
  v91 = v66[520];
  STACK[0x1EC0] = v91;
  v92 = STACK[0x1318];
  STACK[0x1F28] = STACK[0x1318];
  STACK[0x1F30] = STACK[0x1250];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * ((7 * (v74 > v92 + v91 - 0x5D952DACE41797ELL)) ^ (v68 - 2007503019))) - 4))(v83, v84, v85, v86, v87, v88, v89, v90, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           v94,
           a59);
}

uint64_t sub_19325F664@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t (*v15)(void);

  v6 = *(_QWORD *)(v5 + 8 * a2);
  v7 = STACK[0x200] == 0;
  v4[498] = STACK[0x200];
  v8 = STACK[0x1848];
  LODWORD(STACK[0x1454]) = STACK[0x1848];
  v4[500] = v4[652];
  v9 = STACK[0x184C];
  LODWORD(STACK[0x1464]) = STACK[0x184C];
  v4[479] = v4[629];
  v4[501] = v4[654];
  v4[502] = v4[656];
  v4[504] = v4[658];
  v4[506] = v4[660];
  v4[507] = v4[662];
  v4[508] = *(_QWORD *)(v3 + 1);
  v10 = STACK[0x1864];
  LODWORD(STACK[0x1484]) = STACK[0x1864];
  v11 = STACK[0x1874];
  LODWORD(STACK[0x149C]) = STACK[0x1874];
  v12 = STACK[0x1894];
  LODWORD(STACK[0x14AC]) = STACK[0x1894];
  v4[511] = *(_QWORD *)(v3 + 17);
  v4[513] = *(_QWORD *)(v3 + 49);
  v4[514] = *(_QWORD *)(v3 + 65);
  v4[483] = v4[645];
  v13 = STACK[0x183C];
  LODWORD(STACK[0x14C0]) = STACK[0x183C];
  v4[517] = *(_QWORD *)(v3 + 81);
  v4[496] = v6;
  v4[519] = v6;
  LODWORD(STACK[0x14C4]) = v8;
  v4[521] = v4[652];
  LODWORD(STACK[0x14D4]) = v9;
  v4[509] = v4[629];
  v4[525] = v4[654];
  v4[526] = v4[656];
  v4[527] = v4[658];
  v4[528] = v4[660];
  v4[530] = v4[662];
  v4[533] = *(_QWORD *)(v3 + 1);
  LODWORD(STACK[0x14E4]) = v10;
  LODWORD(STACK[0x1504]) = v11;
  v14 = v7;
  LODWORD(STACK[0x1534]) = v12;
  v4[534] = *(_QWORD *)(v3 + 17);
  v4[536] = *(_QWORD *)(v3 + 49);
  v4[538] = *(_QWORD *)(v3 + 65);
  v4[510] = v4[645];
  LODWORD(STACK[0x1540]) = v13;
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v5
                                      + 8 * ((v14 * ((a2 + 1230) ^ 0x60D)) ^ (((a2 - v2 - 321) ^ (a1 - 1578)) + a2)))
                          - 12);
  v4[539] = *(_QWORD *)(v3 + 81);
  return v15();
}

void sub_19325F7E8()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  v0[151] = STACK[0x18B0];
  LODWORD(STACK[0xB6C]) = STACK[0x1A08];
  v1 = STACK[0x1810];
  v0[112] = STACK[0x1818];
  v0[153] = STACK[0x1898];
  v2 = STACK[0x1880];
  v0[154] = STACK[0x1888];
  v0[155] = v2;
  LODWORD(STACK[0xB8C]) = STACK[0x19EC];
  LODWORD(STACK[0xB98]) = STACK[0x19DC];
  LODWORD(STACK[0xB9C]) = STACK[0x19C4];
  v0[157] = STACK[0x1868];
  v3 = STACK[0x1850];
  v0[158] = STACK[0x1858];
  v0[159] = v3;
  v0[162] = STACK[0x1840];
  v4 = STACK[0x1820];
  v0[166] = STACK[0x1828];
  v5 = STACK[0x6FC];
  v0[167] = v4;
  v0[117] = STACK[0x17F8];
  LODWORD(STACK[0xBAC]) = STACK[0x19C0];
  v6 = STACK[0x200];
  *(_DWORD *)(v6 + 8) = v5;
  *(_DWORD *)(v6 + 12) = 0;
  v0[168] = v1;
  LODWORD(STACK[0xBBC]) = STACK[0x1994];
  v0[170] = v6;
  v7 = v0[170];
  v8 = STACK[0xBBC];
  v9 = v0[168];
  v10 = STACK[0xBAC];
  v11 = v0[117];
  v12 = v0[167];
  v13 = v0[166];
  v14 = v0[162];
  v15 = v0[159];
  v16 = v0[158];
  v17 = v0[157];
  v18 = STACK[0xB9C];
  v19 = STACK[0xB98];
  v20 = STACK[0xB8C];
  v21 = v0[155];
  v22 = v0[154];
  v23 = v0[153];
  v24 = v0[112];
  v25 = STACK[0xB6C];
  v26 = v0[151];
  LODWORD(STACK[0xBD8]) = STACK[0x6FC];
  v0[171] = v26;
  LODWORD(STACK[0xBDC]) = v25;
  v0[133] = v24;
  v0[173] = v23;
  v0[175] = v22;
  v0[176] = v21;
  LODWORD(STACK[0xBEC]) = v20;
  LODWORD(STACK[0xC1C]) = v19;
  LODWORD(STACK[0xC28]) = v18;
  v0[177] = v17;
  v0[179] = v16;
  v0[180] = v15;
  v0[181] = v14;
  v0[182] = v7;
  v0[184] = v13;
  v0[185] = v12;
  v0[137] = v11;
  LODWORD(STACK[0xC2C]) = v10;
  v0[186] = v9;
  LODWORD(STACK[0xC4C]) = v8;
  LODWORD(STACK[0xC5C]) = v25;
  JUMPOUT(0x19325F960);
}

uint64_t sub_19325FAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;
  unint64_t v54;
  BOOL v55;

  v54 = STACK[0x1780];
  v55 = STACK[0x1780] == 0;
  LOBYTE(STACK[0x16F7]) = v55;
  STACK[0x17E8] = v54 + 12;
  STACK[0x1800] = v54 + 8;
  LODWORD(a52) = STACK[0x1924];
  LODWORD(a47) = STACK[0x1900];
  LODWORD(a46) = STACK[0x18F4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t))(v53 + 8 * ((787 * ((v55 ^ (v52 - 12)) & 1)) ^ (v52 + 2310))))(a1, a2, 733649558, LODWORD(STACK[0x1958]), 101330305, 588062226, 3561317738, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           STACK[0x1788],
           STACK[0x1790],
           STACK[0x1798],
           STACK[0x17A8],
           a46,
           a47,
           STACK[0x17B0],
           STACK[0x17B8],
           STACK[0x17C8],
           STACK[0x1720],
           a52);
}

uint64_t sub_19325FC24(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unsigned int *v6;
  unsigned int *v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL4 v15;
  BOOL v16;
  int v17;
  int v18;
  int v19;

  v12 = (v10 + v8) & v9;
  v13 = (*v6 ^ 0x7FBEF77FFE7FDBFELL)
      + ((2 * *v6) & 0x1FCFFB7FCLL)
      - 0x7FBEF77FDB72C6EFLL
      + ((v12 + 2147217007) & 0xABBE9EF6)
      - a3
      + 2215;
  v14 = (*v7 ^ 0x3ECBEAEFFEDC7A3BLL) - 0x3ECBEAEFDBCF5C29 + ((2 * *v7) & 0x1FDB8F476);
  v15 = v13 < a6;
  v16 = v13 > v14;
  v17 = (v14 < a6) ^ v15;
  v18 = v16;
  if (v17)
    v19 = v15;
  else
    v19 = v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((59 * v19) ^ v12)) - 12))();
}

uint64_t sub_19325FD10@<X0>(char a1@<W6>, char a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,_QWORD *a54)
{
  int v54;
  _DWORD *v55;
  int v56;
  uint64_t (*v57)(void);
  _DWORD *v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;

  v59 = ((2 * v54) & 0x3D2F6DEA) + (v54 ^ 0x9E97B6F5) + v56;
  v60 = *(unsigned __int8 *)(*a54 + v59);
  v61 = ((v60 << 24) - (v60 << (a1 + ((a2 - 99) | 0x52) - 71)) - 0x1000000) | (*(unsigned __int8 *)(*a54 + v59 + 1) << 16);
  v62 = *(unsigned __int8 *)(*a54 + v59 + 2);
  v63 = *(unsigned __int8 *)(*a54 + v59 + 3);
  v64 = v61 | (((v62 + 4420934 - ((2 * v62) & 0x4C)) << 8) - 0x2000) ^ 0x43752600;
  v65 = (v64 ^ 0x5A6FFF) & ((v63 - 1636428685 - ((2 * v63) & 0xE6)) ^ 0x82C7F04) ^ v64 & 0x69A59400;
  v66 = (v65 & 0x324D5387 ^ 0x12494387) + (v65 ^ 0x28A41408) - ((v65 ^ 0x28A41408) & 0x324D5387);
  *v58 = (((v66 ^ 0x1FBDF440) - 789305555) ^ ((v66 ^ 0x7B8AD7DE) - 1262287693) ^ ((v66 ^ 0x81840F66) + 1322114059))
       - 619719546;
  *v55 += 4;
  return v57();
}

uint64_t sub_19325FEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(void))(*(_QWORD *)(v63
                                        + 8
                                        * (((LODWORD(STACK[0x754]) == v62) * (a62 ^ 0x2BBA9A00)) ^ (a7 + a62 + 1046)))
                            - 4))();
}

void sub_19325FEF0()
{
  int v0;

  LODWORD(STACK[0x744]) = v0;
  JUMPOUT(0x19325FBF4);
}

uint64_t sub_19325FF04(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  uint64_t v62;

  return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * (((a62 ^ (a3 - 805) ^ 0x155) * a8) ^ (a7 + a62 - 81))) - 4))();
}

uint64_t sub_19325FF34@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  _BYTE *v37;
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38
                                                                                                + 8
                                                                                                * ((((*v37 & 1) == 0)
                                                                                                  * (((a2 - 3075) | 0xC00) + 4196)) ^ a2))
                                                                                    - 8))(a36, LODWORD(STACK[0x18A4]), (a2 - 3075) | 0xC00u, LODWORD(STACK[0x744]), a1, a37);
}

uint64_t sub_19325FFC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _BOOL4 v65;
  _BOOL4 v66;
  _BOOL4 v67;

  v63 = (a4 | ((unint64_t)(a4 < 0x60AD41B) << 32))
      + ((a3 - 3445) ^ 0x26882448E9ECB5)
      + (**(unsigned int **)(v62 + 241) ^ 0xFFD977DC677ABF7FLL)
      + ((2 * **(_DWORD **)(v62 + 241)) & 0xCEF57EFE);
  v64 = (*(unsigned int *)STACK[0x1800] ^ 0x4FFF93EEBFD6F7AFLL)
      - 0x4FFF93EE0967775BLL
      + ((2 * *(unsigned int *)STACK[0x1800]) & 0x17FADEF5ELL);
  v65 = v63 < 0xB66F8054;
  v66 = v63 > v64;
  if (v65 != v64 < 0xB66F8054)
    v67 = v65;
  else
    v67 = v66;
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(a62 + 8 * (v67 | (2 * v67) | a3)) - 8))(*(_QWORD *)(v62 + 145), LODWORD(STACK[0x18A4]));
}

void sub_19326014C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;

  **(_DWORD **)(v4 + 241) = a4 - 101372955 + v5;
  JUMPOUT(0x19325FBBCLL);
}

uint64_t sub_1932601A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57,uint64_t a58,int a59,uint64_t a60,int a61,int a62)
{
  int v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t (*v70)(void);

  v68[156] = a56;
  v68[189] = a57;
  v68[191] = a55;
  STACK[0x1808] = a57;
  v68[444] = v65;
  v68[475] = v67;
  STACK[0x1E48] = v67;
  STACK[0x1E50] = v65;
  LOBYTE(STACK[0xFB3]) = a8;
  LODWORD(STACK[0x13D4]) = a5;
  LODWORD(STACK[0x1E84]) = v63;
  LODWORD(STACK[0x1E94]) = a5;
  LOBYTE(STACK[0x1DA7]) = a8;
  LODWORD(STACK[0x1958]) = a4;
  LODWORD(STACK[0x1960]) = a59;
  *(_QWORD *)(v64 + 97) = a58;
  LODWORD(STACK[0x1934]) = v62;
  v68[217] = *(_QWORD *)(v64 + 225);
  LODWORD(STACK[0xCEC]) = STACK[0x1924];
  v68[207] = *(_QWORD *)(v64 + 41);
  v68[219] = *(_QWORD *)(v64 + 209);
  v68[222] = *(_QWORD *)(v64 + 193);
  v68[223] = *(_QWORD *)(v64 + 185);
  LODWORD(STACK[0xCFC]) = STACK[0x1900];
  LODWORD(STACK[0xD0C]) = STACK[0x18F4];
  v68[224] = *(_QWORD *)(v64 + 177);
  v68[226] = *(_QWORD *)(v64 + 161);
  v68[228] = *(_QWORD *)(v64 + 153);
  v68[229] = *(_QWORD *)(v64 + 145);
  v68[232] = *(_QWORD *)(v64 + 137);
  v68[234] = *(_QWORD *)(v64 + 121);
  v68[235] = *(_QWORD *)(v64 + 113);
  v68[220] = v68[649];
  LODWORD(STACK[0xD28]) = STACK[0x18C4];
  v68[238] = *(_QWORD *)(v64 + 105);
  LODWORD(STACK[0xD2C]) = STACK[0x18A4];
  v70 = (uint64_t (*)(void))(*(_QWORD *)(v69
                                      + 8
                                      * ((5470 * (a5 == (((a62 - 733649362) | 0x412) ^ (v66 - 750)))) ^ (a62 - 733648320)))
                          - 12);
  LODWORD(STACK[0xD3C]) = STACK[0x1E94];
  return v70();
}

uint64_t sub_193260308()
{
  int v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  _BOOL4 v4;
  uint64_t (*v5)(void);

  LODWORD(STACK[0x1964]) = STACK[0x744];
  v2[217] = STACK[0x17D8];
  LODWORD(STACK[0xCEC]) = STACK[0x1924];
  v2[207] = STACK[0x1720];
  v2[219] = STACK[0x17C8];
  v2[222] = STACK[0x17B8];
  v2[223] = STACK[0x17B0];
  LODWORD(STACK[0xCFC]) = STACK[0x1900];
  LODWORD(STACK[0xD0C]) = STACK[0x18F4];
  v2[224] = STACK[0x17A8];
  v2[226] = STACK[0x1798];
  v2[228] = STACK[0x1790];
  v2[229] = STACK[0x1788];
  v2[234] = STACK[0x1770];
  v2[235] = STACK[0x1768];
  v2[220] = v2[649];
  LODWORD(STACK[0xD28]) = STACK[0x18C4];
  v2[238] = STACK[0x1760];
  LODWORD(STACK[0xD2C]) = STACK[0x18A4];
  v4 = (STACK[0x16F7] & 1) == 0;
  v2[232] = 0;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3028 * v4) ^ v0)) - ((v1 + v0 + 2072464879) & 0x58BE176C ^ 0x524));
  LODWORD(STACK[0xD3C]) = 101330305;
  return v5();
}

uint64_t sub_193260404@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v6 = *(unsigned int *)STACK[0x17E8];
  LODWORD(STACK[0x1974]) = v6;
  STACK[0x1778] = v6;
  v7 = **(unsigned int **)(v1 + 8);
  v8 = (v6 ^ 0xED787FBEF5FE3FF7)
     + LODWORD(STACK[0x1964])
     + ((2 * v6) & 0x1EBFC7FEELL)
     + ((unint64_t)(LODWORD(STACK[0x1964]) < v3) << 32)
     + 0x12878042005BE615;
  v4[217] = STACK[0x17D8];
  v9 = (((a1 ^ 0x4B6) - v2 - 318) ^ v7 ^ 0xFB567FFDD45D240BLL)
     + ((2 * v7) & 0x1FFCF7DFALL)
     + 0x4A98002FC7D3B2ALL;
  v10 = v8 < 0xFC64FA27;
  LODWORD(STACK[0xCEC]) = STACK[0x1924];
  v4[207] = STACK[0x1720];
  v11 = v8 > v9;
  if (v10 != v9 < 0xFC64FA27)
    v11 = v10;
  v4[219] = STACK[0x17C8];
  v4[222] = STACK[0x17B8];
  v4[223] = STACK[0x17B0];
  LODWORD(STACK[0xCFC]) = STACK[0x1900];
  LODWORD(STACK[0xD0C]) = STACK[0x18F4];
  v4[224] = STACK[0x17A8];
  v4[226] = STACK[0x1798];
  v4[228] = STACK[0x1790];
  v4[229] = STACK[0x1788];
  v4[232] = STACK[0x1780];
  v4[234] = STACK[0x1770];
  v4[235] = STACK[0x1768];
  v4[220] = v4[649];
  LODWORD(STACK[0xD28]) = STACK[0x18C4];
  v4[238] = STACK[0x1760];
  LODWORD(STACK[0xD2C]) = STACK[0x18A4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((30 * v11) ^ a1)) - 12))();
}

uint64_t sub_1932605A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v89;

  v65 = v62 + 2007504407;
  v66 = *(_QWORD *)STACK[0x1780] + STACK[0x1778];
  *(_DWORD *)STACK[0x17E8] = LODWORD(STACK[0x1964]) + LODWORD(STACK[0x1974]) + ((v62 + 2007504407) ^ 0x8E5D3C50);
  v67 = *(_QWORD *)(v64 + 8 * v62);
  v63[193] = STACK[0x17D8];
  LODWORD(STACK[0xC78]) = STACK[0x1924];
  v63[160] = STACK[0x1720];
  v63[195] = STACK[0x17C8];
  v63[196] = STACK[0x17B8];
  v63[198] = STACK[0x17B0];
  v63[200] = v66;
  LODWORD(STACK[0xC7C]) = STACK[0x1904];
  LODWORD(STACK[0xC8C]) = STACK[0x1900];
  LODWORD(STACK[0xCBC]) = STACK[0x18F4];
  v63[201] = STACK[0x17A8];
  v63[202] = STACK[0x1798];
  v63[204] = STACK[0x1790];
  v63[165] = v67;
  v63[205] = STACK[0x1788];
  v63[206] = STACK[0x1780];
  v63[209] = STACK[0x1770];
  v63[211] = STACK[0x1768];
  v63[183] = v63[649];
  LODWORD(STACK[0xCDC]) = STACK[0x18C4];
  v63[213] = STACK[0x1760];
  LODWORD(STACK[0xCE8]) = STACK[0x18A4];
  v63[215] = a32;
  v63[187] = 0x5D952DACE41797ELL;
  v63[216] = STACK[0x1808];
  v63[203] = 0xFB2A714C852B8875;
  v68 = v63[203];
  v69 = v63[216];
  v70 = v63[187];
  v71 = v63[215];
  LODWORD(STACK[0x1994]) = STACK[0xCE8];
  v72 = v63[213];
  LODWORD(STACK[0x19C0]) = STACK[0xCDC];
  STACK[0x17F8] = v63[183];
  v73 = v63[209];
  STACK[0x1820] = v63[211];
  STACK[0x1828] = v73;
  STACK[0x1830] = v63[206];
  STACK[0x1840] = v63[205];
  v74 = v63[165];
  v75 = v63[202];
  STACK[0x1850] = v63[204];
  STACK[0x1858] = v75;
  STACK[0x1868] = v63[201];
  LODWORD(STACK[0x19C4]) = STACK[0xCBC];
  LODWORD(STACK[0x19DC]) = STACK[0xC8C];
  LODWORD(STACK[0x19EC]) = STACK[0xC7C];
  v76 = v63[198];
  v89 = v63[200];
  STACK[0x1878] = v89;
  STACK[0x1880] = v76;
  STACK[0x1888] = v63[196];
  STACK[0x1898] = v63[195];
  v77 = v63[160];
  STACK[0x1810] = v72;
  STACK[0x1818] = v77;
  LODWORD(STACK[0x1A08]) = STACK[0xC78];
  STACK[0x18B0] = v63[193];
  v63[515] = v74;
  v63[540] = v71;
  v63[520] = v70;
  LODWORD(a59) = STACK[0x19C4];
  v78 = STACK[0x1868];
  v80 = STACK[0x1850];
  v79 = STACK[0x1858];
  v81 = STACK[0x1840];
  v83 = STACK[0x1828];
  v82 = STACK[0x1830];
  v84 = STACK[0x1820];
  v85 = STACK[0x17F8];
  v63[542] = v69;
  v63[522] = v68;
  STACK[0x1E98] = v68;
  STACK[0x1F18] = v69;
  v86 = v63[520];
  STACK[0x1EC0] = v86;
  v87 = STACK[0x1318];
  STACK[0x1F28] = STACK[0x1318];
  STACK[0x1F30] = STACK[0x1250];
  return ((uint64_t (*)(unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * ((7 * (v69 > v87 + v86 - 0x5D952DACE41797ELL)) ^ (v65 - 2007503019))) - 4))(v78, v79, v80, v81, v82, v83, v84, v85, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           v89,
           a59);
}

uint64_t sub_1932606E0@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,unint64_t a53,uint64_t a54,int a55)
{
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  unint64_t *v64;
  int v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  unint64_t v74;
  BOOL v75;
  unint64_t v76;
  int v77;
  unint64_t v78;
  uint64_t (*v79)(void);

  v63 = v56 ^ a4;
  v61[156] = a52;
  v61[189] = a53;
  v61[191] = a51;
  STACK[0x1808] = a53;
  v61[444] = v59;
  v61[475] = v60;
  STACK[0x1E48] = v60;
  STACK[0x1E50] = v59;
  LOBYTE(STACK[0xFB3]) = a3;
  LODWORD(STACK[0x13D4]) = a2;
  LODWORD(STACK[0x1E84]) = v57;
  LODWORD(STACK[0x1E94]) = a2;
  LOBYTE(STACK[0x1DA7]) = a3;
  LODWORD(STACK[0x1958]) = a1;
  LODWORD(STACK[0x1960]) = a55;
  *(_QWORD *)(v58 + 97) = a54;
  LODWORD(STACK[0x1934]) = v55;
  v64 = &STACK[0x1E94];
  if (a3)
    v64 = &STACK[0x1934];
  v65 = *(_DWORD *)v64;
  v61[217] = *(_QWORD *)(v58 + 225);
  LODWORD(STACK[0xCEC]) = STACK[0x1924];
  v61[207] = *(_QWORD *)(v58 + 41);
  v61[219] = *(_QWORD *)(v58 + 209);
  v61[222] = *(_QWORD *)(v58 + 193);
  v61[223] = *(_QWORD *)(v58 + 185);
  LODWORD(STACK[0xCFC]) = STACK[0x1900];
  LODWORD(STACK[0xD0C]) = STACK[0x18F4];
  v61[224] = *(_QWORD *)(v58 + 177);
  v61[226] = *(_QWORD *)(v58 + 161);
  v61[228] = *(_QWORD *)(v58 + 153);
  v61[229] = *(_QWORD *)(v58 + 145);
  v61[232] = *(_QWORD *)(v58 + 137);
  v61[234] = *(_QWORD *)(v58 + 121);
  v61[235] = *(_QWORD *)(v58 + 113);
  v61[220] = v61[649];
  LODWORD(STACK[0xD28]) = STACK[0x18C4];
  v61[238] = *(_QWORD *)(v58 + 105);
  LODWORD(STACK[0xD2C]) = STACK[0x18A4];
  LODWORD(STACK[0xD3C]) = v65;
  LODWORD(STACK[0x1A0C]) = STACK[0xD3C];
  LODWORD(STACK[0x1A1C]) = STACK[0xD2C];
  STACK[0x18B8] = v61[238];
  LODWORD(STACK[0x1A3C]) = STACK[0xD28];
  STACK[0x18A8] = v61[220];
  v66 = v61[235];
  v67 = v61[232];
  STACK[0x18D8] = v61[234];
  STACK[0x18E0] = v67;
  STACK[0x18E8] = v61[229];
  STACK[0x18F8] = v61[228];
  v68 = v61[224];
  STACK[0x1908] = v61[226];
  STACK[0x1910] = v68;
  LODWORD(STACK[0x1A6C]) = STACK[0xD0C];
  LODWORD(STACK[0x1A78]) = STACK[0xCFC];
  v69 = v61[223];
  STACK[0x1918] = v69;
  v70 = v61[222];
  STACK[0x1928] = v70;
  v71 = v61[219];
  v72 = v61[207];
  STACK[0x18C8] = v66;
  STACK[0x18D0] = v72;
  v73 = STACK[0xCEC];
  LODWORD(STACK[0x1A7C]) = STACK[0xCEC];
  v74 = STACK[0x18D8];
  v75 = STACK[0x18E0] == 0;
  v76 = v61[217];
  STACK[0x1938] = v71;
  STACK[0x1940] = v76;
  v61[240] = v76;
  v77 = !v75;
  LODWORD(STACK[0xD6C]) = v73;
  v61[225] = v72;
  v61[241] = v71;
  v61[245] = v70;
  v61[246] = v69;
  LODWORD(STACK[0xD8C]) = STACK[0x1A0C];
  LODWORD(STACK[0xD98]) = STACK[0x1A78];
  LODWORD(STACK[0xD9C]) = STACK[0x1A6C];
  v78 = STACK[0x1908];
  v61[247] = STACK[0x1910];
  v61[249] = v78;
  v61[251] = STACK[0x18F8];
  v61[252] = STACK[0x18E8];
  v61[255] = v74;
  v61[257] = STACK[0x18C8];
  v61[230] = STACK[0x18A8];
  LODWORD(STACK[0xDAC]) = STACK[0x1A3C];
  v61[259] = STACK[0x18B8];
  v79 = (uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * ((47 * v77) ^ (v63 - 733647901))) - 2 * (v63 ^ 0x2BBA9A3Cu) + 392);
  LODWORD(STACK[0xDBC]) = STACK[0x1A1C];
  return v79();
}

uint64_t sub_19326095C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v4 = v1[40];
  v2[477] = v1[41];
  LODWORD(STACK[0x13E4]) = STACK[0x1A7C];
  v5 = v1[26];
  v2[448] = v1[27];
  v6 = *(_QWORD *)(v3 + 8 * a1);
  v2[480] = v4;
  v2[481] = v1[38];
  v2[458] = v6;
  v2[482] = v1[36];
  LODWORD(STACK[0x1404]) = STACK[0x1A0C];
  LODWORD(STACK[0x141C]) = STACK[0x1A78];
  LODWORD(STACK[0x142C]) = STACK[0x1A6C];
  v7 = v1[34];
  v2[484] = v1[35];
  v2[485] = v7;
  v2[486] = v1[32];
  v8 = v1[29];
  v2[488] = v1[30];
  v2[490] = v1[28];
  v2[491] = v5;
  v2[462] = v1[22];
  LODWORD(STACK[0x1440]) = STACK[0x1A3C];
  v2[493] = v1[24];
  LODWORD(STACK[0x1444]) = STACK[0x1A1C];
  v2[495] = v8;
  v9 = STACK[0x1444];
  v10 = v2[493];
  v11 = STACK[0x1440];
  v12 = v2[462];
  v13 = v2[491];
  v14 = v2[490];
  v15 = v2[488];
  v16 = v2[486];
  v17 = v2[485];
  v18 = v2[484];
  v19 = STACK[0x142C];
  v20 = STACK[0x141C];
  v21 = STACK[0x1404];
  v22 = v2[482];
  v23 = v2[481];
  v24 = v2[480];
  v25 = v2[448];
  v26 = STACK[0x13E4];
  v27 = v2[477];
  v2[496] = v2[458];
  v2[498] = v8;
  LODWORD(STACK[0x1454]) = v9;
  v2[500] = v10;
  LODWORD(STACK[0x1464]) = v11;
  v2[479] = v12;
  v2[501] = v13;
  v2[502] = v14;
  v2[504] = v15;
  v2[506] = v16;
  v2[507] = v17;
  v2[508] = v18;
  LODWORD(STACK[0x1484]) = v19;
  LODWORD(STACK[0x149C]) = v20;
  LODWORD(STACK[0x14AC]) = v21;
  v2[511] = v22;
  v2[513] = v23;
  v2[514] = v24;
  v2[483] = v25;
  LODWORD(STACK[0x14C0]) = v26;
  v2[517] = v27;
  return sub_193262168();
}

void sub_1932609F8(unint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, unint64_t a5@<X5>, char a6@<W7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unint64_t a35,unint64_t a36,unint64_t a37,unint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unint64_t a54,unint64_t a55,unint64_t a56,uint64_t a57,int a58)
{
  int v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;

  STACK[0x718] = a55;
  STACK[0x820] = a56;
  STACK[0x830] = a54;
  STACK[0x1808] = a56;
  STACK[0x1018] = v68;
  STACK[0x1110] = v70;
  STACK[0x1E48] = v70;
  STACK[0x1E50] = v68;
  LOBYTE(STACK[0xFB3]) = a6;
  LODWORD(STACK[0x13D4]) = a4;
  LODWORD(STACK[0x1E84]) = v61;
  LODWORD(STACK[0x1E94]) = a4;
  LOBYTE(STACK[0x1DA7]) = a6;
  LODWORD(STACK[0x1958]) = a3;
  STACK[0x900] = v62;
  LODWORD(STACK[0xCEC]) = v73;
  STACK[0x8B0] = v72;
  STACK[0x910] = v71;
  STACK[0x928] = v65;
  STACK[0x930] = v69;
  LODWORD(STACK[0xCFC]) = v67;
  LODWORD(STACK[0xD0C]) = a7;
  STACK[0x938] = v60;
  STACK[0x948] = v63;
  STACK[0x958] = a5;
  STACK[0x960] = a1;
  STACK[0x978] = a38;
  STACK[0x988] = a37;
  STACK[0x990] = a36;
  STACK[0x918] = a35;
  LODWORD(STACK[0xD28]) = a34;
  STACK[0x9A8] = v59;
  LODWORD(STACK[0xD2C]) = a2;
  LODWORD(STACK[0xD3C]) = 101330305;
  LODWORD(STACK[0x1960]) = a58;
  *(_QWORD *)(v64 + 97) = v66;
  LODWORD(STACK[0x1934]) = v58;
  JUMPOUT(0x1932607F8);
}

uint64_t sub_193260C9C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v3 - 228) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v0 - 1427) * (v1 == v2)) ^ v0))
                            - ((v0 + 837057113) & 0xCE1B8C1D)
                            + 3076))();
}

uint64_t sub_193260CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;

  v64 = STACK[0x1EC0] - 0x5D946D73CE96B68;
  STACK[0x1F40] = v64;
  v65 = *(unsigned int *)(v63 - 228);
  STACK[0x1F48] = v65;
  STACK[0x1290] = 0;
  *(_BYTE *)(STACK[0x1F28] + v64 - 0xC0391580E16) = *(_BYTE *)STACK[0x1F18];
  return ((uint64_t (*)(void))(*(_QWORD *)(a62 + 8 * ((v65 == 1) | (32 * (v65 == 1)) | v62)) - 12))();
}

void sub_193260DB4()
{
  JUMPOUT(0x193260D44);
}

uint64_t sub_193260DBC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v3 - 204) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((v1 + 2766) ^ 0x1A09) * (v0 != v2)) ^ v1)) - 8))();
}

uint64_t sub_193260DF0()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = STACK[0x1EC0] - 0x7C539198C63B88BBLL;
  STACK[0x1F58] = v5;
  v6 = *(unsigned int *)(v3 - 204);
  *(_QWORD *)(v2 + 4192) = v6--;
  v7 = ((2 * v6) & 0x1EFF41E7ALL) + ((v0 + 733645457) ^ v6 ^ v1);
  *(_BYTE *)(STACK[0x1F28] + v7 + v5) = *(_BYTE *)(STACK[0x1F18] + v7 - 0x767A3EBDF7FA0F3DLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((333 * (v6 == 0)) ^ v0)) - 12))();
}

uint64_t sub_193260EA0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,int a61)
{
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  int v65;
  unint64_t v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  unint64_t v71;

  STACK[0x1290] = v71;
  STACK[0x900] = v66;
  LODWORD(STACK[0xCEC]) = v65;
  STACK[0x8B0] = v64;
  STACK[0x910] = v63;
  STACK[0x928] = v62;
  STACK[0x930] = v61;
  LODWORD(STACK[0xCFC]) = a61;
  LODWORD(STACK[0xD0C]) = a59;
  STACK[0x938] = a1;
  STACK[0x948] = a2;
  STACK[0x958] = a3;
  STACK[0x960] = a4;
  STACK[0x978] = a5;
  STACK[0x988] = a6;
  STACK[0x990] = a7;
  STACK[0x918] = a8;
  LODWORD(STACK[0xD28]) = v67;
  STACK[0x9A8] = v69;
  LODWORD(STACK[0xD2C]) = v70;
  LODWORD(STACK[0xD3C]) = 101372955;
  return (*(uint64_t (**)(void))(v68 + 1848))();
}

void sub_193260F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  _QWORD *v29;
  unsigned int v30;
  uint64_t v31;

  v29[515] = (v30 ^ 0xFFFFFFFFD445650ALL) + *(_QWORD *)(v31 + 8 * (int)(v28 + v30 + 341));
  v29[540] = a28;
  v29[520] = 0x5D952DACE41797ELL;
  JUMPOUT(0x193260BF8);
}

uint64_t sub_193260FA4()
{
  _QWORD *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v1 = STACK[0x19C4];
  *(_DWORD *)STACK[0x1868] += LODWORD(STACK[0x19C4]) - 258740982;
  v0[454] = STACK[0x18B0];
  LODWORD(STACK[0x134C]) = STACK[0x1A08];
  v2 = STACK[0x1810];
  v0[425] = STACK[0x1818];
  v0[456] = STACK[0x1898];
  v0[459] = STACK[0x1888];
  v3 = STACK[0x1878];
  v0[460] = STACK[0x1880];
  v0[461] = v3;
  LODWORD(STACK[0x135C]) = STACK[0x19EC];
  LODWORD(STACK[0x137C]) = STACK[0x19DC];
  LODWORD(STACK[0x13A8]) = v1;
  v0[463] = STACK[0x1868];
  v4 = STACK[0x1850];
  v0[464] = STACK[0x1858];
  v0[465] = v4;
  v0[467] = STACK[0x1840];
  v0[469] = STACK[0x1830];
  v5 = STACK[0x1820];
  v0[470] = STACK[0x1828];
  v0[472] = v5;
  v0[429] = STACK[0x17F8];
  LODWORD(STACK[0x13AC]) = STACK[0x19C0];
  v0[474] = v2;
  v6 = STACK[0x1994];
  LODWORD(STACK[0x13C4]) = STACK[0x1994];
  LODWORD(STACK[0x13D0]) = v6;
  v7 = STACK[0x13D0];
  LODWORD(v2) = STACK[0x13C4];
  v8 = v0[474];
  v9 = STACK[0x13AC];
  v10 = v0[429];
  v11 = v0[472];
  v12 = v0[470];
  v13 = v0[469];
  v14 = (uint64_t (*)(void))v0[467];
  v15 = v0[465];
  v16 = v0[464];
  v17 = v0[463];
  v18 = STACK[0x13A8];
  v19 = STACK[0x137C];
  v20 = STACK[0x135C];
  v21 = v0[461];
  v22 = v0[460];
  v23 = v0[459];
  v24 = v0[456];
  v25 = v0[425];
  v26 = STACK[0x134C];
  v27 = v0[454];
  v0[63] = v27;
  LODWORD(STACK[0x90C]) = v26;
  v0[24] = v25;
  v0[65] = v24;
  v0[66] = v23;
  v0[67] = v22;
  v0[69] = v21;
  LODWORD(STACK[0x924]) = v20;
  LODWORD(STACK[0x954]) = v19;
  LODWORD(STACK[0x974]) = v18;
  v0[71] = v17;
  v0[72] = v16;
  v0[75] = v15;
  v0[77] = v14;
  v0[79] = v13;
  v0[81] = v12;
  v0[82] = v11;
  v0[29] = v10;
  LODWORD(STACK[0x984]) = v9;
  v0[83] = v8;
  LODWORD(STACK[0x9A0]) = v2;
  LODWORD(STACK[0x9A4]) = v7;
  v0[85] = v27;
  LODWORD(STACK[0x9B4]) = v26;
  v0[46] = v25;
  v0[87] = v24;
  v0[88] = v23;
  v0[89] = v22;
  v0[91] = v21;
  LODWORD(STACK[0x9CC]) = v20;
  LODWORD(STACK[0x9DC]) = v19;
  LODWORD(STACK[0xA0C]) = v18;
  v0[93] = v17;
  v0[94] = v16;
  v0[97] = v15;
  v0[100] = v14;
  v0[102] = v13;
  v0[103] = v12;
  v0[104] = v11;
  v0[51] = v10;
  LODWORD(STACK[0xA2C]) = v9;
  v0[105] = v8;
  LODWORD(STACK[0xA38]) = v2;
  LODWORD(STACK[0xA3C]) = v7;
  v0[107] = v27;
  LODWORD(STACK[0xA4C]) = v26;
  v0[68] = v25;
  v0[109] = v24;
  v0[110] = v23;
  v0[111] = v22;
  v0[113] = v21;
  LODWORD(STACK[0xA5C]) = v20;
  LODWORD(STACK[0xA78]) = v19;
  LODWORD(STACK[0xA7C]) = v18;
  v0[115] = v17;
  v0[116] = v16;
  v0[119] = v15;
  v0[121] = v14;
  v0[123] = v13;
  v0[125] = v12;
  v0[126] = v11;
  v0[73] = v10;
  LODWORD(STACK[0xA8C]) = v9;
  v0[128] = v8;
  LODWORD(STACK[0xABC]) = v2;
  LODWORD(STACK[0xADC]) = v7;
  return v14();
}

void sub_193261074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void (*a34)(_QWORD))
{
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;

  v35 = (_QWORD *)STACK[0x1828];
  a34(*(_QWORD *)STACK[0x1828]);
  *v35 = STACK[0x1810];
  *(_DWORD *)STACK[0x1820] = STACK[0x17F8];
  v34[369] = STACK[0x18B0];
  LODWORD(STACK[0x10D8]) = STACK[0x1A08];
  v36 = STACK[0x1810];
  v34[356] = STACK[0x1818];
  v34[370] = STACK[0x1898];
  v34[372] = STACK[0x1888];
  v37 = STACK[0x1878];
  v34[374] = STACK[0x1880];
  v34[375] = v37;
  LODWORD(STACK[0x10DC]) = STACK[0x19EC];
  LODWORD(STACK[0x10F4]) = STACK[0x19DC];
  LODWORD(STACK[0x1104]) = STACK[0x19C4];
  v34[377] = STACK[0x1868];
  v38 = STACK[0x1850];
  v34[378] = STACK[0x1858];
  v34[381] = v38;
  v34[383] = STACK[0x1840];
  v34[385] = STACK[0x1830];
  v39 = STACK[0x1820];
  v34[387] = STACK[0x1828];
  v34[389] = v39;
  v34[361] = STACK[0x17F8];
  v40 = STACK[0x19C0];
  LODWORD(STACK[0x111C]) = STACK[0x19C0];
  v34[390] = v36;
  LODWORD(STACK[0x112C]) = STACK[0x1994];
  LODWORD(STACK[0x1174]) = v40;
  v41 = STACK[0x1174];
  LODWORD(v36) = STACK[0x112C];
  v42 = v34[390];
  v43 = STACK[0x111C];
  v44 = v34[361];
  v45 = v34[389];
  v46 = v34[387];
  v47 = v34[385];
  v48 = v34[383];
  v49 = v34[381];
  v50 = v34[378];
  v51 = v34[377];
  v52 = STACK[0x1104];
  v53 = STACK[0x10F4];
  v54 = STACK[0x10DC];
  v55 = v34[375];
  v56 = v34[374];
  v57 = v34[372];
  v58 = v34[370];
  v59 = v34[356];
  v60 = STACK[0x10D8];
  v34[391] = v34[369];
  LODWORD(STACK[0x1180]) = v60;
  v34[367] = v59;
  v34[393] = v58;
  v34[395] = v57;
  v34[396] = v56;
  v34[397] = v55;
  LODWORD(STACK[0x1184]) = v54;
  LODWORD(STACK[0x119C]) = v53;
  LODWORD(STACK[0x11AC]) = v52;
  v34[399] = v51;
  v34[401] = v50;
  v34[402] = v49;
  v34[405] = v48;
  v34[407] = v47;
  v34[409] = v46;
  v34[411] = v45;
  v34[379] = v44;
  LODWORD(STACK[0x11C4]) = v43;
  v34[412] = v42;
  LODWORD(STACK[0x11D4]) = v36;
  LODWORD(STACK[0x11F0]) = v41;
  JUMPOUT(0x1932611F8);
}

uint64_t sub_193261368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  v14 = STACK[0xF98];
  LODWORD(STACK[0x1C98]) = STACK[0xF8C];
  v11[113] = v12[325];
  LODWORD(STACK[0x1C9C]) = STACK[0xF6C];
  v11[110] = v12[297];
  v11[115] = v12[323];
  v11[118] = v12[321];
  v11[119] = v12[319];
  v11[121] = v12[317];
  v11[122] = v12[315];
  v11[124] = v12[313];
  v11[126] = v12[312];
  LODWORD(STACK[0x1CBC]) = STACK[0xF3C];
  LODWORD(STACK[0x1CCC]) = STACK[0xF2C];
  LODWORD(STACK[0x1CD8]) = STACK[0xF28];
  v15 = v12[309];
  v11[127] = v15;
  v16 = v12[307];
  v11[129] = v16;
  v17 = v12[306];
  v11[130] = v17;
  v18 = v12[305];
  v11[131] = v18;
  v19 = v12[292];
  v11[117] = v19;
  v20 = STACK[0xF0C];
  LODWORD(STACK[0x1CDC]) = STACK[0xF0C];
  v21 = v12[303];
  v11[132] = v21;
  v12[326] = v21;
  LODWORD(STACK[0xF9C]) = v20;
  v12[311] = v19;
  v12[327] = v18;
  v12[329] = v17;
  v12[331] = v16;
  v12[332] = v15;
  LODWORD(STACK[0xFB4]) = STACK[0x1CD8];
  LODWORD(STACK[0xFC0]) = STACK[0x1CCC];
  LODWORD(STACK[0xFC4]) = STACK[0x1CBC];
  v12[333] = v11[126];
  v12[335] = v11[124];
  v12[337] = v11[122];
  v12[338] = v11[121];
  v12[341] = v11[119];
  v12[343] = v11[118];
  v12[345] = v11[115];
  v12[314] = v11[110];
  LODWORD(STACK[0xFD4]) = STACK[0x1C9C];
  v12[347] = v11[113];
  LODWORD(STACK[0xFE8]) = STACK[0x1C98];
  v22 = (uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (((v14 == v10) * ((v8 - a8 + 2579) ^ 0xAC9)) ^ (v9 + v8 + 2579)))
                          - 4);
  LODWORD(STACK[0xFEC]) = v14;
  return v22();
}

uint64_t sub_1932614D8@<X0>(char a1@<W7>, char a2@<W8>)
{
  int v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  _DWORD *v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t (*v30)(void);

  v5 = (a2 - 116) & 0xF6;
  v6 = **(_QWORD **)(v3 + 992);
  v7 = *(_DWORD **)(v3 + 1040);
  v8 = STACK[0x1CCC];
  v9 = LODWORD(STACK[0x1CCC]) + 451170848 - ((LODWORD(STACK[0x1CCC]) << (v5 ^ (a1 + 97))) & 0x35C8A440);
  v10 = ((2 * *v7) & 0xDDDFFFB8) + (*v7 ^ 0xEEEFFFDC) + 286261284;
  *(_BYTE *)(v6 + v10) = HIBYTE(v9) ^ 0x1A;
  *(_BYTE *)(v6 + v10 + 1) = BYTE2(v9) ^ 0xE4;
  *(_BYTE *)(v6 + v10 + 2) = (((BYTE1(v9) ^ 0x52) - 2 * ((BYTE1(v9) ^ 0x52) & 7 ^ BYTE1(v9) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v6 + v10 + 3) = v9 ^ 0x20;
  *v7 += 4;
  v4[326] = *(_QWORD *)(v3 + 1056);
  LODWORD(STACK[0xF9C]) = STACK[0x1CDC];
  v4[311] = *(_QWORD *)(v3 + 936);
  v4[327] = *(_QWORD *)(v3 + 1048);
  v4[329] = *(_QWORD *)(v3 + 1040);
  v4[331] = *(_QWORD *)(v3 + 1032);
  v4[332] = *(_QWORD *)(v3 + 1016);
  LODWORD(STACK[0xFB4]) = STACK[0x1CD8];
  LODWORD(STACK[0xFC0]) = v8;
  LODWORD(STACK[0xFC4]) = STACK[0x1CBC];
  v4[333] = *(_QWORD *)(v3 + 1008);
  v4[335] = *(_QWORD *)(v3 + 992);
  v4[337] = *(_QWORD *)(v3 + 976);
  v4[338] = *(_QWORD *)(v3 + 968);
  v4[341] = *(_QWORD *)(v3 + 952);
  v4[343] = *(_QWORD *)(v3 + 944);
  v4[345] = *(_QWORD *)(v3 + 920);
  v4[314] = *(_QWORD *)(v3 + 880);
  LODWORD(STACK[0xFD4]) = STACK[0x1C9C];
  v4[347] = *(_QWORD *)(v3 + 904);
  LODWORD(STACK[0xFE8]) = STACK[0x1C98];
  LODWORD(STACK[0xFEC]) = v2;
  LODWORD(v7) = STACK[0xFEC];
  LODWORD(v6) = STACK[0xFE8];
  v11 = v4[347];
  v12 = STACK[0xFD4];
  v13 = v4[314];
  v14 = v4[345];
  v15 = v4[343];
  v16 = v4[341];
  v17 = v4[338];
  v18 = v4[337];
  v19 = v4[335];
  v20 = v4[333];
  v21 = STACK[0xFC4];
  v22 = STACK[0xFC0];
  v23 = STACK[0xFB4];
  v24 = v4[332];
  v25 = v4[331];
  v26 = v4[329];
  v27 = v4[327];
  v28 = v4[311];
  v29 = STACK[0xF9C];
  v30 = (uint64_t (*)(void))v4[326];
  STACK[0x220] = (unint64_t)v30;
  LODWORD(STACK[0x758]) = v29;
  *(_QWORD *)(v3 + 1896) = v28;
  STACK[0x230] = v27;
  *v4 = v26;
  v4[1] = v25;
  LODWORD(STACK[0x75C]) = v23;
  LODWORD(STACK[0x784]) = v22;
  LODWORD(STACK[0x79C]) = v21;
  v4[5] = v20;
  v4[6] = v19;
  v4[9] = v18;
  v4[11] = v17;
  v4[13] = v16;
  v4[15] = v15;
  v4[16] = v14;
  *(_QWORD *)(v3 + 1904) = v13;
  LODWORD(STACK[0x7AC]) = v12;
  v4[17] = v11;
  LODWORD(STACK[0x7C8]) = v6;
  LODWORD(STACK[0x7CC]) = (_DWORD)v7;
  v4[19] = v30;
  LODWORD(STACK[0x81C]) = v29;
  *(_QWORD *)(v3 + 1912) = v28;
  v4[21] = v27;
  v4[22] = v26;
  v4[23] = v25;
  v4[25] = v24;
  LODWORD(STACK[0x828]) = v23;
  LODWORD(STACK[0x82C]) = v22;
  LODWORD(STACK[0x83C]) = v21;
  v4[27] = v20;
  v4[28] = v19;
  v4[31] = v18;
  v4[33] = v17;
  v4[35] = v16;
  v4[37] = v15;
  v4[38] = v14;
  *(_QWORD *)(v3 + 1920) = v13;
  LODWORD(STACK[0x84C]) = v12;
  v4[39] = v11;
  LODWORD(STACK[0x860]) = v6;
  LODWORD(STACK[0x864]) = (_DWORD)v7;
  v4[41] = v30;
  LODWORD(STACK[0x874]) = v29;
  v4[2] = v28;
  v4[3] = v24;
  v4[43] = v27;
  v4[44] = v26;
  v4[45] = v25;
  v4[47] = v24;
  LODWORD(STACK[0x8BC]) = v23;
  LODWORD(STACK[0x8C8]) = v22;
  LODWORD(STACK[0x8CC]) = v21;
  v4[49] = v20;
  v4[50] = v19;
  v4[53] = v18;
  v4[55] = v17;
  v4[57] = v16;
  v4[59] = v15;
  v4[60] = v14;
  v4[7] = v13;
  LODWORD(STACK[0x8DC]) = v12;
  v4[61] = v11;
  LODWORD(STACK[0x8EC]) = v6;
  LODWORD(STACK[0x908]) = (_DWORD)v7;
  return v30();
}

uint64_t sub_1932617A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  v13 = STACK[0x1348];
  v14 = 41 * (v8 ^ (a8 + 103));
  v15 = v8 - 632276699;
  v10[179] = v11[453];
  LODWORD(STACK[0x1DD8]) = STACK[0x133C];
  v10[194] = v11[420];
  v10[182] = v11[452];
  v10[184] = v11[450];
  v10[186] = v11[447];
  v10[187] = v11[446];
  v10[189] = v11[445];
  v10[191] = v11[443];
  v10[192] = v11[442];
  LODWORD(STACK[0x1DDC]) = STACK[0x1324];
  LODWORD(STACK[0x1DEC]) = STACK[0x1320];
  LODWORD(STACK[0x1E34]) = STACK[0x12F4];
  v16 = v11[441];
  v10[193] = v16;
  v17 = v11[439];
  v10[195] = v17;
  v18 = v11[437];
  v10[196] = v18;
  v19 = v11[436];
  v10[197] = v19;
  v20 = v11[403];
  v10[198] = v20;
  v21 = STACK[0x12D4];
  LODWORD(STACK[0x1E44]) = STACK[0x12D4];
  v22 = v11[434];
  v10[200] = v22;
  v11[454] = v22;
  LODWORD(STACK[0x134C]) = v21;
  v11[425] = v20;
  v11[456] = v19;
  v11[459] = v18;
  v11[460] = v17;
  v11[461] = v16;
  LODWORD(STACK[0x135C]) = STACK[0x1E34];
  LODWORD(STACK[0x137C]) = STACK[0x1DEC];
  LODWORD(STACK[0x13A8]) = STACK[0x1DDC];
  v11[463] = v10[192];
  v11[464] = v10[191];
  v11[465] = v10[189];
  v11[467] = v10[187];
  v11[469] = v10[186];
  v11[470] = v10[184];
  v11[472] = v10[182];
  v11[429] = v10[194];
  LODWORD(STACK[0x13AC]) = STACK[0x1DD8];
  v11[474] = v10[179];
  LODWORD(STACK[0x13C4]) = v13;
  v23 = (uint64_t (*)(void))(*(_QWORD *)(v12
                                      + 8 * ((v9 + v14 - 865) ^ v15 ^ (2554 * (((v13 - v15) | (v15 - v13)) >= 0))))
                          - 4);
  LODWORD(STACK[0x13D0]) = v13;
  return v23();
}

uint64_t sub_19326192C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  int v83;
  int v84;
  uint64_t *v85;
  _QWORD *v86;
  uint64_t v87;
  int v88;
  uint64_t *v89;
  uint64_t v90;
  _DWORD *v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;

  v88 = (v83 + 1084755905) | 0x37000631;
  v89 = (uint64_t *)v85[189];
  v90 = *v89;
  v91 = (_DWORD *)v85[192];
  v92 = STACK[0x1DDC];
  v93 = STACK[0x1DDC];
  v94 = (v92 ^ 0xF89BED20) & (2 * (v92 & 0xF093ED0A)) ^ v92 & 0xF093ED0A;
  v95 = ((2 * (v92 ^ 0xD89B2724)) ^ 0x5011945C) & (v92 ^ 0xD89B2724) ^ (2 * (v92 ^ 0xD89B2724)) & 0x2808CA2E;
  v96 = v95 ^ 0x28084A22;
  v97 = (v95 ^ 0x28008208) & (4 * v94) ^ v94;
  v98 = ((4 * v96) ^ 0xA02328B8) & v96 ^ (4 * v96) & 0x2808CA2C;
  v99 = (v98 ^ 0x20000820) & (16 * v97) ^ v97;
  v100 = ((16 * (v98 ^ 0x808C206)) ^ 0x808CA2E0) & (v98 ^ 0x808C206) ^ (16 * (v98 ^ 0x808C206)) & 0x2808CA20;
  v101 = v99 ^ 0x2808CA2E ^ (v100 ^ 0x88200) & (v99 << 8);
  v102 = LODWORD(STACK[0x1DDC]) ^ (2
                                 * ((v101 << 16) & 0x28080000 ^ v101 ^ ((v101 << 16) ^ 0x4A2E0000) & (((v100 ^ 0x2800480E) << 8) & 0x28080000 ^ (((v100 ^ 0x2800480E) << 8) ^ 0x8CA0000) & (v100 ^ 0x2800480E) ^ 0x20000000)));
  v103 = ((v88 ^ 0xA9FE84D) & (2 * *v91)) + (*v91 ^ 0xBE9BFFFC) + 1097072644;
  *(_BYTE *)(*v89 + v103) = HIBYTE(v102) ^ 0xB0;
  *(_BYTE *)(v90 + v103 + 1) = BYTE2(v102) ^ 0x92;
  *(_BYTE *)(v90 + v103 + 2) = (((BYTE1(v102) ^ 0x79) - 2 * ((BYTE1(v102) ^ 0x79) & 7 ^ BYTE1(v102) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v90 + v103 + 3) = v102 ^ 0x56;
  v104 = (*v91 + 4);
  *v91 = v104;
  v105 = (v104 ^ 0xFF5FFFFBB3CBF5BALL) + 0x67952DF1A7583C4 + ((2 * v104) & 0x16797EB74);
  v106 = v85[198];
  v107 = (v106 ^ 0xFB4A1B2C55BB022CLL) & (2 * (v106 & 0xC36C984965822A0CLL)) ^ v106 & 0xC36C984965822A0CLL;
  v86[193] = v85[200];
  v108 = ((2 * (v106 ^ 0x7F5B0B3E1CBF4634)) ^ 0x786F26EEF27AD870) & (v106 ^ 0x7F5B0B3E1CBF4634) ^ (2 * (v106 ^ 0x7F5B0B3E1CBF4634)) & 0xBC379377793D6C38;
  LODWORD(STACK[0xC78]) = STACK[0x1E44];
  v109 = v108 ^ 0x8410911109052408;
  v110 = (v108 ^ 0x1826026630184830) & (4 * v107) ^ v107;
  v86[160] = v85[198];
  v86[195] = v85[197];
  v86[196] = v85[196];
  v86[198] = v85[195];
  v111 = ((4 * v109) ^ 0xF0DE4DDDE4F5B0E0) & v109 ^ (4 * v109) & 0xBC379377793D6C38;
  v86[200] = v85[193];
  LODWORD(STACK[0xC7C]) = STACK[0x1E34];
  LODWORD(STACK[0xC8C]) = STACK[0x1DEC];
  LODWORD(STACK[0xCBC]) = v93;
  v86[201] = v85[192];
  v112 = ((16 * (v111 ^ 0xC21922219084C18)) ^ 0xC379377793D6C380) & (v111 ^ 0xC21922219084C18) ^ (16 * (v111 ^ 0xC21922219084C18)) & 0xBC379377793D6C30;
  v86[202] = v85[191];
  v113 = (v112 ^ 0x8031137711144000) & (((v111 ^ 0xB016015560352020) & (16 * v110) ^ v110) << 8) ^ (v111 ^ 0xB016015560352020) & (16 * v110) ^ v110;
  v86[204] = v85[189];
  v86[165] = *(_QWORD *)(v87 + 8 * v83) - 4;
  v86[205] = v85[187];
  v86[206] = v85[186];
  v114 = (((v112 ^ 0x3C06800068292C38) << 8) ^ 0x379377793D6C3800) & (v112 ^ 0x3C06800068292C38) ^ ((v112 ^ 0x3C06800068292C38) << 8) & 0xBC379377793D6C00;
  v86[209] = v85[184];
  v86[211] = v85[182];
  v86[183] = v85[194];
  LODWORD(STACK[0xCDC]) = STACK[0x1DD8];
  v86[213] = v85[179];
  v86[215] = *v89;
  v86[187] = v105;
  v86[216] = v85[195];
  v86[203] = v106 ^ (2 * (v114 & 0x1135683800000000 ^ v113 ^ (v114 ^ 0x34131371392C0000) & (v113 << 16))) ^ 0x1864E965E0A9A269;
  LODWORD(STACK[0xCE8]) = v84;
  v62 = v86[203];
  v63 = v86[216];
  v64 = v86[187];
  v65 = v86[215];
  LODWORD(STACK[0x1994]) = STACK[0xCE8];
  v66 = v86[213];
  LODWORD(STACK[0x19C0]) = STACK[0xCDC];
  *v85 = v86[183];
  v67 = v86[209];
  v85[5] = v86[211];
  v85[6] = v67;
  v85[7] = v86[206];
  v85[9] = v86[205];
  v68 = v86[165];
  v69 = v86[202];
  v85[11] = v86[204];
  v85[12] = v69;
  v85[14] = v86[201];
  LODWORD(STACK[0x19C4]) = STACK[0xCBC];
  LODWORD(STACK[0x19DC]) = STACK[0xC8C];
  LODWORD(STACK[0x19EC]) = STACK[0xC7C];
  v70 = v86[198];
  v115 = v86[200];
  v85[16] = v115;
  v85[17] = v70;
  v85[18] = v86[196];
  v85[20] = v86[195];
  v71 = v86[160];
  v85[3] = v66;
  v85[4] = v71;
  LODWORD(STACK[0x1A08]) = STACK[0xC78];
  v85[23] = v86[193];
  v86[515] = v68;
  v86[540] = v65;
  v86[520] = v64;
  LODWORD(a59) = STACK[0x19C4];
  v72 = v85[14];
  v74 = v85[11];
  v73 = v85[12];
  v75 = v85[9];
  v77 = v85[6];
  v76 = v85[7];
  v78 = v85[5];
  v79 = *v85;
  v86[542] = v63;
  v86[522] = v62;
  STACK[0x1E98] = v62;
  STACK[0x1F18] = v63;
  v80 = v86[520];
  STACK[0x1EC0] = v80;
  v81 = STACK[0x1318];
  STACK[0x1F28] = STACK[0x1318];
  STACK[0x1F30] = STACK[0x1250];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * ((7 * (v63 > v81 + v80 - 0x5D952DACE41797ELL)) ^ (v88 - 2007503019))) - 4))(v72, v73, v74, v75, v76, v77, v78, v79, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           v115,
           a59);
}

uint64_t sub_193261F54()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(void);

  LODWORD(STACK[0x1A9C]) = STACK[0xDBC];
  v5 = v3[259];
  LODWORD(STACK[0x1AAC]) = STACK[0xDAC];
  v6 = v3[230];
  v7 = v3[257];
  v2[42] = v5;
  v2[43] = v7;
  v2[46] = v3[255];
  v8 = v3[252];
  v2[48] = v6;
  v2[49] = v8;
  v2[50] = v3[251];
  v9 = v3[249];
  v10 = v3[247];
  LODWORD(STACK[0x1AC4]) = STACK[0xD9C];
  LODWORD(STACK[0x1AD4]) = STACK[0xD98];
  v11 = v3[246];
  v2[54] = v10;
  v2[55] = v11;
  v2[56] = v3[245];
  v12 = v3[241];
  v13 = v3[225];
  v2[52] = v9;
  v2[53] = v13;
  LODWORD(STACK[0x1B08]) = STACK[0xD6C];
  v14 = v3[240];
  v2[58] = v12;
  v2[59] = v14;
  v15 = STACK[0x208];
  v2[61] = STACK[0x208];
  LODWORD(v12) = STACK[0xD8C];
  LODWORD(STACK[0x1AFC]) = STACK[0xD8C];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v15 == 0) | (4 * (v15 == 0)) | (v1 + v0 + 2440)))
                          - ((v1 + v0 + 275) ^ 0x17BLL));
  LODWORD(STACK[0xDD4]) = v12;
  return v16();
}

void sub_193262014(int a1@<W8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v1[58];
  v2[477] = v1[59];
  LODWORD(STACK[0x13E4]) = STACK[0x1B08];
  v5 = v1[52];
  v2[448] = v1[53];
  v6 = *(_QWORD *)(v3 + 8 * a1) + 3 * (a1 ^ 0x41Au) - 4167;
  v2[480] = v4;
  v2[481] = v1[56];
  v2[458] = v6;
  v7 = v1[54];
  v2[482] = v1[55];
  LODWORD(STACK[0x1404]) = STACK[0x1AFC];
  LODWORD(STACK[0x141C]) = STACK[0x1AD4];
  LODWORD(STACK[0x142C]) = STACK[0x1AC4];
  v2[484] = v7;
  v2[485] = v5;
  v2[486] = v1[50];
  v8 = v1[48];
  v2[488] = v1[49];
  v2[490] = v1[46];
  v9 = v1[42];
  v2[491] = v1[43];
  v2[462] = v8;
  LODWORD(STACK[0x1440]) = STACK[0x1AAC];
  v2[493] = v9;
  LODWORD(STACK[0x1444]) = STACK[0x1A9C];
  JUMPOUT(0x1932620BCLL);
}

uint64_t sub_193262168()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  v2[204] = v3[517];
  LODWORD(STACK[0x1EB4]) = STACK[0x14C0];
  v2[205] = v3[483];
  v2[206] = v3[514];
  v2[208] = v3[513];
  v2[210] = v3[511];
  LODWORD(STACK[0x1EE4]) = STACK[0x14AC];
  LODWORD(STACK[0x1EF0]) = STACK[0x149C];
  LODWORD(STACK[0x1EF4]) = STACK[0x1484];
  v2[213] = v3[508];
  v2[214] = v3[507];
  v2[216] = v3[506];
  v2[218] = v3[504];
  v2[219] = v3[502];
  v2[220] = v3[501];
  v2[207] = v3[479];
  LODWORD(STACK[0x1F14]) = STACK[0x1464];
  v2[222] = v3[500];
  *(_DWORD *)(v4 - 252) = STACK[0x1454];
  v6 = (uint64_t *)v3[498];
  v2[224] = v6;
  v2[225] = v3[496];
  v7 = *v6;
  v2[226] = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2281 * ((((v0 - v1 + 1) ^ (v7 == 0)) & 1) == 0)) ^ v0))
                            - ((v0 - 93040) & 0x2BBBFFF6 ^ 0x2BBA9AFALL)))();
}

uint64_t sub_193262274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void (*a34)(void))
{
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t (*v57)(void);

  ((void (*)(_QWORD))a34)(v34[226]);
  v37 = (_QWORD *)v34[224];
  *v37 = 0;
  v37[1] = 0;
  a34();
  v35[519] = v34[225];
  LODWORD(STACK[0x14C4]) = *(_DWORD *)(v36 - 252);
  v35[521] = v34[222];
  LODWORD(STACK[0x14D4]) = STACK[0x1F14];
  v35[509] = v34[207];
  v35[525] = v34[220];
  v35[526] = v34[219];
  v35[527] = v34[218];
  v35[528] = v34[216];
  v35[530] = v34[214];
  v35[533] = v34[213];
  LODWORD(STACK[0x14E4]) = STACK[0x1EF4];
  LODWORD(STACK[0x1504]) = STACK[0x1EF0];
  LODWORD(STACK[0x1534]) = STACK[0x1EE4];
  v35[534] = v34[210];
  v35[536] = v34[208];
  v35[538] = v34[206];
  v35[510] = v34[205];
  LODWORD(STACK[0x1540]) = STACK[0x1EB4];
  v35[539] = v34[204];
  v38 = v35[539];
  v39 = STACK[0x1540];
  v40 = v35[510];
  v41 = v35[538];
  v42 = v35[536];
  v43 = v35[534];
  v44 = STACK[0x1534];
  v45 = STACK[0x1504];
  v46 = STACK[0x14E4];
  v47 = v35[533];
  v48 = v35[530];
  v49 = v35[528];
  v50 = v35[527];
  v51 = v35[526];
  v52 = v35[525];
  v53 = v35[509];
  v54 = STACK[0x14D4];
  v55 = v35[521];
  v56 = STACK[0x14C4];
  v57 = (uint64_t (*)(void))v35[519];
  v35[151] = v38;
  LODWORD(STACK[0xB6C]) = v39;
  v35[112] = v40;
  v35[153] = v41;
  v35[154] = v42;
  v35[155] = v43;
  LODWORD(STACK[0xB8C]) = v44;
  LODWORD(STACK[0xB98]) = v45;
  LODWORD(STACK[0xB9C]) = v46;
  v35[157] = v47;
  v35[158] = v48;
  v35[159] = v49;
  v35[162] = v50;
  v35[166] = v51;
  v35[167] = v52;
  v35[117] = v53;
  LODWORD(STACK[0xBAC]) = v54;
  v35[168] = v55;
  LODWORD(STACK[0xBBC]) = v56;
  v35[170] = 0;
  v35[240] = v38;
  LODWORD(STACK[0xD6C]) = v39;
  v35[225] = v40;
  v35[241] = v41;
  v35[245] = v42;
  v35[246] = v43;
  LODWORD(STACK[0xD8C]) = v44;
  LODWORD(STACK[0xD98]) = v45;
  LODWORD(STACK[0xD9C]) = v46;
  v35[247] = v47;
  v35[249] = v48;
  v35[251] = v49;
  v35[252] = v50;
  v35[255] = v51;
  v35[257] = v52;
  v35[230] = v53;
  LODWORD(STACK[0xDAC]) = v54;
  v35[259] = v55;
  LODWORD(STACK[0xDBC]) = v56;
  LODWORD(STACK[0xDD4]) = v44;
  return v57();
}

void sub_19326242C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

#error "193262518: call analysis failed (funcsize=56)"

uint64_t sub_19326251C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  int v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void);

  v65 = a1 & 0xFFFFFFFFE0AB25CDLL;
  LODWORD(STACK[0x9A4]) = STACK[0x1934];
  v63[238] = v62[38];
  LODWORD(STACK[0x9B4]) = STACK[0x1924];
  v66 = v62[34];
  v63[240] = v62[35];
  v67 = 17 * (v65 ^ 0x154);
  v68 = *(_QWORD *)(v64 + 8 * v65);
  v63[241] = v66;
  LODWORD(STACK[0x9CC]) = STACK[0x1904];
  v63[243] = v68;
  LODWORD(STACK[0x9DC]) = STACK[0x18F4];
  v63[245] = v62[30];
  v69 = v62[28];
  v63[246] = v62[29];
  v63[247] = v69;
  v70 = v62[26];
  v63[248] = v62[27];
  v63[249] = v70;
  LODWORD(STACK[0xA0C]) = STACK[0x18C4];
  v63[251] = v62[24];
  v71 = v62[22];
  v63[252] = v62[23];
  v63[253] = v71;
  LODWORD(STACK[0xA2C]) = STACK[0x18A4];
  v63[255] = v62[20];
  LODWORD(STACK[0xA38]) = STACK[0x1894];
  LODWORD(STACK[0xA3C]) = 1;
  LODWORD(STACK[0x1960]) = STACK[0xA3C];
  LODWORD(STACK[0x1964]) = STACK[0xA38];
  v62[46] = v63[255];
  LODWORD(STACK[0x1974]) = STACK[0xA2C];
  v72 = v63[252];
  v62[48] = v63[253];
  v62[49] = v72;
  v62[50] = v63[251];
  LODWORD(STACK[0x1994]) = STACK[0xA0C];
  v73 = v63[248];
  v62[52] = v63[249];
  v62[53] = v73;
  v74 = v63[246];
  v62[54] = v63[247];
  v62[55] = v74;
  v62[56] = v63[245];
  LODWORD(STACK[0x19C0]) = STACK[0x9DC];
  v75 = v63[243];
  LODWORD(STACK[0x19C4]) = STACK[0x9CC];
  v76 = v63[240];
  v62[58] = v63[241];
  v62[59] = v76;
  LODWORD(v74) = STACK[0x9B4];
  LODWORD(STACK[0x19DC]) = STACK[0x9B4];
  v77 = v63[238];
  v62[61] = v77;
  v78 = STACK[0x9A4];
  LODWORD(STACK[0x19EC]) = STACK[0x9A4];
  v62[63] = a61;
  v62[64] = v75;
  v63[283] = a61;
  v79 = *(_DWORD *)(a61 + 12);
  v62[65] = a61 + 12;
  LODWORD(STACK[0x1A08]) = v79;
  v63[279] = a61 + 12;
  LODWORD(STACK[0xAFC]) = v78;
  v63[281] = v77;
  LODWORD(STACK[0xB0C]) = v74;
  v63[284] = v76;
  v63[285] = v62[58];
  LODWORD(STACK[0xB28]) = STACK[0x19C4];
  LODWORD(STACK[0xB2C]) = STACK[0x1960];
  v63[287] = v75;
  LODWORD(STACK[0xB3C]) = STACK[0x19C0];
  v63[289] = v62[56];
  v80 = v62[54];
  v63[290] = v62[55];
  v63[291] = v80;
  v81 = v62[52];
  v63[292] = v62[53];
  v63[293] = v81;
  LODWORD(STACK[0xB6C]) = STACK[0x1994];
  v63[295] = v62[50];
  v82 = v62[48];
  v63[296] = v62[49];
  v63[297] = v82;
  LODWORD(STACK[0xB8C]) = STACK[0x1974];
  v63[299] = v62[46];
  LODWORD(STACK[0xB98]) = STACK[0x1964];
  v83 = (uint64_t (*)(void))(*(_QWORD *)(v64 + 8 * (((v79 < 0xFFFFFFFB) * ((v67 - 2856) ^ 0x44)) ^ v67))
                          - ((v67 - v61 - 3457) ^ 0x2BBA9AFELL));
  LODWORD(STACK[0xB9C]) = 101330305;
  return v83();
}

uint64_t sub_193262B78@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BOOL4 v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = LODWORD(STACK[0x1A08]);
  v7 = v3[63];
  v8 = v3[64];
  v9 = *(unsigned int *)(v7 + 8);
  v4[257] = v3[65];
  LODWORD(STACK[0xA4C]) = STACK[0x19EC];
  v10 = (v6 ^ 0xDE5DD2B357ABFECDLL) + 0x21A22D4D14D97184 + ((2 * (_DWORD)v6) & 0xAF57FD9A);
  v11 = (v9 ^ 0x6DFBBFFFB3D3FF3FLL)
      - 0x6DFBBFFF474E8EF2
      + (((a2 ^ (a1 - 583)) + 0x13BED6388) & (2 * v9));
  v4[259] = v3[61];
  v12 = v10 < 0x6C85704D;
  LODWORD(STACK[0xA5C]) = STACK[0x19DC];
  v4[261] = v7;
  v13 = v10 > v11;
  if (v12 != v11 < 0x6C85704D)
    v13 = v12;
  v14 = v3[58];
  v4[262] = v3[59];
  v4[263] = v14;
  LODWORD(STACK[0xA78]) = STACK[0x19C4];
  LODWORD(STACK[0xA7C]) = STACK[0x1960];
  v4[265] = v8;
  LODWORD(STACK[0xA8C]) = STACK[0x19C0];
  v4[267] = v3[56];
  v15 = v3[54];
  v4[268] = v3[55];
  v4[269] = v15;
  v16 = v3[52];
  v4[270] = v3[53];
  v4[271] = v16;
  LODWORD(STACK[0xABC]) = STACK[0x1994];
  v4[273] = v3[50];
  v17 = v3[48];
  v4[274] = v3[49];
  v4[275] = v17;
  LODWORD(STACK[0xADC]) = STACK[0x1974];
  v4[277] = v3[46];
  LODWORD(STACK[0xAE8]) = STACK[0x1964];
  LODWORD(STACK[0xAEC]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2135 * v13) ^ a2)) - 12))();
}

uint64_t sub_193262CF0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v4 = (a1 + 2871);
  v5 = (v4 ^ 0xFFFFFFFFFFFFF204) + *(_QWORD *)(v3 + 8 * a1);
  v2[301] = *(_QWORD *)(v1 + 520);
  LODWORD(STACK[0xBAC]) = STACK[0x19EC];
  v2[303] = *(_QWORD *)(v1 + 488);
  LODWORD(STACK[0xBBC]) = STACK[0x19DC];
  v2[305] = *(_QWORD *)(v1 + 504);
  v6 = *(_QWORD *)(v1 + 464);
  v2[306] = *(_QWORD *)(v1 + 472);
  v2[307] = v6;
  LODWORD(STACK[0xBD8]) = STACK[0x19C4];
  LODWORD(STACK[0xBDC]) = STACK[0x1960];
  v7 = *(_QWORD *)(v1 + 504);
  v2[309] = *(_QWORD *)(v1 + 512);
  LODWORD(STACK[0xBEC]) = STACK[0x19C0];
  v2[311] = v5;
  v8 = *(_QWORD *)(v1 + 432);
  v2[312] = *(_QWORD *)(v1 + 440);
  v2[313] = v8;
  v9 = *(_QWORD *)(v1 + 416);
  v2[314] = *(_QWORD *)(v1 + 424);
  v2[315] = v9;
  LODWORD(STACK[0xC1C]) = STACK[0x1994];
  v2[317] = *(_QWORD *)(v1 + 368);
  LODWORD(STACK[0xC28]) = STACK[0x1964];
  LODWORD(STACK[0xC2C]) = 4;
  v2[319] = v7;
  v10 = (v4 - 2459);
  *(_QWORD *)(v1 + 704) = v2[319];
  v11 = LODWORD(STACK[0xC2C]);
  LODWORD(STACK[0x1AC4]) = STACK[0xC28];
  *(_QWORD *)(v1 + 720) = v2[317];
  LODWORD(STACK[0x1AD4]) = STACK[0xC1C];
  *(_QWORD *)(v1 + 736) = v2[315];
  *(_QWORD *)(v1 + 744) = v2[314];
  *(_QWORD *)(v1 + 752) = v2[313];
  *(_QWORD *)(v1 + 760) = v2[312];
  v12 = v2[311];
  LODWORD(STACK[0x1AFC]) = STACK[0xBEC];
  *(_QWORD *)(v1 + 776) = v2[309];
  LODWORD(STACK[0x1B08]) = STACK[0xBDC];
  LODWORD(STACK[0x1B0C]) = STACK[0xBD8];
  *(_QWORD *)(v1 + 792) = v2[307];
  *(_QWORD *)(v1 + 800) = v2[306];
  *(_QWORD *)(v1 + 808) = v2[305];
  LODWORD(STACK[0x1B2C]) = STACK[0xBBC];
  *(_QWORD *)(v1 + 824) = v2[303];
  LODWORD(STACK[0x1B3C]) = STACK[0xBAC];
  *(_QWORD *)(v1 + 840) = v2[301];
  *(_QWORD *)(v1 + 848) = v12;
  v13 = *(_QWORD *)(v1 + 704);
  v14 = *(unsigned int *)(v13 + 8);
  *(_QWORD *)(v1 + 856) = v13 + 8;
  v15 = (v11 ^ 0xB6E57F3FADFFEF1DLL) + (v10 ^ 0x491A80C0520014B6) + ((2 * v11) & 0x15BFFDE3ALL) + v14;
  *(_QWORD *)(v1 + 864) = v15;
  *(_BYTE *)(v1 + 879) = v15 < 0xFFFFFFFF;
  v2[320] = v14;
  v16 = v2[320];
  *(_QWORD *)(v1 + 880) = 2 * v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((3704
                                               * (v16 > (unint64_t)((((_DWORD)v10 - 1043) | 0x1020u) - 2109)
                                                      + 2147481562)) ^ v10))
                            - 4))();
}

uint64_t sub_193262D9C()
{
  int v0;
  int v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t (*v18)(void);

  v5 = STACK[0x3EC];
  LODWORD(STACK[0x13D4]) = STACK[0x3E8];
  v2[564] = v2[53];
  LODWORD(STACK[0x13E4]) = STACK[0x3DC];
  v2[566] = v2[51];
  v6 = v2[49];
  v2[567] = v2[50];
  v2[568] = v6;
  LODWORD(STACK[0x1404]) = STACK[0x3BC];
  v8 = v2[46];
  v7 = v2[47];
  v2[570] = v2[45];
  v9 = v2[44];
  v2[571] = v2[43];
  LODWORD(STACK[0x141C]) = STACK[0x38C];
  v2[573] = v2[41];
  LODWORD(STACK[0x142C]) = STACK[0x37C];
  v10 = STACK[0x378];
  v12 = v2[38];
  v11 = v2[39];
  v13 = v2[37];
  v2[575] = v12;
  v2[576] = v13;
  v14 = STACK[0x35C];
  LODWORD(STACK[0x1440]) = STACK[0x35C];
  v15 = v2[35];
  v16 = STACK[0x34C];
  LODWORD(STACK[0x1444]) = STACK[0x34C];
  v17 = v2[33];
  v2[578] = v17;
  v2[55] = v17;
  LODWORD(STACK[0x3FC]) = v16;
  v2[57] = v15;
  LODWORD(STACK[0x40C]) = v14;
  v2[59] = v13;
  v2[60] = v12;
  v2[61] = v11;
  LODWORD(STACK[0x428]) = v10;
  LODWORD(STACK[0x42C]) = STACK[0x142C];
  v2[63] = v2[573];
  LODWORD(STACK[0x43C]) = STACK[0x141C];
  v2[65] = v2[571];
  v2[66] = v9;
  v2[67] = v2[570];
  v2[68] = v8;
  v2[69] = v7;
  LODWORD(STACK[0x46C]) = STACK[0x1404];
  v2[71] = v2[568];
  v2[72] = v2[567];
  v2[73] = v2[566];
  LODWORD(STACK[0x48C]) = STACK[0x13E4];
  v2[75] = v2[564];
  LODWORD(STACK[0x498]) = STACK[0x13D4];
  v18 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                      + 8
                                      * (int)(((v5 == v1) * ((v3 + 166860505) & 0xCA534FFE ^ 0x35A)) ^ (v0 + v3 + 366)))
                          - 12);
  LODWORD(STACK[0x49C]) = v5;
  return v18();
}

uint64_t sub_193262F18@<X0>(int a1@<W7>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  unsigned int v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(void);

  v66 = *(_QWORD *)(v65 + 8 * a2);
  v67 = (a2 + 894);
  v64[365] = v64[578];
  LODWORD(STACK[0xDAC]) = STACK[0x1444];
  v64[367] = (v67 ^ 0xFFFFFFFFFFFFFAB8) + v66;
  LODWORD(STACK[0xDBC]) = STACK[0x1440];
  v64[369] = v64[576];
  v64[370] = v64[575];
  LODWORD(STACK[0xDD4]) = STACK[0x142C];
  v64[372] = v64[573];
  LODWORD(STACK[0xDE4]) = STACK[0x141C];
  v64[374] = v64[571];
  v64[375] = v64[570];
  LODWORD(STACK[0xDFC]) = STACK[0x1404];
  v64[377] = v64[568];
  v64[378] = v64[567];
  v64[379] = v64[566];
  LODWORD(STACK[0xE1C]) = STACK[0x13E4];
  v64[381] = v64[564];
  LODWORD(STACK[0xE2C]) = STACK[0x13D4];
  v64[383] = a16;
  LODWORD(STACK[0xE3C]) = a15;
  LODWORD(STACK[0x1B7C]) = STACK[0xE3C];
  v63[113] = v64[383];
  LODWORD(STACK[0x1B8C]) = STACK[0xE2C];
  v63[115] = v64[381];
  LODWORD(STACK[0x1B9C]) = STACK[0xE1C];
  v63[117] = v64[379];
  v63[118] = v64[378];
  v63[119] = v64[377];
  LODWORD(STACK[0x1BBC]) = STACK[0xDFC];
  v63[121] = v64[375];
  v63[122] = v64[374];
  LODWORD(STACK[0x1BD4]) = STACK[0xDE4];
  v63[124] = v64[372];
  LODWORD(STACK[0x1BE4]) = STACK[0xDD4];
  v63[126] = v64[370];
  v63[127] = v64[369];
  v68 = STACK[0xDBC];
  LODWORD(STACK[0x1BF8]) = STACK[0xDBC];
  v69 = v64[367];
  v70 = STACK[0xDAC];
  LODWORD(STACK[0x1BFC]) = STACK[0xDAC];
  v63[130] = a63;
  v71 = *(_DWORD *)(a63 + 12);
  v63[132] = a63 + 12;
  v72 = STACK[0x1B7C];
  v73 = (LODWORD(STACK[0x1B7C]) | ((unint64_t)(LODWORD(STACK[0x1B7C]) < 0x69BAA04B) << 32)) + 0x3A85695F5773401;
  v74 = v64[365];
  v63[129] = v74;
  v63[131] = v69;
  v63[133] = v73;
  v75 = (v71 ^ 0x7CB169FFFFDFBED9)
      + v73
      - 0x181008105C47AE41
      + ((a1 + (v67 ^ 0x7FD) - 593 + 0x1D404E2BCLL) & (2 * v71));
  v63[134] = v75;
  v64[407] = v74;
  LODWORD(STACK[0xEFC]) = v70;
  v64[409] = v69;
  LODWORD(STACK[0xF0C]) = v68;
  v64[411] = v63[127];
  v64[412] = v63[126];
  v64[413] = v63[113];
  LODWORD(STACK[0xF28]) = v72;
  LODWORD(STACK[0xF2C]) = STACK[0x1BE4];
  v64[415] = v63[124];
  LODWORD(STACK[0xF3C]) = STACK[0x1BD4];
  v64[417] = v63[122];
  v64[418] = v63[130];
  v64[419] = v63[121];
  v64[420] = v63[133];
  v64[421] = v63[132];
  LODWORD(STACK[0xF6C]) = STACK[0x1BBC];
  v64[423] = v63[119];
  v64[424] = v63[118];
  v64[425] = v63[117];
  LODWORD(STACK[0xF8C]) = STACK[0x1B9C];
  v64[427] = v63[115];
  LODWORD(STACK[0xF98]) = STACK[0x1B8C];
  v76 = (uint64_t (*)(void))(*(_QWORD *)(v65
                                      + 8
                                      * (int)((3998 * ((unint64_t)(v75 - 0x6849B88602C9E4E4) < 0xFFFFFFFB)) ^ v67))
                          - 8);
  LODWORD(STACK[0xF9C]) = 101330305;
  return v76();
}

uint64_t sub_193263438@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t (*v7)(void);

  v6 = v3[134] - 0x6849B88602C9E4E0 > (unint64_t)*(unsigned int *)(v3[130] + 8);
  v4[385] = v3[129];
  LODWORD(STACK[0xE4C]) = STACK[0x1BFC];
  v4[387] = v3[131];
  LODWORD(STACK[0xE5C]) = STACK[0x1BF8];
  v4[389] = v3[127];
  v4[390] = v3[126];
  v4[391] = v3[113];
  LODWORD(STACK[0xE78]) = STACK[0x1B7C];
  LODWORD(STACK[0xE7C]) = STACK[0x1BE4];
  v4[393] = v3[124];
  LODWORD(STACK[0xE8C]) = STACK[0x1BD4];
  v4[395] = v3[122];
  v4[396] = v3[130];
  v4[397] = v3[121];
  v4[398] = v3[133];
  v4[399] = v3[132];
  LODWORD(STACK[0xEBC]) = STACK[0x1BBC];
  v4[401] = v3[119];
  v4[402] = v3[118];
  v4[403] = v3[117];
  LODWORD(STACK[0xEDC]) = STACK[0x1B9C];
  v4[405] = v3[115];
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v6 * (((a2 + 143820245) | 0x23281270) ^ (a1 - 2586))) ^ a2)) - 12);
  LODWORD(STACK[0xEEC]) = v2;
  return v7();
}

void sub_19326354C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  v4 = STACK[0x1B7C];
  v5 = a1 - 1773835532 + LODWORD(STACK[0x1B7C]) - 3564;
  v6 = *(_QWORD *)(v3 + 8 * a1) - 12;
  v2[301] = v1[129];
  LODWORD(STACK[0xBAC]) = STACK[0x1BFC];
  v2[303] = v1[131];
  LODWORD(STACK[0xBBC]) = STACK[0x1BF8];
  v2[305] = v1[127];
  v2[306] = v1[126];
  v2[307] = v1[113];
  LODWORD(STACK[0xBD8]) = v4;
  LODWORD(STACK[0xBDC]) = STACK[0x1BE4];
  v2[309] = v1[124];
  LODWORD(STACK[0xBEC]) = STACK[0x1BD4];
  v2[311] = v6;
  v2[312] = v1[130];
  v2[313] = v1[121];
  v2[314] = v1[133];
  v2[315] = v1[132];
  LODWORD(STACK[0xC1C]) = STACK[0x1BBC];
  v2[317] = v1[115];
  LODWORD(STACK[0xC28]) = STACK[0x1B8C];
  LODWORD(STACK[0xC2C]) = v5;
  v2[319] = v1[130];
  JUMPOUT(0x1932644F0);
}

uint64_t sub_19326360C()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;
  uint64_t (*v8)(void);

  v6 = STACK[0x1CD8];
  v7 = LODWORD(STACK[0x1CD8]) == v1;
  v3[77] = v2[177];
  LODWORD(STACK[0x4AC]) = STACK[0x1D7C];
  v3[79] = v2[175];
  LODWORD(STACK[0x4BC]) = STACK[0x1D6C];
  v3[81] = v2[173];
  v3[82] = v2[172];
  v3[83] = v2[171];
  LODWORD(STACK[0x4D8]) = STACK[0x1D4C];
  LODWORD(STACK[0x4DC]) = STACK[0x1D48];
  v3[85] = v2[169];
  LODWORD(STACK[0x4EC]) = STACK[0x1D3C];
  v3[87] = v2[167];
  v3[88] = v2[166];
  v3[89] = v2[165];
  v3[90] = v2[164];
  v3[91] = v2[163];
  LODWORD(STACK[0x51C]) = STACK[0x1D0C];
  v3[93] = v2[161];
  v3[94] = v2[160];
  v3[95] = v2[159];
  LODWORD(STACK[0x53C]) = STACK[0x1CEC];
  v3[97] = v2[157];
  LODWORD(STACK[0x54C]) = STACK[0x1CDC];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v7 * (((v0 + v4 + 225) | 0x98) ^ 0x39D)) ^ (v0 + v4 + 377))) - 12);
  LODWORD(STACK[0x550]) = v6;
  return v8();
}

void sub_19326370C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *(_QWORD *)(v22 + 8 * v19);
  v21[365] = v20[177];
  LODWORD(STACK[0xDAC]) = STACK[0x1D7C];
  v21[367] = (v19 ^ 0xFFFFFFFFFFFFFE2DLL) + v23;
  LODWORD(STACK[0xDBC]) = STACK[0x1D6C];
  v21[369] = v20[173];
  v21[370] = v20[172];
  LODWORD(STACK[0xDD4]) = STACK[0x1D48];
  v21[372] = v20[169];
  LODWORD(STACK[0xDE4]) = STACK[0x1D3C];
  v21[374] = v20[167];
  v21[375] = v20[165];
  LODWORD(STACK[0xDFC]) = STACK[0x1D0C];
  v21[377] = v20[161];
  v21[378] = v20[160];
  v21[379] = v20[159];
  LODWORD(STACK[0xE1C]) = STACK[0x1CEC];
  v21[381] = v20[157];
  LODWORD(STACK[0xE2C]) = STACK[0x1CDC];
  v21[383] = a19;
  JUMPOUT(0x193262FC8);
}

uint64_t sub_1932637C0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t (*v12)(void);

  v4 = STACK[0x550];
  LODWORD(STACK[0x14D4]) = STACK[0x54C];
  STACK[0x14D8] = STACK[0x540];
  LODWORD(STACK[0x14E4]) = STACK[0x53C];
  STACK[0x14E8] = STACK[0x530];
  STACK[0x14F0] = STACK[0x528];
  STACK[0x14F8] = STACK[0x520];
  LODWORD(STACK[0x1504]) = STACK[0x51C];
  STACK[0x1508] = STACK[0x510];
  STACK[0x1510] = STACK[0x508];
  STACK[0x1518] = STACK[0x500];
  STACK[0x1520] = STACK[0x4F8];
  STACK[0x1528] = STACK[0x4F0];
  LODWORD(STACK[0x1534]) = STACK[0x4EC];
  STACK[0x1538] = STACK[0x4E0];
  LODWORD(STACK[0x1540]) = STACK[0x4DC];
  LODWORD(STACK[0x1544]) = STACK[0x4D8];
  v5 = STACK[0x4D0];
  STACK[0x1548] = STACK[0x4D0];
  v6 = STACK[0x4C8];
  STACK[0x1550] = STACK[0x4C8];
  v7 = STACK[0x4C0];
  STACK[0x1558] = STACK[0x4C0];
  v8 = STACK[0x4BC];
  LODWORD(STACK[0x1564]) = STACK[0x4BC];
  v9 = STACK[0x4B0];
  STACK[0x1568] = STACK[0x4B0];
  v10 = STACK[0x4AC];
  LODWORD(STACK[0x1574]) = STACK[0x4AC];
  v11 = STACK[0x4A0];
  STACK[0x1578] = STACK[0x4A0];
  STACK[0x790] = v11;
  LODWORD(STACK[0x79C]) = v10;
  STACK[0x7A0] = v9;
  LODWORD(STACK[0x7AC]) = v8;
  STACK[0x7B0] = v7;
  STACK[0x7B8] = v6;
  STACK[0x7C0] = v5;
  LODWORD(STACK[0x7C8]) = STACK[0x1544];
  LODWORD(STACK[0x7CC]) = STACK[0x1540];
  STACK[0x7D0] = STACK[0x1538];
  STACK[0x7D8] = STACK[0x1528];
  STACK[0x7E0] = STACK[0x1520];
  STACK[0x7E8] = STACK[0x1518];
  STACK[0x7F0] = STACK[0x1510];
  STACK[0x7F8] = STACK[0x1508];
  STACK[0x800] = STACK[0x14F8];
  STACK[0x808] = STACK[0x14F0];
  STACK[0x810] = STACK[0x14E8];
  LODWORD(STACK[0x81C]) = STACK[0x14E4];
  STACK[0x820] = STACK[0x14D8];
  LODWORD(STACK[0x828]) = STACK[0x14D4];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3564 * (v4 == v1)) ^ (v0 + v2 + 1784)))
                          - ((v0 + v2 + 785) ^ 0x375));
  LODWORD(STACK[0x82C]) = v4;
  return v12();
}

uint64_t sub_19326394C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t),int *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  _QWORD *v68;
  int v69;
  uint64_t v70;
  int v71;
  unint64_t v72;
  int v73;
  unint64_t v74;
  int v75;
  int v76;
  uint64_t v77;

  v68[617] = a68;
  a24(a22);
  v71 = *a26;
  v72 = *(_QWORD *)a68;
  v73 = *(_DWORD *)(a68 + 12);
  v68[618] = a68 + 12;
  v74 = v68[525];
  v75 = 597255653 * (((v70 - 144) & 0x5A168B1A | ~((v70 - 144) | 0x5A168B1A)) ^ 0xACE20B7C);
  STACK[0x1FB8] = v68[526];
  STACK[0x1FA8] = v72;
  STACK[0x1F98] = v74;
  *(_DWORD *)(v70 - 112) = v75 + v69 + 2359;
  *(_DWORD *)(v70 - 140) = v75 + 1581691396 + v73 - ((2 * v73) & 0xBC8D6408);
  *(_DWORD *)(v70 - 128) = (v71 ^ 0x353FEFF8)
                         - v75
                         - 270927936
                         + ((v71 << ((((v69 - 74) | 8) + 15) ^ 0x3F)) & 0x6A7FDFF0);
  a23(v70 - 144);
  v76 = *(_DWORD *)(v70 - 144);
  v77 = a25(a22);
  LODWORD(STACK[0x554]) = v76;
  return (*(uint64_t (**)(uint64_t))(a62 + 8 * ((1113 * (v76 == 663729217)) ^ v69)))(v77);
}

uint64_t sub_193263AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int *a13, void (*a14)(uint64_t), uint64_t a15, uint64_t (*a16)(_QWORD, uint64_t, uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);

  v69 = v65;
  v70 = 486723911 * (((v63 | 0x9C77584CA574EE2ALL) - v63 + (v63 & 0x6388A7B35A8B11D0)) ^ 0xAEC983DD15BE8EB0);
  *(_QWORD *)(v66 + 1952) = *(_QWORD *)(v68 + 8 * v62) - v70 - 8;
  *(_QWORD *)(v66 + 1944) = v65;
  *(_DWORD *)(v67 - 128) = v62 - 71465943 - v70;
  a14(v67 - 144);
  v71 = a16(*a13, a15, v64);
  v72 = ((2 * v71) & 0xCFBDEF76) + (v71 ^ 0xE7DEF7BB);
  v73 = *(_QWORD *)(a62 + 8 * ((int)v62 - 5));
  v74 = 486723911 * (((v63 | 0x2CFEEB31FD8E0362) - (v63 & 0x2CFEEB31FD8E0362)) ^ 0x1E4030A04D4463F8);
  *(_DWORD *)(v67 - 128) = v62 - 71465943 - v74;
  *(_QWORD *)(v66 + 1944) = v69;
  *(_QWORD *)(v66 + 1952) = ((v62 + 66) ^ 0xFFFFFFFFFFFFFC89) - v74 + v73;
  v75 = ((uint64_t (*)(uint64_t))a14)(v67 - 144);
  STACK[0x790] = STACK[0x1578];
  LODWORD(STACK[0x79C]) = STACK[0x1574];
  STACK[0x7A0] = STACK[0x1568];
  LODWORD(STACK[0x7AC]) = STACK[0x1564];
  STACK[0x7B0] = STACK[0x1558];
  STACK[0x7B8] = STACK[0x1550];
  STACK[0x7C0] = STACK[0x1548];
  LODWORD(STACK[0x7C8]) = STACK[0x1544];
  LODWORD(STACK[0x7CC]) = STACK[0x1540];
  STACK[0x7D0] = STACK[0x1538];
  STACK[0x7D8] = STACK[0x1528];
  STACK[0x7E0] = STACK[0x1520];
  STACK[0x7E8] = STACK[0x1518];
  STACK[0x7F0] = STACK[0x1510];
  STACK[0x7F8] = STACK[0x1508];
  STACK[0x800] = STACK[0x14F8];
  STACK[0x808] = STACK[0x14F0];
  STACK[0x810] = STACK[0x14E8];
  LODWORD(STACK[0x81C]) = STACK[0x14E4];
  STACK[0x820] = STACK[0x14D8];
  LODWORD(STACK[0x828]) = STACK[0x14D4];
  v76 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a62
                                                    + 8
                                                    * ((5888
                                                      * ((int)((v72 - (v62 ^ 0xE7DEF494)) | ((v62 ^ 0xE7DEF494) - v72)) >= 0)) ^ ((int)v62 + 1065)))
                                        - 4);
  LODWORD(STACK[0x82C]) = 101330291;
  return v76(v75);
}

uint64_t sub_193263CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t),_DWORD *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t (*v75)(uint64_t);

  a24(a22);
  v65 = **(_QWORD **)(v62 + 4936);
  v66 = **(_DWORD **)(v62 + 4944);
  v67 = *a26 ^ 0x371BEFFB;
  v68 = (2 * *a26) & 0x6E37DFF6;
  v69 = *(_QWORD *)(v62 + 4200);
  v70 = *(_QWORD *)(v62 + 4208);
  v71 = 597255653 * ((v64 + 578600992 - 2 * ((v64 - 144) & 0x227CC0B0)) ^ 0x2B77BF29);
  *(_DWORD *)(v64 - 112) = v71 + a59 + 2359;
  v63[248] = v70;
  v63[244] = v69;
  v63[246] = v65;
  *(_DWORD *)(v64 - 140) = v71 + v66 + 1581691396 - ((v66 << ((a59 ^ 0x4F) - 61)) & 0xBC8D6408);
  *(_DWORD *)(v64 - 128) = v67 - v71 + v68 - 302123075;
  a23(v64 - 144);
  v72 = *(_DWORD *)(v64 - 144);
  v73 = a25(a22);
  LODWORD(STACK[0x554]) = v72;
  v74 = STACK[0x554];
  STACK[0x790] = STACK[0x1578];
  LODWORD(STACK[0x79C]) = STACK[0x1574];
  STACK[0x7A0] = STACK[0x1568];
  LODWORD(STACK[0x7AC]) = STACK[0x1564];
  STACK[0x7B0] = STACK[0x1558];
  STACK[0x7B8] = STACK[0x1550];
  STACK[0x7C0] = STACK[0x1548];
  LODWORD(STACK[0x7C8]) = STACK[0x1544];
  LODWORD(STACK[0x7CC]) = STACK[0x1540];
  STACK[0x7D0] = STACK[0x1538];
  STACK[0x7D8] = STACK[0x1528];
  STACK[0x7E0] = STACK[0x1520];
  STACK[0x7E8] = STACK[0x1518];
  STACK[0x7F0] = STACK[0x1510];
  STACK[0x7F8] = STACK[0x1508];
  STACK[0x800] = STACK[0x14F8];
  STACK[0x808] = STACK[0x14F0];
  STACK[0x810] = STACK[0x14E8];
  LODWORD(STACK[0x81C]) = STACK[0x14E4];
  STACK[0x820] = STACK[0x14D8];
  LODWORD(STACK[0x828]) = STACK[0x14D4];
  v75 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a62
                                                    + 8
                                                    * (a59 ^ 0x429 ^ (6063
                                                                    * ((((a59 ^ 0x4F) - 57) ^ (((v74 - (a59 ^ 0x178FB74F)) | ((a59 ^ 0x178FB74F) - v74)) < 0)) & 1))))
                                        - (((a59 ^ 0x178FB74Fu) - 395291822) ^ 0x794));
  LODWORD(STACK[0x82C]) = 101330291;
  return v75(v73);
}

void sub_193263F50(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (a1 + 515) | 0x10;
  v4 = *(_QWORD *)(v2 + 8 * v3);
  v1[211] = v1[616];
  LODWORD(STACK[0x8DC]) = STACK[0x1574];
  v1[213] = v1[614];
  LODWORD(STACK[0x8EC]) = STACK[0x1564];
  v1[215] = v1[612];
  v1[216] = v1[611];
  v1[217] = v1[610];
  LODWORD(STACK[0x908]) = STACK[0x1544];
  LODWORD(STACK[0x90C]) = STACK[0x1540];
  v1[219] = v1[608];
  v1[220] = v4 + (((_DWORD)v3 + 656) | 0x52u) - 1274;
  LODWORD(STACK[0x924]) = STACK[0x1534];
  v1[222] = v1[606];
  v1[223] = v1[605];
  v1[224] = v1[604];
  v1[225] = v1[603];
  v1[226] = v1[602];
  LODWORD(STACK[0x954]) = STACK[0x1504];
  v1[228] = v1[600];
  v1[229] = v1[599];
  v1[230] = v1[598];
  LODWORD(STACK[0x974]) = STACK[0x14E4];
  v1[232] = v1[596];
  LODWORD(STACK[0x984]) = STACK[0x14D4];
  JUMPOUT(0x193264044);
}

uint64_t sub_19326416C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;

  v64 = (a8 + v62 + 404 - 565839500) | 0x21BA0062u;
  v65 = *(_QWORD **)(v63 + 336);
  *v65 = 0;
  v65[1] = 0;
  *(_QWORD *)(v63 + 344) = v65 + 1;
  v66 = a27(4096, 2241923698);
  **(_QWORD **)(v63 + 336) = v66;
  return ((uint64_t (*)(void))(*(_QWORD *)(a62 + 8 * (((v66 != 0) | (32 * (v66 != 0))) ^ (v62 + 404)))
                            - (v64 ^ 0x2BBA9AF2)))();
}

uint64_t sub_1932641E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *(_QWORD *)(v9 + 336);
  **(_DWORD **)(v9 + 344) = v7;
  *(_QWORD *)(v10 + 1880) = v11;
  LOBYTE(STACK[0x99F]) = 1;
  LODWORD(STACK[0x9A0]) = v8;
  LODWORD(STACK[0x1958]) = STACK[0x9A0];
  *(_BYTE *)(v9 + 359) = STACK[0x99F];
  **(_QWORD **)(v9 + 144) = *(_QWORD *)(v10 + 1880);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 328))(a1, a2, a3, a4, a5, a6, a7, 733649558);
}

uint64_t sub_19326424C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  uint64_t v66;
  _QWORD *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t (*v75)(void);

  LODWORD(STACK[0x1594]) = a65;
  LODWORD(STACK[0x6AC]) = a65;
  v67[143] = *(_QWORD *)(v66 + 320);
  LODWORD(STACK[0x6BC]) = STACK[0x1934];
  v67[145] = *(_QWORD *)(v66 + 304);
  LODWORD(STACK[0x6CC]) = STACK[0x1924];
  v67[147] = *(_QWORD *)(v66 + 288);
  v70 = *(_QWORD *)(v66 + 272);
  v67[148] = *(_QWORD *)(v66 + 280);
  v67[149] = v70;
  LODWORD(STACK[0x6E8]) = STACK[0x1904];
  LODWORD(STACK[0x6EC]) = STACK[0x1900];
  v67[151] = *(_QWORD *)(v66 + 256);
  LODWORD(STACK[0x6FC]) = STACK[0x18F4];
  v67[153] = *(_QWORD *)(v66 + 240);
  v71 = *(_QWORD *)(v66 + 224);
  v67[154] = *(_QWORD *)(v66 + 232);
  v67[155] = v71;
  v72 = *(_QWORD *)(v66 + 208);
  v67[156] = *(_QWORD *)(v66 + 216);
  v67[157] = v72;
  v67[158] = *(_QWORD *)(v66 + 192);
  v73 = *(_QWORD *)(v66 + 176);
  v67[159] = *(_QWORD *)(v66 + 184);
  v67[160] = v73;
  LODWORD(STACK[0x744]) = STACK[0x18A4];
  v67[162] = *(_QWORD *)(v66 + 160);
  v74 = (v65 + v68 - 1) ^ *(_BYTE *)(v66 + 359);
  LODWORD(STACK[0x754]) = STACK[0x1894];
  v75 = (uint64_t (*)(void))(*(_QWORD *)(v69
                                      + 8
                                      * (((v74 & 1) * (((v65 + v68 + 1056) | 0xA39) ^ 0xE91)) | (v65 + v68 + 1060)))
                          - 12);
  LODWORD(STACK[0x758]) = STACK[0x1958];
  return v75();
}

uint64_t sub_193264340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int *a29,uint64_t (*a30)(_QWORD, uint64_t, _QWORD),uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);

  v67 = v65 + 1784;
  v68 = STACK[0x758];
  LODWORD(STACK[0x164C]) = STACK[0x754];
  v69 = (v65 + 761320171) & 0xD29F2EBF;
  STACK[0x1650] = STACK[0x748];
  LODWORD(STACK[0x165C]) = STACK[0x744];
  STACK[0x1660] = STACK[0x738];
  STACK[0x1668] = STACK[0x730];
  STACK[0x1670] = STACK[0x728];
  STACK[0x1678] = STACK[0x720];
  STACK[0x1680] = STACK[0x718];
  STACK[0x1688] = STACK[0x710];
  STACK[0x1690] = STACK[0x708];
  STACK[0x1698] = STACK[0x700];
  LODWORD(STACK[0x16A4]) = STACK[0x6FC];
  STACK[0x16A8] = STACK[0x6F0];
  LODWORD(STACK[0x16B0]) = STACK[0x6EC];
  LODWORD(STACK[0x16B4]) = STACK[0x6E8];
  STACK[0x16B8] = STACK[0x6E0];
  STACK[0x16C0] = STACK[0x6D8];
  STACK[0x16C8] = STACK[0x6D0];
  LODWORD(STACK[0x16D4]) = STACK[0x6CC];
  STACK[0x16D8] = STACK[0x6C0];
  LODWORD(STACK[0x16E4]) = STACK[0x6BC];
  STACK[0x16E8] = STACK[0x6B0];
  v70 = a30(*a29, a65, LODWORD(STACK[0x6AC]));
  STACK[0x790] = STACK[0x16E8];
  LODWORD(STACK[0x79C]) = STACK[0x16E4];
  STACK[0x7A0] = STACK[0x16D8];
  LODWORD(STACK[0x7AC]) = STACK[0x16D4];
  STACK[0x7B0] = STACK[0x16C8];
  STACK[0x7B8] = STACK[0x16C0];
  STACK[0x7C0] = STACK[0x16B8];
  LODWORD(STACK[0x7C8]) = STACK[0x16B4];
  LODWORD(STACK[0x7CC]) = STACK[0x16B0];
  STACK[0x7D0] = STACK[0x16A8];
  STACK[0x7D8] = STACK[0x1698];
  STACK[0x7E0] = STACK[0x1690];
  STACK[0x7E8] = STACK[0x1688];
  STACK[0x7F0] = STACK[0x1680];
  STACK[0x7F8] = STACK[0x1678];
  STACK[0x800] = STACK[0x1670];
  STACK[0x808] = STACK[0x1668];
  STACK[0x810] = STACK[0x1660];
  LODWORD(STACK[0x81C]) = STACK[0x165C];
  STACK[0x820] = STACK[0x1650];
  LODWORD(STACK[0x828]) = STACK[0x164C];
  v71 = (uint64_t (*)(uint64_t))(*(_QWORD *)(a62 + 8 * (int)(((v69 + 1868) * (v68 == v66)) ^ v67)) - 4);
  LODWORD(STACK[0x82C]) = v68;
  return v71(v70);
}

uint64_t sub_193264348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  int v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v67[620] = a65;
  v69 = LODWORD(STACK[0x1594]) > *(_DWORD *)(a65 + 8);
  v67[100] = v66[40];
  LODWORD(STACK[0x564]) = STACK[0x1934];
  v67[102] = v66[38];
  v67[103] = v66[36];
  v70 = v66[34];
  v67[104] = v66[35];
  v67[105] = v70;
  LODWORD(STACK[0x588]) = STACK[0x1904];
  LODWORD(STACK[0x58C]) = STACK[0x1900];
  v67[107] = v66[32];
  LODWORD(STACK[0x59C]) = STACK[0x18F4];
  v67[109] = v66[30];
  v71 = v66[28];
  v67[110] = v66[29];
  v67[111] = v71;
  v72 = v66[26];
  v67[112] = v66[27];
  v67[113] = v72;
  LODWORD(STACK[0x5CC]) = STACK[0x18C4];
  v67[115] = v66[24];
  v73 = v66[22];
  v67[116] = v66[23];
  v74 = v69;
  v67[117] = v73;
  LODWORD(STACK[0x5EC]) = STACK[0x18A4];
  v67[119] = v66[20];
  LODWORD(STACK[0x5F8]) = STACK[0x1894];
  v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * (int)((v74 * ((a6 + a7 - 3408) & 0xFFFFFEF6 ^ (a6 - 2))) ^ a7))
                                                                                              - (a7 - 3102)
                                                                                              + 655);
  LODWORD(STACK[0x5FC]) = v65;
  return v75(a1, a2, a3, a4, a5, 0xC0391580E16, 3713000404);
}

void sub_19326444C()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[301] = v1[40];
  LODWORD(STACK[0xBAC]) = STACK[0x1934];
  v2[303] = v1[38];
  LODWORD(STACK[0xBBC]) = STACK[0x1924];
  v2[305] = v1[36];
  v4 = v1[34];
  v2[306] = v1[35];
  v5 = *(_QWORD *)(v3 + 8 * v0);
  v2[307] = v4;
  LODWORD(STACK[0xBD8]) = STACK[0x1904];
  LODWORD(STACK[0xBDC]) = STACK[0x1900];
  v2[309] = v1[32];
  LODWORD(STACK[0xBEC]) = STACK[0x18F4];
  v2[311] = v5;
  v6 = v1[28];
  v2[312] = v1[29];
  v2[313] = v6;
  v7 = v1[26];
  v2[314] = v1[27];
  v2[315] = v7;
  LODWORD(STACK[0xC1C]) = STACK[0x18C4];
  v2[317] = v1[20];
  LODWORD(STACK[0xC28]) = STACK[0x1894];
  LODWORD(STACK[0xC2C]) = STACK[0x1594];
  JUMPOUT(0x1932644ECLL);
}

uint64_t sub_193264658()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  v2[343] = v1[105];
  LODWORD(STACK[0xCFC]) = STACK[0x1B3C];
  v2[345] = v1[103];
  LODWORD(STACK[0xD0C]) = STACK[0x1B2C];
  v2[347] = v1[101];
  v2[348] = v1[100];
  v2[349] = v1[99];
  LODWORD(STACK[0xD28]) = STACK[0x1B0C];
  LODWORD(STACK[0xD2C]) = STACK[0x1B08];
  v2[351] = v1[97];
  LODWORD(STACK[0xD3C]) = STACK[0x1AFC];
  v2[353] = v1[106];
  v2[354] = v1[95];
  v2[355] = v1[94];
  v2[356] = v1[93];
  v2[357] = v1[92];
  LODWORD(STACK[0xD6C]) = STACK[0x1AD4];
  v2[359] = v1[88];
  v2[360] = v1[107];
  v2[361] = v1[110];
  LODWORD(STACK[0xD8C]) = v0;
  v2[363] = v1[90];
  LODWORD(STACK[0xD98]) = STACK[0x1AC4];
  LODWORD(STACK[0xD9C]) = v0;
  v3 = STACK[0xD9C];
  v4 = STACK[0xD98];
  v5 = v2[363];
  v6 = STACK[0xD8C];
  v7 = v2[361];
  v8 = v2[360];
  v9 = v2[359];
  v10 = STACK[0xD6C];
  v11 = v2[357];
  v12 = v2[356];
  v13 = v2[355];
  v14 = v2[354];
  v15 = (uint64_t (*)(void))v2[353];
  v16 = STACK[0xD3C];
  v17 = v2[351];
  v18 = STACK[0xD2C];
  v19 = STACK[0xD28];
  v20 = v2[349];
  v21 = v2[348];
  v22 = v2[347];
  v23 = STACK[0xD0C];
  v24 = v2[345];
  v25 = STACK[0xCFC];
  v26 = v2[343];
  v2[100] = v26;
  LODWORD(STACK[0x564]) = v25;
  v2[102] = v24;
  v2[103] = v22;
  v2[104] = v21;
  v2[105] = v20;
  LODWORD(STACK[0x588]) = v19;
  LODWORD(STACK[0x58C]) = v18;
  v2[107] = v17;
  LODWORD(STACK[0x59C]) = v16;
  v2[109] = v15;
  v2[110] = v14;
  v2[111] = v13;
  v2[112] = v12;
  v2[113] = v11;
  LODWORD(STACK[0x5CC]) = v10;
  v2[115] = v9;
  v2[116] = v8;
  v2[117] = v7;
  LODWORD(STACK[0x5EC]) = v6;
  v2[119] = v5;
  LODWORD(STACK[0x5F8]) = v4;
  LODWORD(STACK[0x5FC]) = v3;
  v2[257] = v26;
  LODWORD(STACK[0xA4C]) = v25;
  v2[259] = v24;
  LODWORD(STACK[0xA5C]) = v23;
  v2[261] = v22;
  v2[262] = v21;
  v2[263] = v20;
  LODWORD(STACK[0xA78]) = v19;
  LODWORD(STACK[0xA7C]) = v18;
  v2[265] = v17;
  LODWORD(STACK[0xA8C]) = v16;
  v2[267] = v15;
  v2[268] = v14;
  v2[269] = v13;
  v2[270] = v12;
  v2[271] = v11;
  LODWORD(STACK[0xABC]) = v10;
  v2[273] = v9;
  v2[274] = v8;
  v2[275] = v7;
  LODWORD(STACK[0xADC]) = v6;
  v2[277] = v5;
  LODWORD(STACK[0xAE8]) = v4;
  LODWORD(STACK[0xAEC]) = v3;
  v2[385] = v26;
  LODWORD(STACK[0xE4C]) = v25;
  v2[387] = v24;
  LODWORD(STACK[0xE5C]) = v23;
  v2[389] = v22;
  v2[390] = v21;
  v2[391] = v20;
  LODWORD(STACK[0xE78]) = v19;
  LODWORD(STACK[0xE7C]) = v18;
  v2[393] = v17;
  LODWORD(STACK[0xE8C]) = v16;
  v2[395] = v15;
  v2[396] = v14;
  v2[397] = v13;
  v2[398] = v12;
  v2[399] = v11;
  LODWORD(STACK[0xEBC]) = v10;
  v2[401] = v9;
  v2[402] = v8;
  v2[403] = v7;
  LODWORD(STACK[0xEDC]) = v6;
  v2[405] = v5;
  LODWORD(STACK[0xEEC]) = v3;
  return v15();
}

uint64_t sub_1932648C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  v14 = STACK[0xAEC];
  LODWORD(STACK[0x1A0C]) = STACK[0xAE8];
  v11[67] = v12[277];
  LODWORD(STACK[0x1A1C]) = STACK[0xADC];
  v11[69] = v12[275];
  v11[70] = v12[274];
  v11[71] = v12[273];
  LODWORD(STACK[0x1A3C]) = STACK[0xABC];
  v11[73] = v12[271];
  v11[74] = v12[270];
  v11[75] = v12[269];
  v11[76] = v12[268];
  v11[77] = v12[267];
  LODWORD(STACK[0x1A6C]) = STACK[0xA8C];
  v11[79] = v12[265];
  LODWORD(STACK[0x1A78]) = STACK[0xA7C];
  LODWORD(STACK[0x1A7C]) = STACK[0xA78];
  v15 = v12[263];
  v11[81] = v15;
  v16 = v12[262];
  v11[82] = v16;
  v17 = v12[261];
  v11[83] = v17;
  v18 = STACK[0xA5C];
  LODWORD(STACK[0x1A9C]) = STACK[0xA5C];
  v19 = v12[259];
  v11[85] = v19;
  v20 = STACK[0xA4C];
  LODWORD(STACK[0x1AAC]) = STACK[0xA4C];
  v21 = v12[257];
  v11[87] = v21;
  v12[279] = v21;
  LODWORD(STACK[0xAFC]) = v20;
  v12[281] = v19;
  LODWORD(STACK[0xB0C]) = v18;
  v12[283] = v17;
  v12[284] = v16;
  v12[285] = v15;
  LODWORD(STACK[0xB28]) = STACK[0x1A7C];
  LODWORD(STACK[0xB2C]) = STACK[0x1A78];
  v12[287] = v11[79];
  LODWORD(STACK[0xB3C]) = STACK[0x1A6C];
  v12[289] = v11[77];
  v12[290] = v11[76];
  v12[291] = v11[75];
  v12[292] = v11[74];
  v12[293] = v11[73];
  LODWORD(STACK[0xB6C]) = STACK[0x1A3C];
  v12[295] = v11[71];
  v12[296] = v11[70];
  v12[297] = v11[69];
  LODWORD(STACK[0xB8C]) = STACK[0x1A1C];
  v12[299] = v11[67];
  LODWORD(STACK[0xB98]) = STACK[0x1A0C];
  v22 = (uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((827 * (v14 == v10)) ^ (v9 + v8 + 3457)))
                          - ((v8 - a8 + 3457) ^ 0xDE9));
  LODWORD(STACK[0xB9C]) = v14;
  return v22();
}

#error "193264D40: call analysis failed (funcsize=180)"

uint64_t sub_193264D44()
{
  int v0;
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  v6 = STACK[0xEEC];
  v3[135] = v4[405];
  LODWORD(STACK[0x1C3C]) = STACK[0xEDC];
  v3[137] = v4[403];
  v3[138] = v4[402];
  v3[139] = v4[401];
  LODWORD(STACK[0x1C5C]) = STACK[0xEBC];
  v3[141] = v4[399];
  v3[142] = v4[398];
  v3[143] = v4[397];
  v3[144] = v4[396];
  v3[145] = v4[395];
  LODWORD(STACK[0x1C8C]) = STACK[0xE8C];
  v3[147] = v4[393];
  LODWORD(STACK[0x1C98]) = STACK[0xE7C];
  LODWORD(STACK[0x1C9C]) = STACK[0xE78];
  v7 = v4[391];
  v3[149] = v7;
  v8 = v4[390];
  v3[150] = v8;
  v9 = v4[389];
  v3[151] = v9;
  v10 = STACK[0xE5C];
  LODWORD(STACK[0x1CBC]) = STACK[0xE5C];
  v11 = v4[387];
  v3[153] = v11;
  v12 = STACK[0xE4C];
  LODWORD(STACK[0x1CCC]) = STACK[0xE4C];
  v13 = v4[385];
  v3[155] = v13;
  v4[407] = v13;
  LODWORD(STACK[0xEFC]) = v12;
  v4[409] = v11;
  LODWORD(STACK[0xF0C]) = v10;
  v4[411] = v9;
  v4[412] = v8;
  v4[413] = v7;
  LODWORD(STACK[0xF28]) = STACK[0x1C9C];
  LODWORD(STACK[0xF2C]) = STACK[0x1C98];
  v4[415] = v3[147];
  LODWORD(STACK[0xF3C]) = STACK[0x1C8C];
  v4[417] = v3[145];
  v4[418] = v3[144];
  v4[419] = v3[143];
  v4[420] = v3[142];
  v4[421] = v3[141];
  LODWORD(STACK[0xF6C]) = STACK[0x1C5C];
  v4[423] = v3[139];
  v4[424] = v3[138];
  v4[425] = v3[137];
  LODWORD(STACK[0xF8C]) = STACK[0x1C3C];
  v4[427] = v3[135];
  LODWORD(STACK[0xF98]) = v6;
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v6 == v2) * (((v1 + v0 + 305) | 6) - 352)) ^ (v1 + v0 + 1260)))
                          - 8);
  LODWORD(STACK[0xF9C]) = v6;
  return v14();
}

uint64_t sub_193264EC8()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  _DWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);

  v6 = (v0 - 956709528) & 0x39063FFC;
  v7 = (uint64_t *)v2[144];
  v8 = (_DWORD *)v2[141];
  v9 = STACK[0x1C9C];
  v10 = STACK[0x1C9C];
  v11 = ((v9 & 0x96455FB5) << ((v0 + 104) & 0xFC ^ 0xFD)) & (v9 ^ 0x17145F31) ^ v9 & 0x96455FB5;
  v12 = ((2 * (v9 ^ 0x1F1CE753)) ^ 0x12B371CC) & (v9 ^ 0x1F1CE753) ^ (2 * (v9 ^ 0x1F1CE753)) & 0x8959B8E6;
  v13 = v12 ^ 0x89488822;
  v14 = (v12 ^ 0x5130C4) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x2566E398) & v13 ^ (4 * v13) & 0x8959B8E4;
  v16 = (v15 ^ 0x140A080) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x88191866)) ^ 0x959B8E60) & (v15 ^ 0x88191866) ^ (16 * (v15 ^ 0x88191866)) & 0x8959B8E0;
  v18 = v16 ^ 0x8959B8E6 ^ (v17 ^ 0x81198800) & (v16 << 8);
  v19 = *v7;
  v20 = LODWORD(STACK[0x1C9C]) ^ (2
                                * ((v18 << 16) & 0x9590000 ^ v18 ^ ((v18 << 16) ^ 0x38E60000) & (((v17 ^ 0x8403086) << 8) & 0x9590000 ^ 0x410000 ^ (((v17 ^ 0x8403086) << 8) ^ 0x59B80000) & (v17 ^ 0x8403086))));
  v21 = ((2 * *v8) & 0x7F17FBF8) + (*v8 ^ 0x3F8BFDFC) - 1066139132;
  *(_BYTE *)(*v7 + v21) = HIBYTE(v20) ^ 0x94;
  *(_BYTE *)(v19 + v21 + 1) = BYTE2(v20) ^ 0x76;
  *(_BYTE *)(v19 + v21 + 2) = (((BYTE1(v20) ^ 0x2E) - 2 * ((BYTE1(v20) ^ 0x2E) & 3) + 11) ^ 3) - 8;
  *(_BYTE *)(v19 + v21 + 3) = v20 ^ 0x79;
  v22 = (*v8 + 4);
  *v8 = v22;
  v23 = *v7;
  v24 = (v22 ^ 0x4B1F67ADBCB25D6ELL) - 0x454614D2EE70E3F0 + ((2 * v22) & 0x17964BADCLL);
  v25 = v2[142];
  v26 = (v25 ^ 0xFD47886D38CD0BA7) & (2 * (v25 & 0xFC57A969A0CE2BB4)) ^ v25 & 0xFC57A969A0CE2BB4;
  v27 = *(_QWORD *)(v5 + 8 * v0);
  v3[496] = v2[155];
  v28 = ((2 * (v25 ^ 0x3DCCC86C79410BEFLL)) ^ 0x8336C20BB31E40B6) & (v25 ^ 0x3DCCC86C79410BEFLL) ^ (2 * (v25 ^ 0x3DCCC86C79410BEFLL)) & 0x419B6105D98F205ALL;
  LODWORD(STACK[0x11C4]) = STACK[0x1CCC];
  v3[498] = v2[153];
  v29 = v28 ^ 0x4089210448812049;
  v30 = (v28 ^ 0x8112400181080010) & (4 * v26) ^ v26;
  LODWORD(STACK[0x11D4]) = STACK[0x1CBC];
  v3[500] = v2[151];
  v3[501] = v2[150];
  v31 = ((4 * v29) ^ 0x66D8417663C816CLL) & v29 ^ (4 * v29) & 0xC19B6105D98F2058;
  v3[502] = v2[149];
  LODWORD(STACK[0x11F0]) = v10;
  v32 = (v31 ^ 0x90005400C0040) & (16 * v30) ^ v30;
  LODWORD(STACK[0x11F4]) = STACK[0x1C98];
  v3[504] = v2[147];
  LODWORD(STACK[0x1204]) = STACK[0x1C8C];
  v33 = ((16 * (v31 ^ 0xC192610099832013)) ^ 0x19B6105D98F205B0) & (v31 ^ 0xC192610099832013) ^ (16 * (v31 ^ 0xC192610099832013)) & 0xC19B6105D98F2050;
  v3[506] = v2[145];
  v3[507] = v2[144];
  v3[508] = v2[143];
  v3[509] = v27 - 12;
  v3[510] = v2[142];
  v3[511] = v2[141];
  v34 = (((v33 ^ 0xC0096100410D204BLL) << 8) ^ 0x9B6105D98F205B00) & (v33 ^ 0xC0096100410D204BLL) ^ ((v33 ^ 0xC0096100410D204BLL) << 8) & 0xC19B6105D98F2000;
  LODWORD(STACK[0x123C]) = STACK[0x1C5C];
  v3[513] = v2[139];
  v3[514] = v2[138];
  v3[515] = v2[137];
  LODWORD(STACK[0x125C]) = STACK[0x1C3C];
  v3[517] = v2[135];
  LODWORD(STACK[0x126C]) = v1;
  v3[519] = v23;
  v3[520] = v24;
  v3[521] = v2[149];
  v3[522] = v25 ^ (2
                 * (v34 & 0x4105000B00000000 ^ (v33 ^ 0x192000598820000) & (v32 << 8) ^ v32 ^ (v34 ^ 0x101010189000000) & (((v33 ^ 0x192000598820000) & (v32 << 8) ^ v32) << 16))) ^ 0x57FD82725E5A3D1;
  v2[205] = v3[522];
  v2[206] = v3[521];
  v2[207] = v3[520];
  v2[208] = v3[519];
  LODWORD(STACK[0x1E84]) = STACK[0x126C];
  v2[210] = v3[517];
  LODWORD(STACK[0x1E94]) = STACK[0x125C];
  v2[212] = v3[515];
  v2[213] = v3[514];
  v2[214] = v3[513];
  LODWORD(STACK[0x1EB4]) = STACK[0x123C];
  v2[216] = v3[511];
  v2[217] = v3[510];
  v2[218] = v3[508];
  v2[219] = v3[507];
  v2[220] = v3[506];
  LODWORD(STACK[0x1EE4]) = STACK[0x1204];
  v2[222] = v3[504];
  LODWORD(STACK[0x1EF0]) = STACK[0x11F4];
  LODWORD(STACK[0x1EF4]) = STACK[0x11F0];
  v2[224] = v3[502];
  v2[225] = v3[501];
  v2[226] = v3[500];
  LODWORD(STACK[0x1F14]) = STACK[0x11D4];
  v2[228] = v3[498];
  *(_DWORD *)(v4 - 252) = STACK[0x11C4];
  LODWORD(v24) = v2[206] > (unint64_t)(v2[208] + v2[207] - 0x5D952DACE41797ELL);
  v35 = v3[509];
  v2[230] = v3[496];
  v36 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                             + 8 * (int)((v24 * (((v6 - 756) | 0x86) ^ 0x561)) ^ v6))
                                                 - (((v6 + 773) | 0x188u) ^ 0xB8DLL));
  v2[231] = v35;
  return v36(0x1EFF41E7ALL, 0x767A3EBDF7FA0F3DLL);
}

uint64_t sub_1932658F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v11 = LODWORD(STACK[0x1E60]) ^ 0x852B8865;
  *(_DWORD *)(v9 - 228) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8 * ((55 * (((v11 == 0) ^ (a8 + v8 + 3 - 1)) & 1)) ^ v8))
                            - 12))();
}

uint64_t sub_19326594C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;

  v65[233] = v65[207] - 0x5D946D73CE977DALL + ((v64 - 2938) | 0x860u);
  v65[234] = *(unsigned int *)(v66 - 228);
  return (*(uint64_t (**)(void))(v67 + 8 * ((73 * (a64 == 3)) ^ v64)))();
}

uint64_t sub_1932659A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v8 + 4528) = 0;
  v10 = v7[234] - 1;
  *(_BYTE *)(v7[204] + v7[233] - 0xC0391580E16) = *(_BYTE *)(v7[203] + a6 - 0xC0391580E16);
  return (*(uint64_t (**)(void))(v9 + 8 * ((50 * (v10 != 0)) ^ (v6 - 1906))))();
}

uint64_t sub_193265A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)(v9 + (v14 & a7) + (v13 ^ a2) + v8) = *(_BYTE *)(v7 + (v14 & a7) + (v13 ^ a2) + a6);
  return (*(uint64_t (**)(void))(v15 + 8 * (((v10 != v13) * v12) ^ v11)))();
}

uint64_t sub_193265A54@<X0>(char a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)(v60 + 4528) = v58;
  return (*(uint64_t (**)(void))(v61
                              + 8 * (((a58 == 3) ^ (15 * (a2 ^ (a1 - 83)))) & 1 | (v59 + a2 + 3292))))();
}

uint64_t sub_193265A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  uint64_t v65;

  return ((uint64_t (*)(void))(733649650
                            - (a8 + v64 - 3090)
                            + *(_QWORD *)(v65 + 8 * ((220 * (a64 != 2)) ^ v64))
                            - 4))();
}

uint64_t sub_193265A98@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 4184) = 0;
  v6 = v3[234] - 1;
  *(_BYTE *)(v3[208] + v3[233] - 0xC0391580E16) = *(_BYTE *)(v3[206] + a1 - 0xC0391580E16);
  return (*(uint64_t (**)(void))(v5 + 8 * ((478 * (v6 == 0)) ^ (v2 + a2 + 2716))))();
}

uint64_t sub_193265B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)(v9 + (v14 & a7) + (v13 ^ a2) + v8) = *(_BYTE *)(v7 + (v14 & a7) + (v13 ^ a2) + a6);
  return (*(uint64_t (**)(void))(v15 + 8 * (((v10 == v13) * v12) ^ v11)))();
}

uint64_t sub_193265B44@<X0>(char a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)(v60 + 4184) = v58;
  return (*(uint64_t (**)(void))(v61
                              + 8 * (((a58 == 3) ^ (15 * (a2 ^ (a1 - 83)))) & 1 | (v59 + a2 + 3292))))();
}

uint64_t sub_193265B4C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 4432) = 0;
  v6 = v3[234] - 1;
  *(_BYTE *)(v3[204] + v3[233] - 0xC0391580E16) = *(_BYTE *)(v3[203] + a1 - 0xC0391580E16);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1338 * (v6 == 0)) ^ (v2 + a2 + 2413))))();
}

uint64_t sub_193265BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)(v9 + (v14 & a7) + (v13 ^ a2) + v8) = *(_BYTE *)(v7 + (v14 & a7) + (v13 ^ a2) + a6);
  return (*(uint64_t (**)(void))(v15 + 8 * (((v10 == v13) * v12) ^ v11)))();
}

uint64_t sub_193265BF8@<X0>(char a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)(v60 + 4432) = v58;
  return (*(uint64_t (**)(void))(v61
                              + 8 * (((a58 == 3) ^ (15 * (a2 ^ (a1 - 83)))) & 1 | (v59 + a2 + 3292))))();
}

void sub_193265C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t a68;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;

  *(_DWORD *)(a68 + 8) = a65;
  *(_DWORD *)(a68 + 12) = 0;
  v69[121] = v68[230];
  LODWORD(STACK[0x60C]) = *(_DWORD *)(v70 - 252);
  v69[123] = v68[228];
  LODWORD(STACK[0x61C]) = STACK[0x1F14];
  v69[125] = v68[226];
  v69[126] = v68[224];
  LODWORD(STACK[0x630]) = STACK[0x1EF4];
  LODWORD(STACK[0x634]) = STACK[0x1EF0];
  v69[128] = v68[222];
  LODWORD(STACK[0x644]) = STACK[0x1EE4];
  v69[130] = v68[220];
  v69[131] = v68[219];
  v69[132] = v68[218];
  v69[133] = v68[217];
  v69[134] = v68[216];
  v69[135] = v68[214];
  v69[136] = v68[213];
  v69[137] = v68[212];
  LODWORD(STACK[0x68C]) = STACK[0x1E94];
  v69[139] = v68[210];
  LODWORD(STACK[0x69C]) = STACK[0x1E84];
  v69[141] = a68;
  v71 = v69[141];
  v72 = STACK[0x69C];
  v73 = v69[139];
  v74 = STACK[0x68C];
  v75 = v69[137];
  v76 = v69[136];
  v77 = v69[135];
  v78 = v69[134];
  v79 = v69[133];
  v80 = v69[132];
  v81 = v69[131];
  v82 = v69[130];
  v83 = STACK[0x644];
  v84 = v69[128];
  v85 = STACK[0x634];
  v86 = STACK[0x630];
  v87 = v69[126];
  v88 = v69[125];
  v89 = STACK[0x61C];
  v90 = v69[123];
  v91 = STACK[0x60C];
  v92 = v69[121];
  LODWORD(STACK[0x6AC]) = a65;
  v69[143] = v92;
  LODWORD(STACK[0x6BC]) = v91;
  v69[145] = v90;
  LODWORD(STACK[0x6CC]) = v89;
  v69[147] = v88;
  v69[148] = v71;
  v69[149] = v87;
  LODWORD(STACK[0x6E8]) = v86;
  LODWORD(STACK[0x6EC]) = v85;
  v69[151] = v84;
  LODWORD(STACK[0x6FC]) = v83;
  v69[153] = v82;
  v69[154] = v81;
  v69[155] = v80;
  v69[156] = v79;
  v69[157] = v78;
  v69[158] = v77;
  v69[159] = v76;
  v69[160] = v75;
  LODWORD(STACK[0x744]) = v74;
  v69[162] = v73;
  LODWORD(STACK[0x754]) = v72;
  LODWORD(STACK[0x758]) = v89;
  JUMPOUT(0x193265D98);
}

uint64_t sub_193265F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v75;

  v71 = *(_QWORD *)(v70 + 8 * v68) + (v68 + 2793) - 3328;
  v72 = v67[657];
  *(_BYTE *)v69 = v72 == 0;
  *(_QWORD *)(v69 + 1) = v72 + 12;
  *(_QWORD *)(v69 + 9) = v72 + 8;
  LODWORD(a57) = v72 != 0;
  LODWORD(STACK[0x75C]) = STACK[0x16E4];
  v67[165] = v71;
  v73 = v67[650];
  STACK[0x768] = v73;
  STACK[0x770] = (unint64_t)&a67;
  *(_QWORD *)(v69 + 17) = v73;
  v75 = STACK[0x760];
  LODWORD(a54) = STACK[0x75C];
  LODWORD(STACK[0x1714]) = STACK[0x75C];
  LODWORD(a52) = STACK[0x16D4];
  LODWORD(a49) = STACK[0x16B4];
  LODWORD(a48) = STACK[0x16B0];
  LODWORD(a39) = STACK[0x165C];
  LODWORD(a37) = STACK[0x164C];
  return ((uint64_t (*)(BOOL, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unint64_t, char *, unint64_t))(*(_QWORD *)(a62 + 8 * (int)((((v68 + 539004427) | 0xB9A0AE0) - 733647556) | (8 * a57))) - 2 * ((((_DWORD)v68 + 539004427) | 0xB9A0AE0) ^ 0x2BBA9EEFu) + 2090))(v72 != 0, STACK[0x820], STACK[0x7B8], STACK[0x7A0], STACK[0x810], LODWORD(STACK[0x81C]), 101330305, STACK[0x7F8], a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           *(_QWORD *)(v69 + 9),
           a32,
           *(_QWORD *)(v69 + 1),
           a34,
           LODWORD(STACK[0x1D9C]),
           STACK[0x790],
           a37,
           STACK[0x1650],
           a39,
           STACK[0x1660],
           STACK[0x1668],
           STACK[0x1670],
           STACK[0x1678],
           STACK[0x1680],
           STACK[0x1690],
           STACK[0x1698],
           STACK[0x16A8],
           a48,
           a49,
           STACK[0x16B8],
           STACK[0x16C8],
           a52,
           STACK[0x16D8],
           a54,
           STACK[0x16E8],
           v73,
           a57,
           STACK[0x16C0],
           &a67,
           v75);
}

uint64_t sub_193266124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int *a31,uint64_t a32,unsigned int *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  unint64_t v63;
  unint64_t v64;
  _BOOL4 v65;
  BOOL v66;
  int v67;
  int v68;
  int v69;
  uint64_t (*v70)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v63 = (*a33 ^ 0xEDDC5E7FFF7E5D8ELL)
      + 0x1223A18040EB297BLL
      + (((unint64_t)*a33 << ((v62 - 60) ^ 0xF7u)) & 0x1FEFCBB1CLL);
  v64 = (*a31 ^ 0xCFBE6F18D76BDDBFLL) + 0x304190E768FDA946 + ((2 * *a31) & 0x1AED7BB7ELL);
  v65 = v63 < 0x40698705;
  v66 = v63 > v64;
  v67 = v65 ^ (v64 < 0x40698705);
  v68 = v66;
  if (v67)
    v69 = v65;
  else
    v69 = v68;
  v70 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * ((860 * (v69 ^ 1)) ^ v62)) - 8);
  return v70(v70, a2, a3, a4, a5, a6, 101330305, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_19326622C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,_QWORD *a58,_DWORD *a59,uint64_t (*a60)(void))
{
  char v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;

  v61 = ((2 * a35) & 0x7F8F7FE6) + (a35 ^ 0xBFC7BFF3) + 1077428237;
  v62 = *(unsigned __int8 *)(*a58 + v61);
  v63 = ((v62 << 24) - (v62 << (v60 - 25)) - 0x1000000) | (*(unsigned __int8 *)(*a58 + v61 + 1) << 16);
  v64 = *(unsigned __int8 *)(*a58 + v61 + 2);
  v65 = (((v64 + 4420934 - ((2 * v64) & 0x4C)) << 8) - 0x2000) ^ 0x43752600;
  v66 = *(unsigned __int8 *)(*a58 + v61 + 3);
  v67 = ((v63 | v65) ^ 0x5A6FFF) & ((v66 - 1636428685 - ((2 * v66) & 0xE6)) ^ 0x82C7F04) ^ (v63 | v65) & 0x69A59400;
  v68 = (v67 & 0x324D5387 ^ 0x12494387) + (v67 ^ 0x28A41408) - ((v67 ^ 0x28A41408) & 0x324D5387);
  *a59 = (((v68 ^ 0x1FBDF440) - 789305555) ^ ((v68 ^ 0x7B8AD7DE) - 1262287693) ^ ((v68 ^ 0x81840F66) + 1322114059))
       - 619719546;
  *a33 += 4;
  return a60();
}

uint64_t sub_1932663CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  int v63;
  int v64;

  return (*(uint64_t (**)(void))(a63
                              + 8
                              * (int)(((((v64 + a62 + 2705) ^ 0x75CEA69A) + (a62 ^ 0xA18BF581)) * v63) ^ (v64 + a62 + 2705))))();
}

uint64_t sub_193266448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int v67;
  int v68;
  uint64_t v69;
  _BOOL4 v70;

  v70 = a67 == ((v68 - v67 - 1812247944) & 0xCA7B7F77) + 2077844644;
  return (*(uint64_t (**)(void))(v69 + 8 * ((v70 | (4 * v70)) ^ v68)))();
}

void sub_1932664E8()
{
  JUMPOUT(0x1932660E4);
}

uint64_t sub_193266510(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, int a6, int a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,unint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unint64_t a59,unint64_t a60,int a61,int a62,uint64_t a63)
{
  int v63;
  int v64;
  unint64_t v65;
  int v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  unint64_t v76;
  int v77;
  unint64_t v78;

  STACK[0xFA8] = a59;
  STACK[0x1D88] = a59;
  STACK[0xFA0] = a60;
  STACK[0x1D90] = a60;
  LODWORD(STACK[0x1D9C]) = a35;
  LODWORD(STACK[0xFB4]) = a7;
  LODWORD(STACK[0x1DA0]) = a7;
  STACK[0x790] = a36;
  LODWORD(STACK[0x79C]) = v71;
  STACK[0x7A0] = a4;
  LODWORD(STACK[0x7AC]) = v75;
  STACK[0x7B0] = v72;
  STACK[0x7B8] = a3;
  STACK[0x7C0] = v65;
  LODWORD(STACK[0x7C8]) = v66;
  LODWORD(STACK[0x7CC]) = v67;
  STACK[0x7D0] = v76;
  STACK[0x7D8] = v68;
  STACK[0x7E0] = v69;
  STACK[0x7E8] = v78;
  STACK[0x7F0] = v70;
  STACK[0x7F8] = a8;
  STACK[0x800] = v73;
  STACK[0x808] = v74;
  STACK[0x810] = a5;
  LODWORD(STACK[0x81C]) = a6;
  STACK[0x820] = a2;
  LODWORD(STACK[0x828]) = v77;
  LODWORD(STACK[0x82C]) = v64;
  return ((uint64_t (*)(void))(*(_QWORD *)(a63 + 8 * ((a62 - 733646821) | (100 * (v63 ^ 1)))) - 8))();
}

void sub_1932665DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_QWORD *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a66;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;

  *a32 = (a66 - 101372955);
  v70 = *(_QWORD *)(v66 + 8 * (v68 + v67 + 407));
  LODWORD(STACK[0x75C]) = STACK[0x1DA0];
  *(_QWORD *)(v69 + 1320) = (((v68 + v67 + 3188) | 0x20u) ^ 0xFFFFFFFFFFFFF308) + v70;
  JUMPOUT(0x193265FB0);
}

uint64_t sub_193266648(int a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, int a6, int a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unint64_t a59,unint64_t a60)
{
  char v60;
  int v61;
  unint64_t v62;
  int v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  uint64_t v73;
  unint64_t v74;
  int v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  unint64_t v83;
  uint64_t (*v84)(void);

  STACK[0xFA0] = a60;
  STACK[0xFA8] = a59;
  STACK[0x1D88] = a59;
  STACK[0x1D90] = a60;
  LOBYTE(STACK[0xFB3]) = v60;
  LODWORD(STACK[0xFB4]) = a7;
  LODWORD(STACK[0x1D9C]) = a35;
  LODWORD(STACK[0x1DA0]) = a7;
  LOBYTE(STACK[0x1DA7]) = v60;
  STACK[0x790] = a55;
  LODWORD(STACK[0x79C]) = v68;
  STACK[0x7A0] = a4;
  LODWORD(STACK[0x7AC]) = v72;
  STACK[0x7B0] = v69;
  STACK[0x7B8] = a3;
  STACK[0x7C0] = v62;
  LODWORD(STACK[0x7C8]) = v63;
  LODWORD(STACK[0x7CC]) = v64;
  STACK[0x7D0] = v74;
  STACK[0x7D8] = v65;
  STACK[0x7E0] = v66;
  STACK[0x7E8] = v76;
  STACK[0x7F0] = v67;
  STACK[0x7F8] = a8;
  STACK[0x800] = v70;
  STACK[0x808] = v71;
  STACK[0x810] = a5;
  LODWORD(STACK[0x81C]) = a6;
  STACK[0x820] = a2;
  LODWORD(STACK[0x828]) = v75;
  LODWORD(STACK[0x82C]) = v61;
  LODWORD(STACK[0x1740]) = STACK[0x82C];
  LODWORD(STACK[0x1744]) = STACK[0x828];
  STACK[0x1748] = STACK[0x820];
  LODWORD(STACK[0x1754]) = STACK[0x81C];
  STACK[0x1758] = STACK[0x810];
  STACK[0x1760] = STACK[0x808];
  STACK[0x1768] = STACK[0x800];
  STACK[0x1770] = STACK[0x7F8];
  STACK[0x1778] = STACK[0x7F0];
  STACK[0x1780] = STACK[0x7E8];
  STACK[0x1788] = STACK[0x7E0];
  STACK[0x1790] = STACK[0x7D8];
  STACK[0x1798] = STACK[0x7D0];
  LODWORD(STACK[0x17A0]) = STACK[0x7CC];
  LODWORD(STACK[0x17A4]) = STACK[0x7C8];
  v77 = STACK[0x7C0];
  STACK[0x17A8] = STACK[0x7C0];
  v78 = STACK[0x7B8];
  STACK[0x17B0] = STACK[0x7B8];
  v79 = STACK[0x7B0];
  STACK[0x17B8] = STACK[0x7B0];
  v80 = STACK[0x7AC];
  LODWORD(STACK[0x17C4]) = STACK[0x7AC];
  v81 = STACK[0x7A0];
  STACK[0x17C8] = STACK[0x7A0];
  v82 = STACK[0x79C];
  LODWORD(STACK[0x17D4]) = STACK[0x79C];
  v83 = STACK[0x790];
  STACK[0x17D8] = STACK[0x790];
  STACK[0x830] = v83;
  LODWORD(STACK[0x83C]) = v82;
  STACK[0x840] = v81;
  LODWORD(STACK[0x84C]) = v80;
  STACK[0x850] = v79;
  STACK[0x858] = v77;
  LODWORD(STACK[0x860]) = STACK[0x17A4];
  LODWORD(STACK[0x864]) = STACK[0x17A0];
  STACK[0x868] = STACK[0x1798];
  LODWORD(STACK[0x874]) = STACK[0x1740];
  STACK[0x878] = STACK[0x1790];
  STACK[0x880] = STACK[0x1788];
  STACK[0x888] = STACK[0x1780];
  STACK[0x890] = STACK[0x1778];
  STACK[0x898] = STACK[0x1770];
  STACK[0x8A0] = STACK[0x1768];
  STACK[0x8A8] = STACK[0x1760];
  STACK[0x8B0] = STACK[0x1758];
  LODWORD(STACK[0x8BC]) = STACK[0x1754];
  STACK[0x8C0] = STACK[0x1748];
  v84 = (uint64_t (*)(void))(733649650
                          - ((a1 - 1513518209) & 0xFBBF9FFF)
                          + *(_QWORD *)(v73
                                      + 8 * (((v78 == 0) * (((a1 + 1976471821) | 0x121) ^ 0x1E9)) ^ (a1 + 1976473625)))
                          - 8);
  LODWORD(STACK[0x8C8]) = STACK[0x1744];
  return v84();
}

void sub_19326707C()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  v4 = v0 + 995;
  v2[432] = *(_QWORD *)(v1 + 225);
  LODWORD(STACK[0xFC0]) = STACK[0x17D4];
  LODWORD(STACK[0xFC4]) = v0;
  v2[434] = *(_QWORD *)(v1 + 209);
  LODWORD(STACK[0xFD4]) = STACK[0x17C4];
  v2[436] = *(_QWORD *)(v1 + 193);
  v2[437] = *(_QWORD *)(v1 + 177);
  LODWORD(STACK[0xFE8]) = STACK[0x17A4];
  LODWORD(STACK[0xFEC]) = STACK[0x17A0];
  v2[439] = *(_QWORD *)(v1 + 161);
  LODWORD(STACK[0xFFC]) = STACK[0x1740];
  v2[441] = *(_QWORD *)(v1 + 153);
  v2[442] = *(_QWORD *)(v1 + 145);
  v2[443] = *(_QWORD *)(v1 + 137);
  v2[444] = *(_QWORD *)(v1 + 129);
  v2[445] = *(_QWORD *)(v1 + 121);
  v2[446] = *(_QWORD *)(v1 + 113);
  v2[447] = *(_QWORD *)(v1 + 105);
  v2[448] = *(_QWORD *)(v1 + 97);
  LODWORD(STACK[0x1044]) = STACK[0x1754];
  v2[450] = *(_QWORD *)(v1 + 81);
  LODWORD(STACK[0x1054]) = STACK[0x1744];
  v5 = *(_QWORD *)(v1 + 185);
  v2[452] = v5;
  v6 = STACK[0x1054];
  v7 = v2[450];
  v8 = STACK[0x1044];
  v9 = v2[448];
  v10 = v2[447];
  v11 = v2[446];
  v12 = v2[445];
  v13 = v2[444];
  v14 = v2[443];
  v15 = v2[442];
  v16 = v2[441];
  v17 = STACK[0xFFC];
  v18 = v2[439];
  v19 = STACK[0xFEC];
  v20 = STACK[0xFE8];
  v21 = v2[437];
  v22 = v2[436];
  v23 = STACK[0xFD4];
  v24 = v2[434];
  v25 = STACK[0xFC0];
  v26 = v2[432];
  v2[453] = *(_QWORD *)(v3 + 8 * SLODWORD(STACK[0xFC4])) + ((v4 - 322) ^ 0xFFFFFFFFFFFFFBBELL);
  v2[454] = v5;
  LODWORD(STACK[0x1074]) = v6;
  v2[456] = v7;
  LODWORD(STACK[0x1084]) = v8;
  v2[458] = v9;
  v2[459] = v10;
  v2[460] = v11;
  v2[461] = v12;
  v2[462] = v13;
  v2[463] = v14;
  v2[464] = v15;
  v2[465] = v16;
  LODWORD(STACK[0x10CC]) = v17;
  v2[467] = v18;
  LODWORD(STACK[0x10D8]) = v19;
  LODWORD(STACK[0x10DC]) = v20;
  v2[469] = v21;
  v2[470] = v22;
  LODWORD(STACK[0x10F4]) = v23;
  v2[472] = v24;
  LODWORD(STACK[0x1104]) = v25;
  v2[474] = v26;
  JUMPOUT(0x193267394);
}

uint64_t sub_1932674A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void (*a34)(void))
{
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t (*v58)(void);

  ((void (*)(_QWORD))a34)(v34[204]);
  v36 = (_QWORD *)v34[202];
  *v36 = 0;
  v36[1] = 0;
  a34();
  v35[475] = v34[203];
  LODWORD(STACK[0x111C]) = STACK[0x1E44];
  v35[477] = v34[200];
  LODWORD(STACK[0x112C]) = STACK[0x1E34];
  v35[479] = v34[198];
  v35[480] = v34[197];
  v35[481] = v34[196];
  v35[482] = v34[195];
  v35[483] = v34[194];
  v35[484] = v34[193];
  v35[485] = v34[192];
  v35[486] = v34[191];
  LODWORD(STACK[0x1174]) = STACK[0x1DEC];
  v35[488] = v34[189];
  LODWORD(STACK[0x1180]) = STACK[0x1DDC];
  LODWORD(STACK[0x1184]) = STACK[0x1DD8];
  v35[490] = v34[187];
  v35[491] = v34[186];
  LODWORD(STACK[0x119C]) = STACK[0x1DC4];
  v35[493] = v34[184];
  LODWORD(STACK[0x11AC]) = STACK[0x1DB4];
  v35[495] = v34[182];
  v37 = v35[495];
  v38 = STACK[0x11AC];
  v39 = v35[493];
  v40 = STACK[0x119C];
  v41 = v35[491];
  v42 = v35[490];
  v43 = STACK[0x1184];
  v44 = STACK[0x1180];
  v45 = v35[488];
  v46 = STACK[0x1174];
  v47 = v35[486];
  v48 = v35[485];
  v49 = v35[484];
  v50 = v35[483];
  v51 = v35[482];
  v52 = v35[481];
  v53 = v35[480];
  v54 = v35[479];
  v55 = STACK[0x112C];
  v56 = v35[477];
  v57 = STACK[0x111C];
  v58 = (uint64_t (*)(void))v35[475];
  v35[121] = v37;
  LODWORD(STACK[0x60C]) = v38;
  v35[123] = v39;
  LODWORD(STACK[0x61C]) = v40;
  v35[125] = v41;
  v35[126] = v42;
  LODWORD(STACK[0x630]) = v43;
  LODWORD(STACK[0x634]) = v44;
  v35[128] = v45;
  LODWORD(STACK[0x644]) = v46;
  v35[130] = v47;
  v35[131] = v48;
  v35[132] = v49;
  v35[133] = v50;
  v35[134] = v51;
  v35[135] = v52;
  v35[136] = v53;
  v35[137] = v54;
  LODWORD(STACK[0x68C]) = v55;
  v35[139] = v56;
  LODWORD(STACK[0x69C]) = v57;
  v35[141] = 0;
  v35[191] = v37;
  LODWORD(STACK[0x83C]) = v38;
  v35[193] = v39;
  LODWORD(STACK[0x84C]) = v40;
  v35[195] = v41;
  v35[196] = v42;
  LODWORD(STACK[0x860]) = v43;
  LODWORD(STACK[0x864]) = v44;
  v35[198] = v45;
  LODWORD(STACK[0x874]) = v46;
  v35[200] = v47;
  v35[201] = v48;
  v35[202] = v49;
  v35[203] = v50;
  v35[204] = v51;
  v35[205] = v52;
  v35[206] = v53;
  v35[207] = v54;
  LODWORD(STACK[0x8BC]) = v55;
  v35[209] = v56;
  LODWORD(STACK[0x8C8]) = v57;
  LODWORD(STACK[0x8CC]) = v46;
  return v58();
}

void sub_193267690()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_193267698()
{
  JUMPOUT(0x193264610);
}

uint64_t sub_1932676A0@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 2560) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v1 ^ (7421 * (v2 > a1))))
                            - ((v1 + 1673539085) & 0x9C3FCC27)
                            - ((v1 - 1836578811) & 0x6D77EE5F ^ 0xFFFFFFFFFFFFF3B2)))();
}

uint64_t sub_193267700@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t (*v7)(void);

  v3[343] = *(_QWORD *)(v2 + 840);
  v5 = (a1 - 335571239) & 0x3FBAFBF7;
  LODWORD(STACK[0xCFC]) = STACK[0x1B3C];
  v3[345] = *(_QWORD *)(v2 + 824);
  LODWORD(STACK[0xD0C]) = STACK[0x1B2C];
  v3[347] = *(_QWORD *)(v2 + 808);
  v3[348] = *(_QWORD *)(v2 + 800);
  v3[349] = *(_QWORD *)(v2 + 792);
  LODWORD(STACK[0xD28]) = STACK[0x1B0C];
  LODWORD(STACK[0xD2C]) = STACK[0x1B08];
  v3[351] = *(_QWORD *)(v2 + 776);
  LODWORD(STACK[0xD3C]) = STACK[0x1AFC];
  v3[353] = *(_QWORD *)(v2 + 848);
  v3[354] = *(_QWORD *)(v2 + 760);
  v3[355] = *(_QWORD *)(v2 + 752);
  v3[356] = *(_QWORD *)(v2 + 744);
  v3[357] = *(_QWORD *)(v2 + 736);
  LODWORD(STACK[0xD6C]) = STACK[0x1AD4];
  v3[359] = *(_QWORD *)(v2 + 704);
  v3[360] = *(_QWORD *)(v2 + 856);
  v3[361] = *(_QWORD *)(v2 + 880);
  LODWORD(STACK[0xD8C]) = v1;
  v3[363] = *(_QWORD *)(v2 + 720);
  v6 = (*(unsigned __int8 *)(v2 + 879) * ((a1 ^ 0x1C) - 349)) ^ a1;
  LODWORD(STACK[0xD98]) = STACK[0x1AC4];
  v7 = (uint64_t (*)(void))(733649650 - v5 + *(_QWORD *)(v4 + 8 * v6) - 8);
  LODWORD(STACK[0xD9C]) = v1;
  return v7();
}

uint64_t sub_193267800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(_QWORD, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t (*v66)(void);

  v65 = a27(v63[110], 2241923698);
  v63[111] = v65;
  v64[321] = v63[105];
  LODWORD(STACK[0xC4C]) = STACK[0x1B3C];
  v64[323] = v63[103];
  LODWORD(STACK[0xC5C]) = STACK[0x1B2C];
  v64[325] = v63[101];
  v64[326] = v63[100];
  v64[327] = v63[99];
  LODWORD(STACK[0xC78]) = STACK[0x1B0C];
  LODWORD(STACK[0xC7C]) = STACK[0x1B08];
  v64[329] = v63[97];
  LODWORD(STACK[0xC8C]) = STACK[0x1AFC];
  v64[331] = v63[106];
  v64[332] = v63[95];
  v64[333] = v63[94];
  v64[334] = v63[93];
  v64[335] = v63[92];
  LODWORD(STACK[0xCBC]) = STACK[0x1AD4];
  v64[337] = v63[88];
  v64[338] = v63[107];
  v64[339] = v63[110];
  LODWORD(STACK[0xCDC]) = 101372955;
  LODWORD(STACK[0xCE8]) = STACK[0x1AC4];
  v64[341] = 0;
  v66 = (uint64_t (*)(void))(*(_QWORD *)(a62
                                      + 8
                                      * (int)(((v65 != 0)
                                             * ((((v62 + 1515405876) & 0xA5ACBDB7) - 1612) ^ ((v62 - 1799) | 0x80))) ^ v62))
                          - 12);
  LODWORD(STACK[0xCEC]) = 101330303;
  return v66();
}

void sub_19326792C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = **(_QWORD **)(v2 + 704);
  v6 = (**(unsigned int **)(v2 + 856) ^ ((((_DWORD)v0 + 2022225485) & 0x87774EFC) + 0x7FDC7E5DFEFFF87FLL))
     + ((2 * **(unsigned int **)(v2 + 856)) & 0x1FDFFFEF6)
     - 0x608500D90509851;
  v7 = (v6 ^ 0xE7D4232F801052C4) & (2 * (v6 & 0xF915098D6)) ^ v6 & 0xF915098D6;
  v3[496] = *(_QWORD *)(v2 + 840);
  v8 = ((2 * (v6 ^ 0xE7D42324A2B153ECLL)) ^ 0x8200051667C39674) & (v6 ^ 0xE7D42324A2B153ECLL) ^ (2
                                                                                                 * (v6 ^ 0xE7D42324A2B153ECLL)) & 0x61FFF28B33E1CB3ALL;
  LODWORD(STACK[0x11C4]) = STACK[0x1B3C];
  v3[498] = *(_QWORD *)(v2 + 824);
  v9 = (v8 ^ 0x203C08230) & (4 * v7) ^ v7;
  LODWORD(STACK[0x11D4]) = STACK[0x1B2C];
  v3[500] = *(_QWORD *)(v2 + 808);
  v3[501] = *(_QWORD *)(v2 + 800);
  v10 = ((4 * (v8 ^ 0x200012891020490ALL)) ^ 0x87FFCA2CCF872CE8) & (v8 ^ 0x200012891020490ALL) ^ (4
                                                                                                  * (v8 ^ 0x200012891020490ALL)) & 0x61FFF28B33E1CB38;
  v3[502] = *(_QWORD *)(v2 + 792);
  LODWORD(STACK[0x11F0]) = STACK[0x1B0C];
  v11 = (v10 ^ 0x1FFC20803810820) & (16 * v9) ^ v9;
  LODWORD(STACK[0x11F4]) = STACK[0x1B08];
  v3[504] = *(_QWORD *)(v2 + 776);
  LODWORD(STACK[0x1204]) = STACK[0x1AFC];
  v12 = *(_QWORD *)(v4 + 8 * v0);
  v13 = ((16 * (v10 ^ 0x600030833060C312)) ^ 0x1FFF28B33E1CB3A0) & (v10 ^ 0x600030833060C312) ^ (16 * (v10 ^ 0x600030833060C312)) & 0x61FFF28B33E1CB30;
  v3[506] = *(_QWORD *)(v2 + 848);
  v3[507] = *(_QWORD *)(v2 + 760);
  v14 = (v13 ^ 0x1FF208332008300) & (v11 << 8) ^ v11;
  v3[508] = *(_QWORD *)(v2 + 752);
  v3[509] = v12 - 12;
  v3[510] = *(_QWORD *)(v2 + 744);
  v15 = (((v13 ^ 0x6000D20801E1481ALL) << 8) ^ 0xFFF28B33E1CB3A00) & (v13 ^ 0x6000D20801E1481ALL) ^ ((v13 ^ 0x6000D20801E1481ALL) << 8) & 0x61FFF28B33E1CB00;
  v3[511] = *(_QWORD *)(v2 + 736);
  LODWORD(STACK[0x123C]) = STACK[0x1AD4];
  v3[513] = *(_QWORD *)(v2 + 704);
  v16 = v6 ^ (2 * (v15 & 0x3281032000000000 ^ v14 ^ (v15 ^ 0x61F2820321C10000) & (v14 << 16))) ^ 0x3C01A4E3147B10B3;
  v3[514] = *(_QWORD *)(v2 + 856);
  v3[515] = *(_QWORD *)(v2 + 880);
  LODWORD(STACK[0x125C]) = v1;
  v17 = *(_QWORD *)(v2 + 888);
  v3[517] = v17;
  LODWORD(STACK[0x126C]) = STACK[0x1AC4];
  v3[519] = v17;
  v3[520] = 0x5D952DACE41797ELL;
  v3[521] = v5;
  v3[522] = v16;
  JUMPOUT(0x193266DECLL);
}

void sub_193267C6C()
{
  _QWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;

  v1 = STACK[0xCEC];
  v2 = STACK[0xCE8];
  v3 = v0[341];
  v4 = STACK[0xCDC];
  v5 = v0[339];
  v6 = v0[338];
  v7 = v0[337];
  v8 = STACK[0xCBC];
  v9 = v0[335];
  v10 = v0[334];
  v11 = v0[333];
  v12 = v0[332];
  v13 = v0[331];
  v14 = STACK[0xC8C];
  v15 = v0[329];
  v16 = STACK[0xC7C];
  v17 = STACK[0xC78];
  v18 = v0[327];
  v19 = v0[326];
  v20 = v0[325];
  v21 = STACK[0xC5C];
  v22 = v0[323];
  v23 = STACK[0xC4C];
  v0[343] = v0[321];
  LODWORD(STACK[0xCFC]) = v23;
  v0[345] = v22;
  LODWORD(STACK[0xD0C]) = v21;
  v0[347] = v20;
  v0[348] = v19;
  v0[349] = v18;
  LODWORD(STACK[0xD28]) = v17;
  LODWORD(STACK[0xD2C]) = v16;
  v0[351] = v15;
  LODWORD(STACK[0xD3C]) = v14;
  v0[353] = v13;
  v0[354] = v12;
  v0[355] = v11;
  v0[356] = v10;
  v0[357] = v9;
  LODWORD(STACK[0xD6C]) = v8;
  v0[359] = v7;
  v0[360] = v6;
  v0[361] = v5;
  LODWORD(STACK[0xD8C]) = v4;
  v0[363] = v3;
  LODWORD(STACK[0xD98]) = v2;
  LODWORD(STACK[0xD9C]) = v1;
  JUMPOUT(0x193264710);
}

uint64_t sub_193267E18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;

  v3 = STACK[0x1EF4];
  **(_DWORD **)(v0 + 1728) += LODWORD(STACK[0x1EF4]) - 1773838411;
  v1[407] = *(_QWORD *)(v0 + 1840);
  LODWORD(STACK[0xEFC]) = *(_DWORD *)(v2 - 252);
  v1[409] = *(_QWORD *)(v0 + 1824);
  LODWORD(STACK[0xF0C]) = STACK[0x1F14];
  v1[411] = *(_QWORD *)(v0 + 1808);
  v1[412] = *(_QWORD *)(v0 + 1800);
  v1[413] = *(_QWORD *)(v0 + 1792);
  LODWORD(STACK[0xF28]) = v3;
  LODWORD(STACK[0xF2C]) = STACK[0x1EF0];
  v1[415] = *(_QWORD *)(v0 + 1776);
  LODWORD(STACK[0xF3C]) = STACK[0x1EE4];
  v1[417] = *(_QWORD *)(v0 + 1760);
  v1[418] = *(_QWORD *)(v0 + 1752);
  v1[419] = *(_QWORD *)(v0 + 1744);
  v1[420] = *(_QWORD *)(v0 + 1736);
  v1[421] = *(_QWORD *)(v0 + 1728);
  LODWORD(STACK[0xF6C]) = STACK[0x1EB4];
  v1[423] = *(_QWORD *)(v0 + 1712);
  v1[424] = *(_QWORD *)(v0 + 1704);
  v1[425] = *(_QWORD *)(v0 + 1696);
  LODWORD(STACK[0xF8C]) = STACK[0x1E94];
  v1[427] = *(_QWORD *)(v0 + 1680);
  v4 = STACK[0x1E84];
  LODWORD(STACK[0xF98]) = STACK[0x1E84];
  LODWORD(STACK[0xF9C]) = v4;
  LODWORD(STACK[0x1CD8]) = STACK[0xF9C];
  LODWORD(STACK[0x1CDC]) = STACK[0xF98];
  *(_QWORD *)(v0 + 1256) = v1[427];
  LODWORD(STACK[0x1CEC]) = STACK[0xF8C];
  *(_QWORD *)(v0 + 1272) = v1[425];
  *(_QWORD *)(v0 + 1280) = v1[424];
  *(_QWORD *)(v0 + 1288) = v1[423];
  LODWORD(STACK[0x1D0C]) = STACK[0xF6C];
  *(_QWORD *)(v0 + 1304) = v1[421];
  *(_QWORD *)(v0 + 1312) = v1[420];
  *(_QWORD *)(v0 + 1320) = v1[419];
  *(_QWORD *)(v0 + 1328) = v1[418];
  *(_QWORD *)(v0 + 1336) = v1[417];
  LODWORD(STACK[0x1D3C]) = STACK[0xF3C];
  *(_QWORD *)(v0 + 1352) = v1[415];
  LODWORD(STACK[0x1D48]) = STACK[0xF2C];
  LODWORD(STACK[0x1D4C]) = STACK[0xF28];
  v5 = v1[413];
  *(_QWORD *)(v0 + 1368) = v5;
  v6 = v1[412];
  *(_QWORD *)(v0 + 1376) = v6;
  v7 = v1[411];
  *(_QWORD *)(v0 + 1384) = v7;
  v8 = STACK[0xF0C];
  LODWORD(STACK[0x1D6C]) = STACK[0xF0C];
  v9 = v1[409];
  *(_QWORD *)(v0 + 1400) = v9;
  v10 = STACK[0xEFC];
  LODWORD(STACK[0x1D7C]) = STACK[0xEFC];
  v11 = v1[407];
  *(_QWORD *)(v0 + 1416) = v11;
  v1[55] = v11;
  LODWORD(STACK[0x3FC]) = v10;
  v1[57] = v9;
  LODWORD(STACK[0x40C]) = v8;
  v1[59] = v7;
  v1[60] = v6;
  v1[61] = v5;
  LODWORD(v6) = STACK[0x1D4C];
  LODWORD(STACK[0x428]) = STACK[0x1D4C];
  LODWORD(v7) = STACK[0x1D48];
  LODWORD(STACK[0x42C]) = STACK[0x1D48];
  v1[63] = *(_QWORD *)(v0 + 1352);
  v12 = STACK[0x1D3C];
  LODWORD(STACK[0x43C]) = STACK[0x1D3C];
  v1[65] = *(_QWORD *)(v0 + 1336);
  v1[66] = *(_QWORD *)(v0 + 1328);
  v1[67] = *(_QWORD *)(v0 + 1320);
  v1[68] = *(_QWORD *)(v0 + 1312);
  v1[69] = *(_QWORD *)(v0 + 1304);
  LODWORD(v9) = STACK[0x1D0C];
  LODWORD(STACK[0x46C]) = STACK[0x1D0C];
  v1[71] = *(_QWORD *)(v0 + 1288);
  v1[72] = *(_QWORD *)(v0 + 1280);
  v1[73] = *(_QWORD *)(v0 + 1272);
  v13 = STACK[0x1CEC];
  LODWORD(STACK[0x48C]) = STACK[0x1CEC];
  v1[75] = *(_QWORD *)(v0 + 1256);
  LODWORD(v11) = STACK[0x1CDC];
  LODWORD(STACK[0x498]) = STACK[0x1CDC];
  v14 = STACK[0x1CD8];
  LODWORD(STACK[0x49C]) = STACK[0x1CD8];
  v1[77] = *(_QWORD *)(v0 + 1416);
  LODWORD(STACK[0x4AC]) = STACK[0x1D7C];
  v1[79] = *(_QWORD *)(v0 + 1400);
  LODWORD(STACK[0x4BC]) = STACK[0x1D6C];
  v1[81] = *(_QWORD *)(v0 + 1384);
  v1[82] = *(_QWORD *)(v0 + 1376);
  v1[83] = *(_QWORD *)(v0 + 1368);
  LODWORD(STACK[0x4D8]) = v6;
  LODWORD(STACK[0x4DC]) = v7;
  v1[85] = *(_QWORD *)(v0 + 1352);
  LODWORD(STACK[0x4EC]) = v12;
  v1[87] = *(_QWORD *)(v0 + 1336);
  v1[88] = *(_QWORD *)(v0 + 1328);
  v1[89] = *(_QWORD *)(v0 + 1320);
  v1[90] = *(_QWORD *)(v0 + 1312);
  v1[91] = *(_QWORD *)(v0 + 1304);
  LODWORD(STACK[0x51C]) = v9;
  v1[93] = *(_QWORD *)(v0 + 1288);
  v1[94] = *(_QWORD *)(v0 + 1280);
  v1[95] = *(_QWORD *)(v0 + 1272);
  LODWORD(STACK[0x53C]) = v13;
  v1[97] = *(_QWORD *)(v0 + 1256);
  LODWORD(STACK[0x54C]) = v11;
  LODWORD(STACK[0x550]) = v14;
  return (*(uint64_t (**)(void))(v0 + 1400))();
}

uint64_t sub_19326811C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 4192) = v2;
  v8 = v3 + 931;
  v9 = v2 - 1;
  v10 = (a1 & (2 * v9)) + (v9 ^ a2);
  *(_BYTE *)(v5[208] + v10 + v5[236]) = *(_BYTE *)(v5[206] + v10 + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((853 * (v9 == 0)) ^ v8)) - 4))();
}

uint64_t sub_193268180@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = v4 - 1;
  v12 = (a1 & (2 * v11)) + (v11 ^ a2);
  *(_BYTE *)(v6 + v12 + v5) = *(_BYTE *)(a3 + v12 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v11 == 0) * v7) ^ (v9 + v3 + 931))) - 4))();
}

uint64_t sub_1932681C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;

  *(_QWORD *)(v67 + 4192) = v65;
  return (*(uint64_t (**)(void))(v68
                              + 8
                              * (((a64 == 3) ^ (15 * (v64 ^ (a8 - 83)))) & 1 | (v66 + v64 + 3292))))();
}

uint64_t sub_1932681D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  int v64;

  LODWORD(STACK[0xD9C]) = STACK[0x1934];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * (int)((*(unsigned __int8 *)(v63 + 359) * (((v64 - 9807095) & 0xD4DB0AFA) + 106)) ^ (v62 + v64 + 2007))) - 4))(a1, a2, a3, a4, a5, a6, a7, 733649558);
}

uint64_t sub_193268224@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);

  v6 = a1 ^ 0x798;
  v7 = *(_QWORD *)(v5 + 8 * a1) + v6 - 1894;
  v4[267] = *(_QWORD *)(v2 + 177);
  v4[297] = v3[4];
  v4[268] = *(_QWORD *)(v2 + 161);
  LODWORD(STACK[0xE5C]) = STACK[0x1924];
  v4[269] = *(_QWORD *)(v2 + 137);
  v4[271] = *(_QWORD *)(v2 + 121);
  v4[273] = *(_QWORD *)(v2 + 113);
  LODWORD(STACK[0xE78]) = STACK[0x1904];
  v4[311] = v7;
  v4[274] = *(_QWORD *)(v2 + 81);
  LODWORD(STACK[0xE7C]) = STACK[0x18F4];
  LODWORD(STACK[0xE8C]) = STACK[0x18C4];
  v4[277] = *(_QWORD *)(v2 + 65);
  v4[279] = *(_QWORD *)(v2 + 49);
  v4[281] = *(_QWORD *)(v2 + 17);
  v4[283] = *(_QWORD *)(v2 + 9);
  v4[284] = *(_QWORD *)(v2 + 1);
  v4[314] = *v3;
  LODWORD(STACK[0xEBC]) = STACK[0x18A4];
  v4[285] = v4[662];
  LODWORD(STACK[0xEDC]) = STACK[0x1894];
  LODWORD(STACK[0xEEC]) = 1;
  LODWORD(STACK[0x1958]) = STACK[0xEEC];
  LODWORD(STACK[0x1960]) = STACK[0xEDC];
  *(_QWORD *)(v2 + 225) = v4[285];
  LODWORD(STACK[0x1964]) = STACK[0xEBC];
  v3[22] = v4[314];
  *(_QWORD *)(v2 + 241) = v4[284];
  v8 = v4[281];
  v3[1] = v4[283];
  v3[2] = v8;
  v3[3] = v4[279];
  v9 = v4[277];
  LODWORD(STACK[0x1974]) = STACK[0xE8C];
  LODWORD(STACK[0x1994]) = STACK[0xE7C];
  v10 = v4[274];
  v3[5] = v9;
  v3[6] = v10;
  v11 = v4[311];
  LODWORD(STACK[0x19C0]) = STACK[0xE78];
  v3[7] = v4[273];
  v3[9] = v4[271];
  v12 = v4[269];
  v13 = STACK[0xE5C];
  LODWORD(STACK[0x19C4]) = STACK[0xE5C];
  v14 = v4[268];
  v3[11] = v12;
  v3[12] = v14;
  v15 = v4[297];
  v3[27] = v15;
  v16 = v4[267];
  v3[14] = v16;
  v17 = v4[31];
  v3[16] = v17;
  v3[17] = v11;
  v4[317] = v17;
  v18 = *(_DWORD *)(v17 + 12);
  v17 += 12;
  v3[18] = v17;
  LODWORD(STACK[0x19DC]) = v18;
  v4[313] = v16;
  v4[339] = v15;
  v4[315] = v14;
  LODWORD(STACK[0xF9C]) = v13;
  v4[319] = v17;
  v4[321] = v3[11];
  v4[323] = v3[9];
  v4[325] = v3[7];
  LODWORD(STACK[0xFB4]) = STACK[0x19C0];
  v4[326] = v11;
  v19 = v3[5];
  v4[327] = v3[6];
  LODWORD(STACK[0xFC0]) = STACK[0x1958];
  LODWORD(STACK[0xFC4]) = STACK[0x1994];
  LODWORD(STACK[0xFD4]) = STACK[0x1974];
  v4[329] = v19;
  v4[331] = v3[3];
  v20 = v3[1];
  v4[332] = v3[2];
  v4[333] = v20;
  v4[335] = *(_QWORD *)(v2 + 241);
  v4[356] = v3[22];
  LODWORD(STACK[0xFE8]) = STACK[0x1964];
  v4[337] = *(_QWORD *)(v2 + 225);
  LODWORD(STACK[0xFEC]) = STACK[0x1960];
  v21 = (uint64_t (*)(void))(*(_QWORD *)(v5
                                      + 8
                                      * (int)((2515
                                             * (v18 < (((_DWORD)v6 + 2075841429) & 0xAFFFBFFE)
                                                    + (((_DWORD)v6 - 1416) ^ (v1 - 139)))) ^ v6))
                          - 4);
  LODWORD(STACK[0xFFC]) = 101330305;
  return v21();
}

uint64_t sub_1932687E8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;

  v6 = LODWORD(STACK[0x19DC]);
  v7 = v3[16];
  v8 = v3[17];
  v9 = *(unsigned int *)(v7 + 8);
  v4[287] = v3[14];
  v4[320] = v3[27];
  v10 = ((2 * v6) & 0x1BBF078A6)
      - 0x7F9DF59FBFD76C72
      + ((((a1 + 53117146) | 0x28901842u) + 0x7F9DF59FB23DA15DLL) ^ v6);
  v11 = (v9 ^ 0x7FDFAFFA2FFD6AF7) - 0x7FDFAFFA11DC9B1ALL + ((2 * (_DWORD)v9) & 0x5FFAD5EE);
  v12 = v3[11];
  v4[289] = v3[12];
  v4[290] = v7;
  v13 = v10 < 0x1E20CFDD;
  LODWORD(STACK[0xEFC]) = STACK[0x19C4];
  v14 = v10 > v11;
  if (v13 == v11 < 0x1E20CFDD)
    v13 = v14;
  v4[291] = v3[18];
  v4[293] = v12;
  v4[295] = v3[9];
  v4[296] = v3[7];
  LODWORD(STACK[0xF0C]) = STACK[0x19C0];
  v4[299] = v8;
  v15 = v3[5];
  v4[301] = v3[6];
  LODWORD(STACK[0xF28]) = STACK[0x1958];
  LODWORD(STACK[0xF2C]) = STACK[0x1994];
  LODWORD(STACK[0xF3C]) = STACK[0x1974];
  v4[303] = v15;
  v4[305] = v3[3];
  v16 = v3[1];
  v4[306] = v3[2];
  v4[307] = v16;
  v4[309] = *(_QWORD *)(v1 + 241);
  v4[334] = v3[22];
  LODWORD(STACK[0xF6C]) = STACK[0x1964];
  v4[312] = *(_QWORD *)(v1 + 225);
  LODWORD(STACK[0xF8C]) = STACK[0x1960];
  LODWORD(STACK[0xF98]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((3194 * v13) ^ a1)) - 12))();
}

uint64_t sub_19326897C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = *(_QWORD *)(v4 + 8 * a1);
  v6 = (a1 + 155463274) | 0x4623001Au;
  v3[338] = *(_QWORD *)(v2 + 112);
  v3[361] = *(_QWORD *)(v2 + 216);
  v3[341] = *(_QWORD *)(v2 + 96);
  v3[343] = *(_QWORD *)(v2 + 128);
  LODWORD(STACK[0x1044]) = STACK[0x19C4];
  v3[345] = *(_QWORD *)(v2 + 144);
  v3[367] = v5 + v6 - 1332162666;
  v3[347] = *(_QWORD *)(v2 + 72);
  v3[348] = *(_QWORD *)(v2 + 56);
  LODWORD(STACK[0x1054]) = STACK[0x19C0];
  v7 = *(_QWORD *)(v2 + 128);
  v3[349] = *(_QWORD *)(v2 + 136);
  v8 = *(_QWORD *)(v2 + 40);
  v3[351] = *(_QWORD *)(v2 + 48);
  LODWORD(STACK[0x1074]) = STACK[0x1958];
  LODWORD(STACK[0x1084]) = STACK[0x1994];
  LODWORD(STACK[0x10CC]) = STACK[0x1974];
  v3[353] = v8;
  v9 = *(_QWORD *)(v2 + 16);
  v3[354] = *(_QWORD *)(v2 + 24);
  v3[355] = v9;
  v3[357] = *(_QWORD *)(v1 + 225);
  LODWORD(STACK[0x10D8]) = STACK[0x1960];
  v3[359] = v7;
  LODWORD(STACK[0x10DC]) = 4;
  v10 = LODWORD(STACK[0x10DC]);
  v11 = ((_DWORD)v6 + 1710230749) & 0x4AA8C6FF;
  *(_QWORD *)(v2 + 560) = v3[359];
  LODWORD(STACK[0x1B2C]) = STACK[0x10D8];
  *(_QWORD *)(v2 + 568) = v3[357];
  *(_QWORD *)(v2 + 584) = v3[355];
  *(_QWORD *)(v2 + 600) = v3[354];
  *(_QWORD *)(v2 + 608) = v3[353];
  LODWORD(STACK[0x1B3C]) = STACK[0x10CC];
  LODWORD(STACK[0x1B7C]) = STACK[0x1084];
  LODWORD(STACK[0x1B8C]) = STACK[0x1074];
  *(_QWORD *)(v2 + 616) = v3[351];
  *(_QWORD *)(v2 + 632) = v3[349];
  LODWORD(STACK[0x1B9C]) = STACK[0x1054];
  *(_QWORD *)(v2 + 648) = v3[348];
  *(_QWORD *)(v2 + 656) = v3[347];
  v12 = v3[367];
  *(_QWORD *)(v2 + 664) = v3[345];
  LODWORD(STACK[0x1BBC]) = STACK[0x1044];
  *(_QWORD *)(v2 + 680) = v3[343];
  *(_QWORD *)(v2 + 696) = v3[341];
  *(_QWORD *)(v2 + 744) = v3[361];
  *(_QWORD *)(v2 + 704) = v3[338];
  *(_QWORD *)(v2 + 720) = v12;
  v13 = *(_QWORD *)(v2 + 560);
  v14 = *(unsigned int *)(v13 + 8);
  *(_QWORD *)(v2 + 736) = v13 + 8;
  v15 = (v10 ^ 0x7AFA863FB7932E23) + ((2 * v10) & 0x16F265C46) - 0x7AFA863FB7932E23 + v14;
  *(_QWORD *)(v2 + 864) = v15;
  *(_BYTE *)(v2 + 879) = v15 < v11 + 4294966212;
  v3[379] = v14;
  v16 = v3[379];
  *(_QWORD *)(v2 + 880) = v16 << ((v11 - 77) & 0x73 ^ 0x63);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)(((v16 >> 31 == 0) * (((v11 + 109671347) ^ 0x6897079) - 1833)) ^ v11))
                            - 4))();
}

uint64_t sub_19326900C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  uint64_t (*v16)(void);

  v14 = STACK[0x1CEC];
  v15 = LODWORD(STACK[0x1CEC]) == v9;
  v11[186] = v10[171];
  v11[243] = v10[164];
  v11[189] = v10[169];
  v11[191] = v10[167];
  LODWORD(STACK[0xC7C]) = STACK[0x1D9C];
  v11[193] = v10[166];
  v11[195] = v10[165];
  v11[196] = v10[163];
  v11[198] = v10[161];
  LODWORD(STACK[0xC8C]) = STACK[0x1D7C];
  v11[200] = v10[160];
  v11[201] = v10[157];
  LODWORD(STACK[0xCBC]) = STACK[0x1D6C];
  LODWORD(STACK[0xCDC]) = STACK[0x1D48];
  v11[202] = v10[155];
  v11[204] = v10[153];
  v11[205] = v10[150];
  v11[206] = v10[149];
  v11[248] = v10[159];
  LODWORD(STACK[0xCE8]) = STACK[0x1D3C];
  v11[209] = v10[147];
  LODWORD(STACK[0xCEC]) = STACK[0x1D0C];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((v15 * (v12 - a8 + 1623)) ^ (v8 + v12 + 383))) - 4);
  LODWORD(STACK[0xCFC]) = v14;
  return v16();
}

void sub_1932690F8()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[429] = ((v0 + 1006) ^ 0xFFFFFFFFFFFFFBBALL) + *(_QWORD *)(v3 + 8 * (v0 + 229));
  v2[415] = v1[169];
  v2[417] = v1[167];
  LODWORD(STACK[0x126C]) = STACK[0x1D9C];
  v2[418] = v1[166];
  v2[419] = v1[165];
  v2[421] = v1[161];
  v2[423] = v1[160];
  LODWORD(STACK[0x12C4]) = STACK[0x1D6C];
  LODWORD(STACK[0x12D4]) = STACK[0x1D4C];
  LODWORD(STACK[0x12F4]) = STACK[0x1D48];
  v2[424] = v1[153];
  v2[427] = v1[151];
  v2[430] = v1[150];
  v2[432] = v1[149];
  v2[444] = v1[159];
  LODWORD(STACK[0x1320]) = STACK[0x1D3C];
  v2[434] = v1[147];
  JUMPOUT(0x193268BD8);
}

uint64_t sub_1932691B0()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;
  uint64_t (*v8)(void);

  v6 = STACK[0x1CEC];
  v7 = LODWORD(STACK[0x1CEC]) == v1;
  v3[186] = v2[171];
  v3[243] = v2[164];
  v3[189] = v2[169];
  v3[191] = v2[167];
  LODWORD(STACK[0xC7C]) = STACK[0x1D9C];
  v3[193] = v2[166];
  v3[195] = v2[165];
  v3[196] = v2[163];
  v3[198] = v2[161];
  LODWORD(STACK[0xC8C]) = STACK[0x1D7C];
  v3[200] = v2[160];
  v3[201] = v2[157];
  LODWORD(STACK[0xCBC]) = STACK[0x1D6C];
  LODWORD(STACK[0xCDC]) = STACK[0x1D48];
  v3[202] = v2[155];
  v3[204] = v2[153];
  v3[205] = v2[150];
  v3[206] = v2[149];
  v3[248] = v2[159];
  LODWORD(STACK[0xCE8]) = STACK[0x1D3C];
  v3[209] = v2[147];
  LODWORD(STACK[0xCEC]) = STACK[0x1D0C];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((4288 * v7) ^ (v0 + v4 + 383)))
                         - ((v4 + 1135014665) & 0x909E73DF)
                         + 475);
  LODWORD(STACK[0xCFC]) = v6;
  return v8();
}

uint64_t sub_1932692B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t (*v16)(void);

  v13 = v11[31];
  v11[571] = v13;
  v11[189] = v13;
  v14 = *(_DWORD *)(v13 + 12);
  v11[573] = v13 + 12;
  v15 = (v14 ^ 0xEAC7EDFAF47FFFF7) + v11[582] + ((2 * v14) & 0x1E8FFFFEELL);
  v11[598] = v15;
  v11[186] = v10[171];
  v11[243] = v10[164];
  v11[191] = v10[167];
  LODWORD(STACK[0xC7C]) = STACK[0x1D9C];
  v11[193] = v10[166];
  v11[195] = v10[165];
  v11[196] = v10[163];
  v11[198] = v11[573];
  LODWORD(STACK[0xC8C]) = STACK[0x1D7C];
  v11[200] = v10[160];
  v11[201] = v10[157];
  LODWORD(STACK[0xCBC]) = STACK[0x1D6C];
  LODWORD(STACK[0xCDC]) = STACK[0x1D48];
  v11[202] = v10[155];
  v11[204] = v10[153];
  v11[205] = v10[150];
  v11[206] = v10[149];
  v11[248] = v10[159];
  LODWORD(STACK[0xCE8]) = STACK[0x1D3C];
  v11[209] = v10[147];
  LODWORD(STACK[0xCEC]) = STACK[0x1D0C];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((v15 < 0xFFFFFFFB) * (v9 + (v8 ^ (a8 + 147)) + 2498)) ^ v8))
                          - ((v8 + 62) ^ 0x219));
  LODWORD(STACK[0xCFC]) = 101330305;
  return v16();
}

uint64_t sub_1932693EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  v13 = v11[571];
  v14 = *(unsigned int *)(v13 + 8);
  v15 = v11[598];
  v11[35] = v10[171];
  v16 = v15 + 1554689821;
  v11[117] = v10[164];
  v17 = (v14 ^ 0x7FBBFD79FFEDD475) - 0x7FBBFD79A343255CLL + ((2 * v14) & 0x1FFDBA8EALL);
  v18 = v10[167];
  v20 = v17 > 0x5CAAAF18 && v16 > v17;
  v11[37] = v13;
  v11[38] = v18;
  LODWORD(STACK[0x8BC]) = STACK[0x1D9C];
  v11[39] = v10[166];
  v11[41] = v10[165];
  v21 = v11[573];
  v11[43] = v10[163];
  v11[44] = v21;
  LODWORD(STACK[0x8C8]) = STACK[0x1D7C];
  v11[45] = v10[160];
  v11[47] = v10[157];
  LODWORD(STACK[0x8CC]) = STACK[0x1D6C];
  LODWORD(STACK[0x8DC]) = STACK[0x1D4C];
  LODWORD(STACK[0x8EC]) = STACK[0x1D48];
  v22 = v10[153];
  v11[49] = v10[155];
  v11[50] = v22;
  v11[53] = v10[151];
  v11[55] = v10[150];
  v11[57] = v10[149];
  v11[133] = v10[159];
  LODWORD(STACK[0x908]) = STACK[0x1D3C];
  v11[59] = v10[147];
  LODWORD(STACK[0x90C]) = STACK[0x1D0C];
  v23 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((v20 * (((v8 + 699531283) | 0x20898C6) ^ (a8 - 1902))) ^ v8)) - 8);
  LODWORD(STACK[0x924]) = v9;
  return v23();
}

void sub_193269538()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 8 * v0);
  v2[338] = v1[171];
  v2[361] = v1[164];
  v2[341] = v2[571];
  v2[343] = v1[167];
  LODWORD(STACK[0x1044]) = STACK[0x1D9C];
  v2[345] = v1[166];
  v2[367] = ((v0 - 269534367) & 0x5F77F2DF ^ 0xFFFFFFFFB098CFA6) + v4;
  v2[347] = v1[163];
  v2[348] = v2[573];
  LODWORD(STACK[0x1054]) = STACK[0x1D7C];
  v2[349] = v1[160];
  v2[351] = v1[157];
  LODWORD(STACK[0x1074]) = STACK[0x1D6C];
  LODWORD(STACK[0x1084]) = STACK[0x1D4C];
  LODWORD(STACK[0x10CC]) = STACK[0x1D48];
  v2[353] = v1[155];
  v2[354] = v1[153];
  v2[355] = v1[151];
  v2[357] = v1[147];
  LODWORD(STACK[0x10D8]) = STACK[0x1D0C];
  v2[359] = v2[571];
  LODWORD(STACK[0x10DC]) = STACK[0x163C];
  JUMPOUT(0x19326A4DCLL);
}

uint64_t sub_193269614@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v6 = STACK[0x924];
  LODWORD(STACK[0x164C]) = STACK[0x90C];
  v4[575] = v4[59];
  LODWORD(STACK[0x165C]) = STACK[0x908];
  v4[603] = v4[133];
  v4[576] = v4[57];
  v4[578] = v4[55];
  v4[580] = v4[53];
  v7 = v4[49];
  v4[583] = v4[50];
  v4[584] = v7;
  LODWORD(STACK[0x16A4]) = STACK[0x8EC];
  LODWORD(STACK[0x16B0]) = STACK[0x8DC];
  LODWORD(STACK[0x16B4]) = STACK[0x8CC];
  v4[586] = v4[47];
  v4[587] = v4[45];
  LODWORD(STACK[0x16D4]) = STACK[0x8C8];
  v8 = v4[43];
  v4[589] = v4[44];
  v4[591] = v8;
  v9 = v4[41];
  v4[592] = v9;
  v11 = v4[38];
  v10 = v4[39];
  v4[594] = v10;
  v12 = STACK[0x8BC];
  LODWORD(STACK[0x16E4]) = STACK[0x8BC];
  v13 = v4[37];
  v4[596] = v11;
  v4[599] = v13;
  v14 = v4[117];
  v4[624] = v14;
  v15 = v4[35];
  v4[600] = v15;
  v4[186] = v15;
  v4[243] = v14;
  v4[189] = v13;
  v4[191] = v11;
  LODWORD(STACK[0xC7C]) = v12;
  v4[193] = v10;
  v4[195] = v9;
  v4[196] = v4[591];
  v4[198] = v4[589];
  LODWORD(STACK[0xC8C]) = STACK[0x16D4];
  v4[200] = v4[587];
  v4[201] = v4[586];
  LODWORD(STACK[0xCBC]) = STACK[0x16B4];
  LODWORD(STACK[0xCDC]) = STACK[0x16A4];
  v4[202] = v4[584];
  v4[204] = v4[583];
  v4[205] = v4[578];
  v4[206] = v4[576];
  v4[248] = v4[603];
  LODWORD(STACK[0xCE8]) = STACK[0x165C];
  v4[209] = v4[575];
  LODWORD(STACK[0xCEC]) = STACK[0x164C];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2628 * (v6 == v3)) ^ (v2 + a2 + 383)))
                          - (a2 - a1 + 1370)
                          + 1462);
  LODWORD(STACK[0xCFC]) = v6;
  return v16();
}

uint64_t sub_193269798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  unsigned int v14;

  v12 = **(_QWORD **)(v10 + 4792);
  v13 = *(_DWORD **)(v10 + 4712);
  v14 = ((2 * *v13) & 0xBDBFFFF8) + (*v13 ^ 0x5EDFFFFC);
  *(_BYTE *)(v12 + v14 - 1591738364) = v9[1932];
  *(_BYTE *)(v12 + v14 - 1591738363) = v9[1933];
  *(_BYTE *)(v12 + ((151 * (v8 ^ 0x5B5)) ^ (a8 - 2151)) + 1969579280 + v14) = v9[1934];
  *(_BYTE *)(v12 + v14 - 1591738361) = v9[1935];
  LODWORD(v12) = *v13 + 4;
  LODWORD(STACK[0x1714]) = v12;
  *v13 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((3023 * ((STACK[0xFB3] & 1) == 0)) ^ v8)) - 8))();
}

uint64_t sub_193269854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t *v37;
  _DWORD *v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;

  v35 = v32 ^ 0xA0;
  v36 = STACK[0x1714];
  LODWORD(STACK[0x954]) = STACK[0x1714];
  LODWORD(STACK[0x974]) = 2123485811;
  v37 = *(uint64_t **)(v33 + 4792);
  v38 = *(_DWORD **)(v33 + 4712);
  v39 = LOBYTE(STACK[0x99F]);
  v40 = STACK[0x1614];
  v41 = *v37;
  v42 = *(_DWORD *)(a32 + 4 * ((v35 ^ (a8 - 2055) ^ 0xAAD4B77B) + 2123485811));
  v43 = v42 + 451170848 - ((2 * v42) & 0x35C8A440);
  v44 = ((2 * v36) & 0xD51FFF7A) + (v36 ^ 0x6A8FFFBD) - 1787822013;
  *(_BYTE *)(*v37 + v44) = HIBYTE(v43) ^ 0x1A;
  *(_BYTE *)(v41 + v44 + 1) = BYTE2(v43) ^ 0xE4;
  *(_BYTE *)(v41 + v44 + 2) = (((BYTE1(v43) ^ 0x52) - 2 * ((BYTE1(v43) ^ 0x52) & 7 ^ BYTE1(v43) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v41 + v44 + 3) = v43 ^ 0x20;
  *v38 += 4;
  v45 = v40 > 0x1E2292DC;
  if (v39)
    v45 = v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34
                                                                                 + 8
                                                                                 * (((32 * v45) | (v45 << 7)) ^ v35))
                                                                     - 4))(26, 228, 82, 2677063785);
}

uint64_t sub_19326999C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t),int *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  int v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  unint64_t v68;
  int v69;
  unint64_t v70;
  int v71;
  int v72;
  uint64_t v73;

  v66 = v64[31];
  v64[602] = v66;
  v64[28] = 0;
  LODWORD(STACK[0x860]) = 0;
  a24(a22);
  v67 = *a26;
  v68 = *(_QWORD *)v66;
  v69 = *(_DWORD *)(v66 + 12);
  v64[604] = v66 + 12;
  v70 = v64[568];
  v71 = 597255653 * ((v65 + 921242664 - 2 * ((v65 - 144) & 0x36E90CB8)) ^ 0x3FE27321);
  STACK[0x1FB8] = v64[570];
  STACK[0x1FA8] = v68;
  *(_DWORD *)(v65 - 112) = v62 + v63 + v71 + 3144;
  STACK[0x1F98] = v70;
  *(_DWORD *)(v65 - 140) = v71 + v69 + 1581691396 - (((v63 - 401271624) & 0xEC3059FB ^ 0xBC8D6DA2) & (2 * v69));
  *(_DWORD *)(v65 - 128) = ((v62 + v63 + 719) ^ v67 ^ 0x3DBBFC90) - v71 + ((2 * v67) & 0x7B77FF7E) - 413276167;
  a23(v65 - 144);
  v72 = *(_DWORD *)(v65 - 144);
  v73 = a25(a22);
  LODWORD(STACK[0x984]) = v72;
  return (*(uint64_t (**)(uint64_t))(a62
                                            + 8
                                            * ((7433 * (((v72 - (v63 - 69920437)) | (v63 - 69920437 - v72)) >= 0)) ^ (v63 - 733646308))))(v73);
}

uint64_t sub_193269B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int *a13, void (*a14)(uint64_t), uint64_t a15, uint64_t (*a16)(_QWORD, uint64_t, uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;

  *(_QWORD *)(v63 + 1952) = *(_QWORD *)(v67 + 8 * v64)
                          - 486723911
                          * ((((2 * v65) | 0xAA633AFCFCC2A562) - v65 + 0x2ACE6281819EAD4FLL) ^ 0xE78F46EFCEAB322BLL)
                          - 8;
  *(_QWORD *)(v63 + 1944) = v62;
  *(_DWORD *)(v66 - 128) = v64 - 71465943 - 486723911 * ((((2 * v65) | 0xFCC2A562) - v65 - 2120307377) ^ 0xCEAB322B);
  a14(v66 - 144);
  v68 = a16(*a13, a15, a26);
  v69 = *(_QWORD *)(a62 + 8 * (int)((((v64 - 813) | 0xD10) ^ 0xFFFFF2E9) + v64));
  v70 = ((2 * v68) & 0x4CF7F8B6) + (v68 ^ 0xA67BFC5B);
  v71 = 486723911
      * (((v65 | 0xBBC7BC03F0A5484FLL) - (v65 | 0x443843FC0F5AB7B0) + 0x443843FC0F5AB7B0) ^ 0x89796792406F28D5);
  *(_DWORD *)(v66 - 128) = v64 - 71465943 - v71;
  *(_QWORD *)(v63 + 1952) = ((v64 - 541104473) & 0xFAFDF77F ^ 0xFFFFFFFF25429EAELL) - v71 + v69;
  *(_QWORD *)(v63 + 1944) = v62;
  v72 = ((uint64_t (*)(uint64_t))a14)(v66 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62 + 8 * ((102 * (v70 == -1501823909)) ^ (v64 + 1659))) - 8))(v72);
}

uint64_t sub_193269CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t),_DWORD *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,uint64_t a61,uint64_t a62)
{
  int v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;

  v66 = (a60 + 1256758505) & 0xB5175FAE;
  a24(a22);
  v67 = **(_QWORD **)(v64 + 4816);
  v68 = **(_DWORD **)(v64 + 4832);
  v69 = *a26 ^ 0x379DEFBD;
  v70 = (2 * *a26) & 0x6F3BDF7A;
  v71 = *(_QWORD *)(v64 + 4544);
  v72 = *(_QWORD *)(v64 + 4560);
  v73 = 597255653 * ((((2 * (v65 - 144)) | 0x60BB396C) - (v65 - 144) - 811441334) ^ 0x3956E32F);
  *(_DWORD *)(v65 - 112) = v73 + a60 - 106;
  *(_DWORD *)(v65 - 140) = (v66 ^ 0x5E46BBAE) + v68 + v73 - ((2 * v68) & 0xBC8D6408);
  *(_DWORD *)(v65 - 128) = v69 - v73 + v70 - 310642693;
  v63[244] = v71;
  v63[246] = v67;
  v63[248] = v72;
  a23(v65 - 144);
  v74 = *(_DWORD *)(v65 - 144);
  v75 = a25(a22);
  LODWORD(STACK[0x984]) = v74;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62
                                                      + 8
                                                      * (int)((1314
                                                             * (LODWORD(STACK[0x984]) == ((5
                                                                                         * (v66 ^ (v62 + 2163) ^ (v62 + 154))) ^ 0x178FB677))) ^ v66))
                                          - 8))(v75);
}

uint64_t sub_193269E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);

  v12[135] = v12[600];
  v12[203] = v12[624];
  v12[136] = v12[599];
  v12[139] = v12[596];
  LODWORD(STACK[0xB6C]) = STACK[0x16E4];
  v12[141] = v12[594];
  v12[143] = v12[592];
  v12[145] = v12[591];
  v12[147] = v12[589];
  LODWORD(STACK[0xB8C]) = STACK[0x16D4];
  v12[148] = v12[587];
  v12[149] = v12[586];
  LODWORD(STACK[0xB98]) = STACK[0x16B4];
  LODWORD(STACK[0xB9C]) = STACK[0x16B0];
  LODWORD(STACK[0xBAC]) = STACK[0x16A4];
  v12[151] = v12[584];
  v12[153] = v12[583];
  v12[154] = v12[580];
  v12[155] = v12[578];
  v12[157] = v12[576];
  v12[207] = v12[603];
  LODWORD(STACK[0xBBC]) = STACK[0x165C];
  v12[158] = v12[575];
  v14 = STACK[0x164C];
  LODWORD(STACK[0xBD8]) = STACK[0x164C];
  LODWORD(STACK[0xBDC]) = 101330291;
  LODWORD(STACK[0x17C4]) = v14;
  v12[631] = v12[158];
  LODWORD(STACK[0x17D4]) = STACK[0xBBC];
  v12[649] = v12[207];
  v12[632] = v12[157];
  v12[634] = v12[155];
  v12[636] = v12[154];
  v12[637] = v12[153];
  v12[638] = v12[151];
  LODWORD(STACK[0x17E4]) = STACK[0xBAC];
  LODWORD(STACK[0x17F4]) = STACK[0xB9C];
  LODWORD(STACK[0x183C]) = STACK[0xB98];
  v12[639] = v12[149];
  v12[641] = v12[148];
  LODWORD(STACK[0x1848]) = STACK[0xB8C];
  v12[643] = v12[147];
  v12[646] = v12[145];
  v15 = v12[143];
  v12[647] = v15;
  v16 = v12[141];
  v12[648] = v16;
  v17 = STACK[0xB6C];
  LODWORD(STACK[0x184C]) = STACK[0xB6C];
  v18 = v12[139];
  v12[650] = v18;
  v19 = v12[136];
  v12[651] = v19;
  v20 = v12[203];
  *(_QWORD *)(v10 + 41) = v20;
  v21 = v12[135];
  v12[652] = v21;
  v12[186] = v21;
  v12[243] = v20;
  v12[189] = v19;
  v12[191] = v18;
  LODWORD(STACK[0xC7C]) = v17;
  v12[193] = v16;
  v12[195] = v15;
  v12[196] = v12[646];
  v12[198] = v12[643];
  LODWORD(STACK[0xC8C]) = STACK[0x1848];
  v12[200] = v12[641];
  v12[201] = v12[639];
  LODWORD(STACK[0xCBC]) = STACK[0x183C];
  LODWORD(STACK[0xCDC]) = STACK[0x17E4];
  v12[202] = v12[638];
  v12[204] = v12[637];
  v12[205] = v12[634];
  v12[206] = v12[632];
  v12[248] = v12[649];
  LODWORD(STACK[0xCE8]) = STACK[0x17D4];
  v12[209] = v12[631];
  LODWORD(STACK[0xCEC]) = STACK[0x17C4];
  v22 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                    + 8
                                                    * ((2065
                                                      * (((a8 + (v9 ^ v8) + 618212854) & 0xAF6C37F6 ^ (v11 + 606)) == 101330291)) ^ v9 ^ v8))
                                        - 4);
  LODWORD(STACK[0xCFC]) = 101330291;
  return v22(3561317738);
}

uint64_t sub_193269F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((1314 * (LODWORD(STACK[0x984]) == ((5 * (v7 ^ 0x9DF)) ^ 0x178FB677))) ^ v7)) - 8))(a1, a2, a3, a4, a5, a6, a7, 733649558);
}

void sub_193269F9C(int a1@<W8>)
{
  _QWORD *v1;

  v1[33] = 0;
  LODWORD(STACK[0xDAC]) = a1;
  v1[235] = v1[600];
  v1[275] = v1[624];
  v1[238] = v1[599];
  v1[240] = v1[596];
  LODWORD(STACK[0xDBC]) = STACK[0x16E4];
  v1[241] = v1[594];
  v1[245] = v1[592];
  v1[246] = v1[591];
  v1[247] = v1[589];
  LODWORD(STACK[0xDD4]) = STACK[0x16D4];
  v1[249] = v1[587];
  v1[251] = v1[586];
  LODWORD(STACK[0xDE4]) = STACK[0x16B4];
  LODWORD(STACK[0xDFC]) = STACK[0x16B0];
  LODWORD(STACK[0xE1C]) = STACK[0x16A4];
  v1[252] = v1[584];
  v1[255] = v1[583];
  v1[257] = v1[580];
  v1[259] = v1[578];
  v1[261] = v1[576];
  v1[292] = v1[603];
  LODWORD(STACK[0xE2C]) = STACK[0x165C];
  v1[262] = v1[575];
  LODWORD(STACK[0xE3C]) = STACK[0x164C];
  JUMPOUT(0x19326A07CLL);
}

uint64_t sub_19326A1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int v66;
  int v67;
  unsigned int v68;

  v67 = STACK[0x860];
  LODWORD(STACK[0x1718]) = STACK[0x860];
  LODWORD(STACK[0xABC]) = v67;
  v65[110] = *(_QWORD *)(v63 + 177);
  v65[183] = *(_QWORD *)(v64 + 32);
  v65[111] = *(_QWORD *)(v63 + 161);
  v65[113] = *(_QWORD *)(v63 + 153);
  LODWORD(STACK[0xADC]) = STACK[0x1924];
  v65[115] = *(_QWORD *)(v63 + 145);
  v65[116] = *(_QWORD *)(v63 + 137);
  v65[119] = *(_QWORD *)(v63 + 121);
  v65[121] = *(_QWORD *)(v63 + 113);
  LODWORD(STACK[0xAE8]) = STACK[0x1904];
  v65[123] = *(_QWORD *)(v63 + 105);
  v65[125] = *(_QWORD *)(v63 + 81);
  LODWORD(STACK[0xAEC]) = STACK[0x1900];
  LODWORD(STACK[0xAFC]) = STACK[0x18F4];
  LODWORD(STACK[0xB0C]) = STACK[0x18C4];
  v65[126] = *(_QWORD *)(v63 + 65);
  v65[128] = *(_QWORD *)(v63 + 49);
  v65[130] = *(_QWORD *)(v63 + 17);
  v65[131] = *(_QWORD *)(v63 + 9);
  v65[132] = *(_QWORD *)(v63 + 1);
  v65[187] = *(_QWORD *)v64;
  LODWORD(STACK[0xB28]) = STACK[0x18A4];
  v65[134] = v65[662];
  LODWORD(STACK[0xB2C]) = STACK[0x1894];
  v68 = *(unsigned __int8 *)(v64 + 359) * ((((v66 - 971844540) & 0xE329FCF) - 2427) ^ (v66 + 1150343933) & 0x8FB48FFC);
  LODWORD(STACK[0xB3C]) = STACK[0x1934];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a62 + 8 * (int)(v68 ^ (v62 + v66 + 849))))(a1, a2, a3, a4, a5, a6, a7, 733649558);
}

uint64_t sub_19326A2F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  uint64_t v6;
  int v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = v9[33];
  v9[605] = v11;
  v12 = *(_QWORD *)(v6 + 177);
  v13 = LODWORD(STACK[0x1718]) > *(_DWORD *)(v11 + 8);
  v9[137] = v8[4];
  v14 = *(_QWORD *)(v6 + 161);
  v9[60] = v12;
  v9[61] = v14;
  v9[63] = *(_QWORD *)(v6 + 153);
  v9[65] = *(_QWORD *)(v6 + 145);
  v9[66] = *(_QWORD *)(v6 + 137);
  v9[67] = *(_QWORD *)(v6 + 121);
  v9[69] = *(_QWORD *)(v6 + 113);
  LODWORD(STACK[0x9A0]) = STACK[0x1904];
  v9[71] = *(_QWORD *)(v6 + 105);
  v9[72] = *(_QWORD *)(v6 + 81);
  LODWORD(STACK[0x9A4]) = STACK[0x1900];
  LODWORD(STACK[0x9B4]) = STACK[0x18F4];
  LODWORD(STACK[0x9CC]) = STACK[0x18C4];
  v9[75] = *(_QWORD *)(v6 + 65);
  v9[77] = *(_QWORD *)(v6 + 49);
  v9[79] = *(_QWORD *)(v6 + 17);
  v9[81] = *(_QWORD *)(v6 + 9);
  v9[82] = *(_QWORD *)(v6 + 1);
  v9[156] = *v8;
  LODWORD(STACK[0x9DC]) = STACK[0x18A4];
  v9[83] = v9[662];
  LODWORD(STACK[0xA0C]) = STACK[0x1894];
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(733649650
                                                                                              - ((a6 + 732461494) | 0x121236u)
                                                                                              + *(_QWORD *)(v10 + 8 * ((v13 * (6 * (a6 ^ 0xF5D) - 442)) ^ a6)));
  LODWORD(STACK[0xA2C]) = v7;
  return v15(a1, a2, a3, a4, a5, 0xC0391580E16, 3713000404);
}

void sub_19326A420()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v4 + 8 * v0);
  v3[338] = *(_QWORD *)(v1 + 177);
  v3[361] = *(_QWORD *)(v2 + 32);
  v3[341] = *(_QWORD *)(v1 + 161);
  v3[343] = *(_QWORD *)(v1 + 153);
  LODWORD(STACK[0x1044]) = STACK[0x1924];
  v3[345] = *(_QWORD *)(v1 + 145);
  v3[367] = v5;
  v3[347] = *(_QWORD *)(v1 + 121);
  v3[348] = *(_QWORD *)(v1 + 113);
  LODWORD(STACK[0x1054]) = STACK[0x1904];
  v3[349] = *(_QWORD *)(v1 + 105);
  v3[351] = *(_QWORD *)(v1 + 81);
  LODWORD(STACK[0x1074]) = STACK[0x1900];
  LODWORD(STACK[0x1084]) = STACK[0x18F4];
  LODWORD(STACK[0x10CC]) = STACK[0x18C4];
  v3[353] = *(_QWORD *)(v1 + 65);
  v3[354] = *(_QWORD *)(v1 + 49);
  v3[355] = *(_QWORD *)(v1 + 17);
  v3[357] = v3[662];
  LODWORD(STACK[0x10D8]) = STACK[0x1894];
  v3[359] = v3[605];
  JUMPOUT(0x19326A4D8);
}

uint64_t sub_19326A674()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2[390] = v1[88];
  v2[420] = v1[93];
  v2[391] = v1[87];
  v2[393] = v1[85];
  LODWORD(STACK[0x11AC]) = STACK[0x1BBC];
  v2[395] = v1[83];
  v2[396] = v1[90];
  v2[397] = v1[82];
  v2[399] = v1[81];
  LODWORD(STACK[0x11C4]) = STACK[0x1B9C];
  v2[401] = v1[79];
  v2[402] = v1[77];
  LODWORD(STACK[0x11D4]) = STACK[0x1B8C];
  LODWORD(STACK[0x11F0]) = STACK[0x1B7C];
  LODWORD(STACK[0x11F4]) = STACK[0x1B3C];
  v2[405] = v1[76];
  v2[407] = v1[75];
  v2[409] = v1[73];
  v2[411] = v1[70];
  v2[412] = v1[92];
  v2[425] = v1[110];
  LODWORD(STACK[0x1204]) = v0;
  v2[413] = v1[71];
  LODWORD(STACK[0x123C]) = STACK[0x1B2C];
  LODWORD(STACK[0x125C]) = v0;
  v3 = STACK[0x125C];
  v4 = STACK[0x123C];
  v5 = v2[413];
  v6 = STACK[0x1204];
  v7 = v2[425];
  v8 = v2[412];
  v9 = v2[411];
  v10 = v2[409];
  v11 = v2[407];
  v12 = v2[405];
  v13 = STACK[0x11F4];
  v14 = STACK[0x11F0];
  v15 = STACK[0x11D4];
  v16 = v2[402];
  v17 = v2[401];
  v18 = STACK[0x11C4];
  v19 = v2[399];
  v20 = v2[397];
  v21 = (uint64_t (*)(void))v2[396];
  v22 = v2[395];
  v23 = STACK[0x11AC];
  v24 = v2[393];
  v25 = v2[391];
  v26 = v2[420];
  v27 = v2[390];
  v2[35] = v27;
  v2[117] = v26;
  v2[37] = v25;
  v2[38] = v24;
  LODWORD(STACK[0x8BC]) = v23;
  v2[39] = v22;
  v2[41] = v21;
  v2[43] = v20;
  v2[44] = v19;
  LODWORD(STACK[0x8C8]) = v18;
  v2[45] = v17;
  v2[47] = v16;
  LODWORD(STACK[0x8CC]) = v15;
  LODWORD(STACK[0x8DC]) = v14;
  LODWORD(STACK[0x8EC]) = v13;
  v2[49] = v12;
  v2[50] = v11;
  v2[53] = v10;
  v2[55] = v9;
  v2[57] = v8;
  v2[133] = v7;
  LODWORD(STACK[0x908]) = v6;
  LODWORD(STACK[0x90C]) = v4;
  LODWORD(STACK[0x924]) = v3;
  v2[59] = v5;
  v2[60] = v27;
  v2[137] = v26;
  v2[61] = v25;
  v2[63] = v24;
  v2[65] = v22;
  v2[66] = v21;
  v2[67] = v20;
  v2[69] = v19;
  LODWORD(STACK[0x9A0]) = v18;
  v2[71] = v17;
  v2[72] = v16;
  LODWORD(STACK[0x9A4]) = v15;
  LODWORD(STACK[0x9B4]) = v14;
  LODWORD(STACK[0x9CC]) = v13;
  v2[75] = v12;
  v2[77] = v11;
  v2[79] = v10;
  v2[81] = v9;
  v2[82] = v8;
  v2[156] = v7;
  LODWORD(STACK[0x9DC]) = v6;
  v2[83] = v5;
  LODWORD(STACK[0xA0C]) = v4;
  LODWORD(STACK[0xA2C]) = v3;
  v2[287] = v27;
  v2[320] = v26;
  v2[289] = v25;
  v2[290] = v24;
  LODWORD(STACK[0xEFC]) = v23;
  v2[291] = v22;
  v2[293] = v21;
  v2[295] = v20;
  v2[296] = v19;
  LODWORD(STACK[0xF0C]) = v18;
  v2[299] = v17;
  v2[301] = v16;
  LODWORD(STACK[0xF28]) = v15;
  LODWORD(STACK[0xF2C]) = v14;
  LODWORD(STACK[0xF3C]) = v13;
  v2[303] = v12;
  v2[305] = v11;
  v2[306] = v10;
  v2[307] = v9;
  v2[309] = v8;
  v2[334] = v7;
  LODWORD(STACK[0xF6C]) = v6;
  v2[312] = v5;
  LODWORD(STACK[0xF8C]) = v4;
  LODWORD(STACK[0xF98]) = v3;
  v2[437] = v27;
  v2[448] = v26;
  v2[439] = v25;
  v2[441] = v24;
  LODWORD(STACK[0x1348]) = v23;
  v2[442] = v22;
  v2[443] = v21;
  v2[445] = v20;
  v2[446] = v19;
  LODWORD(STACK[0x134C]) = v18;
  v2[447] = v17;
  v2[450] = v16;
  LODWORD(STACK[0x135C]) = v15;
  LODWORD(STACK[0x137C]) = v14;
  LODWORD(STACK[0x13A8]) = v13;
  v2[452] = v12;
  v2[453] = v11;
  v2[454] = v10;
  v2[456] = v9;
  v2[459] = v8;
  v2[458] = v7;
  LODWORD(STACK[0x13AC]) = v6;
  v2[460] = v5;
  LODWORD(STACK[0x13C4]) = v3;
  return v21();
}

uint64_t sub_19326A958()
{
  int v0;
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  v6 = STACK[0xF98];
  v7 = (v0 + 893510913) & 0x9F03876A;
  LODWORD(STACK[0x19EC]) = STACK[0xF8C];
  v8 = v1 + v0 + 1791;
  v3[20] = v4[312];
  LODWORD(STACK[0x1A08]) = STACK[0xF6C];
  v3[48] = v4[334];
  v9 = v4[307];
  v3[23] = v4[309];
  v3[24] = v9;
  v3[26] = v4[306];
  v10 = v4[303];
  v3[28] = v4[305];
  v3[29] = v10;
  LODWORD(STACK[0x1A0C]) = STACK[0xF3C];
  LODWORD(STACK[0x1A1C]) = STACK[0xF2C];
  LODWORD(STACK[0x1A3C]) = STACK[0xF28];
  v3[30] = v4[301];
  v3[32] = v4[299];
  LODWORD(STACK[0x1A6C]) = STACK[0xF0C];
  v11 = v4[295];
  v3[34] = v4[296];
  v3[35] = v11;
  v12 = v4[293];
  v3[36] = v12;
  v13 = v4[291];
  v3[38] = v13;
  v14 = STACK[0xEFC];
  LODWORD(STACK[0x1A78]) = STACK[0xEFC];
  v15 = v4[290];
  v16 = v4[289];
  v3[40] = v15;
  v3[41] = v16;
  v17 = v4[320];
  v3[53] = v17;
  v18 = v4[287];
  v3[42] = v18;
  v4[313] = v18;
  v4[339] = v17;
  v4[315] = v16;
  v4[317] = v15;
  LODWORD(STACK[0xF9C]) = v14;
  v4[319] = v13;
  v4[321] = v12;
  v19 = v3[34];
  v4[323] = v3[35];
  v4[325] = v19;
  LODWORD(STACK[0xFB4]) = STACK[0x1A6C];
  v4[326] = v3[32];
  v4[327] = v3[30];
  LODWORD(STACK[0xFC0]) = STACK[0x1A3C];
  LODWORD(STACK[0xFC4]) = STACK[0x1A1C];
  LODWORD(STACK[0xFD4]) = STACK[0x1A0C];
  v20 = v3[28];
  v4[329] = v3[29];
  v4[331] = v20;
  v4[332] = v3[26];
  v21 = v3[23];
  v4[333] = v3[24];
  v4[335] = v21;
  v4[356] = v3[48];
  LODWORD(STACK[0xFE8]) = STACK[0x1A08];
  v4[337] = v3[20];
  LODWORD(STACK[0xFEC]) = STACK[0x19EC];
  v22 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)(((v6 != v2) * (v7 - 1829)) ^ v8)) - 4);
  LODWORD(STACK[0xFFC]) = v6;
  return v22();
}

uint64_t sub_19326AAE8@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  _DWORD *v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = **(_QWORD **)(v2 + 320);
  v5 = (a1 - 107) & 0xFE;
  v6 = *(_DWORD **)(v2 + 304);
  v7 = STACK[0x1A3C];
  v8 = LODWORD(STACK[0x1A3C]) + 451170848 - ((2 * LODWORD(STACK[0x1A3C])) & 0x35C8A440);
  v9 = (*v6 ^ 0x4ABBFDDE) - 1253834653 + ((2 * *v6) & 0x9577FBBC);
  *(_BYTE *)(v4 + v9 + 447) = (v5 + 36) ^ HIBYTE(v8);
  *(_BYTE *)(v4 + v9 + 448) = BYTE2(v8) ^ 0xE4;
  *(_BYTE *)(v4 + v9 + 449) = (((BYTE1(v8) ^ 0x52) - 2 * ((BYTE1(v8) ^ 0x52) & 7 ^ BYTE1(v8) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v4 + v9 + 450) = v8 ^ 0x20;
  *v6 += 4;
  v3[313] = *(_QWORD *)(v2 + 336);
  v3[339] = *(_QWORD *)(v2 + 424);
  v10 = *(_QWORD *)(v2 + 320);
  v3[315] = *(_QWORD *)(v2 + 328);
  v3[317] = v10;
  LODWORD(STACK[0xF9C]) = STACK[0x1A78];
  v3[319] = *(_QWORD *)(v2 + 304);
  v3[321] = *(_QWORD *)(v2 + 288);
  v11 = *(_QWORD *)(v2 + 272);
  v3[323] = *(_QWORD *)(v2 + 280);
  v3[325] = v11;
  LODWORD(STACK[0xFB4]) = STACK[0x1A6C];
  v3[326] = *(_QWORD *)(v2 + 256);
  v3[327] = *(_QWORD *)(v2 + 240);
  LODWORD(STACK[0xFC0]) = v7;
  LODWORD(STACK[0xFC4]) = STACK[0x1A1C];
  LODWORD(STACK[0xFD4]) = STACK[0x1A0C];
  v12 = *(_QWORD *)(v2 + 224);
  v3[329] = *(_QWORD *)(v2 + 232);
  v3[331] = v12;
  v3[332] = *(_QWORD *)(v2 + 208);
  v13 = *(_QWORD *)(v2 + 184);
  v3[333] = *(_QWORD *)(v2 + 192);
  v3[335] = v13;
  v3[356] = *(_QWORD *)(v2 + 384);
  LODWORD(STACK[0xFE8]) = STACK[0x1A08];
  v3[337] = *(_QWORD *)(v2 + 160);
  LODWORD(STACK[0xFEC]) = STACK[0x19EC];
  LODWORD(STACK[0xFFC]) = v1;
  LODWORD(STACK[0x1A7C]) = STACK[0xFFC];
  LODWORD(STACK[0x1A9C]) = STACK[0xFEC];
  *(_QWORD *)(v2 + 344) = v3[337];
  LODWORD(STACK[0x1AAC]) = STACK[0xFE8];
  *(_QWORD *)(v2 + 552) = v3[356];
  *(_QWORD *)(v2 + 368) = v3[335];
  v14 = v3[332];
  *(_QWORD *)(v2 + 392) = v3[333];
  *(_QWORD *)(v2 + 400) = v14;
  *(_QWORD *)(v2 + 416) = v3[331];
  v15 = v3[329];
  LODWORD(STACK[0x1AC4]) = STACK[0xFD4];
  LODWORD(STACK[0x1AD4]) = STACK[0xFC4];
  LODWORD(STACK[0x1AFC]) = STACK[0xFC0];
  v16 = v3[327];
  *(_QWORD *)(v2 + 432) = v15;
  *(_QWORD *)(v2 + 440) = v16;
  *(_QWORD *)(v2 + 448) = v3[326];
  LODWORD(STACK[0x1B08]) = STACK[0xFB4];
  v17 = v3[323];
  *(_QWORD *)(v2 + 464) = v3[325];
  *(_QWORD *)(v2 + 472) = v17;
  *(_QWORD *)(v2 + 488) = v3[321];
  v18 = v3[319];
  LODWORD(STACK[0x1B0C]) = STACK[0xF9C];
  v19 = v3[317];
  *(_QWORD *)(v2 + 504) = v18;
  *(_QWORD *)(v2 + 512) = v19;
  *(_QWORD *)(v2 + 520) = v3[315];
  *(_QWORD *)(v2 + 592) = v3[339];
  *(_QWORD *)(v2 + 536) = v3[313];
  return (*(uint64_t (**)(void))(v2 + 448))();
}

uint64_t sub_19326AD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v14 = STACK[0x13C4];
  v15 = v8 ^ (a8 - 412);
  v16 = v8 ^ 0x2BBA9E95;
  v11[122] = v12[460];
  v17 = v9 + v8 + 1387;
  LODWORD(STACK[0x1C98]) = STACK[0x13AC];
  v11[137] = v12[458];
  v11[124] = v12[459];
  v11[126] = v12[456];
  v11[127] = v12[454];
  v11[129] = v12[453];
  v11[130] = v12[452];
  LODWORD(STACK[0x1C9C]) = STACK[0x13A8];
  LODWORD(STACK[0x1CBC]) = STACK[0x137C];
  LODWORD(STACK[0x1CCC]) = STACK[0x135C];
  v11[131] = v12[450];
  v11[132] = v12[447];
  LODWORD(STACK[0x1CD8]) = STACK[0x134C];
  v11[135] = v12[446];
  v11[138] = v12[445];
  v18 = v12[443];
  v11[139] = v18;
  v19 = v12[442];
  v11[141] = v19;
  v20 = STACK[0x1348];
  LODWORD(STACK[0x1CDC]) = STACK[0x1348];
  v21 = v12[441];
  v11[143] = v21;
  v22 = v12[439];
  v11[144] = v22;
  v23 = v12[448];
  v11[142] = v23;
  v24 = v12[437];
  v11[145] = v24;
  v12[461] = v24;
  v12[462] = v23;
  v12[463] = v22;
  v12[464] = v21;
  LODWORD(STACK[0x13D0]) = v20;
  v12[465] = v19;
  v12[467] = v18;
  v12[469] = v11[138];
  v12[470] = v11[135];
  LODWORD(STACK[0x13D4]) = STACK[0x1CD8];
  v12[472] = v11[132];
  v12[474] = v11[131];
  LODWORD(STACK[0x13E4]) = STACK[0x1CCC];
  LODWORD(STACK[0x1404]) = STACK[0x1CBC];
  LODWORD(STACK[0x141C]) = STACK[0x1C9C];
  v12[475] = v11[130];
  v12[477] = v11[129];
  v12[480] = v11[127];
  v12[481] = v11[126];
  v12[482] = v11[124];
  v12[479] = v11[137];
  LODWORD(STACK[0x142C]) = STACK[0x1C98];
  v12[484] = v11[122];
  LODWORD(STACK[0x1440]) = v14;
  return (*(uint64_t (**)(void))(v13 + 8 * (((v14 == v10 + v16 - 1123) * (v15 ^ 0x94D)) ^ v17)))();
}

uint64_t sub_19326AEDC()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _DWORD *v7;
  uint64_t *v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);

  v6 = (v0 + 700) | 0x234;
  v7 = (_DWORD *)v2[138];
  v8 = (uint64_t *)v2[131];
  v9 = STACK[0x1CD8];
  v10 = STACK[0x1CD8];
  v11 = (v6 ^ v9 ^ 0x93A2BAC6) & (2 * (v9 & 0xC3CA3C33)) ^ v9 & 0xC3CA3C33;
  v12 = ((2 * (v9 ^ 0x10329C78)) ^ 0xA7F14096) & (v9 ^ 0x10329C78) ^ (2 * (v9 ^ 0x10329C78)) & 0xD3F8A04A;
  v13 = v12 ^ 0x5008A049;
  v14 = (v12 ^ 0x43700000) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x4FE2812C) & v13 ^ (4 * v13) & 0xD3F8A048;
  v16 = v14 ^ 0xD3F8A04B ^ (v15 ^ 0x43E08000) & (16 * v14);
  v17 = (16 * (v15 ^ 0x90182043)) & 0xD3F8A040 ^ 0xC070A04B ^ ((16 * (v15 ^ 0x90182043)) ^ 0x3F8A04B0) & (v15 ^ 0x90182043);
  v18 = *v8;
  v19 = (v16 << 8) & 0xD3F8A000 ^ v16 ^ ((v16 << 8) ^ 0xF8A04B00) & v17;
  v20 = LODWORD(STACK[0x1CD8]) ^ (2
                                * ((v19 << 16) & 0x53F80000 ^ v19 ^ ((v19 << 16) ^ 0x204B0000) & ((v17 << 8) & 0xD3F80000 ^ 0x3580000 ^ ((v17 << 8) ^ 0x78A00000) & v17)));
  v21 = ((2 * *v7) & 0x9577FF3A) + (*v7 ^ 0x4ABBFF9D) - 1253834653;
  *(_BYTE *)(*v8 + v21) = HIBYTE(v20) ^ 0xC5;
  *(_BYTE *)(v18 + v21 + 1) = BYTE2(v20) ^ 0xEB;
  *(_BYTE *)(v18 + v21 + 2) = (((BYTE1(v20) ^ 0x7C) - ((v20 >> 7) & 6) + 11) ^ 3) - 8;
  *(_BYTE *)(v18 + v21 + 3) = v20 ^ 0xA5;
  v22 = (*v7 + 4);
  *v7 = v22;
  v23 = *v8;
  v24 = (v22 ^ 0x3CB776135BF9EA9FLL) + ((2 * (_DWORD)v22) & 0xB7F3D53E) - 0x36DE23388DB87121;
  v25 = v2[142];
  v26 = (v25 ^ 0xA0CB8922E4DDAA8ALL) & (2 * (v25 & 0xA4EA0A28F6D1AC93)) ^ v25 & 0xA4EA0A28F6D1AC93;
  v27 = *(_QWORD *)(v5 + 8 * v0);
  v3[539] = v2[145];
  v3[523] = v25;
  v28 = ((2 * (v25 ^ 0xA05F99228C5CE38ALL)) ^ 0x96B2614F51A9E32) & (v25 ^ 0xA05F99228C5CE38ALL) ^ (2 * (v25 ^ 0xA05F99228C5CE38ALL)) & 0x4B5930A7A8D4F18;
  v3[540] = v2[144];
  v3[542] = v2[143];
  v29 = v28 ^ 0x494910A0A854109;
  v30 = (v28 ^ 0x20000070080610) & (4 * v26) ^ v26;
  LODWORD(STACK[0x1594]) = STACK[0x1CDC];
  v3[543] = v2[141];
  v3[545] = v2[139];
  v31 = ((4 * v29) ^ 0x12D64C29EA353C64) & v29 ^ (4 * v29) & 0x4B5930A7A8D4F18;
  v3[547] = v2[138];
  v3[550] = v2[135];
  v32 = (v31 ^ 0x9400086A050C00) & (16 * v30) ^ v30;
  LODWORD(STACK[0x15A0]) = v10;
  v3[551] = v2[132];
  v3[553] = v2[131];
  v33 = ((16 * (v31 ^ 0x421930210884319)) ^ 0x4B5930A7A8D4F190) & (v31 ^ 0x421930210884319) ^ (16 * (v31 ^ 0x421930210884319)) & 0x4B5930A7A8D4F10;
  LODWORD(STACK[0x15A4]) = STACK[0x1CCC];
  LODWORD(STACK[0x15B4]) = STACK[0x1CBC];
  LODWORD(STACK[0x15D4]) = STACK[0x1C9C];
  v3[555] = v2[130];
  v3[524] = v27;
  v3[556] = v2[129];
  v34 = (((v33 ^ 0x4A4830852090E09) << 8) ^ 0xB5930A7A8D4F1900) & (v33 ^ 0x4A4830852090E09) ^ ((v33 ^ 0x4A4830852090E09) << 8) & 0x4B5930A7A8D4F00;
  v3[557] = v2[127];
  v3[559] = v2[126];
  v3[560] = v2[124];
  v3[532] = v2[137];
  LODWORD(STACK[0x1604]) = STACK[0x1C98];
  v3[562] = v2[122];
  LODWORD(STACK[0x1610]) = v1;
  v3[564] = v23;
  v3[537] = v24;
  v3[567] = v2[130];
  v3[549] = v25 ^ (2
                 * ((v34 & 0x12084A0900000000 | 0x85010000000000) ^ (v33 ^ 0x11100228844100) & (v32 << 8) ^ v32 ^ (v34 ^ 0x491020A080D0000) & (((v33 ^ 0x11100228844100) & (v32 << 8) ^ v32) << 16))) ^ 0x5ECA7D7473FA24F6;
  v2[205] = v3[549];
  v2[203] = v3[567];
  v2[207] = v3[537];
  v2[204] = v3[564];
  LODWORD(STACK[0x1E94]) = STACK[0x1610];
  v2[206] = v3[562];
  LODWORD(STACK[0x1EB4]) = STACK[0x1604];
  v2[212] = v3[532];
  v2[208] = v3[560];
  v2[210] = v3[559];
  v2[213] = v3[557];
  v2[214] = v3[556];
  v2[216] = v3[555];
  LODWORD(STACK[0x1EE4]) = STACK[0x15D4];
  LODWORD(STACK[0x1EF0]) = STACK[0x15B4];
  LODWORD(STACK[0x1EF4]) = STACK[0x15A4];
  v2[218] = v3[553];
  v2[219] = v3[551];
  LODWORD(STACK[0x1F14]) = STACK[0x15A0];
  v2[220] = v3[550];
  v2[222] = v3[547];
  v2[224] = v3[545];
  v2[225] = v3[543];
  *(_DWORD *)(v4 - 252) = STACK[0x1594];
  v2[226] = v3[542];
  v2[228] = v3[540];
  v2[217] = v3[523];
  LODWORD(v25) = v2[203] > (unint64_t)(v2[204] + v2[207] - 0x5D952DACE41797ELL);
  v2[230] = v3[539];
  v35 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                             + 8
                                                             * (int)((v25
                                                                    * ((((v6 - 1648) | 0x402) ^ 0xFFFFF2E8)
                                                                     + ((v6 - 1531) | 0xA88))) ^ v6))
                                                 - 4);
  v2[231] = v3[524];
  return v35(0x1EFF41E7ALL, 0x767A3EBDF7FA0F3DLL);
}

void sub_19326B78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int *a29,void (*a30)(_QWORD, unint64_t, _QWORD))
{
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  unint64_t v53;

  v53 = v30[134];
  v52 = STACK[0xB28];
  v50 = v30[132];
  v51 = v30[187];
  v48 = v30[130];
  v49 = v30[131];
  v46 = v30[126];
  v47 = v30[128];
  v45 = STACK[0xB0C];
  v44 = STACK[0xAFC];
  v43 = STACK[0xAEC];
  v41 = v30[123];
  v42 = v30[125];
  v40 = STACK[0xAE8];
  v31 = v30[121];
  v32 = v30[119];
  v33 = v30[116];
  v34 = v30[115];
  v35 = STACK[0xADC];
  v36 = v30[113];
  v37 = v30[111];
  v38 = STACK[0x7F0];
  v39 = STACK[0x5A8];
  a30(*a29, STACK[0x318], LODWORD(STACK[0xABC]));
  STACK[0x670] = v39;
  STACK[0x890] = v38;
  STACK[0x678] = v37;
  STACK[0x690] = v36;
  LODWORD(STACK[0xB6C]) = v35;
  STACK[0x6A0] = v34;
  STACK[0x6B0] = v33;
  STACK[0x6C0] = v32;
  STACK[0x6D0] = v31;
  LODWORD(STACK[0xB8C]) = v40;
  STACK[0x6D8] = v41;
  STACK[0x6E0] = v42;
  LODWORD(STACK[0xB98]) = v43;
  LODWORD(STACK[0xB9C]) = v44;
  LODWORD(STACK[0xBAC]) = v45;
  STACK[0x6F0] = v46;
  STACK[0x700] = v47;
  STACK[0x708] = v48;
  STACK[0x710] = v49;
  STACK[0x720] = v50;
  STACK[0x8B0] = v51;
  LODWORD(STACK[0xBBC]) = v52;
  STACK[0x728] = v53;
  JUMPOUT(0x19326BB90);
}

uint64_t sub_19326BD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  BOOL *v50;
  _QWORD *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v53 = v49 ^ 0x7F1;
  v54 = *(_QWORD *)(v52 + 8 * v49);
  v55 = v51[636];
  *v50 = v55 == 0;
  v51[654] = v55 + 12;
  v51[656] = v55 + 8;
  v51[220] = v54;
  v56 = v51[637];
  v51[159] = v56;
  v51[162] = &STACK[0x874];
  v51[657] = v56;
  LODWORD(a49) = STACK[0x1848];
  LODWORD(a46) = STACK[0x183C];
  LODWORD(a45) = STACK[0x17F4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(v52 + 8 * (int)((55 * ((*v50 ^ ((_BYTE)v53 + 108) & 0xF6 ^ (a8 - 49)) & 1)) ^ (a1 + ((v53 - 4531860) & 0x2BFFBBF6) + 3635))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           v51[656],
           v51[654],
           LODWORD(STACK[0x1DA0]),
           a38,
           a39,
           a40,
           a41,
           v56,
           v51[634],
           v51[638],
           a45,
           a46,
           v51[639],
           v51[641],
           a49,
           v51[643],
           v51[646],
           v51[647]);
}

uint64_t sub_19326BE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_DWORD *a35,unsigned int *a36)
{
  int v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _BOOL4 v40;
  _BOOL4 v41;

  v38 = ((v36 + 548932637) | 0xB028046u)
      + (*a36 ^ 0xF7E5FD3FEEBFDB6BLL)
      + ((2 * *a36) & 0x1DD7FB6D6)
      + 0x81A02C0CC116210;
  v39 = (*a35 ^ 0xDF9FB2EF7F9E7BB4) + 0x20604D1166ED5CB9 + ((2 * *a35) & 0xFF3CF768);
  v40 = v38 < 0xE68BD86D;
  v41 = v38 > v39;
  if (v40 != v39 < 0xE68BD86D)
    v41 = v40;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((70 * !v41) ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_19326BF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,_DWORD *a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,_QWORD *a60)
{
  int v60;
  _DWORD *v61;
  uint64_t (*v62)(void);
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;

  v63 = (v60 - 1073753756) & 0x6BBABAFE;
  v64 = ((2 * a37) & 0x3BED5CE2) + (a37 ^ 0x9DF6AE71);
  v65 = -16777216 * *(unsigned __int8 *)(*a60 + (v63 ^ 0x49B3CB79) + v64);
  v64 += 1644777872;
  v66 = *(unsigned __int8 *)(*a60 + v64 + 1);
  v67 = *(unsigned __int8 *)(*a60 + v64 + 2);
  v68 = (((v66 + 4420934 - ((2 * v66) & 0x4C)) << 8) - 0x2000) ^ 0x43752600 | ((v65 | (*(unsigned __int8 *)(*a60 + v64) << 16))
                                                                             - 0x1000000);
  v69 = (v68 ^ 0x5A6FFF) & ((v67 - 1636428685 - ((2 * v67) & 0xE6)) ^ 0x82C7F04) ^ v68 & 0x69A59400;
  v70 = (v69 & 0x324D5387 ^ 0x12494387) + (v69 ^ 0x28A41408) - ((v69 ^ 0x28A41408) & 0x324D5387);
  *v61 = (((v70 ^ 0x1FBDF440) - 789305555) ^ ((v70 ^ 0x7B8AD7DE) - 1262287693) ^ ((v70 ^ 0x81840F66) + 1322114059))
       - 619719546;
  *a36 += 4;
  return v62();
}

_QWORD *sub_19326C100(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unsigned int a45,int a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;

  LODWORD(a39) = v63;
  LODWORD(a38) = v64;
  return (*(_QWORD *(**)(unint64_t *__return_ptr, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * (((((v66 - 88100094) ^ 0x267A4989) + 1355) * v63) ^ (a1 + v66 + 1101))))(&STACK[0x238], a47, a45, a58, *(_QWORD *)(v65 + 5056), a61, LODWORD(STACK[0x17D4]), v67, a59, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v62,
           v61);
}

uint64_t sub_19326C18C@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD))(a1
                                                                                             + 8
                                                                                             * ((220
                                                                                               * (LODWORD(STACK[0x874]) != 101372955)) ^ v2)))(LODWORD(STACK[0x183C]), LODWORD(STACK[0x17F4]), STACK[0x1720], *(_QWORD *)(a2 + 5056), *(_QWORD *)(a2 + 5088), LODWORD(STACK[0x17D4]));
}

void sub_19326C224()
{
  JUMPOUT(0x19326BE28);
}

uint64_t sub_19326C284(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  unint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  _QWORD *v42;
  int v43;
  uint64_t v44;
  uint64_t (*v45)(void);

  v42[510] = v38;
  v42[508] = v37;
  STACK[0x1D58] = v37;
  STACK[0x1D60] = v38;
  LOBYTE(STACK[0x1F83]) = v39;
  LODWORD(STACK[0x14D4]) = v41;
  LODWORD(STACK[0x1DA0]) = a37;
  LODWORD(STACK[0x1DB4]) = v41;
  LOBYTE(STACK[0x1DA7]) = v39;
  v42[166] = v42[652];
  LODWORD(STACK[0xBEC]) = v41;
  v42[225] = *(_QWORD *)(v40 + 41);
  v42[167] = v42[651];
  v42[168] = v42[650];
  LODWORD(STACK[0xC1C]) = STACK[0x184C];
  v42[170] = v42[648];
  v42[171] = v42[647];
  v42[173] = v42[646];
  v42[175] = v42[643];
  LODWORD(STACK[0xC28]) = STACK[0x1848];
  v42[176] = v42[641];
  v42[177] = v42[639];
  LODWORD(STACK[0xC2C]) = STACK[0x183C];
  LODWORD(STACK[0xC4C]) = STACK[0x17F4];
  v42[179] = v42[638];
  v42[180] = v42[657];
  v42[181] = v42[636];
  v42[182] = v42[634];
  v42[184] = v42[632];
  v42[230] = v42[649];
  LODWORD(STACK[0xC5C]) = STACK[0x17D4];
  v42[185] = v42[631];
  v45 = (uint64_t (*)(void))(*(_QWORD *)(v44
                                      + 8
                                      * ((LOBYTE(STACK[0x1DA7])
                                        * (((a1 + v43 + 354) | 0x1D) + ((a1 + v43 + 732) ^ 0xED6))) ^ (a1 + v43 + 745)))
                          - 8);
  LODWORD(STACK[0xC78]) = STACK[0x17C4];
  return v45();
}

uint64_t sub_19326C3AC()
{
  int v0;
  unsigned __int8 *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x1864]) = STACK[0x864];
  v2[166] = v2[652];
  LODWORD(STACK[0xBEC]) = 101330305;
  v2[225] = *(_QWORD *)(v1 + 41);
  v2[167] = v2[651];
  v2[168] = v2[650];
  LODWORD(STACK[0xC1C]) = STACK[0x184C];
  v2[170] = v2[648];
  v2[171] = v2[647];
  v2[173] = v2[646];
  v2[175] = v2[643];
  LODWORD(STACK[0xC28]) = STACK[0x1848];
  v2[176] = v2[641];
  v2[177] = v2[639];
  LODWORD(STACK[0xC2C]) = STACK[0x183C];
  LODWORD(STACK[0xC4C]) = STACK[0x17F4];
  v2[179] = v2[638];
  v2[180] = v2[637];
  v2[181] = 0;
  v2[182] = v2[634];
  v2[184] = v2[632];
  v2[230] = v2[649];
  LODWORD(STACK[0xC5C]) = STACK[0x17D4];
  v2[185] = v2[631];
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((*v1 * ((v0 - 349) ^ 0x1AA)) ^ v0)) - 8);
  LODWORD(STACK[0xC78]) = STACK[0x17C4];
  return v4();
}

uint64_t sub_19326C498()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BOOL4 v9;
  _BOOL4 v10;

  v4 = **(unsigned int **)(v2 + 5232);
  LODWORD(STACK[0x1874]) = v4;
  *(_QWORD *)(v1 + 97) = v4;
  v5 = LODWORD(STACK[0x1864]);
  v6 = **(unsigned int **)(v2 + 5248);
  *(_QWORD *)(v2 + 1328) = *(_QWORD *)(v2 + 5216);
  v7 = 53 * (v0 ^ 0x1D4u)
     + (v4 ^ 0xFEFBDD67BD65FFBFLL)
     + ((2 * v4) & 0x17ACBFF7ELL)
     + v5
     + ((unint64_t)(v5 < 0x60AD41B) << 32)
     + 0x104229878D45FADLL;
  LODWORD(STACK[0xBEC]) = 101330305;
  v8 = (v6 ^ 0xFDFBFF7BE3E7DDABLL) + 0x2040084585D5823 + ((2 * v6) & 0x1C7CFBB56);
  v9 = v7 < 0x3C4535CE;
  *(_QWORD *)(v2 + 1800) = *(_QWORD *)(v1 + 41);
  v10 = v7 > v8;
  *(_QWORD *)(v2 + 1336) = *(_QWORD *)(v2 + 5208);
  if (v9 != v8 < 0x3C4535CE)
    v10 = v9;
  *(_QWORD *)(v2 + 1344) = *(_QWORD *)(v2 + 5200);
  LODWORD(STACK[0xC1C]) = STACK[0x184C];
  *(_QWORD *)(v2 + 1360) = *(_QWORD *)(v2 + 5184);
  *(_QWORD *)(v2 + 1368) = *(_QWORD *)(v2 + 5176);
  *(_QWORD *)(v2 + 1384) = *(_QWORD *)(v2 + 5168);
  *(_QWORD *)(v2 + 1400) = *(_QWORD *)(v2 + 5144);
  LODWORD(STACK[0xC28]) = STACK[0x1848];
  *(_QWORD *)(v2 + 1408) = *(_QWORD *)(v2 + 5128);
  *(_QWORD *)(v2 + 1416) = *(_QWORD *)(v2 + 5112);
  LODWORD(STACK[0xC2C]) = STACK[0x183C];
  LODWORD(STACK[0xC4C]) = STACK[0x17F4];
  *(_QWORD *)(v2 + 1432) = *(_QWORD *)(v2 + 5104);
  *(_QWORD *)(v2 + 1440) = *(_QWORD *)(v2 + 5256);
  *(_QWORD *)(v2 + 1448) = *(_QWORD *)(v2 + 5088);
  *(_QWORD *)(v2 + 1456) = *(_QWORD *)(v2 + 5072);
  *(_QWORD *)(v2 + 1472) = *(_QWORD *)(v2 + 5056);
  *(_QWORD *)(v2 + 1840) = *(_QWORD *)(v2 + 5192);
  LODWORD(STACK[0xC5C]) = STACK[0x17D4];
  *(_QWORD *)(v2 + 1480) = *(_QWORD *)(v2 + 5048);
  LODWORD(STACK[0xC78]) = STACK[0x17C4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((205 * !v10) ^ v0 ^ 0x1195)) - 12))();
}

void sub_19326C670(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  **(_DWORD **)(v1 + 5232) = LODWORD(STACK[0x1864]) + LODWORD(STACK[0x1874]) + (((a1 + 826) | 0x12) ^ 0xF9F52E76);
  *(_QWORD *)(v1 + 1760) = *(_QWORD *)(v2 + 8 * a1) - 12;
  JUMPOUT(0x19326BD80);
}

void sub_19326C6D8(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,int a40,int a41,char a42,unint64_t a43,unint64_t a44)
{
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  int v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  int v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  int v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  uint64_t v87;

  a9[508] = a44;
  STACK[0x1D58] = a44;
  a9[510] = a43;
  STACK[0x1D60] = a43;
  LODWORD(STACK[0x1DA0]) = a38;
  LODWORD(STACK[0x14D4]) = a40;
  LODWORD(STACK[0x1DB4]) = a40;
  LOBYTE(STACK[0x1F83]) = a42;
  LOBYTE(STACK[0x1DA7]) = a42;
  a9[166] = a8;
  LODWORD(STACK[0xBEC]) = v58;
  a9[225] = a3;
  a9[167] = v54;
  a9[168] = v56;
  LODWORD(STACK[0xC1C]) = v60;
  a9[170] = v46;
  a9[171] = v47;
  a9[173] = v48;
  a9[175] = v49;
  LODWORD(STACK[0xC28]) = v50;
  a9[176] = v51;
  a9[177] = v52;
  LODWORD(STACK[0xC2C]) = a1;
  LODWORD(STACK[0xC4C]) = a2;
  a9[179] = v59;
  a9[180] = v55;
  a9[181] = a5;
  a9[182] = v61;
  a9[184] = a4;
  a9[230] = v53;
  LODWORD(STACK[0xC5C]) = a6;
  a9[185] = v44;
  LODWORD(STACK[0xC78]) = v57;
  v62 = v45 - 645549081;
  v64 = STACK[0xC78];
  v65 = STACK[0x800];
  v66 = STACK[0xC5C];
  v67 = STACK[0x968];
  v68 = STACK[0x7F8];
  v69 = STACK[0x7E8];
  v70 = STACK[0x7E0];
  v71 = STACK[0x7D8];
  v72 = STACK[0x7D0];
  v73 = STACK[0xC4C];
  v74 = STACK[0xC2C];
  v75 = STACK[0x7C0];
  v76 = STACK[0x7B8];
  v77 = STACK[0xC28];
  v78 = STACK[0x7B0];
  v79 = STACK[0x7A0];
  v80 = STACK[0x790];
  v81 = STACK[0x788];
  v82 = STACK[0xC1C];
  v83 = STACK[0x778];
  v84 = STACK[0x770];
  v85 = STACK[0x940];
  v86 = STACK[0xBEC];
  v87 = (v62 ^ 0x413u) + *(_QWORD *)(a7 + 8 * v62) - 1488;
  STACK[0x1230] = STACK[0x768];
  STACK[0x1250] = v85;
  STACK[0x1240] = v84;
  STACK[0x1248] = v83;
  LODWORD(STACK[0x14E4]) = v82;
  STACK[0x1260] = v81;
  STACK[0x1270] = v80;
  STACK[0x1280] = v79;
  STACK[0x12A0] = v78;
  LODWORD(STACK[0x1504]) = v77;
  STACK[0x12A8] = v76;
  STACK[0x12B0] = v75;
  STACK[0x1278] = v87;
  LODWORD(STACK[0x1534]) = v74;
  LODWORD(STACK[0x1540]) = v73;
  LODWORD(STACK[0x1544]) = v86;
  STACK[0x12B8] = v72;
  STACK[0x12C8] = v71;
  STACK[0x12E0] = v69;
  STACK[0x12E8] = v68;
  STACK[0x1288] = v67;
  LODWORD(STACK[0x1564]) = v66;
  STACK[0x12F8] = v65;
  LODWORD(STACK[0x1574]) = v64;
  STACK[0x1308] = v70;
  JUMPOUT(0x19326CF34);
}

void sub_19326CD88()
{
  _QWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = STACK[0xCFC];
  v2 = STACK[0xCEC];
  v3 = v0[209];
  v4 = STACK[0xCE8];
  v5 = v0[248];
  v6 = v0[206];
  v7 = v0[205];
  v8 = v0[204];
  v9 = v0[202];
  v10 = STACK[0xCDC];
  v11 = STACK[0xCBC];
  v12 = v0[201];
  v13 = v0[200];
  v14 = STACK[0xC8C];
  v15 = v0[198];
  v16 = v0[196];
  v17 = v0[195];
  v18 = v0[193];
  v19 = STACK[0xC7C];
  v20 = v0[191];
  v21 = v0[189];
  v22 = v0[243];
  v0[211] = v0[186];
  v0[253] = v22;
  v0[213] = v21;
  LODWORD(STACK[0xD0C]) = v1;
  v0[215] = v20;
  LODWORD(STACK[0xD28]) = v19;
  v0[216] = v18;
  v0[217] = v17;
  v0[219] = v16;
  v0[222] = v15;
  LODWORD(STACK[0xD2C]) = v14;
  v0[223] = v13;
  v0[224] = v12;
  LODWORD(STACK[0xD3C]) = v11;
  LODWORD(STACK[0xD6C]) = v10;
  v0[226] = v9;
  v0[228] = v8;
  v0[229] = v7;
  v0[232] = v6;
  v0[270] = v5;
  LODWORD(STACK[0xD8C]) = v4;
  v0[234] = v3;
  LODWORD(STACK[0xD98]) = v2;
  JUMPOUT(0x19326CE48);
}

void sub_19326D03C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_19326D044(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((v3 + ((v4 + v2 - 680171559) | 0x288A9064) - 74) * (a1 == 0)) ^ v2))
                            - 4))();
}

uint64_t sub_19326D084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(_QWORD))
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a34(*(_QWORD *)(v34 + 193));
  *(_QWORD *)(v36 + 2120) = 0;
  *(_BYTE *)(v35 + 1930) = 0;
  LODWORD(STACK[0xE4C]) = 101330303;
  LODWORD(STACK[0x1934]) = STACK[0xE4C];
  *(_BYTE *)(v35 + 359) = *(_BYTE *)(v35 + 1930);
  **(_QWORD **)(v36 + 5280) = *(_QWORD *)(v36 + 2120);
  return (*(uint64_t (**)(uint64_t))(v34 + 185))(v37);
}

void sub_19326D0F0()
{
  JUMPOUT(0x19326A61CLL);
}

uint64_t sub_19326D0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  uint64_t v65;

  return ((uint64_t (*)(void))(*(_QWORD *)(v65
                                        + 8
                                        * (((v64 - 525 + ((v64 - 1910383080) & 0x71DE1FFF) + 1011) * (a64 == 2)) ^ v64))
                            - 8))();
}

uint64_t sub_19326D13C@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 3032) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((v2 - 1662) ^ 0x7AC) * (v1 <= a1)) ^ v2))
                            - 57 * (v2 ^ 0xE06u)
                            + 1075))();
}

uint64_t sub_19326D17C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t (*v8)(void);

  v5 = a1 ^ 0x2BBA9D61u;
  v3[390] = *(_QWORD *)(v2 + 704);
  v6 = 55 * (a1 ^ 0x786u);
  v3[420] = *(_QWORD *)(v2 + 744);
  v3[391] = *(_QWORD *)(v2 + 696);
  v3[393] = *(_QWORD *)(v2 + 680);
  LODWORD(STACK[0x11AC]) = STACK[0x1BBC];
  v3[395] = *(_QWORD *)(v2 + 664);
  v3[396] = *(_QWORD *)(v2 + 720);
  v3[397] = *(_QWORD *)(v2 + 656);
  v3[399] = *(_QWORD *)(v2 + 648);
  LODWORD(STACK[0x11C4]) = STACK[0x1B9C];
  v3[401] = *(_QWORD *)(v2 + 632);
  v3[402] = *(_QWORD *)(v2 + 616);
  LODWORD(STACK[0x11D4]) = STACK[0x1B8C];
  LODWORD(STACK[0x11F0]) = STACK[0x1B7C];
  LODWORD(STACK[0x11F4]) = STACK[0x1B3C];
  v3[405] = *(_QWORD *)(v2 + 608);
  v3[407] = *(_QWORD *)(v2 + 600);
  v3[409] = *(_QWORD *)(v2 + 584);
  v3[411] = *(_QWORD *)(v2 + 560);
  v3[412] = *(_QWORD *)(v2 + 736);
  v3[425] = *(_QWORD *)(v2 + 880);
  LODWORD(STACK[0x1204]) = v1;
  v3[413] = *(_QWORD *)(v2 + 568);
  v7 = (2818 * *(unsigned __int8 *)(v2 + 879)) ^ a1;
  LODWORD(STACK[0x123C]) = STACK[0x1B2C];
  v8 = (uint64_t (*)(void))(733649650 - v5 - v6 + *(_QWORD *)(v4 + 8 * v7) + 931);
  LODWORD(STACK[0x125C]) = v1;
  return v8();
}

uint64_t sub_19326D28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(_QWORD, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;

  v65 = a27(v63[110], 2241923698);
  v63[94] = v65;
  v64[360] = v63[88];
  v64[398] = v63[93];
  v64[363] = v63[87];
  v64[365] = v63[85];
  LODWORD(STACK[0x10F4]) = STACK[0x1BBC];
  v64[369] = v63[83];
  v64[370] = v63[90];
  v64[372] = v63[82];
  v64[374] = v63[81];
  LODWORD(STACK[0x1104]) = STACK[0x1B9C];
  v64[375] = v63[79];
  v64[377] = v63[77];
  LODWORD(STACK[0x111C]) = STACK[0x1B8C];
  LODWORD(STACK[0x112C]) = STACK[0x1B7C];
  LODWORD(STACK[0x1174]) = STACK[0x1B3C];
  v64[378] = v63[76];
  v64[381] = v63[75];
  v64[383] = v63[73];
  v64[385] = v63[70];
  v64[387] = v63[92];
  v64[403] = v63[110];
  LODWORD(STACK[0x1180]) = 101372955;
  v64[389] = 0;
  LODWORD(STACK[0x1184]) = STACK[0x1B2C];
  LODWORD(STACK[0x119C]) = 101330303;
  return (*(uint64_t (**)(void))(a62 + 8 * ((2556 * (((v65 == 0) ^ (v62 - 16)) & 1)) ^ v62)))();
}

void sub_19326D3A0()
{
  int v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = v0 ^ 0x59ELL;
  v6 = **(_QWORD **)(v2 + 560);
  v7 = (**(unsigned int **)(v2 + 736) ^ 0xDE7F9E7DDACBFDE4)
     + 0x7BF6FD9FBF353BBCLL
     + ((2 * **(unsigned int **)(v2 + 736)) & 0x1B597FBC8);
  v8 = ((v7 & 0x265FEC660) << (((v5 - 12) & 0xFE) + 5)) & (v7 ^ 0xDF81CEF071FCF478) ^ v7 & 0x265FEC660;
  v3[539] = *(_QWORD *)(v2 + 704);
  v3[523] = *(_QWORD *)(v2 + 744);
  v9 = ((2 * (v7 ^ 0xDF81CEF43A0D74B8)) ^ 0x84115228BFE765B0) & (v7 ^ 0xDF81CEF43A0D74B8) ^ (2
                                                                                                 * (v7 ^ 0xDF81CEF43A0D74B8)) & 0x7A08AD165FF3B2D8;
  v3[540] = *(_QWORD *)(v2 + 696);
  v3[542] = *(_QWORD *)(v2 + 680);
  v10 = v9 ^ 0xA08A51240109248;
  v11 = (v9 ^ 0xA08A5005FE3A0C8) & (4 * v8) ^ v8;
  LODWORD(STACK[0x1594]) = STACK[0x1BBC];
  v3[543] = *(_QWORD *)(v2 + 664);
  v3[545] = *(_QWORD *)(v2 + 720);
  v12 = ((4 * v10) ^ 0xE822B4597FCECB60) & v10 ^ (4 * v10) & 0x7A08AD165FF3B2D8;
  v3[547] = *(_QWORD *)(v2 + 656);
  v3[550] = *(_QWORD *)(v2 + 648);
  v13 = (v12 ^ 0x6800A4105FC28250) & (16 * v11) ^ v11;
  LODWORD(STACK[0x15A0]) = STACK[0x1B9C];
  v3[551] = *(_QWORD *)(v2 + 632);
  v3[553] = *(_QWORD *)(v2 + 616);
  v14 = *(_QWORD *)(v4 + 8 * v5);
  v15 = ((16 * (v12 ^ 0x1208090600313098)) ^ 0xA08AD165FF3B2D80) & (v12 ^ 0x1208090600313098) ^ (16 * (v12 ^ 0x1208090600313098)) & 0x7A08AD165FF3B2D0;
  LODWORD(STACK[0x15A4]) = STACK[0x1B8C];
  LODWORD(STACK[0x15B4]) = STACK[0x1B7C];
  v16 = (v15 ^ 0x200881045F332000) & (v13 << 8) ^ v13;
  LODWORD(STACK[0x15D4]) = STACK[0x1B3C];
  v3[555] = *(_QWORD *)(v2 + 608);
  v17 = (((v15 ^ 0x5A002C1200C09258) << 8) ^ 0x8AD165FF3B2D800) & (v15 ^ 0x5A002C1200C09258) ^ ((v15 ^ 0x5A002C1200C09258) << 8) & 0x7A08AD165FF3B200;
  v3[524] = v14 - 4;
  v3[556] = *(_QWORD *)(v2 + 600);
  v3[557] = *(_QWORD *)(v2 + 584);
  v3[559] = *(_QWORD *)(v2 + 560);
  v3[560] = *(_QWORD *)(v2 + 736);
  v3[532] = *(_QWORD *)(v2 + 880);
  LODWORD(STACK[0x1604]) = v1;
  v18 = *(_QWORD *)(v2 + 752);
  v3[562] = v18;
  LODWORD(STACK[0x1610]) = STACK[0x1B2C];
  v3[564] = v18;
  v3[537] = 0x5D952DACE41797ELL;
  v3[567] = v6;
  v3[549] = v7 ^ (2
                * ((v17 & 0xD1212D000000000 | 0x5200A00000000000) ^ v16 ^ (v17 ^ 0x808041653B20000) & (v16 << 16))) ^ 0xEAA2528EE0D54E05;
  JUMPOUT(0x19326CB7CLL);
}

void sub_19326D6F8()
{
  _QWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = STACK[0x119C];
  v2 = STACK[0x1184];
  v3 = v0[389];
  v4 = STACK[0x1180];
  v5 = v0[403];
  v6 = v0[387];
  v7 = v0[385];
  v8 = v0[383];
  v9 = v0[381];
  v10 = v0[378];
  v11 = STACK[0x1174];
  v12 = STACK[0x112C];
  v13 = STACK[0x111C];
  v14 = v0[377];
  v15 = v0[375];
  v16 = STACK[0x1104];
  v17 = v0[374];
  v18 = v0[372];
  v19 = v0[370];
  v20 = v0[369];
  v21 = STACK[0x10F4];
  v22 = v0[365];
  v23 = v0[363];
  v24 = v0[398];
  v0[390] = v0[360];
  v0[420] = v24;
  v0[391] = v23;
  v0[393] = v22;
  LODWORD(STACK[0x11AC]) = v21;
  v0[395] = v20;
  v0[396] = v19;
  v0[397] = v18;
  v0[399] = v17;
  LODWORD(STACK[0x11C4]) = v16;
  v0[401] = v15;
  v0[402] = v14;
  LODWORD(STACK[0x11D4]) = v13;
  LODWORD(STACK[0x11F0]) = v12;
  LODWORD(STACK[0x11F4]) = v11;
  v0[405] = v10;
  v0[407] = v9;
  v0[409] = v8;
  v0[411] = v7;
  v0[412] = v6;
  v0[425] = v5;
  LODWORD(STACK[0x1204]) = v4;
  v0[413] = v3;
  LODWORD(STACK[0x123C]) = v2;
  LODWORD(STACK[0x125C]) = v1;
  JUMPOUT(0x19326A734);
}

void sub_19326D8BC()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = STACK[0x1F14];
  **(_DWORD **)(v1 + 1776) += v0 + v3 + 1027 + LODWORD(STACK[0x1F14]) - 1010157616;
  v2[461] = *(_QWORD *)(v1 + 1840);
  v2[462] = *(_QWORD *)(v1 + 1736);
  v2[463] = *(_QWORD *)(v1 + 1824);
  v2[464] = *(_QWORD *)(v1 + 1808);
  LODWORD(STACK[0x13D0]) = *(_DWORD *)(v4 - 252);
  v2[465] = *(_QWORD *)(v1 + 1800);
  v2[467] = *(_QWORD *)(v1 + 1792);
  v2[469] = *(_QWORD *)(v1 + 1776);
  v2[470] = *(_QWORD *)(v1 + 1760);
  LODWORD(STACK[0x13D4]) = v5;
  v2[472] = *(_QWORD *)(v1 + 1752);
  v2[474] = *(_QWORD *)(v1 + 1744);
  LODWORD(STACK[0x13E4]) = STACK[0x1EF4];
  LODWORD(STACK[0x1404]) = STACK[0x1EF0];
  LODWORD(STACK[0x141C]) = STACK[0x1EE4];
  v2[475] = *(_QWORD *)(v1 + 1728);
  v2[477] = *(_QWORD *)(v1 + 1712);
  v2[480] = *(_QWORD *)(v1 + 1704);
  v2[481] = *(_QWORD *)(v1 + 1680);
  v2[482] = *(_QWORD *)(v1 + 1664);
  v2[479] = *(_QWORD *)(v1 + 1696);
  LODWORD(STACK[0x142C]) = STACK[0x1EB4];
  v2[484] = *(_QWORD *)(v1 + 1648);
  LODWORD(STACK[0x1440]) = STACK[0x1E94];
  JUMPOUT(0x19326D9A8);
}

uint64_t sub_19326DB50()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v1[85] = *(_QWORD *)(v0 + 1576);
  v1[160] = *(_QWORD *)(v0 + 1584);
  v1[87] = *(_QWORD *)(v0 + 1568);
  v1[88] = *(_QWORD *)(v0 + 1560);
  v2 = STACK[0x1E84];
  LODWORD(STACK[0xA38]) = STACK[0x1E84];
  v1[89] = *(_QWORD *)(v0 + 1544);
  v1[91] = *(_QWORD *)(v0 + 1536);
  v1[93] = *(_QWORD *)(v0 + 1528);
  v1[94] = *(_QWORD *)(v0 + 1512);
  v3 = STACK[0x1E44];
  LODWORD(STACK[0xA3C]) = STACK[0x1E44];
  v1[97] = *(_QWORD *)(v0 + 1496);
  v1[100] = *(_QWORD *)(v0 + 1488);
  v4 = STACK[0x1E34];
  LODWORD(STACK[0xA4C]) = STACK[0x1E34];
  v5 = STACK[0x1DEC];
  LODWORD(STACK[0xA5C]) = STACK[0x1DEC];
  v6 = STACK[0x1DDC];
  LODWORD(STACK[0xA78]) = STACK[0x1DDC];
  v1[102] = *(_QWORD *)(v0 + 1472);
  v1[103] = *(_QWORD *)(v0 + 1456);
  v1[104] = *(_QWORD *)(v0 + 1432);
  v1[105] = *(_QWORD *)(v0 + 1424);
  v1[165] = *(_QWORD *)(v0 + 1552);
  v7 = STACK[0x1DD8];
  LODWORD(STACK[0xA7C]) = STACK[0x1DD8];
  v1[107] = *(_QWORD *)(v0 + 1416);
  v8 = STACK[0x1DC4];
  LODWORD(STACK[0xA8C]) = STACK[0x1DC4];
  v1[186] = *(_QWORD *)(v0 + 1576);
  v1[243] = *(_QWORD *)(v0 + 1584);
  v1[189] = *(_QWORD *)(v0 + 1568);
  v1[191] = *(_QWORD *)(v0 + 1560);
  LODWORD(STACK[0xC7C]) = v2;
  v1[193] = *(_QWORD *)(v0 + 1544);
  v1[195] = *(_QWORD *)(v0 + 1536);
  v1[196] = *(_QWORD *)(v0 + 1528);
  v1[198] = *(_QWORD *)(v0 + 1512);
  LODWORD(STACK[0xC8C]) = v3;
  v1[200] = *(_QWORD *)(v0 + 1496);
  v1[201] = *(_QWORD *)(v0 + 1488);
  LODWORD(STACK[0xCBC]) = v4;
  LODWORD(STACK[0xCDC]) = v6;
  v1[202] = *(_QWORD *)(v0 + 1472);
  v1[204] = *(_QWORD *)(v0 + 1456);
  v1[205] = *(_QWORD *)(v0 + 1432);
  v1[206] = *(_QWORD *)(v0 + 1424);
  v1[248] = *(_QWORD *)(v0 + 1552);
  LODWORD(STACK[0xCE8]) = v7;
  v1[209] = *(_QWORD *)(v0 + 1416);
  v1[109] = 0;
  LODWORD(STACK[0xCEC]) = v8;
  LODWORD(STACK[0xCFC]) = STACK[0x1DDC];
  LODWORD(STACK[0xD9C]) = v5;
  return (*(uint64_t (**)(void))(v0 + 1600))();
}

uint64_t sub_19326DCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  int v65;
  uint64_t v66;

  return ((uint64_t (*)(void))(*(_QWORD *)(v66
                                        + 8
                                        * (((a64 == ((a8 + v64 - 2014) ^ (a8 + 94))) * (v65 + (v64 ^ (a8 - 1998)) + 82)) ^ v64))
                            - 8))();
}

uint64_t sub_19326DD18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + 4528) = v3;
  v9 = v3 - 1;
  v10 = (a1 & (2 * v9)) + (v9 ^ a2);
  *(_BYTE *)(v6[204] + v10 + v6[236]) = *(_BYTE *)(v6[203] + v10 + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((459 * (v9 == 0)) | (v5 + a3 + 3520))) - 8))();
}

uint64_t sub_19326DD80(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v3 - 1;
  v11 = (a1 & (2 * v10)) + (v10 ^ a2);
  *(_BYTE *)(v5 + v11 + v4) = *(_BYTE *)(v2 + v11 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v10 == 0) * v7) | v6)) - 8))();
}

uint64_t sub_19326DDBC@<X0>(char a1@<W7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)(v60 + 4528) = v58;
  return (*(uint64_t (**)(void))(v61
                              + 8 * (((a58 == 3) ^ (15 * (a2 ^ (a1 - 83)))) & 1 | (v59 + a2 + 3292))))();
}

uint64_t sub_19326DDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  uint64_t v65;

  return (*(uint64_t (**)(void))(v65 + 8 * ((56 * (a64 == ((v64 + 1002082395) & 0xEFFFFFFF ^ (a8 + 94)))) ^ v64)))();
}

uint64_t sub_19326DE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  int v64;

  LODWORD(STACK[0xDBC]) = STACK[0x1934];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * ((*(unsigned __int8 *)(v63 + 359) * (v62 + v64 - 23)) ^ (v64 - 733645373))) - 4))(a1, a2, a3, a4, a5, a6, a7, 733649558);
}

uint64_t sub_19326DE44@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a1 + 66;
  v4[273] = *(_QWORD *)(v2 + 177);
  v7 = 91 * (v6 ^ 0xB3u);
  v8 = (v7 ^ 0xFFFFFFFFFFFFF9F3) + *(_QWORD *)(v5 + 8 * v6);
  LODWORD(STACK[0xE78]) = STACK[0x1924];
  LODWORD(STACK[0xE7C]) = STACK[0x1904];
  v4[274] = *(_QWORD *)(v2 + 161);
  v4[277] = *(_QWORD *)(v2 + 153);
  v4[311] = v3[4];
  v4[279] = *(_QWORD *)(v2 + 145);
  v4[281] = *(_QWORD *)(v2 + 137);
  v4[314] = v8;
  v4[283] = *(_QWORD *)(v2 + 81);
  LODWORD(STACK[0xE8C]) = STACK[0x18F4];
  LODWORD(STACK[0xEBC]) = STACK[0x18C4];
  v4[284] = *(_QWORD *)(v2 + 65);
  v4[285] = *(_QWORD *)(v2 + 49);
  v4[287] = *(_QWORD *)(v2 + 17);
  v4[289] = *(_QWORD *)(v2 + 9);
  v4[290] = *(_QWORD *)(v2 + 1);
  v4[320] = *v3;
  LODWORD(STACK[0xEDC]) = STACK[0x18A4];
  v4[291] = v4[662];
  LODWORD(STACK[0xEEC]) = STACK[0x1894];
  LODWORD(STACK[0xEFC]) = 1;
  LODWORD(STACK[0x1958]) = STACK[0xEFC];
  LODWORD(STACK[0x1960]) = STACK[0xEEC];
  *(_QWORD *)(v2 + 225) = v4[291];
  LODWORD(STACK[0x1964]) = STACK[0xEDC];
  v3[22] = v4[320];
  *(_QWORD *)(v2 + 241) = v4[290];
  v9 = v4[287];
  v3[1] = v4[289];
  v3[2] = v9;
  v3[3] = v4[285];
  v10 = v4[284];
  LODWORD(STACK[0x1974]) = STACK[0xEBC];
  LODWORD(STACK[0x1994]) = STACK[0xE8C];
  v11 = v4[283];
  v3[5] = v10;
  v3[6] = v11;
  v12 = v4[314];
  v3[7] = v4[281];
  v3[9] = v4[279];
  v3[27] = v4[311];
  v13 = v4[277];
  v14 = v4[274];
  v3[11] = v13;
  v3[12] = v14;
  v15 = STACK[0xE7C];
  LODWORD(STACK[0x19C0]) = STACK[0xE7C];
  v16 = STACK[0xE78];
  LODWORD(STACK[0x19C4]) = STACK[0xE78];
  v17 = v4[273];
  v3[14] = v17;
  v18 = v4[38];
  v3[16] = v18;
  v3[17] = v12;
  v19 = *(_DWORD *)(v18 + 12);
  v18 += 12;
  v3[18] = v18;
  LODWORD(STACK[0x19DC]) = v19;
  v4[321] = v17;
  LODWORD(STACK[0xFB4]) = v16;
  LODWORD(STACK[0xFC0]) = v15;
  v4[323] = v14;
  v4[325] = v13;
  v4[356] = v3[27];
  v4[326] = v3[9];
  v4[327] = v3[7];
  v4[329] = v18;
  LODWORD(STACK[0xFC4]) = STACK[0x1958];
  v4[331] = v12;
  v4[332] = v3[16];
  v20 = v3[5];
  v4[333] = v3[6];
  LODWORD(STACK[0xFD4]) = STACK[0x1994];
  LODWORD(STACK[0xFE8]) = STACK[0x1974];
  v4[335] = v20;
  v4[337] = v3[3];
  v21 = v3[1];
  v4[338] = v3[2];
  v4[341] = v21;
  v4[343] = *(_QWORD *)(v2 + 241);
  v4[361] = v3[22];
  LODWORD(STACK[0xFEC]) = STACK[0x1964];
  v4[345] = *(_QWORD *)(v2 + 225);
  LODWORD(STACK[0xFFC]) = STACK[0x1960];
  LODWORD(STACK[0x1044]) = 101330305;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v19 < (((_DWORD)v7 + 881402354) & 0xCB76D9FA) - 509)
                                     * (v1 + ((v7 - 339831564) & 0x3FFBFFF6) - 9)) ^ v7)))();
}

uint64_t sub_19326E41C@<X0>(char a1@<W7>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = LODWORD(STACK[0x19DC]);
  v8 = *(unsigned int *)(v4[16] + 8);
  v5[293] = v4[14];
  LODWORD(STACK[0xF0C]) = STACK[0x19C4];
  v9 = (v7 ^ 0x7CAEFBDDFEF3CAFFLL) - 0x7CAEFBDDD1378DC6 + ((2 * v7) & 0x1FDE795FELL);
  LODWORD(STACK[0xF28]) = STACK[0x19C0];
  v10 = (v8 ^ 0xDDFE7FFEDFFDDF77)
      + 0x220180014DBE5DBELL
      + ((v8 << ((a2 ^ (a1 + 120)) + 11)) & 0x1BFFBBEEELL);
  v11 = v4[11];
  v12 = v9 < 0x2DBC3D35;
  v5[295] = v4[12];
  v5[296] = v11;
  v13 = v9 > v10;
  if (v12 != v10 < 0x2DBC3D35)
    v13 = v12;
  v5[334] = v4[27];
  v5[299] = v4[9];
  v5[301] = v4[7];
  v5[303] = v4[18];
  LODWORD(STACK[0xF2C]) = STACK[0x1958];
  v14 = v4[16];
  v5[305] = v4[17];
  v5[306] = v14;
  v15 = v4[5];
  v5[307] = v4[6];
  LODWORD(STACK[0xF3C]) = STACK[0x1994];
  LODWORD(STACK[0xF6C]) = STACK[0x1974];
  v5[309] = v15;
  v5[312] = v4[3];
  v16 = v4[1];
  v5[313] = v4[2];
  v5[315] = v16;
  v5[317] = *(_QWORD *)(v2 + 241);
  v5[339] = v4[22];
  LODWORD(STACK[0xF8C]) = STACK[0x1964];
  v5[319] = *(_QWORD *)(v2 + 225);
  LODWORD(STACK[0xF98]) = STACK[0x1960];
  LODWORD(STACK[0xF9C]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((3421 * v13) ^ a2)) - 12))();
}

uint64_t sub_19326E5B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(v4 + 8 * a1);
  v6 = a1 ^ 0x47E;
  v3[347] = *(_QWORD *)(v2 + 112);
  LODWORD(STACK[0x1054]) = STACK[0x19C4];
  LODWORD(STACK[0x1074]) = STACK[0x19C0];
  v7 = *(_QWORD *)(v2 + 88);
  v3[348] = *(_QWORD *)(v2 + 96);
  v3[349] = v7;
  v3[367] = *(_QWORD *)(v2 + 216);
  v3[351] = *(_QWORD *)(v2 + 72);
  v3[353] = *(_QWORD *)(v2 + 56);
  v3[354] = *(_QWORD *)(v2 + 144);
  LODWORD(STACK[0x1084]) = STACK[0x1958];
  v8 = *(_QWORD *)(v2 + 128);
  v3[355] = *(_QWORD *)(v2 + 136);
  v3[357] = *(_QWORD *)(v2 + 128);
  v3[379] = v5 + v6 - 1426;
  LODWORD(STACK[0x10CC]) = STACK[0x1994];
  LODWORD(STACK[0x10D8]) = STACK[0x1974];
  v3[359] = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 16);
  v3[360] = *(_QWORD *)(v2 + 24);
  v3[363] = v9;
  v3[365] = *(_QWORD *)(v1 + 225);
  LODWORD(STACK[0x10DC]) = STACK[0x1960];
  v3[369] = v8;
  LODWORD(STACK[0x10F4]) = 4;
  v10 = (v6 - 305);
  v11 = LODWORD(STACK[0x10F4]);
  *(_QWORD *)(v2 + 560) = v3[369];
  LODWORD(STACK[0x1B2C]) = STACK[0x10DC];
  *(_QWORD *)(v2 + 568) = v3[365];
  *(_QWORD *)(v2 + 584) = v3[363];
  *(_QWORD *)(v2 + 600) = v3[360];
  *(_QWORD *)(v2 + 608) = v3[359];
  LODWORD(STACK[0x1B3C]) = STACK[0x10D8];
  LODWORD(STACK[0x1B7C]) = STACK[0x10CC];
  v12 = v3[379];
  *(_QWORD *)(v2 + 616) = v3[357];
  *(_QWORD *)(v2 + 632) = v3[355];
  LODWORD(STACK[0x1B8C]) = STACK[0x1084];
  *(_QWORD *)(v2 + 648) = v3[354];
  *(_QWORD *)(v2 + 656) = v3[353];
  *(_QWORD *)(v2 + 664) = v3[351];
  *(_QWORD *)(v2 + 744) = v3[367];
  *(_QWORD *)(v2 + 680) = v3[349];
  *(_QWORD *)(v2 + 696) = v3[348];
  LODWORD(STACK[0x1B9C]) = STACK[0x1074];
  LODWORD(STACK[0x1BBC]) = STACK[0x1054];
  *(_QWORD *)(v2 + 704) = v3[347];
  *(_QWORD *)(v2 + 720) = v12;
  v13 = *(_QWORD *)(v2 + 560);
  v14 = *(unsigned int *)(v13 + 8);
  *(_QWORD *)(v2 + 736) = v13 + 8;
  v15 = v10 + (v11 ^ 0xFFF9A6B39FFBFF27) + ((2 * v11) & 0x13FF7FE4ELL) + 0x6594C6003FC84 + v14;
  *(_QWORD *)(v2 + 864) = v15;
  *(_BYTE *)(v2 + 879) = v15 < 0xFFFFFFFF;
  v3[398] = v14;
  v16 = v3[398];
  *(_QWORD *)(v2 + 880) = 2 * v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((((v16 & 0xFFFFFFFF80000000) != 0) * (((v10 - 1013) | 0x1002) + 1178)) ^ v10))
                            - ((((_DWORD)v10 + 1197) | 0x88u) ^ 0x98ELL)))();
}

uint64_t sub_19326E670()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t (*v13)(void);

  v6 = STACK[0x1A7C];
  v7 = LODWORD(STACK[0x1A7C]) == v1;
  v3[195] = v2[67];
  LODWORD(STACK[0xCBC]) = STACK[0x1B0C];
  LODWORD(STACK[0xCDC]) = STACK[0x1B08];
  v3[196] = v2[65];
  v8 = v2[63];
  v3[198] = v2[64];
  v3[243] = v2[74];
  v3[200] = v8;
  v9 = v2[58];
  v3[201] = v2[59];
  LODWORD(STACK[0xCE8]) = STACK[0x1AFC];
  v3[202] = v9;
  v3[204] = v2[56];
  v10 = v2[54];
  v3[205] = v2[55];
  LODWORD(STACK[0xCEC]) = STACK[0x1AD4];
  v3[206] = v10;
  v3[209] = v2[52];
  v11 = v2[49];
  v3[211] = v2[50];
  v12 = v7;
  v3[213] = v11;
  v3[215] = v2[46];
  v3[248] = v2[69];
  LODWORD(STACK[0xCFC]) = STACK[0x1AAC];
  v3[216] = v2[43];
  LODWORD(STACK[0xD0C]) = STACK[0x1A9C];
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((2491 * v12) ^ (v4 + v0))) - (v4 ^ 0x2BBA9AF2));
  LODWORD(STACK[0xD28]) = v6;
  return v13();
}

uint64_t sub_19326E75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22)
{
  int v22;
  int v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x12C4]) = STACK[0x1B0C];
  v25[421] = v24[65];
  v25[423] = v24[61];
  v27 = v24[58];
  v25[424] = v24[59];
  LODWORD(STACK[0x12D4]) = STACK[0x1AFC];
  v25[427] = v27;
  v25[430] = v24[56];
  v28 = v24[54];
  v25[432] = v24[55];
  LODWORD(STACK[0x12F4]) = STACK[0x1AD4];
  LODWORD(STACK[0x1320]) = STACK[0x1AC4];
  v29 = v22 + 3017;
  v30 = *(_QWORD *)(v26 + 8 * v22);
  v25[434] = v28;
  v25[444] = v30;
  v31 = v24[49];
  v25[436] = v24[50];
  v25[437] = v31;
  v25[439] = v24[46];
  v25[448] = v24[69];
  LODWORD(STACK[0x1324]) = STACK[0x1AAC];
  v25[441] = v24[43];
  LODWORD(STACK[0x133C]) = STACK[0x1A9C];
  LODWORD(STACK[0x1348]) = a21;
  v25[442] = a22;
  v24[95] = v25[442];
  LODWORD(STACK[0x1BD4]) = STACK[0x1348];
  LODWORD(STACK[0x1BE4]) = STACK[0x133C];
  v24[97] = v25[441];
  LODWORD(STACK[0x1BF8]) = STACK[0x1324];
  v24[117] = v25[448];
  v24[99] = v25[439];
  v24[100] = v25[437];
  v24[101] = v25[436];
  v32 = v25[444];
  v24[103] = v25[434];
  LODWORD(STACK[0x1BFC]) = STACK[0x1320];
  LODWORD(STACK[0x1C3C]) = STACK[0x12F4];
  v24[105] = v25[432];
  v24[106] = v25[430];
  v24[107] = v25[427];
  LODWORD(STACK[0x1C5C]) = STACK[0x12D4];
  v24[111] = v25[424];
  v24[113] = v25[423];
  v33 = v25[421];
  v24[115] = v33;
  v34 = STACK[0x12C4];
  LODWORD(STACK[0x1C8C]) = STACK[0x12C4];
  v35 = v25[38];
  v24[118] = v35;
  v25[491] = v35;
  v36 = *(_DWORD *)(v35 + 12);
  v35 += 12;
  v24[119] = v32;
  v24[121] = v35;
  v37 = LODWORD(STACK[0x1BD4]);
  v38 = (v37 | ((unint64_t)(v37 < 0x48394D0C) << 32)) + 0x40A6317FC2B82B5;
  v24[133] = v38;
  v24[134] = (v36 ^ 0x4F795FF7D6BDFFFFLL) + v38 + ((2 * v36) & 0x1AD7BFFFELL) - 0x218125250191054;
  LODWORD(STACK[0x1454]) = v34;
  LODWORD(STACK[0x1464]) = v37;
  v25[493] = v33;
  v25[495] = v24[95];
  v25[509] = v38;
  v25[496] = v35;
  v25[498] = v24[113];
  v25[500] = v24[111];
  LODWORD(STACK[0x1484]) = STACK[0x1C5C];
  v25[501] = v24[107];
  v25[502] = v24[106];
  v25[504] = v24[105];
  LODWORD(STACK[0x149C]) = STACK[0x1C3C];
  LODWORD(STACK[0x14AC]) = STACK[0x1BFC];
  v25[506] = v24[103];
  v25[507] = v24[119];
  v25[508] = v24[101];
  v25[511] = v24[100];
  v25[513] = v24[99];
  v25[510] = v24[117];
  LODWORD(STACK[0x14C0]) = STACK[0x1BF8];
  v25[514] = v24[97];
  LODWORD(STACK[0x14C4]) = STACK[0x1BE4];
  v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((519 * ((v36 ^ 0x4F795FF7D6BDFFFFLL) + v38 + ((2 * v36) & 0x1AD7BFFFELL) - 0x5383C3101B22CFC0 < ((v29 - v23 - 3331) ^ (a8 - 408) ^ 0xFFFFFDF3uLL))) ^ v29))
                                                                                              - 4);
  LODWORD(STACK[0x14D4]) = 101330305;
  return v39(a1, a2, a3, a4, a5, 0xC0391580E16, 3713000404);
}

uint64_t sub_19326EA38()
{
  int v0;
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(void);

  v6 = v3[118];
  v7 = *(unsigned int *)(v6 + 8);
  v8 = v3[134] - 0x516BB0BDCB09BF68;
  v4[443] = v6;
  LODWORD(STACK[0x134C]) = STACK[0x1C8C];
  LODWORD(STACK[0x135C]) = STACK[0x1BD4];
  v4[445] = v3[115];
  v4[446] = v3[95];
  v4[458] = v3[133];
  v4[447] = v3[121];
  v4[450] = v3[113];
  v4[452] = v3[111];
  LODWORD(STACK[0x137C]) = STACK[0x1C5C];
  v4[453] = v3[107];
  v4[454] = v3[106];
  v4[456] = v3[105];
  LODWORD(STACK[0x13A8]) = STACK[0x1C3C];
  LODWORD(STACK[0x13AC]) = STACK[0x1BFC];
  v4[459] = v3[103];
  v4[460] = v3[119];
  v4[461] = v3[101];
  v4[463] = v3[100];
  v4[464] = v3[99];
  v4[462] = v3[117];
  LODWORD(STACK[0x13C4]) = STACK[0x1BF8];
  v4[465] = v3[97];
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v8 > v7) * (v1 + ((v0 - 335823625) & 0x3FBEDBF6) + 2715)) ^ v0))
                         - 8);
  LODWORD(STACK[0x13D0]) = v2;
  return v9();
}

void sub_19326EB50()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;

  v4 = *(_QWORD *)(v3 + 8 * v0);
  v5 = STACK[0x1BD4];
  v6 = LODWORD(STACK[0x1BD4]) - 1211714824;
  v2[347] = v1[118];
  LODWORD(STACK[0x1054]) = STACK[0x1C8C];
  LODWORD(STACK[0x1074]) = v5;
  v2[348] = v1[115];
  v2[349] = v1[95];
  v2[367] = v1[133];
  v2[351] = v1[121];
  v2[353] = v1[113];
  v2[354] = v1[111];
  LODWORD(STACK[0x1084]) = STACK[0x1C5C];
  v2[355] = v1[107];
  v2[357] = v1[106];
  v2[379] = ((v0 + 894) ^ 0xFFFFFFFFFFFFFA7ELL) + v4;
  LODWORD(STACK[0x10CC]) = STACK[0x1C3C];
  LODWORD(STACK[0x10D8]) = STACK[0x1BFC];
  v2[359] = v1[103];
  v2[360] = v1[119];
  v2[363] = v1[101];
  v2[365] = v1[97];
  LODWORD(STACK[0x10DC]) = STACK[0x1BE4];
  v2[369] = v1[118];
  LODWORD(STACK[0x10F4]) = v6;
  JUMPOUT(0x19327036CLL);
}

uint64_t sub_19326EC2C()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t (*v8)(void);

  v6 = STACK[0x1CEC];
  v7 = STACK[0x1CEC];
  v3[195] = v2[171];
  LODWORD(STACK[0xCBC]) = STACK[0x1D9C];
  LODWORD(STACK[0xCDC]) = STACK[0x1D7C];
  v3[196] = v2[169];
  v3[198] = v2[167];
  v3[243] = v2[164];
  v3[200] = v2[166];
  v3[201] = v2[163];
  LODWORD(STACK[0xCE8]) = STACK[0x1D6C];
  v3[202] = v2[161];
  v3[204] = v2[160];
  v3[205] = v2[157];
  LODWORD(STACK[0xCEC]) = STACK[0x1D4C];
  v3[206] = v2[155];
  v3[209] = v2[153];
  v3[211] = v2[151];
  v3[213] = v2[150];
  v3[215] = v2[149];
  v3[248] = v2[159];
  LODWORD(STACK[0xCFC]) = STACK[0x1D3C];
  v3[216] = v2[147];
  LODWORD(STACK[0xD0C]) = STACK[0x1D0C];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v5
                                     + 8 * ((4221 * (v6 == v1 + ((v4 - 1665524990) & 0x378B4BB7) - 432)) ^ (v4 + v0)))
                         - 4);
  LODWORD(STACK[0xD28]) = v7;
  return v8();
}

void sub_19326ED30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *(_QWORD *)(v22 + 8 * v19);
  LODWORD(STACK[0x12C4]) = STACK[0x1D9C];
  v21[421] = v20[169];
  v21[423] = v20[165];
  v21[424] = v20[163];
  LODWORD(STACK[0x12D4]) = STACK[0x1D6C];
  v21[427] = v20[161];
  v21[430] = v20[160];
  v21[432] = v20[157];
  LODWORD(STACK[0x12F4]) = STACK[0x1D4C];
  LODWORD(STACK[0x1320]) = STACK[0x1D48];
  v21[434] = v20[155];
  v21[444] = v23;
  v21[436] = v20[151];
  v21[437] = v20[150];
  v21[439] = v20[149];
  v21[448] = v20[159];
  LODWORD(STACK[0x1324]) = STACK[0x1D3C];
  v21[441] = v20[147];
  LODWORD(STACK[0x133C]) = STACK[0x1D0C];
  LODWORD(STACK[0x1348]) = a19;
  JUMPOUT(0x19326E7F8);
}

uint64_t sub_19326EDE0()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;
  uint64_t (*v8)(void);

  v6 = STACK[0x1CEC];
  v7 = LODWORD(STACK[0x1CEC]) == v1;
  v3[195] = v2[171];
  LODWORD(STACK[0xCBC]) = STACK[0x1D9C];
  LODWORD(STACK[0xCDC]) = STACK[0x1D7C];
  v3[196] = v2[169];
  v3[198] = v2[167];
  v3[243] = v2[164];
  v3[200] = v2[166];
  v3[201] = v2[163];
  LODWORD(STACK[0xCE8]) = STACK[0x1D6C];
  v3[202] = v2[161];
  v3[204] = v2[160];
  v3[205] = v2[157];
  LODWORD(STACK[0xCEC]) = STACK[0x1D4C];
  v3[206] = v2[155];
  v3[209] = v2[153];
  v3[211] = v2[151];
  v3[213] = v2[150];
  v3[215] = v2[149];
  v3[248] = v2[159];
  LODWORD(STACK[0xCFC]) = STACK[0x1D3C];
  v3[216] = v2[147];
  LODWORD(STACK[0xD0C]) = STACK[0x1D0C];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2724 * v7) ^ (v4 + v0))) - ((v4 + v0) ^ 0x64));
  LODWORD(STACK[0xD28]) = v6;
  return v8();
}

uint64_t sub_19326EECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t (*v15)(void);

  v12 = v10[38];
  v10[578] = v12;
  v13 = *(_DWORD *)(v12 + 12);
  v12 += 12;
  v10[580] = v12;
  v14 = (v13 ^ 0xFD31E2FFFFBBDFC0)
      + v10[598]
      + (((unint64_t)v13 << (v8 + a8 + 11)) & 0x1FF77BF80);
  v10[603] = v14;
  v10[195] = v9[171];
  LODWORD(STACK[0xCBC]) = STACK[0x1D9C];
  LODWORD(STACK[0xCDC]) = STACK[0x1D7C];
  v10[196] = v12;
  v10[198] = v9[167];
  v10[243] = v9[164];
  v10[200] = v9[166];
  v10[201] = v9[163];
  LODWORD(STACK[0xCE8]) = STACK[0x1D6C];
  v10[202] = v9[161];
  v10[204] = v9[160];
  v10[205] = v9[157];
  LODWORD(STACK[0xCEC]) = STACK[0x1D4C];
  v10[206] = v10[578];
  v10[209] = v9[153];
  v10[211] = v9[151];
  v10[213] = v9[150];
  v10[215] = v9[149];
  v10[248] = v9[159];
  LODWORD(STACK[0xCFC]) = STACK[0x1D3C];
  v10[216] = v9[147];
  LODWORD(STACK[0xD0C]) = STACK[0x1D0C];
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((1244 * (v14 < 0xFFFFFFFB)) ^ v8)) - 4);
  LODWORD(STACK[0xD28]) = 101330305;
  return v15();
}

uint64_t sub_19326F010()
{
  unsigned int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v5 = *(unsigned int *)(v3[578] + 8);
  v6 = v3[603];
  v3[41] = v2[171];
  v7 = v6 + 3730040259;
  LODWORD(STACK[0x8CC]) = STACK[0x1D9C];
  v8 = (v5 ^ 0xBEFFFFFFFFE5F4F7) + 0x41000000DE6DF0C8 + ((2 * v5) & 0x1FFCBE9EELL);
  v9 = v8 > 0xDE53E5BE && v7 > v8;
  LODWORD(STACK[0x8DC]) = STACK[0x1D7C];
  v10 = v9;
  v11 = v2[167];
  v3[43] = v3[580];
  v3[44] = v11;
  v3[117] = v2[164];
  v3[45] = v2[166];
  v3[47] = v2[165];
  v12 = v2[163];
  LODWORD(STACK[0x8EC]) = STACK[0x1D6C];
  v13 = v2[161];
  v3[49] = v12;
  v3[50] = v13;
  v3[53] = v2[160];
  v3[55] = v2[157];
  LODWORD(STACK[0x908]) = STACK[0x1D4C];
  LODWORD(STACK[0x90C]) = STACK[0x1D48];
  v3[57] = v3[578];
  v14 = v2[151];
  v3[59] = v2[153];
  v3[60] = v14;
  v3[61] = v2[150];
  v3[63] = v2[149];
  v3[133] = v2[159];
  LODWORD(STACK[0x924]) = STACK[0x1D3C];
  v3[65] = v2[147];
  LODWORD(STACK[0x954]) = STACK[0x1D0C];
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((3630 * v10) ^ v0)) - ((v0 + 800774665) & 0x7BFFBEFE ^ 0x2BBA9AF2));
  LODWORD(STACK[0x974]) = v1;
  return v15();
}

uint64_t sub_19326F160()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = v0 ^ 0x468;
  v5 = *(_QWORD *)(v3 + 8 * v0) + v4 - 1418;
  v2[347] = *(_QWORD *)(v1 + 1368);
  LODWORD(STACK[0x1054]) = STACK[0x1D9C];
  LODWORD(STACK[0x1074]) = STACK[0x1D7C];
  v2[348] = v2[580];
  v2[349] = *(_QWORD *)(v1 + 1336);
  v2[367] = *(_QWORD *)(v1 + 1312);
  v2[351] = *(_QWORD *)(v1 + 1328);
  v2[353] = *(_QWORD *)(v1 + 1320);
  v2[354] = *(_QWORD *)(v1 + 1304);
  LODWORD(STACK[0x1084]) = STACK[0x1D6C];
  v2[355] = *(_QWORD *)(v1 + 1288);
  v2[357] = *(_QWORD *)(v1 + 1280);
  v2[379] = v5;
  LODWORD(STACK[0x10CC]) = STACK[0x1D4C];
  LODWORD(STACK[0x10D8]) = STACK[0x1D48];
  v2[359] = v2[578];
  v2[360] = *(_QWORD *)(v1 + 1224);
  v2[363] = *(_QWORD *)(v1 + 1208);
  v2[365] = *(_QWORD *)(v1 + 1176);
  LODWORD(STACK[0x10DC]) = STACK[0x1D0C];
  v2[369] = v2[578];
  LODWORD(STACK[0x10F4]) = STACK[0x164C];
  v6 = (v4 - 305);
  v7 = LODWORD(STACK[0x10F4]);
  *(_QWORD *)(v1 + 560) = v2[369];
  LODWORD(STACK[0x1B2C]) = STACK[0x10DC];
  *(_QWORD *)(v1 + 568) = v2[365];
  *(_QWORD *)(v1 + 584) = v2[363];
  *(_QWORD *)(v1 + 600) = v2[360];
  *(_QWORD *)(v1 + 608) = v2[359];
  LODWORD(STACK[0x1B3C]) = STACK[0x10D8];
  LODWORD(STACK[0x1B7C]) = STACK[0x10CC];
  v8 = v2[379];
  *(_QWORD *)(v1 + 616) = v2[357];
  *(_QWORD *)(v1 + 632) = v2[355];
  LODWORD(STACK[0x1B8C]) = STACK[0x1084];
  *(_QWORD *)(v1 + 648) = v2[354];
  *(_QWORD *)(v1 + 656) = v2[353];
  *(_QWORD *)(v1 + 664) = v2[351];
  *(_QWORD *)(v1 + 744) = v2[367];
  *(_QWORD *)(v1 + 680) = v2[349];
  *(_QWORD *)(v1 + 696) = v2[348];
  LODWORD(STACK[0x1B9C]) = STACK[0x1074];
  LODWORD(STACK[0x1BBC]) = STACK[0x1054];
  *(_QWORD *)(v1 + 704) = v2[347];
  *(_QWORD *)(v1 + 720) = v8;
  v9 = *(_QWORD *)(v1 + 560);
  v10 = *(unsigned int *)(v9 + 8);
  *(_QWORD *)(v1 + 736) = v9 + 8;
  v11 = v6 + (v7 ^ 0xFFF9A6B39FFBFF27) + ((2 * v7) & 0x13FF7FE4ELL) + 0x6594C6003FC84 + v10;
  *(_QWORD *)(v1 + 864) = v11;
  *(_BYTE *)(v1 + 879) = v11 < 0xFFFFFFFF;
  v2[398] = v10;
  v12 = v2[398];
  *(_QWORD *)(v1 + 880) = 2 * v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((v12 & 0xFFFFFFFF80000000) != 0) * (((v6 - 1013) | 0x1002) + 1178)) ^ v6))
                            - ((((_DWORD)v6 + 1197) | 0x88u) ^ 0x98ELL)))();
}

uint64_t sub_19326F228@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t (*v14)(void);

  v5 = STACK[0x974];
  LODWORD(STACK[0x165C]) = STACK[0x954];
  v3[583] = v3[65];
  LODWORD(STACK[0x16A4]) = STACK[0x924];
  v3[624] = v3[133];
  v3[584] = v3[63];
  v3[586] = v3[61];
  v6 = v3[59];
  v3[587] = v3[60];
  v3[589] = v3[57];
  LODWORD(STACK[0x16B0]) = STACK[0x90C];
  LODWORD(STACK[0x16B4]) = STACK[0x908];
  v3[591] = v3[55];
  v3[592] = v3[53];
  v7 = v3[49];
  v3[594] = v3[50];
  LODWORD(STACK[0x16D4]) = STACK[0x8EC];
  v3[596] = v7;
  v3[599] = v3[47];
  v9 = v3[44];
  v8 = v3[45];
  v10 = v3[117];
  v11 = v3[43];
  v3[600] = v11;
  v12 = STACK[0x8DC];
  v13 = STACK[0x8CC];
  LODWORD(STACK[0x16E4]) = STACK[0x8CC];
  v3[195] = v3[41];
  LODWORD(STACK[0xCBC]) = v13;
  LODWORD(STACK[0xCDC]) = v12;
  v3[196] = v11;
  v3[198] = v9;
  v3[243] = v10;
  v3[200] = v8;
  v3[201] = v3[596];
  LODWORD(STACK[0xCE8]) = STACK[0x16D4];
  v3[202] = v3[594];
  v3[204] = v3[592];
  v3[205] = v3[591];
  LODWORD(STACK[0xCEC]) = STACK[0x16B4];
  v3[206] = v3[589];
  v3[209] = v6;
  v3[211] = v3[587];
  v3[213] = v3[586];
  v3[215] = v3[584];
  v3[248] = v3[624];
  LODWORD(STACK[0xCFC]) = STACK[0x16A4];
  v3[216] = v3[583];
  LODWORD(STACK[0xD0C]) = STACK[0x165C];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v4
                                      + 8 * (int)(((v5 == v2) * ((a1 + 1166396160) & 0x8EBF9EBF ^ 0x3DE)) ^ (a1 + v1)))
                          - 4);
  LODWORD(STACK[0xD28]) = v5;
  return v14();
}

uint64_t sub_19326F39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  unsigned int v14;

  v12 = **(_QWORD **)(v10 + 4712);
  v13 = *(_DWORD **)(v10 + 4800);
  v14 = ((2 * *v13) & 0xB717FB38) + (*v13 ^ 0xDB8BFD9C) + 611581738;
  *(_BYTE *)(v12 + v14 + 826) = v9[1932];
  *(_BYTE *)(v12 + v14 + 827) = v9[1933];
  *(_BYTE *)(v12 + v14 + 828) = v9[1934];
  *(_BYTE *)(v12 + v14 + (v8 ^ 0x2BBA9E40) - a8 + 733) = v9[1935];
  LODWORD(v12) = *v13 + 4;
  LODWORD(STACK[0x1714]) = v12;
  *v13 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((3682 * ((STACK[0xFB3] & 1) == 0)) ^ v8)) - 4))();
}

uint64_t sub_19326F450@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_DWORD *a25)
{
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t *v28;
  _DWORD *v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  _BOOL4 v35;

  v27 = STACK[0x1714];
  LODWORD(STACK[0x984]) = STACK[0x1714];
  LODWORD(STACK[0x9A0]) = 1382576665;
  v28 = *(uint64_t **)(v25 + 4712);
  v29 = *(_DWORD **)(v25 + 4800);
  v30 = LOBYTE(STACK[0x99F]);
  v31 = STACK[0x163C];
  v32 = *v28;
  v33 = *a25 + 451170848 - ((2 * *a25) & 0x35C8A440);
  v34 = ((a1 + 1597504507) & (2 * v27)) + (v27 ^ 0x2F9BFF9C) - 798752668;
  *(_BYTE *)(*v28 + v34) = HIBYTE(v33) ^ 0x1A;
  *(_BYTE *)(v32 + v34 + 1) = BYTE2(v33) ^ 0xE4;
  *(_BYTE *)(v32 + v34 + 2) = (((BYTE1(v33) ^ 0x52) - 2 * ((BYTE1(v33) ^ 0x52) & 7 ^ BYTE1(v33) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v32 + v34 + 3) = v33 ^ 0x20;
  *v29 += 4;
  v35 = v31 > 0x7D314B32;
  if (v30)
    v35 = v30;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((67 * !v35) ^ a1)) - 12))();
}

void sub_19326F598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  int v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(v14 + 8 * (v12 + v11 + 347));
  LODWORD(STACK[0x12C4]) = STACK[0x16E4];
  v13[421] = v13[600];
  v13[423] = v13[599];
  v13[424] = v13[596];
  LODWORD(STACK[0x12D4]) = STACK[0x16D4];
  v13[427] = v13[594];
  v13[430] = v13[592];
  v13[432] = v13[591];
  LODWORD(STACK[0x12F4]) = STACK[0x16B4];
  LODWORD(STACK[0x1320]) = STACK[0x16B0];
  v13[434] = v13[589];
  v13[444] = ((v12 + v11 + 3331) ^ 0xFFFFFFFFFFFFF29FLL) + v15;
  v13[436] = v13[587];
  v13[437] = v13[586];
  v13[439] = v13[584];
  v13[448] = v13[624];
  LODWORD(STACK[0x1324]) = STACK[0x16A4];
  v13[441] = v13[583];
  LODWORD(STACK[0x133C]) = STACK[0x165C];
  LODWORD(STACK[0x1348]) = a11;
  JUMPOUT(0x19326E7F8);
}

uint64_t sub_19326F680()
{
  int v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;
  uint64_t (*v8)(void);

  v6 = STACK[0x1CEC];
  v7 = LODWORD(STACK[0x1CEC]) == v1;
  v3[195] = v2[171];
  LODWORD(STACK[0xCBC]) = STACK[0x1D9C];
  LODWORD(STACK[0xCDC]) = STACK[0x1D7C];
  v3[196] = v2[169];
  v3[198] = v2[167];
  v3[243] = v2[164];
  v3[200] = v2[166];
  v3[201] = v2[163];
  LODWORD(STACK[0xCE8]) = STACK[0x1D6C];
  v3[202] = v2[161];
  v3[204] = v2[160];
  v3[205] = v2[157];
  LODWORD(STACK[0xCEC]) = STACK[0x1D4C];
  v3[206] = v2[155];
  v3[209] = v2[153];
  v3[211] = v2[151];
  v3[213] = v2[150];
  v3[215] = v2[149];
  v3[248] = v2[159];
  LODWORD(STACK[0xCFC]) = STACK[0x1D3C];
  v3[216] = v2[147];
  LODWORD(STACK[0xD0C]) = STACK[0x1D0C];
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1662 * v7) ^ (v4 + v0))) - ((v4 - 798440403) & 0x3DCA7FD) + 1821);
  LODWORD(STACK[0xD28]) = v6;
  return v8();
}

uint64_t sub_19326F780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t (*a25)(uint64_t),int *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  unsigned int v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unint64_t v67;
  int v68;
  unint64_t v69;
  int v70;
  uint64_t v71;

  v65 = v63[38];
  v63[602] = v65;
  v63[39] = 0;
  LODWORD(STACK[0x874]) = 0;
  a24(a22);
  v66 = *a26;
  v67 = *(_QWORD *)v65;
  v68 = *(_DWORD *)(v65 + 12);
  STACK[0x1518] = v65 + 12;
  v69 = STACK[0x1438];
  v70 = 597255653 * (((v64 - 144) & 0xCA740B1D | ~((v64 - 144) | 0xCA740B1D)) ^ 0x3C808B7B);
  STACK[0x1F98] = STACK[0x1430];
  STACK[0x1FA8] = v67;
  STACK[0x1FB8] = v69;
  *(_DWORD *)(v64 - 140) = v70 + 1581691396 + v68 - (((v62 - 1131584859) ^ v62 ^ 0xAEF) & (2 * v68));
  *(_DWORD *)(v64 - 128) = (v66 ^ 0x6739E7B8) - v70 + ((2 * v66) & 0xCE73CF70) - 1109393408;
  *(_DWORD *)(v64 - 112) = v70 + v62 + 1415;
  a23(v64 - 144);
  LODWORD(v65) = *(_DWORD *)(v64 - 144);
  v71 = a25(a22);
  LODWORD(STACK[0x9A4]) = v65;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62
                                                      + 8
                                                      * ((8 * ((_DWORD)v65 == 663729217)) | (16
                                                                                           * ((_DWORD)v65 == 663729217)) | v62))
                                          - 4))(v71);
}

uint64_t sub_19326F8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int *a13, void (*a14)(uint64_t), uint64_t a15, uint64_t (*a16)(_QWORD, uint64_t, uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  unsigned int v71;
  unint64_t v72;

  v69 = 486723911 * ((~v63 & 0xC782522D155959EBLL | v63 & 0x387DADD2EAA6A614) ^ 0xF53C89BCA5933971);
  *(_QWORD *)(v66 + 1952) = *(_QWORD *)(v68 + 8 * v62) - v69 - 8;
  *(_DWORD *)(v67 - 128) = v62 - 71465943 - v69;
  *(_QWORD *)(v66 + 1944) = v64;
  a14(v67 - 144);
  v70 = a16(*a13, a15, v65);
  v71 = ((2 * v70) & 0xEF35E87E) + (v70 ^ 0xF79AF43F);
  v72 = 486723911
      * (((v63 | 0x9AC338ECC00187CALL) - (v63 | 0x653CC7133FFE7835) + 0x653CC7133FFE7835) ^ 0xA87DE37D70CBE750);
  *(_QWORD *)(v66 + 1952) = *(_QWORD *)(a62 + 8 * (v62 ^ 5)) - v72 - 8;
  *(_QWORD *)(v66 + 1944) = v64;
  *(_DWORD *)(v67 - 128) = v62 - 71465943 - v72;
  a14(v67 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62
                                                      + 8
                                                      * ((7645 * (v71 == 3 * ((v62 + 1010) ^ 0x556) - 140841766)) ^ (v62 + 2719)))
                                          - 12))(733649558);
}

uint64_t sub_19326FA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),void (*a25)(uint64_t),_DWORD *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,uint64_t a61,uint64_t a62)
{
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  unsigned int v69;
  int v70;

  a24(a22);
  v65 = **(_QWORD **)(v63 + 4816);
  v66 = **(_DWORD **)(v63 + 4832);
  v67 = *(_QWORD *)(v63 + 4600);
  v68 = 597255653 * (((v64 - 144) & 0x8FC7EC02 | ~((v64 - 144) | 0x8FC7EC02)) ^ 0x79336C64);
  v69 = a60 + 1709 - v68 + (*a26 ^ 0xA55DFFFD) + ((2 * *a26) & 0x4ABBFFFA) + 2143017453;
  v62[248] = *(_QWORD *)(v63 + 4608);
  *(_DWORD *)(v64 - 128) = v69;
  *(_DWORD *)(v64 - 140) = v68 + 1581691396 + v66 - ((2 * v66) & 0xBC8D6408);
  v62[246] = v65;
  *(_DWORD *)(v64 - 112) = v68 + a60 + 1415;
  v62[244] = v67;
  a23(v64 - 144);
  v70 = *(_DWORD *)(v64 - 144);
  a25(a22);
  LODWORD(STACK[0x9A4]) = v70;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62
                                                      + 8
                                                      * (((v70 == 395293758)
                                                        * ((((a60 - 1464143794) & 0x57450FF5) - 1324) ^ 0x214)) ^ (a60 + 1709)))
                                          - 12))(733649558);
}

uint64_t sub_19326FBB0()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v2[143] = v1[171];
  LODWORD(STACK[0xB98]) = STACK[0x1D9C];
  LODWORD(STACK[0xB9C]) = STACK[0x1D7C];
  v2[145] = v1[169];
  v2[147] = v1[167];
  v2[203] = v1[164];
  v2[148] = v1[166];
  v2[149] = v1[165];
  v2[151] = v1[163];
  LODWORD(STACK[0xBAC]) = STACK[0x1D6C];
  v2[153] = v1[161];
  v2[154] = v1[160];
  v2[155] = v1[157];
  LODWORD(STACK[0xBBC]) = STACK[0x1D4C];
  LODWORD(STACK[0xBD8]) = STACK[0x1D48];
  v2[157] = v1[155];
  v2[158] = v1[153];
  v2[159] = v1[151];
  v2[162] = v1[150];
  v2[166] = v1[149];
  v2[207] = v1[159];
  LODWORD(STACK[0xBDC]) = STACK[0x1D3C];
  v2[167] = v1[147];
  v4 = STACK[0x1D0C];
  LODWORD(STACK[0xBEC]) = STACK[0x1D0C];
  LODWORD(STACK[0xC1C]) = 101330291;
  LODWORD(STACK[0x17C4]) = v4;
  v2[631] = v2[167];
  LODWORD(STACK[0x17D4]) = STACK[0xBDC];
  v2[649] = v2[207];
  v2[632] = v2[166];
  v2[634] = v2[162];
  v2[636] = v2[159];
  v2[637] = v2[158];
  v2[638] = v2[157];
  LODWORD(STACK[0x17E4]) = STACK[0xBD8];
  LODWORD(STACK[0x17F4]) = STACK[0xBBC];
  v2[639] = v2[155];
  v2[641] = v2[154];
  v2[643] = v2[153];
  LODWORD(STACK[0x183C]) = STACK[0xBAC];
  v2[646] = v2[151];
  v2[647] = v2[149];
  v5 = v2[148];
  v2[648] = v5;
  v6 = v2[203];
  STACK[0x1720] = v6;
  v7 = v2[147];
  v2[650] = v7;
  v8 = v2[145];
  v2[651] = v8;
  v9 = STACK[0xB9C];
  LODWORD(STACK[0x1848]) = STACK[0xB9C];
  v10 = STACK[0xB98];
  LODWORD(STACK[0x184C]) = STACK[0xB98];
  v11 = v2[143];
  v2[652] = v11;
  v2[195] = v11;
  LODWORD(STACK[0xCBC]) = v10;
  LODWORD(STACK[0xCDC]) = v9;
  v2[196] = v8;
  v2[198] = v7;
  v2[243] = v6;
  v2[200] = v5;
  v2[201] = v2[646];
  LODWORD(STACK[0xCE8]) = STACK[0x183C];
  v2[202] = v2[643];
  v2[204] = v2[641];
  v2[205] = v2[639];
  LODWORD(STACK[0xCEC]) = STACK[0x17F4];
  v2[206] = v2[638];
  v2[209] = v2[637];
  v2[211] = v2[636];
  v2[213] = v2[634];
  v2[215] = v2[632];
  v2[248] = v2[649];
  LODWORD(STACK[0xCFC]) = STACK[0x17D4];
  v2[216] = v2[631];
  LODWORD(STACK[0xD0C]) = STACK[0x17C4];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 384 * (v0 ^ 0x767)) - 4);
  LODWORD(STACK[0xD28]) = 101330291;
  return v12();
}

uint64_t sub_19326FC8C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (((LODWORD(STACK[0x9A4]) == 395293758)
                                                        * ((((v0 - 1464145503) & 0x57450FF5) - 1324) ^ 0x214)) ^ v0))
                                          - 12))(733649558);
}

void sub_19326FCEC(int a1@<W8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[37] = 0;
  v4 = *(_QWORD *)(v3 + 8 * a1);
  v2[245] = v1[171];
  LODWORD(STACK[0xDD4]) = STACK[0x1D9C];
  LODWORD(STACK[0xDE4]) = STACK[0x1D7C];
  v2[246] = v1[169];
  v2[247] = v1[167];
  v2[275] = v1[164];
  v2[249] = v1[166];
  v2[251] = v1[165];
  v2[252] = v1[163];
  LODWORD(STACK[0xDFC]) = STACK[0x1D6C];
  v2[292] = v4;
  v2[255] = v1[161];
  v2[257] = v1[160];
  v2[259] = v1[157];
  LODWORD(STACK[0xE1C]) = STACK[0x1D4C];
  LODWORD(STACK[0xE2C]) = STACK[0x1D48];
  v2[261] = v1[155];
  v2[262] = v1[153];
  v2[263] = v1[151];
  v2[265] = v1[150];
  v2[267] = v1[149];
  v2[297] = v1[159];
  LODWORD(STACK[0xE3C]) = STACK[0x1D3C];
  v2[268] = v1[147];
  LODWORD(STACK[0xE4C]) = STACK[0x1D0C];
  JUMPOUT(0x19326FDD8);
}

uint64_t sub_19326FF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  uint64_t v65;
  _QWORD *v66;

  v66 = *(_QWORD **)(v65 + 193);
  *v66 = 0;
  v66[1] = 0;
  *(_QWORD *)(v65 + 209) = v66 + 1;
  **(_QWORD **)(v65 + 193) = a27(4096, 2241923698);
  return (*(uint64_t (**)(void))(a62 + 8 * (((a64 == 3) * ((v64 ^ 0x2FF) - 1606)) ^ v64)))();
}

uint64_t sub_19326FF90(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v2 - 472 - v3 - 1467300626 + ((v2 + 2147399388) & 0xABBBDBF6))
                                               * (a1 == 0)) ^ (v2 - 472)))
                            - 8))();
}

uint64_t sub_19326FFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(_QWORD))
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a34(*(_QWORD *)(v34 + 193));
  *(_QWORD *)(v36 + 2168) = 0;
  *(_BYTE *)(v35 + 1930) = 0;
  LODWORD(STACK[0xE5C]) = 101330303;
  LODWORD(STACK[0x1934]) = STACK[0xE5C];
  *(_BYTE *)(v35 + 359) = *(_BYTE *)(v35 + 1930);
  **(_QWORD **)(v36 + 5280) = *(_QWORD *)(v36 + 2168);
  return (*(uint64_t (**)(uint64_t))(v34 + 185))(v37);
}

uint64_t sub_193270048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int v66;
  int v67;
  int v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v67 = STACK[0x874];
  LODWORD(STACK[0x1718]) = STACK[0x874];
  LODWORD(STACK[0xAE8]) = v67;
  v65[116] = *(_QWORD *)(v63 + 177);
  LODWORD(STACK[0xAEC]) = STACK[0x1924];
  LODWORD(STACK[0xAFC]) = STACK[0x1904];
  v65[119] = *(_QWORD *)(v63 + 161);
  v65[121] = *(_QWORD *)(v63 + 153);
  v65[183] = *(_QWORD *)(v64 + 32);
  v65[123] = *(_QWORD *)(v63 + 145);
  v65[125] = *(_QWORD *)(v63 + 137);
  v65[126] = *(_QWORD *)(v63 + 121);
  LODWORD(STACK[0xB0C]) = STACK[0x1900];
  v65[128] = *(_QWORD *)(v63 + 113);
  v65[130] = *(_QWORD *)(v63 + 105);
  v65[131] = *(_QWORD *)(v63 + 81);
  LODWORD(STACK[0xB28]) = STACK[0x18F4];
  LODWORD(STACK[0xB2C]) = STACK[0x18C4];
  v65[132] = *(_QWORD *)(v63 + 65);
  v65[134] = *(_QWORD *)(v63 + 49);
  v65[135] = *(_QWORD *)(v63 + 17);
  v65[136] = *(_QWORD *)(v63 + 9);
  v65[139] = *(_QWORD *)(v63 + 1);
  v65[187] = *(_QWORD *)v64;
  LODWORD(STACK[0xB3C]) = STACK[0x18A4];
  v65[141] = v65[662];
  v68 = (*(unsigned __int8 *)(v64 + 359) * ((v66 ^ 0x2BBA9D93) - 1121)) ^ (v62 + v66 + 3124);
  LODWORD(STACK[0xB6C]) = STACK[0x1894];
  v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a62 + 8 * v68) - ((v62 + v66 + 97) | 0x128u) + 481);
  LODWORD(STACK[0xB8C]) = STACK[0x1934];
  return v69(a1, a2, a3, a4, a5, a6, a7, 733649558);
}

uint64_t sub_19327016C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = v8[37];
  v8[605] = v10;
  v11 = LODWORD(STACK[0x1718]) > *(_DWORD *)(v10 + 8);
  v8[66] = *(_QWORD *)(v5 + 177);
  LODWORD(STACK[0x9B4]) = STACK[0x1924];
  LODWORD(STACK[0x9CC]) = STACK[0x1904];
  v8[67] = *(_QWORD *)(v5 + 161);
  v8[69] = *(_QWORD *)(v5 + 153);
  v8[137] = v7[4];
  v8[71] = *(_QWORD *)(v5 + 145);
  v8[72] = *(_QWORD *)(v5 + 137);
  v8[75] = *(_QWORD *)(v5 + 121);
  LODWORD(STACK[0x9DC]) = STACK[0x1900];
  v8[77] = *(_QWORD *)(v5 + 113);
  v8[79] = *(_QWORD *)(v5 + 105);
  v8[81] = *(_QWORD *)(v5 + 81);
  LODWORD(STACK[0xA0C]) = STACK[0x18C4];
  v8[82] = *(_QWORD *)(v5 + 65);
  v8[83] = *(_QWORD *)(v5 + 49);
  v8[85] = *(_QWORD *)(v5 + 17);
  v8[87] = *(_QWORD *)(v5 + 9);
  v8[88] = *(_QWORD *)(v5 + 1);
  v8[156] = *v7;
  LODWORD(STACK[0xA2C]) = STACK[0x18A4];
  v8[89] = v8[662];
  LODWORD(STACK[0xA38]) = STACK[0x1894];
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((v11 * (v4 + ((a4 + 691048551) | 0x28A08A6) + 1803)) ^ a4))
                                                                                              - 12);
  LODWORD(STACK[0xA3C]) = v6;
  return v12(0x1EFF41E7ALL, 0x767A3EBDF7FA0F3DLL, a1, a2, a3, 0xC0391580E16, 3713000404);
}

void sub_1932702A4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v4 + 8 * a1);
  v3[347] = *(_QWORD *)(v1 + 177);
  LODWORD(STACK[0x1054]) = STACK[0x1924];
  LODWORD(STACK[0x1074]) = STACK[0x1904];
  v3[348] = *(_QWORD *)(v1 + 161);
  v3[349] = *(_QWORD *)(v1 + 153);
  v3[367] = *(_QWORD *)(v2 + 32);
  v3[351] = *(_QWORD *)(v1 + 145);
  v3[353] = *(_QWORD *)(v1 + 137);
  v3[354] = *(_QWORD *)(v1 + 121);
  LODWORD(STACK[0x1084]) = STACK[0x1900];
  v3[355] = *(_QWORD *)(v1 + 113);
  v3[357] = *(_QWORD *)(v1 + 105);
  v3[379] = ((a1 + 925) ^ 0xFFFFFFFFFFFFFA72) + v5;
  LODWORD(STACK[0x10CC]) = STACK[0x18F4];
  LODWORD(STACK[0x10D8]) = STACK[0x18C4];
  v3[359] = *(_QWORD *)(v1 + 65);
  v3[360] = *(_QWORD *)(v1 + 49);
  v3[363] = *(_QWORD *)(v1 + 17);
  v3[365] = v3[662];
  LODWORD(STACK[0x10DC]) = STACK[0x1894];
  v3[369] = v3[605];
  JUMPOUT(0x193270368);
}

uint64_t sub_1932704D8()
{
  int v0;
  _QWORD *v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;

  v2[396] = v1[88];
  LODWORD(STACK[0x11C4]) = STACK[0x1BBC];
  LODWORD(STACK[0x11D4]) = STACK[0x1B9C];
  v2[397] = v1[87];
  v2[399] = v1[85];
  v2[425] = v1[93];
  v2[401] = v1[83];
  v2[402] = v1[82];
  v2[405] = v1[81];
  LODWORD(STACK[0x11F0]) = STACK[0x1B8C];
  v2[407] = v1[79];
  v2[409] = v1[77];
  v2[411] = v1[90];
  LODWORD(STACK[0x11F4]) = STACK[0x1B7C];
  LODWORD(STACK[0x1204]) = STACK[0x1B3C];
  v2[412] = v1[76];
  v2[413] = v1[75];
  v2[415] = v1[73];
  v2[417] = v1[70];
  v2[418] = v1[92];
  v2[429] = v1[110];
  LODWORD(STACK[0x123C]) = v0;
  v2[419] = v1[71];
  LODWORD(STACK[0x125C]) = STACK[0x1B2C];
  LODWORD(STACK[0x126C]) = v0;
  v3 = STACK[0x126C];
  v4 = STACK[0x125C];
  v5 = v2[419];
  v6 = STACK[0x123C];
  v7 = v2[429];
  v8 = v2[418];
  v9 = v2[417];
  v10 = v2[415];
  v11 = v2[413];
  v12 = v2[412];
  v13 = STACK[0x1204];
  v14 = STACK[0x11F4];
  v15 = (uint64_t (*)(uint64_t, uint64_t))v2[411];
  v16 = v2[409];
  v17 = v2[407];
  v18 = STACK[0x11F0];
  v19 = v2[405];
  v20 = v2[402];
  v21 = v2[401];
  v22 = v2[425];
  v23 = v2[399];
  v24 = v2[397];
  v25 = STACK[0x11D4];
  v26 = STACK[0x11C4];
  v27 = v2[396];
  v2[41] = v27;
  LODWORD(STACK[0x8CC]) = v26;
  LODWORD(STACK[0x8DC]) = v25;
  v2[43] = v24;
  v2[44] = v23;
  v2[117] = v22;
  v2[45] = v21;
  v2[47] = v20;
  LODWORD(STACK[0x8EC]) = v18;
  v2[49] = v19;
  v2[50] = v17;
  v2[53] = v16;
  v2[55] = v15;
  LODWORD(STACK[0x908]) = v14;
  LODWORD(STACK[0x90C]) = v13;
  v2[57] = v12;
  v2[59] = v11;
  v2[60] = v10;
  v2[61] = v9;
  v2[63] = v8;
  v2[133] = v7;
  LODWORD(STACK[0x924]) = v6;
  v2[65] = v5;
  LODWORD(STACK[0x954]) = v4;
  LODWORD(STACK[0x974]) = v3;
  v2[66] = v27;
  LODWORD(STACK[0x9B4]) = v26;
  LODWORD(STACK[0x9CC]) = v25;
  v2[67] = v24;
  v2[69] = v23;
  v2[137] = v22;
  v2[71] = v21;
  v2[72] = v20;
  v2[75] = v19;
  LODWORD(STACK[0x9DC]) = v18;
  v2[77] = v17;
  v2[79] = v16;
  v2[81] = v15;
  LODWORD(STACK[0xA0C]) = v13;
  v2[82] = v12;
  v2[83] = v11;
  v2[85] = v10;
  v2[87] = v9;
  v2[88] = v8;
  v2[156] = v7;
  LODWORD(STACK[0xA2C]) = v6;
  v2[89] = v5;
  LODWORD(STACK[0xA38]) = v4;
  LODWORD(STACK[0xA3C]) = v3;
  v2[293] = v27;
  LODWORD(STACK[0xF0C]) = v26;
  LODWORD(STACK[0xF28]) = v25;
  v2[295] = v24;
  v2[296] = v23;
  v2[334] = v22;
  v2[299] = v21;
  v2[301] = v20;
  v2[303] = v19;
  LODWORD(STACK[0xF2C]) = v18;
  v2[305] = v17;
  v2[306] = v16;
  v2[307] = v15;
  LODWORD(STACK[0xF3C]) = v14;
  LODWORD(STACK[0xF6C]) = v13;
  v2[309] = v12;
  v2[312] = v11;
  v2[313] = v10;
  v2[315] = v9;
  v2[317] = v8;
  v2[339] = v7;
  LODWORD(STACK[0xF8C]) = v6;
  v2[319] = v5;
  LODWORD(STACK[0xF98]) = v4;
  LODWORD(STACK[0xF9C]) = v3;
  v2[443] = v27;
  LODWORD(STACK[0x134C]) = v26;
  LODWORD(STACK[0x135C]) = v25;
  v2[445] = v24;
  v2[446] = v23;
  v2[458] = v22;
  v2[447] = v21;
  v2[450] = v20;
  v2[452] = v19;
  LODWORD(STACK[0x137C]) = v18;
  v2[453] = v17;
  v2[454] = v16;
  v2[456] = v15;
  LODWORD(STACK[0x13A8]) = v14;
  LODWORD(STACK[0x13AC]) = v13;
  v2[459] = v12;
  v2[460] = v11;
  v2[461] = v10;
  v2[463] = v9;
  v2[464] = v8;
  v2[462] = v7;
  LODWORD(STACK[0x13C4]) = v6;
  v2[465] = v5;
  LODWORD(STACK[0x13D0]) = v3;
  return v15(0x1EFF41E7ALL, 0x767A3EBDF7FA0F3DLL);
}

uint64_t sub_19327059C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  uint64_t v65;

  return ((uint64_t (*)(void))(*(_QWORD *)(v65 + 8 * (((a64 != 3) * (v64 ^ 0x1085)) ^ v64))
                            - (((v64 - 2329) | 0x8B4u) ^ 0xFF9)))();
}

uint64_t sub_1932705E0@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 3184) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v1 ^ 0x15E4 ^ (3647 * (v2 > a1))))
                            - ((76 * (v1 ^ 0x1042u)) ^ 0x988)))();
}

uint64_t sub_193270624@<X0>(int a1@<W8>)
{
  int v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(void);

  v4[396] = *(_QWORD *)(v3 + 704);
  LODWORD(STACK[0x11C4]) = STACK[0x1BBC];
  LODWORD(STACK[0x11D4]) = STACK[0x1B9C];
  v4[397] = *(_QWORD *)(v3 + 696);
  v4[399] = *(_QWORD *)(v3 + 680);
  v4[425] = *(_QWORD *)(v3 + 744);
  v4[401] = *(_QWORD *)(v3 + 664);
  v4[402] = *(_QWORD *)(v3 + 656);
  v4[405] = *(_QWORD *)(v3 + 648);
  LODWORD(STACK[0x11F0]) = STACK[0x1B8C];
  v4[407] = *(_QWORD *)(v3 + 632);
  v4[409] = *(_QWORD *)(v3 + 616);
  v4[411] = *(_QWORD *)(v3 + 720);
  LODWORD(STACK[0x11F4]) = STACK[0x1B7C];
  LODWORD(STACK[0x1204]) = STACK[0x1B3C];
  v4[412] = *(_QWORD *)(v3 + 608);
  v4[413] = *(_QWORD *)(v3 + 600);
  v4[415] = *(_QWORD *)(v3 + 584);
  v4[417] = *(_QWORD *)(v3 + 560);
  v4[418] = *(_QWORD *)(v3 + 736);
  v4[429] = *(_QWORD *)(v3 + 880);
  v4[419] = *(_QWORD *)(v3 + 568);
  v6 = (v2 + a1 + 80 + 1) ^ *(_BYTE *)(v3 + 879);
  LODWORD(STACK[0x125C]) = STACK[0x1B2C];
  LODWORD(STACK[0x123C]) = v1;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2 * (v6 & 1)) & 0xF7 | (8 * (v6 & 1)) | a1)) - 8);
  LODWORD(STACK[0x126C]) = v1;
  return v7();
}

uint64_t sub_19327071C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(_QWORD, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  _QWORD *v63;
  _QWORD *v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t (*v67)(void);

  v65 = v62 & 0x93859E7F;
  v66 = a27(v63[110], 2241923698);
  v63[94] = v66;
  v64[370] = v63[88];
  LODWORD(STACK[0x1104]) = STACK[0x1BBC];
  LODWORD(STACK[0x111C]) = STACK[0x1B9C];
  v64[372] = v63[87];
  v64[374] = v63[85];
  v64[403] = v63[93];
  v64[375] = v63[83];
  v64[377] = v63[82];
  v64[378] = v63[81];
  LODWORD(STACK[0x112C]) = STACK[0x1B8C];
  v64[381] = v63[79];
  v64[383] = v63[77];
  v64[385] = v63[90];
  LODWORD(STACK[0x1174]) = STACK[0x1B7C];
  LODWORD(STACK[0x1180]) = STACK[0x1B3C];
  v64[387] = v63[76];
  v64[389] = v63[75];
  v64[390] = v63[73];
  v64[391] = v63[70];
  v64[393] = v63[92];
  v64[420] = v63[110];
  LODWORD(STACK[0x1184]) = 101372955;
  LODWORD(STACK[0x119C]) = STACK[0x1B2C];
  v64[395] = 0;
  v67 = (uint64_t (*)(void))(*(_QWORD *)(a62
                                      + 8
                                      * (int)(((((v66 == 0) ^ (v65 - 7)) & 1)
                                             * ((v65 - 953793205) & 0x38D9BDEE ^ 0x959)) ^ v65))
                          - 8);
  LODWORD(STACK[0x11AC]) = 101330303;
  return v67();
}

uint64_t sub_19327085C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = v5 | 0x114;
  v12 = ((_DWORD)v11 - 742429025) & 0x2C4096FF;
  v13 = **(_QWORD **)(v7 + 560);
  v14 = (**(unsigned int **)(v7 + 736) ^ 0x3E3FF6C8EFFF5E3FLL)
      - 0x2632844004705225
      + ((v12 + 0x1DFFEB582) & (2 * **(unsigned int **)(v7 + 736)));
  v15 = (2 * (v14 & 0x71470F3E6)) & 0xA20602200 ^ v14 & 0x71470F3E6 ^ ((2 * (v14 & 0x71470F3E6)) | 0x1000000000) & (v14 ^ 0x2EBC5EEDA012C9D7);
  v8[545] = *(_QWORD *)(v7 + 704);
  LODWORD(STACK[0x15A0]) = STACK[0x1BBC];
  v16 = ((2 * (v14 ^ 0x2EBC5EEDA012C9D7)) ^ 0x1291242568C47462) & (v14 ^ 0x2EBC5EEDA012C9D7) ^ (2 * (v14 ^ 0x2EBC5EEDA012C9D7)) & 0x4942509AB4623A30;
  LODWORD(STACK[0x15A4]) = STACK[0x1B9C];
  v8[547] = *(_QWORD *)(v7 + 696);
  v17 = v16 ^ 0x4942508A94220A11;
  v18 = (v16 ^ 0xC831020403021) & (4 * v15) ^ v15;
  v8[550] = *(_QWORD *)(v7 + 680);
  v8[524] = *(_QWORD *)(v7 + 744);
  v8[551] = *(_QWORD *)(v7 + 664);
  v19 = ((4 * v17) ^ 0x253B4E6AD188E8C4) & v17 ^ (4 * v17) & 0xC94ED39AB4623A30;
  v8[553] = *(_QWORD *)(v7 + 656);
  v8[555] = *(_QWORD *)(v7 + 648);
  v20 = (v19 ^ 0x10A420A90002800) & (16 * v18) ^ v18;
  LODWORD(STACK[0x15B4]) = STACK[0x1B8C];
  v8[556] = *(_QWORD *)(v7 + 632);
  v21 = *(_QWORD *)(v10 + 8 * v11);
  v8[557] = *(_QWORD *)(v7 + 616);
  v22 = ((16 * (v19 ^ 0xC844919024621231)) ^ 0x94ED39AB4623A310) & (v19 ^ 0xC844919024621231) ^ (16 * (v19 ^ 0xC844919024621231)) & 0xC94ED39AB4623A30;
  v8[559] = *(_QWORD *)(v7 + 720);
  LODWORD(STACK[0x15D4]) = STACK[0x1B7C];
  LODWORD(STACK[0x1604]) = STACK[0x1B3C];
  v8[560] = *(_QWORD *)(v7 + 608);
  v8[532] = v21;
  v23 = (((v22 ^ 0x4902C210B0401821) << 8) ^ 0x4ED39AB4623A3100) & (v22 ^ 0x4902C210B0401821) ^ ((v22 ^ 0x4902C210B0401821) << 8) & 0xC94ED39AB4623A00;
  v8[562] = *(_QWORD *)(v7 + 600);
  v8[564] = *(_QWORD *)(v7 + 584);
  v8[567] = *(_QWORD *)(v7 + 560);
  v24 = v14 ^ (2
             * ((v23 & 0x1002302000000000 | 0x40021000000000) ^ (v22 ^ 0x804C118A04222200) & (v20 << 8) ^ v20 ^ (v23 ^ 0x4842929020220000) & (((v22 ^ 0x804C118A04222200) & (v20 << 8) ^ v20) << 16))) ^ 0x1C5CD81B915B7B83;
  v8[568] = *(_QWORD *)(v7 + 736);
  v8[537] = *(_QWORD *)(v7 + 880);
  LODWORD(STACK[0x1610]) = v6;
  v25 = *(_QWORD *)(v7 + 752);
  v8[570] = v25;
  LODWORD(STACK[0x1614]) = STACK[0x1B2C];
  v8[571] = v25;
  v8[549] = 0x5D952DACE41797ELL;
  v8[573] = v13;
  v8[554] = v24;
  *(_QWORD *)(v7 + 1640) = v8[554];
  *(_QWORD *)(v7 + 1624) = v8[573];
  *(_QWORD *)(v7 + 1656) = v8[549];
  *(_QWORD *)(v7 + 1632) = v8[571];
  LODWORD(STACK[0x1E94]) = STACK[0x1614];
  *(_QWORD *)(v7 + 1648) = v8[570];
  LODWORD(STACK[0x1EB4]) = STACK[0x1610];
  *(_QWORD *)(v7 + 1696) = v8[537];
  *(_QWORD *)(v7 + 1664) = v8[568];
  *(_QWORD *)(v7 + 1680) = v8[567];
  *(_QWORD *)(v7 + 1704) = v8[564];
  *(_QWORD *)(v7 + 1712) = v8[562];
  *(_QWORD *)(v7 + 1728) = v8[560];
  LODWORD(STACK[0x1EE4]) = STACK[0x1604];
  LODWORD(STACK[0x1EF0]) = STACK[0x15D4];
  *(_QWORD *)(v7 + 1744) = v8[559];
  *(_QWORD *)(v7 + 1752) = v8[557];
  *(_QWORD *)(v7 + 1760) = v8[556];
  LODWORD(STACK[0x1EF4]) = STACK[0x15B4];
  *(_QWORD *)(v7 + 1776) = v8[555];
  *(_QWORD *)(v7 + 1792) = v8[553];
  *(_QWORD *)(v7 + 1800) = v8[551];
  *(_QWORD *)(v7 + 1736) = v8[524];
  *(_QWORD *)(v7 + 1808) = v8[550];
  *(_QWORD *)(v7 + 1824) = v8[547];
  LODWORD(STACK[0x1F14]) = STACK[0x15A4];
  *(_DWORD *)(v9 - 252) = STACK[0x15A0];
  LODWORD(v24) = *(_QWORD *)(v7 + 1624) > (unint64_t)(*(_QWORD *)(v7 + 1632)
                                                           + *(_QWORD *)(v7 + 1656)
                                                           - 0x5D952DACE41797ELL);
  v26 = v8[532];
  *(_QWORD *)(v7 + 1840) = v8[545];
  v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * (int)((v24 * (v12 ^ 0x713)) ^ v12)) - (((_DWORD)v12 - 1524) | 0xA81u) + 2949);
  *(_QWORD *)(v7 + 1848) = v26;
  return v27(0x1EFF41E7ALL, 0x767A3EBDF7FA0F3DLL, a3, a4, a5, 0xC0391580E16, 3713000404, 733649558);
}

void sub_193270BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int *a29,void (*a30)(_QWORD, unint64_t, _QWORD))
{
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  int v38;
  unint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  unint64_t v53;

  v53 = v30[141];
  v52 = STACK[0xB3C];
  v50 = v30[139];
  v51 = v30[187];
  v48 = v30[135];
  v49 = v30[136];
  v46 = v30[132];
  v47 = v30[134];
  v45 = STACK[0xB2C];
  v44 = STACK[0xB28];
  v43 = v30[131];
  v41 = v30[128];
  v42 = v30[130];
  v40 = STACK[0xB0C];
  v31 = STACK[0x628];
  v32 = STACK[0x620];
  v33 = STACK[0x610];
  v34 = STACK[0x7F0];
  v35 = STACK[0x600];
  v36 = STACK[0x5F0];
  v37 = STACK[0xAFC];
  v38 = STACK[0xAEC];
  v39 = STACK[0x5D8];
  a30(*a29, STACK[0x370], LODWORD(STACK[0xAE8]));
  STACK[0x6B0] = v39;
  LODWORD(STACK[0xB98]) = v38;
  LODWORD(STACK[0xB9C]) = v37;
  STACK[0x6C0] = v36;
  STACK[0x6D0] = v35;
  STACK[0x890] = v34;
  STACK[0x6D8] = v33;
  STACK[0x6E0] = v32;
  STACK[0x6F0] = v31;
  LODWORD(STACK[0xBAC]) = v40;
  STACK[0x700] = v41;
  STACK[0x708] = v42;
  STACK[0x710] = v43;
  LODWORD(STACK[0xBBC]) = v44;
  LODWORD(STACK[0xBD8]) = v45;
  STACK[0x720] = v46;
  STACK[0x728] = v47;
  STACK[0x730] = v48;
  STACK[0x748] = v49;
  STACK[0x768] = v50;
  STACK[0x8B0] = v51;
  LODWORD(STACK[0xBDC]) = v52;
  STACK[0x770] = v53;
  JUMPOUT(0x193271200);
}

uint64_t sub_1932713B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  BOOL *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (v5 + 3491);
  v11 = (v10 ^ 0xFFFFFFFFFFFFF17BLL) + *(_QWORD *)(v9 + 8 * v5);
  v12 = v8[647];
  *v7 = v12 == 0;
  v8[654] = v12 + 12;
  v8[656] = v12 + 8;
  v8[220] = v11;
  v13 = v8[636];
  v8[168] = v13;
  v8[170] = &STACK[0x864];
  v8[657] = v13;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                                                  + 8 * (int)((v10 - 1868) ^ (4003 * !*v7)))
                                                                                      - (((_DWORD)v10 - v6 - 3631) ^ 0x2BBA9DB5u)
                                                                                      + 1851))(a1, a2, a3, 0, a5, 101330305);
}

uint64_t sub_1932714EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int *a35,unsigned int *a36)
{
  int v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _BOOL4 v41;
  BOOL v42;
  int v43;
  int v44;
  int v45;

  v39 = (*a36 ^ 0xDFECAFBFAF97FAFBLL)
      + 0x201350408BB0C7BELL
      + (((unint64_t)*a36 << ((v36 - v37 + 29) ^ 0xF7u)) & 0x15F2FF5F6);
  v40 = (*a35 ^ 0x75B73FD7BBF97EFELL) - 0x75B73FD780B0BC49 + ((2 * *a35) & 0x177F2FDFCLL);
  v41 = v39 < 0x3B48C2B5;
  v42 = v39 > v40;
  v43 = v41 ^ (v40 < 0x3B48C2B5);
  v44 = v42;
  if (v43)
    v45 = v41;
  else
    v45 = v44;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v38 + 8 * ((37 * (v45 ^ 1)) ^ v36))
                                                                    - 8))(a1, a2, a3, 0);
}

uint64_t sub_1932715E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,_DWORD *a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,_QWORD *a60)
{
  char v60;
  char v61;
  _DWORD *v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;

  v64 = ((a37 << (v61 + ((v60 - 31) | 0xD2) - 95)) & 0x7F0DFFFA) + (a37 ^ 0x3F86FFFD) - 1065811965;
  v65 = (-16777216 * *(unsigned __int8 *)(*a60 + v64)) | (*(unsigned __int8 *)(*a60 + v64 + 1) << 16);
  v66 = *(unsigned __int8 *)(*a60 + v64 + 2);
  v67 = *(unsigned __int8 *)(*a60 + v64 + 3);
  v68 = (((v66 + 4420934 - ((2 * v66) & 0x4C)) << 8) - 0x2000) ^ 0x43752600 | (v65 - 0x1000000);
  v69 = (v68 ^ 0x5A6FFF) & ((v67 - 1636428685 - ((2 * v67) & 0xE6)) ^ 0x82C7F04) ^ v68 & 0x69A59400;
  v70 = (v69 & 0x324D5387 ^ 0x12494387) + (v69 ^ 0x28A41408) - ((v69 ^ 0x28A41408) & 0x324D5387);
  *v62 = (((v70 ^ 0x1FBDF440) - 789305555) ^ ((v70 ^ 0x7B8AD7DE) - 1262287693) ^ ((v70 ^ 0x81840F66) + 1322114059))
       - 619719546;
  *a36 += 4;
  return v63(a1, a2, a3, 1, a5, 101372955);
}

uint64_t sub_19327178C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unsigned int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;

  LODWORD(a39) = a4;
  LODWORD(a38) = a6;
  return ((uint64_t (*)(unint64_t *, _QWORD, _QWORD, unint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * (((((v55 + v59 + 1440) | 0x117) - 1309) * (a4 ^ 1)) ^ (v55 + v59 + 1677))) - 4))(&STACK[0x238], *(_QWORD *)(v58 + 5056), LODWORD(STACK[0x17D4]), STACK[0x15F0], a55, a6, a46, a45, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v57,
           v56);
}

uint64_t sub_19327181C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;

  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(a62
                                                                                       + 8
                                                                                       * ((2797
                                                                                         * (LODWORD(STACK[0x864]) == (((v62 + 152048045) | 0x22AA8232) ^ 0x2DB04AA2) + (v62 ^ 0x4D0))) ^ v62))
                                                                           - 4))(a1, a1[632], LODWORD(STACK[0x17D4]), a1[631], a1[650]);
}

void sub_1932718D8()
{
  JUMPOUT(0x1932714A4);
}

uint64_t sub_193271920(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  uint64_t v44;
  uint64_t (*v45)(void);

  v42[515] = v39;
  v42[517] = v38;
  *(_QWORD *)(v41 + 1376) = v38;
  *(_QWORD *)(v41 + 1384) = v39;
  *(_BYTE *)(v41 + 1931) = a4;
  LODWORD(STACK[0x14E4]) = a6;
  LODWORD(STACK[0x1DA0]) = a37;
  LODWORD(STACK[0x1DB4]) = a6;
  *(_BYTE *)(v41 + 1455) = a4;
  v42[171] = v42[652];
  LODWORD(STACK[0xC28]) = STACK[0x1848];
  v42[173] = v42[651];
  v42[175] = v42[650];
  v42[225] = *(_QWORD *)(v40 + 41);
  v42[176] = v42[648];
  v42[177] = v42[647];
  v42[179] = v42[646];
  LODWORD(STACK[0xC2C]) = STACK[0x183C];
  v42[180] = v42[643];
  LODWORD(STACK[0xC4C]) = STACK[0x1DB4];
  v42[181] = v42[641];
  v42[182] = v42[639];
  LODWORD(STACK[0xC5C]) = STACK[0x17F4];
  LODWORD(STACK[0xC78]) = STACK[0x17E4];
  v42[184] = v42[638];
  v42[185] = v42[637];
  v42[186] = v42[657];
  v42[189] = v42[634];
  v42[191] = v42[632];
  v42[230] = v42[649];
  LODWORD(STACK[0xC7C]) = STACK[0x17D4];
  v42[193] = v42[631];
  v45 = (uint64_t (*)(void))(*(_QWORD *)(v44
                                      + 8
                                      * ((*(unsigned __int8 *)(v41 + 1455) * ((v43 ^ (a1 + 48)) + 2373)) ^ (v37 + v43 + 871)))
                          - 2 * (v43 ^ (a1 + 48))
                          + 88);
  LODWORD(STACK[0xC8C]) = STACK[0x17C4];
  return v45();
}

uint64_t sub_193271A3C@<X0>(int a1@<W8>)
{
  unsigned __int8 *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x1864]) = STACK[0x8BC];
  v2[171] = v2[652];
  LODWORD(STACK[0xC28]) = STACK[0x1848];
  v2[173] = v2[651];
  v2[175] = v2[650];
  v2[225] = *(_QWORD *)(v1 + 41);
  v2[176] = v2[648];
  v2[177] = 0;
  v2[179] = v2[646];
  LODWORD(STACK[0xC2C]) = STACK[0x183C];
  v2[180] = v2[643];
  LODWORD(STACK[0xC4C]) = 101330305;
  v2[181] = v2[641];
  v2[182] = v2[639];
  LODWORD(STACK[0xC5C]) = STACK[0x17F4];
  LODWORD(STACK[0xC78]) = STACK[0x17E4];
  v2[184] = v2[638];
  v2[185] = v2[637];
  v2[186] = v2[636];
  v2[189] = v2[634];
  v2[191] = v2[632];
  v2[230] = v2[649];
  LODWORD(STACK[0xC7C]) = STACK[0x17D4];
  v2[193] = v2[631];
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8 * ((3676 * ((((((a1 + 919) ^ 0x7B) - 860) ^ *v1) & 1) == 0)) ^ (a1 + 919)))
                         - 8);
  LODWORD(STACK[0xC8C]) = STACK[0x17C4];
  return v4();
}

uint64_t sub_193271B3C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v4 = **(unsigned int **)(v2 + 5232);
  LODWORD(STACK[0x1874]) = v4;
  *(_QWORD *)(v1 + 97) = v4;
  v5 = **(unsigned int **)(v2 + 5248);
  v6 = (v4 ^ 0xF7FD76FDFFEB9BFALL)
     + LODWORD(STACK[0x1864])
     + (((a1 ^ 0x3DCu) + 212 + 0x1FFD736C0) & (2 * v4))
     + ((unint64_t)(LODWORD(STACK[0x1864]) < 0x60AD41B) << 32)
     + 0x8028902B5B02BC6;
  *(_QWORD *)(v2 + 1368) = *(_QWORD *)(v2 + 5216);
  v7 = (v5 ^ 0xDDDBB6B97D7ECFDFLL) + 0x222449473E27CBFCLL + ((2 * (_DWORD)v5) & 0xFAFD9FBE);
  v8 = v6 < 0xBBA69BDB;
  LODWORD(STACK[0xC28]) = STACK[0x1848];
  v9 = v6 > v7;
  *(_QWORD *)(v2 + 1384) = *(_QWORD *)(v2 + 5208);
  if (v8 != v7 < 0xBBA69BDB)
    v9 = v8;
  *(_QWORD *)(v2 + 1400) = *(_QWORD *)(v2 + 5200);
  *(_QWORD *)(v2 + 1800) = *(_QWORD *)(v1 + 41);
  *(_QWORD *)(v2 + 1408) = *(_QWORD *)(v2 + 5184);
  *(_QWORD *)(v2 + 1416) = *(_QWORD *)(v2 + 5176);
  *(_QWORD *)(v2 + 1432) = *(_QWORD *)(v2 + 5168);
  LODWORD(STACK[0xC2C]) = STACK[0x183C];
  *(_QWORD *)(v2 + 1440) = *(_QWORD *)(v2 + 5144);
  *(_QWORD *)(v2 + 1448) = *(_QWORD *)(v2 + 5128);
  *(_QWORD *)(v2 + 1456) = *(_QWORD *)(v2 + 5112);
  LODWORD(STACK[0xC5C]) = STACK[0x17F4];
  LODWORD(STACK[0xC78]) = STACK[0x17E4];
  *(_QWORD *)(v2 + 1472) = *(_QWORD *)(v2 + 5104);
  *(_QWORD *)(v2 + 1480) = *(_QWORD *)(v2 + 5096);
  *(_QWORD *)(v2 + 1488) = *(_QWORD *)(v2 + 5256);
  *(_QWORD *)(v2 + 1512) = *(_QWORD *)(v2 + 5072);
  *(_QWORD *)(v2 + 1528) = *(_QWORD *)(v2 + 5056);
  *(_QWORD *)(v2 + 1840) = *(_QWORD *)(v2 + 5192);
  LODWORD(STACK[0xC7C]) = STACK[0x17D4];
  *(_QWORD *)(v2 + 1544) = *(_QWORD *)(v2 + 5048);
  LODWORD(STACK[0xC8C]) = STACK[0x17C4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((123 * v9) ^ a1)) - 8))();
}

void sub_193271CF4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  **(_DWORD **)(v1 + 5232) = LODWORD(STACK[0x1864]) - 101372955 + LODWORD(STACK[0x1874]);
  *(_QWORD *)(v1 + 1760) = *(_QWORD *)(v2 + 8 * v0) + ((v0 + 3419) ^ 0xFFFFFFFFFFFFF177);
  JUMPOUT(0x1932713F8);
}

void sub_193271D5C(_QWORD *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40,char a41,unint64_t a42,unint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  int v94;
  unint64_t v95;
  unint64_t v96;
  int v97;
  unint64_t v98;
  int v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  unint64_t v108;

  v82 = v71 ^ 0x3A7;
  a1[517] = a43;
  STACK[0x1D58] = a43;
  a1[515] = a42;
  STACK[0x1D60] = a42;
  LODWORD(STACK[0x1DA0]) = a37;
  LODWORD(STACK[0x14E4]) = a39;
  LODWORD(STACK[0x1DB4]) = a39;
  LOBYTE(STACK[0x1F83]) = a41;
  LOBYTE(STACK[0x1DA7]) = a41;
  a1[171] = v73;
  LODWORD(STACK[0xC28]) = v65;
  a1[173] = v81;
  a1[175] = a5;
  a1[225] = v80;
  a1[176] = v64;
  a1[177] = v72;
  a1[179] = v66;
  LODWORD(STACK[0xC2C]) = v67;
  a1[180] = v75;
  LODWORD(STACK[0xC4C]) = a6;
  a1[181] = v68;
  a1[182] = v69;
  LODWORD(STACK[0xC5C]) = v70;
  LODWORD(STACK[0xC78]) = a7;
  a1[184] = a8;
  a1[185] = v74;
  a1[186] = v78;
  a1[189] = v76;
  a1[191] = a2;
  a1[230] = v79;
  LODWORD(STACK[0xC7C]) = a3;
  a1[193] = a4;
  LODWORD(STACK[0xC8C]) = v77;
  v83 = STACK[0xC8C];
  v84 = ((v71 ^ 0x3A7) + 1148) | 0x101u;
  v85 = STACK[0x840];
  v86 = STACK[0xC7C];
  v87 = STACK[0x968];
  v88 = STACK[0x830];
  v89 = STACK[0x820];
  v90 = STACK[0x808];
  v91 = STACK[0x800];
  v92 = STACK[0x7F8];
  v93 = STACK[0xC78];
  v94 = STACK[0xC5C];
  v95 = STACK[0x7E8];
  v96 = STACK[0x7E0];
  v97 = STACK[0xC4C];
  v98 = STACK[0x7D8];
  v99 = STACK[0xC2C];
  v100 = STACK[0x7D0];
  v101 = STACK[0x7C0];
  v102 = v82;
  v103 = STACK[0x7B8];
  v104 = STACK[0x940];
  v105 = STACK[0x7B0];
  v106 = STACK[0x7A0];
  v107 = STACK[0xC28];
  v108 = *(_QWORD *)(a64 + 8 * v102) + (v84 ^ 0xFFFFFFFFFFFFFA21);
  STACK[0x1270] = STACK[0x790];
  LODWORD(STACK[0x1504]) = v97;
  LODWORD(STACK[0x1534]) = v107;
  STACK[0x1280] = v106;
  STACK[0x12A0] = v105;
  STACK[0x1278] = v104;
  STACK[0x12A8] = v103;
  STACK[0x12B0] = v100;
  LODWORD(STACK[0x1540]) = v99;
  STACK[0x12B8] = v98;
  STACK[0x1288] = v108;
  STACK[0x12C8] = v96;
  STACK[0x12E0] = v95;
  LODWORD(STACK[0x1544]) = v94;
  LODWORD(STACK[0x1564]) = v93;
  STACK[0x12E8] = v92;
  STACK[0x12F8] = v91;
  STACK[0x1308] = v90;
  STACK[0x1310] = v89;
  STACK[0x1318] = v88;
  STACK[0x1290] = v87;
  LODWORD(STACK[0x1574]) = v86;
  STACK[0x1328] = v85;
  LODWORD(STACK[0x1594]) = v83;
  STACK[0x1330] = v101;
  JUMPOUT(0x193272588);
}

uint64_t sub_193271E14(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  uint64_t v44;
  uint64_t (*v45)(void);

  v42[515] = v39;
  v42[517] = v38;
  *(_QWORD *)(v41 + 1376) = v38;
  *(_QWORD *)(v41 + 1384) = v39;
  *(_BYTE *)(v41 + 1931) = a4;
  LODWORD(STACK[0x14E4]) = a6;
  LODWORD(STACK[0x1DA0]) = a37;
  LODWORD(STACK[0x1DB4]) = a6;
  *(_BYTE *)(v41 + 1455) = a4;
  v42[171] = v42[652];
  LODWORD(STACK[0xC28]) = STACK[0x1848];
  v42[173] = v42[651];
  v42[175] = v42[650];
  v42[225] = *(_QWORD *)(v40 + 41);
  v42[176] = v42[648];
  v42[177] = v42[647];
  v42[179] = v42[646];
  LODWORD(STACK[0xC2C]) = STACK[0x183C];
  v42[180] = v42[643];
  LODWORD(STACK[0xC4C]) = STACK[0x1DB4];
  v42[181] = v42[641];
  v42[182] = v42[639];
  LODWORD(STACK[0xC5C]) = STACK[0x17F4];
  LODWORD(STACK[0xC78]) = STACK[0x17E4];
  v42[184] = v42[638];
  v42[185] = v42[637];
  v42[186] = v42[657];
  v42[189] = v42[634];
  v42[191] = v42[632];
  v42[230] = v42[649];
  LODWORD(STACK[0xC7C]) = STACK[0x17D4];
  v42[193] = v42[631];
  v45 = (uint64_t (*)(void))(*(_QWORD *)(v44
                                      + 8
                                      * ((*(unsigned __int8 *)(v41 + 1455) * (((v43 ^ a1) + 4093) ^ 0x1853)) ^ (v37 + v43 + 871)))
                          - 8);
  LODWORD(STACK[0xC8C]) = STACK[0x17C4];
  return v45();
}

uint64_t sub_193271F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(void),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t (*v67)(void);

  *(_QWORD *)(v63 + 129) = LODWORD(STACK[0x8BC]) - 101372955 + ((v62 + 1840397581) & 0x924DB2F5) - 96;
  v65 = a27();
  v64[658] = v65;
  *a11 = v65;
  v66 = v64[657] == 0;
  v64[171] = v64[652];
  LODWORD(STACK[0xC28]) = STACK[0x1848];
  v64[173] = v64[651];
  v64[175] = v64[650];
  v64[225] = *(_QWORD *)(v63 + 41);
  v64[176] = v64[648];
  v64[177] = v64[647];
  v64[179] = v64[646];
  LODWORD(STACK[0xC2C]) = STACK[0x183C];
  v64[180] = v64[643];
  LODWORD(STACK[0xC4C]) = 101330303;
  v64[181] = v64[641];
  v64[182] = v64[639];
  LODWORD(STACK[0xC5C]) = STACK[0x17F4];
  LODWORD(STACK[0xC78]) = STACK[0x17E4];
  v64[184] = v64[638];
  v64[185] = v64[637];
  v64[186] = 0;
  v64[189] = v64[634];
  v64[191] = v64[632];
  v64[230] = v64[649];
  LODWORD(STACK[0xC7C]) = STACK[0x17D4];
  v64[193] = v64[631];
  v67 = (uint64_t (*)(void))(*(_QWORD *)(a62 + 8 * ((248 * (((v62 + 22) ^ v66) & 1)) ^ v62)) - 12);
  LODWORD(STACK[0xC8C]) = STACK[0x17C4];
  return v67();
}

void sub_19327207C()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v1 + 129);
  v5 = v0 & 0xFFFFFFFFBB1CB1EDLL;
  v6 = *(_QWORD *)(v3 + 8 * v5);
  v2[545] = v2[652];
  LODWORD(STACK[0x15A0]) = STACK[0x184C];
  LODWORD(STACK[0x15A4]) = STACK[0x1848];
  v2[547] = v2[651];
  v2[550] = v2[650];
  v2[524] = *(_QWORD *)(v1 + 41);
  v2[551] = v2[648];
  v2[553] = v2[647];
  v2[555] = v2[646];
  LODWORD(STACK[0x15B4]) = STACK[0x183C];
  v2[556] = v2[643];
  v2[557] = v2[641];
  v2[559] = v2[639];
  LODWORD(STACK[0x15D4]) = STACK[0x17F4];
  LODWORD(STACK[0x1604]) = STACK[0x17E4];
  v2[560] = v2[638];
  v2[532] = (v5 + 1435) + v6 - 1792;
  v2[562] = v2[637];
  v2[564] = v2[657];
  v2[567] = v2[634];
  v2[568] = v2[632];
  v2[537] = v2[649];
  LODWORD(STACK[0x1610]) = STACK[0x17D4];
  v2[570] = v2[631];
  LODWORD(STACK[0x1614]) = STACK[0x17C4];
  v2[571] = v2[658];
  v2[549] = 0x5D952DACE41797ELL;
  v2[573] = v2[657];
  v2[554] = v4 - 0x4D58EB37AD4779BLL - ((2 * v4) & 0x10A5710CALL);
  JUMPOUT(0x1932721F0);
}

void sub_19327220C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, _QWORD *a9, uint64_t a10, uint64_t a11, _DWORD *a12)
{
  int v12;
  _QWORD *v13;
  _QWORD *v14;
  int v15;

  *a12 = v15 - a8 - 101372955 + LODWORD(STACK[0x8BC]) - 96;
  *a9 = (LODWORD(STACK[0x8C8]) - 101372955);
  v14[171] = v13[230];
  LODWORD(STACK[0xC28]) = STACK[0x1F14];
  v14[173] = v13[228];
  v14[175] = v13[226];
  v14[225] = v13[217];
  v14[176] = v13[225];
  v14[177] = v13[224];
  v14[179] = v13[222];
  LODWORD(STACK[0xC2C]) = STACK[0x1EF4];
  v14[180] = v13[220];
  LODWORD(STACK[0xC4C]) = v12;
  v14[181] = v13[219];
  v14[182] = v13[218];
  LODWORD(STACK[0xC5C]) = STACK[0x1EF0];
  LODWORD(STACK[0xC78]) = STACK[0x1EE4];
  v14[184] = v13[216];
  v14[185] = v13[214];
  v14[186] = v13[213];
  v14[189] = v13[210];
  v14[191] = v13[208];
  v14[230] = v13[212];
  LODWORD(STACK[0xC7C]) = STACK[0x1EB4];
  v14[193] = v13[206];
  LODWORD(STACK[0xC8C]) = STACK[0x1E94];
  JUMPOUT(0x1932722FCLL);
}

void sub_1932723E8()
{
  _QWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;

  v1 = STACK[0xD28];
  v2 = STACK[0xD0C];
  v3 = v0[216];
  v4 = STACK[0xCFC];
  v5 = v0[248];
  v6 = v0[215];
  v7 = v0[213];
  v8 = v0[211];
  v9 = v0[209];
  v10 = v0[206];
  v11 = STACK[0xCEC];
  v12 = v0[205];
  v13 = v0[204];
  v14 = v0[202];
  v15 = STACK[0xCE8];
  v16 = v0[201];
  v17 = v0[200];
  v18 = v0[243];
  v19 = v0[198];
  v20 = v0[196];
  v21 = STACK[0xCDC];
  v22 = STACK[0xCBC];
  v0[217] = v0[195];
  LODWORD(STACK[0xD2C]) = v22;
  LODWORD(STACK[0xD3C]) = v21;
  v0[219] = v20;
  v0[222] = v19;
  v0[253] = v18;
  v0[223] = v17;
  v0[224] = v16;
  LODWORD(STACK[0xD6C]) = v15;
  v0[226] = v14;
  v0[228] = v13;
  v0[229] = v12;
  LODWORD(STACK[0xD8C]) = v11;
  v0[232] = v10;
  LODWORD(STACK[0xD98]) = v1;
  v0[234] = v9;
  v0[235] = v8;
  v0[238] = v7;
  v0[240] = v6;
  v0[270] = v5;
  LODWORD(STACK[0xD9C]) = v4;
  v0[241] = v3;
  LODWORD(STACK[0xDAC]) = v2;
  JUMPOUT(0x1932724B8);
}

uint64_t sub_1932726A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = **(_QWORD **)(v1 + 1400);
  *(_QWORD *)(v1 + 1616) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((13 * (v3 != 0)) ^ v0)) - 8))();
}

uint64_t sub_1932726DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(void),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  int v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;

  ((void (*)(_QWORD))a34)(*(_QWORD *)(v66 + 1616));
  v67 = *(_QWORD **)(v66 + 1400);
  *v67 = 0;
  v67[1] = 0;
  v68 = a34();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a62 + 8
                                                            * ((a64 == 3) | (16 * (a64 == 3)) | (v65 + v64 + 1388)))
                                          - 12))(v68);
}

uint64_t sub_193272730()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v1[91] = *(_QWORD *)(v0 + 1576);
  v2 = STACK[0x1E84];
  LODWORD(STACK[0xA4C]) = STACK[0x1E84];
  v3 = STACK[0x1E44];
  LODWORD(STACK[0xA5C]) = STACK[0x1E44];
  v1[93] = *(_QWORD *)(v0 + 1568);
  v1[94] = *(_QWORD *)(v0 + 1560);
  v1[160] = *(_QWORD *)(v0 + 1584);
  v1[97] = *(_QWORD *)(v0 + 1544);
  v1[100] = *(_QWORD *)(v0 + 1536);
  v4 = STACK[0x1E34];
  LODWORD(STACK[0xA78]) = STACK[0x1E34];
  v1[102] = *(_QWORD *)(v0 + 1528);
  v1[103] = *(_QWORD *)(v0 + 1512);
  v1[104] = *(_QWORD *)(v0 + 1496);
  v5 = STACK[0x1DEC];
  LODWORD(STACK[0xA7C]) = STACK[0x1DEC];
  v6 = STACK[0x1DDC];
  LODWORD(STACK[0xA8C]) = STACK[0x1DDC];
  v1[105] = *(_QWORD *)(v0 + 1488);
  v1[107] = *(_QWORD *)(v0 + 1472);
  v1[109] = *(_QWORD *)(v0 + 1456);
  v1[110] = *(_QWORD *)(v0 + 1432);
  v1[111] = *(_QWORD *)(v0 + 1424);
  v1[165] = *(_QWORD *)(v0 + 1552);
  v7 = STACK[0x1DD8];
  LODWORD(STACK[0xABC]) = STACK[0x1DD8];
  v1[113] = *(_QWORD *)(v0 + 1416);
  v8 = STACK[0x1DC4];
  LODWORD(STACK[0xADC]) = STACK[0x1DC4];
  v1[195] = *(_QWORD *)(v0 + 1576);
  LODWORD(STACK[0xCBC]) = v2;
  LODWORD(STACK[0xCDC]) = v3;
  v1[196] = *(_QWORD *)(v0 + 1568);
  v1[198] = *(_QWORD *)(v0 + 1560);
  v1[243] = *(_QWORD *)(v0 + 1584);
  v1[200] = *(_QWORD *)(v0 + 1544);
  v1[201] = *(_QWORD *)(v0 + 1536);
  LODWORD(STACK[0xCE8]) = v4;
  v1[202] = *(_QWORD *)(v0 + 1528);
  v1[204] = *(_QWORD *)(v0 + 1512);
  v1[205] = *(_QWORD *)(v0 + 1496);
  LODWORD(STACK[0xCEC]) = v5;
  v1[206] = *(_QWORD *)(v0 + 1488);
  v1[209] = *(_QWORD *)(v0 + 1472);
  v1[211] = *(_QWORD *)(v0 + 1456);
  v1[213] = *(_QWORD *)(v0 + 1432);
  v1[215] = *(_QWORD *)(v0 + 1424);
  v1[248] = *(_QWORD *)(v0 + 1552);
  LODWORD(STACK[0xCFC]) = v7;
  v1[216] = *(_QWORD *)(v0 + 1416);
  v1[115] = 0;
  LODWORD(STACK[0xD0C]) = v8;
  LODWORD(STACK[0xD28]) = STACK[0x1E84];
  LODWORD(STACK[0xDBC]) = v6;
  return (*(uint64_t (**)(void))(v0 + 1600))();
}

uint64_t sub_193272904()
{
  int v0;
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = STACK[0xF9C];
  v7 = v1 + v0 + 1451;
  LODWORD(STACK[0x19EC]) = STACK[0xF98];
  v3[20] = v4[319];
  LODWORD(STACK[0x1A08]) = STACK[0xF8C];
  v3[48] = v4[339];
  v8 = v4[315];
  v3[23] = v4[317];
  v3[24] = v8;
  v3[26] = v4[313];
  v9 = v4[309];
  v3[28] = v4[312];
  v3[29] = v9;
  LODWORD(STACK[0x1A0C]) = STACK[0xF6C];
  LODWORD(STACK[0x1A1C]) = STACK[0xF3C];
  v3[30] = v4[307];
  v3[32] = v4[306];
  v10 = v4[305];
  LODWORD(STACK[0x1A3C]) = STACK[0xF2C];
  v11 = v4[303];
  v3[34] = v10;
  v3[35] = v11;
  v3[36] = v4[301];
  v12 = v4[299];
  v3[38] = v12;
  v13 = v4[334];
  v3[53] = v13;
  v14 = v4[296];
  v15 = v4[295];
  v3[40] = v14;
  v3[41] = v15;
  v16 = STACK[0xF28];
  LODWORD(STACK[0x1A6C]) = STACK[0xF28];
  v17 = STACK[0xF0C];
  LODWORD(STACK[0x1A78]) = STACK[0xF0C];
  v18 = v4[293];
  v3[42] = v18;
  v4[321] = v18;
  LODWORD(STACK[0xFB4]) = v17;
  LODWORD(STACK[0xFC0]) = v16;
  v4[323] = v15;
  v4[325] = v14;
  v4[356] = v13;
  v4[326] = v12;
  v4[327] = v3[36];
  v19 = v3[34];
  v4[329] = v3[35];
  LODWORD(STACK[0xFC4]) = STACK[0x1A3C];
  v4[331] = v19;
  v4[332] = v3[32];
  v4[333] = v3[30];
  LODWORD(STACK[0xFD4]) = STACK[0x1A1C];
  LODWORD(STACK[0xFE8]) = STACK[0x1A0C];
  v20 = v3[28];
  v4[335] = v3[29];
  v4[337] = v20;
  v4[338] = v3[26];
  v21 = v3[23];
  v4[341] = v3[24];
  v4[343] = v21;
  v4[361] = v3[48];
  LODWORD(STACK[0xFEC]) = STACK[0x1A08];
  v4[345] = v3[20];
  LODWORD(STACK[0xFFC]) = STACK[0x19EC];
  LODWORD(STACK[0x1044]) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((3461 * (v6 == (v7 ^ (v2 - 523)))) ^ v7)))();
}

uint64_t sub_193272A80@<X0>(char a1@<W8>)
{
  char v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a1 ^ 0xFD;
  v6 = **(_QWORD **)(v3 + 256);
  v8 = *(_QWORD *)(v3 + 272);
  v7 = *(_DWORD **)(v3 + 280);
  v9 = STACK[0x1A3C];
  v10 = LODWORD(STACK[0x1A3C]) + 451170848 - ((LODWORD(STACK[0x1A3C]) << (v1 + v5 - 95)) & 0x35C8A440);
  v11 = ((2 * *v7) & 0x571FFBFC) + (*v7 ^ 0x2B8FFDFE) - 730856958;
  *(_BYTE *)(v6 + v11 + 1) = BYTE2(v10) ^ 0xE4;
  *(_BYTE *)(v6 + v11 + 2) = (((BYTE1(v10) ^ 0x52) - 2 * ((BYTE1(v10) ^ 0x52) & 7 ^ BYTE1(v10) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v6 + v11) = HIBYTE(v10) ^ 0x1A;
  *(_BYTE *)(v6 + v11 + 3) = v10 ^ 0x20;
  *v7 += 4;
  v4[321] = *(_QWORD *)(v3 + 336);
  LODWORD(STACK[0xFB4]) = STACK[0x1A78];
  LODWORD(STACK[0xFC0]) = STACK[0x1A6C];
  v12 = *(_QWORD *)(v3 + 320);
  v4[323] = *(_QWORD *)(v3 + 328);
  v4[325] = v12;
  v4[356] = *(_QWORD *)(v3 + 424);
  v4[326] = *(_QWORD *)(v3 + 304);
  v13 = *(_QWORD *)(v3 + 280);
  v4[327] = *(_QWORD *)(v3 + 288);
  v4[329] = v13;
  LODWORD(STACK[0xFC4]) = v9;
  v4[331] = v8;
  v4[332] = *(_QWORD *)(v3 + 256);
  v4[333] = *(_QWORD *)(v3 + 240);
  LODWORD(STACK[0xFD4]) = STACK[0x1A1C];
  LODWORD(STACK[0xFE8]) = STACK[0x1A0C];
  v14 = *(_QWORD *)(v3 + 224);
  v4[335] = *(_QWORD *)(v3 + 232);
  v4[337] = v14;
  v4[338] = *(_QWORD *)(v3 + 208);
  v15 = *(_QWORD *)(v3 + 184);
  v4[341] = *(_QWORD *)(v3 + 192);
  v4[343] = v15;
  v4[361] = *(_QWORD *)(v3 + 384);
  LODWORD(STACK[0xFEC]) = STACK[0x1A08];
  v4[345] = *(_QWORD *)(v3 + 160);
  LODWORD(STACK[0xFFC]) = STACK[0x19EC];
  LODWORD(STACK[0x1044]) = v2;
  LODWORD(STACK[0x1A7C]) = STACK[0x1044];
  LODWORD(STACK[0x1A9C]) = STACK[0xFFC];
  *(_QWORD *)(v3 + 344) = v4[345];
  LODWORD(STACK[0x1AAC]) = STACK[0xFEC];
  *(_QWORD *)(v3 + 552) = v4[361];
  *(_QWORD *)(v3 + 368) = v4[343];
  v16 = v4[338];
  *(_QWORD *)(v3 + 392) = v4[341];
  *(_QWORD *)(v3 + 400) = v16;
  *(_QWORD *)(v3 + 416) = v4[337];
  v17 = v4[335];
  LODWORD(STACK[0x1AC4]) = STACK[0xFE8];
  LODWORD(STACK[0x1AD4]) = STACK[0xFD4];
  v18 = v4[333];
  *(_QWORD *)(v3 + 432) = v17;
  *(_QWORD *)(v3 + 440) = v18;
  *(_QWORD *)(v3 + 448) = v4[332];
  v19 = v4[331];
  LODWORD(STACK[0x1AFC]) = STACK[0xFC4];
  v20 = v4[329];
  *(_QWORD *)(v3 + 464) = v19;
  *(_QWORD *)(v3 + 472) = v20;
  *(_QWORD *)(v3 + 488) = v4[327];
  v21 = v4[326];
  *(_QWORD *)(v3 + 592) = v4[356];
  v22 = v4[325];
  *(_QWORD *)(v3 + 504) = v21;
  *(_QWORD *)(v3 + 512) = v22;
  *(_QWORD *)(v3 + 520) = v4[323];
  LODWORD(STACK[0x1B08]) = STACK[0xFC0];
  LODWORD(STACK[0x1B0C]) = STACK[0xFB4];
  *(_QWORD *)(v3 + 536) = v4[321];
  return (*(uint64_t (**)(void))(v3 + 464))();
}

void sub_193272CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void (*a34)(_QWORD))
{
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  int v38;

  v37 = *(_QWORD **)(v34 + 1680);
  a34(*v37);
  *v37 = *(_QWORD *)(v34 + 1648);
  **(_DWORD **)(v34 + 1664) = *(_QWORD *)(v34 + 1696);
  v35[370] = *(_QWORD *)(v34 + 1840);
  LODWORD(STACK[0x1104]) = *(_DWORD *)(v36 - 252);
  LODWORD(STACK[0x111C]) = STACK[0x1F14];
  v35[372] = *(_QWORD *)(v34 + 1824);
  v35[374] = *(_QWORD *)(v34 + 1808);
  v35[403] = *(_QWORD *)(v34 + 1736);
  v35[375] = *(_QWORD *)(v34 + 1800);
  v35[377] = *(_QWORD *)(v34 + 1792);
  v35[378] = *(_QWORD *)(v34 + 1776);
  LODWORD(STACK[0x112C]) = STACK[0x1EF4];
  v35[381] = *(_QWORD *)(v34 + 1760);
  v35[383] = *(_QWORD *)(v34 + 1752);
  v35[385] = *(_QWORD *)(v34 + 1744);
  LODWORD(STACK[0x1174]) = STACK[0x1EF0];
  LODWORD(STACK[0x1180]) = STACK[0x1EE4];
  v35[387] = *(_QWORD *)(v34 + 1728);
  v35[389] = *(_QWORD *)(v34 + 1712);
  v35[390] = *(_QWORD *)(v34 + 1704);
  v35[391] = *(_QWORD *)(v34 + 1680);
  v35[393] = *(_QWORD *)(v34 + 1664);
  v35[420] = *(_QWORD *)(v34 + 1696);
  v38 = STACK[0x1EB4];
  LODWORD(STACK[0x1184]) = STACK[0x1EB4];
  v35[395] = *(_QWORD *)(v34 + 1648);
  LODWORD(STACK[0x119C]) = STACK[0x1E94];
  LODWORD(STACK[0x11AC]) = v38;
  JUMPOUT(0x193272DB4);
}

uint64_t sub_1932730C8()
{
  int v0;
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v6 = STACK[0x13D0];
  v3[122] = v4[465];
  v7 = (v0 - 299105684) & 0xE61963FF;
  v8 = v1 + v0 + 1572;
  LODWORD(STACK[0x1C98]) = STACK[0x13C4];
  v3[137] = v4[462];
  v3[124] = v4[464];
  v3[126] = v4[463];
  v3[127] = v4[461];
  v3[129] = v4[460];
  v3[130] = v4[459];
  LODWORD(STACK[0x1C9C]) = STACK[0x13AC];
  LODWORD(STACK[0x1CBC]) = STACK[0x13A8];
  v3[131] = v4[456];
  v3[132] = v4[454];
  v3[135] = v4[453];
  LODWORD(STACK[0x1CCC]) = STACK[0x137C];
  v3[138] = v4[452];
  v3[139] = v4[450];
  v9 = v4[447];
  v3[141] = v9;
  v10 = v4[458];
  v3[142] = v10;
  v11 = v4[446];
  v3[143] = v11;
  v12 = v4[445];
  v3[144] = v12;
  v13 = STACK[0x135C];
  LODWORD(STACK[0x1CD8]) = STACK[0x135C];
  v14 = STACK[0x134C];
  LODWORD(STACK[0x1CDC]) = STACK[0x134C];
  v15 = v4[443];
  v3[145] = v15;
  v4[467] = v15;
  LODWORD(STACK[0x13D4]) = v14;
  LODWORD(STACK[0x13E4]) = v13;
  v4[469] = v12;
  v4[470] = v11;
  v4[479] = v10;
  v4[472] = v9;
  v4[474] = v3[139];
  v4[475] = v3[138];
  LODWORD(STACK[0x1404]) = STACK[0x1CCC];
  v4[477] = v3[135];
  v4[480] = v3[132];
  v4[481] = v3[131];
  LODWORD(STACK[0x141C]) = STACK[0x1CBC];
  LODWORD(STACK[0x142C]) = STACK[0x1C9C];
  v4[482] = v3[130];
  v4[484] = v3[129];
  v4[485] = v3[127];
  v4[486] = v3[126];
  v4[488] = v3[124];
  v4[483] = v3[137];
  LODWORD(STACK[0x1440]) = STACK[0x1C98];
  v4[490] = v3[122];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2899 * (v6 == v2 + v7 - 354)) ^ v8)) - 8);
  LODWORD(STACK[0x1444]) = v6;
  return v16();
}

void sub_19327327C()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  _DWORD *v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v5 = (uint64_t *)v2[145];
  v6 = (_DWORD *)v2[141];
  v7 = STACK[0x1CD8];
  v8 = STACK[0x1CD8];
  v9 = (v7 ^ 0x37D4A8E7) & (2 * (v7 & 0xB7C6B2F4)) ^ v7 & 0xB7C6B2F4;
  v10 = ((2 * (v7 ^ 0x5A54C8E7)) ^ 0xDB24F426) & (v7 ^ 0x5A54C8E7) ^ (2 * (v7 ^ 0x5A54C8E7)) & 0xED927A12;
  v11 = v10 ^ 0x24920A11;
  v12 = (v10 ^ 0xC9805000) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xB649E84C) & v11 ^ (4 * v11) & 0xED927A10;
  v14 = (v13 ^ 0xA4006810) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x49921213)) ^ 0xD927A130) & (v13 ^ 0x49921213) ^ (16 * (v13 ^ 0x49921213)) & 0xED927A10;
  v16 = v14 ^ 0xED927A13 ^ (v15 ^ 0xC9022000) & (v14 << 8);
  v17 = *v5;
  v18 = LODWORD(STACK[0x1CD8]) ^ (2
                                * ((v16 << 16) & 0x6D920000 ^ v16 ^ ((v16 << 16) ^ 0x7A130000) & (((v15 ^ 0x24905A03) << 8) & 0x6D920000 ^ 0x6D800000 ^ (((v15 ^ 0x24905A03) << 8) ^ 0x127A0000) & (v15 ^ 0x24905A03))));
  v19 = ((v0 ^ 0x7D57FE18) & (2 * *v6)) + (*v6 ^ 0x3EABFFBD) - 1051459517;
  *(_BYTE *)(*v5 + v19) = HIBYTE(v18) ^ 0xBC;
  *(_BYTE *)(v17 + v19 + 1) = BYTE2(v18) ^ 0xC6;
  *(_BYTE *)(v17 + v19 + 2) = (((BYTE1(v18) ^ 0x46) - 2 * ((BYTE1(v18) ^ 0x46) & 3) + 11) ^ 3) - 8;
  *(_BYTE *)(v17 + v19 + 3) = v18 ^ 0xD2;
  v20 = (*v6 + 4);
  *v6 = v20;
  v21 = *v5;
  v22 = v2[142];
  v23 = (v22 ^ 0xF3F5DEE7BB92B63FLL) & (2 * (v22 & 0xFBF59CE7BB9B303FLL)) ^ v22 & 0xFBF59CE7BB9B303FLL;
  v24 = *(_QWORD *)(v4 + 8 * v0);
  v3[545] = v5;
  LODWORD(STACK[0x15A0]) = STACK[0x1CDC];
  v25 = ((2 * (v22 ^ 0x6637CEE0FB80960FLL)) ^ 0x3B84A40E80374C60) & (v22 ^ 0x6637CEE0FB80960FLL) ^ (2 * (v22 ^ 0x6637CEE0FB80960FLL)) & 0x9DC25207401BA630;
  LODWORD(STACK[0x15A4]) = v8;
  v3[547] = v2[144];
  v26 = v25 ^ 0x844252014008A210;
  v27 = (v25 ^ 0x1980000600110020) & (4 * v23) ^ v23;
  v3[550] = v2[143];
  v3[524] = v2[142];
  v3[551] = v2[141];
  v28 = ((4 * v26) ^ 0x7709481D006E98C0) & v26 ^ (4 * v26) & 0x9DC25207401BA630;
  v3[553] = v2[139];
  v3[555] = v2[138];
  v29 = (v28 ^ 0x15004005000A8000) & (16 * v27) ^ v27;
  LODWORD(STACK[0x15B4]) = STACK[0x1CCC];
  v3[556] = v2[135];
  v3[557] = v2[132];
  v30 = ((16 * (v28 ^ 0x88C2120240112630)) ^ 0xDC25207401BA6300) & (v28 ^ 0x88C2120240112630) ^ (16 * (v28 ^ 0x88C2120240112630)) & 0x9DC25207401BA630;
  v3[559] = v2[131];
  LODWORD(STACK[0x15D4]) = STACK[0x1CBC];
  LODWORD(STACK[0x1604]) = STACK[0x1C9C];
  v3[560] = v2[130];
  v3[532] = v24 - 12;
  v3[562] = v2[129];
  v31 = (((v30 ^ 0x1C2520340018430) << 8) ^ 0xC25207401BA63000) & (v30 ^ 0x1C2520340018430) ^ ((v30 ^ 0x1C2520340018430) << 8) & 0x9DC25207401BA600;
  v3[564] = v2[127];
  v3[567] = v2[126];
  v3[568] = v2[124];
  v3[537] = v2[137];
  LODWORD(STACK[0x1610]) = STACK[0x1C98];
  v3[570] = v2[122];
  LODWORD(STACK[0x1614]) = v1;
  v3[571] = v21;
  v3[549] = (v20 ^ 0x5EEDFF3D7BEFFEF6) + ((2 * (_DWORD)v20) & 0xF7DFFDEC) - 0x5914AC62ADAE8578;
  v3[573] = v2[143];
  v3[554] = v22 ^ (2
                 * ((v31 & 0x4003001000000000 | 0x20000000000) ^ (v30 ^ 0x9C000004001A2200) & (v29 << 8) ^ v29 ^ (v31 ^ 0x42020000020000) & (((v30 ^ 0x9C000004001A2200) & (v29 << 8) ^ v29) << 16))) ^ 0xDBE9AB3EB0B85ALL;
  JUMPOUT(0x19327374CLL);
}

uint64_t sub_1932738A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  v3 = LODWORD(STACK[0x1E60]) ^ 0x852B8865;
  *(_DWORD *)(v1 - 204) = v3;
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((3374 * (v3 != 3 * ((v0 - 1413490840) & 0x7FFABEFF ^ 0x2BBA9F83) - 4191)) ^ v0)))();
}

uint64_t sub_19327390C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;

  *(_QWORD *)(v66 + 1888) = *(_QWORD *)(v66 + 1656) - 0x7C539198C63B88BBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v67
                                        + 8
                                        * ((371 * (a64 == (((v65 + v64 + 733645463 - 64) | 0x81E) ^ 0x83D))) ^ v64))
                            - 8))();
}

uint64_t sub_193273978(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 4656) = v2;
  v8 = v3 + 1598;
  v9 = v2 - 1;
  v10 = (a1 & (2 * v9)) + (v9 ^ a2);
  *(_BYTE *)(v5[204] + v10 + v5[236]) = *(_BYTE *)(v5[203] + v10 + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((475 * (v9 == 0)) ^ v8)) - 12))();
}

uint64_t sub_1932739DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = v4 - 1;
  v12 = (a1 & (2 * v11)) + (v11 ^ a2);
  *(_BYTE *)(v6 + v12 + v5) = *(_BYTE *)(v3 + v12 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v11 == 0) * v7) ^ (v9 + a3 + 1598))) - 12))();
}

uint64_t sub_193273A64()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _DWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;

  v4 = (_DWORD *)v0[225];
  v5 = STACK[0x1F14];
  *v4 += (v2 ^ 0x17497BC4) + LODWORD(STACK[0x1F14]) + 2060636610;
  v1[467] = v0[230];
  LODWORD(STACK[0x13D4]) = *(_DWORD *)(v3 - 252);
  LODWORD(STACK[0x13E4]) = v5;
  v1[469] = v0[228];
  v1[470] = v0[226];
  v1[479] = v0[217];
  v1[472] = v4;
  v1[474] = v0[224];
  v1[475] = v0[222];
  LODWORD(STACK[0x1404]) = STACK[0x1EF4];
  v1[477] = v0[220];
  v1[480] = v0[219];
  v1[481] = v0[218];
  LODWORD(STACK[0x141C]) = STACK[0x1EF0];
  LODWORD(STACK[0x142C]) = STACK[0x1EE4];
  v1[482] = v0[216];
  v1[484] = v0[214];
  v1[485] = v0[213];
  v1[486] = v0[210];
  v1[488] = v0[208];
  v1[483] = v0[212];
  LODWORD(STACK[0x1440]) = STACK[0x1EB4];
  v1[490] = v0[206];
  LODWORD(STACK[0x1444]) = STACK[0x1E94];
  v6 = STACK[0x1444];
  v7 = v1[490];
  v8 = STACK[0x1440];
  v9 = v1[483];
  v10 = v1[488];
  v11 = v1[486];
  v12 = v1[485];
  v13 = v1[484];
  v14 = v1[482];
  v15 = STACK[0x142C];
  v16 = STACK[0x141C];
  v17 = v1[481];
  v18 = v1[480];
  v19 = v1[477];
  v20 = STACK[0x1404];
  v21 = v1[475];
  v22 = v1[474];
  v23 = v1[472];
  v24 = v1[479];
  v25 = v1[470];
  v26 = v1[469];
  v27 = STACK[0x13E4];
  v28 = STACK[0x13D4];
  v1[491] = v1[467];
  LODWORD(STACK[0x1454]) = v28;
  LODWORD(STACK[0x1464]) = v27;
  v1[493] = v26;
  v1[495] = v25;
  v1[509] = v24;
  v1[496] = v23;
  v1[498] = v22;
  v1[500] = v21;
  LODWORD(STACK[0x1484]) = v20;
  v1[501] = v19;
  v1[502] = v18;
  v1[504] = v17;
  LODWORD(STACK[0x149C]) = v16;
  LODWORD(STACK[0x14AC]) = v15;
  v1[506] = v14;
  v1[507] = v13;
  v1[508] = v12;
  v1[511] = v11;
  v1[513] = v10;
  v1[510] = v9;
  LODWORD(STACK[0x14C0]) = v8;
  v1[514] = v7;
  LODWORD(STACK[0x14C4]) = v6;
  LODWORD(STACK[0x14D4]) = v6;
  LODWORD(STACK[0x1CEC]) = STACK[0x14D4];
  LODWORD(STACK[0x1D0C]) = STACK[0x14C4];
  v0[147] = v1[514];
  LODWORD(STACK[0x1D3C]) = STACK[0x14C0];
  v0[159] = v1[510];
  v0[149] = v1[513];
  v0[150] = v1[511];
  v0[151] = v1[508];
  v0[153] = v1[507];
  v0[155] = v1[506];
  LODWORD(STACK[0x1D48]) = STACK[0x14AC];
  LODWORD(STACK[0x1D4C]) = STACK[0x149C];
  v0[157] = v1[504];
  v0[160] = v1[502];
  v0[161] = v1[501];
  LODWORD(STACK[0x1D6C]) = STACK[0x1484];
  v0[163] = v1[500];
  v0[165] = v1[498];
  v0[166] = v1[496];
  v0[164] = v1[509];
  v0[167] = v1[495];
  v0[169] = v1[493];
  LODWORD(STACK[0x1D7C]) = STACK[0x1464];
  LODWORD(STACK[0x1D9C]) = STACK[0x1454];
  v0[171] = v1[491];
  return ((uint64_t (*)(void))v0[153])();
}

void QThZx0FIkDGwP1(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[8];
  int v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v7 = (unint64_t)&v14[qword_1EE29EE30 + qword_1EE29F038];
  qword_1EE29EE30 = 151185677 * v7 + 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v7 ^ 0xBBD0E398DADCC2E3);
  v8 = 2106769199
     * ((((2 * (_QWORD)&v15) | 0x52F79FFEE4F4298ALL) - (_QWORD)&v15 + 0x568430008D85EB3BLL) ^ 0x2C34900C3EDA7B69);
  v9 = 13 * ((qword_1EE29F038 - (13 * v7 + 29)) ^ 0xE3);
  v10 = byte_19334BAC0[v9];
  v11 = qword_1E2FD4D00[(v9 ^ byte_19334BF00[v10 ^ 0x70]) - 201];
  v12 = v11 - 8;
  v13 = *(_QWORD *)(v11 + 6400);
  v19 = a2;
  v20 = v8 ^ (0x72BBABA1ECF1B841 * a1 + 0x510E487A1A3390CDLL);
  v21 = v8 + 711387026;
  v24 = (a5 ^ 0x3F3FEFBB) + ((2 * a5) & 0x7E7FDF76) - v8 - 33556640;
  v22 = a7;
  v23 = &STACK[0x25154715FE2E616F];
  v17 = &STACK[0x2E29F0B9C308E865];
  v18 = v13 - v8 - 4;
  v16 = a6;
  v25 = a4;
  v15 = (a3 ^ 0x7D7FFFBF) + ((2 * a3) & 0xFAFFFF7E) - 1077942436 + v8;
  ((void (*)(int *))(qword_1E2FD4D00[(v9 ^ byte_19334BF00[v10 ^ 0x36]) - 179] - 4))(&v15);
  __asm { BR              X9 }
}

uint64_t sub_193273F48()
{
  int v0;

  sub_19322AB04();
  return (v0 - 101372955);
}

uint64_t sub_19327401C(unint64_t a1)
{
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1 + 8)
                                         + 486723911
                                         * (((a1 | 0x8C3345904C469691) - a1 + (a1 & 0x73CCBA6FB3B9696ELL)) ^ 0xBE8D9E01FC8CF60BLL)))(*(_QWORD *)a1);
}

uint64_t sub_1932740B8(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v2 ^ v1 ^ 0x452) * (a1 == 0)) ^ (v3 + v2 + 2542)))
                            - ((v2 + 453790230) ^ 0x16C9D166)))();
}

uint64_t sub_19327410C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void Rr2gWoCJX(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = v2;
  __asm { BR              X8 }
}

uint64_t sub_1932741D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28)
{
  uint64_t v28;
  uint64_t v29;

  a28 = 629424707 * ((&a27 & 0x3B71861 | ~(&a27 | 0x3B71861)) ^ 0x64D794E7) + 2860;
  v29 = sub_193241A88((uint64_t)&a27);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28 + 8 * ((2289 * (a27 != 1009597723)) ^ 0x6BAu)) - 12))(v29);
}

uint64_t sub_193274264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  a23 = 0;
  v24 = MEMORY[0x191D653A4](16, 2241923698);
  LODWORD(a11) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, unint64_t *, uint64_t *))(*(_QWORD *)(v23 + 8 * ((43 * (v24 == 0)) | 0xA50)) - 12))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, 0x191D653A4, &STACK[0x54D2A68F3DE7F4F2], &STACK[0x46AAD4E1DD901254], &a23);
}

uint64_t sub_193274368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _QWORD *a15, uint64_t (*a16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *a15 = 0;
  return a16(a1, 3564, 99283262, 2324, 522981362, 3771985873, 104, 57);
}

uint64_t sub_1932743C0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((v12 - 2048199739) ^ (3030 * a1))) - 12))(a11);
}

uint64_t sub_1932743EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24
                                                      + 8
                                                      * ((3965 * (*(_DWORD *)(a23 + 12) < ((v23 - 350) ^ 0x7A150EC1u))) ^ 0x428))
                                          - 4))(*(_QWORD *)(v24 + 5168) - 12);
}

uint64_t sub_193274728()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v5 = (v1 ^ 0x7DFF7F4E32DFB7FBLL)
     - 0x7DFF7F4DD51A87A0
     + ((v1 << (((v0 + 69) | 1u) ^ (v4 + 7))) & (((v0 + 1511328134) | 0x200002C0u) - 341155531));
  v6 = (*(unsigned int *)(v2 + 8) ^ 0xDFFC9DFFC97BDBEFLL)
     + 0x2003620094495468
     + ((2 * *(unsigned int *)(v2 + 8)) & 0x192F7B7DELL);
  v7 = v5 < 0x5DC53057;
  v8 = v5 > v6;
  if (v6 < 0x5DC53057 != v7)
    v8 = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2484 * v8) ^ v0)) - 4))();
}

void sub_193274838()
{
  JUMPOUT(0x19327484CLL);
}

uint64_t sub_1932748F0@<X0>(int a1@<W1>, char a2@<W4>, char a3@<W5>, unsigned int a4@<W6>, int a5@<W7>, unint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((v7 << ((((v6 ^ a1) + a2) & a3) + 113) > a6) * a5) ^ v6 ^ a1))
                            - (v6 ^ a1 ^ a4 ^ v9)))();
}

uint64_t sub_193274928@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 + 839977500) | 0x48040001) ^ (v3 + 28)) * (a1 < 0xFFFFFFFF)) ^ v1))
                            - 4))();
}

uint64_t sub_193274968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v24 = v17;
  v22 = a12(v19, 2241923698);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + *(_QWORD *)(v20 + 8 * (((v22 != 0) * ((v18 ^ 0x826) - 2206)) ^ v18)) - ((v18 + 1313180) | 0x7A010081u) + 4))(a1, 3564, 99283262, 2324, 522981362, 3771985873, 104, 57, a9, a10, a11, a12, a13, a14, a15, v24, a17, a1);
}

uint64_t sub_193274A18()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t *v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((408 * (*v3 <= v1)) ^ v0)) - 8))();
}

uint64_t sub_193274BF8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (v1 ^ (213 * (v0 == 0))))
                                                   - (13 * (v1 ^ 0x737u)
                                                    - 203)
                                                   + 1176))(1358, 968);
}

uint64_t sub_193274C68@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;

  v10 = v3 - 1;
  v11 = (v10 ^ v6) + v5 + (((unint64_t)v10 << (36 * (v4 ^ a1) + 93)) & v7);
  *(_BYTE *)(v8 + v11) = *(_BYTE *)(a3 + v11);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 == 0) * a2) ^ v4)))();
}

uint64_t sub_193274CB4()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2
                                                               + 8
                                                               * ((2046
                                                                 * (((v0 == 0) ^ (-21 * (v1 ^ 0xF2))) & 1)) ^ v1))
                                                   - 33 * (v1 ^ 0xBD1)
                                                   + 1180))(3713000404, 1134);
}

uint64_t sub_193274D24@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + v4 + v5) = *(_BYTE *)(a2 + v4 + v5);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v2 == 1) * ((v3 - 457) ^ a1)) ^ v3)))();
}

uint64_t sub_193274D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a17, uint64_t a18)
{
  void (*v18)(_QWORD);
  int v19;
  uint64_t v20;
  uint64_t v21;

  v18(*(_QWORD *)v21);
  *(_QWORD *)v21 = v20;
  *(_DWORD *)(v21 + 8) = v19;
  return a16(a18, 3564, 99283262, 2324, 522981362, 3771985873, 104, 57);
}

uint64_t sub_193274DE8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((3319 * (v3 == ((v0 - v4 + 1064) ^ (v5 - 1000)))) ^ (v1 + v0 + 719)))
                            - 4))();
}

uint64_t sub_193274E28@<X0>(uint64_t (*a1)(void)@<X0>, char a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, _DWORD *a14)
{
  uint64_t *v14;
  char v15;
  char v16;
  uint64_t v17;
  int v18;
  unsigned int v19;

  v17 = *v14;
  v18 = a12 - ((a12 << ((a2 - v15 + 49) ^ (v16 - 1))) & 0x35C8A440) + 451170848;
  v19 = ((2 * *a14) & 0x37DFFBBC) + (*a14 ^ 0x9BEFFDDE) + 1678770722;
  *(_BYTE *)(*v14 + v19) = HIBYTE(v18) ^ 0x1A;
  *(_BYTE *)(v17 + v19 + 1) = BYTE2(v18) ^ 0xE4;
  *(_BYTE *)(v17 + v19 + 2) = (((BYTE1(v18) ^ 0x52) - 2 * ((BYTE1(v18) ^ 0x52) & 7 ^ BYTE1(v18) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v17 + v19 + 3) = v18 ^ 0x20;
  *a14 += 4;
  return a1();
}

uint64_t sub_193274F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * ((4014 * (((-121 * (v13 ^ (v13 + 1))) ^ (v12 == v14)) & 1)) ^ (v10 + v13 + 1636))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_193274F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t *a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28,uint64_t a29,unsigned int a30,uint64_t a31,int a32,uint64_t a33)
{
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  uint64_t v42;
  _DWORD *v44;

  v35 = qword_1E2FD4D00[v34 - 2633];
  ((void (*)(uint64_t))qword_1E2FD4D00[v34 ^ 0xAB5])(v35);
  v44 = (_DWORD *)qword_1E2FD4D00[v34 ^ 0xA80];
  v36 = *a23;
  v37 = *((_DWORD *)a23 + 3);
  v38 = *v44 ^ 0xA55DEFBD;
  v39 = (*v44 << (((v34 ^ 0x6C) + 54) ^ 0x2E)) & 0x4ABBDF7A;
  v40 = 597255653 * ((-2110662520 - (&a27 | 0x8231D888) + (&a27 | 0x7DCE2777)) ^ 0x74C558EE);
  a33 = a13;
  a28 = v40 + v37 + 1581691396 - ((2 * v37) & 0xBC8D6408);
  a30 = ((2 * (v34 ^ 0x86C)) ^ 0x7FBBF209) - v40 + v38 + v39;
  a32 = v40 + v34 + 531;
  a29 = a14;
  a31 = v36;
  ((void (*)(int *))qword_1E2FD4D00[v34 ^ 0xABB])(&a27);
  v41 = a27;
  v42 = ((uint64_t (*)(uint64_t))qword_1E2FD4D00[v34 ^ 0xA99])(v35);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v33 + 8 * ((491 * (v41 == 663729217)) ^ v34)) - 8))(v42);
}

uint64_t sub_1932750D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t *);
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v33 = 486723911
      * ((((2 * (_QWORD)&a27) | 0xC9861FF55DC8C234) - (_QWORD)&a27 - 0x64C30FFAAEE4611ALL) ^ 0x567DD46B1E2E0180);
  v34 = *(_QWORD *)(v31 + 8 * v32) - v33 - 8;
  a27 = v30;
  a28 = v34;
  a29 = v32 - 71465943 - v33;
  v35 = v29;
  v36 = (void (*)(uint64_t *))(*(_QWORD *)(v29 + 8 * (v32 - 776)) - 4);
  v36(&a27);
  v37 = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v35 + 8 * (v32 ^ 0x32C)))(**(unsigned int **)(v35 + 8 * (v32 ^ 0x31D)), *(_QWORD *)(v35 + 8 * (v32 ^ 0x365)), a16);
  v38 = *(_QWORD *)(v31 + 8 * (v32 ^ 0xA90 ^ (v32 + 1894)));
  LODWORD(v35) = ((v37 << ((v32 - 51) & 0x7F ^ 0x7D)) & 0x3F97ACBE) + (v37 ^ 0x1FCBD65F);
  v39 = 486723911
      * ((((2 * (_QWORD)&a27) | 0xA5D686143AC4ED2CLL) - (_QWORD)&a27 - 0x52EB430A1D627696) ^ 0x6055989BADA8160CLL);
  a29 = v32 - 71465943 - v39;
  a27 = v30;
  a28 = v38 - v39 - 8;
  v40 = ((uint64_t (*)(uint64_t *))v36)(&a27);
  return (*(uint64_t (**)(uint64_t))(v31
                                            + 8
                                            * ((2 * ((_DWORD)v35 != 533452383)) | (16 * ((_DWORD)v35 != 533452383)) | (v32 + 689))))(v40);
}

uint64_t sub_193275298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t), uint64_t (*a12)(uint64_t), uint64_t a13, uint64_t a14, void (*a15)(int *), _DWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28,uint64_t a29,int a30,uint64_t a31,int a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  uint64_t v43;

  a11(v33);
  v37 = *v35;
  v38 = *((_DWORD *)v35 + 3);
  v39 = *a16 ^ 0xB71DFFB8;
  v40 = (2 * *a16) & 0x6E3BFF70;
  v41 = 597255653 * ((2 * (&a27 & 0x3170FE70) - &a27 + 1317994888) ^ 0x47847E11);
  a32 = v41 + v36 + 531;
  a30 = v39 - v41 + v40 + 1845225472;
  a28 = v41 + v38 + 1581691396 - ((v38 << (v36 + 108)) & 0xBC8D6408);
  a33 = a13;
  a31 = v37;
  a29 = a14;
  a15(&a27);
  v42 = a27;
  v43 = a12(v33);
  return (*(uint64_t (**)(uint64_t))(v34
                                            + 8
                                            * (((v42 == (((v36 + 717846747) | 0x1006300C) ^ 0x2D400742))
                                              * ((v36 - 1187) ^ 0xCDF)) ^ (v36 - 1187))))(v43);
}

void sub_1932753E8()
{
  JUMPOUT(0x1932742D4);
}

uint64_t sub_193275428()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((v3 != ((v1 + v0 - 25) | 0x19) + ((v0 - v4 + 2395) ^ (v5 + 1918))) ^ (v1 + v0 + 3379)))
                            - 4))();
}

uint64_t sub_19327546C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;

  return (*(uint64_t (**)(void))(v27 + 8 * (((((v26 - 43) | 0x480) ^ 0x5A2) * (a26 != 0)) | v26 ^ 0xDA8)))();
}

uint64_t sub_1932754B0@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((((a1 + 67829442) ^ (*v1 == 0)) & 1) == 0) * (a1 ^ 0x5CE)) ^ a1))
                            - 8))();
}

uint64_t sub_193275BC0()
{
  uint64_t (*v0)(uint64_t);
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(void);

  v3();
  *v1 = 0;
  v1[1] = 0;
  ((void (*)(_QWORD *))v3)(v1);
  return v0(v2);
}

uint64_t sub_193275BF0()
{
  int v0;

  return (v0 - 101372955);
}

void sub_193275C38(uint64_t a1)
{
  __asm { BR              X2 }
}

uint64_t sub_193275D04@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v13 = *(_QWORD *)(v9 + 8 * (a1 + a3 - 46)) - 8;
  v14 = v6;
  v15 = 0;
  v16 = a2;
  v17 = v5;
  v18 = v8;
  v19 = v3;
  *(_DWORD *)(v11 - 48) = (a3 - 1128980851) ^ (((2042106150 - ((v11 - 48) | 0x79B81126) + ((v11 - 48) | 0x8647EED9)) ^ 0x368D8E43)
                                             * v4);
  *(_QWORD *)(v11 - 40) = &v13;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * (a1 + a3 - 800)) - 12))(v11 - 48);
  *(_DWORD *)(v10 + 16) = -42789;
  return result;
}

void sub_193275F50(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_19327601C()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;

  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 264) = v0;
  *(_DWORD *)(v5 - 136) = (v3 + 1464546671) ^ (486723911
                                             * ((-1001959460 - ((v5 - 136) | 0xC4474FDC) + ((v5 - 136) | 0x3BB8B023)) ^ 0x8B72D0B9));
  result = v4(v5 - 136);
  *v1 = *(_DWORD *)(v5 - 120);
  return result;
}

void sub_193276B20(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_193276BC4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[3];
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;

  v8 = v5[9];
  v7 = v5[10];
  v9 = v5[4];
  v10 = v5[7];
  v11 = v5[11];
  v12 = v5[2];
  v13 = *v5;
  v15[0] = *(_QWORD *)(qword_1E2FD4D00[a1 ^ 0x7BD838A4] + 8 * (a1 - 2077766992) - 8) - 8;
  v15[2] = v13;
  v16 = (v4 ^ 0xFB7BDD0D) + 1287483391 + ((2 * v4) & 0xF6F7BA1A);
  v17 = v12;
  v18 = (v3 ^ 0xD9BFEDAD) + 1853448031 + ((2 * v3) & 0xB37FDB5A);
  v23 = (v2 ^ 0xE770FD8F) + 2113918965 + ((2 * v2) & 0xCEE1FB1E);
  v19 = v11;
  v20 = v10;
  v25 = (v1 ^ 0xE97B5D6C) + 1589505952 + ((2 * v1) & 0xD2F6BAD8);
  v21 = v9;
  v24 = v8;
  v26 = v7;
  v22 = 35;
  *(_QWORD *)(v6 - 56) = v15;
  *(_DWORD *)(v6 - 48) = (a1 - 1344118168) ^ (597255653
                                            * ((((v6 - 64) | 0x3608549) - (v6 - 64) + ((v6 - 64) & 0xFC9F7AB0)) ^ 0xA6BFAD0));
  result = ((uint64_t (*)(uint64_t))(qword_1E2FD4D00[a1 - 2077767784] - 8))(v6 - 64);
  *((_DWORD *)v5 + 10) = *(_DWORD *)(v6 - 64) - 101372955;
  return result;
}

void J8WWtDMwk(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_193276E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _DWORD *a11, uint64_t a12, _QWORD *a13)
{
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a11 = 0;
  *a13 = 0;
  *(_DWORD *)(v15 - 140) = 629424707
                         * ((((v15 - 144) ^ 0xCEC1C4C6 | 0x5B2CC5E7) - (((v15 - 144) ^ 0xCEC1C4C6) & 0x5B2CC5E7)) ^ 0xD727258)
                         + 2860;
  v16 = sub_193241A88(v15 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8
                                                            * ((30 * (*(_DWORD *)(v15 - 144) != 1009597723)) ^ v13))
                                          - 4))(v16);
}

uint64_t sub_193276F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v19 - 152) = 0;
  *(_DWORD *)(v19 - 156) = 101372955;
  v20 = MEMORY[0x191D653A4](16, 2241923698);
  HIDWORD(a18) = 101330303;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * ((4 * (v20 != 0)) ^ 0x633)))(v20, v21, v22, v23, v24, v25, v26, v27, a9, 591, a11, a12, a13, 12, 0x191D653A4, a16, a17, a18);
}

uint64_t sub_193277028(uint64_t *a1)
{
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v5;

  *a1 = 0;
  a1[1] = 0;
  v5 = v3(4096, 2241923698);
  *a1 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v5 == 0) * (v1 - 1303 + ((v1 - 2063727627) & 0x7B01F6F3) - 3136)) ^ v1)))();
}

uint64_t sub_193277080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t))
{
  _QWORD *v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;

  a25(v27);
  *v25 = 0;
  return v26(3527281934, 946, 2147480423, 4252, 1379797374, 2915171487, 42, 2147483635);
}

uint64_t sub_1932770DC()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *v0 = 0;
  return v1(3527281934, 946, 2147480423, 4252, 1379797374, 2915171487, 42, 2147483635);
}

uint64_t sub_19327712C@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 + a2 + 8 * a3 + 2296)) - 4))();
}

uint64_t sub_193277148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * ((3469 * (*(unsigned int *)(*(_QWORD *)(v17 - 152) + 12) < 0xFFFFFFFBuLL)) ^ 0x60A)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_19327737C@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL4 v22;
  _BOOL4 v23;

  v20 = (v18 ^ 0x7DD4FEF6BDFEF4FBLL)
      + ((a2 + 755036715) | 0x80C1081E)
      + ((2 * v18) & 0x17BFDE9F6)
      - 0x7DD4FEF6C87D0C23;
  v21 = (a2 ^ (a1 + 554))
      + (*(unsigned int *)(a18 + 8) ^ 0xEF3BFFF4EEEF9DFELL)
      + ((2 * *(unsigned int *)(a18 + 8)) & 0x1DDDF3BFCLL)
      + 0x10C4000B06924AD6;
  v22 = v20 < 0xA343E573;
  v23 = v20 > v21;
  if (v21 < 0xA343E573 != v22)
    v23 = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((3808 * v23) ^ a2)) - 12))();
}

void sub_193277470()
{
  JUMPOUT(0x193277488);
}

uint64_t sub_193277540@<X0>(int a1@<W2>, char a2@<W3>, int a3@<W6>, uint64_t a4@<X7>, unint64_t a5@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((v7 << ((a2 ^ (2 * (v5 + v6))) + 85) > a5) * a3) ^ (v5 + v6)))
                            - (v5 + v6 + a1)
                            + a4))();
}

uint64_t sub_193277574@<X0>(int a1@<W4>, int a2@<W5>, unint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a1 + (v4 ^ (a2 - 1900)) + 46) * (a3 < 0xFFFFFFFF)) ^ v4)) - 8))();
}

uint64_t sub_1932775A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  int v10;
  uint64_t v11;

  v10 = ((v8 - 1518316815) | 0x841A002) - a6 + 2996;
  v11 = v9(v6, 2241923698);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * ((1153 * (((v10 ^ (v11 == 0)) & 1) == 0)) ^ v8)) - 8))(3527281934, 946, 2147480423, 4252, 1379797374, 2915171487, 42, 2147483635);
}

uint64_t sub_193277654()
{
  unint64_t *v0;
  unint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((113 * (*v0 <= v1)) ^ v2)))();
}

uint64_t sub_193277868()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2
                                                               + 8
                                                               * (((((v1 + 471) | 0x10C) ^ 0x831) * (v0 != 0)) ^ v1))
                                                   - (v1 - 732)
                                                   + 997))(2477, 4046);
}

uint64_t sub_1932778D8@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;

  v11 = v4 - 1;
  v12 = (v11 ^ v6) + v5 + (((unint64_t)v11 << ((v3 ^ v8) ^ a1)) & v7);
  *(_BYTE *)(v9 + v12) = *(_BYTE *)(a3 + v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v11 == 0) * a2) ^ v3)) - 12))();
}

uint64_t sub_193277920()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 - 1593) * (v1 == 0)) ^ v0))
                            - ((v0 + 763) ^ 0x9A4)))();
}

uint64_t sub_193277970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(_QWORD))
{
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;

  a25(*(_QWORD *)v25);
  *(_QWORD *)v25 = v28;
  *(_DWORD *)(v25 + 8) = v27;
  return v26(3527281934, 946, 2147480423, 4252, 1379797374, 2915171487, 42, 2147483635);
}

uint64_t sub_1932779E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * (((v7 == 101372955) * ((v5 ^ 0x68D6FD03) + 988351555)) ^ (a5 + v5 - 19)))
                            - 12))();
}

void sub_193277A2C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, _DWORD *a17, uint64_t *a18)
{
  uint64_t v18;
  int v19;
  unsigned int v20;

  v18 = *a18;
  v19 = a15 - ((2 * a15) & 0x35C8A440) + 451170848;
  v20 = ((2 * *a17) & 0x55D7FF7E) + (((a1 + 1084923633) | 0xA8005C12) ^ *a17 ^ 0x72A0320) + 1427374145;
  *(_BYTE *)(*a18 + v20) = HIBYTE(v19) ^ 0x1A;
  *(_BYTE *)(v18 + v20 + 1) = BYTE2(v19) ^ 0xE4;
  *(_BYTE *)(v18 + v20 + 2) = (((BYTE1(v19) ^ 0x52) - 2 * ((BYTE1(v19) ^ 0x52) & 7 ^ BYTE1(v19) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v18 + v20 + 3) = v19 ^ 0x20;
  *a17 += 4;
}

uint64_t sub_193277B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * ((2545 * (v7 == ((103 * (a6 ^ (a6 - 23))) ^ 0x60ADD5A))) ^ (a6 + a5)))
                            - 8))();
}

uint64_t sub_193277B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;

  v23 = *(_QWORD *)(v22 - 152);
  v24 = qword_1E2FD4D00[v21 ^ 0x90D];
  ((void (*)(uint64_t))qword_1E2FD4D00[v21 - 2337])(v24);
  v25 = (_DWORD *)qword_1E2FD4D00[v21 ^ 0x954];
  v26 = *(_DWORD *)(v23 + 12);
  v27 = *v25 ^ 0xB75FF7FD;
  v28 = (2 * *v25) & 0x6EBFEFFA;
  v29 = 597255653 * ((-1811814366 - ((v22 - 144) | 0x9401E822) + ((v22 - 144) | 0x6BFE17DD)) ^ 0x62F56844);
  *(_QWORD *)(v22 - 120) = *(_QWORD *)v23;
  *(_DWORD *)(v22 - 140) = v29 + v26 + 1581691396 - ((2 * v26) & 0xBC8D6408);
  *(_DWORD *)(v22 - 112) = v29 + v21 + 871;
  *(_DWORD *)(v22 - 128) = ((((v21 - 704088804) & 0x29F787FF) - 814) ^ 0x6DB9EC94) - v29 + v27 + v28;
  *(_QWORD *)(v22 - 136) = a20;
  *(_QWORD *)(v22 - 104) = a19;
  ((void (*)(uint64_t))qword_1E2FD4D00[v21 ^ 0x96F])(v22 - 144);
  v30 = *(_DWORD *)(v22 - 144);
  v31 = ((uint64_t (*)(uint64_t))qword_1E2FD4D00[v21 ^ 0x94D])(v24);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8 * (((16 * (v30 == 663729217)) | ((v30 == 663729217) << 10)) ^ v21)))(v31);
}

uint64_t sub_193277CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(v2 + 8 * v3);
  v7 = 486723911 * ((((v5 - 144) | 0x689D412EBE40C859) - ((v5 - 144) & 0x689D412EBE40C859)) ^ 0x5A239ABF0E8AA8C3);
  *(_DWORD *)(v5 - 128) = v3 - 71465943 - v7;
  *(_QWORD *)(v5 - 144) = v0;
  *(_QWORD *)(v5 - 136) = v6 - v7 - 8;
  v8 = (void (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v3 ^ 0x308)) - 4);
  v8(v5 - 144);
  v9 = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v1 + 8 * (v3 - 812)))(**(unsigned int **)(v1 + 8 * (v3 - 765)), *(_QWORD *)(v1 + 8 * (v3 ^ 0x365)), v4);
  v10 = ((v9 << ((v3 - 80) & 0xBF ^ 0x9E)) & (((v3 - 494) | 0x800) ^ 0xBE75B5BF)) + (v9 ^ 0x5F3ADE7F);
  v11 = *(_QWORD *)(v2 + 8 * (v3 - 5));
  v12 = 486723911
      * ((~((v5 - 144) | 0x4C24C55A2069C35ELL) + ((v5 - 144) & 0x4C24C55A2069C35ELL)) ^ 0x8165E1346F5C5C3BLL);
  *(_DWORD *)(v5 - 128) = v3 - 71465943 - v12;
  *(_QWORD *)(v5 - 144) = v0;
  *(_QWORD *)(v5 - 136) = v11 - v12 - 8;
  v13 = ((uint64_t (*)(uint64_t))v8)(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((3981 * (v10 == 1597693567)) ^ (v3 + 814))))(v13);
}

uint64_t sub_193277E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t), void (*a17)(uint64_t), uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;

  a12(v20);
  v26 = *v23;
  v27 = *((_DWORD *)v23 + 3);
  v28 = 597255653 * ((((2 * (v25 - 144)) | 0x5D15B8F2) - (v25 - 144) + 1366631303) ^ 0xA781A3E0);
  *(_DWORD *)(v25 - 128) = (*v21 ^ 0xF75BEFFA) - v28 + (((v24 - 740) ^ 0xEEB7D9A9) & (2 * *v21)) + 767424446;
  *(_DWORD *)(v25 - 112) = v28 + v24 + 871;
  *(_QWORD *)(v25 - 120) = v26;
  *(_QWORD *)(v25 - 104) = a19;
  *(_DWORD *)(v25 - 140) = v28 + v27 + 1581691396 - ((2 * v27) & 0xBC8D6408);
  *(_QWORD *)(v25 - 136) = a20;
  a17(v25 - 144);
  v29 = *(_DWORD *)(v25 - 144);
  v30 = a16(v20);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (int)(((v29 == 395293758) * (((v24 - 396194) & 0xADC7FEFF) + 1379795867)) ^ (v24 - 740))))(v30);
}

void sub_193277FDC()
{
  JUMPOUT(0x193276FACLL);
}

uint64_t sub_193277FF0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v8 = v1 - 841;
  v9 = v4 + v3 + (v8 + 1604) - 2476;
  *(_BYTE *)(v6 + v9) = *(_BYTE *)(a1 + v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v2 == 1) * v5) ^ v8)) - 12))();
}

uint64_t sub_193278044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((91 * (v8 == 101372955)) ^ (a5 + v6 + 2292)))
                            - ((v6 - a6 + 2128) | 0x206u)
                            + 2638))();
}

uint64_t sub_193278088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27,unint64_t *a28)
{
  int v28;
  uint64_t v29;

  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((11 * (a27 <= *a28)) ^ v28)) - 8))();
}

uint64_t sub_193278114()
{
  int v0;
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((37 * ((v1 ^ (v0 - 117)) & 1)) ^ v0))
                            + 2915171475
                            - ((v0 - 302778727) & 0xBFCDFFFF)
                            + 8))();
}

uint64_t sub_19327815C@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = v4 + (v5 ^ (a2 + 111)) - 402;
  v8 = (v7 ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + ((2 * v7) & 0x1EFF41E7ALL);
  *(_BYTE *)(a3 + v8) = *(_BYTE *)(v3 + v8);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((2 * (v7 != 0)) | (4 * (v7 != 0))) ^ (a1 + v5 + 1614))))();
}

uint64_t sub_1932781D8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;

  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * ((((a1 + 3459) ^ 0x974) + a1 + 401) ^ (3841 * (a21 == 0)))) - 4))();
}

uint64_t sub_193278218(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_193278238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  unsigned __int8 v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8 * ((((v7 ^ (v6 + 38)) & 1) * ((v6 - a5 - 1614) ^ (a6 - 50))) ^ v6)))();
}

uint64_t sub_193278264@<X0>(int a1@<W4>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *a2 = *v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2660 * (v3 != 1)) ^ (a1 + v4 - 23))) - 4))();
}

uint64_t sub_1932782E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,uint64_t a27)
{
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v30 = v27 ^ (a6 + 111);
  *(_QWORD *)(v28 + 8) = a26;
  v31 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))qword_1E2FD4D00[a5 - 1525 + v30])(*(unsigned int *)qword_1E2FD4D00[v30 ^ (a6 + 50)], a27, a26);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29
                                                      + 8
                                                      * (int)((17 * (v30 ^ 0xADC1FC80)) ^ 0x230 ^ (v30 + 1379797374)))
                                          - 8))(v31);
}

uint64_t sub_19327838C@<X0>(int a1@<W4>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((5605 * (((v2 == 0) ^ (a2 - 40)) & 1)) ^ (a2 + 985)))
                            - ((a2 + 985 - a1 + 53) ^ 0xADC1FC93)))();
}

uint64_t sub_1932784B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BOOL4 v11;
  int v12;

  v9 = v6
     + (*(unsigned int *)(v7 + 12) ^ 0xBF9FFDF7FD5FDFF6)
     + 0x40600208412C0494
     + (((unint64_t)*(unsigned int *)(v7 + 12) << ((v6 - 48) ^ (a6 - 120) ^ 0x9E)) & 0x1FABFBFECLL);
  v10 = (*(unsigned int *)(v7 + 8) ^ 0x6E355FEDDEF77715)
      - 0x6E355FEDA06B8CA7
      + ((2 * *(unsigned int *)(v7 + 8)) & 0x1BDEEEE2ALL);
  v11 = v9 < 0x3E8BEA6E;
  v12 = v9 > v10;
  if (v11 != v10 < 0x3E8BEA6E)
    v12 = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (int)(((16 * v12) | (v12 << 6)) ^ (v6 - 48))) - 12))();
}

uint64_t sub_1932785A0@<X0>(uint64_t (*a1)(void)@<X8>)
{
  _DWORD *v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v5 = ((2 * v2) & 0x39AD4EFE) + (v2 ^ 0x1CD6A77F) - 483829631;
  v6 = *(unsigned __int8 *)(*(_QWORD *)v4 + v5);
  v7 = (((v3 - 269224201) & 0xBDCDFFBF) + (v6 << 24) - (v6 << 25) + 1363018593) | (*(unsigned __int8 *)(*(_QWORD *)v4 + v5 + 1) << 16);
  v8 = *(unsigned __int8 *)(*(_QWORD *)v4 + v5 + 2);
  v9 = v7 | (((v8 - ((2 * v8) & 0x4C)) << 8) + 1131750912) ^ 0x43752600;
  v10 = *(unsigned __int8 *)(*(_QWORD *)v4 + v5 + 3);
  v11 = (v9 ^ 0x5A6FFF) & ((v10 - ((2 * v10) & 0xE6) - 1636428685) ^ 0x82C7F04) ^ v9 & 0x69A59400;
  v12 = (v11 & 0x324D5387 ^ 0x12494387) + (v11 ^ 0x28A41408) - ((v11 ^ 0x28A41408) & 0x324D5387);
  *v1 = (((v12 ^ 0x1FBDF440) - 789305555) ^ ((v12 ^ 0x7B8AD7DE) - 1262287693) ^ ((v12 ^ 0x81840F66) + 1322114059))
      - 619719546;
  *(_DWORD *)(v4 + 12) = v2 + 4;
  return a1();
}

uint64_t sub_193278730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)((((a6 - 853299904) & 0x851A5EFD ^ (2 * (a6 ^ (a6 - 906))) ^ 0x1912) * v6) ^ (a5 + a6 + 1223)))
                            - 8))();
}

uint64_t sub_193278784@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((a1 ^ 0x3C9) - 2120) * (v1 != 0)) ^ a1)))();
}

uint64_t sub_1932787B4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v5 = (*(unsigned int *)(v4 - 156) | ((unint64_t)(*(_DWORD *)(v4 - 156) < 0x60AD41Bu) << 32))
     + (*(unsigned int *)(v1 + 12) ^ 0x9FF7FDED771DF77BLL)
     + 0x6008021285AB4388
     + (((3 * (a1 ^ 0xB40u)) ^ (unint64_t)(v2 + 3996899597)) & (2 * *(unsigned int *)(v1 + 12)));
  v6 = (*(unsigned int *)(v1 + 8) ^ 0xA6FE6E1ACFD7F7EBLL)
     + 0x590191E532FC1733
     + ((2 * *(unsigned int *)(v1 + 8)) & 0x19FAFEFD6);
  v7 = v5 < 0x2D40F1E;
  v8 = v5 > v6;
  if (v7 != v6 < 0x2D40F1E)
    v8 = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1330 * !v8) ^ a1)))();
}

uint64_t sub_1932788A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, uint64_t a14, uint64_t (*a15)(void), uint64_t a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_DWORD *)(v17 + 12) = (((v16 + 45) | 0x10) ^ 0xF9F520F1) + v19 + v20;
  v22 = a15();
  *a13 = v22;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t (*)(void), uint64_t))(*(_QWORD *)(v18 + 8 * ((51 * (v22 == 0)) ^ v16)) - (((v16 - 711) | 0x1A4u) ^ 0x9BCLL)))(v22, v23, a3, v24, 1379797374, 2915171487, v25, v26, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_193278940(unint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 | (v2 + v4 > a1))) - 12))();
}

uint64_t sub_193278AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8
                                                                                       * (v25 ^ (111 * (v24 != 0))))
                                                                     - (v25 - 973)
                                                                     - 34 * (v25 ^ 0x10F1u)
                                                                     + 6070))(a1, a2, a3, a24);
}

uint64_t sub_193278B1C@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;

  v5 = v3 - 1023;
  *a1 = *a2;
  v6 = 34 * (v5 ^ 0x885u) - 2787 != v2;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v6 | (v6 << 10)) ^ v5)))();
}

uint64_t sub_193278B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26
                                                                                 + 8
                                                                                 * ((506
                                                                                   * (((v24 ^ 0x1A1B ^ (v25 == 0)) & 1) == 0)) ^ v24))
                                                                     - (v24 - 2153)
                                                                     + 2186))(a1, a2, a3, a24);
}

uint64_t sub_193278BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 - 1;
  v6 = (v5 ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + ((2 * v5) & 0x1EFF41E7ALL);
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 == 0) * (v3 - 2133)) | v3)))();
}

uint64_t sub_193278C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = v3 - 1;
  v10 = (v9 ^ v5) + v2 + (v6 & (2 * v9));
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 == 0) * v7) | v4)))();
}

uint64_t sub_193278C70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _DWORD *a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a11 = a4;
  return (*(uint64_t (**)(void))(v12 + 8 * ((*(_QWORD *)(v13 - 152) == 0) | v11 ^ 0x1F0)))();
}

void sub_193278CA8()
{
  JUMPOUT(0x193278D0CLL);
}

uint64_t sub_193278D64()
{
  uint64_t (*v0)(uint64_t);
  _QWORD *v1;
  uint64_t (*v2)(_QWORD *);
  uint64_t v3;

  *v1 = 0;
  v1[1] = 0;
  v3 = v2(v1);
  return v0(v3);
}

uint64_t sub_193278DA4()
{
  int v0;

  return (v0 - 101372955);
}

void XgJ8VCncrBfn9DzTTUYPfkG()
{
  _BYTE v0[8];
  _BYTE v1[216];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  qword_1EE29F120 = 151185677 * ((unint64_t)&v0[qword_1EE29F038 ^ qword_1EE29F120] ^ 0xBBD0E398DADCC2E3);
  qword_1EE29F038 = qword_1EE29F120;
  sub_1931EEEAC(v1, 0, 0xC0uLL);
  __asm { BR              X12 }
}

uint64_t sub_1932792CC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2659
                                          * ((((v0 ^ 0x2DE80E26BD4A5A6) - 0x6051FF4385B2BADCLL) ^ ((v0 ^ 0xB3CACE3A8A50D0AFLL) + 0x2EBA4E649BC9302BLL) ^ ((v0 ^ 0xEAF451275F7B0FF0) + 10 * (v3 ^ (v3 - 16)) + 0x7784D1794EE2EED6))
                                           + v4 < 0x16)) ^ (v1 + v3 - 1077)))
                            - 4))();
}

uint64_t sub_1932793A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  _BOOL4 v15;

  v13 = (((v9 ^ 0xA862691259EFB1B7) + 0x3512E94C48765133) ^ ((v9 ^ 0xD34EBF6341961BF3) + 0x4E3E3F3D500FFB77) ^ (((v10 + 523) ^ (v12 + 667) ^ 0xBDBC49D0B033ED21) + (v9 ^ 0x20CCC98EA686D0BDLL)))
      + a8;
  v14 = (v8 < 0x9E34B233) ^ (v13 < 0x9E34B233);
  v15 = v13 < v8;
  if (v14)
    v15 = v8 < 0x9E34B233;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((2541 * v15) ^ v10)) - 4))();
}

void sub_193279488()
{
  JUMPOUT(0x193279174);
}

uint64_t sub_193279500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  return ((uint64_t (*)(void))(*(_QWORD *)(v24
                                        + 8
                                        * ((3730
                                          * ((((v22 ^ 0x2AE9D61CFBBEE413) - 0x4866A9BD15D8FB69) ^ ((v22 ^ 0xE447C0AE79DF5CECLL) + 0x793740F06846BC6ALL) ^ ((v22 ^ 0x954E094D3C9EC206) + a22))
                                           + v26 < 0x16)) ^ (v23 + v25 - 1095)))
                            - 8))();
}

void sub_1932795AC()
{
  JUMPOUT(0x193279174);
}

uint64_t sub_1932795EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  return ((uint64_t (*)(void))(*(_QWORD *)(v25
                                        + 8
                                        * ((2937
                                          * ((((v23 ^ 0xC0B662A20A930842) + 0x5DC6E2FC1B0AE8C8) ^ ((v23 ^ 0x1DF005555040E44ELL) - 0x7F7F7AF4BE26FB34) ^ ((v23 ^ a23) + 0x1BD6F856F5B57671))
                                           + v27 < 0x16)) ^ (v24 + v26 - 1077)))
                            - 4))();
}

void sub_1932796A0()
{
  JUMPOUT(0x193279114);
}

uint64_t sub_193279720()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + v4 - 1046) ^ (3330 * (v0 == v3)))) - 8))();
}

uint64_t sub_193279758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20
                                        + 8 * ((53 * ((a18 ^ (v19 == (a19 ^ 0x396F605E57B5B89BLL))) & 1)) ^ 0x697u))
                            - 4))();
}

uint64_t sub_1932797D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  int v44;
  uint64_t v45;
  uint64_t (*v46)(void);
  char *v47;

  v46 = (uint64_t (*)(void))(*(_QWORD *)(v45 + 8 * (v44 + a19 - 1046)) - 8);
  v47 = &a44 + a6 + 0x78FEDF32ED318A29;
  *v47 = 0;
  v47[1] = 0;
  v47[2] = 0;
  v47[3] = 0;
  v47[4] = 0;
  v47[5] = 0;
  v47[6] = 0;
  v47[7] = 0;
  return v46();
}

void sub_193279CB8()
{
  JUMPOUT(0x193279BF0);
}

uint64_t sub_193279CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(void))
{
  return a25();
}

uint64_t sub_193279CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  return a9();
}

uint64_t sub_193279CE8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 + v1) ^ (5274 * v0))) - (v3 ^ (v3 + 208)) + 236))();
}

void sub_193279D10()
{
  JUMPOUT(0x1932790CCLL);
}

uint64_t sub_193279E88()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3520 * v0) ^ (v3 + v1))) - 4))();
}

void sub_193279EA4()
{
  JUMPOUT(0x19327909CLL);
}

uint64_t sub_193279FAC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3261 * v0) ^ (v1 + v2))) - 4))();
}

uint64_t sub_193279FC8()
{
  int v0;

  return v0 ^ 0x50996583u;
}

void sub_19327A01C(uint64_t a1)
{
  int v1;
  _DWORD v2[12];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 16) - 1624863733 * (((a1 | 0xE8A68CA8) - (a1 & 0xE8A68CA8)) ^ 0xDA307690);
  v2[1] = v1 + 629424707 * ((2 * (v2 & 0x71612BE0) - v2 + 245290013) ^ 0x9601A764) + 963;
  sub_193241A88((uint64_t)v2);
  __asm { BR              X10 }
}

uint64_t sub_19327A414@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  BOOL v68;
  int v69;
  BOOL v70;
  int v71;
  uint64_t (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  *(_QWORD *)(v34 - 216) = 0;
  v35 = *(uint64_t **)(v34 - 240);
  v36 = *((_DWORD *)v35 + 5) - a16;
  v37 = v35[8];
  v38 = *((_DWORD *)v35 + 14);
  v39 = *((_DWORD *)v35 + 8) - a16;
  v40 = *((_DWORD *)v35 + 22) ^ a16;
  v41 = *v35;
  v42 = (v30 + 1993) | 0x181;
  *(_QWORD *)(v34 - 192) = 0;
  *(_DWORD *)(v34 - 156) = v31;
  *(_DWORD *)(v34 - 204) = v31;
  *(_DWORD *)(v34 - 200) = v31;
  LODWORD(a13) = (v38 ^ 0xEBDFFCB2) + 2012781440 + ((v38 << (((v30 - 55) | 0x81) ^ 0xC4)) & 0xD7BFF964);
  v43 = 2 * (v39 & 0x86329225);
  v44 = ((2 * (v39 ^ 0x94546ED7)) ^ 0x24CDF9E4) & (v39 ^ 0x94546ED7) ^ (2 * (v39 ^ 0x94546ED7)) & 0x1266FCF2;
  v45 = v44 ^ 0x12220412;
  v46 = (v44 ^ 0x44D8A0) & (4 * (v43 & (v39 ^ 0x94304A95) ^ v39 & 0x86329225)) ^ v43 & (v39 ^ 0x94304A95) ^ v39 & 0x86329225;
  v47 = ((4 * v45) ^ 0x499BF3C8) & v45 ^ (4 * v45) & 0x1266FCF0;
  v48 = (v47 ^ 0x2F0C0) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x12640C32)) ^ 0x266FCF20) & (v47 ^ 0x12640C32) ^ (16 * (v47 ^ 0x12640C32)) & 0x1266FCF0;
  v50 = v48 ^ 0x1266FCF2 ^ (v49 ^ 0x266CC00) & (v48 << 8);
  v88 = 4
      * (v39 ^ (2
              * ((v50 << 16) & 0x12660000 ^ v50 ^ ((v50 << 16) ^ 0x7CF20000) & (((v49 ^ 0x100030D2) << 8) & 0x12660000 ^ 0x10020000 ^ (((v49 ^ 0x100030D2) << 8) ^ 0x66FC0000) & (v49 ^ 0x100030D2)))) ^ 0x823B6BC1)
      + 0x1054838D21084831;
  v51 = (v43 & 0x8450448 | v39 & 0x86329225) ^ v43 & (v39 ^ 0x1EE78E78);
  v52 = ((2 * (v39 ^ 0x1EE78E78)) ^ 0x31AA38BA) & (v39 ^ 0x1EE78E78) ^ (2 * (v39 ^ 0x1EE78E78)) & 0x98D51C5C;
  v53 = v52 ^ 0x88550445;
  v54 = (v52 ^ 0x90811C59) & (4 * v51) ^ v51;
  v55 = ((4 * v53) ^ 0x63547174) & v53 ^ (4 * v53) & 0x98D51C5C;
  v56 = (v55 ^ 0x541050) & (16 * v54) ^ v54;
  v57 = ((16 * (v55 ^ 0x98810C09)) ^ 0x8D51C5D0) & (v55 ^ 0x98810C09) ^ (16 * (v55 ^ 0x98810C09)) & 0x98D51C50;
  v58 = v56 ^ 0x98D51C5D ^ (v57 ^ 0x88510400) & (v56 << 8);
  v59 = v39 ^ (2
             * ((v58 << 16) & 0x18D50000 ^ v58 ^ ((v58 << 16) ^ 0x1C5D0000) & (((v57 ^ 0x1084180D) << 8) & 0x18D50000 ^ 0x8C10000 ^ (((v57 ^ 0x1084180D) << 8) ^ 0x551C0000) & (v57 ^ 0x1084180D))));
  HIDWORD(v87) = HIBYTE(v59) ^ 0xFFFFFF87;
  v60 = v43 & (v39 ^ 0xF5B21825) ^ v39 & 0x86329225;
  v61 = ((2 * (v39 ^ 0xF1973C67)) ^ 0xEF4B5C84) & (v39 ^ 0xF1973C67) ^ (2 * (v39 ^ 0xF1973C67)) & 0x77A5AE42;
  v62 = (v61 ^ 0x21000800) & (4 * v60) ^ v60;
  v63 = ((4 * (v61 ^ 0x10A4A242)) ^ 0xDE96B908) & (v61 ^ 0x10A4A242) ^ (4 * (v61 ^ 0x10A4A242)) & 0x77A5AE40;
  v64 = (v63 ^ 0x5684A800) & (16 * v62) ^ v62;
  HIDWORD(v86) = ((((v59 >> 8) ^ 0xFFFFFFAA) - 2 * (((v59 >> 8) ^ 0xFFFFFFAA) & 7 ^ (v59 >> 8) & 4) + 11) ^ 3) - 8;
  LODWORD(v87) = HIWORD(v59) ^ 0x32;
  LODWORD(v86) = v59 ^ 0xFFFFFF9F;
  v65 = ((16 * (v63 ^ 0x21210642)) ^ 0x7A5AE420) & (v63 ^ 0x21210642) ^ (16 * (v63 ^ 0x21210642)) & 0x77A5AE40;
  v66 = v64 ^ 0x77A5AE42 ^ (v65 ^ 0x7200A400) & (v64 << 8);
  v67 = ((v66 << 16) ^ 0xE420000) & (((v65 ^ 0x5A50A42) << 8) & 0x17A50000 ^ 0x12010000 ^ (((v65 ^ 0x5A50A42) << 8) ^ 0x5AE0000) & (v65 ^ 0x5A50A42));
  HIDWORD(v85) = v39 + 2144388526;
  v83 = v37;
  HIDWORD(a4) = v36;
  if (v37)
    v68 = v36 == 367556855;
  else
    v68 = 1;
  v69 = v68;
  HIDWORD(a2) = (4 * v39) ^ (8 * ((v66 << 16) & 0x17A50000 ^ v66 ^ v67)) ^ 0x95E73A84;
  v84 = v41;
  HIDWORD(a6) = v40;
  if (v41)
    v70 = v40 == 367556855;
  else
    v70 = 1;
  HIDWORD(v89) = 392 * a1;
  LODWORD(v85) = 165 * v69;
  *(_DWORD *)(v34 - 220) = v32;
  HIDWORD(a21) = 1675139137;
  v71 = v70;
  LODWORD(v89) = v71;
  v72 = (uint64_t (*)(uint64_t, uint64_t))qword_1E2FD4D00[v42 ^ 0x9F4];
  v73 = v72(16, 2241923698);
  v74 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((1117 * (v73 != 0)) ^ v42)) - 7 * (v42 ^ 0x8CAu) + 1889);
  *(_QWORD *)(v34 - 232) = qword_1E2FD4D00[v42 - 2448];
  HIDWORD(a26) = 101330303;
  return v74(v73, v75, v76, v77, v78, v79, v80, v81, a2, v83, a4, v84, a6, 35 * (v32 ^ 0x761u), v85, v86, v87, v88, 486723911
         * (((~(v34 - 144) | 0x369B45D881D0AC82) + ((v34 - 144) | 0xC964BA277E2F537DLL)) ^ 0xFBDA61B6CEE533E6),
           a13,
           v89,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           v34 + 0x54D2A68F3DE7F3CALL,
           v34 + 0x46AAD4E1DD90111CLL,
           v72,
           a26,
           a27,
           a28,
           v34 - 192,
           a30);
}

uint64_t sub_19327AA8C(uint64_t *a1)
{
  int v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v5;

  *a1 = 0;
  a1[1] = 0;
  v5 = v2(4096, 2241923698);
  *a1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((v5 == 0) * ((((v1 ^ 0x21E) + 1872286610) & 0x906727FB) - 1854)) ^ v1 ^ 0x21E))
                            - 4))();
}

uint64_t sub_19327AAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,_QWORD *a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t, uint64_t))
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = (*(uint64_t (**)(uint64_t))(v40 - 232))(v39);
  *a36 = 0;
  return a39(v41, 101372955);
}

uint64_t sub_19327AB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,_QWORD *a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v39;

  *a36 = 0;
  return a39(a1, 101372955, a3, *(unsigned int *)(v39 - 220), a5, 237, 3753);
}

uint64_t sub_19327AB7C@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((a1 - 1617) ^ (4537 * a2))) - (a8 ^ 0x114)))();
}

uint64_t sub_19327ABB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  uint64_t v46;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * (int)(((*(unsigned int *)(*(_QWORD *)(v46 - 192) + 12) < 0xFFFFFFFBuLL) * (((a14 + 268) | 0x41) ^ 0x273)) | (a14 + 2056))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_19327B4D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _BOOL4 v58;
  _BOOL4 v59;

  v56 = (a9 ^ 0xEF6DEDBEF2FFFF6FLL) + 0x10921241F6BBA852 + ((2 * a9) & 0x1E5FFFEDELL);
  v57 = (*(unsigned int *)(a54 + 8) ^ 0x5777BFDFAFA2BEFCLL)
      - 0x5777BFDEC5E7173FLL
      + (((v54 + 1284) ^ 0x15F457A91) & (2 * *(unsigned int *)(a54 + 8)));
  v58 = v56 < 0xE9BBA7BD;
  v59 = v56 > v57;
  if (v58 != v57 < 0xE9BBA7BD)
    v59 = v58;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((2511 * v59) ^ v54)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_19327B5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  uint64_t v55;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((((unint64_t)*(unsigned int *)(a53 + 8) >> 31 == 0) * v54) ^ (289 * ((v53 + 1305933264) ^ 0x4DD6F838)))) - (289 * ((v53 + 1305933264) ^ 0x4DD6F838u) - 1860) + 1889))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_19327B5F0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30)
{
  uint64_t v30;

  return (*(uint64_t (**)(void))(v30 + 8 * (int)((238 * (*a30 != 0)) ^ (a1 + 724125279) & 0xD4D6BFED)))();
}

void sub_19327B634()
{
  JUMPOUT(0x19327B6D0);
}

uint64_t sub_19327B7AC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  uint64_t v44;

  return ((uint64_t (*)(void))(*(_QWORD *)(v44
                                        + 8
                                        * ((23
                                          * (((v43 - 2037251879) & 0x796DFFEB ^ 0x480254AD98803E31uLL) + a1 > *(unsigned int *)(a43 + 8))) ^ v43))
                            - ((325 * (v43 ^ 0x6A6u)) ^ 0x282)))();
}

void sub_19327B828()
{
  JUMPOUT(0x19327B854);
}

uint64_t sub_19327B900@<X0>(int a1@<W5>, unint64_t a2@<X6>, unint64_t a3@<X8>)
{
  int v3;
  unsigned int v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v3 ^ ((v6 <= a3) * a1))) - ((v3 + v5) & v4 ^ a2)))();
}

uint64_t sub_19327B92C@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)((((v1 + 286277373) & 0xEEEFBFEF ^ 0x7DB) * (a1 < 0xFFFFFFFF)) ^ (v1 - 1345))))();
}

uint64_t sub_19327B96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a32(v32, 2241923698);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((2045 * (((v36 == 0) ^ (v33 + 23 + v33)) & 1)) ^ v33)))(v36, 101372955, v37, *(unsigned int *)(v35 - 220), v38, 237, 3753, v39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_19327B9E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unint64_t *a41)
{
  int v41;
  uint64_t v42;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * ((26 * (*a41 <= a1)) ^ (v41 + 2007))) - ((1193 * ((v41 + 2007) ^ 0xA2Au)) ^ 0xDF3)))(a1, a2, 0x767A3EBDF7FA0F3DLL, a4, 0x1EFF41E7ALL, a6, a7, 0x8985C1420805F7AALL, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_19327C244()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (1020 * (v0 == 0))))
                            - (v1 - 151662730)
                            - 271 * (v1 ^ 0xDFCu)
                            + 4143310034))();
}

uint64_t sub_19327C290@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X4>, unint64_t a4@<X7>, int a5@<W8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v10 = a5 + 151660003;
  v11 = v6 - 1;
  v12 = (a3 & (2 * v11)) + (v11 ^ a2);
  *(_BYTE *)(a1 + v7 - 0x7C539198C63B88BBLL + v12) = *(_BYTE *)(v5 + v12 + ((v10 + 1045) ^ a4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v11 != 0) * v8) ^ v10)) - 12))();
}

uint64_t sub_19327C2F8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 == 0) ^ ((a1 ^ 0x2E) + 26)) & 1)
                                          * ((((a1 ^ 0x42E) - 2278) | 0x248) ^ 0x644)) ^ a1 ^ 0x42E))
                            - 8))();
}

uint64_t sub_19327C33C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v4 - 0x5D946D73CE96B68 + v5) = *(_BYTE *)(v5 + v2 + 0xC0391580E16);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((2226 * (v3 != 1)) ^ (a2 - 1045))) - 12))();
}

uint64_t sub_19327C3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,_DWORD *a45,int a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t (*a52)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v52;

  *a45 += a47 - 367559456 + 2601;
  return a52(a1, a2, a3, a4, v52);
}

uint64_t sub_19327CB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_DWORD *a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v41 = *(_QWORD **)(*(_QWORD *)(v40 - 240) + 96);
  *a38 = *(_DWORD *)(v40 - 204) - 101372955;
  *v41 = (*(_DWORD *)(v40 - 200) - 101372955);
  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * (((v38 == 0) * (a22 ^ 0x57B ^ (a22 + 721) ^ 0x68C)) | a22)) - 4))();
}

uint64_t sub_19327CBE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v0 - 1838803217) & 0x6D99EFE9 ^ 0x959) - 3552) * (v1 != 0)) ^ (v0 - 1838803217) & 0x6D99EFE9 ^ 0x959))
                            - 12))();
}

uint64_t sub_19327CCD8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _BOOL4 v5;
  BOOL v6;
  int v7;
  int v8;
  int v9;

  v3 = ((v0 - 1735) ^ *(_DWORD *)(v1 + 12) ^ 0xACA7759AF9FF109CLL)
     + ((2 * *(unsigned int *)(v1 + 12)) & 0x1F3FE2FEALL)
     + 0x53588A653C86BB97;
  v4 = (*(unsigned int *)(v1 + 8) ^ 0xDDFEDFFBD27E9DF6)
     + 0x2201200464073592
     + ((2 * *(unsigned int *)(v1 + 8)) & 0x1A4FD3BECLL);
  v5 = v3 < 0x3685D388;
  v6 = v3 > v4;
  v7 = v5 ^ (v4 < 0x3685D388);
  v8 = v6;
  if (v7)
    v9 = v5;
  else
    v9 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((205 * (v9 ^ 1)) ^ v0)) - 12))();
}

uint64_t sub_19327CDA8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t (*v1)(void);
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v5 = ((7 * (v2 ^ 0xF3F) + 1591146253) ^ v3) + ((2 * v3) & 0xBDADFCEC) - 1591148150;
  v6 = ((-16777216 * *(unsigned __int8 *)(*(_QWORD *)v4 + v5)) | (*(unsigned __int8 *)(*(_QWORD *)v4 + v5 + 1) << 16))
     - 0x1000000;
  v7 = *(unsigned __int8 *)(*(_QWORD *)v4 + v5 + 2);
  v8 = *(unsigned __int8 *)(*(_QWORD *)v4 + v5 + 3);
  v9 = (((v7 - ((2 * v7) & 0x4C)) << 8) + 1131750912) ^ 0x43752600 | v6;
  v10 = (v9 ^ 0x5A6FFF) & ((v8 - ((2 * v8) & 0xE6) - 1636428685) ^ 0x82C7F04) ^ v9 & 0x69A59400;
  v11 = (v10 & 0x324D5387 ^ 0x12494387) + (v10 ^ 0x28A41408) - ((v10 ^ 0x28A41408) & 0x324D5387);
  *a1 = (((v11 ^ 0x1FBDF440) - 789305555) ^ ((v11 ^ 0x7B8AD7DE) - 1262287693) ^ ((v11 ^ 0x81840F66) + 1322114059))
      - 619719546;
  *(_DWORD *)(v4 + 12) += 4;
  return v1();
}

uint64_t sub_19327CF2C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((a4 - 502) ^ (2901 * v4)))
                            - (((a4 - 721) + 223) ^ (a4 - 502))))();
}

uint64_t sub_19327CF58@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((((a1 - 1147518839) & 0x4465BE9B) + 1366) ^ 0x30A) * (v1 != 0)) ^ a1))
                            - 4))();
}

uint64_t sub_19327CFA4(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v6 = (*(unsigned int *)(v5 - 204) | ((unint64_t)(*(_DWORD *)(v5 - 204) < a2) << 32))
     + (*(unsigned int *)(v3 + 12) ^ 0x5EEDEF4DFB7EFDFFLL)
     + ((v2 + 63816687) & 0xFC3232BBLL ^ 0xA11210B214FCF3BDLL)
     + ((2 * *(unsigned int *)(v3 + 12)) & 0x1F6FDFBFELL);
  v7 = (((v2 - 2315) | 0x100) ^ *(_DWORD *)(v3 + 8) ^ 0x2EFFEFFDB38DFE18)
     + ((2 * *(unsigned int *)(v3 + 8)) & 0x1671BFFF6)
     - 0x2EFFEFFD9D073ABDLL;
  v8 = v6 < 0x1686C53E;
  v9 = v6 > v7;
  if (v7 < 0x1686C53E != v8)
    v9 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1007 * !v9) ^ v2)) - 12))();
}

void sub_19327D0A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 216) = *(_QWORD *)v2 + v1;
  *(_DWORD *)(v2 + 12) = v0 - 101372955 + v1;
  JUMPOUT(0x19327CCACLL);
}

uint64_t sub_19327D0F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((a4 ^ 0x3F1) - 1150) * (v4 ^ 1)) ^ (a4 - 512)))
                            - (((a4 - 792) | 0x122u) ^ 0x577)))();
}

uint64_t sub_19327D130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t *a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(_QWORD, uint64_t))
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a32((v32 - 101373174 + *(_DWORD *)(v34 - 204) - 1176), 2241923698);
  *a29 = v35;
  return ((uint64_t (*)(void))(*(_QWORD *)(v33 + 8 * (((v35 != 0) * ((v32 - 778) ^ 0xF4B)) ^ v32)) - 4))();
}

void sub_19327D1B4()
{
  JUMPOUT(0x19327C1A4);
}

void sub_19327D244()
{
  JUMPOUT(0x19327D298);
}

uint64_t sub_19327D2F0()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(void))(v2 - 232))();
  *v0 = 0;
  v0[1] = 0;
  v3 = (*(uint64_t (**)(_QWORD *))(v2 - 232))(v0);
  return v1(v3);
}

void sub_19327D31C()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(*(_QWORD *)(v1 - 240) + 92) = v0;
}

void MpP1bcydEGt61uk5lIIoLR(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = v2;
  __asm { BR              X9 }
}

uint64_t sub_19327D3D0(_DWORD *a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((26 * (*a1 != 1)) ^ 0x5EEu)) - 12))();
}

uint64_t sub_19327D418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * ((5520 * (*(_QWORD *)(v3 + 8) != 0)) ^ 0x5F4u))
                                                            - 12))(a1, a2, a3);
}

uint64_t sub_19327D470()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((*(_DWORD *)(v0 + 16) == 1)
                                               * (((v2 + 71433464) | 0x80A47001) + 2065272705)) ^ v2))
                            - 12))();
}

uint64_t sub_19327D4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, char a12, int a13, char a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, int a20,char *a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unint64_t a26,int a27,int a28,char *a29,char a30,char *a31,int a32)
{
  int *v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  v35 = *((_QWORD *)v32 + 1);
  v36 = *((_QWORD *)v32 + 2);
  v37 = v32[6];
  v38 = *v32;
  v39 = *((_QWORD *)v32 + 4);
  v40 = v32[10];
  v41 = *((_QWORD *)v32 + 6);
  a26 = (0x653EC904EC380E05 * v35 + 0x43FE5CE22EA4989ALL) ^ (1624863733
                                                             * (((unint64_t)&a15
                                                               - 2 * ((unint64_t)&a15 & 0x3915D8769DA247BALL)
                                                               + 0x3915D8769DA247BALL) ^ 0x2FAD669AF34BD82));
  a29 = &a14;
  a21 = &a10;
  a22 = 0;
  a27 = ((v37 ^ 0xFFEEFFF7) + 368670976 + ((2 * v37) & 0xFFDDFFEE)) ^ (1624863733
                                                                     * ((&a15
                                                                       - 2
                                                                       * ((unint64_t)&a15 & 0x3915D8769DA247BALL)
                                                                       - 1650309190) ^ 0xAF34BD82));
  a31 = &a12;
  a20 = 1624863733
      * ((&a15 - 2 * ((unint64_t)&a15 & 0x3915D8769DA247BALL) - 1650309190) ^ 0xAF34BD82)
      + 2043506139;
  a15 = v36;
  a16 = v39;
  a32 = (v34 ^ 0x77DDBC03 ^ v38)
      - 1624863733
      * ((&a15 - 2 * ((unint64_t)&a15 & 0x3915D8769DA247BALL) - 1650309190) ^ 0xAF34BD82)
      + ((2 * v38) & 0xEFBB73EE)
      - 335880645;
  a23 = v41;
  a24 = 0;
  a17 = 1624863733
      * ((&a15 - 2 * ((unint64_t)&a15 & 0x3915D8769DA247BALL) - 1650309190) ^ 0xAF34BD82)
      + v34
      + 373;
  a18 = 1624863733
      * ((&a15 - 2 * ((unint64_t)&a15 & 0x3915D8769DA247BALL) - 1650309190) ^ 0xAF34BD82)
      + 367556855;
  a25 = ((v40 ^ 0x97EE7DF7) + 2113534720 + ((2 * v40) & 0x2FDCFBEE)) ^ (1624863733
                                                                      * ((&a15
                                                                        - 2
                                                                        * ((unint64_t)&a15 & 0x3915D8769DA247BALL)
                                                                        - 1650309190) ^ 0xAF34BD82));
  a19 = 0;
  a30 = (-11 * ((&a15 - 2 * ((unint64_t)&a15 & 0x3915D8769DA247BALL) - 70) ^ 0x82)) ^ 0x35;
  v42 = ((uint64_t (*)(uint64_t *))(qword_1E2FD4D00[v34 - 1466] - 12))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v33 + 8 * ((2065 * (a28 == 101372955)) ^ v34)) - 12))(v42);
}

uint64_t sub_19327D67C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v2 ^ 0x5C5u)))(24 * *(unsigned int *)(v0 + 16), 2241923698) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v5 * (((v2 ^ (v3 + 2586)) + 579928355) ^ 0xA7777D94)) ^ v2))
                            - 12))();
}

uint64_t sub_19327D6E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = v5;
  *(_DWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_DWORD *)v1 = 1;
  *(_QWORD *)(v1 + 8) = a1;
  *(_DWORD *)(v1 + 16) = *(_DWORD *)(v2 + 16);
  return 0;
}

void sub_19327D758(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_19327D7D8()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = -42789;
}

void oHoupA(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t *a6)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _QWORD v13[3];
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t *v17;
  unint64_t *v18;
  unint64_t *v19;
  char v20;
  char v21;
  int v22;
  _QWORD *v23;
  unsigned int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v7 = qword_1EE29F100 ^ (unint64_t)&v21 ^ qword_1EE29F038;
  qword_1EE29F100 = 151185677 * v7 - 0x442F1C6725233D1DLL;
  qword_1EE29F038 = 151185677 * (v7 ^ 0xBBD0E398DADCC2E3);
  v12 = *a6;
  v8 = (13 * (qword_1EE29F100 ^ 0xE3 ^ qword_1EE29F038));
  v9 = qword_1E2FD4D00[((13 * (qword_1EE29F100 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334BBC0[byte_19334C440[v8] ^ 0x36])
                     - 58];
  v10 = v9 - 8;
  v13[0] = *(_QWORD *)(v9 + 6528) - 8;
  v13[1] = a1 - ((2 * a1) & 0xF6BED2222B63302ELL) + 0x7B5F691115B19817;
  v13[2] = a2;
  v14 = (a3 ^ 0xFDBEB5EF) + 1811671644 + ((2 * a3) & 0xFB7D6BDE);
  v15 = a4;
  v16 = (a5 ^ 0xEFFBFEDB) + 2042536304 + ((2 * a5) & 0xDFF7FDB6);
  v17 = &v12;
  v18 = &STACK[0x33D7F666902D96E9];
  v19 = &STACK[0x37D414369B065A9D];
  v20 = -104;
  v23 = v13;
  v11 = byte_19334C220[v8];
  v24 = (597255653 * (&v22 ^ 0x90B7F99)) ^ 0x2BBA9AF6;
  ((void (*)(int *))(qword_1E2FD4D00[((13 * (qword_1EE29F100 ^ 0xE3 ^ qword_1EE29F038)) ^ byte_19334C540[v11 ^ 0x7F])
                                              - 92]
                              - 8))(&v22);
  *a6 = v12;
  __asm { BR              X9 }
}

uint64_t sub_19327DB98@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = *(_QWORD *)(v2 + 5768)
      + 629424707 * ((2 * (v4 & 0x6609B21F022C9960) - v4 + 0x19F64DE0FDD3669BLL) ^ 0x8264F8CA654C15E2)
      - 12;
  v1[1] = a1;
  *(_DWORD *)(v5 - 60) = 394009884 - 629424707 * ((2 * (v4 & 0x22C9960) - v4 - 36477285) ^ 0x654C15E2);
  sub_19322AB04();
  return (v3 - 101372955);
}

void sub_19327DC5C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19327DDE8@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t (*v37)(_QWORD, _QWORD);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v56)(_QWORD, _QWORD);

  v40[6] = &STACK[0x1AD672C79EDFE7B6];
  v40[7] = &STACK[0x6D93E3DD35BE4FE5];
  v40[8] = &STACK[0x33D7F666902D97A1];
  v40[9] = &STACK[0x37D414369B065B71];
  v40[10] = &STACK[0x25154715FE2E620F];
  v40[11] = &STACK[0x2E29F0B9C308E905];
  v40[12] = &STACK[0x11B003C355E1FBFA];
  v40[13] = &STACK[0x52214B67DD7D5696];
  v40[14] = &STACK[0x3661B8258914B159];
  v40[15] = &STACK[0x43B51972E76A1C44];
  v43 = v36 + a2;
  v44 = (v43 - 873) | 0x86E;
  v45 = v38;
  v46 = v43 + 154;
  v56 = v37;
  v47 = v37(a1, CFSTR("WEfR"));
  v40[16] = v47;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * (((v47 != 0) * (v44 + 1140)) ^ v46)) - 8))(v47, v48, v49, v50, v51, v52, v53, v54, a3, a4, a5, v56, v42, v41, v39, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a1,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           0,
           0,
           a34,
           a35,
           a36);
}

uint64_t sub_19327DF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(_QWORD, uint64_t, int *),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  _QWORD *v66;
  uint64_t v67;
  int v68;

  a25(v66[16], 3, &a38);
  v68 = a38;
  a65 = a38;
  a46 = 0;
  *v66 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v67
                                                      + 8
                                                      * (((((v65 ^ 0xE55) - 1945645487) & 0x73F82FBE ^ 0x43C) * (v68 < 7)) ^ v65 ^ 0xE55))
                                          - 4))(a26);
}

uint64_t sub_19327DFCC@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((a1 - 1) < 3) ^ (v1 + 39)) & 1)
                                          * (v1 ^ 0x440)) ^ v1))
                            - 8))();
}

uint64_t sub_19327E008@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v17 = a2 - v13;
  v18 = 383 * (a2 ^ (v13 - 512));
  v19 = v14 + a2 + 1499;
  LODWORD(STACK[0x328]) = 0;
  STACK[0x318] = 0;
  STACK[0x320] = 0;
  STACK[0x300] = 0;
  LODWORD(STACK[0x30C]) = 0;
  STACK[0x310] = 0;
  LODWORD(STACK[0x2FC]) = 0;
  v20 = (*(uint64_t (**)(uint64_t, const __CFString *))(v15 + 8 * (a2 ^ (v13 - 442))))(a1, CFSTR("gaX8gT7e"));
  LODWORD(STACK[0x32C]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * ((((_DWORD)v20 == (v17 + 2)) * (v18 - 406)) ^ v19)) - 4))(v20, v21, v22, v23, v24, v25, v26, v27, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_19327E094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t, uint64_t, unint64_t *))
{
  uint64_t v25;
  int v26;
  uint64_t (*v27)(uint64_t, const __CFString *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BOOL4 v31;

  v29 = v27(v28, CFSTR("gaX8gT7e"));
  v30 = a25(v29, 3, &STACK[0x328]);
  v31 = LODWORD(STACK[0x328]) != ((3 * ((v26 + 2829) ^ 0x873)) ^ 0x479);
  LODWORD(STACK[0x32C]) = STACK[0x328];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((89 * v31) ^ (v26 + 2829)))
                                          - ((v26 + 2829) ^ 0xA1Eu)
                                          + 782))(v30);
}

uint64_t sub_19327E104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, const __CFString *);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;

  HIDWORD(a42) = STACK[0x32C];
  v64 = v53(v54, CFSTR("aMII4QYJ"));
  LODWORD(STACK[0x384]) = 0;
  STACK[0x388] = 0;
  LODWORD(STACK[0x390]) = 0;
  LOBYTE(STACK[0x397]) = 0;
  LODWORD(STACK[0x398]) = 101330305;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((3582 * (v64 != 0)) ^ v51)) - ((v51 - 1147) | 0xA00u) + 2554))(v64, v56, v57, v58, v59, v60, v61, v62, a9, a10, a11, a12, v55, v52, v50, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v54,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           0,
           0,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           0,
           a44,
           0,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_19327E198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(_QWORD, uint64_t, unint64_t *),uint64_t a26)
{
  uint64_t v26;
  _QWORD *v27;
  int v28;
  uint64_t (*v29)(uint64_t, const __CFString *);
  uint64_t v30;

  a25(v27[12], 4, &STACK[0x320]);
  v30 = v29(a26, CFSTR("P5h3ZgzLxs"));
  v27[13] = v30;
  v27[66] = 0;
  LODWORD(STACK[0x33C]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * (((v30 == 0) * ((v28 + 2736291) ^ 0x29CA81)) | v28))
                            - ((2 * v28) ^ 0x185Au)
                            + 3162))();
}

uint64_t sub_19327E210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v38 = ((uint64_t (*)(_QWORD))qword_1E2FD4D00[v37 - 3148])(*(_QWORD *)(v36 + 104));
  *(_QWORD *)(v36 + 528) = 0;
  LODWORD(STACK[0x33C]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 + 8 * ((209 * ((_DWORD)v38 + 1141813186 - (((v37 - 2017) ^ 0x881D5BFB) & (2 * (_DWORD)v38)) != 0x440EAFC2)) ^ v37)) - 8))(v38, v39, v40, v41, v42, v43, v44, v45, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_19327E2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  uint64_t v44;
  int v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v47 = ((uint64_t (*)(uint64_t, uint64_t))qword_1E2FD4D00[v45 & 0x3D455BB1])((((v45 + 2017) ^ 0x72Du) + 4294964361) & (4 * a38) ^ 0x103ABF0C, 2241923698);
  v46[14] = v47;
  LODWORD(STACK[0x384]) = 0;
  LODWORD(STACK[0x388]) = 0;
  LODWORD(STACK[0x38C]) = a44;
  LODWORD(STACK[0x390]) = 0;
  *v46 = 0;
  LOBYTE(STACK[0x397]) = 0;
  LODWORD(STACK[0x398]) = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v44 + 8 * ((239 * (v47 != 0)) ^ v45)) - 8))(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           0);
}

uint64_t sub_19327E364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v48 = ((a38 ^ 0x6221DDC85017FF7) - 0x6221DDC85017FF7) ^ ((a38 ^ 0x444B654EC8BE6CC8) - 0x444B654EC8BE6CC8) ^ (((((v47 + 422310799) & 0xE6FDCAB7) - 0x7F5BBA40F6780DA9) ^ a38) + 0x7F5BBA40F64E4304);
  LOBYTE(STACK[0x3A3]) = v48 - 0x3D32C2D243DA2001 < (uint64_t)0x800000007817303CLL;
  *(_QWORD *)(v46 + 528) = *(_QWORD *)(v46 + 112);
  LODWORD(STACK[0x33C]) = a44;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * ((780 * ((unint64_t)(v48 + v44) < 0x7FFFFFFFFFFFFFFFLL)) ^ v47)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_19327E478@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 - 496) ^ 0xA5B) - 3559) * (a1 != 7)) ^ (v1 - 496)))
                            - ((7 * ((v1 - 496) ^ 0x499u)) ^ 0x47DLL)))();
}

uint64_t sub_19327E4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, const __CFString *), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v46 = (v42 + v45 - 1654);
  v47 = a12(a1, CFSTR("RulIk"));
  *(_QWORD *)(v44 + 144) = v47;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, const __CFString *), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((755 * (v47 != 0)) ^ v45)) - ((513 * (v45 ^ 0x476u)) ^ (unint64_t)(v46 - 2737310))))(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_19327E528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, const __CFString *), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t),uint64_t (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  int v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v46 = v45[18];
  v45[19] = a23(v46);
  v45[20] = a24(v46);
  v47 = a12(a26, CFSTR("ag9jz"));
  v45[21] = v47;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, const __CFString *), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (int)(((v47 != 0) * ((v44 + 1978652834) & 0x8A39EBFF ^ (v43 - 1547))) ^ v44)) - (((v44 - 515) | 0x40u) ^ 0x44CLL)))(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_19327E5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(_QWORD, uint64_t, char *),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45,uint64_t a46,int a47,int a48,uint64_t a49,uint64_t a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a72;
  uint64_t v72;
  _QWORD *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;

  v75 = v73[19];
  v76 = a25(v73[21], 4, &a39);
  a45 = v75;
  *v73 = v73[20];
  v73[22] = *v73;
  a72 = a45;
  a48 = 0;
  v73[2] = 0;
  v73[3] = 0;
  a51 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v72 + 8 * (((v74 - 1064) | 0x804) ^ (105 * (a65 < 4))))
                                          - (((v74 - 1064) | 0x804) ^ 0xB45u)
                                          + 845))(v76);
}

uint64_t sub_19327E63C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((409 * (a1 ^ 0x35B) - 783) * (v1 != 2)) ^ a1)) - 8))();
}

void sub_19327E678()
{
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 192) = v1
                        - 156243929
                        * ((((v2 - 224) | 0x708FD127) - (v2 - 224) + ((v2 - 224) & 0x8F702ED8)) ^ 0x524BF54A)
                        + 737184879;
  ((void (*)(uint64_t))qword_1E2FD4D00[v1 ^ 0x337])(v2 - 224);
  __asm { BR              X10 }
}

uint64_t sub_1932814C8()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v2[58];
  *(_DWORD *)(v3 - 216) = -2737963
                        - 2106769199 * (((v3 - 224) & 0xC59405DB | ~((v3 - 224) | 0xC59405DB)) ^ 0x76CB9588)
                        + v1
                        + 1902;
  v2[128] = v4;
  sub_1931F11F8(v3 - 224);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((672 * (v2[57] != 0)) | (v1 - 2735512))) - 12))();
}

void sub_193281554()
{
  int v0;
  uint64_t v1;

  ((void (*)(_QWORD))qword_1E2FD4D00[v0 ^ 0x29CA90])(*(_QWORD *)(v1 + 456));
  JUMPOUT(0x193281888);
}

uint64_t sub_193281580@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((672 * (*(_QWORD *)(v3 + 456) != 0)) | ((a1 ^ v1) - 2735512)))
                            - 12))();
}

void sub_1932815B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a69;
  int a72;
  uint64_t v72;
  int v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v76 = v74[38];
  v74[81] = *(_QWORD *)(v72 + 8 * v73);
  v74[83] = v76;
  LODWORD(STACK[0x3B0]) = ((v73 - 689044209) & 0x2911FB65 ^ 0x7FFF58F1) + (a72 ^ 0xBD2FE57F) + ((2 * a72) & 0x7A5FCAFE);
  LODWORD(STACK[0x3C0]) = (a69 ^ 0x6DD4E1DF) - 8396817 + ((2 * a69) & 0xDBA9C3BE);
  v74[85] = &STACK[0x318];
  v74[86] = &STACK[0x30C];
  v74[129] = &STACK[0x3A8];
  *(_DWORD *)(v75 - 224) = 2141530661
                         - 1629346421 * ((v75 - 647073858 - 2 * ((v75 - 224) & 0xD96E709E)) ^ 0x383691FF)
                         + v73
                         + 82;
  a17(v75 - 224);
  v77 = v74[63];
  LODWORD(STACK[0x39C]) = *(_DWORD *)(v75 - 220);
  v78 = v74[31];
  v74[2] = v77;
  v74[3] = v78;
  v79 = v74[18];
  v74[6] = v74[15];
  v74[7] = v79;
  v74[8] = v74[34];
  JUMPOUT(0x1932804ACLL);
}

uint64_t sub_1932816F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t, const __CFString *, uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  a15(a22, CFSTR("DD04WvpO"), v35);
  v39 = a19(v35);
  *(_QWORD *)(v37 + 424) = a35;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                      + 8
                                                      * ((((v36 ^ (a35 == 0)) & 1)
                                                        * (81 * (v36 ^ 0x466) + 929)) ^ v36))
                                          - 4))(v39);
}

uint64_t sub_193281764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  int v41;
  int v42;
  uint64_t v43;

  LODWORD(STACK[0x2D4]) = a41;
  return ((uint64_t (*)(void))(*(_QWORD *)(v43 + 8 * ((2613 * (a41 != ((v42 + v41 - 2052) ^ 0x6231EBE))) ^ v41))
                            - (v41 - 422)
                            + 1105))();
}

uint64_t sub_1932817A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13, uint64_t (*a14)(_QWORD, _QWORD, _QWORD), uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v47 = a14(*a13, *(_QWORD *)(v43 + 424), (v42 - 73 + LODWORD(STACK[0x2D4]) - 101373999));
  *(_QWORD *)(v43 + 440) = v47;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * (((v47 == 0) * ((v42 - v46 - 227) ^ (v44 - 537))) ^ v42)) - 4))(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

void sub_193281808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t, const __CFString *, _QWORD), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;

  a15(a22, CFSTR("RulIk"), *(_QWORD *)(v22 + 440));
  JUMPOUT(0x193281860);
}

void sub_1932818C8(_DWORD *a1)
{
  unsigned int v1;
  _DWORD v2[6];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = *a1 - 1629346421 * ((a1 & 0x5A53A805 | ~(a1 | 0x5A53A805)) ^ 0x44F4B69B);
  v2[0] = v1
        + 462300053 * ((2 * (v2 & 0x66E92D68) - v2 - 1726557550) ^ 0x697D3486)
        - 1383599602;
  sub_1931ED234(v2);
  __asm { BR              X9 }
}

void sub_1932819E0()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = 1908053524;
}

void sub_193281BD4(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_193281C50()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 32) = -42793;
}

void sub_193283974(_DWORD *a1)
{
  unsigned int v1;
  uint64_t v2;

  v1 = *a1 + 10277699 * (((a1 | 0x373BC326) - (_DWORD)a1 + (a1 & 0xC8C43CD9)) ^ 0xB873864E);
  v2 = ((uint64_t (*)(uint64_t, uint64_t))qword_1E2FD4D00[v1 - 1327])(qword_1E2FD4D00[v1 - 1313] - 8, 5);
  *(_QWORD *)(qword_1E2FD4D00[v1 ^ 0x573] - 4) = v2;
  __asm { BR              X9 }
}

uint64_t sub_193283A38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v3 - 1325)))(a1, *(_QWORD *)(v1 + 8 * (v3 ^ 0x54B)) - 8);
  *(_QWORD *)(*(_QWORD *)(v1 + 8 * (v3 ^ 0x545)) - 4) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v4 != 0) * (13 * (v3 ^ 0x50C) - 1134)) ^ v3)) - 4))();
}

uint64_t sub_193283A9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t (*v4)(_QWORD, uint64_t);
  int v5;
  uint64_t v6;

  v5 = v3 ^ 0x145A;
  v6 = v4(*v2, *(_QWORD *)(v0 + 8 * (v3 ^ 0x578)) - 8);
  *(_QWORD *)(*(_QWORD *)(v0 + 8 * (int)(v5 & 0xDBBECEF8)) - 4) = v6;
  return (*(uint64_t (**)(void))(v1
                              + 8 * (int)(((v6 != 0) * (691 * ((v5 + 1517377067) & 0xA58E9DFA ^ 0x560) - 1261)) ^ v5)))();
}

void sub_193283B1C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  **(_BYTE **)(v1 + 8 * (v2 ^ 0x570)) = 1;
  *(_DWORD *)(v0 + 4) = 1908053524;
}

void sub_193283B54(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_193283CE4()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v6 = v0 + v2;
  *(_QWORD *)(v1 + 232) = &STACK[0x46AAD4E1DD901264];
  *(_QWORD *)(v1 + 240) = &STACK[0x54D2A68F3DE7F512];
  *(_DWORD *)(v5 - 140) = v4 + 629424707 * (((v5 - 144) & 0xD3D2A5F4 | ~((v5 - 144) | 0xD3D2A5F4)) ^ 0xB4B22972) + v2;
  v7 = sub_193241A88(v5 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (((4
                                                         * (((v6 - 1) ^ (*(_DWORD *)(v5 - 144) == 1009597723)) & 1)) & 0xDF | (32 * (((v6 - 1) ^ (*(_DWORD *)(v5 - 144) == 1009597723)) & 1))) ^ (v6 + 963)))
                                          - 4))(v7);
}

uint64_t sub_193283DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t, uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,__int16 a47,char a48,char a49,int a50)
{
  int v50;
  uint64_t *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v54 = *(_QWORD *)(v52 + 8 * (v50 + 244));
  v55 = (v50 - 1127633547) & 0x43365BB3;
  a40 = (v55 ^ 0xFFFFFFFFFFFFF64FLL) + v54;
  v51[2] = (uint64_t)&a25;
  v57 = *v51;
  v56 = v51[1];
  v51[47] = (uint64_t)&a25;
  v51[48] = v56;
  v51[49] = v57;
  LODWORD(STACK[0x29C]) = a42;
  v58 = a40;
  v51[51] = a39;
  v51[52] = v58;
  v59 = a19(16, 2241923698);
  v51[53] = v59;
  v51[3] = 0;
  a49 = 0;
  a50 = 101330303;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (int)(((v59 != 0) * ((v55 ^ (v53 + 91)) + 822706600)) ^ v55)) - (v55 + 1792) + 4267))(v59, v60, v61, v62, v63, v64, v65, v66, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_193284718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;
  int v22;

  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((LOBYTE(STACK[0x2CB]) * ((v20 + 822707106) ^ 0x580)) ^ (v22 + v20 + 206))))(a20);
}

uint64_t sub_19328475C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,unsigned int a29)
{
  uint64_t v29;
  uint64_t v30;

  LODWORD(STACK[0x214]) = a29;
  *(_QWORD *)(v29 + 272) = a26;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(3472260827 - ((a8 - 958115445) | 0x8122AD3u) + *(_QWORD *)(v30 + 8 * ((2525 * (a29 > *(_DWORD *)(a26 + 8))) ^ a8)) - 20))(a1, 101372955, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

void sub_1932847C4()
{
  _QWORD *v0;
  uint64_t v1;

  v0[17] = v0[51];
  v1 = v0[48];
  v0[19] = v0[49];
  v0[20] = v1;
  JUMPOUT(0x1932847F0);
}

uint64_t sub_193284880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  int v30;
  int v31;
  uint64_t v32;

  LODWORD(STACK[0x224]) = a30;
  return (*(uint64_t (**)(void))(v32 + 8 * (((a30 == v31 + v30 + 101372817) * (v31 + v30 + 353)) ^ (v31 + v30 + 2165))))();
}

uint64_t sub_1932848C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t *a26,unint64_t a27,int a28,unsigned int a29)
{
  int v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;

  v32 = *a26;
  v30[36] = a26;
  v30[37] = v32;
  v30[38] = a27;
  v30[39] = ((v29 + 3062) | 0x208u) + a29 - 0x4D58EB37AD48623 - ((2 * a29) & 0x10A5710CALL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v31 + 8 * ((29 * (a27 <= v32)) ^ (v29 + 1760))) - 12))();
}

uint64_t sub_193284954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;

  LODWORD(STACK[0x258]) = LODWORD(STACK[0x240]) ^ 0x852B8865;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((2 * (a25 == 1)) | (4 * (a25 == 1)) | v25)) - 12))();
}

uint64_t sub_1932849A0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(v4 + 8 * (((((v3 + v1 - v5 - 249 - 121) | 0x800) ^ 0x804) * (a1 != v2)) ^ v1)))();
}

uint64_t sub_1932849D4@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = LODWORD(STACK[0x258]);
  v1[92] = v3--;
  v4 = (v3 ^ 0x767A3EBDF7FA0F3DLL)
     - 0x767A3EBDF7FA0F3DLL
     + (((a1 - 537463098) & 0xEEFF7FFB ^ 0x1210260A9) & (2 * v3));
  *(_BYTE *)(v1[37] + v4) = *(_BYTE *)(v1[38] + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((358 * (v3 == 0)) | a1)) - 12))();
}

void sub_193284A68(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v19 + 208) = *(_QWORD *)(v20 + 8 * a1);
  *(_QWORD *)(v19 + 224) = a19;
  JUMPOUT(0x193284FE0);
}

uint64_t sub_193284A88@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 + v5 + (v1 ^ 0xF6A) + 317 + 857) * (a1 == v2)) ^ v1)) - 4))();
}

uint64_t sub_193284ABC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;

  v26 = LODWORD(STACK[0x258]) - 1;
  v27 = (a8 ^ (v25 + 317)) + 0x120FD9FA7;
  v28 = (v26 ^ 0x767A3EBDF7FA0F3DLL) - 0x767A3EBDF7FA0F3DLL + (v27 & (2 * v26));
  *(_BYTE *)(*(_QWORD *)(v23 + 296) + v28) = *(_BYTE *)(*(_QWORD *)(v23 + 304) + v28);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * ((6043 * (v26 == 0)) ^ a8)) - 4))(v27, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_193284B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int *a21,uint64_t (*a22)(_QWORD, uint64_t, _QWORD),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  uint64_t v33;
  unsigned int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35[92] = v33;
  v37 = v35[36];
  *(_DWORD *)(v37 + 8) = a29;
  *(_DWORD *)(v37 + 12) = 0;
  v35[43] = v37;
  LODWORD(STACK[0x25C]) = 101372955;
  LODWORD(STACK[0x26C]) = a33;
  v38 = a22(*a21, a26, a29);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v36 + 8 * (int)((v34 + 822706615) ^ 0xFBC))
                                          - (v34 ^ 0xCEF67ED7)))(v38);
}

uint64_t sub_193284B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int *a21,uint64_t (*a22)(_QWORD, uint64_t, _QWORD),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,unsigned int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = *(_QWORD *)(v37 + 288);
  *(_DWORD *)(v39 + 8) = a29;
  *(_DWORD *)(v39 + 12) = 0;
  LODWORD(STACK[0x25C]) = a35;
  *(_QWORD *)(v37 + 344) = v39;
  LODWORD(STACK[0x26C]) = 101372955;
  v40 = a22(*a21, a27, a29);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                      + 8
                                                      * (int)((395 * (v36 ^ 0xCEF67ED4)) ^ 0x5D7 ^ (v35 + v36 + 245)))
                                          - 4))(v40);
}

uint64_t sub_193284CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * (((((v26 - 2109) | 0x840) - 2739) * (*(_QWORD *)(v27 + 344) == 0)) ^ v26)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_193284CF0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v3 = *(_QWORD *)(v1 + 344);
  v4 = *(_DWORD *)(v3 + 12);
  v3 += 12;
  *(_QWORD *)(v1 + 360) = v3;
  LODWORD(STACK[0x27C]) = v4;
  v5 = ((v0 - 1038516433) & 0x3DE6777F ^ v4 ^ 0xFC3DFFDF63BBDA92) + ((2 * v4) & 0xC777B7DA) + 0x3C20020AF15858ALL;
  v6 = (*(unsigned int *)(v3 - 4) ^ 0xEDF4F7F6FDFEFFB7)
     + 0x120B080914D261BCLL
     + ((2 * *(unsigned int *)(v3 - 4)) & 0x1FBFDFF6ELL);
  v7 = v5 < 0x12D16173;
  v8 = v5 > v6;
  if (v7 != v6 < 0x12D16173)
    v8 = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1764 * !v8) ^ v0)) - 12))();
}

void sub_193284DE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  **(_DWORD **)(v1 + 360) = LODWORD(STACK[0x27C]) + 4;
  *(_QWORD *)(v1 + 208) = (((v0 ^ 0xBAFu) + 1024) ^ 0xFFFFFFFFFFFFFA83) + *(_QWORD *)(v2 + 8 * (v0 ^ 0xBAF));
  *(_QWORD *)(v1 + 224) = *(_QWORD *)(v1 + 344);
  JUMPOUT(0x193284FE0);
}

void sub_193284F9C()
{
  JUMPOUT(0x193284FACLL);
}

uint64_t sub_193285048(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((((a1 == 0) ^ (v1 + 71)) & 1)
                                               * ((v1 - 1032386289) ^ 0xC2770C45)) ^ (v1 + 2798)))
                            - 12))();
}

uint64_t sub_193285088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  uint64_t v40;

  v40 = *(_QWORD *)(v39 + 424);
  **(_DWORD **)(v39 + 432) = 4096;
  *(_QWORD *)(v39 + 24) = v40;
  LODWORD(STACK[0x2C4]) = v38;
  LOBYTE(STACK[0x2CB]) = 1;
  **(_QWORD **)(v39 + 376) = *(_QWORD *)(v39 + 24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 416))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1932850EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  int v54;
  int v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v59 = v56[9];
  v58 = v56[10];
  v56[61] = v58;
  v56[62] = v59;
  LODWORD(STACK[0x304]) = HIDWORD(a50);
  v60 = v56[7];
  v56[64] = v60;
  v56[12] = v60;
  v56[14] = v59;
  v56[15] = v58;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * ((3911 * (a54 == (((v55 + v54 + 890) | 0x250) ^ 0x60AD24F))) ^ (v55 + v54 + 1482))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_193285158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  _QWORD *v51;
  uint64_t *v52;
  _DWORD *v53;
  uint64_t v54;
  int v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v53 = (_DWORD *)v51[61];
  v52 = (uint64_t *)v51[62];
  v54 = *v52;
  v55 = STACK[0x304];
  v56 = a9 + 451169228 + v55 - ((2 * v55) & 0x35C8A440);
  v57 = ((2 * *v53) & 0xFF37FB3E) + (*v53 ^ 0xFF9BFD9F) + 6554209;
  *(_BYTE *)(*v52 + v57) = HIBYTE(v56) ^ 0x1A;
  *(_BYTE *)(v54 + v57 + 1) = BYTE2(v56) ^ 0xE4;
  *(_BYTE *)(v54 + v57 + 2) = (((BYTE1(v56) ^ 0x52) - 2 * ((BYTE1(v56) ^ 0x52) & 7 ^ BYTE1(v56) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v54 + v57 + 3) = v56 ^ 0x20;
  *v53 += 4;
  v51[12] = v51[64];
  v51[14] = v52;
  v51[15] = v53;
  LODWORD(STACK[0x314]) = a2;
  v58 = v51[14];
  v51[66] = v51[15];
  v51[67] = v58;
  LODWORD(STACK[0x32C]) = v55;
  v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v51[12];
  v51[69] = v59;
  return v59(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_193285250@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 ^ 0x936) + 2557) ^ 0x1D38) + 668 * (v1 ^ 0x936))
                                          * ((a1 & 0xFFFFFFFF80000000) != 0)) ^ v1))
                            - 12))();
}

uint64_t sub_19328528C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)(v60 + 176) = a9;
  *(_QWORD *)(v60 + 632) = a9;
  *(_QWORD *)(v60 + 640) = v59;
  HIDWORD(a30) = 101330305;
  *(_QWORD *)(v60 + 56) = *(_QWORD *)(v60 + 592);
  HIDWORD(a51) = STACK[0x354];
  v61 = *(_QWORD *)(v60 + 568);
  *(_QWORD *)(v60 + 72) = *(_QWORD *)(v60 + 576);
  *(_QWORD *)(v60 + 80) = v61;
  HIDWORD(a54) = 101330305;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 600))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1932855C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 712))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

void sub_1932855F4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1932855FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * ((LOBYTE(STACK[0x2CB]) * (v20 + 822709056)) ^ (v20 + 822706578)))
                                          - 8))(a20);
}

uint64_t sub_193285634@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  _QWORD *v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unint64_t v33;

  v29 = a2 - 29;
  v30 = v29 ^ 0xFFFFFF96;
  v33 = (v29 ^ 0xFFFFFFFFFFFFFF91) + *(_QWORD *)(v28 + 8 * (int)v29);
  LODWORD(STACK[0x2CC]) = 1;
  v27[14] = a27;
  v31 = *(_DWORD *)(a27 + 12);
  v27[57] = a27;
  v27[58] = v33;
  v27[59] = a27 + 12;
  LODWORD(STACK[0x2EC]) = v31;
  v27[12] = v33;
  v27[15] = a27 + 12;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v28
                                                     + 8
                                                     * (int)((244
                                                            * ((((v31 ^ v30) & v30) >> (((v30 + 4) & 0xD3 ^ 0xCC)
                                                                                      - __clz(v31 ^ v30 | 1))) & 1)) ^ ((v30 ^ 0xFFFFFBCE) + v30))))(a1, 101372955);
}

uint64_t sub_1932857D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v53;
  _BOOL4 v54;
  uint64_t v55;

  v50 = v48[57];
  v51 = (LODWORD(STACK[0x2EC]) ^ 0x4F6FEFA9CFEB672DLL)
      - 0x4F6FEFA8F9A1966ALL
      + ((2 * LODWORD(STACK[0x2EC])) & 0x19FD6CE5ALL);
  v52 = (*(unsigned int *)(v50 + 8) ^ 0xEDC93FDFEFFF6BF4)
      + (((a9 - 1971059246) | 0x447276C3u) ^ 0x1236C02028BC1A18)
      + ((2 * *(unsigned int *)(v50 + 8)) & 0x1DFFED7E8);
  v53 = v51 < 0xD649D0BF;
  v54 = v51 > v52;
  if (v53 != v52 < 0xD649D0BF)
    v54 = v53;
  v48[7] = v48[58];
  v55 = v48[59];
  v48[9] = v50;
  v48[10] = v55;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((2979 * v54) ^ a9)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

void sub_1932858D0(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = *(_QWORD *)(v2 + 8 * a1) + 127 * (a1 ^ 0x227) - 3179;
  v4 = v1[57];
  v1[17] = v1[58];
  v7 = STACK[0x2CC];
  v5 = v1[59];
  v1[19] = v4;
  v1[20] = v5;
  v1[70] = v4;
  v6 = v1[19];
  v1[71] = v1[20];
  LODWORD(STACK[0x354]) = v7;
  v1[72] = v6;
  v1[74] = v1[17];
  v1[75] = v3;
  v1[76] = v4 + 8;
  JUMPOUT(0x193286158);
}

uint64_t sub_193285914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  int v29;
  uint64_t v30;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((2932 * (LODWORD(STACK[0x314]) == 445 * (v29 ^ 0xCEF67ED6) + 101370730)) ^ (v29 + v28))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_19328596C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t), void (*a16)(void), uint64_t (*a17)(uint64_t), int *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t *a33)
{
  _QWORD *v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;

  v33[31] = a33;
  v38 = v35 + v36;
  a16();
  v40 = *a18;
  v41 = *a33;
  v42 = *((_DWORD *)a33 + 3);
  v33[32] = (char *)a33 + 12;
  v43 = v33[29];
  v44 = v33[30];
  v45 = 597255653 * ((v37 + 524911579 - 2 * ((v37 - 144) & 0x1F49846B)) ^ 0x1642FBF2);
  v33[96] = v41;
  *(_DWORD *)(v37 - 112) = v45 + v35 + 1015;
  v33[98] = v44;
  *(_DWORD *)(v37 - 128) = v38 - v45 + (v40 ^ 0xBDBFE7FF) + ((2 * v40) & 0x7B7FCFFE) + 1338657659;
  *(_DWORD *)(v37 - 140) = (((v35 - 1447) | 0x25) ^ 0x5E46B12B) + v45 + v42 - ((2 * v42) & 0xBC8D6408);
  v33[94] = v43;
  a15(v37 - 144);
  v46 = *(_DWORD *)(v37 - 144);
  v47 = a17(a1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v34 + 8 * ((379 * (v46 == 663729217)) ^ v35)) - 8))(v47);
}

uint64_t sub_193285AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t), unsigned int *a11, uint64_t a12, uint64_t (*a13)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unint64_t v23;

  v20 = *(_QWORD *)(v16 + 8 * v17);
  *(_QWORD *)(v15 + 744) = v18;
  *(_QWORD *)(v15 + 752) = v20
                         - 486723911
                         * ((v13 - 2 * (v13 & 0x4C98B70A2E37FF8) + 0x4C98B70A2E37FF8) ^ 0x367750E112291F62)
                         + ((25 * (((_DWORD)v17 - 537428792) & 0xEEFEFEDB ^ 0xCEF67E8A)) ^ 0xFFFFFFFFFFFFF749);
  *(_DWORD *)(v19 - 128) = v17 - 71465943 - 486723911 * ((v13 - 2 * (v13 & 0xA2E37FF8) - 1562148872) ^ 0x12291F62);
  a10(v19 - 144);
  v21 = a13(*a11, a12, v14);
  v22 = ((2 * v21) & 0xBF9DB97E) + (v21 ^ 0xDFCEDCBF);
  v23 = 486723911 * (((~v13 | 0x7E730827FD5107CALL) + (v13 | 0x818CF7D802AEF835)) ^ 0xB3322C49B26498AELL);
  *(_QWORD *)(v15 + 752) = *(_QWORD *)(v16 + 8 * ((int)v17 ^ 5)) - v23 - 8;
  *(_DWORD *)(v19 - 128) = v17 - 71465943 - v23;
  *(_QWORD *)(v15 + 744) = v18;
  a10(v19 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * (int)(v17 ^ 0x3A5 ^ (1404 * (v22 == -540091201))))
                                          - 4))(v18);
}

uint64_t sub_193285C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t), void (*a16)(void), uint64_t (*a17)(uint64_t), _DWORD *a18)
{
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;

  a16();
  v23 = **(_DWORD **)(v18 + 256);
  v24 = *a18 ^ 0x257DEFB9;
  v25 = ((a9 + v20) ^ 0x5D746B4C) & (2 * *a18);
  v26 = *(_QWORD *)(v18 + 232);
  v27 = *(_QWORD *)(v18 + 240);
  v28 = 597255653 * ((1340306888 - ((v21 - 144) | 0x4FE375C8) + ((v21 - 144) | 0xB01C8A37)) ^ 0xB917F5AE);
  *(_QWORD *)(v18 + 768) = **(_QWORD **)(v18 + 248);
  *(_QWORD *)(v18 + 784) = v27;
  *(_DWORD *)(v21 - 112) = v28 + a9 + 1015;
  *(_DWORD *)(v21 - 140) = v23 + 1581691179 + v28 + ~((2 * v23) & 0xBC8D6408) + 218;
  *(_DWORD *)(v21 - 128) = -6555649 - v28 + v24 + v25;
  *(_QWORD *)(v18 + 752) = v26;
  a15(v21 - 144);
  v29 = *(_DWORD *)(v21 - 144);
  v30 = a17(a1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((3544
                                                        * (((5 * ((a9 + v20) ^ (v20 - 52)) - 2) ^ (((v29 - (a9 + v20)) | (a9 + v20 - v29)) < 0)) & 1)) ^ (a9 + v20 - 395293620)))
                                          - 4))(v30);
}

void sub_193285E00()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[67];
  *v0 = v0[69];
  v0[1] = v1;
  v0[2] = v0[66];
  JUMPOUT(0x193285E38);
}

uint64_t sub_193285EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t, uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v28 = *(_QWORD **)(v26 + 424);
  *v28 = 0;
  v28[1] = 0;
  *(_QWORD *)(v26 + 432) = v28 + 1;
  **(_QWORD **)(v26 + 424) = a19(4096, 2241923698);
  return ((uint64_t (*)(void))(*(_QWORD *)(v27 + 8 * (((a25 != 1) * (((v25 - 3463) | 0x40) - 803)) ^ v25)) - 12))();
}

uint64_t sub_193285F34(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 + 869 + ((v1 - 758721687) & 0x2D392FFB) - 3239) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_193285F70()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  v2 = v0(*(_QWORD *)(v1 + 424));
  *(_QWORD *)(v1 + 40) = 0;
  LODWORD(STACK[0x2C4]) = 101330303;
  LOBYTE(STACK[0x2CB]) = 0;
  **(_QWORD **)(v1 + 376) = *(_QWORD *)(v1 + 40);
  return (*(uint64_t (**)(uint64_t))(v1 + 416))(v2);
}

uint64_t sub_193285FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((3317 * LOBYTE(STACK[0x2CB])) ^ (v20 + 822706579)))
                                          - ((v20 - 1959002840) & 0xA5CD864C ^ 0x240)))(a20);
}

uint64_t sub_19328603C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int a29)
{
  uint64_t v29;
  uint64_t v30;
  int v31;

  LODWORD(STACK[0x214]) = a29;
  *(_QWORD *)(v29 + 272) = a27;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)(((a29 > *(_DWORD *)(a27 + 8)) * (v31 + (a8 & 0xA5CD864C) - 822707061 + 1111)) ^ a8 & 0xA5CD864C)) - 12))(a1, 101372955, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

void sub_19328609C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[17] = v0[51];
  v1 = v0[48];
  v0[19] = v0[49];
  v0[20] = v1;
  JUMPOUT(0x1932860D4);
}

uint64_t sub_1932861C4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25)
{
  int v25;
  uint64_t v26;

  LODWORD(STACK[0x224]) = a25;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26
                                        + 8
                                        * ((a1 + 924079432) ^ 0x60AC35C ^ ((v25 + a1 + 1408) | 0x160) ^ (107 * (((a25 - (a1 + 924079432)) | (a1 + 924079432 - a25)) >= 0))))
                            - 8))();
}

uint64_t sub_193286224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,unint64_t *a27,uint64_t a28,unsigned int a29)
{
  int v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;

  v32 = *a27;
  v30[36] = a27;
  v30[37] = v32;
  v30[38] = a26;
  v30[39] = a29 - 0x4D58EB37AD48623 - (((unint64_t)a29 << (v29 - 105)) & 0x10A5710CALL) + 3720;
  return ((uint64_t (*)(void))(*(_QWORD *)(v31 + 8 * ((29 * (a26 <= v32)) ^ v29)) - 12))();
}

uint64_t sub_19328629C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;

  LODWORD(STACK[0x24C]) = LODWORD(STACK[0x240]) ^ 0x852B8865;
  return (*(uint64_t (**)(void))(v18 + 8 * ((105 * (a18 == 1)) ^ a1)))();
}

uint64_t sub_1932862E0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((v3 + ((v0 - 16846013) & 0xCFF77FF7) + 1843) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_19328631C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v26 + 328) = LODWORD(STACK[0x24C]);
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * (((a25 == ((v25 + 1039551419) & 0xEF1DBE5F) - 756291154)
                                * (((v25 - 1976) | 0xB15) ^ 0xFD9)) ^ v25)))();
}

uint64_t sub_193286398@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v3[91] = 0;
  v6 = v3[41] - 1;
  *(_BYTE *)(v3[37] + a1 + v1) = *(_BYTE *)(v3[38] + a1 + v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((v6 == 0) * (v5 + 83 * (v2 ^ 0x2D14167A) + 822712679)) ^ (83 * (v2 ^ 0x2D14167A))))
                            - 4))();
}

void sub_19328640C()
{
  JUMPOUT(0x1932863CCLL);
}

void sub_193286414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v28 + 208) = ((v27 + 1159) ^ 0xFFFFFFFFFFFFFAE9) + *(_QWORD *)(v29 + 8 * (v27 - 36));
  *(_QWORD *)(v28 + 224) = a27;
  JUMPOUT(0x193286830);
}

void sub_193286444()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 728) = v0;
  JUMPOUT(0x19328644CLL);
}

uint64_t sub_193286504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  uint64_t v28;
  uint64_t v29;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * ((3910 * (*(_QWORD *)(v28 + 344) != 0)) ^ v27)) - ((v27 ^ 0x64u) - 1201) + 126))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_193286544@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  _BOOL4 v10;

  v5 = *(_QWORD *)(v3 + 344);
  v6 = *(_DWORD *)(v5 + 12);
  v5 += 12;
  *(_QWORD *)(v3 + 360) = v5;
  LODWORD(STACK[0x27C]) = v6;
  v7 = (v6 ^ ((a1 ^ 0x5D5u) - 0x1000350405820580)) + 0x10003504E738F225 + ((2 * v6) & 0x1F4FBFFBELL);
  v8 = (*(unsigned int *)(v5 - 4) ^ 0x7FFFE3C7D7C66EFFLL)
     - 0x7FFFE3C6F60F7CFFLL
     + ((2 * *(unsigned int *)(v5 - 4)) & 0x1AF8CDDFELL);
  v9 = (v7 < 0xE1B6F200) ^ (v8 < 0xE1B6F200);
  v10 = v7 > v8;
  if (v9)
    v10 = v7 < 0xE1B6F200;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v10 * v1) ^ v2)) - 12))();
}

void sub_19328661C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  **(_DWORD **)(v1 + 360) = LODWORD(STACK[0x27C]) + 4;
  *(_QWORD *)(v1 + 208) = *(_QWORD *)(v2 + 8 * (v0 - 1237)) - 4;
  *(_QWORD *)(v1 + 224) = *(_QWORD *)(v1 + 344);
  JUMPOUT(0x193286830);
}

void sub_1932867DC()
{
  JUMPOUT(0x1932867F0);
}

uint64_t sub_193286890@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = **(_QWORD **)(v1 + 688);
  *(_QWORD *)(v1 + 720) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v4 != 0) * ((a1 + v3) ^ (v3 - 1519))) ^ a1))
                            - (((a1 - 2101078925) | 0x4C326292u) ^ 0xCEF67EDBLL)))();
}

uint64_t sub_1932868E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t (*v26)(void);
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  ((void (*)(_QWORD))v26)(*(_QWORD *)(v28 + 720));
  v30 = *(_QWORD **)(v28 + 688);
  *v30 = 0;
  v30[1] = 0;
  v31 = v26();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29 + 8 * ((110 * (a25 != 1)) | (v27 + v25 + 1159))) - 8))(v31);
}

uint64_t sub_193286930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;

  HIDWORD(a32) = *(_DWORD *)(v34 - 180);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 712))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1932869B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,uint64_t a55,int a56,int a57)
{
  int v57;
  int v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  LODWORD(STACK[0x304]) = a54;
  v63 = v59[9];
  v62 = v59[10];
  v59[61] = v62;
  v59[62] = v63;
  v64 = v59[7];
  v59[64] = v64;
  v59[12] = v64;
  v59[14] = v63;
  v59[15] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (((a57 == (_DWORD)a2) * (v57 - v61 + 1804)) ^ (v58 + v57 + 934))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_193286A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  char v52;
  _QWORD *v53;
  char v54;
  uint64_t *v55;
  _DWORD *v56;
  uint64_t v57;
  int v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v56 = (_DWORD *)v53[61];
  v55 = (uint64_t *)v53[62];
  v57 = *v55;
  v58 = STACK[0x304];
  v59 = v58 + 451169228 - ((2 * v58) & 0x35C8A440) + 1620;
  v60 = ((*v56 << (v52 + ((a9 + 98) ^ (v54 - 34)) + 119)) & 0x95D7FFFE) + (*v56 ^ 0xCAEBFFFF) + 890503169;
  *(_BYTE *)(*v55 + v60) = ((LODWORD(STACK[0x304]) + 451169228 - ((2 * LODWORD(STACK[0x304])) & 0x35C8A440u) + 1620) >> 24) ^ 0x1A;
  *(_BYTE *)(v57 + v60 + 1) = BYTE2(v59) ^ 0xE4;
  *(_BYTE *)(v57 + v60 + 2) = (((BYTE1(v59) ^ 0x52) - 2 * ((BYTE1(v59) ^ 0x52) & 7 ^ BYTE1(v59) & 4) + 11) ^ 3) - 8;
  *(_BYTE *)(v57 + v60 + 3) = (v58 - 52 - ((2 * v58) & 0x40) + 84) ^ 0x20;
  *v56 += 4;
  v53[12] = v53[64];
  v53[14] = v55;
  v53[15] = v56;
  LODWORD(STACK[0x314]) = a2;
  v61 = v53[14];
  v53[66] = v53[15];
  LODWORD(STACK[0x32C]) = v58;
  v53[67] = v61;
  v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v53[12];
  v53[69] = v62;
  return v62(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_193286B10()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v0 == v1) ^ (v2 + 14)) & 1) * ((v2 + 827) ^ 0x932)) | v2))
                            - 12))();
}

uint64_t sub_193286B50@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((27 * (((v1 ^ 0xC17 ^ ((a1 & 0xFFFFFFFF80000000) != 0)) & 1) == 0)) ^ v1))
                            - (v1 - 1205)
                            + 1134))();
}

uint64_t sub_193286B8C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (120 * (2 * a1 <= v1))))
                            - ((((v2 + 1768) | 0x20Du) - 2100) ^ 0x5FDLL)))();
}

uint64_t sub_193286BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  int v60;
  _QWORD *v61;
  uint64_t v62;

  v61[22] = v59;
  v61[79] = a9;
  v61[80] = v59;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * (((8 * (HIDWORD(a25) != 1)) | (16 * (HIDWORD(a25) != 1))) ^ v60)) - ((v60 - 2058469038) & 0x7AB1B4FA ^ 0x472)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_193286C28@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((v1 + ((v1 + 1949322073) & 0x8BCFB5BD) - 2362) * a1) ^ v1)))();
}

uint64_t sub_193286C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(_QWORD, uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v61 = a19(*(_QWORD *)(v59 + 640), 2241923698);
  *(_QWORD *)(v59 + 648) = v61;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (((HIDWORD(a24) == 1) * (((2 * v58) ^ 0x69) - 2886)) ^ v58)))(v61, v62, v63, v64, v65, v66, v67, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_193286CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;
  char v22;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v21
                                                               + 8
                                                               * ((28
                                                                 * (((a1 == 0) ^ ((v20 ^ (v22 - 109))
                                                                                                 - v22
                                                                                                 - 1)) & 1)) ^ v20))
                                                   - 8))(a20, 101372955);
}

uint64_t sub_193286CF8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = **(_QWORD **)(v1 + 560);
  *(_QWORD *)(v1 + 656) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((31 * (v3 > *(_QWORD *)(v1 + 648))) ^ (a1 - 1130))) - 4))();
}

uint64_t sub_193286EE0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v4 - 220) = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((a1 ^ 0xC2D ^ v2) & 1) == 0) * (((a1 - 930717017) | 0x67016D1) ^ 0xCEF67E3F)) ^ a1)))();
}

uint64_t sub_193286F2C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned int *)(v4 - 220);
  v1[84] = v5;
  v1[23] = 0;
  *(_BYTE *)(v1[81] + (v0 ^ (v3 + 160)) - 3472260819) = *(_BYTE *)(v1[82]
                                                                                 + (v0 ^ (v3 + 160))
                                                                                 - 3472260819);
  return (*(uint64_t (**)(void))(v2 + 8 * ((6243 * (((1 - v5) | (v5 - 1)) >= 0)) ^ v0)))();
}

void sub_193286FC0()
{
  JUMPOUT(0x193286F78);
}

uint64_t sub_193286FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)(v60 + 176) = a9;
  *(_QWORD *)(v60 + 632) = a9;
  *(_QWORD *)(v60 + 640) = v59;
  LODWORD(a33) = 101330305;
  *(_QWORD *)(v60 + 56) = *(_QWORD *)(v60 + 592);
  HIDWORD(a54) = STACK[0x354];
  v61 = *(_QWORD *)(v60 + 568);
  *(_QWORD *)(v60 + 72) = *(_QWORD *)(v60 + 576);
  *(_QWORD *)(v60 + 80) = v61;
  HIDWORD(a56) = 101330305;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 600))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_19328701C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v4 - 204) = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + 10 * (v0 ^ 0x59E) - 3147) * (v2 ^ 1)) ^ v0)))();
}

uint64_t sub_193287054@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(unsigned int *)(v3 - 204);
  v1[24] = v4--;
  v5 = ((((a1 - 553650131) & 0xEFF67EF3) + 0x767A3EBD2903906ALL) ^ v4)
     + ((2 * v4) & 0x1EFF41E7ALL)
     - 0x767A3EBDF7FA0F3DLL;
  *(_BYTE *)(v1[81] + v5) = *(_BYTE *)(v1[82] + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3488 * (v4 == 0)) ^ a1)) - 8))();
}

uint64_t sub_1932870EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(_QWORD),int a24,int a25)
{
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;

  *(_QWORD *)(v28 + 184) = v26;
  v30 = v27 + v25 - 137;
  v31 = *(_QWORD **)(v28 + 560);
  a23(*v31);
  *v31 = *(_QWORD *)(v28 + 648);
  **(_DWORD **)(v28 + 608) = *(_QWORD *)(v28 + 640);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (int)(v30 ^ 0x47B ^ (3461
                                                                 * (((a25 - v30) | (v30 - a25)) >> 31)))))(a20);
}

uint64_t sub_19328716C(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 32) ^ (462300053
                                                    * ((((2 * a1) | 0x6DF13206A56D671CLL) - a1 + 0x490766FCAD494C72) ^ 0x7FAF645A2DD559ALL))))();
}

uint64_t sub_1932871C4(uint64_t result)
{
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1932871CC(uint64_t result)
{
  *(_DWORD *)(result + 24) = -42789;
  return result;
}

void sub_1932871D8(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_193287264@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t (*v12)(_QWORD *);
  uint64_t result;
  _QWORD v14[2];
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  int v30;

  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_DWORD *)(v2 + 40) ^ v1;
  v6 = *(_DWORD *)(v2 + 16) + v1;
  v7 = *(_QWORD *)(v2 + 48);
  v8 = *(_QWORD *)(v2 + 56);
  v9 = 0x653EC904EC380E05 * (*(_QWORD *)(v2 + 32) ^ v1) + 0x43FE5CE22EA4989ALL;
  v27 = *(_QWORD *)(v2 + 72);
  v17 = 0;
  v10 = 1624863733 * ((unint64_t)v14 ^ 0x3BEF0E1F3296FA38);
  v25 = ((v6 ^ 0xD7FDF9F7) + 1038778112 + ((2 * v6) & 0xAFFBF3EE)) ^ v10;
  v18 = v10 + 2043506139;
  v23 = ((v5 ^ 0x15E8FFF7) - 34560 + ((2 * v5) & 0x2BD1FFEE)) ^ v10;
  v30 = 1675139122 - v10;
  v14[0] = v8;
  v14[1] = v7;
  v28 = v10 ^ 0x38;
  v29 = v4;
  v11 = a1 - 1137655495;
  v24 = v9 ^ v10;
  v19 = v3;
  v20 = 0;
  v15 = v11 + v10 + 1839;
  v16 = (v10 + 367556855);
  v12 = (uint64_t (*)(_QWORD *))(qword_1E2FD4D00[v11] - 12);
  v21 = 0;
  v22 = 0;
  result = v12(v14);
  *(_DWORD *)v2 = v26 - 101372955;
  return result;
}

void NfcRKVnxuKZy04KWbdFu71Ou()
{
  unint64_t v0;
  char v1;
  _BYTE v2[216];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EE29F0A8 ^ (unint64_t)&v1 ^ qword_1EE29F038;
  qword_1EE29F0A8 = 151185677 * (v0 + 0x442F1C6725233D1DLL);
  qword_1EE29F038 = 151185677 * (v0 ^ 0xBBD0E398DADCC2E3);
  sub_1931EEEAC(v2, 0, 0xC0uLL);
  __asm { BR              X12 }
}

uint64_t sub_193287830()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = (v2 + v3 + 884);
  v6 = (v2 + v3 - 1031);
  v7 = ((((v0 ^ 0xFA7EF806B8CF652ELL) + 0x670E7858A95685ACLL) ^ ((v0 ^ 0xA7D14D67F3FCCFADLL) + 0x3AA1CD39E2652F29) ^ ((v0 ^ v5 ^ 0x64FAA9EF5CCD7EBLL) - 0x64C0D53F1BAACF00))
      + v4) ^ v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((6068 * (((v7 & v6) >> (__clz(v7 | 1) ^ 0x3Fu)) & 1)) ^ v5))
                            - 4))();
}

uint64_t sub_19328790C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  _BOOL4 v14;
  unint64_t v15;
  int v16;
  _BOOL4 v17;

  v14 = v8 < v12;
  v15 = ((((196 * (v10 ^ 0x793u)) ^ 0x68F56B2E46D4171ALL) + (v9 ^ 0xF585EB70574DF614)) ^ ((v9 ^ 0xCF7E148948A6577CLL)
                                                                                          + 0x520E94D7593FB7FALL) ^ ((((v10 ^ (v13 + 1391)) + 0x611BE005F87B9272) ^ v9) - 0x3949FA74F72C4EBLL))
      + a8;
  v16 = v14 ^ (v15 < v12);
  v17 = v15 < v8;
  if (!v16)
    v14 = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((2805 * v14) ^ v10)) - 4))();
}

void sub_1932879FC()
{
  JUMPOUT(0x1932876D8);
}

uint64_t sub_193287A80()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((5000
                                          * ((((v0 ^ 0xFD5093F142CACADFLL) + 0x602013AF53532A5BLL) ^ ((v0 ^ 0x4E86928FE50EFD39) - 0x2C09ED2E0B68E243) ^ ((((v2 + v3 - 722) - 0x17C9E17EE6C4B42CLL) ^ v0) + 0x75469EDF08A2AD9BLL))
                                           + v4 < 0x16)) ^ (v2 + v3 - 409)))
                            - 4))();
}

void sub_193287B48()
{
  JUMPOUT(0x1932876D8);
}

uint64_t sub_193287B88()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = (((v0 ^ 0x3C064D240ABFC623) - 0x5E893285E4D9D959) ^ ((v0 ^ 0xA8D23FD8334E0DCBLL) + 0x35A2BF8622D7ED4FLL) ^ ((v0 ^ 0xCF346D03870EB111) + 0x5244ED5D96975195))
     + v4 < 0x16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v5 | (32 * v5)) ^ (v2 + v3 + 884))) - 4))();
}

void sub_193287C44()
{
  JUMPOUT(0x193287668);
}

uint64_t sub_193287C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v3 + v4 - 445) ^ (4082 * (v0 == v2))))
                            - (v3 + v4 + 2660)
                            + 3701))();
}

uint64_t sub_193287CDC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v0 != ((v1 - 1475266151) | 0x880105u) + 0x396F605DA8001C64)
                                          * (((v1 - 3137) | 0x20) - 578)) ^ v1))
                            - 4))();
}

uint64_t sub_193287D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  char *v39;

  v38 = (uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * v36) - 12);
  v39 = &a36 + a6 + 0x78FEDF32ED318A29;
  *v39 = 0;
  v39[1] = 0;
  v39[2] = 0;
  v39[3] = 0;
  v39[4] = 0;
  v39[5] = 0;
  v39[6] = 0;
  v39[7] = 0;
  return v38();
}

void sub_193288224()
{
  JUMPOUT(0x19328815CLL);
}

uint64_t sub_193288244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(void))
{
  return a17();
}

uint64_t sub_19328824C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  return a10();
}

uint64_t sub_193288254()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v3 + v2) ^ (3315 * v0)))
                            - ((v3 + v2 - 406) ^ 0x28FLL)))();
}

void sub_193288288()
{
  JUMPOUT(0x193287600);
}

uint64_t sub_193288374()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v3 + v2) ^ (269 * v0))) - 8))();
}

void sub_193288390()
{
  JUMPOUT(0x1932875F8);
}

uint64_t sub_193288418()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3728 * v0) ^ (v1 + v3))) - ((v1 + v3 - 1045) | 0x415u) + 1045))();
}

uint64_t sub_193288444@<X0>(int a1@<W8>)
{
  int v1;

  return v1 ^ 0x89BABA88 ^ ((a1 - 1610023705) | 0x890481B) ^ 0x71BA9614;
}

uint64_t sub_1932884B4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 ^ (1239927961 * ((a1 & 0xD7DC1790 | ~(a1 | 0xD7DC1790)) ^ 0xCF4F137F));
  return ((uint64_t (*)(void))(*(_QWORD *)(qword_1E2FD4D00[v1 ^ 0x531]
                                        - 8
                                        + 8
                                        * ((55
                                          * (((*(_DWORD *)(*(_QWORD *)(a1 + 8) + 20) == 1300) ^ (v1 - 38)) & 1)) ^ v1))
                            - (v1 - 1308)
                            + 4294967291))();
}

uint64_t sub_193288558@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;

  v3 = a2 - 8;
  v4 = a2 - 1;
  if (v2 == 71)
    v4 = v3;
  *(_DWORD *)(result + 4) = v4;
  return result;
}

void sub_193288748()
{
  uint64_t v0;

  v0 = MEMORY[0x1E0C80A78]();
  __asm { BR              X12 }
}

uint64_t sub_193288844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;

  *(_QWORD *)(v14 - 200) = 0;
  v15 = 1624863733
      * ((2 * ((v14 - 224) & 0x1707DEB6350D3CB8) - (v14 - 224) - 0x1707DEB6350D3CBFLL) ^ 0xD3172F56F8643979);
  *(_DWORD *)(v14 - 152) = ((v9 ^ 0xDFFB79FF) + 904724216 + ((2 * v9) & 0xBFF6F3FE)) ^ v15;
  *(_DWORD *)(v14 - 104) = 1675139122 - v15;
  *(_DWORD *)(v14 - 208) = v8 + v15 + v12 + 1624;
  *(_DWORD *)(v14 - 204) = v15 + 367556855;
  *(_QWORD *)(v14 - 144) = (0x653EC904EC380E05 * v6 + 0x43FE5CE22EA4989ALL) ^ v15;
  *(_BYTE *)(v13 + 1553) = (-11 * ((2 * ((v14 + 32) & 0xB8) - (v14 + 32) + 65) ^ 0x79)) ^ 0x38;
  *(_QWORD *)(v14 - 184) = a5;
  *(_QWORD *)(v14 - 176) = 0;
  *(_QWORD *)(v14 - 168) = a1;
  *(_QWORD *)(v14 - 160) = 0;
  *(_QWORD *)(v14 - 224) = v10;
  *(_QWORD *)(v14 - 216) = a2;
  *(_QWORD *)(v14 - 128) = v5;
  *(_QWORD *)(v14 - 112) = a4;
  *(_DWORD *)(v14 - 136) = ((a3 ^ 0x95FFF9FF) + 2145943288 + ((2 * a3) & 0x2BFFF3FE)) ^ v15;
  *(_DWORD *)(v14 - 192) = v15 + 2043506139;
  result = v7(v14 - 224);
  *(_DWORD *)(v11 + 76) = *(_DWORD *)(v14 - 132) - 101372955;
  return result;
}

void fpfs_StopPlayingItem_cold_1()
{
  __assert_rtn("fpfs_finishGaplessStart", "FigPlayer_Stream.m", 39677, "item != pPlayer->currentItem");
}

void FigMediaServerStart_cold_1(int a1)
{
  _DWORD v1[2];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  v1[0] = 67109120;
  v1[1] = a1;
  _os_log_error_impl(&dword_1928EC000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "failed to register startup work with watchdog. err = %d", (uint8_t *)v1, 8u);
}

void cvbufferBBufSourceLock_cold_1()
{
  __assert_rtn("cvbufferBBufSourceLock", "SampleGeneratorForFormatReader.c", 1792, "sizeInBytes <= (rowbytes*height)");
}

void figSampleGeneratorBatch_Commit_cold_1()
{
  OUTLINED_FUNCTION_0();
  __break(1u);
}

void __getTUCallCenterClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;

  v2 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TelephonyUtilitiesLibrary(void)"), CFSTR("FigShareAndAirPlayHelperLocal.m"), 48, CFSTR("%s"), *a1);
  __break(1u);
}

void __getTUCallCenterClass_block_invoke_cold_2()
{
  void *v0;

  v0 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUCallCenterClass(void)_block_invoke"), CFSTR("FigShareAndAirPlayHelperLocal.m"), 50, CFSTR("Unable to find class %s"), "TUCallCenter");
  __break(1u);
}

void __getTRINamespaceClass_block_invoke_cold_1()
{
  void *v0;

  v0 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTRINamespaceClass(void)_block_invoke"), CFSTR("FigTrial.m"), 68, CFSTR("Unable to find class %s"), "TRINamespace");
  __break(1u);
}

void TrialLibrary_cold_1(_QWORD *a1)
{
  void *v2;

  v2 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TrialLibrary(void)"), CFSTR("FigTrial.m"), 64, CFSTR("%s"), *a1);
  __break(1u);
}

void __getTRIClientClass_block_invoke_cold_1()
{
  void *v0;

  v0 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTRIClientClass(void)_block_invoke"), CFSTR("FigTrial.m"), 67, CFSTR("Unable to find class %s"), "TRIClient");
  __break(1u);
}

void __getMLServiceClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;

  v2 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *MediaMLServicesLibrary(void)"), CFSTR("FigMLBandwidthPredictor.m"), 124, CFSTR("%s"), *a1);
  __break(1u);
}

void __getMLServiceClass_block_invoke_cold_2()
{
  void *v0;

  v0 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMLServiceClass(void)_block_invoke"), CFSTR("FigMLBandwidthPredictor.m"), 125, CFSTR("Unable to find class %s"), "MLService");
  __break(1u);
}

void __getPAAccessLoggerClass_block_invoke_cold_1()
{
  void *v0;

  v0 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPAAccessLoggerClass(void)_block_invoke"), CFSTR("AssetPALoggingHelper.m"), 43, CFSTR("Unable to find class %s"), "PAAccessLogger");
  __break(1u);
}

void PrivacyAccountingLibrary_cold_1(_QWORD *a1)
{
  void *v2;

  v2 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PrivacyAccountingLibrary(void)"), CFSTR("AssetPALoggingHelper.m"), 38, CFSTR("%s"), *a1);
  __break(1u);
}

void __getPATCCAccessClass_block_invoke_cold_1()
{
  void *v0;

  v0 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPATCCAccessClass(void)_block_invoke"), CFSTR("AssetPALoggingHelper.m"), 40, CFSTR("Unable to find class %s"), "PATCCAccess");
  __break(1u);
}

void __getPAApplicationClass_block_invoke_cold_1()
{
  void *v0;

  v0 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPAApplicationClass(void)_block_invoke"), CFSTR("AssetPALoggingHelper.m"), 46, CFSTR("Unable to find class %s"), "PAApplication");
  __break(1u);
}

void FigReportingAgentOfflineAirPlayCreate_cold_1()
{
  FigSignalErrorAt();
  __break(1u);
}

void figStreamingCacheInvalidate_cold_1()
{
  __assert_rtn("stream_FreeEntry", "FigStreamingCache.c", 1259, "RB_EMPTY(&streamEntry->segmentStartTimeList)");
}

void figStreamingCacheInvalidate_cold_2()
{
  __assert_rtn("stream_FreeEntry", "FigStreamingCache.c", 1258, "RB_EMPTY(&streamEntry->segmentOffsetList)");
}

uint64_t AQOfflineMixerConnectAudioQueue()
{
  return MEMORY[0x1E0C91DC0]();
}

uint64_t AQOfflineMixerDisconnectAudioQueue()
{
  return MEMORY[0x1E0C91DC8]();
}

uint64_t AQOfflineMixerDispose()
{
  return MEMORY[0x1E0C91DD0]();
}

uint64_t AQOfflineMixerGetProperty()
{
  return MEMORY[0x1E0C91DD8]();
}

uint64_t AQOfflineMixerGetPropertySize()
{
  return MEMORY[0x1E0C91DE0]();
}

uint64_t AQOfflineMixerNew()
{
  return MEMORY[0x1E0C91DE8]();
}

uint64_t AQOfflineMixerRender()
{
  return MEMORY[0x1E0C91DF0]();
}

uint64_t AQOfflineMixerReset()
{
  return MEMORY[0x1E0C91DF8]();
}

uint64_t AQOfflineMixerSetProperty()
{
  return MEMORY[0x1E0C91E00]();
}

uint64_t ATAudioProcessingNodeCancelScheduledParameters()
{
  return MEMORY[0x1E0C91E08]();
}

uint64_t ATAudioProcessingNodeDispose()
{
  return MEMORY[0x1E0C91E10]();
}

uint64_t ATAudioProcessingNodeInstantiate()
{
  return MEMORY[0x1E0C91E18]();
}

uint64_t ATAudioProcessingNodeScheduleParameters()
{
  return MEMORY[0x1E0C91E20]();
}

uint64_t ATAudioProcessingNodeSetParameter()
{
  return MEMORY[0x1E0C91E28]();
}

uint64_t ATAudioProcessingNodeSetProperty()
{
  return MEMORY[0x1E0C91E30]();
}

AudioComponent AudioComponentFindNext(AudioComponent inComponent, const AudioComponentDescription *inDesc)
{
  return (AudioComponent)MEMORY[0x1E0C91E78](inComponent, inDesc);
}

OSStatus AudioComponentInstanceDispose(AudioComponentInstance inInstance)
{
  return MEMORY[0x1E0C91E88](inInstance);
}

OSStatus AudioComponentInstanceNew(AudioComponent inComponent, AudioComponentInstance *outInstance)
{
  return MEMORY[0x1E0C91E90](inComponent, outInstance);
}

uint64_t AudioConverterAcquireHardwareCodec()
{
  return MEMORY[0x1E0C91EA0]();
}

OSStatus AudioConverterDispose(AudioConverterRef inAudioConverter)
{
  return MEMORY[0x1E0C91EB8](inAudioConverter);
}

OSStatus AudioConverterFillComplexBuffer(AudioConverterRef inAudioConverter, AudioConverterComplexInputDataProc inInputDataProc, void *inInputDataProcUserData, UInt32 *ioOutputDataPacketSize, AudioBufferList *outOutputData, AudioStreamPacketDescription *outPacketDescription)
{
  return MEMORY[0x1E0C91EC0](inAudioConverter, inInputDataProc, inInputDataProcUserData, ioOutputDataPacketSize, outOutputData, outPacketDescription);
}

uint64_t AudioConverterFillComplexBufferWithPacketDependencyInfo()
{
  return MEMORY[0x1E0C91ED0]();
}

OSStatus AudioConverterGetProperty(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return MEMORY[0x1E0C91ED8](inAudioConverter, *(_QWORD *)&inPropertyID, ioPropertyDataSize, outPropertyData);
}

OSStatus AudioConverterGetPropertyInfo(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 *outSize, Boolean *outWritable)
{
  return MEMORY[0x1E0C91EE0](inAudioConverter, *(_QWORD *)&inPropertyID, outSize, outWritable);
}

OSStatus AudioConverterNew(const AudioStreamBasicDescription *inSourceFormat, const AudioStreamBasicDescription *inDestinationFormat, AudioConverterRef *outAudioConverter)
{
  return MEMORY[0x1E0C91EF8](inSourceFormat, inDestinationFormat, outAudioConverter);
}

OSStatus AudioConverterNewSpecific(const AudioStreamBasicDescription *inSourceFormat, const AudioStreamBasicDescription *inDestinationFormat, UInt32 inNumberClassDescriptions, const AudioClassDescription *inClassDescriptions, AudioConverterRef *outAudioConverter)
{
  return MEMORY[0x1E0C91F00](inSourceFormat, inDestinationFormat, *(_QWORD *)&inNumberClassDescriptions, inClassDescriptions, outAudioConverter);
}

uint64_t AudioConverterReleaseHardwareCodec()
{
  return MEMORY[0x1E0C91F10]();
}

OSStatus AudioConverterReset(AudioConverterRef inAudioConverter)
{
  return MEMORY[0x1E0C91F18](inAudioConverter);
}

OSStatus AudioConverterSetProperty(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return MEMORY[0x1E0C91F20](inAudioConverter, *(_QWORD *)&inPropertyID, *(_QWORD *)&inPropertyDataSize, inPropertyData);
}

OSStatus AudioFileClose(AudioFileID inAudioFile)
{
  return MEMORY[0x1E0C91F28](inAudioFile);
}

OSStatus AudioFileGetGlobalInfo(AudioFilePropertyID inPropertyID, UInt32 inSpecifierSize, void *inSpecifier, UInt32 *ioDataSize, void *outPropertyData)
{
  return MEMORY[0x1E0C91F38](*(_QWORD *)&inPropertyID, *(_QWORD *)&inSpecifierSize, inSpecifier, ioDataSize, outPropertyData);
}

OSStatus AudioFileGetGlobalInfoSize(AudioFilePropertyID inPropertyID, UInt32 inSpecifierSize, void *inSpecifier, UInt32 *outDataSize)
{
  return MEMORY[0x1E0C91F40](*(_QWORD *)&inPropertyID, *(_QWORD *)&inSpecifierSize, inSpecifier, outDataSize);
}

OSStatus AudioFileGetProperty(AudioFileID inAudioFile, AudioFilePropertyID inPropertyID, UInt32 *ioDataSize, void *outPropertyData)
{
  return MEMORY[0x1E0C91F48](inAudioFile, *(_QWORD *)&inPropertyID, ioDataSize, outPropertyData);
}

OSStatus AudioFileGetPropertyInfo(AudioFileID inAudioFile, AudioFilePropertyID inPropertyID, UInt32 *outDataSize, UInt32 *isWritable)
{
  return MEMORY[0x1E0C91F50](inAudioFile, *(_QWORD *)&inPropertyID, outDataSize, isWritable);
}

OSStatus AudioFileInitializeWithCallbacks(void *inClientData, AudioFile_ReadProc inReadFunc, AudioFile_WriteProc inWriteFunc, AudioFile_GetSizeProc inGetSizeFunc, AudioFile_SetSizeProc inSetSizeFunc, AudioFileTypeID inFileType, const AudioStreamBasicDescription *inFormat, AudioFileFlags inFlags, AudioFileID *outAudioFile)
{
  return MEMORY[0x1E0C91F58](inClientData, inReadFunc, inWriteFunc, inGetSizeFunc, inSetSizeFunc, *(_QWORD *)&inFileType, inFormat, *(_QWORD *)&inFlags);
}

OSStatus AudioFileOpenWithCallbacks(void *inClientData, AudioFile_ReadProc inReadFunc, AudioFile_WriteProc inWriteFunc, AudioFile_GetSizeProc inGetSizeFunc, AudioFile_SetSizeProc inSetSizeFunc, AudioFileTypeID inFileTypeHint, AudioFileID *outAudioFile)
{
  return MEMORY[0x1E0C91F68](inClientData, inReadFunc, inWriteFunc, inGetSizeFunc, inSetSizeFunc, *(_QWORD *)&inFileTypeHint, outAudioFile);
}

OSStatus AudioFileReadPacketData(AudioFileID inAudioFile, Boolean inUseCache, UInt32 *ioNumBytes, AudioStreamPacketDescription *outPacketDescriptions, SInt64 inStartingPacket, UInt32 *ioNumPackets, void *outBuffer)
{
  return MEMORY[0x1E0C91F78](inAudioFile, inUseCache, ioNumBytes, outPacketDescriptions, inStartingPacket, ioNumPackets, outBuffer);
}

OSStatus AudioFileSetProperty(AudioFileID inAudioFile, AudioFilePropertyID inPropertyID, UInt32 inDataSize, const void *inPropertyData)
{
  return MEMORY[0x1E0C91F80](inAudioFile, *(_QWORD *)&inPropertyID, *(_QWORD *)&inDataSize, inPropertyData);
}

OSStatus AudioFileStreamClose(AudioFileStreamID inAudioFileStream)
{
  return MEMORY[0x1E0C91F88](inAudioFileStream);
}

OSStatus AudioFileStreamGetProperty(AudioFileStreamID inAudioFileStream, AudioFileStreamPropertyID inPropertyID, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return MEMORY[0x1E0C91F90](inAudioFileStream, *(_QWORD *)&inPropertyID, ioPropertyDataSize, outPropertyData);
}

OSStatus AudioFileStreamGetPropertyInfo(AudioFileStreamID inAudioFileStream, AudioFileStreamPropertyID inPropertyID, UInt32 *outPropertyDataSize, Boolean *outWritable)
{
  return MEMORY[0x1E0C91F98](inAudioFileStream, *(_QWORD *)&inPropertyID, outPropertyDataSize, outWritable);
}

OSStatus AudioFileStreamOpen(void *inClientData, AudioFileStream_PropertyListenerProc inPropertyListenerProc, AudioFileStream_PacketsProc inPacketsProc, AudioFileTypeID inFileTypeHint, AudioFileStreamID *outAudioFileStream)
{
  return MEMORY[0x1E0C91FA0](inClientData, inPropertyListenerProc, inPacketsProc, *(_QWORD *)&inFileTypeHint, outAudioFileStream);
}

OSStatus AudioFileStreamParseBytes(AudioFileStreamID inAudioFileStream, UInt32 inDataByteSize, const void *inData, AudioFileStreamParseFlags inFlags)
{
  return MEMORY[0x1E0C91FA8](inAudioFileStream, *(_QWORD *)&inDataByteSize, inData, *(_QWORD *)&inFlags);
}

OSStatus AudioFileStreamSeek(AudioFileStreamID inAudioFileStream, SInt64 inPacketOffset, SInt64 *outDataByteOffset, AudioFileStreamSeekFlags *ioFlags)
{
  return MEMORY[0x1E0C91FB0](inAudioFileStream, inPacketOffset, outDataByteOffset, ioFlags);
}

OSStatus AudioFileStreamSetProperty(AudioFileStreamID inAudioFileStream, AudioFileStreamPropertyID inPropertyID, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return MEMORY[0x1E0C91FB8](inAudioFileStream, *(_QWORD *)&inPropertyID, *(_QWORD *)&inPropertyDataSize, inPropertyData);
}

OSStatus AudioFileWritePackets(AudioFileID inAudioFile, Boolean inUseCache, UInt32 inNumBytes, const AudioStreamPacketDescription *inPacketDescriptions, SInt64 inStartingPacket, UInt32 *ioNumPackets, const void *inBuffer)
{
  return MEMORY[0x1E0C91FC0](inAudioFile, inUseCache, *(_QWORD *)&inNumBytes, inPacketDescriptions, inStartingPacket, ioNumPackets, inBuffer);
}

OSStatus AudioFormatGetProperty(AudioFormatPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return MEMORY[0x1E0C91FC8](*(_QWORD *)&inPropertyID, *(_QWORD *)&inSpecifierSize, inSpecifier, ioPropertyDataSize, outPropertyData);
}

OSStatus AudioFormatGetPropertyInfo(AudioFormatPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 *outPropertyDataSize)
{
  return MEMORY[0x1E0C91FD0](*(_QWORD *)&inPropertyID, *(_QWORD *)&inSpecifierSize, inSpecifier, outPropertyDataSize);
}

uint64_t AudioGetSessionSpatialPreferencesForContentType()
{
  return MEMORY[0x1E0C91FD8]();
}

OSStatus AudioObjectGetPropertyData(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, UInt32 inQualifierDataSize, const void *inQualifierData, UInt32 *ioDataSize, void *outData)
{
  return MEMORY[0x1E0C975D0](*(_QWORD *)&inObjectID, inAddress, *(_QWORD *)&inQualifierDataSize, inQualifierData, ioDataSize, outData);
}

OSStatus AudioOutputUnitStart(AudioUnit ci)
{
  return MEMORY[0x1E0C91FE0](ci);
}

OSStatus AudioOutputUnitStop(AudioUnit ci)
{
  return MEMORY[0x1E0C91FE8](ci);
}

OSStatus AudioQueueAddPropertyListener(AudioQueueRef inAQ, AudioQueuePropertyID inID, AudioQueuePropertyListenerProc inProc, void *inUserData)
{
  return MEMORY[0x1E0C91FF0](inAQ, *(_QWORD *)&inID, inProc, inUserData);
}

OSStatus AudioQueueAllocateBuffer(AudioQueueRef inAQ, UInt32 inBufferByteSize, AudioQueueBufferRef *outBuffer)
{
  return MEMORY[0x1E0C91FF8](inAQ, *(_QWORD *)&inBufferByteSize, outBuffer);
}

uint64_t AudioQueueAllocateBufferWithMemory()
{
  return MEMORY[0x1E0C92000]();
}

uint64_t AudioQueueConvertToScaledSampleTime()
{
  return MEMORY[0x1E0C92010]();
}

uint64_t AudioQueueConvertToUnscaledSampleTime()
{
  return MEMORY[0x1E0C92018]();
}

OSStatus AudioQueueDeviceGetCurrentTime(AudioQueueRef inAQ, AudioTimeStamp *outTimeStamp)
{
  return MEMORY[0x1E0C92020](inAQ, outTimeStamp);
}

OSStatus AudioQueueDeviceTranslateTime(AudioQueueRef inAQ, const AudioTimeStamp *inTime, AudioTimeStamp *outTime)
{
  return MEMORY[0x1E0C92028](inAQ, inTime, outTime);
}

OSStatus AudioQueueDispose(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x1E0C92030](inAQ, inImmediate);
}

OSStatus AudioQueueEnqueueBufferWithParameters(AudioQueueRef inAQ, AudioQueueBufferRef inBuffer, UInt32 inNumPacketDescs, const AudioStreamPacketDescription *inPacketDescs, UInt32 inTrimFramesAtStart, UInt32 inTrimFramesAtEnd, UInt32 inNumParamValues, const AudioQueueParameterEvent *inParamValues, const AudioTimeStamp *inStartTime, AudioTimeStamp *outActualStartTime)
{
  return MEMORY[0x1E0C92040](inAQ, inBuffer, *(_QWORD *)&inNumPacketDescs, inPacketDescs, *(_QWORD *)&inTrimFramesAtStart, *(_QWORD *)&inTrimFramesAtEnd, *(_QWORD *)&inNumParamValues, inParamValues);
}

OSStatus AudioQueueFlush(AudioQueueRef inAQ)
{
  return MEMORY[0x1E0C92050](inAQ);
}

OSStatus AudioQueueFreeBuffer(AudioQueueRef inAQ, AudioQueueBufferRef inBuffer)
{
  return MEMORY[0x1E0C92058](inAQ, inBuffer);
}

OSStatus AudioQueueGetCurrentTime(AudioQueueRef inAQ, AudioQueueTimelineRef inTimeline, AudioTimeStamp *outTimeStamp, Boolean *outTimelineDiscontinuity)
{
  return MEMORY[0x1E0C92060](inAQ, inTimeline, outTimeStamp, outTimelineDiscontinuity);
}

OSStatus AudioQueueGetParameter(AudioQueueRef inAQ, AudioQueueParameterID inParamID, AudioQueueParameterValue *outValue)
{
  return MEMORY[0x1E0C92068](inAQ, *(_QWORD *)&inParamID, outValue);
}

OSStatus AudioQueueGetProperty(AudioQueueRef inAQ, AudioQueuePropertyID inID, void *outData, UInt32 *ioDataSize)
{
  return MEMORY[0x1E0C92070](inAQ, *(_QWORD *)&inID, outData, ioDataSize);
}

OSStatus AudioQueueNewOutput(const AudioStreamBasicDescription *inFormat, AudioQueueOutputCallback inCallbackProc, void *inUserData, CFRunLoopRef inCallbackRunLoop, CFStringRef inCallbackRunLoopMode, UInt32 inFlags, AudioQueueRef *outAQ)
{
  return MEMORY[0x1E0C92098](inFormat, inCallbackProc, inUserData, inCallbackRunLoop, inCallbackRunLoopMode, *(_QWORD *)&inFlags, outAQ);
}

OSStatus AudioQueuePause(AudioQueueRef inAQ)
{
  return MEMORY[0x1E0C920A8](inAQ);
}

OSStatus AudioQueuePrime(AudioQueueRef inAQ, UInt32 inNumberOfFramesToPrepare, UInt32 *outNumberOfFramesPrepared)
{
  return MEMORY[0x1E0C920B0](inAQ, *(_QWORD *)&inNumberOfFramesToPrepare, outNumberOfFramesPrepared);
}

OSStatus AudioQueueProcessingTapDispose(AudioQueueProcessingTapRef inAQTap)
{
  return MEMORY[0x1E0C920B8](inAQTap);
}

uint64_t AudioQueueProcessingTapGetQueueTime_CM2()
{
  return MEMORY[0x1E0C920C0]();
}

OSStatus AudioQueueProcessingTapGetSourceAudio(AudioQueueProcessingTapRef inAQTap, UInt32 inNumberFrames, AudioTimeStamp *ioTimeStamp, AudioQueueProcessingTapFlags *outFlags, UInt32 *outNumberFrames, AudioBufferList *ioData)
{
  return MEMORY[0x1E0C920C8](inAQTap, *(_QWORD *)&inNumberFrames, ioTimeStamp, outFlags, outNumberFrames, ioData);
}

uint64_t AudioQueueProcessingTapNew_CMClient()
{
  return MEMORY[0x1E0C920D0]();
}

uint64_t AudioQueueProcessingTapNew_CMServer()
{
  return MEMORY[0x1E0C920D8]();
}

OSStatus AudioQueueRemovePropertyListener(AudioQueueRef inAQ, AudioQueuePropertyID inID, AudioQueuePropertyListenerProc inProc, void *inUserData)
{
  return MEMORY[0x1E0C920E0](inAQ, *(_QWORD *)&inID, inProc, inUserData);
}

OSStatus AudioQueueReset(AudioQueueRef inAQ)
{
  return MEMORY[0x1E0C920E8](inAQ);
}

uint64_t AudioQueueScheduleParameters()
{
  return MEMORY[0x1E0C920F0]();
}

OSStatus AudioQueueSetParameter(AudioQueueRef inAQ, AudioQueueParameterID inParamID, AudioQueueParameterValue inValue)
{
  return MEMORY[0x1E0C920F8](inAQ, *(_QWORD *)&inParamID, inValue);
}

OSStatus AudioQueueSetProperty(AudioQueueRef inAQ, AudioQueuePropertyID inID, const void *inData, UInt32 inDataSize)
{
  return MEMORY[0x1E0C92100](inAQ, *(_QWORD *)&inID, inData, *(_QWORD *)&inDataSize);
}

OSStatus AudioQueueStart(AudioQueueRef inAQ, const AudioTimeStamp *inStartTime)
{
  return MEMORY[0x1E0C92108](inAQ, inStartTime);
}

uint64_t AudioQueueStartWithFlags()
{
  return MEMORY[0x1E0C92110]();
}

OSStatus AudioQueueStop(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x1E0C92118](inAQ, inImmediate);
}

uint64_t AudioSessionCopyCMSessionForSessionID()
{
  return MEMORY[0x1E0C92190]();
}

uint64_t AudioSessionCreateForPID()
{
  return MEMORY[0x1E0C92198]();
}

uint64_t AudioSessionGetPrimaryAudioSessionIDForAuditToken()
{
  return MEMORY[0x1E0C921A8]();
}

OSStatus AudioUnitGetProperty(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitScope inScope, AudioUnitElement inElement, void *outData, UInt32 *ioDataSize)
{
  return MEMORY[0x1E0C921E0](inUnit, *(_QWORD *)&inID, *(_QWORD *)&inScope, *(_QWORD *)&inElement, outData, ioDataSize);
}

OSStatus AudioUnitGetPropertyInfo(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitScope inScope, AudioUnitElement inElement, UInt32 *outDataSize, Boolean *outWritable)
{
  return MEMORY[0x1E0C921E8](inUnit, *(_QWORD *)&inID, *(_QWORD *)&inScope, *(_QWORD *)&inElement, outDataSize, outWritable);
}

OSStatus AudioUnitInitialize(AudioUnit inUnit)
{
  return MEMORY[0x1E0C921F0](inUnit);
}

OSStatus AudioUnitSetProperty(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitScope inScope, AudioUnitElement inElement, const void *inData, UInt32 inDataSize)
{
  return MEMORY[0x1E0C92220](inUnit, *(_QWORD *)&inID, *(_QWORD *)&inScope, *(_QWORD *)&inElement, inData, *(_QWORD *)&inDataSize);
}

OSStatus AudioUnitUninitialize(AudioUnit inUnit)
{
  return MEMORY[0x1E0C92228](inUnit);
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CD2388]();
  return result;
}

uint64_t CAImageQueueCollect()
{
  return MEMORY[0x1E0CD23E8]();
}

uint64_t CAImageQueueConsumeUnconsumedInRange()
{
  return MEMORY[0x1E0CD23F0]();
}

uint64_t CAImageQueueCopyDisplayedIOSurface()
{
  return MEMORY[0x1E0CD23F8]();
}

uint64_t CAImageQueueCreate()
{
  return MEMORY[0x1E0CD2400]();
}

uint64_t CAImageQueueDeleteBuffer()
{
  return MEMORY[0x1E0CD2408]();
}

uint64_t CAImageQueueFlush()
{
  return MEMORY[0x1E0CD2410]();
}

uint64_t CAImageQueueGetDisplayedPixelCount()
{
  return MEMORY[0x1E0CD2420]();
}

uint64_t CAImageQueueGetFlags()
{
  return MEMORY[0x1E0CD2428]();
}

uint64_t CAImageQueueGetHeight()
{
  return MEMORY[0x1E0CD2430]();
}

uint64_t CAImageQueueGetIdentifier()
{
  return MEMORY[0x1E0CD2438]();
}

uint64_t CAImageQueueGetLastUpdateHostTime()
{
  return MEMORY[0x1E0CD2440]();
}

uint64_t CAImageQueueGetReleasedImageInfo()
{
  return MEMORY[0x1E0CD2448]();
}

uint64_t CAImageQueueGetTimes()
{
  return MEMORY[0x1E0CD2450]();
}

uint64_t CAImageQueueGetTypeID()
{
  return MEMORY[0x1E0CD2458]();
}

uint64_t CAImageQueueGetUnconsumedImageCount()
{
  return MEMORY[0x1E0CD2460]();
}

uint64_t CAImageQueueGetVBLInfo()
{
  return MEMORY[0x1E0CD2468]();
}

uint64_t CAImageQueueGetWidth()
{
  return MEMORY[0x1E0CD2470]();
}

uint64_t CAImageQueueInsertImage()
{
  return MEMORY[0x1E0CD2478]();
}

uint64_t CAImageQueueInsertImageWithRotation()
{
  return MEMORY[0x1E0CD2480]();
}

uint64_t CAImageQueueRegisterBuffer()
{
  return MEMORY[0x1E0CD2490]();
}

uint64_t CAImageQueueRegisterIOSurfaceBuffer()
{
  return MEMORY[0x1E0CD24A0]();
}

uint64_t CAImageQueueSetEnhancementMode()
{
  return MEMORY[0x1E0CD24A8]();
}

uint64_t CAImageQueueSetFlags()
{
  return MEMORY[0x1E0CD24B0]();
}

uint64_t CAImageQueueSetMediaTimingClamped()
{
  return MEMORY[0x1E0CD24B8]();
}

uint64_t CAImageQueueSetReducedPollingTimeRange()
{
  return MEMORY[0x1E0CD24C0]();
}

uint64_t CAImageQueueSetSize()
{
  return MEMORY[0x1E0CD24C8]();
}

uint64_t CARenderServerGetPort()
{
  return MEMORY[0x1E0CD2588]();
}

uint64_t CARenderServerIsRunning()
{
  return MEMORY[0x1E0CD25A0]();
}

uint64_t CARenderServerShutdown()
{
  return MEMORY[0x1E0CD25D8]();
}

uint64_t CARenderServerStart()
{
  return MEMORY[0x1E0CD25E8]();
}

CGAffineTransform *__cdecl CATransform3DGetAffineTransform(CGAffineTransform *__return_ptr retstr, CATransform3D *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0CD2600](retstr, t);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2640](retstr, sx, sy, sz);
}

uint64_t CAXPCImageQueueCommandForMessage()
{
  return MEMORY[0x1E0CD2690]();
}

uint64_t CAXPCImageQueueCreate()
{
  return MEMORY[0x1E0CD2698]();
}

uint64_t CAXPCImageQueueReceiverCreate()
{
  return MEMORY[0x1E0CD26A0]();
}

uint64_t CAXPCImageQueueReceiverCreateSampleForTime()
{
  return MEMORY[0x1E0CD26A8]();
}

uint64_t CAXPCImageQueueReceiverGetImageCount()
{
  return MEMORY[0x1E0CD26B0]();
}

uint64_t CAXPCImageQueueReceiverProcessMessage()
{
  return MEMORY[0x1E0CD26B8]();
}

uint64_t CAXPCImageQueueReceiverSetDisplayedPixelCount()
{
  return MEMORY[0x1E0CD26C0]();
}

uint64_t CAXPCImageQueueReceiverSetProperty()
{
  return MEMORY[0x1E0CD26C8]();
}

uint64_t CAXPCImageQueueSampleFinish()
{
  return MEMORY[0x1E0CD26D0]();
}

uint64_t CAXPCImageQueueSampleGetIOSurface()
{
  return MEMORY[0x1E0CD26D8]();
}

uint64_t CAXPCImageQueueSampleGetTimestamp()
{
  return MEMORY[0x1E0CD26E0]();
}

CCCryptorStatus CCCryptorCreate(CCOperation op, CCAlgorithm alg, CCOptions options, const void *key, size_t keyLength, const void *iv, CCCryptorRef *cryptorRef)
{
  return MEMORY[0x1E0C80098](*(_QWORD *)&op, *(_QWORD *)&alg, *(_QWORD *)&options, key, keyLength, iv, cryptorRef);
}

CCCryptorStatus CCCryptorCreateWithMode(CCOperation op, CCMode mode, CCAlgorithm alg, CCPadding padding, const void *iv, const void *key, size_t keyLength, const void *tweak, size_t tweakLength, int numRounds, CCModeOptions options, CCCryptorRef *cryptorRef)
{
  return MEMORY[0x1E0C800A0](*(_QWORD *)&op, *(_QWORD *)&mode, *(_QWORD *)&alg, *(_QWORD *)&padding, iv, key, keyLength, tweak);
}

CCCryptorStatus CCCryptorFinal(CCCryptorRef cryptorRef, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return MEMORY[0x1E0C800A8](cryptorRef, dataOut, dataOutAvailable, dataOutMoved);
}

uint64_t CCCryptorGCMFinalize()
{
  return MEMORY[0x1E0C800D0]();
}

uint64_t CCCryptorGCMReset()
{
  return MEMORY[0x1E0C800E8]();
}

uint64_t CCCryptorGCMSetIV()
{
  return MEMORY[0x1E0C800F0]();
}

size_t CCCryptorGetOutputLength(CCCryptorRef cryptorRef, size_t inputLength, BOOL final)
{
  return MEMORY[0x1E0C80100](cryptorRef, inputLength, final);
}

CCCryptorStatus CCCryptorRelease(CCCryptorRef cryptorRef)
{
  return MEMORY[0x1E0C80108](cryptorRef);
}

CCCryptorStatus CCCryptorReset(CCCryptorRef cryptorRef, const void *iv)
{
  return MEMORY[0x1E0C80110](cryptorRef, iv);
}

CCCryptorStatus CCCryptorUpdate(CCCryptorRef cryptorRef, const void *dataIn, size_t dataInLength, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return MEMORY[0x1E0C80118](cryptorRef, dataIn, dataInLength, dataOut, dataOutAvailable, dataOutMoved);
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80328](data, *(_QWORD *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

void *__cdecl CFAllocatorAllocate(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint)
{
  return (void *)MEMORY[0x1E0C97C98](allocator, size, hint);
}

CFAllocatorRef CFAllocatorCreate(CFAllocatorRef allocator, CFAllocatorContext *context)
{
  return (CFAllocatorRef)MEMORY[0x1E0C97CA8](allocator, context);
}

void CFAllocatorDeallocate(CFAllocatorRef allocator, void *ptr)
{
  MEMORY[0x1E0C97CB0](allocator, ptr);
}

CFAllocatorRef CFAllocatorGetDefault(void)
{
  return (CFAllocatorRef)MEMORY[0x1E0C97CC0]();
}

CFTypeID CFAllocatorGetTypeID(void)
{
  return MEMORY[0x1E0C97CD0]();
}

void *__cdecl CFAllocatorReallocate(CFAllocatorRef allocator, void *ptr, CFIndex newsize, CFOptionFlags hint)
{
  return (void *)MEMORY[0x1E0C97CD8](allocator, ptr, newsize, hint);
}

void CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange)
{
  MEMORY[0x1E0C97CE8](theArray, otherArray, otherRange.location, otherRange.length);
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
  MEMORY[0x1E0C97CF8](theArray, value);
}

void CFArrayApplyFunction(CFArrayRef theArray, CFRange range, CFArrayApplierFunction applier, void *context)
{
  MEMORY[0x1E0C97D00](theArray, range.location, range.length, applier, context);
}

CFIndex CFArrayBSearchValues(CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context)
{
  return MEMORY[0x1E0C97D08](theArray, range.location, range.length, value, comparator, context);
}

Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1E0C97D10](theArray, range.location, range.length, value);
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x1E0C97D20](allocator, values, numValues, callBacks);
}

CFArrayRef CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray)
{
  return (CFArrayRef)MEMORY[0x1E0C97D30](allocator, theArray);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D38](allocator, capacity, callBacks);
}

CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D50](allocator, capacity, theArray);
}

void CFArrayExchangeValuesAtIndices(CFMutableArrayRef theArray, CFIndex idx1, CFIndex idx2)
{
  MEMORY[0x1E0C97D58](theArray, idx1, idx2);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

CFIndex CFArrayGetCountOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1E0C97D70](theArray, range.location, range.length, value);
}

CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1E0C97D78](theArray, range.location, range.length, value);
}

CFIndex CFArrayGetLastIndexOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1E0C97D80](theArray, range.location, range.length, value);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x1E0C97D90]();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

void CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values)
{
  MEMORY[0x1E0C97DA8](theArray, range.location, range.length, values);
}

void CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value)
{
  MEMORY[0x1E0C97DB0](theArray, idx, value);
}

void CFArrayRemoveAllValues(CFMutableArrayRef theArray)
{
  MEMORY[0x1E0C97DB8](theArray);
}

void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx)
{
  MEMORY[0x1E0C97DC0](theArray, idx);
}

void CFArrayReplaceValues(CFMutableArrayRef theArray, CFRange range, const void **newValues, CFIndex newCount)
{
  MEMORY[0x1E0C97DC8](theArray, range.location, range.length, newValues, newCount);
}

void CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value)
{
  MEMORY[0x1E0C97DD0](theArray, idx, value);
}

void CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context)
{
  MEMORY[0x1E0C97DE0](theArray, range.location, range.length, comparator, context);
}

void CFAttributedStringBeginEditing(CFMutableAttributedStringRef aStr)
{
  MEMORY[0x1E0C97DE8](aStr);
}

CFAttributedStringRef CFAttributedStringCreate(CFAllocatorRef alloc, CFStringRef str, CFDictionaryRef attributes)
{
  return (CFAttributedStringRef)MEMORY[0x1E0C97DF0](alloc, str, attributes);
}

CFAttributedStringRef CFAttributedStringCreateCopy(CFAllocatorRef alloc, CFAttributedStringRef aStr)
{
  return (CFAttributedStringRef)MEMORY[0x1E0C97DF8](alloc, aStr);
}

CFMutableAttributedStringRef CFAttributedStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength)
{
  return (CFMutableAttributedStringRef)MEMORY[0x1E0C97E00](alloc, maxLength);
}

CFMutableAttributedStringRef CFAttributedStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFAttributedStringRef aStr)
{
  return (CFMutableAttributedStringRef)MEMORY[0x1E0C97E08](alloc, maxLength, aStr);
}

CFAttributedStringRef CFAttributedStringCreateWithSubstring(CFAllocatorRef alloc, CFAttributedStringRef aStr, CFRange range)
{
  return (CFAttributedStringRef)MEMORY[0x1E0C97E10](alloc, aStr, range.location, range.length);
}

void CFAttributedStringEndEditing(CFMutableAttributedStringRef aStr)
{
  MEMORY[0x1E0C97E18](aStr);
}

CFTypeRef CFAttributedStringGetAttribute(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange *effectiveRange)
{
  return (CFTypeRef)MEMORY[0x1E0C97E20](aStr, loc, attrName, effectiveRange);
}

CFTypeRef CFAttributedStringGetAttributeAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange inRange, CFRange *longestEffectiveRange)
{
  return (CFTypeRef)MEMORY[0x1E0C97E28](aStr, loc, attrName, inRange.location, inRange.length, longestEffectiveRange);
}

CFDictionaryRef CFAttributedStringGetAttributes(CFAttributedStringRef aStr, CFIndex loc, CFRange *effectiveRange)
{
  return (CFDictionaryRef)MEMORY[0x1E0C97E30](aStr, loc, effectiveRange);
}

CFDictionaryRef CFAttributedStringGetAttributesAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFRange inRange, CFRange *longestEffectiveRange)
{
  return (CFDictionaryRef)MEMORY[0x1E0C97E38](aStr, loc, inRange.location, inRange.length, longestEffectiveRange);
}

CFIndex CFAttributedStringGetLength(CFAttributedStringRef aStr)
{
  return MEMORY[0x1E0C97E48](aStr);
}

CFStringRef CFAttributedStringGetString(CFAttributedStringRef aStr)
{
  return (CFStringRef)MEMORY[0x1E0C97E50](aStr);
}

CFTypeID CFAttributedStringGetTypeID(void)
{
  return MEMORY[0x1E0C97E58]();
}

void CFAttributedStringRemoveAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName)
{
  MEMORY[0x1E0C97E60](aStr, range.location, range.length, attrName);
}

void CFAttributedStringReplaceAttributedString(CFMutableAttributedStringRef aStr, CFRange range, CFAttributedStringRef replacement)
{
  MEMORY[0x1E0C97E68](aStr, range.location, range.length, replacement);
}

void CFAttributedStringReplaceString(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef replacement)
{
  MEMORY[0x1E0C97E70](aStr, range.location, range.length, replacement);
}

void CFAttributedStringSetAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName, CFTypeRef value)
{
  MEMORY[0x1E0C97E78](aStr, range.location, range.length, attrName, value);
}

void CFAttributedStringSetAttributes(CFMutableAttributedStringRef aStr, CFRange range, CFDictionaryRef replacement, Boolean clearOtherAttributes)
{
  MEMORY[0x1E0C97E80](aStr, range.location, range.length, replacement, clearOtherAttributes);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1E0C97E90](arg);
}

void CFBagAddValue(CFMutableBagRef theBag, const void *value)
{
  MEMORY[0x1E0C97E98](theBag, value);
}

void CFBagApplyFunction(CFBagRef theBag, CFBagApplierFunction applier, void *context)
{
  MEMORY[0x1E0C97EA0](theBag, applier, context);
}

Boolean CFBagContainsValue(CFBagRef theBag, const void *value)
{
  return MEMORY[0x1E0C97EA8](theBag, value);
}

CFMutableBagRef CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks)
{
  return (CFMutableBagRef)MEMORY[0x1E0C97EB8](allocator, capacity, callBacks);
}

CFMutableBagRef CFBagCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBagRef theBag)
{
  return (CFMutableBagRef)MEMORY[0x1E0C97EC0](allocator, capacity, theBag);
}

CFIndex CFBagGetCountOfValue(CFBagRef theBag, const void *value)
{
  return MEMORY[0x1E0C97ED0](theBag, value);
}

void CFBagRemoveAllValues(CFMutableBagRef theBag)
{
  MEMORY[0x1E0C97EF0](theBag);
}

void CFBagRemoveValue(CFMutableBagRef theBag, const void *value)
{
  MEMORY[0x1E0C97EF8](theBag, value);
}

void CFBagSetValue(CFMutableBagRef theBag, const void *value)
{
  MEMORY[0x1E0C97F00](theBag, value);
}

CFMutableBitVectorRef CFBitVectorCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableBitVectorRef)MEMORY[0x1E0C97F68](allocator, capacity);
}

void CFBitVectorGetBits(CFBitVectorRef bv, CFRange range, UInt8 *bytes)
{
  MEMORY[0x1E0C97F80](bv, range.location, range.length, bytes);
}

CFIndex CFBitVectorGetCount(CFBitVectorRef bv)
{
  return MEMORY[0x1E0C97F88](bv);
}

void CFBitVectorSetBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx, CFBit value)
{
  MEMORY[0x1E0C97FB0](bv, idx, *(_QWORD *)&value);
}

void CFBitVectorSetCount(CFMutableBitVectorRef bv, CFIndex count)
{
  MEMORY[0x1E0C97FC0](bv, count);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1E0C97FC8]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFURLRef CFBundleCopyBundleURL(CFBundleRef bundle)
{
  return (CFURLRef)MEMORY[0x1E0C98000](bundle);
}

uint64_t CFBundleCopyLocalizationForLocalizationInfo()
{
  return MEMORY[0x1E0C98038]();
}

CFStringRef CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName)
{
  return (CFStringRef)MEMORY[0x1E0C98050](bundle, key, value, tableName);
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return (CFBundleRef)MEMORY[0x1E0C980D0](allocator, bundleURL);
}

CFBundleRef CFBundleGetBundleWithIdentifier(CFStringRef bundleID)
{
  return (CFBundleRef)MEMORY[0x1E0C980E8](bundleID);
}

CFStringRef CFBundleGetIdentifier(CFBundleRef bundle)
{
  return (CFStringRef)MEMORY[0x1E0C98120](bundle);
}

uint64_t CFBundleGetLocalizationInfoForLocalization()
{
  return MEMORY[0x1E0C98140]();
}

CFBundleRef CFBundleGetMainBundle(void)
{
  return (CFBundleRef)MEMORY[0x1E0C98150]();
}

CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFCharacterSetRef)MEMORY[0x1E0C982E8](alloc, theString);
}

CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier)
{
  return (CFCharacterSetRef)MEMORY[0x1E0C982F0](theSetIdentifier);
}

Boolean CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar)
{
  return MEMORY[0x1E0C98320](theSet, theChar);
}

CFStringRef CFCopyDescription(CFTypeRef cf)
{
  return (CFStringRef)MEMORY[0x1E0C98350](cf);
}

CFStringRef CFCopyTypeIDDescription(CFTypeID type_id)
{
  return (CFStringRef)MEMORY[0x1E0C98380](type_id);
}

void CFDataAppendBytes(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length)
{
  MEMORY[0x1E0C98390](theData, bytes, length);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x1E0C983A0](allocator, bytes, length);
}

CFDataRef CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef theData)
{
  return (CFDataRef)MEMORY[0x1E0C983B0](allocator, theData);
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableDataRef)MEMORY[0x1E0C983B8](allocator, capacity);
}

CFMutableDataRef CFDataCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDataRef theData)
{
  return (CFMutableDataRef)MEMORY[0x1E0C983C0](allocator, capacity, theData);
}

CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator)
{
  return (CFDataRef)MEMORY[0x1E0C983C8](allocator, bytes, length, bytesDeallocator);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x1E0C983E0](theData);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
  MEMORY[0x1E0C983F0](theData, range.location, range.length, buffer);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x1E0C983F8](theData);
}

UInt8 *__cdecl CFDataGetMutableBytePtr(CFMutableDataRef theData)
{
  return (UInt8 *)MEMORY[0x1E0C98408](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x1E0C98418]();
}

void CFDataIncreaseLength(CFMutableDataRef theData, CFIndex extraLength)
{
  MEMORY[0x1E0C98420](theData, extraLength);
}

void CFDataReplaceBytes(CFMutableDataRef theData, CFRange range, const UInt8 *newBytes, CFIndex newLength)
{
  MEMORY[0x1E0C98428](theData, range.location, range.length, newBytes, newLength);
}

void CFDataSetLength(CFMutableDataRef theData, CFIndex length)
{
  MEMORY[0x1E0C98430](theData, length);
}

CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context)
{
  return MEMORY[0x1E0C98440](theDate, otherDate, context);
}

CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at)
{
  return (CFDateRef)MEMORY[0x1E0C98448](allocator, at);
}

CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle)
{
  return (CFDateFormatterRef)MEMORY[0x1E0C98460](allocator, locale, dateStyle, timeStyle);
}

CFDateRef CFDateFormatterCreateDateFromString(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep)
{
  return (CFDateRef)MEMORY[0x1E0C98478](allocator, formatter, string, rangep);
}

CFDateFormatterRef CFDateFormatterCreateISO8601Formatter(CFAllocatorRef allocator, CFISO8601DateFormatOptions formatOptions)
{
  return (CFDateFormatterRef)MEMORY[0x1E0C98480](allocator, formatOptions);
}

CFStringRef CFDateFormatterCreateStringWithAbsoluteTime(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at)
{
  return (CFStringRef)MEMORY[0x1E0C98488](allocator, formatter, at);
}

CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date)
{
  return (CFStringRef)MEMORY[0x1E0C98490](allocator, formatter, date);
}

void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString)
{
  MEMORY[0x1E0C984C0](formatter, formatString);
}

void CFDateFormatterSetProperty(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value)
{
  MEMORY[0x1E0C984C8](formatter, key, value);
}

CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C984D8](theDate);
  return result;
}

CFTimeInterval CFDateGetTimeIntervalSinceDate(CFDateRef theDate, CFDateRef otherDate)
{
  CFTimeInterval result;

  MEMORY[0x1E0C984E0](theDate, otherDate);
  return result;
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x1E0C984E8]();
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98500](theDict, key, value);
}

void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context)
{
  MEMORY[0x1E0C98508](theDict, applier, context);
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x1E0C98518](theDict, key);
}

Boolean CFDictionaryContainsValue(CFDictionaryRef theDict, const void *value)
{
  return MEMORY[0x1E0C98520](theDict, value);
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98530](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98538](allocator, theDict);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98558](allocator, capacity, theDict);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x1E0C98570](theDict);
}

CFIndex CFDictionaryGetCountOfKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x1E0C98578](theDict, key);
}

void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values)
{
  MEMORY[0x1E0C985A0](theDict, keys, values);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1E0C985A8]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value)
{
  return MEMORY[0x1E0C985C8](theDict, key, value);
}

void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict)
{
  MEMORY[0x1E0C985D8](theDict);
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
  MEMORY[0x1E0C985E8](theDict, key);
}

void CFDictionaryReplaceValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C985F8](theDict, key, value);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFStringRef CFErrorCopyDescription(CFErrorRef err)
{
  return (CFStringRef)MEMORY[0x1E0C98630](err);
}

CFStringRef CFErrorCopyFailureReason(CFErrorRef err)
{
  return (CFStringRef)MEMORY[0x1E0C98638](err);
}

CFDictionaryRef CFErrorCopyUserInfo(CFErrorRef err)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98648](err);
}

CFErrorRef CFErrorCreate(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, CFDictionaryRef userInfo)
{
  return (CFErrorRef)MEMORY[0x1E0C98650](allocator, domain, code, userInfo);
}

CFErrorRef CFErrorCreateWithUserInfoKeysAndValues(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, const void *const *userInfoKeys, const void *const *userInfoValues, CFIndex numUserInfoValues)
{
  return (CFErrorRef)MEMORY[0x1E0C98658](allocator, domain, code, userInfoKeys, userInfoValues, numUserInfoValues);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return MEMORY[0x1E0C98660](err);
}

CFErrorDomain CFErrorGetDomain(CFErrorRef err)
{
  return (CFErrorDomain)MEMORY[0x1E0C98670](err);
}

CFTypeID CFErrorGetTypeID(void)
{
  return MEMORY[0x1E0C98678]();
}

CFAllocatorRef CFGetAllocator(CFTypeRef cf)
{
  return (CFAllocatorRef)MEMORY[0x1E0C98718](cf);
}

CFIndex CFGetRetainCount(CFTypeRef cf)
{
  return MEMORY[0x1E0C98720](cf);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

CFDictionaryRef CFHTTPMessageCopyAllHeaderFields(CFHTTPMessageRef message)
{
  return (CFDictionaryRef)MEMORY[0x1E0C927E8](message);
}

CFStringRef CFHTTPMessageCopyHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField)
{
  return (CFStringRef)MEMORY[0x1E0C927F8](message, headerField);
}

CFHTTPMessageRef CFHTTPMessageCreateEmpty(CFAllocatorRef alloc, Boolean isRequest)
{
  return (CFHTTPMessageRef)MEMORY[0x1E0C92830](alloc, isRequest);
}

CFHTTPMessageRef CFHTTPMessageCreateResponse(CFAllocatorRef alloc, CFIndex statusCode, CFStringRef statusDescription, CFStringRef httpVersion)
{
  return (CFHTTPMessageRef)MEMORY[0x1E0C92840](alloc, statusCode, statusDescription, httpVersion);
}

CFIndex CFHTTPMessageGetResponseStatusCode(CFHTTPMessageRef response)
{
  return MEMORY[0x1E0C92848](response);
}

void CFHTTPMessageSetHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField, CFStringRef value)
{
  MEMORY[0x1E0C92868](message, headerField, value);
}

CFHashCode CFHash(CFTypeRef cf)
{
  return MEMORY[0x1E0C98758](cf);
}

CFLocaleRef CFLocaleCopyCurrent(void)
{
  return (CFLocaleRef)MEMORY[0x1E0C98770]();
}

CFArrayRef CFLocaleCopyPreferredLanguages(void)
{
  return (CFArrayRef)MEMORY[0x1E0C98790]();
}

CFLocaleRef CFLocaleCreate(CFAllocatorRef allocator, CFLocaleIdentifier localeIdentifier)
{
  return (CFLocaleRef)MEMORY[0x1E0C98798](allocator, localeIdentifier);
}

CFLocaleIdentifier CFLocaleCreateCanonicalLanguageIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier)
{
  return (CFLocaleIdentifier)MEMORY[0x1E0C987A0](allocator, localeIdentifier);
}

CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes(CFAllocatorRef allocator, LangCode lcode, RegionCode rcode)
{
  return (CFLocaleIdentifier)MEMORY[0x1E0C987A8](allocator, lcode, rcode);
}

CFDictionaryRef CFLocaleCreateComponentsFromLocaleIdentifier(CFAllocatorRef allocator, CFLocaleIdentifier localeID)
{
  return (CFDictionaryRef)MEMORY[0x1E0C987B8](allocator, localeID);
}

CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale)
{
  return (CFLocaleIdentifier)MEMORY[0x1E0C987D8](locale);
}

CFLocaleRef CFLocaleGetSystem(void)
{
  return (CFLocaleRef)MEMORY[0x1E0C987F0]();
}

CFTypeID CFLocaleGetTypeID(void)
{
  return MEMORY[0x1E0C987F8]();
}

CFTypeRef CFLocaleGetValue(CFLocaleRef locale, CFLocaleKey key)
{
  return (CFTypeRef)MEMORY[0x1E0C98800](locale, key);
}

uint64_t CFLog()
{
  return MEMORY[0x1E0C98808]();
}

CFTypeRef CFMakeCollectable(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98858](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988C8]();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988D0]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

CFTypeID CFNullGetTypeID(void)
{
  return MEMORY[0x1E0C98908]();
}

CFComparisonResult CFNumberCompare(CFNumberRef number, CFNumberRef otherNumber, void *context)
{
  return MEMORY[0x1E0C98910](number, otherNumber, context);
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x1E0C98928](allocator, theType, valuePtr);
}

CFNumberFormatterRef CFNumberFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style)
{
  return (CFNumberFormatterRef)MEMORY[0x1E0C98938](allocator, locale, style);
}

CFNumberRef CFNumberFormatterCreateNumberFromString(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFOptionFlags options)
{
  return (CFNumberRef)MEMORY[0x1E0C98940](allocator, formatter, string, rangep, options);
}

CFIndex CFNumberGetByteSize(CFNumberRef number)
{
  return MEMORY[0x1E0C98990](number);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1E0C989B8]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1E0C989C0](number, theType, valuePtr);
}

Boolean CFNumberIsFloatType(CFNumberRef number)
{
  return MEMORY[0x1E0C989D0](number);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

CFDictionaryRef CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98A58](keysToFetch, applicationID, userName, hostName);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A60](key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A78](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetMultiple(CFDictionaryRef keysToSet, CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  MEMORY[0x1E0C98A88](keysToSet, keysToRemove, applicationID, userName, hostName);
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x1E0C98A98](applicationID, userName, hostName);
}

CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0C98AA0](allocator, propertyList, format, options, error);
}

CFPropertyListRef CFPropertyListCreateDeepCopy(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98AB0](allocator, propertyList, mutabilityOption);
}

CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98AD0](allocator, data, options, format, error);
}

CFPropertyListRef CFPropertyListCreateWithStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98AE0](allocator, stream, streamLength, options, format, error);
}

Boolean CFPropertyListIsValid(CFPropertyListRef plist, CFPropertyListFormat format)
{
  return MEMORY[0x1E0C98AF0](plist, format);
}

CFIndex CFPropertyListWrite(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error)
{
  return MEMORY[0x1E0C98AF8](propertyList, stream, format, options, error);
}

void CFReadStreamClose(CFReadStreamRef stream)
{
  MEMORY[0x1E0C98B10](stream);
}

CFErrorRef CFReadStreamCopyError(CFReadStreamRef stream)
{
  return (CFErrorRef)MEMORY[0x1E0C98B20](stream);
}

CFReadStreamRef CFReadStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL)
{
  return (CFReadStreamRef)MEMORY[0x1E0C98B48](alloc, fileURL);
}

Boolean CFReadStreamOpen(CFReadStreamRef stream)
{
  return MEMORY[0x1E0C98B80](stream);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BF8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C30]();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98C90](rl, source, mode);
}

void CFRunLoopRun(void)
{
  MEMORY[0x1E0C98CA8]();
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return (CFRunLoopSourceRef)MEMORY[0x1E0C98CC8](allocator, order, context);
}

void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source)
{
  MEMORY[0x1E0C98CE0](source);
}

void CFRunLoopSourceSignal(CFRunLoopSourceRef source)
{
  MEMORY[0x1E0C98CF0](source);
}

void CFRunLoopStop(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D00](rl);
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D68](rl);
}

void CFSetAddValue(CFMutableSetRef theSet, const void *value)
{
  MEMORY[0x1E0C98D70](theSet, value);
}

void CFSetApplyFunction(CFSetRef theSet, CFSetApplierFunction applier, void *context)
{
  MEMORY[0x1E0C98D78](theSet, applier, context);
}

Boolean CFSetContainsValue(CFSetRef theSet, const void *value)
{
  return MEMORY[0x1E0C98D80](theSet, value);
}

CFSetRef CFSetCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks)
{
  return (CFSetRef)MEMORY[0x1E0C98D88](allocator, values, numValues, callBacks);
}

CFSetRef CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet)
{
  return (CFSetRef)MEMORY[0x1E0C98D90](allocator, theSet);
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return (CFMutableSetRef)MEMORY[0x1E0C98D98](allocator, capacity, callBacks);
}

CFMutableSetRef CFSetCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet)
{
  return (CFMutableSetRef)MEMORY[0x1E0C98DA0](allocator, capacity, theSet);
}

CFIndex CFSetGetCount(CFSetRef theSet)
{
  return MEMORY[0x1E0C98DA8](theSet);
}

const void *__cdecl CFSetGetValue(CFSetRef theSet, const void *value)
{
  return (const void *)MEMORY[0x1E0C98DC0](theSet, value);
}

void CFSetGetValues(CFSetRef theSet, const void **values)
{
  MEMORY[0x1E0C98DD0](theSet, values);
}

void CFSetRemoveAllValues(CFMutableSetRef theSet)
{
  MEMORY[0x1E0C98DD8](theSet);
}

void CFSetRemoveValue(CFMutableSetRef theSet, const void *value)
{
  MEMORY[0x1E0C98DE0](theSet, value);
}

void CFSetSetValue(CFMutableSetRef theSet, const void *value)
{
  MEMORY[0x1E0C98DF0](theSet, value);
}

void CFShow(CFTypeRef obj)
{
  MEMORY[0x1E0C98DF8](obj);
}

void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString)
{
  MEMORY[0x1E0C98ED8](theString, appendedString);
}

void CFStringAppendCString(CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding)
{
  MEMORY[0x1E0C98EE0](theString, cStr, *(_QWORD *)&encoding);
}

void CFStringAppendCharacters(CFMutableStringRef theString, const UniChar *chars, CFIndex numChars)
{
  MEMORY[0x1E0C98EE8](theString, chars, numChars);
}

void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  MEMORY[0x1E0C98EF0](theString, formatOptions, format);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C98F10](theString1, theString2, compareOptions);
}

CFComparisonResult CFStringCompareWithOptions(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C98F18](theString1, theString2, rangeToCompare.location, rangeToCompare.length, compareOptions);
}

CFArrayRef CFStringCreateArrayBySeparatingStrings(CFAllocatorRef alloc, CFStringRef theString, CFStringRef separatorString)
{
  return (CFArrayRef)MEMORY[0x1E0C98F58](alloc, theString, separatorString);
}

CFArrayRef CFStringCreateArrayWithFindResults(CFAllocatorRef alloc, CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags compareOptions)
{
  return (CFArrayRef)MEMORY[0x1E0C98F60](alloc, theString, stringToFind, rangeToSearch.location, rangeToSearch.length, compareOptions);
}

CFStringRef CFStringCreateByCombiningStrings(CFAllocatorRef alloc, CFArrayRef theArray, CFStringRef separatorString)
{
  return (CFStringRef)MEMORY[0x1E0C98F68](alloc, theArray, separatorString);
}

CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFStringRef)MEMORY[0x1E0C98F78](alloc, theString);
}

CFDataRef CFStringCreateExternalRepresentation(CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte)
{
  return (CFDataRef)MEMORY[0x1E0C98F80](alloc, theString, *(_QWORD *)&encoding, lossByte);
}

CFStringRef CFStringCreateFromExternalRepresentation(CFAllocatorRef alloc, CFDataRef data, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C98F88](alloc, data, *(_QWORD *)&encoding);
}

CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength)
{
  return (CFMutableStringRef)MEMORY[0x1E0C98F90](alloc, maxLength);
}

CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString)
{
  return (CFMutableStringRef)MEMORY[0x1E0C98F98](alloc, maxLength, theString);
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return (CFStringRef)MEMORY[0x1E0C98FB8](alloc, bytes, numBytes, *(_QWORD *)&encoding, isExternalRepresentation);
}

CFStringRef CFStringCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation, CFAllocatorRef contentsDeallocator)
{
  return (CFStringRef)MEMORY[0x1E0C98FC8](alloc, bytes, numBytes, *(_QWORD *)&encoding, isExternalRepresentation, contentsDeallocator);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C98FD0](alloc, cStr, *(_QWORD *)&encoding);
}

CFStringRef CFStringCreateWithCStringNoCopy(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator)
{
  return (CFStringRef)MEMORY[0x1E0C98FE0](alloc, cStr, *(_QWORD *)&encoding, contentsDeallocator);
}

CFStringRef CFStringCreateWithCharacters(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars)
{
  return (CFStringRef)MEMORY[0x1E0C98FE8](alloc, chars, numChars);
}

CFStringRef CFStringCreateWithFileSystemRepresentation(CFAllocatorRef alloc, const char *buffer)
{
  return (CFStringRef)MEMORY[0x1E0C99008](alloc, buffer);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return (CFStringRef)MEMORY[0x1E0C99018](alloc, formatOptions, format);
}

CFStringRef CFStringCreateWithFormatAndArguments(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments)
{
  return (CFStringRef)MEMORY[0x1E0C99020](alloc, formatOptions, format, arguments);
}

CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range)
{
  return (CFStringRef)MEMORY[0x1E0C99030](alloc, str, range.location, range.length);
}

void CFStringDelete(CFMutableStringRef theString, CFRange range)
{
  MEMORY[0x1E0C99038](theString, range.location, range.length);
}

CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions)
{
  CFIndex v3;
  CFIndex v4;
  CFRange result;

  v3 = MEMORY[0x1E0C99050](theString, stringToFind, compareOptions);
  result.length = v4;
  result.location = v3;
  return result;
}

CFIndex CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C99058](theString, stringToFind, replacementString, rangeToSearch.location, rangeToSearch.length, compareOptions);
}

Boolean CFStringFindCharacterFromSet(CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result)
{
  return MEMORY[0x1E0C99060](theString, theSet, rangeToSearch.location, rangeToSearch.length, searchOptions, result);
}

Boolean CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result)
{
  return MEMORY[0x1E0C99068](theString, stringToFind, rangeToSearch.location, rangeToSearch.length, searchOptions, result);
}

CFIndex CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen)
{
  return MEMORY[0x1E0C99080](theString, range.location, range.length, *(_QWORD *)&encoding, lossByte, isExternalRepresentation, buffer, maxBufLen);
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return MEMORY[0x1E0C99098](theString, buffer, bufferSize, *(_QWORD *)&encoding);
}

const char *__cdecl CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding)
{
  return (const char *)MEMORY[0x1E0C990A0](theString, *(_QWORD *)&encoding);
}

UniChar CFStringGetCharacterAtIndex(CFStringRef theString, CFIndex idx)
{
  return MEMORY[0x1E0C990B0](theString, idx);
}

void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer)
{
  MEMORY[0x1E0C990C0](theString, range.location, range.length, buffer);
}

const UniChar *__cdecl CFStringGetCharactersPtr(CFStringRef theString)
{
  return (const UniChar *)MEMORY[0x1E0C990C8](theString);
}

double CFStringGetDoubleValue(CFStringRef str)
{
  double result;

  MEMORY[0x1E0C990D0](str);
  return result;
}

Boolean CFStringGetFileSystemRepresentation(CFStringRef string, char *buffer, CFIndex maxBufLen)
{
  return MEMORY[0x1E0C990E0](string, buffer, maxBufLen);
}

SInt32 CFStringGetIntValue(CFStringRef str)
{
  return MEMORY[0x1E0C990F0](str);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1E0C99100](theString);
}

void CFStringGetLineBounds(CFStringRef theString, CFRange range, CFIndex *lineBeginIndex, CFIndex *lineEndIndex, CFIndex *contentsEndIndex)
{
  MEMORY[0x1E0C99108](theString, range.location, range.length, lineBeginIndex, lineEndIndex, contentsEndIndex);
}

CFIndex CFStringGetMaximumSizeForEncoding(CFIndex length, CFStringEncoding encoding)
{
  return MEMORY[0x1E0C99118](length, *(_QWORD *)&encoding);
}

Boolean CFStringGetPascalString(CFStringRef theString, StringPtr buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return MEMORY[0x1E0C99148](theString, buffer, bufferSize, *(_QWORD *)&encoding);
}

CFStringEncoding CFStringGetSystemEncoding(void)
{
  return MEMORY[0x1E0C99168]();
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix)
{
  return MEMORY[0x1E0C99180](theString, prefix);
}

Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix)
{
  return MEMORY[0x1E0C99190](theString, suffix);
}

void CFStringInsert(CFMutableStringRef str, CFIndex idx, CFStringRef insertedStr)
{
  MEMORY[0x1E0C991B8](str, idx, insertedStr);
}

void CFStringLowercase(CFMutableStringRef theString, CFLocaleRef locale)
{
  MEMORY[0x1E0C991D0](theString, locale);
}

void CFStringPad(CFMutableStringRef theString, CFStringRef padString, CFIndex length, CFIndex indexIntoPad)
{
  MEMORY[0x1E0C991E8](theString, padString, length, indexIntoPad);
}

void CFStringReplace(CFMutableStringRef theString, CFRange range, CFStringRef replacement)
{
  MEMORY[0x1E0C991F0](theString, range.location, range.length, replacement);
}

Boolean CFStringTransform(CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse)
{
  return MEMORY[0x1E0C99248](string, range, transform, reverse);
}

void CFStringTrimWhitespace(CFMutableStringRef theString)
{
  MEMORY[0x1E0C99258](theString);
}

CFTimeZoneRef CFTimeZoneCopySystem(void)
{
  return (CFTimeZoneRef)MEMORY[0x1E0C99280]();
}

CFTimeZoneRef CFTimeZoneCreateWithTimeIntervalFromGMT(CFAllocatorRef allocator, CFTimeInterval ti)
{
  return (CFTimeZoneRef)MEMORY[0x1E0C99290](allocator, ti);
}

CFStringRef CFTimeZoneGetName(CFTimeZoneRef tz)
{
  return (CFStringRef)MEMORY[0x1E0C99298](tz);
}

CFTimeInterval CFTimeZoneGetSecondsFromGMT(CFTimeZoneRef tz, CFAbsoluteTime at)
{
  CFTimeInterval result;

  MEMORY[0x1E0C992A0](tz, at);
  return result;
}

Boolean CFURLCanBeDecomposed(CFURLRef anURL)
{
  return MEMORY[0x1E0C992B0](anURL);
}

CFURLRef CFURLCopyAbsoluteURL(CFURLRef relativeURL)
{
  return (CFURLRef)MEMORY[0x1E0C992C8](relativeURL);
}

CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle)
{
  return (CFStringRef)MEMORY[0x1E0C992D8](anURL, pathStyle);
}

CFStringRef CFURLCopyHostName(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1E0C992F0](anURL);
}

CFStringRef CFURLCopyLastPathComponent(CFURLRef url)
{
  return (CFStringRef)MEMORY[0x1E0C992F8](url);
}

CFStringRef CFURLCopyPath(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1E0C99318](anURL);
}

CFStringRef CFURLCopyPathExtension(CFURLRef url)
{
  return (CFStringRef)MEMORY[0x1E0C99320](url);
}

CFStringRef CFURLCopyQueryString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped)
{
  return (CFStringRef)MEMORY[0x1E0C99328](anURL, charactersToLeaveEscaped);
}

Boolean CFURLCopyResourcePropertyForKey(CFURLRef url, CFStringRef key, void *propertyValueTypeRefPtr, CFErrorRef *error)
{
  return MEMORY[0x1E0C99338](url, key, propertyValueTypeRefPtr, error);
}

CFStringRef CFURLCopyScheme(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1E0C99348](anURL);
}

CFURLRef CFURLCreateCopyAppendingPathComponent(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x1E0C99380](allocator, url, pathComponent, isDirectory);
}

CFURLRef CFURLCreateCopyDeletingLastPathComponent(CFAllocatorRef allocator, CFURLRef url)
{
  return (CFURLRef)MEMORY[0x1E0C99390](allocator, url);
}

CFDataRef CFURLCreateData(CFAllocatorRef allocator, CFURLRef url, CFStringEncoding encoding, Boolean escapeWhitespace)
{
  return (CFDataRef)MEMORY[0x1E0C993A0](allocator, url, *(_QWORD *)&encoding, escapeWhitespace);
}

CFURLRef CFURLCreateFilePathURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error)
{
  return (CFURLRef)MEMORY[0x1E0C993B8](allocator, url, error);
}

CFURLRef CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x1E0C993C8](allocator, buffer, bufLen, isDirectory);
}

CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C993F8](allocator, originalString, charactersToLeaveUnescaped, legalURLCharactersToBeEscaped, *(_QWORD *)&encoding);
}

CFURLRef CFURLCreateWithBytes(CFAllocatorRef allocator, const UInt8 *URLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL)
{
  return (CFURLRef)MEMORY[0x1E0C99418](allocator, URLBytes, length, *(_QWORD *)&encoding, baseURL);
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x1E0C99420](allocator, filePath, pathStyle, isDirectory);
}

CFURLRef CFURLCreateWithFileSystemPathRelativeToBase(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL)
{
  return (CFURLRef)MEMORY[0x1E0C99438](allocator, filePath, pathStyle, isDirectory, baseURL);
}

CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL)
{
  return (CFURLRef)MEMORY[0x1E0C99448](allocator, URLString, baseURL);
}

CFURLRef CFURLGetBaseURL(CFURLRef anURL)
{
  return (CFURLRef)MEMORY[0x1E0C99478](anURL);
}

CFRange CFURLGetByteRangeForComponent(CFURLRef url, CFURLComponentType component, CFRange *rangeIncludingSeparators)
{
  CFIndex v3;
  CFIndex v4;
  CFRange result;

  v3 = MEMORY[0x1E0C99480](url, component, rangeIncludingSeparators);
  result.length = v4;
  result.location = v3;
  return result;
}

CFIndex CFURLGetBytes(CFURLRef url, UInt8 *buffer, CFIndex bufferLength)
{
  return MEMORY[0x1E0C99488](url, buffer, bufferLength);
}

Boolean CFURLGetFileSystemRepresentation(CFURLRef url, Boolean resolveAgainstBase, UInt8 *buffer, CFIndex maxBufLen)
{
  return MEMORY[0x1E0C99490](url, resolveAgainstBase, buffer, maxBufLen);
}

SInt32 CFURLGetPortNumber(CFURLRef anURL)
{
  return MEMORY[0x1E0C99498](anURL);
}

CFStringRef CFURLGetString(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1E0C994A0](anURL);
}

CFTypeID CFURLGetTypeID(void)
{
  return MEMORY[0x1E0C994B8]();
}

Boolean CFURLHasDirectoryPath(CFURLRef anURL)
{
  return MEMORY[0x1E0C994C0](anURL);
}

uint64_t CFURLResponseConnectionDidFallback()
{
  return MEMORY[0x1E0C92A30]();
}

uint64_t CFURLResponseConnectionIsCellular()
{
  return MEMORY[0x1E0C92A38]();
}

uint64_t CFURLResponseCopyPeerAddress()
{
  return MEMORY[0x1E0C92A40]();
}

Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error)
{
  return MEMORY[0x1E0C994E0](url, key, propertyValue, error);
}

Boolean CFURLStartAccessingSecurityScopedResource(CFURLRef url)
{
  return MEMORY[0x1E0C994F0](url);
}

void CFURLStopAccessingSecurityScopedResource(CFURLRef url)
{
  MEMORY[0x1E0C994F8](url);
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return (CFUUIDRef)MEMORY[0x1E0C99518](alloc);
}

CFUUIDRef CFUUIDCreateFromString(CFAllocatorRef alloc, CFStringRef uuidStr)
{
  return (CFUUIDRef)MEMORY[0x1E0C99520](alloc, uuidStr);
}

CFUUIDRef CFUUIDCreateFromUUIDBytes(CFAllocatorRef alloc, CFUUIDBytes bytes)
{
  return (CFUUIDRef)MEMORY[0x1E0C99530](alloc, *(_QWORD *)&bytes.byte0, *(_QWORD *)&bytes.byte8);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return (CFStringRef)MEMORY[0x1E0C99538](alloc, uuid);
}

CFTypeID CFUUIDGetTypeID(void)
{
  return MEMORY[0x1E0C99560]();
}

CFUUIDBytes CFUUIDGetUUIDBytes(CFUUIDRef uuid)
{
  uint64_t v1;
  uint64_t v2;
  CFUUIDBytes result;

  v1 = MEMORY[0x1E0C99568](uuid);
  result.byte8 = v2;
  result.byte9 = BYTE1(v2);
  result.byte10 = BYTE2(v2);
  result.byte11 = BYTE3(v2);
  result.byte12 = BYTE4(v2);
  result.byte13 = BYTE5(v2);
  result.byte14 = BYTE6(v2);
  result.byte15 = HIBYTE(v2);
  result.byte0 = v1;
  result.byte1 = BYTE1(v1);
  result.byte2 = BYTE2(v1);
  result.byte3 = BYTE3(v1);
  result.byte4 = BYTE4(v1);
  result.byte5 = BYTE5(v1);
  result.byte6 = BYTE6(v1);
  result.byte7 = HIBYTE(v1);
  return result;
}

void CFWriteStreamClose(CFWriteStreamRef stream)
{
  MEMORY[0x1E0C99600](stream);
}

CFWriteStreamRef CFWriteStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL)
{
  return (CFWriteStreamRef)MEMORY[0x1E0C99630](alloc, fileURL);
}

Boolean CFWriteStreamOpen(CFWriteStreamRef stream)
{
  return MEMORY[0x1E0C99650](stream);
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BA90](retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAB0](retstr, t);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return MEMORY[0x1E0C9BAB8](t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD0](retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAE0](retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformRotate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAF0](retstr, t, angle);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAF8](retstr, t, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BB00](retstr, t, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1E0C9BB20](context);
}

size_t CGBitmapContextGetBytesPerRow(CGContextRef context)
{
  return MEMORY[0x1E0C9BB60](context);
}

void *__cdecl CGBitmapContextGetData(CGContextRef context)
{
  return (void *)MEMORY[0x1E0C9BB70](context);
}

size_t CGBitmapContextGetHeight(CGContextRef context)
{
  return MEMORY[0x1E0C9BB78](context);
}

size_t CGBitmapContextGetWidth(CGContextRef context)
{
  return MEMORY[0x1E0C9BB80](context);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1E0C9BC78](space, components);
}

CGColorRef CGColorCreateCopy(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x1E0C9BC80](color);
}

CGColorRef CGColorCreateCopyWithAlpha(CGColorRef color, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1E0C9BC90](color, alpha);
}

BOOL CGColorEqualToColor(CGColorRef color1, CGColorRef color2)
{
  return MEMORY[0x1E0C9BCD8](color1, color2);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  CGFloat result;

  MEMORY[0x1E0C9BCF8](color);
  return result;
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BD00](color);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1E0C9BD08](color);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x1E0C9BD20](color);
}

CFTypeID CGColorGetTypeID(void)
{
  return MEMORY[0x1E0C9BD38]();
}

void CGColorRelease(CGColorRef color)
{
  MEMORY[0x1E0C9BD60](color);
}

CGColorRef CGColorRetain(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x1E0C9BD68](color);
}

CFPropertyListRef CGColorSpaceCopyPropertyList(CGColorSpaceRef space)
{
  return (CFPropertyListRef)MEMORY[0x1E0C9BDC0](space);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

CGColorSpaceRef CGColorSpaceCreateWithPropertyList(CFPropertyListRef plist)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE60](plist);
}

CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef space)
{
  return MEMORY[0x1E0C9BEC8](space);
}

CFStringRef CGColorSpaceGetName(CGColorSpaceRef space)
{
  return (CFStringRef)MEMORY[0x1E0C9BED0](space);
}

size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef space)
{
  return MEMORY[0x1E0C9BED8](space);
}

uint64_t CGColorSpaceGetType()
{
  return MEMORY[0x1E0C9BEF0]();
}

CFTypeID CGColorSpaceGetTypeID(void)
{
  return MEMORY[0x1E0C9BEF8]();
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
  MEMORY[0x1E0C9BF30](space);
}

void CGContextAddArcToPoint(CGContextRef c, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
{
  MEMORY[0x1E0C9BFB8](c, x1, y1, x2, y2, radius);
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
  MEMORY[0x1E0C9BFD8](c, path);
}

void CGContextAddRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9BFE8](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextBeginPath(CGContextRef c)
{
  MEMORY[0x1E0C9C000](c);
}

uint64_t CGContextClear()
{
  return MEMORY[0x1E0C9C018]();
}

void CGContextClearRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C020](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextClip(CGContextRef c)
{
  MEMORY[0x1E0C9C028](c);
}

void CGContextClosePath(CGContextRef c)
{
  MEMORY[0x1E0C9C048](c);
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
  MEMORY[0x1E0C9C050](c, transform);
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
  MEMORY[0x1E0C9C170](c, image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextFillPath(CGContextRef c)
{
  MEMORY[0x1E0C9C218](c);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextFlush(CGContextRef c)
{
  MEMORY[0x1E0C9C230](c);
}

CGRect CGContextGetClipBoundingBox(CGContextRef c)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9C260](c);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGAffineTransform *__cdecl CGContextGetTextMatrix(CGAffineTransform *__return_ptr retstr, CGContextRef c)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9C308](retstr, c);
}

CGPoint CGContextGetTextPosition(CGContextRef c)
{
  double v1;
  double v2;
  CGPoint result;

  MEMORY[0x1E0C9C310](c);
  result.y = v2;
  result.x = v1;
  return result;
}

void CGContextMoveToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9C330](c, x, y);
}

void CGContextRelease(CGContextRef c)
{
  MEMORY[0x1E0C9C340](c);
}

void CGContextRestoreGState(CGContextRef c)
{
  MEMORY[0x1E0C9C370](c);
}

void CGContextSaveGState(CGContextRef c)
{
  MEMORY[0x1E0C9C388](c);
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
  MEMORY[0x1E0C9C390](c, sx, sy);
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C408](c, color);
}

uint64_t CGContextSetFontRenderingStyle()
{
  return MEMORY[0x1E0C9C430]();
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
  MEMORY[0x1E0C9C458](c, *(_QWORD *)&quality);
}

void CGContextSetLineJoin(CGContextRef c, CGLineJoin join)
{
  MEMORY[0x1E0C9C478](c, *(_QWORD *)&join);
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
  MEMORY[0x1E0C9C480](c, width);
}

void CGContextSetRGBStrokeColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  MEMORY[0x1E0C9C4A8](c, red, green, blue, alpha);
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
  MEMORY[0x1E0C9C4C0](c, color, (__n128)offset, *(__n128 *)&offset.height, blur);
}

void CGContextSetShouldAntialias(CGContextRef c, BOOL shouldAntialias)
{
  MEMORY[0x1E0C9C4C8](c, shouldAntialias);
}

void CGContextSetShouldSmoothFonts(CGContextRef c, BOOL shouldSmoothFonts)
{
  MEMORY[0x1E0C9C4E0](c, shouldSmoothFonts);
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C508](c, color);
}

void CGContextSetTextMatrix(CGContextRef c, CGAffineTransform *t)
{
  MEMORY[0x1E0C9C530](c, t);
}

void CGContextSetTextPosition(CGContextRef c, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9C538](c, x, y);
}

void CGContextStrokeLineSegments(CGContextRef c, const CGPoint *points, size_t count)
{
  MEMORY[0x1E0C9C568](c, points, count);
}

void CGContextStrokeRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C578](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
  MEMORY[0x1E0C9C588](c, tx, ty);
}

CFDataRef CGDataProviderCopyData(CGDataProviderRef provider)
{
  return (CFDataRef)MEMORY[0x1E0C9C5D8](provider);
}

CGDataProviderRef CGDataProviderCreateWithData(void *info, const void *data, size_t size, CGDataProviderReleaseDataCallback releaseData)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9C600](info, data, size, releaseData);
}

CGImageRef CGImageCreate(size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGColorSpaceRef space, CGBitmapInfo bitmapInfo, CGDataProviderRef provider, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x1E0C9CB80](width, height, bitsPerComponent, bitsPerPixel, bytesPerRow, space, *(_QWORD *)&bitmapInfo, provider);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF0](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF8](image);
}

size_t CGImageGetBitsPerPixel(CGImageRef image)
{
  return MEMORY[0x1E0C9CC00](image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return MEMORY[0x1E0C9CC08](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9CC20](image);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9CC38](image);
}

const CGFloat *__cdecl CGImageGetDecode(CGImageRef image)
{
  return (const CGFloat *)MEMORY[0x1E0C9CC40](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1E0C9CC60](image);
}

uint64_t CGImageGetProperty()
{
  return MEMORY[0x1E0C9CC98]();
}

CGColorRenderingIntent CGImageGetRenderingIntent(CGImageRef image)
{
  return MEMORY[0x1E0C9CCA0](image);
}

BOOL CGImageGetShouldInterpolate(CGImageRef image)
{
  return MEMORY[0x1E0C9CCA8](image);
}

CFTypeID CGImageGetTypeID(void)
{
  return MEMORY[0x1E0C9CCC0]();
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

void CGImageRelease(CGImageRef image)
{
  MEMORY[0x1E0C9CDA0](image);
}

CGImageRef CGImageRetain(CGImageRef image)
{
  return (CGImageRef)MEMORY[0x1E0C9CDA8](image);
}

void CGPathAddArcToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
{
  MEMORY[0x1E0C9D288](path, m, x1, y1, x2, y2, radius);
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D2A8](path, m, x, y);
}

void CGPathAddPath(CGMutablePathRef path1, const CGAffineTransform *m, CGPathRef path2)
{
  MEMORY[0x1E0C9D2B8](path1, m, path2);
}

void CGPathAddRect(CGMutablePathRef path, const CGAffineTransform *m, CGRect rect)
{
  MEMORY[0x1E0C9D2C8](path, m, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
  MEMORY[0x1E0C9D310](path);
}

CGPathRef CGPathCreateCopyByTransformingPath(CGPathRef path, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x1E0C9D358](path, transform);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1E0C9D388]();
}

CGRect CGPathGetBoundingBox(CGPathRef path)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D3F0](path);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D490](path, m, x, y);
}

void CGPathRelease(CGPathRef path)
{
  MEMORY[0x1E0C9D498](path);
}

CFDictionaryRef CGPointCreateDictionaryRepresentation(CGPoint point)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9D528]((__n128)point, *(__n128 *)&point.y);
}

BOOL CGPointMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGPoint *point)
{
  return MEMORY[0x1E0C9D530](dict, point);
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D548](t, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x1E0C9D550]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D558]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CFDictionaryRef CGRectCreateDictionaryRepresentation(CGRect a1)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9D560]((__n128)a1.origin, *(__n128 *)&a1.origin.y, (__n128)a1.size, *(__n128 *)&a1.size.height);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D588]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D5E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D5F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D5F8]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D600]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1E0C9D608]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsInfinite(CGRect rect)
{
  return MEMORY[0x1E0C9D610]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x1E0C9D618]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGRect *rect)
{
  return MEMORY[0x1E0C9D620](dict, rect);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D630]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectStandardize(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D638]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D640]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

CFDictionaryRef CGSizeCreateDictionaryRepresentation(CGSize size)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9D808]((__n128)size, *(__n128 *)&size.height);
}

BOOL CGSizeMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGSize *size)
{
  return MEMORY[0x1E0C9D818](dict, size);
}

uint64_t CM8021ASClockAddIPv6Port()
{
  return MEMORY[0x1E0C9E9E0]();
}

uint64_t CM8021ASClockCreate()
{
  return MEMORY[0x1E0C9E9F8]();
}

uint64_t CM8021ASClockRemoveIPv6Port()
{
  return MEMORY[0x1E0C9EA38]();
}

OSStatus CMAudioClockCreate(CFAllocatorRef allocator, CMClockRef *clockOut)
{
  return MEMORY[0x1E0C9EA50](allocator, clockOut);
}

OSStatus CMAudioDeviceClockCreate(CFAllocatorRef allocator, CFStringRef deviceUID, CMClockRef *clockOut)
{
  return MEMORY[0x1E0C9EA58](allocator, deviceUID, clockOut);
}

OSStatus CMAudioDeviceClockCreateFromAudioDeviceID(CFAllocatorRef allocator, AudioDeviceID deviceID, CMClockRef *clockOut)
{
  return MEMORY[0x1E0C9EA60](allocator, *(_QWORD *)&deviceID, clockOut);
}

OSStatus CMAudioDeviceClockGetAudioDevice(CMClockRef clock, CFStringRef *deviceUIDOut, AudioDeviceID *deviceIDOut, Boolean *trackingDefaultDeviceOut)
{
  return MEMORY[0x1E0C9EA68](clock, deviceUIDOut, deviceIDOut, trackingDefaultDeviceOut);
}

OSStatus CMAudioDeviceClockSetAudioDeviceUID(CMClockRef clock, CFStringRef deviceUID)
{
  return MEMORY[0x1E0C9EA70](clock, deviceUID);
}

OSStatus CMAudioFormatDescriptionCopyAsBigEndianSoundDescriptionBlockBuffer(CFAllocatorRef allocator, CMAudioFormatDescriptionRef audioFormatDescription, CMSoundDescriptionFlavor flavor, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9EA78](allocator, audioFormatDescription, flavor, blockBufferOut);
}

OSStatus CMAudioFormatDescriptionCreate(CFAllocatorRef allocator, const AudioStreamBasicDescription *asbd, size_t layoutSize, const AudioChannelLayout *layout, size_t magicCookieSize, const void *magicCookie, CFDictionaryRef extensions, CMAudioFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x1E0C9EA80](allocator, asbd, layoutSize, layout, magicCookieSize, magicCookie, extensions, formatDescriptionOut);
}

Boolean CMAudioFormatDescriptionEqual(CMAudioFormatDescriptionRef formatDescription, CMAudioFormatDescriptionRef otherFormatDescription, CMAudioFormatDescriptionMask equalityMask, CMAudioFormatDescriptionMask *equalityMaskOut)
{
  return MEMORY[0x1E0C9EA90](formatDescription, otherFormatDescription, *(_QWORD *)&equalityMask, equalityMaskOut);
}

uint64_t CMAudioFormatDescriptionGetChannelCount()
{
  return MEMORY[0x1E0C9EA98]();
}

const AudioChannelLayout *__cdecl CMAudioFormatDescriptionGetChannelLayout(CMAudioFormatDescriptionRef desc, size_t *sizeOut)
{
  return (const AudioChannelLayout *)MEMORY[0x1E0C9EAA0](desc, sizeOut);
}

const AudioFormatListItem *__cdecl CMAudioFormatDescriptionGetFormatList(CMAudioFormatDescriptionRef desc, size_t *sizeOut)
{
  return (const AudioFormatListItem *)MEMORY[0x1E0C9EAA8](desc, sizeOut);
}

const void *__cdecl CMAudioFormatDescriptionGetMagicCookie(CMAudioFormatDescriptionRef desc, size_t *sizeOut)
{
  return (const void *)MEMORY[0x1E0C9EAB0](desc, sizeOut);
}

const AudioFormatListItem *__cdecl CMAudioFormatDescriptionGetMostCompatibleFormat(CMAudioFormatDescriptionRef desc)
{
  return (const AudioFormatListItem *)MEMORY[0x1E0C9EAB8](desc);
}

uint64_t CMAudioFormatDescriptionGetMostCompatibleFormatAndChannelLayout()
{
  return MEMORY[0x1E0C9EAC0]();
}

const AudioFormatListItem *__cdecl CMAudioFormatDescriptionGetRichestDecodableFormat(CMAudioFormatDescriptionRef desc)
{
  return (const AudioFormatListItem *)MEMORY[0x1E0C9EAC8](desc);
}

uint64_t CMAudioFormatDescriptionGetRichestDecodableFormatAndChannelLayout()
{
  return MEMORY[0x1E0C9EAD0]();
}

const AudioStreamBasicDescription *__cdecl CMAudioFormatDescriptionGetStreamBasicDescription(CMAudioFormatDescriptionRef desc)
{
  return (const AudioStreamBasicDescription *)MEMORY[0x1E0C9EAD8](desc);
}

OSStatus CMAudioSampleBufferCreateWithPacketDescriptions(CFAllocatorRef allocator, CMBlockBufferRef dataBuffer, Boolean dataReady, CMSampleBufferMakeDataReadyCallback makeDataReadyCallback, void *makeDataReadyRefcon, CMFormatDescriptionRef formatDescription, CMItemCount numSamples, CMTime *presentationTimeStamp, const AudioStreamPacketDescription *packetDescriptions, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EAE8](allocator, dataBuffer, dataReady, makeDataReadyCallback, makeDataReadyRefcon, formatDescription, numSamples, presentationTimeStamp);
}

uint64_t CMBaseClassGetCFTypeID()
{
  return MEMORY[0x1E0C9EAF8]();
}

uint64_t CMBaseGetClassID()
{
  return MEMORY[0x1E0C9EB00]();
}

uint64_t CMBaseObjectGetClassID()
{
  return MEMORY[0x1E0C9EB08]();
}

uint64_t CMBaseObjectGetDerivedStorage()
{
  return MEMORY[0x1E0C9EB10]();
}

uint64_t CMBaseObjectGetProtocolVTable()
{
  return MEMORY[0x1E0C9EB18]();
}

uint64_t CMBaseObjectGetVTable()
{
  return MEMORY[0x1E0C9EB28]();
}

uint64_t CMBaseObjectImplementsProtocol()
{
  return MEMORY[0x1E0C9EB30]();
}

uint64_t CMBaseObjectIsMemberOfClass()
{
  return MEMORY[0x1E0C9EB38]();
}

uint64_t CMBeginUpdatingIncrementalCodeCoverageData()
{
  return MEMORY[0x1E0C9EB40]();
}

OSStatus CMBlockBufferAccessDataBytes(CMBlockBufferRef theBuffer, size_t offset, size_t length, void *temporaryBlock, char **returnedPointerOut)
{
  return MEMORY[0x1E0C9EB48](theBuffer, offset, length, temporaryBlock, returnedPointerOut);
}

OSStatus CMBlockBufferAppendBufferReference(CMBlockBufferRef theBuffer, CMBlockBufferRef targetBBuf, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags)
{
  return MEMORY[0x1E0C9EB50](theBuffer, targetBBuf, offsetToData, dataLength, *(_QWORD *)&flags);
}

OSStatus CMBlockBufferAppendMemoryBlock(CMBlockBufferRef theBuffer, void *memoryBlock, size_t blockLength, CFAllocatorRef blockAllocator, const CMBlockBufferCustomBlockSource *customBlockSource, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags)
{
  return MEMORY[0x1E0C9EB58](theBuffer, memoryBlock, blockLength, blockAllocator, customBlockSource, offsetToData, dataLength, *(_QWORD *)&flags);
}

OSStatus CMBlockBufferAssureBlockMemory(CMBlockBufferRef theBuffer)
{
  return MEMORY[0x1E0C9EB60](theBuffer);
}

OSStatus CMBlockBufferCopyDataBytes(CMBlockBufferRef theSourceBuffer, size_t offsetToData, size_t dataLength, void *destination)
{
  return MEMORY[0x1E0C9EB68](theSourceBuffer, offsetToData, dataLength, destination);
}

OSStatus CMBlockBufferCreateContiguous(CFAllocatorRef structureAllocator, CMBlockBufferRef sourceBuffer, CFAllocatorRef blockAllocator, const CMBlockBufferCustomBlockSource *customBlockSource, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9EB70](structureAllocator, sourceBuffer, blockAllocator, customBlockSource, offsetToData, dataLength, *(_QWORD *)&flags, blockBufferOut);
}

OSStatus CMBlockBufferCreateEmpty(CFAllocatorRef structureAllocator, uint32_t subBlockCapacity, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9EB78](structureAllocator, *(_QWORD *)&subBlockCapacity, *(_QWORD *)&flags, blockBufferOut);
}

OSStatus CMBlockBufferCreateWithBufferReference(CFAllocatorRef structureAllocator, CMBlockBufferRef bufferReference, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9EB80](structureAllocator, bufferReference, offsetToData, dataLength, *(_QWORD *)&flags, blockBufferOut);
}

OSStatus CMBlockBufferCreateWithMemoryBlock(CFAllocatorRef structureAllocator, void *memoryBlock, size_t blockLength, CFAllocatorRef blockAllocator, const CMBlockBufferCustomBlockSource *customBlockSource, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9EB88](structureAllocator, memoryBlock, blockLength, blockAllocator, customBlockSource, offsetToData, dataLength, *(_QWORD *)&flags);
}

OSStatus CMBlockBufferFillDataBytes(char fillByte, CMBlockBufferRef destinationBuffer, size_t offsetIntoDestination, size_t dataLength)
{
  return MEMORY[0x1E0C9EB90](fillByte, destinationBuffer, offsetIntoDestination, dataLength);
}

size_t CMBlockBufferGetDataLength(CMBlockBufferRef theBuffer)
{
  return MEMORY[0x1E0C9EB98](theBuffer);
}

OSStatus CMBlockBufferGetDataPointer(CMBlockBufferRef theBuffer, size_t offset, size_t *lengthAtOffsetOut, size_t *totalLengthOut, char **dataPointerOut)
{
  return MEMORY[0x1E0C9EBA8](theBuffer, offset, lengthAtOffsetOut, totalLengthOut, dataPointerOut);
}

CFTypeID CMBlockBufferGetTypeID(void)
{
  return MEMORY[0x1E0C9EBB0]();
}

Boolean CMBlockBufferIsEmpty(CMBlockBufferRef theBuffer)
{
  return MEMORY[0x1E0C9EBB8](theBuffer);
}

Boolean CMBlockBufferIsRangeContiguous(CMBlockBufferRef theBuffer, size_t offset, size_t length)
{
  return MEMORY[0x1E0C9EBC0](theBuffer, offset, length);
}

OSStatus CMBlockBufferReplaceDataBytes(const void *sourceBytes, CMBlockBufferRef destinationBuffer, size_t offsetIntoDestination, size_t dataLength)
{
  return MEMORY[0x1E0C9EBC8](sourceBytes, destinationBuffer, offsetIntoDestination, dataLength);
}

OSStatus CMBufferQueueCallForEachBuffer(CMBufferQueueRef queue, OSStatus (__cdecl *callback)(CMBufferRef, void *), void *refcon)
{
  return MEMORY[0x1E0C9EBD0](queue, callback, refcon);
}

CMBufferRef CMBufferQueueCopyHead(CMBufferQueueRef queue)
{
  return (CMBufferRef)MEMORY[0x1E0C9EBE0](queue);
}

OSStatus CMBufferQueueCreate(CFAllocatorRef allocator, CMItemCount capacity, const CMBufferCallbacks *callbacks, CMBufferQueueRef *queueOut)
{
  return MEMORY[0x1E0C9EBE8](allocator, capacity, callbacks, queueOut);
}

OSStatus CMBufferQueueCreateWithHandlers(CFAllocatorRef allocator, CMItemCount capacity, const CMBufferHandlers *handlers, CMBufferQueueRef *queueOut)
{
  return MEMORY[0x1E0C9EBF0](allocator, capacity, handlers, queueOut);
}

CMBufferRef CMBufferQueueDequeueAndRetain(CMBufferQueueRef queue)
{
  return (CMBufferRef)MEMORY[0x1E0C9EBF8](queue);
}

CMBufferRef CMBufferQueueDequeueIfDataReadyAndRetain(CMBufferQueueRef queue)
{
  return (CMBufferRef)MEMORY[0x1E0C9EC00](queue);
}

OSStatus CMBufferQueueEnqueue(CMBufferQueueRef queue, CMBufferRef buf)
{
  return MEMORY[0x1E0C9EC08](queue, buf);
}

CMItemCount CMBufferQueueGetBufferCount(CMBufferQueueRef queue)
{
  return MEMORY[0x1E0C9EC10](queue);
}

const CMBufferCallbacks *CMBufferQueueGetCallbacksForSampleBuffersSortedByOutputPTS(void)
{
  return (const CMBufferCallbacks *)MEMORY[0x1E0C9EC18]();
}

const CMBufferCallbacks *CMBufferQueueGetCallbacksForUnsortedSampleBuffers(void)
{
  return (const CMBufferCallbacks *)MEMORY[0x1E0C9EC20]();
}

CMTime *__cdecl CMBufferQueueGetDuration(CMTime *__return_ptr retstr, CMBufferQueueRef queue)
{
  return (CMTime *)MEMORY[0x1E0C9EC28](retstr, queue);
}

CMTime *__cdecl CMBufferQueueGetEndPresentationTimeStamp(CMTime *__return_ptr retstr, CMBufferQueueRef queue)
{
  return (CMTime *)MEMORY[0x1E0C9EC30](retstr, queue);
}

CMTime *__cdecl CMBufferQueueGetFirstPresentationTimeStamp(CMTime *__return_ptr retstr, CMBufferQueueRef queue)
{
  return (CMTime *)MEMORY[0x1E0C9EC40](retstr, queue);
}

CMBufferRef CMBufferQueueGetHead(CMBufferQueueRef queue)
{
  return (CMBufferRef)MEMORY[0x1E0C9EC48](queue);
}

CMTime *__cdecl CMBufferQueueGetMaxPresentationTimeStamp(CMTime *__return_ptr retstr, CMBufferQueueRef queue)
{
  return (CMTime *)MEMORY[0x1E0C9EC50](retstr, queue);
}

CMTime *__cdecl CMBufferQueueGetMinPresentationTimeStamp(CMTime *__return_ptr retstr, CMBufferQueueRef queue)
{
  return (CMTime *)MEMORY[0x1E0C9EC60](retstr, queue);
}

size_t CMBufferQueueGetTotalSize(CMBufferQueueRef queue)
{
  return MEMORY[0x1E0C9EC68](queue);
}

CFTypeID CMBufferQueueGetTypeID(void)
{
  return MEMORY[0x1E0C9EC70]();
}

OSStatus CMBufferQueueInstallTrigger(CMBufferQueueRef queue, CMBufferQueueTriggerCallback callback, void *refcon, CMBufferQueueTriggerCondition condition, CMTime *time, CMBufferQueueTriggerToken *triggerTokenOut)
{
  return MEMORY[0x1E0C9EC78](queue, callback, refcon, *(_QWORD *)&condition, time, triggerTokenOut);
}

OSStatus CMBufferQueueInstallTriggerWithIntegerThreshold(CMBufferQueueRef queue, CMBufferQueueTriggerCallback callback, void *refcon, CMBufferQueueTriggerCondition condition, CMItemCount threshold, CMBufferQueueTriggerToken *triggerTokenOut)
{
  return MEMORY[0x1E0C9EC90](queue, callback, refcon, *(_QWORD *)&condition, threshold, triggerTokenOut);
}

Boolean CMBufferQueueIsAtEndOfData(CMBufferQueueRef queue)
{
  return MEMORY[0x1E0C9EC98](queue);
}

Boolean CMBufferQueueIsEmpty(CMBufferQueueRef queue)
{
  return MEMORY[0x1E0C9ECA0](queue);
}

OSStatus CMBufferQueueMarkEndOfData(CMBufferQueueRef queue)
{
  return MEMORY[0x1E0C9ECA8](queue);
}

OSStatus CMBufferQueueRemoveTrigger(CMBufferQueueRef queue, CMBufferQueueTriggerToken triggerToken)
{
  return MEMORY[0x1E0C9ECB0](queue, triggerToken);
}

OSStatus CMBufferQueueReset(CMBufferQueueRef queue)
{
  return MEMORY[0x1E0C9ECB8](queue);
}

OSStatus CMBufferQueueResetWithCallback(CMBufferQueueRef queue, void (__cdecl *callback)(CMBufferRef, void *), void *refcon)
{
  return MEMORY[0x1E0C9ECC0](queue, callback, refcon);
}

OSStatus CMBufferQueueSetValidationCallback(CMBufferQueueRef queue, CMBufferValidationCallback callback, void *refcon)
{
  return MEMORY[0x1E0C9ECC8](queue, callback, refcon);
}

Boolean CMBufferQueueTestTrigger(CMBufferQueueRef queue, CMBufferQueueTriggerToken triggerToken)
{
  return MEMORY[0x1E0C9ECD8](queue, triggerToken);
}

uint64_t CMByteStreamAppend()
{
  return MEMORY[0x1E0C9ECE0]();
}

uint64_t CMByteStreamAppendBlockBuffer()
{
  return MEMORY[0x1E0C9ECE8]();
}

uint64_t CMByteStreamBaseGetTypeID()
{
  return MEMORY[0x1E0C9ECF0]();
}

uint64_t CMByteStreamCreateCompositeForRead()
{
  return MEMORY[0x1E0C9ECF8]();
}

uint64_t CMByteStreamCreateForBlockBuffer()
{
  return MEMORY[0x1E0C9ED00]();
}

uint64_t CMByteStreamCreateForFileURL()
{
  return MEMORY[0x1E0C9ED08]();
}

uint64_t CMByteStreamCreateWritableForBlockBuffer()
{
  return MEMORY[0x1E0C9ED10]();
}

uint64_t CMByteStreamGetCMBaseObject()
{
  return MEMORY[0x1E0C9ED18]();
}

uint64_t CMByteStreamGetClassID()
{
  return MEMORY[0x1E0C9ED20]();
}

uint64_t CMByteStreamWriteBlockBuffer()
{
  return MEMORY[0x1E0C9ED28]();
}

uint64_t CMClockConvertHostTimeToSystemUnits(CMTime *hostTime)
{
  return MEMORY[0x1E0C9ED30](hostTime);
}

OSStatus CMClockGetAnchorTime(CMClockRef clock, CMTime *clockTimeOut, CMTime *referenceClockTimeOut)
{
  return MEMORY[0x1E0C9ED38](clock, clockTimeOut, referenceClockTimeOut);
}

CMClockRef CMClockGetHostTimeClock(void)
{
  return (CMClockRef)MEMORY[0x1E0C9ED40]();
}

CMTime *__cdecl CMClockGetTime(CMTime *__return_ptr retstr, CMClockRef clock)
{
  return (CMTime *)MEMORY[0x1E0C9ED48](retstr, clock);
}

CFTypeID CMClockGetTypeID(void)
{
  return MEMORY[0x1E0C9ED50]();
}

CMTime *__cdecl CMClockMakeHostTimeFromSystemUnits(CMTime *__return_ptr retstr, uint64_t hostTime)
{
  return (CMTime *)MEMORY[0x1E0C9ED60](retstr, hostTime);
}

OSStatus CMClosedCaptionFormatDescriptionCopyAsBigEndianClosedCaptionDescriptionBlockBuffer(CFAllocatorRef allocator, CMClosedCaptionFormatDescriptionRef closedCaptionFormatDescription, CMClosedCaptionDescriptionFlavor flavor, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9ED70](allocator, closedCaptionFormatDescription, flavor, blockBufferOut);
}

OSStatus CMClosedCaptionFormatDescriptionCreateFromBigEndianClosedCaptionDescriptionBlockBuffer(CFAllocatorRef allocator, CMBlockBufferRef closedCaptionDescriptionBlockBuffer, CMClosedCaptionDescriptionFlavor flavor, CMClosedCaptionFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x1E0C9ED78](allocator, closedCaptionDescriptionBlockBuffer, flavor, formatDescriptionOut);
}

CFDictionaryRef CMCopyDictionaryOfAttachments(CFAllocatorRef allocator, CMAttachmentBearerRef target, CMAttachmentMode attachmentMode)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9ED80](allocator, target, *(_QWORD *)&attachmentMode);
}

uint64_t CMCreateContiguousBlockBufferFromStream()
{
  return MEMORY[0x1E0C9ED88]();
}

uint64_t CMDerivedObjectCreate()
{
  return MEMORY[0x1E0C9ED90]();
}

Boolean CMDoesBigEndianSoundDescriptionRequireLegacyCBRSampleTableLayout(CMBlockBufferRef soundDescriptionBlockBuffer, CMSoundDescriptionFlavor flavor)
{
  return MEMORY[0x1E0C9ED98](soundDescriptionBlockBuffer, flavor);
}

uint64_t CMEnsureReadyToCollectIncrementalCoverageData()
{
  return MEMORY[0x1E0C9EDA0]();
}

uint64_t CMFinishUpdatingIncrementalCodeCoverageData()
{
  return MEMORY[0x1E0C9EDA8]();
}

OSStatus CMFormatDescriptionCreate(CFAllocatorRef allocator, CMMediaType mediaType, FourCharCode mediaSubType, CFDictionaryRef extensions, CMFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x1E0C9EDB0](allocator, *(_QWORD *)&mediaType, *(_QWORD *)&mediaSubType, extensions, formatDescriptionOut);
}

Boolean CMFormatDescriptionEqual(CMFormatDescriptionRef formatDescription, CMFormatDescriptionRef otherFormatDescription)
{
  return MEMORY[0x1E0C9EDB8](formatDescription, otherFormatDescription);
}

Boolean CMFormatDescriptionEqualIgnoringExtensionKeys(CMFormatDescriptionRef formatDescription, CMFormatDescriptionRef otherFormatDescription, CFTypeRef formatDescriptionExtensionKeysToIgnore, CFTypeRef sampleDescriptionExtensionAtomKeysToIgnore)
{
  return MEMORY[0x1E0C9EDC0](formatDescription, otherFormatDescription, formatDescriptionExtensionKeysToIgnore, sampleDescriptionExtensionAtomKeysToIgnore);
}

CFPropertyListRef CMFormatDescriptionGetExtension(CMFormatDescriptionRef desc, CFStringRef extensionKey)
{
  return (CFPropertyListRef)MEMORY[0x1E0C9EDC8](desc, extensionKey);
}

CFDictionaryRef CMFormatDescriptionGetExtensions(CMFormatDescriptionRef desc)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9EDD0](desc);
}

FourCharCode CMFormatDescriptionGetMediaSubType(CMFormatDescriptionRef desc)
{
  return MEMORY[0x1E0C9EDD8](desc);
}

CMMediaType CMFormatDescriptionGetMediaType(CMFormatDescriptionRef desc)
{
  return MEMORY[0x1E0C9EDE0](desc);
}

CFTypeID CMFormatDescriptionGetTypeID(void)
{
  return MEMORY[0x1E0C9EDE8]();
}

uint64_t CMFormatDescriptionGetWidestColorPropertiesFromFormatDescriptions()
{
  return MEMORY[0x1E0C9EDF0]();
}

CFTypeRef CMGetAttachment(CMAttachmentBearerRef target, CFStringRef key, CMAttachmentMode *attachmentModeOut)
{
  return (CFTypeRef)MEMORY[0x1E0C9EE00](target, key, attachmentModeOut);
}

uint64_t CMHapticFormatDescriptionCopyAsBigEndianHapticDescriptionBlockBuffer()
{
  return MEMORY[0x1E0C9EE08]();
}

uint64_t CMHapticFormatDescriptionCreateFromBigEndianHapticDescriptionBlockBuffer()
{
  return MEMORY[0x1E0C9EE10]();
}

CMMemoryPoolRef CMMemoryPoolCreate(CFDictionaryRef options)
{
  return (CMMemoryPoolRef)MEMORY[0x1E0C9EE18](options);
}

CFAllocatorRef CMMemoryPoolGetAllocator(CMMemoryPoolRef pool)
{
  return (CFAllocatorRef)MEMORY[0x1E0C9EE28](pool);
}

void CMMemoryPoolInvalidate(CMMemoryPoolRef pool)
{
  MEMORY[0x1E0C9EE30](pool);
}

OSStatus CMMetadataCreateIdentifierForKeyAndKeySpace(CFAllocatorRef allocator, CFTypeRef key, CFStringRef keySpace, CFStringRef *identifierOut)
{
  return MEMORY[0x1E0C9EE38](allocator, key, keySpace, identifierOut);
}

OSStatus CMMetadataCreateKeyFromIdentifier(CFAllocatorRef allocator, CFStringRef identifier, CFTypeRef *keyOut)
{
  return MEMORY[0x1E0C9EE40](allocator, identifier, keyOut);
}

OSStatus CMMetadataCreateKeySpaceFromIdentifier(CFAllocatorRef allocator, CFStringRef identifier, CFStringRef *keySpaceOut)
{
  return MEMORY[0x1E0C9EE48](allocator, identifier, keySpaceOut);
}

OSStatus CMMetadataFormatDescriptionCopyAsBigEndianMetadataDescriptionBlockBuffer(CFAllocatorRef allocator, CMMetadataFormatDescriptionRef metadataFormatDescription, CMMetadataDescriptionFlavor flavor, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9EE68](allocator, metadataFormatDescription, flavor, blockBufferOut);
}

OSStatus CMMetadataFormatDescriptionCreateFromBigEndianMetadataDescriptionBlockBuffer(CFAllocatorRef allocator, CMBlockBufferRef metadataDescriptionBlockBuffer, CMMetadataDescriptionFlavor flavor, CMMetadataFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x1E0C9EE78](allocator, metadataDescriptionBlockBuffer, flavor, formatDescriptionOut);
}

CFArrayRef CMMetadataFormatDescriptionGetIdentifiers(CMMetadataFormatDescriptionRef desc)
{
  return (CFArrayRef)MEMORY[0x1E0C9EE98](desc);
}

CFDictionaryRef CMMetadataFormatDescriptionGetKeyWithLocalID(CMMetadataFormatDescriptionRef desc, OSType localKeyID)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9EEA0](desc, *(_QWORD *)&localKeyID);
}

uint64_t CMNotificationCenterAddListener()
{
  return MEMORY[0x1E0C9EEB8]();
}

uint64_t CMNotificationCenterBarrier()
{
  return MEMORY[0x1E0C9EEC0]();
}

uint64_t CMNotificationCenterGetDefaultLocalCenter()
{
  return MEMORY[0x1E0C9EEC8]();
}

uint64_t CMNotificationCenterPostNotification()
{
  return MEMORY[0x1E0C9EED0]();
}

uint64_t CMNotificationCenterRegisterForBarrierSupport()
{
  return MEMORY[0x1E0C9EED8]();
}

uint64_t CMNotificationCenterRemoveListener()
{
  return MEMORY[0x1E0C9EEE8]();
}

uint64_t CMNotificationCenterUnregisterForBarrierSupport()
{
  return MEMORY[0x1E0C9EEF0]();
}

uint64_t CMPhotoAuxiliaryImageMetadataCreateFromXMPData()
{
  return MEMORY[0x1E0D08B50]();
}

uint64_t CMPhotoAuxiliaryImageMetadataCreateXMPData()
{
  return MEMORY[0x1E0D08B58]();
}

uint64_t CMPhotoCascadingDownscale()
{
  return MEMORY[0x1E0D08B60]();
}

uint64_t CMPhotoCascadingDownscaleCreate()
{
  return MEMORY[0x1E0D08B68]();
}

uint64_t CMPhotoCascadingDownscaleDestroy()
{
  return MEMORY[0x1E0D08B70]();
}

uint64_t CMPhotoCompressionCreateContainerFromImageExt()
{
  return MEMORY[0x1E0D08B78]();
}

uint64_t CMPhotoCompressionCreateDataContainerFromImage()
{
  return MEMORY[0x1E0D08B80]();
}

uint64_t CMPhotoCompressionCreateNativePixelFormatArray()
{
  return MEMORY[0x1E0D08B88]();
}

uint64_t CMPhotoCompressionDiscardCaches()
{
  return MEMORY[0x1E0D08B90]();
}

uint64_t CMPhotoCompressionSessionAddAuxiliaryImage()
{
  return MEMORY[0x1E0D08B98]();
}

uint64_t CMPhotoCompressionSessionAddAuxiliaryImageFromDictionaryRepresentation()
{
  return MEMORY[0x1E0D08BA8]();
}

uint64_t CMPhotoCompressionSessionAddCompressedImage()
{
  return MEMORY[0x1E0D08BB8]();
}

uint64_t CMPhotoCompressionSessionAddCompressedMovie()
{
  return MEMORY[0x1E0D08BC0]();
}

uint64_t CMPhotoCompressionSessionAddDebugMetadata()
{
  return MEMORY[0x1E0D08BD0]();
}

uint64_t CMPhotoCompressionSessionAddExif ()
{
  return MEMORY[0x1E0D08BD8]();
}

uint64_t CMPhotoCompressionSessionAddImage()
{
  return MEMORY[0x1E0D08BF0]();
}

uint64_t CMPhotoCompressionSessionAddImageToSequence()
{
  return MEMORY[0x1E0D08C08]();
}

uint64_t CMPhotoCompressionSessionAddMetadataFromImageProperties()
{
  return MEMORY[0x1E0D08C10]();
}

uint64_t CMPhotoCompressionSessionAddThumbnail()
{
  return MEMORY[0x1E0D08C18]();
}

uint64_t CMPhotoCompressionSessionAddXMP()
{
  return MEMORY[0x1E0D08C28]();
}

uint64_t CMPhotoCompressionSessionCloseContainer()
{
  return MEMORY[0x1E0D08C30]();
}

uint64_t CMPhotoCompressionSessionCloseContainerAndCopyBacking()
{
  return MEMORY[0x1E0D08C38]();
}

uint64_t CMPhotoCompressionSessionCreate()
{
  return MEMORY[0x1E0D08C40]();
}

uint64_t CMPhotoCompressionSessionDiscardCaches()
{
  return MEMORY[0x1E0D08C48]();
}

uint64_t CMPhotoCompressionSessionEndImageSequence()
{
  return MEMORY[0x1E0D08C50]();
}

uint64_t CMPhotoCompressionSessionGetTypeID()
{
  return MEMORY[0x1E0D08C60]();
}

uint64_t CMPhotoCompressionSessionInvalidate()
{
  return MEMORY[0x1E0D08C68]();
}

uint64_t CMPhotoCompressionSessionIsContainerOpen()
{
  return MEMORY[0x1E0D08C70]();
}

uint64_t CMPhotoCompressionSessionOpenEmptyContainer()
{
  return MEMORY[0x1E0D08C78]();
}

uint64_t CMPhotoCompressionSessionOpenExistingContainer()
{
  return MEMORY[0x1E0D08C80]();
}

uint64_t CMPhotoCompressionSessionOpenExistingContainerForModification()
{
  return MEMORY[0x1E0D08C88]();
}

uint64_t CMPhotoCompressionSessionOpenExistingContainerForModificationF()
{
  return MEMORY[0x1E0D08C90]();
}

uint64_t CMPhotoCompressionSessionReleaseHardwareResources()
{
  return MEMORY[0x1E0D08C98]();
}

uint64_t CMPhotoCompressionSessionStartImageSequence()
{
  return MEMORY[0x1E0D08CA0]();
}

uint64_t CMPhotoCompressionSuggestedPaddingForOptions()
{
  return MEMORY[0x1E0D08CA8]();
}

uint64_t CMPhotoCompressionSupportedForContainerAndCodec()
{
  return MEMORY[0x1E0D08CB0]();
}

uint64_t CMPhotoCompressionWriteFileContainerFromImage()
{
  return MEMORY[0x1E0D08CB8]();
}

uint64_t CMPhotoCreateCompressionCompatiblePixelBuffer()
{
  return MEMORY[0x1E0D08CC0]();
}

uint64_t CMPhotoCreateFractionalPixelBuffer()
{
  return MEMORY[0x1E0D08CC8]();
}

uint64_t CMPhotoCreateIntegerPixelBufferFromFullPrecisionSource()
{
  return MEMORY[0x1E0D08CD0]();
}

uint64_t CMPhotoDNGCompressorAddAuxiliaryImage()
{
  return MEMORY[0x1E0D08CD8]();
}

uint64_t CMPhotoDNGCompressorCreate()
{
  return MEMORY[0x1E0D08CE0]();
}

uint64_t CMPhotoDNGCompressorCreateFromSourceDNG()
{
  return MEMORY[0x1E0D08CE8]();
}

uint64_t CMPhotoDNGCompressorCreateFromSourceDNGWithModificationHandler()
{
  return MEMORY[0x1E0D08CF0]();
}

uint64_t CMPhotoDNGCompressorFinalizeAndCreateData()
{
  return MEMORY[0x1E0D08CF8]();
}

uint64_t CMPhotoDNGCompressorFinalizeAndCreateSurface()
{
  return MEMORY[0x1E0D08D00]();
}

uint64_t CMPhotoDNGCompressorGetTypeID()
{
  return MEMORY[0x1E0D08D10]();
}

uint64_t CMPhotoDNGCompressorRemoveAuxiliaryImages()
{
  return MEMORY[0x1E0D08D18]();
}

uint64_t CMPhotoDNGCompressorReplaceMainImageOptions()
{
  return MEMORY[0x1E0D08D20]();
}

uint64_t CMPhotoDNGCompressorReplaceMainImageProperties()
{
  return MEMORY[0x1E0D08D28]();
}

uint64_t CMPhotoDNGCompressorSetCompressedPreviewImage()
{
  return MEMORY[0x1E0D08D30]();
}

uint64_t CMPhotoDNGCompressorSetMainImage()
{
  return MEMORY[0x1E0D08D38]();
}

uint64_t CMPhotoDNGCompressorSetPreviewImage()
{
  return MEMORY[0x1E0D08D40]();
}

uint64_t CMPhotoDNGCompressorSetPreviewImageFromRAW()
{
  return MEMORY[0x1E0D08D48]();
}

uint64_t CMPhotoDNGCreateCVPixelBufferFromData()
{
  return MEMORY[0x1E0D08D50]();
}

uint64_t CMPhotoDNGCreateCompressedDataFromRAWPixelBuffer()
{
  return MEMORY[0x1E0D08D58]();
}

uint64_t CMPhotoDNGCreateDNGFromCompressedData()
{
  return MEMORY[0x1E0D08D60]();
}

uint64_t CMPhotoDNGCreateDNGFromRAWPixelBuffer()
{
  return MEMORY[0x1E0D08D68]();
}

uint64_t CMPhotoDNGCreateDNGFromRAWPixelBufferAndAuxiliaryImage()
{
  return MEMORY[0x1E0D08D70]();
}

uint64_t CMPhotoDNGCreateLinearDNGFromPixelBuffer()
{
  return MEMORY[0x1E0D08D78]();
}

uint64_t CMPhotoDNGGetLightSourceTagFromTemp()
{
  return MEMORY[0x1E0D08D80]();
}

uint64_t CMPhotoDNGUnpack()
{
  return MEMORY[0x1E0D08D88]();
}

uint64_t CMPhotoDecompressionContainerCancelAsyncRequest()
{
  return MEMORY[0x1E0D08D98]();
}

uint64_t CMPhotoDecompressionContainerCopyAuxiliaryImageBitDepthForIndex()
{
  return MEMORY[0x1E0D08DA0]();
}

uint64_t CMPhotoDecompressionContainerCopyAuxiliaryImageCGColorSpaceForIndex()
{
  return MEMORY[0x1E0D08DA8]();
}

uint64_t CMPhotoDecompressionContainerCopyAuxiliaryImageFormatDescriptionForIndex()
{
  return MEMORY[0x1E0D08DB0]();
}

uint64_t CMPhotoDecompressionContainerCopyAuxiliaryImageMetadataForIndex()
{
  return MEMORY[0x1E0D08DB8]();
}

uint64_t CMPhotoDecompressionContainerCopyAuxiliaryImageSubTypeDataForIndex()
{
  return MEMORY[0x1E0D08DC8]();
}

uint64_t CMPhotoDecompressionContainerCopyAuxiliaryImageTypeURNForIndex()
{
  return MEMORY[0x1E0D08DD0]();
}

uint64_t CMPhotoDecompressionContainerCopyCGColorSpaceForIndex()
{
  return MEMORY[0x1E0D08DE0]();
}

uint64_t CMPhotoDecompressionContainerCopyDebugMetadataForIndex()
{
  return MEMORY[0x1E0D08DF0]();
}

uint64_t CMPhotoDecompressionContainerCopyExifForIndex()
{
  return MEMORY[0x1E0D08DF8]();
}

uint64_t CMPhotoDecompressionContainerCopyFormatDescriptionForIndex()
{
  return MEMORY[0x1E0D08E00]();
}

uint64_t CMPhotoDecompressionContainerCopyImageBitDepthForIndex()
{
  return MEMORY[0x1E0D08E08]();
}

uint64_t CMPhotoDecompressionContainerCopyImageIsRGBForIndex()
{
  return MEMORY[0x1E0D08E10]();
}

uint64_t CMPhotoDecompressionContainerCopyImagePropertiesForIndex()
{
  return MEMORY[0x1E0D08E18]();
}

uint64_t CMPhotoDecompressionContainerCopyImageSubsamplingForIndex()
{
  return MEMORY[0x1E0D08E20]();
}

uint64_t CMPhotoDecompressionContainerCopyThumbnailBitDepthForIndex()
{
  return MEMORY[0x1E0D08E28]();
}

uint64_t CMPhotoDecompressionContainerCopyThumbnailFormatDescriptionForIndex()
{
  return MEMORY[0x1E0D08E30]();
}

uint64_t CMPhotoDecompressionContainerCopyXMPForIndex()
{
  return MEMORY[0x1E0D08E38]();
}

uint64_t CMPhotoDecompressionContainerCreateAuxiliaryImageDictionaryRepresentation()
{
  return MEMORY[0x1E0D08E40]();
}

uint64_t CMPhotoDecompressionContainerCreateAuxiliaryImageForIndex()
{
  return MEMORY[0x1E0D08E48]();
}

uint64_t CMPhotoDecompressionContainerCreateDictionaryDescription()
{
  return MEMORY[0x1E0D08E50]();
}

uint64_t CMPhotoDecompressionContainerCreateImageForIndex()
{
  return MEMORY[0x1E0D08E58]();
}

uint64_t CMPhotoDecompressionContainerCreateOutputBufferAttributesForAuxiliaryImageIndex()
{
  return MEMORY[0x1E0D08E60]();
}

uint64_t CMPhotoDecompressionContainerCreateOutputBufferAttributesForImageIndex()
{
  return MEMORY[0x1E0D08E68]();
}

uint64_t CMPhotoDecompressionContainerCreateOutputBufferAttributesForThumbnailIndex()
{
  return MEMORY[0x1E0D08E70]();
}

uint64_t CMPhotoDecompressionContainerCreateSequenceContainer()
{
  return MEMORY[0x1E0D08E78]();
}

uint64_t CMPhotoDecompressionContainerCreateThumbnailImageForIndex()
{
  return MEMORY[0x1E0D08E80]();
}

uint64_t CMPhotoDecompressionContainerCreateTileIteratorForAuxiliaryImageIndex()
{
  return MEMORY[0x1E0D08E88]();
}

uint64_t CMPhotoDecompressionContainerCreateTileIteratorForIndex()
{
  return MEMORY[0x1E0D08E90]();
}

uint64_t CMPhotoDecompressionContainerCreateTileIteratorForThumbnailImageIndex()
{
  return MEMORY[0x1E0D08E98]();
}

uint64_t CMPhotoDecompressionContainerDecodeAuxiliaryImageForIndexAsync()
{
  return MEMORY[0x1E0D08EA0]();
}

uint64_t CMPhotoDecompressionContainerDecodeAuxiliaryImageForIndexAsyncF()
{
  return MEMORY[0x1E0D08EA8]();
}

uint64_t CMPhotoDecompressionContainerDecodeImageForIndexAsync()
{
  return MEMORY[0x1E0D08EB0]();
}

uint64_t CMPhotoDecompressionContainerDecodeImageForIndexAsyncF()
{
  return MEMORY[0x1E0D08EB8]();
}

uint64_t CMPhotoDecompressionContainerDecodeThumbnailForIndexAsync()
{
  return MEMORY[0x1E0D08EC0]();
}

uint64_t CMPhotoDecompressionContainerDecodeThumbnailForIndexAsyncF()
{
  return MEMORY[0x1E0D08EC8]();
}

uint64_t CMPhotoDecompressionContainerDetectSourceIsMIAF()
{
  return MEMORY[0x1E0D08ED0]();
}

uint64_t CMPhotoDecompressionContainerGetAuxiliaryImageCountForIndex()
{
  return MEMORY[0x1E0D08ED8]();
}

uint64_t CMPhotoDecompressionContainerGetAuxiliaryImageDimensionsForIndex()
{
  return MEMORY[0x1E0D08EE8]();
}

uint64_t CMPhotoDecompressionContainerGetAuxiliaryImageGeometryForIndex()
{
  return MEMORY[0x1E0D08EF0]();
}

uint64_t CMPhotoDecompressionContainerGetAuxiliaryImageTypeForIndex()
{
  return MEMORY[0x1E0D08F00]();
}

uint64_t CMPhotoDecompressionContainerGetContainerFormat()
{
  return MEMORY[0x1E0D08F08]();
}

uint64_t CMPhotoDecompressionContainerGetDebugMetadataCountForIndex()
{
  return MEMORY[0x1E0D08F10]();
}

uint64_t CMPhotoDecompressionContainerGetExifCountForIndex()
{
  return MEMORY[0x1E0D08F18]();
}

uint64_t CMPhotoDecompressionContainerGetImageCount()
{
  return MEMORY[0x1E0D08F20]();
}

uint64_t CMPhotoDecompressionContainerGetImageGeometryForIndex()
{
  return MEMORY[0x1E0D08F30]();
}

uint64_t CMPhotoDecompressionContainerGetPrimaryItemIndex()
{
  return MEMORY[0x1E0D08F40]();
}

uint64_t CMPhotoDecompressionContainerGetSequenceCount()
{
  return MEMORY[0x1E0D08F50]();
}

uint64_t CMPhotoDecompressionContainerGetThumbnailCountForIndex()
{
  return MEMORY[0x1E0D08F58]();
}

uint64_t CMPhotoDecompressionContainerGetThumbnailDimensionsForIndex()
{
  return MEMORY[0x1E0D08F60]();
}

uint64_t CMPhotoDecompressionContainerGetThumbnailGeometryForIndex()
{
  return MEMORY[0x1E0D08F68]();
}

uint64_t CMPhotoDecompressionContainerGetTypeID()
{
  return MEMORY[0x1E0D08F70]();
}

uint64_t CMPhotoDecompressionContainerGetVideoAndAudioCount()
{
  return MEMORY[0x1E0D08F78]();
}

uint64_t CMPhotoDecompressionContainerGetXMPCountForIndex()
{
  return MEMORY[0x1E0D08F80]();
}

uint64_t CMPhotoDecompressionContainerJFIFTranscode()
{
  return MEMORY[0x1E0D08F88]();
}

uint64_t CMPhotoDecompressionContainerPredictTranscodedSize()
{
  return MEMORY[0x1E0D08F90]();
}

uint64_t CMPhotoDecompressionCreateCGImageForIndex()
{
  return MEMORY[0x1E0D08F98]();
}

uint64_t CMPhotoDecompressionCreateCVPixelBufferForIndex()
{
  return MEMORY[0x1E0D08FA0]();
}

uint64_t CMPhotoDecompressionCreateNativePixelFormatArray()
{
  return MEMORY[0x1E0D08FA8]();
}

uint64_t CMPhotoDecompressionDecodeIntoRGBSurfaceForIndex()
{
  return MEMORY[0x1E0D08FB0]();
}

uint64_t CMPhotoDecompressionDetectContainerFormat()
{
  return MEMORY[0x1E0D08FB8]();
}

uint64_t CMPhotoDecompressionDetectSourceIsMIAF()
{
  return MEMORY[0x1E0D08FC0]();
}

uint64_t CMPhotoDecompressionDiscardCaches()
{
  return MEMORY[0x1E0D08FC8]();
}

uint64_t CMPhotoDecompressionGetImageCount()
{
  return MEMORY[0x1E0D08FD0]();
}

uint64_t CMPhotoDecompressionGetImageGeometryForIndex()
{
  return MEMORY[0x1E0D08FD8]();
}

uint64_t CMPhotoDecompressionSessionCreate()
{
  return MEMORY[0x1E0D08FE0]();
}

uint64_t CMPhotoDecompressionSessionCreateContainer()
{
  return MEMORY[0x1E0D08FE8]();
}

uint64_t CMPhotoDecompressionSessionDetachSurface()
{
  return MEMORY[0x1E0D08FF0]();
}

uint64_t CMPhotoDecompressionSessionDiscardCachedBuffers()
{
  return MEMORY[0x1E0D08FF8]();
}

uint64_t CMPhotoDecompressionSessionGetTypeID()
{
  return MEMORY[0x1E0D09008]();
}

uint64_t CMPhotoDecompressionSessionReleaseHardwareResources()
{
  return MEMORY[0x1E0D09010]();
}

uint64_t CMPhotoDecompressionSessionReserveRequestID()
{
  return MEMORY[0x1E0D09018]();
}

uint64_t CMPhotoDecompressionSessionSupportsCodec()
{
  return MEMORY[0x1E0D09020]();
}

uint64_t CMPhotoDecompressionSetAsyncPreDecodeCallback()
{
  return MEMORY[0x1E0D09028]();
}

uint64_t CMPhotoDecompressionSetHardwareCutoff()
{
  return MEMORY[0x1E0D09030]();
}

uint64_t CMPhotoDecompressionSupportedForContainerAndCodec()
{
  return MEMORY[0x1E0D09038]();
}

uint64_t CMPhotoDecompressionTileIteratorCancelAsyncRequest()
{
  return MEMORY[0x1E0D09040]();
}

uint64_t CMPhotoDecompressionTileIteratorCopyTileSampleBuffer()
{
  return MEMORY[0x1E0D09048]();
}

uint64_t CMPhotoDecompressionTileIteratorDecodeTileAsync()
{
  return MEMORY[0x1E0D09050]();
}

uint64_t CMPhotoDecompressionTileIteratorDecodeTileAsyncF()
{
  return MEMORY[0x1E0D09058]();
}

uint64_t CMPhotoDecompressionTileIteratorGetTileItemType()
{
  return MEMORY[0x1E0D09060]();
}

uint64_t CMPhotoDecompressionTileIteratorGetTileSourceRect()
{
  return MEMORY[0x1E0D09068]();
}

uint64_t CMPhotoDecompressionTileIteratorGetTypeID()
{
  return MEMORY[0x1E0D09070]();
}

uint64_t CMPhotoDecompressionTileIteratorMoveToPosition()
{
  return MEMORY[0x1E0D09078]();
}

uint64_t CMPhotoDecompressionTileIteratorReset()
{
  return MEMORY[0x1E0D09080]();
}

uint64_t CMPhotoDecompressionTileIteratorStepAndReportPosition()
{
  return MEMORY[0x1E0D09088]();
}

uint64_t CMPhotoGetAPIVersion()
{
  return MEMORY[0x1E0D09098]();
}

uint64_t CMPhotoJPEGAddMPDataToJPEG()
{
  return MEMORY[0x1E0D090A0]();
}

uint64_t CMPhotoJPEGCachedConnectionCreateJPEGSbufFromBuffer()
{
  return MEMORY[0x1E0D090A8]();
}

uint64_t CMPhotoJPEGCalculateOutputDimensions()
{
  return MEMORY[0x1E0D090B0]();
}

uint64_t CMPhotoJPEGCopyMPDataFromJPEG()
{
  return MEMORY[0x1E0D090B8]();
}

uint64_t CMPhotoJPEGCreateCGImageFromIOSurface()
{
  return MEMORY[0x1E0D090C0]();
}

uint64_t CMPhotoJPEGCreateCGImageFromJPEG()
{
  return MEMORY[0x1E0D090C8]();
}

uint64_t CMPhotoJPEGCreateIOSurfaceFromJPEG()
{
  return MEMORY[0x1E0D090D0]();
}

uint64_t CMPhotoJPEGCreateJPEGFromCVPixelBuffer()
{
  return MEMORY[0x1E0D090D8]();
}

uint64_t CMPhotoJPEGCreateJPEGFromIOSurface()
{
  return MEMORY[0x1E0D090E0]();
}

uint64_t CMPhotoJPEGCreateJPEGFromSbuf()
{
  return MEMORY[0x1E0D090E8]();
}

uint64_t CMPhotoJPEGCreateJPEGNativePixelFormatArray()
{
  return MEMORY[0x1E0D090F0]();
}

uint64_t CMPhotoJPEGCreateJPEGNativeSubsamplingArray()
{
  return MEMORY[0x1E0D090F8]();
}

uint64_t CMPhotoJPEGCreateJPEGOutputIOSurface()
{
  return MEMORY[0x1E0D09100]();
}

uint64_t CMPhotoJPEGCreateJPEGSbufFromBuffer()
{
  return MEMORY[0x1E0D09108]();
}

uint64_t CMPhotoJPEGCreateNativeDecodePixelFormatArray()
{
  return MEMORY[0x1E0D09110]();
}

uint64_t CMPhotoJPEGDecodeJPEGIntoSurface()
{
  return MEMORY[0x1E0D09118]();
}

uint64_t CMPhotoJPEGDecodeSessionCancelRequest()
{
  return MEMORY[0x1E0D09120]();
}

uint64_t CMPhotoJPEGDecodeSessionCopyPoolDebugInfo()
{
  return MEMORY[0x1E0D09128]();
}

uint64_t CMPhotoJPEGDecodeSessionCreate()
{
  return MEMORY[0x1E0D09130]();
}

uint64_t CMPhotoJPEGDecodeSessionCreateCGImageFromData()
{
  return MEMORY[0x1E0D09138]();
}

uint64_t CMPhotoJPEGDecodeSessionCreateCVPixelBufferFromData()
{
  return MEMORY[0x1E0D09140]();
}

uint64_t CMPhotoJPEGDecodeSessionDecodeDataToCGImageAsynchronously()
{
  return MEMORY[0x1E0D09148]();
}

uint64_t CMPhotoJPEGDecodeSessionDecodeDataToCVPixelBufferAsynchronously()
{
  return MEMORY[0x1E0D09150]();
}

uint64_t CMPhotoJPEGDecodeSessionDiscardCachedBuffers()
{
  return MEMORY[0x1E0D09158]();
}

uint64_t CMPhotoJPEGDecodeSessionGetTypeID()
{
  return MEMORY[0x1E0D09160]();
}

uint64_t CMPhotoJPEGDecodeSessionLogCGImageBackingConversion()
{
  return MEMORY[0x1E0D09168]();
}

uint64_t CMPhotoJPEGEncodeSessionCreate()
{
  return MEMORY[0x1E0D09170]();
}

uint64_t CMPhotoJPEGEncodeSessionCreateJPEGSbufFromBuffer()
{
  return MEMORY[0x1E0D09178]();
}

uint64_t CMPhotoJPEGEncodeSessionGetTypeID()
{
  return MEMORY[0x1E0D09180]();
}

uint64_t CMPhotoJPEGGetDecodeTiming()
{
  return MEMORY[0x1E0D09188]();
}

uint64_t CMPhotoJPEGGetEncodeTiming()
{
  return MEMORY[0x1E0D09190]();
}

uint64_t CMPhotoJPEGGetMPDataCountFromJPEG()
{
  return MEMORY[0x1E0D09198]();
}

uint64_t CMPhotoJPEGGetMaximumHardwareOutputDimensions()
{
  return MEMORY[0x1E0D091A0]();
}

uint64_t CMPhotoJPEGPreload()
{
  return MEMORY[0x1E0D091A8]();
}

uint64_t CMPhotoJPEGShouldUseHardwareDecode()
{
  return MEMORY[0x1E0D091B0]();
}

uint64_t CMPhotoJPEGWriteMPFWithJPEG()
{
  return MEMORY[0x1E0D091B8]();
}

uint64_t CMPhotoReleaseHardwareResources()
{
  return MEMORY[0x1E0D091C0]();
}

uint64_t CMPhotoScaleAndRotateSessionCreate()
{
  return MEMORY[0x1E0D091C8]();
}

uint64_t CMPhotoScaleAndRotateSessionDiscardCaches()
{
  return MEMORY[0x1E0D091D0]();
}

uint64_t CMPhotoScaleAndRotateSessionGetTypeID()
{
  return MEMORY[0x1E0D091D8]();
}

uint64_t CMPhotoScaleAndRotateSessionTransformForMaxSideLength()
{
  return MEMORY[0x1E0D091E0]();
}

uint64_t CMPhotoScaleAndRotateSessionTransformForSize()
{
  return MEMORY[0x1E0D091E8]();
}

uint64_t CMPhotoScaleAndRotateSessionTransformIntoCanvas()
{
  return MEMORY[0x1E0D091F0]();
}

uint64_t CMPhotoSupportsHEVCHWDecode()
{
  return MEMORY[0x1E0D091F8]();
}

uint64_t CMPhotoSupportsHEVCHWEncode()
{
  return MEMORY[0x1E0D09200]();
}

uint64_t CMPhotoSurfacePoolCreate()
{
  return MEMORY[0x1E0D09208]();
}

uint64_t CMPhotoSurfacePoolCreateImageSurface()
{
  return MEMORY[0x1E0D09210]();
}

uint64_t CMPhotoSurfacePoolCreateMemorySurface()
{
  return MEMORY[0x1E0D09218]();
}

uint64_t CMPhotoSurfacePoolCreatePixelBuffer()
{
  return MEMORY[0x1E0D09220]();
}

uint64_t CMPhotoSurfacePoolDetachImageSurface()
{
  return MEMORY[0x1E0D09228]();
}

uint64_t CMPhotoSurfacePoolDetachMemorySurface()
{
  return MEMORY[0x1E0D09230]();
}

uint64_t CMPhotoSurfacePoolDiscardCaches()
{
  return MEMORY[0x1E0D09238]();
}

uint64_t CMPhotoSurfacePoolGetTypeID()
{
  return MEMORY[0x1E0D09240]();
}

uint64_t CMPointCloudFormatDescriptionCreateFromBigEndianPointCloudDescriptionBlockBuffer()
{
  return MEMORY[0x1E0C9EEF8]();
}

void CMPropagateAttachments(CMAttachmentBearerRef source, CMAttachmentBearerRef destination)
{
  MEMORY[0x1E0C9EF08](source, destination);
}

void CMRemoveAttachment(CMAttachmentBearerRef target, CFStringRef key)
{
  MEMORY[0x1E0C9EF18](target, key);
}

OSStatus CMSampleBufferCallBlockForEachSample(CMSampleBufferRef sbuf, void *handler)
{
  return MEMORY[0x1E0C9EF20](sbuf, handler);
}

OSStatus CMSampleBufferCallForEachSample(CMSampleBufferRef sbuf, OSStatus (__cdecl *callback)(CMSampleBufferRef, CMItemCount, void *), void *refcon)
{
  return MEMORY[0x1E0C9EF28](sbuf, callback, refcon);
}

OSStatus CMSampleBufferCopySampleBufferForRange(CFAllocatorRef allocator, CMSampleBufferRef sbuf, CFRange sampleRange, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EF38](allocator, sbuf, sampleRange.location, sampleRange.length, sampleBufferOut);
}

OSStatus CMSampleBufferCreate(CFAllocatorRef allocator, CMBlockBufferRef dataBuffer, Boolean dataReady, CMSampleBufferMakeDataReadyCallback makeDataReadyCallback, void *makeDataReadyRefcon, CMFormatDescriptionRef formatDescription, CMItemCount numSamples, CMItemCount numSampleTimingEntries, const CMSampleTimingInfo *sampleTimingArray, CMItemCount numSampleSizeEntries, const size_t *sampleSizeArray, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EF40](allocator, dataBuffer, dataReady, makeDataReadyCallback, makeDataReadyRefcon, formatDescription, numSamples, numSampleTimingEntries);
}

OSStatus CMSampleBufferCreateCopy(CFAllocatorRef allocator, CMSampleBufferRef sbuf, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EF48](allocator, sbuf, sampleBufferOut);
}

OSStatus CMSampleBufferCreateCopyWithNewTiming(CFAllocatorRef allocator, CMSampleBufferRef originalSBuf, CMItemCount numSampleTimingEntries, const CMSampleTimingInfo *sampleTimingArray, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EF50](allocator, originalSBuf, numSampleTimingEntries, sampleTimingArray, sampleBufferOut);
}

OSStatus CMSampleBufferCreateForImageBuffer(CFAllocatorRef allocator, CVImageBufferRef imageBuffer, Boolean dataReady, CMSampleBufferMakeDataReadyCallback makeDataReadyCallback, void *makeDataReadyRefcon, CMVideoFormatDescriptionRef formatDescription, const CMSampleTimingInfo *sampleTiming, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EF58](allocator, imageBuffer, dataReady, makeDataReadyCallback, makeDataReadyRefcon, formatDescription, sampleTiming, sampleBufferOut);
}

OSStatus CMSampleBufferCreateForTaggedBufferGroup(CFAllocatorRef allocator, CMTaggedBufferGroupRef taggedBufferGroup, CMTime *sbufPTS, CMTime *sbufDuration, CMTaggedBufferGroupFormatDescriptionRef formatDescription, CMSampleBufferRef *sBufOut)
{
  return MEMORY[0x1E0C9EF68](allocator, taggedBufferGroup, sbufPTS, sbufDuration, formatDescription, sBufOut);
}

OSStatus CMSampleBufferCreateReady(CFAllocatorRef allocator, CMBlockBufferRef dataBuffer, CMFormatDescriptionRef formatDescription, CMItemCount numSamples, CMItemCount numSampleTimingEntries, const CMSampleTimingInfo *sampleTimingArray, CMItemCount numSampleSizeEntries, const size_t *sampleSizeArray, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EF70](allocator, dataBuffer, formatDescription, numSamples, numSampleTimingEntries, sampleTimingArray, numSampleSizeEntries, sampleSizeArray);
}

OSStatus CMSampleBufferCreateReadyWithImageBuffer(CFAllocatorRef allocator, CVImageBufferRef imageBuffer, CMVideoFormatDescriptionRef formatDescription, const CMSampleTimingInfo *sampleTiming, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EF80](allocator, imageBuffer, formatDescription, sampleTiming, sampleBufferOut);
}

Boolean CMSampleBufferDataIsReady(CMSampleBufferRef sbuf)
{
  return MEMORY[0x1E0C9EF90](sbuf);
}

OSStatus CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer(CMSampleBufferRef sbuf, size_t *bufferListSizeNeededOut, AudioBufferList *bufferListOut, size_t bufferListSize, CFAllocatorRef blockBufferStructureAllocator, CFAllocatorRef blockBufferBlockAllocator, uint32_t flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9EF98](sbuf, bufferListSizeNeededOut, bufferListOut, bufferListSize, blockBufferStructureAllocator, blockBufferBlockAllocator, *(_QWORD *)&flags, blockBufferOut);
}

OSStatus CMSampleBufferGetAudioStreamPacketDescriptionsPtr(CMSampleBufferRef sbuf, const AudioStreamPacketDescription **packetDescriptionsPointerOut, size_t *packetDescriptionsSizeOut)
{
  return MEMORY[0x1E0C9EFA8](sbuf, packetDescriptionsPointerOut, packetDescriptionsSizeOut);
}

CMBlockBufferRef CMSampleBufferGetDataBuffer(CMSampleBufferRef sbuf)
{
  return (CMBlockBufferRef)MEMORY[0x1E0C9EFB0](sbuf);
}

CMTime *__cdecl CMSampleBufferGetDecodeTimeStamp(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1E0C9EFC0](retstr, sbuf);
}

CMTime *__cdecl CMSampleBufferGetDuration(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1E0C9EFC8](retstr, sbuf);
}

CMFormatDescriptionRef CMSampleBufferGetFormatDescription(CMSampleBufferRef sbuf)
{
  return (CMFormatDescriptionRef)MEMORY[0x1E0C9EFD0](sbuf);
}

CVImageBufferRef CMSampleBufferGetImageBuffer(CMSampleBufferRef sbuf)
{
  return (CVImageBufferRef)MEMORY[0x1E0C9EFD8](sbuf);
}

CMItemCount CMSampleBufferGetNumSamples(CMSampleBufferRef sbuf)
{
  return MEMORY[0x1E0C9EFE0](sbuf);
}

CMTime *__cdecl CMSampleBufferGetOutputDecodeTimeStamp(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1E0C9EFE8](retstr, sbuf);
}

CMTime *__cdecl CMSampleBufferGetOutputDuration(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1E0C9EFF0](retstr, sbuf);
}

CMTime *__cdecl CMSampleBufferGetOutputPresentationTimeStamp(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1E0C9EFF8](retstr, sbuf);
}

OSStatus CMSampleBufferGetOutputSampleTimingInfoArray(CMSampleBufferRef sbuf, CMItemCount timingArrayEntries, CMSampleTimingInfo *timingArrayOut, CMItemCount *timingArrayEntriesNeededOut)
{
  return MEMORY[0x1E0C9F000](sbuf, timingArrayEntries, timingArrayOut, timingArrayEntriesNeededOut);
}

CMTime *__cdecl CMSampleBufferGetPresentationTimeStamp(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1E0C9F008](retstr, sbuf);
}

CFArrayRef CMSampleBufferGetSampleAttachmentsArray(CMSampleBufferRef sbuf, Boolean createIfNecessary)
{
  return (CFArrayRef)MEMORY[0x1E0C9F010](sbuf, createIfNecessary);
}

size_t CMSampleBufferGetSampleSize(CMSampleBufferRef sbuf, CMItemIndex sampleIndex)
{
  return MEMORY[0x1E0C9F018](sbuf, sampleIndex);
}

OSStatus CMSampleBufferGetSampleSizeArray(CMSampleBufferRef sbuf, CMItemCount sizeArrayEntries, size_t *sizeArrayOut, CMItemCount *sizeArrayEntriesNeededOut)
{
  return MEMORY[0x1E0C9F020](sbuf, sizeArrayEntries, sizeArrayOut, sizeArrayEntriesNeededOut);
}

OSStatus CMSampleBufferGetSampleTimingInfo(CMSampleBufferRef sbuf, CMItemIndex sampleIndex, CMSampleTimingInfo *timingInfoOut)
{
  return MEMORY[0x1E0C9F028](sbuf, sampleIndex, timingInfoOut);
}

OSStatus CMSampleBufferGetSampleTimingInfoArray(CMSampleBufferRef sbuf, CMItemCount numSampleTimingEntries, CMSampleTimingInfo *timingArrayOut, CMItemCount *timingArrayEntriesNeededOut)
{
  return MEMORY[0x1E0C9F030](sbuf, numSampleTimingEntries, timingArrayOut, timingArrayEntriesNeededOut);
}

CMTaggedBufferGroupRef CMSampleBufferGetTaggedBufferGroup(CMSampleBufferRef sbuf)
{
  return (CMTaggedBufferGroupRef)MEMORY[0x1E0C9F038](sbuf);
}

size_t CMSampleBufferGetTotalSampleSize(CMSampleBufferRef sbuf)
{
  return MEMORY[0x1E0C9F040](sbuf);
}

CFTypeID CMSampleBufferGetTypeID(void)
{
  return MEMORY[0x1E0C9F048]();
}

Boolean CMSampleBufferHasDataFailed(CMSampleBufferRef sbuf, OSStatus *statusOut)
{
  return MEMORY[0x1E0C9F050](sbuf, statusOut);
}

OSStatus CMSampleBufferInvalidate(CMSampleBufferRef sbuf)
{
  return MEMORY[0x1E0C9F058](sbuf);
}

Boolean CMSampleBufferIsValid(CMSampleBufferRef sbuf)
{
  return MEMORY[0x1E0C9F060](sbuf);
}

OSStatus CMSampleBufferSetDataBuffer(CMSampleBufferRef sbuf, CMBlockBufferRef dataBuffer)
{
  return MEMORY[0x1E0C9F070](sbuf, dataBuffer);
}

OSStatus CMSampleBufferSetDataFailed(CMSampleBufferRef sbuf, OSStatus status)
{
  return MEMORY[0x1E0C9F080](sbuf, *(_QWORD *)&status);
}

OSStatus CMSampleBufferSetDataReady(CMSampleBufferRef sbuf)
{
  return MEMORY[0x1E0C9F088](sbuf);
}

uint64_t CMSampleBufferSetDataReadyWithNewSize()
{
  return MEMORY[0x1E0C9F090]();
}

OSStatus CMSampleBufferSetInvalidateCallback(CMSampleBufferRef sbuf, CMSampleBufferInvalidateCallback invalidateCallback, uint64_t invalidateRefCon)
{
  return MEMORY[0x1E0C9F098](sbuf, invalidateCallback, invalidateRefCon);
}

OSStatus CMSampleBufferSetOutputPresentationTimeStamp(CMSampleBufferRef sbuf, CMTime *outputPresentationTimeStamp)
{
  return MEMORY[0x1E0C9F0A8](sbuf, outputPresentationTimeStamp);
}

OSStatus CMSampleBufferTrackDataReadiness(CMSampleBufferRef sbuf, CMSampleBufferRef sampleBufferToTrack)
{
  return MEMORY[0x1E0C9F0B0](sbuf, sampleBufferToTrack);
}

uint64_t CMSceneFormatDescriptionCopyAsBigEndianSceneDescriptionBlockBuffer()
{
  return MEMORY[0x1E0C9F0B8]();
}

uint64_t CMSceneFormatDescriptionCreateFromBigEndianSceneDescriptionBlockBuffer()
{
  return MEMORY[0x1E0C9F0C0]();
}

uint64_t CMSessionBeginInterruption()
{
  return MEMORY[0x1E0D48318]();
}

uint64_t CMSessionCopyProperty()
{
  return MEMORY[0x1E0D48328]();
}

uint64_t CMSessionCreate()
{
  return MEMORY[0x1E0D48338]();
}

uint64_t CMSessionEndInterruption()
{
  return MEMORY[0x1E0D48348]();
}

uint64_t CMSessionEndInterruption_WithInterruptionNotification()
{
  return MEMORY[0x1E0D48350]();
}

uint64_t CMSessionGetNotificationCenter()
{
  return MEMORY[0x1E0D48360]();
}

uint64_t CMSessionSetProperty()
{
  return MEMORY[0x1E0D483B8]();
}

void CMSetAttachment(CMAttachmentBearerRef target, CFStringRef key, CFTypeRef value, CMAttachmentMode attachmentMode)
{
  MEMORY[0x1E0C9F0C8](target, key, value, *(_QWORD *)&attachmentMode);
}

void CMSetAttachments(CMAttachmentBearerRef target, CFDictionaryRef theAttachments, CMAttachmentMode attachmentMode)
{
  MEMORY[0x1E0C9F0D0](target, theAttachments, *(_QWORD *)&attachmentMode);
}

uint64_t CMSetCodeCoverageFilePathPattern()
{
  return MEMORY[0x1E0C9F0D8]();
}

OSStatus CMSimpleQueueCreate(CFAllocatorRef allocator, int32_t capacity, CMSimpleQueueRef *queueOut)
{
  return MEMORY[0x1E0C9F0E0](allocator, *(_QWORD *)&capacity, queueOut);
}

const void *__cdecl CMSimpleQueueDequeue(CMSimpleQueueRef queue)
{
  return (const void *)MEMORY[0x1E0C9F0E8](queue);
}

OSStatus CMSimpleQueueEnqueue(CMSimpleQueueRef queue, const void *element)
{
  return MEMORY[0x1E0C9F0F0](queue, element);
}

int32_t CMSimpleQueueGetCount(CMSimpleQueueRef queue)
{
  return MEMORY[0x1E0C9F100](queue);
}

uint64_t CMSpeedRampMapTimeFromSourceToTarget()
{
  return MEMORY[0x1E0C9F120]();
}

uint64_t CMSpeedRampMapTimeFromTargetToSource()
{
  return MEMORY[0x1E0C9F128]();
}

CMTime *__cdecl CMSyncConvertTime(CMTime *__return_ptr retstr, CMTime *time, CMClockOrTimebaseRef fromClockOrTimebase, CMClockOrTimebaseRef toClockOrTimebase)
{
  return (CMTime *)MEMORY[0x1E0C9F130](retstr, time, fromClockOrTimebase, toClockOrTimebase);
}

Float64 CMSyncGetRelativeRate(CMClockOrTimebaseRef ofClockOrTimebase, CMClockOrTimebaseRef relativeToClockOrTimebase)
{
  Float64 result;

  MEMORY[0x1E0C9F138](ofClockOrTimebase, relativeToClockOrTimebase);
  return result;
}

OSStatus CMSyncGetRelativeRateAndAnchorTime(CMClockOrTimebaseRef ofClockOrTimebase, CMClockOrTimebaseRef relativeToClockOrTimebase, Float64 *outRelativeRate, CMTime *outOfClockOrTimebaseAnchorTime, CMTime *outRelativeToClockOrTimebaseAnchorTime)
{
  return MEMORY[0x1E0C9F140](ofClockOrTimebase, relativeToClockOrTimebase, outRelativeRate, outOfClockOrTimebaseAnchorTime, outRelativeToClockOrTimebaseAnchorTime);
}

CMTime *__cdecl CMSyncGetTime(CMTime *__return_ptr retstr, CMClockOrTimebaseRef clockOrTimebase)
{
  return (CMTime *)MEMORY[0x1E0C9F148](retstr, clockOrTimebase);
}

Boolean CMSyncMightDrift(CMClockOrTimebaseRef clockOrTimebase1, CMClockOrTimebaseRef clockOrTimebase2)
{
  return MEMORY[0x1E0C9F150](clockOrTimebase1, clockOrTimebase2);
}

OSStatus CMTagCollectionAddTag(CMMutableTagCollectionRef tagCollection, CMTag tagToAdd)
{
  return MEMORY[0x1E0C9F158](tagCollection, *(_QWORD *)&tagToAdd.category, tagToAdd.value);
}

Boolean CMTagCollectionContainsCategory(CMTagCollectionRef tagCollection, CMTagCategory category)
{
  return MEMORY[0x1E0C9F160](tagCollection, *(_QWORD *)&category);
}

Boolean CMTagCollectionContainsTag(CMTagCollectionRef tagCollection, CMTag tag)
{
  return MEMORY[0x1E0C9F168](tagCollection, *(_QWORD *)&tag.category, tag.value);
}

Boolean CMTagCollectionContainsTagsOfCollection(CMTagCollectionRef tagCollection, CMTagCollectionRef containedTagCollection)
{
  return MEMORY[0x1E0C9F170](tagCollection, containedTagCollection);
}

OSStatus CMTagCollectionCreate(CFAllocatorRef allocator, const CMTag *tags, CMItemCount tagCount, CMTagCollectionRef *newCollectionOut)
{
  return MEMORY[0x1E0C9F178](allocator, tags, tagCount, newCollectionOut);
}

OSStatus CMTagCollectionCreateMutable(CFAllocatorRef allocator, CFIndex capacity, CMMutableTagCollectionRef *newMutableCollectionOut)
{
  return MEMORY[0x1E0C9F180](allocator, capacity, newMutableCollectionOut);
}

OSStatus CMTagCollectionCreateMutableCopy(CMTagCollectionRef tagCollection, CFAllocatorRef allocator, CMMutableTagCollectionRef *newMutableCollectionCopyOut)
{
  return MEMORY[0x1E0C9F188](tagCollection, allocator, newMutableCollectionCopyOut);
}

OSStatus CMTagCollectionGetTagsWithCategory(CMTagCollectionRef tagCollection, CMTagCategory category, CMTag *tagBuffer, CMItemCount tagBufferCount, CMItemCount *numberOfTagsCopied)
{
  return MEMORY[0x1E0C9F1A0](tagCollection, *(_QWORD *)&category, tagBuffer, tagBufferCount, numberOfTagsCopied);
}

OSStatus CMTagCollectionRemoveAllTagsOfCategory(CMMutableTagCollectionRef tagCollection, CMTagCategory category)
{
  return MEMORY[0x1E0C9F1B0](tagCollection, *(_QWORD *)&category);
}

OSStatus CMTagCollectionRemoveTag(CMMutableTagCollectionRef tagCollection, CMTag tagToRemove)
{
  return MEMORY[0x1E0C9F1B8](tagCollection, *(_QWORD *)&tagToRemove.category, tagToRemove.value);
}

Boolean CMTagEqualToTag(CMTag tag1, CMTag tag2)
{
  return MEMORY[0x1E0C9F1C8](*(_QWORD *)&tag1.category, tag1.value, *(_QWORD *)&tag2.category, tag2.value);
}

uint64_t CMTagGetFlagsValue(CMTag tag)
{
  return MEMORY[0x1E0C9F1D0](*(_QWORD *)&tag.category, tag.value);
}

int64_t CMTagGetSInt64Value(CMTag tag)
{
  return MEMORY[0x1E0C9F1E8](*(_QWORD *)&tag.category, tag.value);
}

CMTag CMTagMakeWithFlagsValue(CMTagCategory category, uint64_t flagsForTag)
{
  uint64_t v2;
  CMTagValue v3;
  CMTag result;

  v2 = MEMORY[0x1E0C9F1F8](*(_QWORD *)&category, flagsForTag);
  result.value = v3;
  result.category = v2;
  result.dataType = HIDWORD(v2);
  return result;
}

CMTag CMTagMakeWithSInt64Value(CMTagCategory category, int64_t value)
{
  uint64_t v2;
  CMTagValue v3;
  CMTag result;

  v2 = MEMORY[0x1E0C9F210](*(_QWORD *)&category, value);
  result.value = v3;
  result.category = v2;
  result.dataType = HIDWORD(v2);
  return result;
}

OSStatus CMTaggedBufferGroupCreate(CFAllocatorRef allocator, CFArrayRef tagCollections, CFArrayRef buffers, CMTaggedBufferGroupRef *groupOut)
{
  return MEMORY[0x1E0C9F218](allocator, tagCollections, buffers, groupOut);
}

CVPixelBufferRef CMTaggedBufferGroupGetCVPixelBufferAtIndex(CMTaggedBufferGroupRef group, CFIndex index)
{
  return (CVPixelBufferRef)MEMORY[0x1E0C9F238](group, index);
}

CMItemCount CMTaggedBufferGroupGetCount(CMTaggedBufferGroupRef group)
{
  return MEMORY[0x1E0C9F248](group);
}

CMTagCollectionRef CMTaggedBufferGroupGetTagCollectionAtIndex(CMTaggedBufferGroupRef group, CFIndex index)
{
  return (CMTagCollectionRef)MEMORY[0x1E0C9F250](group, index);
}

OSStatus CMTextFormatDescriptionCopyAsBigEndianTextDescriptionBlockBuffer(CFAllocatorRef allocator, CMTextFormatDescriptionRef textFormatDescription, CMTextDescriptionFlavor flavor, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9F258](allocator, textFormatDescription, flavor, blockBufferOut);
}

OSStatus CMTextFormatDescriptionCreateFromBigEndianTextDescriptionBlockBuffer(CFAllocatorRef allocator, CMBlockBufferRef textDescriptionBlockBuffer, CMTextDescriptionFlavor flavor, CMMediaType mediaType, CMTextFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x1E0C9F260](allocator, textDescriptionBlockBuffer, flavor, *(_QWORD *)&mediaType, formatDescriptionOut);
}

OSStatus CMTextFormatDescriptionGetDefaultStyle(CMFormatDescriptionRef desc, uint16_t *localFontIDOut, Boolean *boldOut, Boolean *italicOut, Boolean *underlineOut, CGFloat *fontSizeOut, CGFloat *colorComponentsOut)
{
  return MEMORY[0x1E0C9F268](desc, localFontIDOut, boldOut, italicOut, underlineOut, fontSizeOut, colorComponentsOut);
}

OSStatus CMTextFormatDescriptionGetDefaultTextBox(CMFormatDescriptionRef desc, Boolean originIsAtTopLeft, CGFloat heightOfTextTrack, CGRect *defaultTextBoxOut)
{
  return MEMORY[0x1E0C9F270](desc, originIsAtTopLeft, defaultTextBoxOut, heightOfTextTrack);
}

OSStatus CMTextFormatDescriptionGetDisplayFlags(CMFormatDescriptionRef desc, CMTextDisplayFlags *displayFlagsOut)
{
  return MEMORY[0x1E0C9F278](desc, displayFlagsOut);
}

OSStatus CMTextFormatDescriptionGetFontName(CMFormatDescriptionRef desc, uint16_t localFontID, CFStringRef *fontNameOut)
{
  return MEMORY[0x1E0C9F280](desc, localFontID, fontNameOut);
}

OSStatus CMTextFormatDescriptionGetJustification(CMFormatDescriptionRef desc, CMTextJustificationValue *horizontaJustificationlOut, CMTextJustificationValue *verticalJustificationOut)
{
  return MEMORY[0x1E0C9F288](desc, horizontaJustificationlOut, verticalJustificationOut);
}

CMTime *__cdecl CMTimeAbsoluteValue(CMTime *__return_ptr retstr, CMTime *time)
{
  return (CMTime *)MEMORY[0x1E0C9F290](retstr, time);
}

CMTime *__cdecl CMTimeAdd(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x1E0C9F298](retstr, lhs, rhs);
}

CMTime *__cdecl CMTimeClampToRange(CMTime *__return_ptr retstr, CMTime *time, CMTimeRange *range)
{
  return (CMTime *)MEMORY[0x1E0C9F2A0](retstr, time, range);
}

OSStatus CMTimeCodeFormatDescriptionCopyAsBigEndianTimeCodeDescriptionBlockBuffer(CFAllocatorRef allocator, CMTimeCodeFormatDescriptionRef timeCodeFormatDescription, CMTimeCodeDescriptionFlavor flavor, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9F2A8](allocator, timeCodeFormatDescription, flavor, blockBufferOut);
}

OSStatus CMTimeCodeFormatDescriptionCreateFromBigEndianTimeCodeDescriptionBlockBuffer(CFAllocatorRef allocator, CMBlockBufferRef timeCodeDescriptionBlockBuffer, CMTimeCodeDescriptionFlavor flavor, CMTimeCodeFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x1E0C9F2B8](allocator, timeCodeDescriptionBlockBuffer, flavor, formatDescriptionOut);
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x1E0C9F2D8](time1, time2);
}

CMTime *__cdecl CMTimeConvertScale(CMTime *__return_ptr retstr, CMTime *time, int32_t newTimescale, CMTimeRoundingMethod method)
{
  return (CMTime *)MEMORY[0x1E0C9F2E0](retstr, time, *(_QWORD *)&newTimescale, *(_QWORD *)&method);
}

uint64_t CMTimeCopyAsCVBufferTimeDictionary()
{
  return MEMORY[0x1E0C9F2E8]();
}

CFDictionaryRef CMTimeCopyAsDictionary(CMTime *time, CFAllocatorRef allocator)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9F2F0](time, allocator);
}

CFStringRef CMTimeCopyDescription(CFAllocatorRef allocator, CMTime *time)
{
  return (CFStringRef)MEMORY[0x1E0C9F2F8](allocator, time);
}

uint64_t CMTimeDivide()
{
  return MEMORY[0x1E0C9F300]();
}

CMTime *__cdecl CMTimeFoldIntoRange(CMTime *__return_ptr retstr, CMTime *time, CMTimeRange *foldRange)
{
  return (CMTime *)MEMORY[0x1E0C9F308](retstr, time, foldRange);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  Float64 result;

  MEMORY[0x1E0C9F310](time);
  return result;
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return (CMTime *)MEMORY[0x1E0C9F318](retstr, value, *(_QWORD *)&timescale);
}

CMTime *__cdecl CMTimeMakeFromDictionary(CMTime *__return_ptr retstr, CFDictionaryRef dictionaryRepresentation)
{
  return (CMTime *)MEMORY[0x1E0C9F320](retstr, dictionaryRepresentation);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return (CMTime *)MEMORY[0x1E0C9F330](retstr, *(_QWORD *)&preferredTimescale, seconds);
}

CMTime *__cdecl CMTimeMapDurationFromRangeToRange(CMTime *__return_ptr retstr, CMTime *dur, CMTimeRange *fromRange, CMTimeRange *toRange)
{
  return (CMTime *)MEMORY[0x1E0C9F338](retstr, dur, fromRange, toRange);
}

CMTime *__cdecl CMTimeMapTimeFromRangeToRange(CMTime *__return_ptr retstr, CMTime *t, CMTimeRange *fromRange, CMTimeRange *toRange)
{
  return (CMTime *)MEMORY[0x1E0C9F340](retstr, t, fromRange, toRange);
}

CFDictionaryRef CMTimeMappingCopyAsDictionary(CMTimeMapping *mapping, CFAllocatorRef allocator)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9F348](mapping, allocator);
}

CFStringRef CMTimeMappingCopyDescription(CFAllocatorRef allocator, CMTimeMapping *mapping)
{
  return (CFStringRef)MEMORY[0x1E0C9F350](allocator, mapping);
}

CMTimeMapping *__cdecl CMTimeMappingMake(CMTimeMapping *__return_ptr retstr, CMTimeRange *source, CMTimeRange *target)
{
  return (CMTimeMapping *)MEMORY[0x1E0C9F358](retstr, source, target);
}

CMTimeMapping *__cdecl CMTimeMappingMakeEmpty(CMTimeMapping *__return_ptr retstr, CMTimeRange *target)
{
  return (CMTimeMapping *)MEMORY[0x1E0C9F360](retstr, target);
}

CMTimeMapping *__cdecl CMTimeMappingMakeFromDictionary(CMTimeMapping *__return_ptr retstr, CFDictionaryRef dictionaryRepresentation)
{
  return (CMTimeMapping *)MEMORY[0x1E0C9F368](retstr, dictionaryRepresentation);
}

CMTime *__cdecl CMTimeMaximum(CMTime *__return_ptr retstr, CMTime *time1, CMTime *time2)
{
  return (CMTime *)MEMORY[0x1E0C9F370](retstr, time1, time2);
}

CMTime *__cdecl CMTimeMinimum(CMTime *__return_ptr retstr, CMTime *time1, CMTime *time2)
{
  return (CMTime *)MEMORY[0x1E0C9F378](retstr, time1, time2);
}

CMTime *__cdecl CMTimeMultiply(CMTime *__return_ptr retstr, CMTime *time, int32_t multiplier)
{
  return (CMTime *)MEMORY[0x1E0C9F380](retstr, time, *(_QWORD *)&multiplier);
}

CMTime *__cdecl CMTimeMultiplyByFloat64(CMTime *__return_ptr retstr, CMTime *time, Float64 multiplier)
{
  return (CMTime *)MEMORY[0x1E0C9F388](retstr, time, multiplier);
}

CMTime *__cdecl CMTimeMultiplyByRatio(CMTime *__return_ptr retstr, CMTime *time, int32_t multiplier, int32_t divisor)
{
  return (CMTime *)MEMORY[0x1E0C9F390](retstr, time, *(_QWORD *)&multiplier, *(_QWORD *)&divisor);
}

uint64_t CMTimeMultiplyTimeByTimeRatio()
{
  return MEMORY[0x1E0C9F398]();
}

Boolean CMTimeRangeContainsTime(CMTimeRange *range, CMTime *time)
{
  return MEMORY[0x1E0C9F3A0](range, time);
}

Boolean CMTimeRangeContainsTimeRange(CMTimeRange *range, CMTimeRange *otherRange)
{
  return MEMORY[0x1E0C9F3A8](range, otherRange);
}

CFDictionaryRef CMTimeRangeCopyAsDictionary(CMTimeRange *range, CFAllocatorRef allocator)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9F3B0](range, allocator);
}

CFStringRef CMTimeRangeCopyDescription(CFAllocatorRef allocator, CMTimeRange *range)
{
  return (CFStringRef)MEMORY[0x1E0C9F3B8](allocator, range);
}

Boolean CMTimeRangeEqual(CMTimeRange *range1, CMTimeRange *range2)
{
  return MEMORY[0x1E0C9F3C0](range1, range2);
}

CMTimeRange *__cdecl CMTimeRangeFromTimeToTime(CMTimeRange *__return_ptr retstr, CMTime *start, CMTime *end)
{
  return (CMTimeRange *)MEMORY[0x1E0C9F3C8](retstr, start, end);
}

CMTime *__cdecl CMTimeRangeGetEnd(CMTime *__return_ptr retstr, CMTimeRange *range)
{
  return (CMTime *)MEMORY[0x1E0C9F3D0](retstr, range);
}

CMTimeRange *__cdecl CMTimeRangeGetIntersection(CMTimeRange *__return_ptr retstr, CMTimeRange *range, CMTimeRange *otherRange)
{
  return (CMTimeRange *)MEMORY[0x1E0C9F3D8](retstr, range, otherRange);
}

CMTimeRange *__cdecl CMTimeRangeGetUnion(CMTimeRange *__return_ptr retstr, CMTimeRange *range, CMTimeRange *otherRange)
{
  return (CMTimeRange *)MEMORY[0x1E0C9F3E0](retstr, range, otherRange);
}

CMTimeRange *__cdecl CMTimeRangeMake(CMTimeRange *__return_ptr retstr, CMTime *start, CMTime *duration)
{
  return (CMTimeRange *)MEMORY[0x1E0C9F3E8](retstr, start, duration);
}

CMTimeRange *__cdecl CMTimeRangeMakeFromDictionary(CMTimeRange *__return_ptr retstr, CFDictionaryRef dictionaryRepresentation)
{
  return (CMTimeRange *)MEMORY[0x1E0C9F3F0](retstr, dictionaryRepresentation);
}

CMTime *__cdecl CMTimeSubtract(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x1E0C9F400](retstr, lhs, rhs);
}

uint64_t CMTimeSyncClockCreateForSystemDomainClockIdentifier()
{
  return MEMORY[0x1E0C9F408]();
}

OSStatus CMTimebaseAddTimerDispatchSource(CMTimebaseRef timebase, dispatch_source_t timerSource)
{
  return MEMORY[0x1E0C9F418](timebase, timerSource);
}

CMClockOrTimebaseRef CMTimebaseCopySource(CMTimebaseRef timebase)
{
  return (CMClockOrTimebaseRef)MEMORY[0x1E0C9F420](timebase);
}

CMClockRef CMTimebaseCopySourceClock(CMTimebaseRef timebase)
{
  return (CMClockRef)MEMORY[0x1E0C9F428](timebase);
}

CMClockRef CMTimebaseCopyUltimateSourceClock(CMTimebaseRef timebase)
{
  return (CMClockRef)MEMORY[0x1E0C9F438](timebase);
}

uint64_t CMTimebaseCreateReadOnlyTimebase()
{
  return MEMORY[0x1E0C9F448]();
}

OSStatus CMTimebaseCreateWithSourceClock(CFAllocatorRef allocator, CMClockRef sourceClock, CMTimebaseRef *timebaseOut)
{
  return MEMORY[0x1E0C9F450](allocator, sourceClock, timebaseOut);
}

OSStatus CMTimebaseCreateWithSourceTimebase(CFAllocatorRef allocator, CMTimebaseRef sourceTimebase, CMTimebaseRef *timebaseOut)
{
  return MEMORY[0x1E0C9F458](allocator, sourceTimebase, timebaseOut);
}

Float64 CMTimebaseGetEffectiveRate(CMTimebaseRef timebase)
{
  Float64 result;

  MEMORY[0x1E0C9F460](timebase);
  return result;
}

Float64 CMTimebaseGetRate(CMTimebaseRef timebase)
{
  Float64 result;

  MEMORY[0x1E0C9F468](timebase);
  return result;
}

CMTime *__cdecl CMTimebaseGetTime(CMTime *__return_ptr retstr, CMTimebaseRef timebase)
{
  return (CMTime *)MEMORY[0x1E0C9F470](retstr, timebase);
}

OSStatus CMTimebaseGetTimeAndRate(CMTimebaseRef timebase, CMTime *timeOut, Float64 *rateOut)
{
  return MEMORY[0x1E0C9F478](timebase, timeOut, rateOut);
}

uint64_t CMTimebaseGetTimeClampedAboveAnchorTime()
{
  return MEMORY[0x1E0C9F480]();
}

uint64_t CMTimebaseGetTimeWithLogging()
{
  return MEMORY[0x1E0C9F488]();
}

CMTime *__cdecl CMTimebaseGetTimeWithTimeScale(CMTime *__return_ptr retstr, CMTimebaseRef timebase, CMTimeScale timescale, CMTimeRoundingMethod method)
{
  return (CMTime *)MEMORY[0x1E0C9F490](retstr, timebase, *(_QWORD *)&timescale, *(_QWORD *)&method);
}

CFTypeID CMTimebaseGetTypeID(void)
{
  return MEMORY[0x1E0C9F498]();
}

OSStatus CMTimebaseNotificationBarrier(CMTimebaseRef timebase)
{
  return MEMORY[0x1E0C9F4A0](timebase);
}

OSStatus CMTimebaseRemoveTimerDispatchSource(CMTimebaseRef timebase, dispatch_source_t timerSource)
{
  return MEMORY[0x1E0C9F4B0](timebase, timerSource);
}

OSStatus CMTimebaseSetAnchorTime(CMTimebaseRef timebase, CMTime *timebaseTime, CMTime *immediateSourceTime)
{
  return MEMORY[0x1E0C9F4B8](timebase, timebaseTime, immediateSourceTime);
}

OSStatus CMTimebaseSetRate(CMTimebaseRef timebase, Float64 rate)
{
  return MEMORY[0x1E0C9F4C0](timebase, rate);
}

OSStatus CMTimebaseSetRateAndAnchorTime(CMTimebaseRef timebase, Float64 rate, CMTime *timebaseTime, CMTime *immediateSourceTime)
{
  return MEMORY[0x1E0C9F4C8](timebase, timebaseTime, immediateSourceTime, rate);
}

uint64_t CMTimebaseSetRateAndAnchorTimeWithFlags()
{
  return MEMORY[0x1E0C9F4D0]();
}

OSStatus CMTimebaseSetSourceClock(CMTimebaseRef timebase, CMClockRef newSourceClock)
{
  return MEMORY[0x1E0C9F4D8](timebase, newSourceClock);
}

OSStatus CMTimebaseSetTime(CMTimebaseRef timebase, CMTime *time)
{
  return MEMORY[0x1E0C9F4E8](timebase, time);
}

OSStatus CMTimebaseSetTimerDispatchSourceNextFireTime(CMTimebaseRef timebase, dispatch_source_t timerSource, CMTime *fireTime, uint32_t flags)
{
  return MEMORY[0x1E0C9F4F0](timebase, timerSource, fireTime, *(_QWORD *)&flags);
}

OSStatus CMTimebaseSetTimerDispatchSourceToFireImmediately(CMTimebaseRef timebase, dispatch_source_t timerSource)
{
  return MEMORY[0x1E0C9F4F8](timebase, timerSource);
}

OSStatus CMVideoFormatDescriptionCopyAsBigEndianImageDescriptionBlockBuffer(CFAllocatorRef allocator, CMVideoFormatDescriptionRef videoFormatDescription, CFStringEncoding stringEncoding, CMImageDescriptionFlavor flavor, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1E0C9F510](allocator, videoFormatDescription, *(_QWORD *)&stringEncoding, flavor, blockBufferOut);
}

OSStatus CMVideoFormatDescriptionCopyTagCollectionArray(CMVideoFormatDescriptionRef formatDescription, CFArrayRef *tagCollectionsOut)
{
  return MEMORY[0x1E0C9F518](formatDescription, tagCollectionsOut);
}

OSStatus CMVideoFormatDescriptionCreate(CFAllocatorRef allocator, CMVideoCodecType codecType, int32_t width, int32_t height, CFDictionaryRef extensions, CMVideoFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x1E0C9F520](allocator, *(_QWORD *)&codecType, *(_QWORD *)&width, *(_QWORD *)&height, extensions, formatDescriptionOut);
}

OSStatus CMVideoFormatDescriptionCreateForImageBuffer(CFAllocatorRef allocator, CVImageBufferRef imageBuffer, CMVideoFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x1E0C9F528](allocator, imageBuffer, formatDescriptionOut);
}

CGRect CMVideoFormatDescriptionGetCleanAperture(CMVideoFormatDescriptionRef videoDesc, Boolean originIsAtTopLeft)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9F550](videoDesc, originIsAtTopLeft);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

CMVideoDimensions CMVideoFormatDescriptionGetDimensions(CMVideoFormatDescriptionRef videoDesc)
{
  return (CMVideoDimensions)MEMORY[0x1E0C9F558](videoDesc);
}

uint64_t CMVideoFormatDescriptionGetPlaintextMediaSubTypeAndEncryptionScheme()
{
  return MEMORY[0x1E0C9F578]();
}

CGSize CMVideoFormatDescriptionGetPresentationDimensions(CMVideoFormatDescriptionRef videoDesc, Boolean usePixelAspectRatio, Boolean useCleanAperture)
{
  double v3;
  double v4;
  CGSize result;

  MEMORY[0x1E0C9F580](videoDesc, usePixelAspectRatio, useCleanAperture);
  result.height = v4;
  result.width = v3;
  return result;
}

uint64_t CMVideoFormatDescriptionGetVideoDynamicRange()
{
  return MEMORY[0x1E0C9F588]();
}

Boolean CMVideoFormatDescriptionMatchesImageBuffer(CMVideoFormatDescriptionRef desc, CVImageBufferRef imageBuffer)
{
  return MEMORY[0x1E0C9F590](desc, imageBuffer);
}

CFArrayRef CTFontCopyDefaultCascadeListForLanguages(CTFontRef font, CFArrayRef languagePrefList)
{
  return (CFArrayRef)MEMORY[0x1E0CA7980](font, languagePrefList);
}

CTFontRef CTFontCreateCopyWithAttributes(CTFontRef font, CGFloat size, const CGAffineTransform *matrix, CTFontDescriptorRef attributes)
{
  return (CTFontRef)MEMORY[0x1E0CA7A30](font, matrix, attributes, size);
}

CTFontRef CTFontCreateWithFontDescriptor(CTFontDescriptorRef descriptor, CGFloat size, const CGAffineTransform *matrix)
{
  return (CTFontRef)MEMORY[0x1E0CA7A70](descriptor, matrix, size);
}

CTFontRef CTFontCreateWithName(CFStringRef name, CGFloat size, const CGAffineTransform *matrix)
{
  return (CTFontRef)MEMORY[0x1E0CA7A88](name, matrix, size);
}

CFTypeRef CTFontDescriptorCopyAttribute(CTFontDescriptorRef descriptor, CFStringRef attribute)
{
  return (CFTypeRef)MEMORY[0x1E0CA7AA0](descriptor, attribute);
}

CTFontDescriptorRef CTFontDescriptorCreateCopyWithAttributes(CTFontDescriptorRef original, CFDictionaryRef attributes)
{
  return (CTFontDescriptorRef)MEMORY[0x1E0CA7AB8](original, attributes);
}

CTFontDescriptorRef CTFontDescriptorCreateCopyWithFeature(CTFontDescriptorRef original, CFNumberRef featureTypeIdentifier, CFNumberRef featureSelectorIdentifier)
{
  return (CTFontDescriptorRef)MEMORY[0x1E0CA7AC0](original, featureTypeIdentifier, featureSelectorIdentifier);
}

CTFontDescriptorRef CTFontDescriptorCreateCopyWithSymbolicTraits(CTFontDescriptorRef original, CTFontSymbolicTraits symTraitValue, CTFontSymbolicTraits symTraitMask)
{
  return (CTFontDescriptorRef)MEMORY[0x1E0CA7AC8](original, *(_QWORD *)&symTraitValue, *(_QWORD *)&symTraitMask);
}

CTFontDescriptorRef CTFontDescriptorCreateMatchingFontDescriptor(CTFontDescriptorRef descriptor, CFSetRef mandatoryAttributes)
{
  return (CTFontDescriptorRef)MEMORY[0x1E0CA7AE8](descriptor, mandatoryAttributes);
}

CTFontDescriptorRef CTFontDescriptorCreateWithAttributes(CFDictionaryRef attributes)
{
  return (CTFontDescriptorRef)MEMORY[0x1E0CA7B00](attributes);
}

uint64_t CTFontDescriptorCreateWithAttributesAndOptions()
{
  return MEMORY[0x1E0CA7B08]();
}

CGFloat CTFontGetAscent(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7BA0](font);
  return result;
}

CGFloat CTFontGetCapHeight(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7BC0](font);
  return result;
}

CGFloat CTFontGetDescent(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7BD8](font);
  return result;
}

CGFloat CTFontGetLeading(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7C20](font);
  return result;
}

CGFloat CTFontGetSize(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7C50](font);
  return result;
}

CTFontSymbolicTraits CTFontGetSymbolicTraits(CTFontRef font)
{
  return MEMORY[0x1E0CA7C60](font);
}

CFTypeID CTFontGetTypeID(void)
{
  return MEMORY[0x1E0CA7C78]();
}

CGFloat CTFontGetXHeight(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7CD0](font);
  return result;
}

void CTFrameDraw(CTFrameRef frame, CGContextRef context)
{
  MEMORY[0x1E0CA7DA0](frame, context);
}

void CTFrameGetLineOrigins(CTFrameRef frame, CFRange range, CGPoint *origins)
{
  MEMORY[0x1E0CA7DA8](frame, range.location, range.length, origins);
}

CFArrayRef CTFrameGetLines(CTFrameRef frame)
{
  return (CFArrayRef)MEMORY[0x1E0CA7DB0](frame);
}

CTFrameRef CTFramesetterCreateFrame(CTFramesetterRef framesetter, CFRange stringRange, CGPathRef path, CFDictionaryRef frameAttributes)
{
  return (CTFrameRef)MEMORY[0x1E0CA7DD8](framesetter, stringRange.location, stringRange.length, path, frameAttributes);
}

CTFramesetterRef CTFramesetterCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return (CTFramesetterRef)MEMORY[0x1E0CA7DE0](attrString);
}

CTFramesetterRef CTFramesetterCreateWithTypesetter(CTTypesetterRef typesetter)
{
  return (CTFramesetterRef)MEMORY[0x1E0CA7DE8](typesetter);
}

CGSize CTFramesetterSuggestFrameSizeWithConstraints(CTFramesetterRef framesetter, CFRange stringRange, CFDictionaryRef frameAttributes, CGSize constraints, CFRange *fitRange)
{
  double v5;
  double v6;
  CGSize result;

  MEMORY[0x1E0CA7DF8](framesetter, stringRange.location, stringRange.length, frameAttributes, fitRange, (__n128)constraints, *(__n128 *)&constraints.height);
  result.height = v6;
  result.width = v5;
  return result;
}

uint64_t CTIsExuberatedLanguage()
{
  return MEMORY[0x1E0CA7E40]();
}

CTLineRef CTLineCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return (CTLineRef)MEMORY[0x1E0CA7E88](attrString);
}

void CTLineDraw(CTLineRef line, CGContextRef context)
{
  MEMORY[0x1E0CA7EA8](line, context);
}

CGRect CTLineGetBoundsWithOptions(CTLineRef line, CTLineBoundsOptions options)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0CA7EC0](line, options);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

CFArrayRef CTLineGetGlyphRuns(CTLineRef line)
{
  return (CFArrayRef)MEMORY[0x1E0CA7ED8](line);
}

CGRect CTLineGetImageBounds(CTLineRef line, CGContextRef context)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0CA7EE0](line, context);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

CGFloat CTLineGetOffsetForStringIndex(CTLineRef line, CFIndex charIndex, CGFloat *secondaryOffset)
{
  CGFloat result;

  MEMORY[0x1E0CA7EE8](line, charIndex, secondaryOffset);
  return result;
}

double CTLineGetPenOffsetForFlush(CTLineRef line, CGFloat flushFactor, double flushWidth)
{
  double result;

  MEMORY[0x1E0CA7EF0](line, flushFactor, flushWidth);
  return result;
}

CFRange CTLineGetStringRange(CTLineRef line)
{
  CFIndex v1;
  CFIndex v2;
  CFRange result;

  v1 = MEMORY[0x1E0CA7F08](line);
  result.length = v2;
  result.location = v1;
  return result;
}

double CTLineGetTrailingWhitespaceWidth(CTLineRef line)
{
  double result;

  MEMORY[0x1E0CA7F10](line);
  return result;
}

double CTLineGetTypographicBounds(CTLineRef line, CGFloat *ascent, CGFloat *descent, CGFloat *leading)
{
  double result;

  MEMORY[0x1E0CA7F18](line, ascent, descent, leading);
  return result;
}

uint64_t CTLineIsRightToLeft()
{
  return MEMORY[0x1E0CA7F30]();
}

CTParagraphStyleRef CTParagraphStyleCreate(const CTParagraphStyleSetting *settings, size_t settingCount)
{
  return (CTParagraphStyleRef)MEMORY[0x1E0CA7F60](settings, settingCount);
}

uint64_t CTParagraphStyleSetCompositionLanguage()
{
  return MEMORY[0x1E0CA7F78]();
}

CTRubyAnnotationRef CTRubyAnnotationCreateWithAttributes(CTRubyAlignment alignment, CTRubyOverhang overhang, CTRubyPosition position, CFStringRef string, CFDictionaryRef attributes)
{
  return (CTRubyAnnotationRef)MEMORY[0x1E0CA7F80](alignment, overhang, position, string, attributes);
}

void CTRunDraw(CTRunRef run, CGContextRef context, CFRange range)
{
  MEMORY[0x1E0CA7F98](run, context, range.location, range.length);
}

CFDictionaryRef CTRunGetAttributes(CTRunRef run)
{
  return (CFDictionaryRef)MEMORY[0x1E0CA7FB0](run);
}

uint64_t CTRunGetBackgroundBounds()
{
  return MEMORY[0x1E0CA7FB8]();
}

CGRect CTRunGetImageBounds(CTRunRef run, CGContextRef context, CFRange range)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0CA7FF0](run, context, range.location, range.length);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGAffineTransform *__cdecl CTRunGetTextMatrix(CGAffineTransform *__return_ptr retstr, CTRunRef run)
{
  return (CGAffineTransform *)MEMORY[0x1E0CA8048](retstr, run);
}

double CTRunGetTypographicBounds(CTRunRef run, CFRange range, CGFloat *ascent, CGFloat *descent, CGFloat *leading)
{
  double result;

  MEMORY[0x1E0CA8050](run, range.location, range.length, ascent, descent, leading);
  return result;
}

CTTypesetterRef CTTypesetterCreateWithAttributedStringAndOptions(CFAttributedStringRef string, CFDictionaryRef options)
{
  return (CTTypesetterRef)MEMORY[0x1E0CA80A0](string, options);
}

CFTypeRef CVBufferCopyAttachment(CVBufferRef buffer, CFStringRef key, CVAttachmentMode *attachmentMode)
{
  return (CFTypeRef)MEMORY[0x1E0CA8900](buffer, key, attachmentMode);
}

CFDictionaryRef CVBufferCopyAttachments(CVBufferRef buffer, CVAttachmentMode attachmentMode)
{
  return (CFDictionaryRef)MEMORY[0x1E0CA8908](buffer, *(_QWORD *)&attachmentMode);
}

void CVBufferPropagateAttachments(CVBufferRef sourceBuffer, CVBufferRef destinationBuffer)
{
  MEMORY[0x1E0CA8928](sourceBuffer, destinationBuffer);
}

void CVBufferRelease(CVBufferRef buffer)
{
  MEMORY[0x1E0CA8930](buffer);
}

void CVBufferRemoveAttachment(CVBufferRef buffer, CFStringRef key)
{
  MEMORY[0x1E0CA8940](buffer, key);
}

CVBufferRef CVBufferRetain(CVBufferRef buffer)
{
  return (CVBufferRef)MEMORY[0x1E0CA8948](buffer);
}

void CVBufferSetAttachment(CVBufferRef buffer, CFStringRef key, CFTypeRef value, CVAttachmentMode attachmentMode)
{
  MEMORY[0x1E0CA8950](buffer, key, value, *(_QWORD *)&attachmentMode);
}

void CVBufferSetAttachments(CVBufferRef buffer, CFDictionaryRef theAttachments, CVAttachmentMode attachmentMode)
{
  MEMORY[0x1E0CA8958](buffer, theAttachments, *(_QWORD *)&attachmentMode);
}

int CVColorPrimariesGetIntegerCodePointForString(CFStringRef colorPrimariesString)
{
  return MEMORY[0x1E0CA8960](colorPrimariesString);
}

CFStringRef CVColorPrimariesGetStringForIntegerCodePoint(int colorPrimariesCodePoint)
{
  return (CFStringRef)MEMORY[0x1E0CA8968](*(_QWORD *)&colorPrimariesCodePoint);
}

uint64_t CVDataBufferGetIOSurface()
{
  return MEMORY[0x1E0CA8990]();
}

CGColorSpaceRef CVImageBufferCreateColorSpaceFromAttachments(CFDictionaryRef attachments)
{
  return (CGColorSpaceRef)MEMORY[0x1E0CA89D0](attachments);
}

CGRect CVImageBufferGetCleanRect(CVImageBufferRef imageBuffer)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0CA89D8](imageBuffer);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGSize CVImageBufferGetDisplaySize(CVImageBufferRef imageBuffer)
{
  double v1;
  double v2;
  CGSize result;

  MEMORY[0x1E0CA89E8](imageBuffer);
  result.height = v2;
  result.width = v1;
  return result;
}

CGSize CVImageBufferGetEncodedSize(CVImageBufferRef imageBuffer)
{
  double v1;
  double v2;
  CGSize result;

  MEMORY[0x1E0CA89F0](imageBuffer);
  result.height = v2;
  result.width = v1;
  return result;
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CA8A98](allocator, width, height, *(_QWORD *)&pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

CVReturn CVPixelBufferCreateResolvedAttributesDictionary(CFAllocatorRef allocator, CFArrayRef attributes, CFDictionaryRef *resolvedDictionaryOut)
{
  return MEMORY[0x1E0CA8AA8](allocator, attributes, resolvedDictionaryOut);
}

CVReturn CVPixelBufferCreateWithBytes(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, void *baseAddress, size_t bytesPerRow, CVPixelBufferReleaseBytesCallback releaseCallback, void *releaseRefCon, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CA8AB8](allocator, width, height, *(_QWORD *)&pixelFormatType, baseAddress, bytesPerRow, releaseCallback, releaseRefCon);
}

CVReturn CVPixelBufferCreateWithIOSurface(CFAllocatorRef allocator, IOSurfaceRef surface, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CA8AC0](allocator, surface, pixelBufferAttributes, pixelBufferOut);
}

uint64_t CVPixelBufferGetAttributes()
{
  return MEMORY[0x1E0CA8AD8]();
}

void *__cdecl CVPixelBufferGetBaseAddress(CVPixelBufferRef pixelBuffer)
{
  return (void *)MEMORY[0x1E0CA8AE0](pixelBuffer);
}

void *__cdecl CVPixelBufferGetBaseAddressOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return (void *)MEMORY[0x1E0CA8AE8](pixelBuffer, planeIndex);
}

uint64_t CVPixelBufferGetBufferBacking()
{
  return MEMORY[0x1E0CA8AF0]();
}

size_t CVPixelBufferGetBytesPerRow(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8AF8](pixelBuffer);
}

size_t CVPixelBufferGetBytesPerRowOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x1E0CA8B00](pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetDataSize(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B08](pixelBuffer);
}

void CVPixelBufferGetExtendedPixels(CVPixelBufferRef pixelBuffer, size_t *extraColumnsOnLeft, size_t *extraColumnsOnRight, size_t *extraRowsOnTop, size_t *extraRowsOnBottom)
{
  MEMORY[0x1E0CA8B10](pixelBuffer, extraColumnsOnLeft, extraColumnsOnRight, extraRowsOnTop, extraRowsOnBottom);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B20](pixelBuffer);
}

size_t CVPixelBufferGetHeightOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x1E0CA8B28](pixelBuffer, planeIndex);
}

IOSurfaceRef CVPixelBufferGetIOSurface(CVPixelBufferRef pixelBuffer)
{
  return (IOSurfaceRef)MEMORY[0x1E0CA8B30](pixelBuffer);
}

OSType CVPixelBufferGetPixelFormatType(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B38](pixelBuffer);
}

size_t CVPixelBufferGetPlaneCount(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B40](pixelBuffer);
}

CFTypeID CVPixelBufferGetTypeID(void)
{
  return MEMORY[0x1E0CA8B48]();
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B50](pixelBuffer);
}

size_t CVPixelBufferGetWidthOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x1E0CA8B58](pixelBuffer, planeIndex);
}

uint64_t CVPixelBufferIsCompatibleWithAttributes()
{
  return MEMORY[0x1E0CA8B60]();
}

Boolean CVPixelBufferIsPlanar(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B68](pixelBuffer);
}

CVReturn CVPixelBufferLockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags lockFlags)
{
  return MEMORY[0x1E0CA8B70](pixelBuffer, lockFlags);
}

CVReturn CVPixelBufferPoolCreate(CFAllocatorRef allocator, CFDictionaryRef poolAttributes, CFDictionaryRef pixelBufferAttributes, CVPixelBufferPoolRef *poolOut)
{
  return MEMORY[0x1E0CA8B78](allocator, poolAttributes, pixelBufferAttributes, poolOut);
}

CVReturn CVPixelBufferPoolCreatePixelBuffer(CFAllocatorRef allocator, CVPixelBufferPoolRef pixelBufferPool, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CA8B80](allocator, pixelBufferPool, pixelBufferOut);
}

CVReturn CVPixelBufferPoolCreatePixelBufferWithAuxAttributes(CFAllocatorRef allocator, CVPixelBufferPoolRef pixelBufferPool, CFDictionaryRef auxAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CA8B88](allocator, pixelBufferPool, auxAttributes, pixelBufferOut);
}

void CVPixelBufferPoolFlush(CVPixelBufferPoolRef pool, CVPixelBufferPoolFlushFlags options)
{
  MEMORY[0x1E0CA8B90](pool, options);
}

CFDictionaryRef CVPixelBufferPoolGetAttributes(CVPixelBufferPoolRef pool)
{
  return (CFDictionaryRef)MEMORY[0x1E0CA8B98](pool);
}

CFDictionaryRef CVPixelBufferPoolGetPixelBufferAttributes(CVPixelBufferPoolRef pool)
{
  return (CFDictionaryRef)MEMORY[0x1E0CA8BA8](pool);
}

uint64_t CVPixelBufferPoolPreAllocate()
{
  return MEMORY[0x1E0CA8BB8]();
}

uint64_t CVPixelBufferPoolPrefetchPages()
{
  return MEMORY[0x1E0CA8BC0]();
}

void CVPixelBufferPoolRelease(CVPixelBufferPoolRef pixelBufferPool)
{
  MEMORY[0x1E0CA8BC8](pixelBufferPool);
}

CVPixelBufferPoolRef CVPixelBufferPoolRetain(CVPixelBufferPoolRef pixelBufferPool)
{
  return (CVPixelBufferPoolRef)MEMORY[0x1E0CA8BD0](pixelBufferPool);
}

void CVPixelBufferRelease(CVPixelBufferRef texture)
{
  MEMORY[0x1E0CA8BF0](texture);
}

CVPixelBufferRef CVPixelBufferRetain(CVPixelBufferRef texture)
{
  return (CVPixelBufferRef)MEMORY[0x1E0CA8BF8](texture);
}

CVReturn CVPixelBufferUnlockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags unlockFlags)
{
  return MEMORY[0x1E0CA8C00](pixelBuffer, unlockFlags);
}

CFDictionaryRef CVPixelFormatDescriptionCreateWithPixelFormatType(CFAllocatorRef allocator, OSType pixelFormat)
{
  return (CFDictionaryRef)MEMORY[0x1E0CA8C08](allocator, *(_QWORD *)&pixelFormat);
}

uint64_t CVPixelFormatDescriptionGetDescriptionWithPixelFormatType()
{
  return MEMORY[0x1E0CA8C10]();
}

int CVTransferFunctionGetIntegerCodePointForString(CFStringRef transferFunctionString)
{
  return MEMORY[0x1E0CA8C30](transferFunctionString);
}

CFStringRef CVTransferFunctionGetStringForIntegerCodePoint(int transferFunctionCodePoint)
{
  return (CFStringRef)MEMORY[0x1E0CA8C38](*(_QWORD *)&transferFunctionCodePoint);
}

int CVYCbCrMatrixGetIntegerCodePointForString(CFStringRef yCbCrMatrixString)
{
  return MEMORY[0x1E0CA8C40](yCbCrMatrixString);
}

CFStringRef CVYCbCrMatrixGetStringForIntegerCodePoint(int yCbCrMatrixCodePoint)
{
  return (CFStringRef)MEMORY[0x1E0CA8C48](*(_QWORD *)&yCbCrMatrixCodePoint);
}

uint64_t CelestialCustomizePlaybackImageQueueLevels()
{
  return MEMORY[0x1E0C9F5A8]();
}

uint64_t CelestialGetModelSpecificName()
{
  return MEMORY[0x1E0C9F5B0]();
}

uint64_t CelestialGetModelSpecificResolutionCap()
{
  return MEMORY[0x1E0C9F5B8]();
}

uint64_t CelestialGetStreamingBackBufferDuration()
{
  return MEMORY[0x1E0C9F5C0]();
}

uint64_t CelestialGetSupportedAVCProfileAndLevel()
{
  return MEMORY[0x1E0C9F5C8]();
}

uint64_t CelestialGetSystemMemorySize()
{
  return MEMORY[0x1E0C9F5D0]();
}

uint64_t CelestialIs1GBAudioAccessory()
{
  return MEMORY[0x1E0C9F5D8]();
}

uint64_t CelestialIsAppleTV()
{
  return MEMORY[0x1E0C9F5E0]();
}

uint64_t CelestialIsAudioAccessory()
{
  return MEMORY[0x1E0C9F5E8]();
}

uint64_t CelestialIsiPad()
{
  return MEMORY[0x1E0C9F5F0]();
}

uint64_t CelestialIsiPhone()
{
  return MEMORY[0x1E0C9F5F8]();
}

uint64_t CelestialPreallocateSurfaceMemoryForHDRVideo()
{
  return MEMORY[0x1E0C9F600]();
}

uint64_t CelestialShouldLimit4kConcurrentPlayback()
{
  return MEMORY[0x1E0C9F610]();
}

uint64_t CelestialShouldLimit4kStereoConcurrentPlayback()
{
  return MEMORY[0x1E0C9F618]();
}

uint64_t CelestialShouldLimitConcurrent4K60HEVCDecoding()
{
  return MEMORY[0x1E0C9F620]();
}

uint64_t CelestialShouldLimitHDRConcurrentPlayback()
{
  return MEMORY[0x1E0C9F628]();
}

uint64_t CelestialShouldLimitHDRFrameRateForPlayback()
{
  return MEMORY[0x1E0C9F630]();
}

uint64_t CelestialShouldManageEDRDeadline()
{
  return MEMORY[0x1E0C9F638]();
}

uint64_t CelestialShouldUseCompressLuminanceBehindCaptions()
{
  return MEMORY[0x1E0C9F650]();
}

DNSServiceErrorType DNSServiceBrowse(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *regtype, const char *domain, DNSServiceBrowseReply callBack, void *context)
{
  return MEMORY[0x1E0C80420](sdRef, *(_QWORD *)&flags, *(_QWORD *)&interfaceIndex, regtype, domain, callBack, context);
}

DNSServiceErrorType DNSServiceConstructFullName(char *const fullName, const char *const service, const char *const regtype, const char *const domain)
{
  return MEMORY[0x1E0C80430](fullName, service, regtype, domain);
}

DNSServiceErrorType DNSServiceGetAddrInfo(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceProtocol protocol, const char *hostname, DNSServiceGetAddrInfoReply callBack, void *context)
{
  return MEMORY[0x1E0C80458](sdRef, *(_QWORD *)&flags, *(_QWORD *)&interfaceIndex, *(_QWORD *)&protocol, hostname, callBack, context);
}

DNSServiceErrorType DNSServiceQueryRecord(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *fullname, uint16_t rrtype, uint16_t rrclass, DNSServiceQueryRecordReply callBack, void *context)
{
  return MEMORY[0x1E0C80478](sdRef, *(_QWORD *)&flags, *(_QWORD *)&interfaceIndex, fullname, rrtype, rrclass, callBack, context);
}

void DNSServiceRefDeallocate(DNSServiceRef sdRef)
{
  MEMORY[0x1E0C80490](sdRef);
}

DNSServiceErrorType DNSServiceRegister(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *name, const char *regtype, const char *domain, const char *host, uint16_t port, uint16_t txtLen, const void *txtRecord, DNSServiceRegisterReply callBack, void *context)
{
  return MEMORY[0x1E0C804A0](sdRef, *(_QWORD *)&flags, *(_QWORD *)&interfaceIndex, name, regtype, domain, host, port);
}

DNSServiceErrorType DNSServiceSetDispatchQueue(DNSServiceRef service, dispatch_queue_t queue)
{
  return MEMORY[0x1E0C804C8](service, queue);
}

uint64_t FigAV1Bridge_GetChromaFormatAndBitDepthsFromAV1CodecConfigurationRecord()
{
  return MEMORY[0x1E0C9F668]();
}

uint64_t FigAssetAnalysisReporterAddMessage()
{
  return MEMORY[0x1E0C9F670]();
}

uint64_t FigAssetAnalysisReporterCopyMessages()
{
  return MEMORY[0x1E0C9F678]();
}

uint64_t FigAssetAnalysisReporterCreate()
{
  return MEMORY[0x1E0C9F680]();
}

uint64_t FigAssetAnalysisReporterEditAndAppendMessage()
{
  return MEMORY[0x1E0C9F688]();
}

uint64_t FigAssetAnalysisReporterEditAndCombineMessage()
{
  return MEMORY[0x1E0C9F690]();
}

uint64_t FigAtomStreamAdvanceToNextAtom()
{
  return MEMORY[0x1E0C9F698]();
}

uint64_t FigAtomStreamAdvanceToNextAtomWithType()
{
  return MEMORY[0x1E0C9F6A0]();
}

uint64_t FigAtomStreamGetCurrentAtomDataGlobalOffset()
{
  return MEMORY[0x1E0C9F6A8]();
}

uint64_t FigAtomStreamGetCurrentAtomGlobalOffset()
{
  return MEMORY[0x1E0C9F6B0]();
}

uint64_t FigAtomStreamGetCurrentAtomHeaderSize()
{
  return MEMORY[0x1E0C9F6B8]();
}

uint64_t FigAtomStreamGetCurrentAtomOffsetInParent()
{
  return MEMORY[0x1E0C9F6C0]();
}

uint64_t FigAtomStreamGetCurrentAtomTypeAndDataLength()
{
  return MEMORY[0x1E0C9F6C8]();
}

uint64_t FigAtomStreamGetCurrentAtomUUIDType()
{
  return MEMORY[0x1E0C9F6D0]();
}

uint64_t FigAtomStreamGetCurrentAtomVersionAndFlags()
{
  return MEMORY[0x1E0C9F6D8]();
}

uint64_t FigAtomStreamInitWithBBuf()
{
  return MEMORY[0x1E0C9F6E0]();
}

uint64_t FigAtomStreamInitWithByteStream()
{
  return MEMORY[0x1E0C9F6E8]();
}

uint64_t FigAtomStreamInitWithByteStreamAndReporter()
{
  return MEMORY[0x1E0C9F6F0]();
}

uint64_t FigAtomStreamInitWithMemoryBlock()
{
  return MEMORY[0x1E0C9F6F8]();
}

uint64_t FigAtomStreamInitWithParent()
{
  return MEMORY[0x1E0C9F700]();
}

uint64_t FigAtomStreamPositionAtFirstAtomWithType()
{
  return MEMORY[0x1E0C9F708]();
}

uint64_t FigAtomStreamPositionViaAtomPath()
{
  return MEMORY[0x1E0C9F710]();
}

uint64_t FigAtomStreamReadCurrentAtomAndCreateBBuf()
{
  return MEMORY[0x1E0C9F718]();
}

uint64_t FigAtomStreamReadCurrentAtomData()
{
  return MEMORY[0x1E0C9F720]();
}

uint64_t FigAtomStreamReadCurrentAtomDataAndCreateBBuf()
{
  return MEMORY[0x1E0C9F728]();
}

uint64_t FigAtomUtilityGetAtomTypeAndLengthInByteStream()
{
  return MEMORY[0x1E0C9F730]();
}

uint64_t FigAtomWriterAppendBlockBufferData()
{
  return MEMORY[0x1E0C9F738]();
}

uint64_t FigAtomWriterAppendData()
{
  return MEMORY[0x1E0C9F740]();
}

uint64_t FigAtomWriterAppendVersionAndFlags()
{
  return MEMORY[0x1E0C9F748]();
}

uint64_t FigAtomWriterBeginAtom()
{
  return MEMORY[0x1E0C9F750]();
}

uint64_t FigAtomWriterBeginUUIDAtom()
{
  return MEMORY[0x1E0C9F758]();
}

uint64_t FigAtomWriterEndAtom()
{
  return MEMORY[0x1E0C9F760]();
}

uint64_t FigAtomWriterGetAtomDataSize()
{
  return MEMORY[0x1E0C9F768]();
}

uint64_t FigAtomWriterGetAtomGlobalDataOffset()
{
  return MEMORY[0x1E0C9F770]();
}

uint64_t FigAtomWriterGetAtomSize()
{
  return MEMORY[0x1E0C9F778]();
}

uint64_t FigAtomWriterInitWithBlockBuffer()
{
  return MEMORY[0x1E0C9F780]();
}

uint64_t FigAtomWriterInitWithParent()
{
  return MEMORY[0x1E0C9F790]();
}

uint64_t FigAtomicAdd32()
{
  return MEMORY[0x1E0C9F798]();
}

uint64_t FigAtomicBitAnd32()
{
  return MEMORY[0x1E0C9F7A0]();
}

uint64_t FigAtomicBitAnd32Orig()
{
  return MEMORY[0x1E0C9F7A8]();
}

uint64_t FigAtomicCompareAndSwap32()
{
  return MEMORY[0x1E0C9F7B0]();
}

uint64_t FigAtomicCompareAndSwapPtr()
{
  return MEMORY[0x1E0C9F7B8]();
}

uint64_t FigAtomicDecrement32()
{
  return MEMORY[0x1E0C9F7C0]();
}

uint64_t FigAtomicIncrement32()
{
  return MEMORY[0x1E0C9F7C8]();
}

uint64_t FigAtomicIncrement64()
{
  return MEMORY[0x1E0C9F7D0]();
}

uint64_t FigAudioCodecTypeIsDecodable()
{
  return MEMORY[0x1E0C9F7D8]();
}

uint64_t FigAudioDeviceClockServerStart()
{
  return MEMORY[0x1E0C9F7E8]();
}

uint64_t FigAudioDeviceClockXPCRemoteGetObjectID()
{
  return MEMORY[0x1E0C9F800]();
}

uint64_t FigAudioDeviceClockXPCRemoteRetainCopiedClock()
{
  return MEMORY[0x1E0C9F808]();
}

uint64_t FigAudioDeviceGetCurrentDynamicLatency()
{
  return MEMORY[0x1E0C9F810]();
}

uint64_t FigAudioDeviceSupportsPresentationTime()
{
  return MEMORY[0x1E0C9F818]();
}

uint64_t FigAudioFormatDescriptionAudibleContentIsAuthorized()
{
  return MEMORY[0x1E0C9F820]();
}

uint64_t FigAudioFormatDescriptionCopyCompatibleCompositionPresets()
{
  return MEMORY[0x1E0C9F828]();
}

uint64_t FigAudioFormatDescriptionCreateFromBigEndianSoundDescriptionBlockBufferWithReporter()
{
  return MEMORY[0x1E0C9F830]();
}

uint64_t FigAudioFormatDescriptionEmploysDependentPackets()
{
  return MEMORY[0x1E0C9F838]();
}

uint64_t FigAudioFormatDescriptionGetCinematicAudioEffectEligibility()
{
  return MEMORY[0x1E0C9F840]();
}

uint64_t FigAudioFormatDescriptionGetCodecOutputChannelCount()
{
  return MEMORY[0x1E0C9F848]();
}

uint64_t FigAudioFormatDescriptionGetRichestDecodableFormatAndChannelLayout()
{
  return MEMORY[0x1E0C9F850]();
}

uint64_t FigAudioFormatDescriptionUsesAudibleDRM()
{
  return MEMORY[0x1E0C9F858]();
}

uint64_t FigAudioStreamPacketDependencyInfoCopyAsSampleDependencyAttributeDictionary()
{
  return MEMORY[0x1E0C9F860]();
}

uint64_t FigBaseClassRegisterClass()
{
  return MEMORY[0x1E0C9F868]();
}

uint64_t FigBaseProtocolRegisterProtocol()
{
  return MEMORY[0x1E0C9F870]();
}

uint64_t FigBlockBufferCompare()
{
  return MEMORY[0x1E0C9F878]();
}

uint64_t FigBoxedMetadataCopyValueOfItemAtIndexAsCFType()
{
  return MEMORY[0x1E0C9F8C0]();
}

uint64_t FigBoxedMetadataCreateFromBlockBuffer()
{
  return MEMORY[0x1E0C9F8D0]();
}

uint64_t FigBoxedMetadataGetFormatDescription()
{
  return MEMORY[0x1E0C9F8E8]();
}

uint64_t FigBoxedMetadataGetLocalIDOfItemAtIndex()
{
  return MEMORY[0x1E0C9F8F0]();
}

uint64_t FigBoxedMetadataGetNumberOfItems()
{
  return MEMORY[0x1E0C9F8F8]();
}

uint64_t FigBoxedMetadataGetSizeOfItemAtIndex()
{
  return MEMORY[0x1E0C9F900]();
}

uint64_t FigBoxedMetadataGetValueOfItemAtIndexAsUInt32()
{
  return MEMORY[0x1E0C9F928]();
}

uint64_t FigBufferQueueCallForEachBufferLastToFirst()
{
  return MEMORY[0x1E0C9F930]();
}

uint64_t FigBufferQueueDequeueIfMatchingAndRetain()
{
  return MEMORY[0x1E0C9F938]();
}

uint64_t FigBufferQueueInstallTriggerWithTimeAndIntegerThresholds()
{
  return MEMORY[0x1E0C9F940]();
}

uint64_t FigBufferQueueRelease()
{
  return MEMORY[0x1E0C9F948]();
}

uint64_t FigBufferQueueRetain()
{
  return MEMORY[0x1E0C9F950]();
}

uint64_t FigBufferedAirPlayClientRoutingRegistryClearAllClientsWithRemoteID()
{
  return MEMORY[0x1E0C9F958]();
}

uint64_t FigBufferedAirPlayClientRoutingRegistryGetCountOfRunningClientsForRoutingContext()
{
  return MEMORY[0x1E0C9F960]();
}

uint64_t FigBufferedAirPlayClientRoutingRegistryGetSharedInstance()
{
  return MEMORY[0x1E0C9F968]();
}

uint64_t FigBufferedAirPlayClientRoutingRegistryRegisterClientWithRemoteID()
{
  return MEMORY[0x1E0C9F970]();
}

uint64_t FigBufferedAirPlayClientRoutingRegistryUnregisterClientWithRemoteID()
{
  return MEMORY[0x1E0C9F978]();
}

uint64_t FigByteStreamCopySHA1Digest()
{
  return MEMORY[0x1E0C9F980]();
}

uint64_t FigByteStreamCreateFromOpenFile()
{
  return MEMORY[0x1E0C9F988]();
}

uint64_t FigByteStreamCreateFromOpenFileAssumingOwnership()
{
  return MEMORY[0x1E0C9F990]();
}

uint64_t FigByteStreamCreateFromReadOnlyOpenFile()
{
  return MEMORY[0x1E0C9F998]();
}

uint64_t FigByteStreamProviderCreateForBaseURLWithSecurityOptions()
{
  return MEMORY[0x1E0C9F9C0]();
}

uint64_t FigByteStreamStatsCreateStatsDictionary()
{
  return MEMORY[0x1E0C9F9C8]();
}

uint64_t FigByteStreamStatsLogOneRead()
{
  return MEMORY[0x1E0C9F9D0]();
}

uint64_t FigByteStreamStatsSetupWorker()
{
  return MEMORY[0x1E0C9F9D8]();
}

uint64_t FigByteStreamStatsTeardownWorker()
{
  return MEMORY[0x1E0C9F9E0]();
}

uint64_t FigCAStatsReportingSubmitData()
{
  return MEMORY[0x1E0C9F9E8]();
}

uint64_t FigCFArrayAppendArray()
{
  return MEMORY[0x1E0C9F9F0]();
}

uint64_t FigCFArrayAppendCFIndex()
{
  return MEMORY[0x1E0C9F9F8]();
}

uint64_t FigCFArrayAppendCMTime()
{
  return MEMORY[0x1E0C9FA00]();
}

uint64_t FigCFArrayAppendDouble()
{
  return MEMORY[0x1E0C9FA08]();
}

uint64_t FigCFArrayAppendInt()
{
  return MEMORY[0x1E0C9FA18]();
}

uint64_t FigCFArrayAppendInt32()
{
  return MEMORY[0x1E0C9FA20]();
}

uint64_t FigCFArrayAppendInt64()
{
  return MEMORY[0x1E0C9FA28]();
}

uint64_t FigCFArrayApplyBlock()
{
  return MEMORY[0x1E0C9FA30]();
}

uint64_t FigCFArrayApplyFunction()
{
  return MEMORY[0x1E0C9FA38]();
}

uint64_t FigCFArrayContainsInt32()
{
  return MEMORY[0x1E0C9FA48]();
}

uint64_t FigCFArrayContainsInt64()
{
  return MEMORY[0x1E0C9FA50]();
}

uint64_t FigCFArrayContainsValue()
{
  return MEMORY[0x1E0C9FA58]();
}

uint64_t FigCFArrayCopySubarrayWithRange()
{
  return MEMORY[0x1E0C9FA60]();
}

uint64_t FigCFArrayCopyValuesAsCFSet()
{
  return MEMORY[0x1E0C9FA68]();
}

uint64_t FigCFArrayCreateConcatenationOfTwoArrays()
{
  return MEMORY[0x1E0C9FA70]();
}

uint64_t FigCFArrayCreateCopy()
{
  return MEMORY[0x1E0C9FA78]();
}

uint64_t FigCFArrayCreateMutableCopy()
{
  return MEMORY[0x1E0C9FA80]();
}

uint64_t FigCFArrayForEach2()
{
  return MEMORY[0x1E0C9FA88]();
}

uint64_t FigCFArrayGetCFIndexAtIndex()
{
  return MEMORY[0x1E0C9FA90]();
}

uint64_t FigCFArrayGetCGFloatAtIndex()
{
  return MEMORY[0x1E0C9FA98]();
}

uint64_t FigCFArrayGetCMTimeAtIndex()
{
  return MEMORY[0x1E0C9FAA8]();
}

uint64_t FigCFArrayGetDoubleAtIndex()
{
  return MEMORY[0x1E0C9FAB0]();
}

uint64_t FigCFArrayGetFirstIndexOfValue()
{
  return MEMORY[0x1E0C9FAB8]();
}

uint64_t FigCFArrayGetFirstValue()
{
  return MEMORY[0x1E0C9FAC0]();
}

uint64_t FigCFArrayGetFloat32AtIndex()
{
  return MEMORY[0x1E0C9FAC8]();
}

uint64_t FigCFArrayGetFloatAtIndex()
{
  return MEMORY[0x1E0C9FAD0]();
}

uint64_t FigCFArrayGetInt32AtIndex()
{
  return MEMORY[0x1E0C9FAE0]();
}

uint64_t FigCFArrayGetInt64AtIndex()
{
  return MEMORY[0x1E0C9FAE8]();
}

uint64_t FigCFArrayGetIntAtIndex()
{
  return MEMORY[0x1E0C9FAF0]();
}

uint64_t FigCFArrayGetLastValue()
{
  return MEMORY[0x1E0C9FAF8]();
}

uint64_t FigCFArrayGetValueAtIndex()
{
  return MEMORY[0x1E0C9FB00]();
}

uint64_t FigCFArrayRemoveAllValues()
{
  return MEMORY[0x1E0C9FB08]();
}

uint64_t FigCFArrayRemoveLastElementOfValue()
{
  return MEMORY[0x1E0C9FB10]();
}

uint64_t FigCFAttributedStringSetDouble()
{
  return MEMORY[0x1E0C9FB18]();
}

uint64_t FigCFCopyCFErrorAsPropertyList()
{
  return MEMORY[0x1E0C9FB20]();
}

uint64_t FigCFCopyCompactDescription()
{
  return MEMORY[0x1E0C9FB28]();
}

uint64_t FigCFCopyPropertyAsTime()
{
  return MEMORY[0x1E0C9FB30]();
}

uint64_t FigCFCreateCombinedDictionary()
{
  return MEMORY[0x1E0C9FB38]();
}

uint64_t FigCFDataCreateWithJSONObject()
{
  return MEMORY[0x1E0C9FB40]();
}

uint64_t FigCFDateCreateFromString()
{
  return MEMORY[0x1E0C9FB48]();
}

uint64_t FigCFDictionaryAddEntriesToDictionaryWithRecursion()
{
  return MEMORY[0x1E0C9FB50]();
}

uint64_t FigCFDictionaryApplyBlock()
{
  return MEMORY[0x1E0C9FB58]();
}

uint64_t FigCFDictionaryCopyArrayOfKeys()
{
  return MEMORY[0x1E0C9FB60]();
}

uint64_t FigCFDictionaryCopyArrayOfValues()
{
  return MEMORY[0x1E0C9FB68]();
}

uint64_t FigCFDictionaryCreateMappedArray()
{
  return MEMORY[0x1E0C9FB78]();
}

uint64_t FigCFDictionaryCreateMutableCopy()
{
  return MEMORY[0x1E0C9FB80]();
}

uint64_t FigCFDictionaryGetArrayValue()
{
  return MEMORY[0x1E0C9FB90]();
}

uint64_t FigCFDictionaryGetBooleanIfPresent()
{
  return MEMORY[0x1E0C9FB98]();
}

uint64_t FigCFDictionaryGetBooleanValue()
{
  return MEMORY[0x1E0C9FBA0]();
}

uint64_t FigCFDictionaryGetCFIndexIfPresent()
{
  return MEMORY[0x1E0C9FBA8]();
}

uint64_t FigCFDictionaryGetCGFloatIfPresent()
{
  return MEMORY[0x1E0C9FBB0]();
}

uint64_t FigCFDictionaryGetCGRectIfPresent()
{
  return MEMORY[0x1E0C9FBB8]();
}

uint64_t FigCFDictionaryGetCGSizeIfPresent()
{
  return MEMORY[0x1E0C9FBC0]();
}

uint64_t FigCFDictionaryGetCMTimeIfPresent()
{
  return MEMORY[0x1E0C9FBC8]();
}

uint64_t FigCFDictionaryGetCMTimeRangeIfPresent()
{
  return MEMORY[0x1E0C9FBD0]();
}

uint64_t FigCFDictionaryGetCount()
{
  return MEMORY[0x1E0C9FBD8]();
}

uint64_t FigCFDictionaryGetDataValue()
{
  return MEMORY[0x1E0C9FBE0]();
}

uint64_t FigCFDictionaryGetDictionaryValue()
{
  return MEMORY[0x1E0C9FBE8]();
}

uint64_t FigCFDictionaryGetDoubleIfPresent()
{
  return MEMORY[0x1E0C9FBF0]();
}

uint64_t FigCFDictionaryGetFloat32IfPresent()
{
  return MEMORY[0x1E0C9FBF8]();
}

uint64_t FigCFDictionaryGetFloatIfPresent()
{
  return MEMORY[0x1E0C9FC00]();
}

uint64_t FigCFDictionaryGetInt16IfPresent()
{
  return MEMORY[0x1E0C9FC08]();
}

uint64_t FigCFDictionaryGetInt32IfPresent()
{
  return MEMORY[0x1E0C9FC10]();
}

uint64_t FigCFDictionaryGetInt64IfPresent()
{
  return MEMORY[0x1E0C9FC18]();
}

uint64_t FigCFDictionaryGetIntIfPresent()
{
  return MEMORY[0x1E0C9FC20]();
}

uint64_t FigCFDictionaryGetNumberValue()
{
  return MEMORY[0x1E0C9FC28]();
}

uint64_t FigCFDictionaryGetRangeIfPresent()
{
  return MEMORY[0x1E0C9FC30]();
}

uint64_t FigCFDictionaryGetStringValue()
{
  return MEMORY[0x1E0C9FC38]();
}

uint64_t FigCFDictionaryGetURLValue()
{
  return MEMORY[0x1E0C9FC40]();
}

uint64_t FigCFDictionaryGetValue()
{
  return MEMORY[0x1E0C9FC48]();
}

uint64_t FigCFDictionaryGetValueForCaseInsensitiveKeyIfPresent()
{
  return MEMORY[0x1E0C9FC50]();
}

uint64_t FigCFDictionaryGetValueIfPresent()
{
  return MEMORY[0x1E0C9FC58]();
}

uint64_t FigCFDictionaryRemoveAllValues()
{
  return MEMORY[0x1E0C9FC60]();
}

uint64_t FigCFDictionarySetAllValuesFromDictionary()
{
  return MEMORY[0x1E0C9FC68]();
}

uint64_t FigCFDictionarySetBase64Data()
{
  return MEMORY[0x1E0C9FC70]();
}

uint64_t FigCFDictionarySetBoolean()
{
  return MEMORY[0x1E0C9FC78]();
}

uint64_t FigCFDictionarySetCFIndex()
{
  return MEMORY[0x1E0C9FC80]();
}

uint64_t FigCFDictionarySetCGFloat()
{
  return MEMORY[0x1E0C9FC88]();
}

uint64_t FigCFDictionarySetCGRect()
{
  return MEMORY[0x1E0C9FC90]();
}

uint64_t FigCFDictionarySetCGSize()
{
  return MEMORY[0x1E0C9FC98]();
}

uint64_t FigCFDictionarySetCMTime()
{
  return MEMORY[0x1E0C9FCA0]();
}

uint64_t FigCFDictionarySetCMTimeRange()
{
  return MEMORY[0x1E0C9FCA8]();
}

uint64_t FigCFDictionarySetDouble()
{
  return MEMORY[0x1E0C9FCB0]();
}

uint64_t FigCFDictionarySetFloat()
{
  return MEMORY[0x1E0C9FCB8]();
}

uint64_t FigCFDictionarySetFloat32()
{
  return MEMORY[0x1E0C9FCC0]();
}

uint64_t FigCFDictionarySetInt()
{
  return MEMORY[0x1E0C9FCC8]();
}

uint64_t FigCFDictionarySetInt16()
{
  return MEMORY[0x1E0C9FCD0]();
}

uint64_t FigCFDictionarySetInt32()
{
  return MEMORY[0x1E0C9FCD8]();
}

uint64_t FigCFDictionarySetInt64()
{
  return MEMORY[0x1E0C9FCE0]();
}

uint64_t FigCFDictionarySetRange()
{
  return MEMORY[0x1E0C9FCE8]();
}

uint64_t FigCFDictionarySetUInt32()
{
  return MEMORY[0x1E0C9FCF0]();
}

uint64_t FigCFDictionarySetUInt64()
{
  return MEMORY[0x1E0C9FCF8]();
}

uint64_t FigCFDictionarySetValue()
{
  return MEMORY[0x1E0C9FD00]();
}

uint64_t FigCFDictionarySetValueFromKeyInDict()
{
  return MEMORY[0x1E0C9FD08]();
}

uint64_t FigCFEqual()
{
  return MEMORY[0x1E0C9FD10]();
}

uint64_t FigCFErrorCreateFromPropertyList()
{
  return MEMORY[0x1E0C9FD18]();
}

uint64_t FigCFIntersectionRange()
{
  return MEMORY[0x1E0C9FD20]();
}

uint64_t FigCFLocaleCreateWithMovieLangCode()
{
  return MEMORY[0x1E0C9FD28]();
}

uint64_t FigCFNumberCreateFloat32()
{
  return MEMORY[0x1E0C9FD30]();
}

uint64_t FigCFNumberCreateFloat64()
{
  return MEMORY[0x1E0C9FD38]();
}

uint64_t FigCFNumberCreateSInt16()
{
  return MEMORY[0x1E0C9FD40]();
}

uint64_t FigCFNumberCreateSInt32()
{
  return MEMORY[0x1E0C9FD48]();
}

uint64_t FigCFNumberCreateSInt64()
{
  return MEMORY[0x1E0C9FD50]();
}

uint64_t FigCFNumberCreateSInt8()
{
  return MEMORY[0x1E0C9FD58]();
}

uint64_t FigCFNumberCreateUInt16()
{
  return MEMORY[0x1E0C9FD60]();
}

uint64_t FigCFNumberCreateUInt32()
{
  return MEMORY[0x1E0C9FD68]();
}

uint64_t FigCFNumberCreateUInt64()
{
  return MEMORY[0x1E0C9FD70]();
}

uint64_t FigCFNumberCreateUInt8()
{
  return MEMORY[0x1E0C9FD78]();
}

uint64_t FigCFNumberGetFloat32()
{
  return MEMORY[0x1E0C9FD80]();
}

uint64_t FigCFNumberGetFloat64()
{
  return MEMORY[0x1E0C9FD88]();
}

uint64_t FigCFNumberGetSInt32()
{
  return MEMORY[0x1E0C9FD90]();
}

uint64_t FigCFNumberGetSInt64()
{
  return MEMORY[0x1E0C9FD98]();
}

uint64_t FigCFNumberGetUInt32()
{
  return MEMORY[0x1E0C9FDA8]();
}

uint64_t FigCFNumberGetUInt64()
{
  return MEMORY[0x1E0C9FDB0]();
}

uint64_t FigCFParseISO8601Date()
{
  return MEMORY[0x1E0C9FDB8]();
}

uint64_t FigCFPropertyListCreateFromFigFileFork()
{
  return MEMORY[0x1E0C9FDC0]();
}

uint64_t FigCFPropertyListWriteToFigFileFork()
{
  return MEMORY[0x1E0C9FDC8]();
}

uint64_t FigCFRangeGetLimit()
{
  return MEMORY[0x1E0C9FDD0]();
}

uint64_t FigCFSetApplyBlock()
{
  return MEMORY[0x1E0C9FDD8]();
}

uint64_t FigCFSetContainsValue()
{
  return MEMORY[0x1E0C9FDE0]();
}

uint64_t FigCFSetCopyValuesAsCFArray()
{
  return MEMORY[0x1E0C9FDE8]();
}

uint64_t FigCFSetCreateFromArray()
{
  return MEMORY[0x1E0C9FDF0]();
}

uint64_t FigCFSetPropertyToTime()
{
  return MEMORY[0x1E0C9FDF8]();
}

uint64_t FigCFStringCopyWithIndent()
{
  return MEMORY[0x1E0C9FE00]();
}

uint64_t FigCFStringCreateCacheKeyFromURLString()
{
  return MEMORY[0x1E0C9FE08]();
}

uint64_t FigCFStringCreateLoggingIdentifierOfLength()
{
  return MEMORY[0x1E0C9FE10]();
}

uint64_t FigCFStringCreateWithBytesAndMovieLangCode()
{
  return MEMORY[0x1E0C9FE18]();
}

uint64_t FigCFStringCreateWithBytesWithUnknownEncoding()
{
  return MEMORY[0x1E0C9FE20]();
}

uint64_t FigCFStringCreateWithJSONDictionary()
{
  return MEMORY[0x1E0C9FE28]();
}

uint64_t FigCFStringFind()
{
  return MEMORY[0x1E0C9FE30]();
}

uint64_t FigCFStringGetCStringPtrAndBufferToFree()
{
  return MEMORY[0x1E0C9FE38]();
}

uint64_t FigCFStringGetIntAfterString()
{
  return MEMORY[0x1E0C9FE48]();
}

uint64_t FigCFStringGetOSTypeValue()
{
  return MEMORY[0x1E0C9FE50]();
}

uint64_t FigCFURLCopyCanonicalPath()
{
  return MEMORY[0x1E0C9FE58]();
}

uint64_t FigCFURLCreateCacheKey()
{
  return MEMORY[0x1E0C9FE60]();
}

uint64_t FigCFURLCreateDirectory()
{
  return MEMORY[0x1E0C9FE68]();
}

uint64_t FigCFURLCreateFromSystemTemporaryDirectory()
{
  return MEMORY[0x1E0C9FE70]();
}

uint64_t FigCFURLCreateFromTemporaryFileWithDirectoryAndSuffix()
{
  return MEMORY[0x1E0C9FE80]();
}

uint64_t FigCFURLCreateRelativeURLWithURLAndBaseURL()
{
  return MEMORY[0x1E0C9FE88]();
}

uint64_t FigCFURLCreateWithSuffixedExtension()
{
  return MEMORY[0x1E0C9FE90]();
}

uint64_t FigCFURLDoesDirectoryExist()
{
  return MEMORY[0x1E0C9FE98]();
}

uint64_t FigCFURLGetFileStats()
{
  return MEMORY[0x1E0C9FEA0]();
}

uint64_t FigCFURLIsLocalResource()
{
  return MEMORY[0x1E0C9FEA8]();
}

uint64_t FigCFWeakReferenceDestroy()
{
  return MEMORY[0x1E0C9FEB0]();
}

uint64_t FigCFWeakReferenceHolderCopyReferencedObject()
{
  return MEMORY[0x1E0C9FEB8]();
}

uint64_t FigCFWeakReferenceHolderCreateWithReferencedObject()
{
  return MEMORY[0x1E0C9FEC0]();
}

uint64_t FigCFWeakReferenceInit()
{
  return MEMORY[0x1E0C9FED0]();
}

uint64_t FigCFWeakReferenceLoadAndRetain()
{
  return MEMORY[0x1E0C9FED8]();
}

uint64_t FigCFWeakReferenceStore()
{
  return MEMORY[0x1E0C9FEE0]();
}

uint64_t FigCFWeakReferenceTableAddValueAndGetKey()
{
  return MEMORY[0x1E0C9FEE8]();
}

uint64_t FigCFWeakReferenceTableAddValueAssociatedWithKey()
{
  return MEMORY[0x1E0C9FEF0]();
}

uint64_t FigCFWeakReferenceTableApplyFunction()
{
  return MEMORY[0x1E0C9FEF8]();
}

uint64_t FigCFWeakReferenceTableCopyValue()
{
  return MEMORY[0x1E0C9FF00]();
}

uint64_t FigCFWeakReferenceTableCopyValues()
{
  return MEMORY[0x1E0C9FF08]();
}

uint64_t FigCFWeakReferenceTableCreate()
{
  return MEMORY[0x1E0C9FF10]();
}

uint64_t FigCFWeakReferenceTableRemoveValue()
{
  return MEMORY[0x1E0C9FF18]();
}

uint64_t FigCPECryptorGetClassID()
{
  return MEMORY[0x1E0C9FF20]();
}

uint64_t FigCPECryptorGetNotificationCenter()
{
  return MEMORY[0x1E0C9FF28]();
}

uint64_t FigCPECryptorGetTypeID()
{
  return MEMORY[0x1E0C9FF30]();
}

uint64_t FigCPECryptorRemoteGetID()
{
  return MEMORY[0x1E0C9FF38]();
}

uint64_t FigCPECryptorRemoteRetainCopiedCryptor()
{
  return MEMORY[0x1E0C9FF40]();
}

uint64_t FigCPECryptorServerCopyCryptorForID()
{
  return MEMORY[0x1E0C9FF48]();
}

uint64_t FigCPECryptorServerDisassociateCryptorWithClientConnection()
{
  return MEMORY[0x1E0C9FF50]();
}

uint64_t FigCPECryptorServerGetIDForCryptorByAssociatingWithClientConnection()
{
  return MEMORY[0x1E0C9FF58]();
}

uint64_t FigCPECryptorServerGetIDForCryptorByAssociatingWithClientPID()
{
  return MEMORY[0x1E0C9FF60]();
}

uint64_t FigCPECryptorStartServer()
{
  return MEMORY[0x1E0C9FF68]();
}

uint64_t FigCPEFairPlayCryptorGetClassID()
{
  return MEMORY[0x1E0C9FF70]();
}

uint64_t FigCanTriggerTapToRadar()
{
  return MEMORY[0x1E0C9FF78]();
}

uint64_t FigCaptionDataCopySubrange()
{
  return MEMORY[0x1E0C9FF80]();
}

uint64_t FigCaptionDataCreate()
{
  return MEMORY[0x1E0C9FF88]();
}

uint64_t FigCaptionDataCreateMutable()
{
  return MEMORY[0x1E0C9FF90]();
}

uint64_t FigCaptionDataCreateMutableCopy()
{
  return MEMORY[0x1E0C9FF98]();
}

uint64_t FigCaptionDataGetCMBaseObject()
{
  return MEMORY[0x1E0C9FFA0]();
}

uint64_t FigCaptionDataGetClassID()
{
  return MEMORY[0x1E0C9FFA8]();
}

uint64_t FigCaptionDataGetTypeID()
{
  return MEMORY[0x1E0C9FFB0]();
}

uint64_t FigCaptionDynamicStyleAddKeyFrameValue()
{
  return MEMORY[0x1E0C9FFB8]();
}

uint64_t FigCaptionDynamicStyleCopyKeyFrameValueAtIndex()
{
  return MEMORY[0x1E0C9FFC0]();
}

uint64_t FigCaptionDynamicStyleCopyKeyFrameValueAtRelativeTime()
{
  return MEMORY[0x1E0C9FFC8]();
}

uint64_t FigCaptionDynamicStyleCreate()
{
  return MEMORY[0x1E0C9FFD0]();
}

uint64_t FigCaptionDynamicStyleCreateMutable()
{
  return MEMORY[0x1E0C9FFD8]();
}

uint64_t FigCaptionDynamicStyleGetInitialValue()
{
  return MEMORY[0x1E0C9FFE0]();
}

uint64_t FigCaptionDynamicStyleGetKeyFrameCount()
{
  return MEMORY[0x1E0C9FFE8]();
}

uint64_t FigCaptionDynamicStyleGetTypeID()
{
  return MEMORY[0x1E0C9FFF0]();
}

uint64_t FigCaptionFontFamilyNameListAppend()
{
  return MEMORY[0x1E0C9FFF8]();
}

uint64_t FigCaptionFontFamilyNameListCopyFamilyKindAndNameAtIndex()
{
  return MEMORY[0x1E0CA0000]();
}

uint64_t FigCaptionFontFamilyNameListCreateMutable()
{
  return MEMORY[0x1E0CA0008]();
}

uint64_t FigCaptionFontFamilyNameListGetCount()
{
  return MEMORY[0x1E0CA0010]();
}

uint64_t FigCaptionFontFamilyNameListGetTypeID()
{
  return MEMORY[0x1E0CA0018]();
}

uint64_t FigCaptionGeometryCopyCellBasedDimensionAsDictionary()
{
  return MEMORY[0x1E0CA0020]();
}

uint64_t FigCaptionGeometryCopyCellBasedPointAsDictionary()
{
  return MEMORY[0x1E0CA0028]();
}

uint64_t FigCaptionGeometryCopyCellBasedSizeAsDictionary()
{
  return MEMORY[0x1E0CA0030]();
}

uint64_t FigCaptionGeometryGetCellBasedDimensionFromDictionary()
{
  return MEMORY[0x1E0CA0038]();
}

uint64_t FigCaptionGeometryGetCellBasedPointFromDictionary()
{
  return MEMORY[0x1E0CA0040]();
}

uint64_t FigCaptionGroupCreate()
{
  return MEMORY[0x1E0CA0048]();
}

uint64_t FigCaptionGroupCreateEmpty()
{
  return MEMORY[0x1E0CA0050]();
}

uint64_t FigCaptionGroupGetCaptionData()
{
  return MEMORY[0x1E0CA0058]();
}

uint64_t FigCaptionGroupGetDurationAfterSlice()
{
  return MEMORY[0x1E0CA0060]();
}

uint64_t FigCaptionGroupGetDurationBeforeSlice()
{
  return MEMORY[0x1E0CA0068]();
}

uint64_t FigCaptionGroupGetSliceCount()
{
  return MEMORY[0x1E0CA0070]();
}

uint64_t FigCaptionPositionCreate()
{
  return MEMORY[0x1E0CA0078]();
}

uint64_t FigCaptionPositionGetTypeID()
{
  return MEMORY[0x1E0CA0080]();
}

uint64_t FigCaptionRegionCreate()
{
  return MEMORY[0x1E0CA0088]();
}

uint64_t FigCaptionRegionCreateMutable()
{
  return MEMORY[0x1E0CA0090]();
}

uint64_t FigCaptionRegionCreateMutableCopy()
{
  return MEMORY[0x1E0CA0098]();
}

uint64_t FigCaptionRegionGetCMBaseObject()
{
  return MEMORY[0x1E0CA00A0]();
}

uint64_t FigCaptionRegionGetTypeID()
{
  return MEMORY[0x1E0CA00A8]();
}

uint64_t FigCaptionRubyReserveCreate()
{
  return MEMORY[0x1E0CA00B0]();
}

uint64_t FigCaptionRubyReserveCreateNone()
{
  return MEMORY[0x1E0CA00B8]();
}

uint64_t FigCaptionRubyReserveGetTypeID()
{
  return MEMORY[0x1E0CA00C0]();
}

uint64_t FigCaptionSerializerCreate()
{
  return MEMORY[0x1E0CA00C8]();
}

uint64_t FigCaptionSerializerCreateCFDataFromCaptionGroup()
{
  return MEMORY[0x1E0CA00D0]();
}

uint64_t FigCaptionSerializerCreateCaptionGroupFromCFData()
{
  return MEMORY[0x1E0CA00D8]();
}

uint64_t FigCaptionTextEmphasisCreate()
{
  return MEMORY[0x1E0CA00E0]();
}

uint64_t FigCaptionTextEmphasisCreateNone()
{
  return MEMORY[0x1E0CA00E8]();
}

uint64_t FigCaptionTextEmphasisGetTypeID()
{
  return MEMORY[0x1E0CA00F0]();
}

uint64_t FigCaptionTextOutlineCreate()
{
  return MEMORY[0x1E0CA00F8]();
}

uint64_t FigCaptionTextOutlineGetColor()
{
  return MEMORY[0x1E0CA0100]();
}

uint64_t FigCaptionTextOutlineGetThickness()
{
  return MEMORY[0x1E0CA0108]();
}

uint64_t FigCaptionTextOutlineGetTypeID()
{
  return MEMORY[0x1E0CA0110]();
}

uint64_t FigCaptionTextShadowCreate()
{
  return MEMORY[0x1E0CA0118]();
}

uint64_t FigCaptionTextShadowGetTypeID()
{
  return MEMORY[0x1E0CA0120]();
}

uint64_t FigCaptionTextShadowListCreate()
{
  return MEMORY[0x1E0CA0128]();
}

uint64_t FigCaptionTextShadowListCreateNone()
{
  return MEMORY[0x1E0CA0130]();
}

uint64_t FigClientServer_CreateCFErrorFromPropertyList()
{
  return MEMORY[0x1E0CA0138]();
}

uint64_t FigClientServer_CreatePropertyListFromCFError()
{
  return MEMORY[0x1E0CA0140]();
}

uint64_t FigConditionVariableBroadcast()
{
  return MEMORY[0x1E0CA0188]();
}

uint64_t FigConditionVariableCreate()
{
  return MEMORY[0x1E0CA0190]();
}

uint64_t FigConditionVariableDestroy()
{
  return MEMORY[0x1E0CA0198]();
}

uint64_t FigConditionVariableWaitRelative()
{
  return MEMORY[0x1E0CA01A0]();
}

uint64_t FigControlCommandsStartServer()
{
  return MEMORY[0x1E0CA01A8]();
}

uint64_t FigCopyBacktrace()
{
  return MEMORY[0x1E0CA01B0]();
}

uint64_t FigCopyCFPreferenceAppValueOrOptionCFTypeWithDefault()
{
  return MEMORY[0x1E0CA01B8]();
}

uint64_t FigCopyCommonMemoryPool()
{
  return MEMORY[0x1E0CA01C8]();
}

uint64_t FigCopyCoverageFilePathPattern()
{
  return MEMORY[0x1E0CA01D0]();
}

uint64_t FigCopyLastSignaledErrorInfo()
{
  return MEMORY[0x1E0CA01D8]();
}

uint64_t FigCopyRankedLanguagesAccordingToPreferredLanguages()
{
  return MEMORY[0x1E0CA01E0]();
}

uint64_t FigCreateAudioCodecStringFromFormatDescription()
{
  return MEMORY[0x1E0CA01F0]();
}

uint64_t FigCreateBase32EncodedSHA1HashFromCFString()
{
  return MEMORY[0x1E0CA01F8]();
}

uint64_t FigCreateBase32EncodedStringFromBytes()
{
  return MEMORY[0x1E0CA0200]();
}

uint64_t FigCreateBase64EncodedStringFromBytes()
{
  return MEMORY[0x1E0CA0208]();
}

uint64_t FigCreateBase64EncodedStringFromCFData()
{
  return MEMORY[0x1E0CA0210]();
}

uint64_t FigCreateBlockBufferCopyingMemoryBlock()
{
  return MEMORY[0x1E0CA0218]();
}

uint64_t FigCreateBlockBufferWithCFDataNoCopy()
{
  return MEMORY[0x1E0CA0220]();
}

uint64_t FigCreateBlockBufferWithCFString()
{
  return MEMORY[0x1E0CA0228]();
}

uint64_t FigCreateBytesFromCFString()
{
  return MEMORY[0x1E0CA0230]();
}

uint64_t FigCreateBytesFromCFStringAndMovieLangCode()
{
  return MEMORY[0x1E0CA0238]();
}

uint64_t FigCreateCFArrayFromColorValues()
{
  return MEMORY[0x1E0CA0240]();
}

uint64_t FigCreateCFDataFromBase64EncodedString()
{
  return MEMORY[0x1E0CA0248]();
}

uint64_t FigCreateCFDataWithBlockBufferNoCopy()
{
  return MEMORY[0x1E0CA0258]();
}

uint64_t FigCreateCGColorSRGB()
{
  return MEMORY[0x1E0CA0268]();
}

uint64_t FigCreateHexStringFromCFData()
{
  return MEMORY[0x1E0CA0278]();
}

uint64_t FigCreateIOSurfaceBackedCVPixelBuffer()
{
  return MEMORY[0x1E0CEC8C8]();
}

uint64_t FigCreateIOSurfacePropertiesDictionary()
{
  return MEMORY[0x1E0CEC8D8]();
}

uint64_t FigCreateModelSpecificPropertyList()
{
  return MEMORY[0x1E0CA0280]();
}

uint64_t FigCreatePathForPersistentURL()
{
  return MEMORY[0x1E0CA0288]();
}

uint64_t FigCreatePixelBufferAttributesWithIOSurfaceSupport()
{
  return MEMORY[0x1E0CEC8E0]();
}

uint64_t FigCreatePropertyListFromBundleIdentifier()
{
  return MEMORY[0x1E0CA0290]();
}

uint64_t FigCreatePropertyListFromBundleIdentifierOnPlatform()
{
  return MEMORY[0x1E0CA0298]();
}

uint64_t FigCreateSecurityScopedFileURLForPersistentURL()
{
  return MEMORY[0x1E0CA02A0]();
}

uint64_t FigCustomURLLoaderCreate()
{
  return MEMORY[0x1E0CA02D0]();
}

uint64_t FigCustomURLLoaderGetCFTypeID()
{
  return MEMORY[0x1E0CA02D8]();
}

uint64_t FigCustomURLLoaderRemoteCreateWithObjectID()
{
  return MEMORY[0x1E0CA02E0]();
}

uint64_t FigCustomURLLoaderRemoteGetObjectID()
{
  return MEMORY[0x1E0CA02E8]();
}

uint64_t FigCustomURLLoaderServerAssociateNeighbor()
{
  return MEMORY[0x1E0CA02F0]();
}

uint64_t FigCustomURLLoaderServerCopyLoaderForID()
{
  return MEMORY[0x1E0CA02F8]();
}

uint64_t FigCustomURLLoaderServerStart()
{
  return MEMORY[0x1E0CA0300]();
}

uint64_t FigCustomURLRequestInfoCopyURL()
{
  return MEMORY[0x1E0CA0330]();
}

uint64_t FigCustomURLRequestInfoCopyUserAgent()
{
  return MEMORY[0x1E0CA0338]();
}

uint64_t FigCustomURLRequestInfoCreateMutable()
{
  return MEMORY[0x1E0CA0340]();
}

uint64_t FigCustomURLRequestInfoSetAcceptEncoding()
{
  return MEMORY[0x1E0CA0370]();
}

uint64_t FigCustomURLRequestInfoSetAllowedUniversalTypeIdentifiers()
{
  return MEMORY[0x1E0CA0378]();
}

uint64_t FigCustomURLRequestInfoSetByteRange()
{
  return MEMORY[0x1E0CA0380]();
}

uint64_t FigCustomURLRequestInfoSetCryptor()
{
  return MEMORY[0x1E0CA0388]();
}

uint64_t FigCustomURLRequestInfoSetCryptorKeyRequestID()
{
  return MEMORY[0x1E0CA0390]();
}

uint64_t FigCustomURLRequestInfoSetDefaultLatency()
{
  return MEMORY[0x1E0CA0398]();
}

uint64_t FigCustomURLRequestInfoSetExpectedToBlock()
{
  return MEMORY[0x1E0CA03A0]();
}

uint64_t FigCustomURLRequestInfoSetHTTPHeaders()
{
  return MEMORY[0x1E0CA03A8]();
}

uint64_t FigCustomURLRequestInfoSetIsPingRequest()
{
  return MEMORY[0x1E0CA03B0]();
}

uint64_t FigCustomURLRequestInfoSetIsRenewalRequest()
{
  return MEMORY[0x1E0CA03B8]();
}

uint64_t FigCustomURLRequestInfoSetIsSecureStopSupported()
{
  return MEMORY[0x1E0CA03C0]();
}

uint64_t FigCustomURLRequestInfoSetNSURLAuthenticationChallenge()
{
  return MEMORY[0x1E0CA03C8]();
}

uint64_t FigCustomURLRequestInfoSetNetworkHistory()
{
  return MEMORY[0x1E0CA03D0]();
}

uint64_t FigCustomURLRequestInfoSetUserAgent()
{
  return MEMORY[0x1E0CA03D8]();
}

uint64_t FigCustomURLResponseInfoCopyContentRenewalDate()
{
  return MEMORY[0x1E0CA03E0]();
}

uint64_t FigCustomURLResponseInfoCopyFinalURL()
{
  return MEMORY[0x1E0CA03E8]();
}

uint64_t FigCustomURLResponseInfoCopyHTTPHeaders()
{
  return MEMORY[0x1E0CA03F0]();
}

uint64_t FigCustomURLResponseInfoCopyNSURLCredential()
{
  return MEMORY[0x1E0CA03F8]();
}

uint64_t FigCustomURLResponseInfoCopyRedirectLocation()
{
  return MEMORY[0x1E0CA0400]();
}

uint64_t FigCustomURLResponseInfoCopyRedirectRequestHeaders()
{
  return MEMORY[0x1E0CA0408]();
}

uint64_t FigCustomURLResponseInfoCopyRequestInfo()
{
  return MEMORY[0x1E0CA0410]();
}

uint64_t FigCustomURLResponseInfoCopyUniversalTypeIdentifier()
{
  return MEMORY[0x1E0CA0418]();
}

uint64_t FigCustomURLResponseInfoGetContentLength()
{
  return MEMORY[0x1E0CA0428]();
}

uint64_t FigCustomURLResponseInfoGetEntireLengthAvailableOnDemand()
{
  return MEMORY[0x1E0CA0430]();
}

uint64_t FigCustomURLResponseInfoGetHTTPStatusCode()
{
  return MEMORY[0x1E0CA0438]();
}

uint64_t FigCustomURLResponseInfoGetIsCachingDisabled()
{
  return MEMORY[0x1E0CA0440]();
}

uint64_t FigCustomURLResponseInfoGetNSURLSessionAuthChallengeDisposition()
{
  return MEMORY[0x1E0CA0448]();
}

uint64_t FigCustomURLResponseInfoGetResourceSize()
{
  return MEMORY[0x1E0CA0450]();
}

uint64_t FigCustomURLResponseInfoGetRoundTripTime()
{
  return MEMORY[0x1E0CA0458]();
}

uint64_t FigDebugGetAdoptedVoucherProcessIDAndUUIDString()
{
  return MEMORY[0x1E0CA04E8]();
}

uint64_t FigDebugIsInternalBuild()
{
  return MEMORY[0x1E0CA04F0]();
}

uint64_t FigDebugSettingGetKeyAsBoolean()
{
  return MEMORY[0x1E0CA04F8]();
}

uint64_t FigDeferCFRelease()
{
  return MEMORY[0x1E0CA0500]();
}

uint64_t FigDeferNotificationToDispatchQueue()
{
  return MEMORY[0x1E0CA0508]();
}

uint64_t FigDeferNotificationToRunLoop()
{
  return MEMORY[0x1E0CA0510]();
}

uint64_t FigDerivedClockCreateWithGetTimeCallback()
{
  return MEMORY[0x1E0CA0518]();
}

uint64_t FigDerivedClockGetDerivedStorage()
{
  return MEMORY[0x1E0CA0520]();
}

uint64_t FigDerivedClockVerifyCallbacksMatch()
{
  return MEMORY[0x1E0CA0528]();
}

uint64_t FigDigestMD5AppendData()
{
  return MEMORY[0x1E0CA0530]();
}

uint64_t FigDigestMD5Create()
{
  return MEMORY[0x1E0CA0538]();
}

uint64_t FigDigestMD5Destroy()
{
  return MEMORY[0x1E0CA0540]();
}

uint64_t FigDigestMD5GetDigest()
{
  return MEMORY[0x1E0CA0548]();
}

uint64_t FigDigestMD5Reset()
{
  return MEMORY[0x1E0CA0550]();
}

uint64_t FigDigestSHA1AppendData()
{
  return MEMORY[0x1E0CA0558]();
}

uint64_t FigDigestSHA1Create()
{
  return MEMORY[0x1E0CA0560]();
}

uint64_t FigDigestSHA1Destroy()
{
  return MEMORY[0x1E0CA0568]();
}

uint64_t FigDigestSHA1GetDigest()
{
  return MEMORY[0x1E0CA0570]();
}

uint64_t FigDirectoryEnableDirStatsTracking()
{
  return MEMORY[0x1E0CA0578]();
}

uint64_t FigDispatchAsyncPostNotification()
{
  return MEMORY[0x1E0CA0588]();
}

uint64_t FigDispatchCreateDispatchSourceBlock()
{
  return MEMORY[0x1E0CA0598]();
}

uint64_t FigDispatchOnceInitWithinObject()
{
  return MEMORY[0x1E0CA05A0]();
}

uint64_t FigDispatchQueueCreateTargetingWorkloopWithPriority()
{
  return MEMORY[0x1E0CA05B8]();
}

uint64_t FigDispatchQueueCreateWithPriority()
{
  return MEMORY[0x1E0CA05C0]();
}

uint64_t FigDispatchQueueCreateWithPriorityAndClientPID()
{
  return MEMORY[0x1E0CA05C8]();
}

uint64_t FigDispatchQueueHolderCreateWithDispatchQueue()
{
  return MEMORY[0x1E0CA05D0]();
}

uint64_t FigDispatchQueueHolderGetDispatchQueue()
{
  return MEMORY[0x1E0CA05D8]();
}

uint64_t FigDispatchQueueHolderGetTypeID()
{
  return MEMORY[0x1E0CA05E0]();
}

uint64_t FigDispatchQueueSetPriorityAndClientPID()
{
  return MEMORY[0x1E0CA05E8]();
}

uint64_t FigEndpointAcquireAndCopyStreamResource()
{
  return MEMORY[0x1E0CA05F8]();
}

uint64_t FigEndpointAudioSourceGetClassID()
{
  return MEMORY[0x1E0CA0630]();
}

uint64_t FigEndpointContainsStream()
{
  return MEMORY[0x1E0CA0640]();
}

uint64_t FigEndpointGetCMBaseObject()
{
  return MEMORY[0x1E0CA0680]();
}

uint64_t FigEndpointPlaybackSessionGetCMBaseObject()
{
  return MEMORY[0x1E0CA06E0]();
}

uint64_t FigEndpointRelinquishStreamResource()
{
  return MEMORY[0x1E0CA0720]();
}

uint64_t FigEndpointRemoteControlSessionStartServer()
{
  return MEMORY[0x1E0CA0738]();
}

uint64_t FigEndpointStartServer()
{
  return MEMORY[0x1E0CA0748]();
}

uint64_t FigEndpointStreamAirPlayGetClassID()
{
  return MEMORY[0x1E0CA0758]();
}

uint64_t FigEndpointStreamAudioFormatDescriptionCreate()
{
  return MEMORY[0x1E0CA0768]();
}

uint64_t FigEndpointStreamAudioFormatDescriptionCreateWithCMFormatDescription()
{
  return MEMORY[0x1E0CA0770]();
}

uint64_t FigEndpointStreamAudioFormatDescriptionGetASBD()
{
  return MEMORY[0x1E0CA0778]();
}

uint64_t FigEndpointStreamAudioFormatDescriptionGetChannelLayoutTag()
{
  return MEMORY[0x1E0CA0780]();
}

uint64_t FigEndpointStreamGetCMBaseObject()
{
  return MEMORY[0x1E0CA0788]();
}

uint64_t FigEndpointStreamResume()
{
  return MEMORY[0x1E0CA0798]();
}

uint64_t FigEndpointStreamStartServer()
{
  return MEMORY[0x1E0CA07A8]();
}

uint64_t FigEndpointStreamSuspend()
{
  return MEMORY[0x1E0CA07B0]();
}

uint64_t FigEndpointStreamSuspendSync()
{
  return MEMORY[0x1E0CA07B8]();
}

uint64_t FigEndpointStreamXPCRemoteGetObjectID()
{
  return MEMORY[0x1E0CA07C0]();
}

uint64_t FigEndpointStreamXPCRemoteRetainCopiedEndpointStream()
{
  return MEMORY[0x1E0CA07C8]();
}

uint64_t FigEndpointUIAgentStartServer()
{
  return MEMORY[0x1E0D483C8]();
}

uint64_t FigFileConvertURLToAbsoluteAndMarkAsDirectory()
{
  return MEMORY[0x1E0CA0840]();
}

uint64_t FigFileCreateTempDirectory()
{
  return MEMORY[0x1E0CA0848]();
}

uint64_t FigFileCreateTempFileAtURL()
{
  return MEMORY[0x1E0CA0850]();
}

uint64_t FigFileDeleteDirectory()
{
  return MEMORY[0x1E0CA0858]();
}

uint64_t FigFileDeleteFile()
{
  return MEMORY[0x1E0CA0860]();
}

uint64_t FigFileDeleteRecursive()
{
  return MEMORY[0x1E0CA0868]();
}

uint64_t FigFileDoesFileExist()
{
  return MEMORY[0x1E0CA0870]();
}

uint64_t FigFileForkClose()
{
  return MEMORY[0x1E0CA0878]();
}

uint64_t FigFileForkOpenMainByCFURL()
{
  return MEMORY[0x1E0CA0888]();
}

uint64_t FigFileForkRead()
{
  return MEMORY[0x1E0CA0890]();
}

uint64_t FigFileForkTruncate()
{
  return MEMORY[0x1E0CA0898]();
}

uint64_t FigFileForkWrite()
{
  return MEMORY[0x1E0CA08A0]();
}

uint64_t FigFileGetDarwinFileDesc()
{
  return MEMORY[0x1E0CA08A8]();
}

uint64_t FigFileGetDarwinPath()
{
  return MEMORY[0x1E0CA08B0]();
}

uint64_t FigFileGetFileInfo()
{
  return MEMORY[0x1E0CA08B8]();
}

uint64_t FigFileInfoEqual()
{
  return MEMORY[0x1E0CA08C0]();
}

uint64_t FigFileIsFileOnExternalStorageDevice()
{
  return MEMORY[0x1E0CA08C8]();
}

uint64_t FigFileLock()
{
  return MEMORY[0x1E0CA08D0]();
}

uint64_t FigFileMarkPurgeable()
{
  return MEMORY[0x1E0CA08D8]();
}

uint64_t FigFileReadURLAndCreateCFData()
{
  return MEMORY[0x1E0CA08E0]();
}

uint64_t FigFileRename()
{
  return MEMORY[0x1E0CA08E8]();
}

uint64_t FigFileUnlock()
{
  return MEMORY[0x1E0CA08F0]();
}

uint64_t FigFileValidateFileNameIsWithinParentDirectory()
{
  return MEMORY[0x1E0CA08F8]();
}

uint64_t FigFileWrapDarwinFileDesc()
{
  return MEMORY[0x1E0CA0900]();
}

uint64_t FigFormatDescriptionRelease()
{
  return MEMORY[0x1E0CA0918]();
}

uint64_t FigFormatDescriptionRetain()
{
  return MEMORY[0x1E0CA0920]();
}

uint64_t FigFoundationCreateHardLink()
{
  return MEMORY[0x1E0CA0928]();
}

uint64_t FigGeometryAspectRatioCopyAsDictionary()
{
  return MEMORY[0x1E0CA0930]();
}

uint64_t FigGeometryAspectRatioIsValid()
{
  return MEMORY[0x1E0CA0938]();
}

uint64_t FigGeometryAspectRatioMake()
{
  return MEMORY[0x1E0CA0940]();
}

uint64_t FigGeometryAspectRatioMakeFromDictionary()
{
  return MEMORY[0x1E0CA0948]();
}

uint64_t FigGeometryCoordinateSpaceCreate()
{
  return MEMORY[0x1E0CA0950]();
}

uint64_t FigGeometryDimensionCopyAsDictionary()
{
  return MEMORY[0x1E0CA0958]();
}

uint64_t FigGeometryDimensionCopyDescription()
{
  return MEMORY[0x1E0CA0960]();
}

uint64_t FigGeometryDimensionEqualToDimension()
{
  return MEMORY[0x1E0CA0968]();
}

uint64_t FigGeometryDimensionGetCGFloat()
{
  return MEMORY[0x1E0CA0970]();
}

uint64_t FigGeometryDimensionMake()
{
  return MEMORY[0x1E0CA0978]();
}

uint64_t FigGeometryDimensionMakeFromDictionary()
{
  return MEMORY[0x1E0CA0980]();
}

uint64_t FigGeometryDimensionMakeMirrored()
{
  return MEMORY[0x1E0CA0988]();
}

uint64_t FigGeometryDimensionMakeReversed()
{
  return MEMORY[0x1E0CA0990]();
}

uint64_t FigGeometryMappingConvertPointToPoint()
{
  return MEMORY[0x1E0CA0998]();
}

uint64_t FigGeometryMappingCreate()
{
  return MEMORY[0x1E0CA09A0]();
}

uint64_t FigGeometryMappingCreateCEA608Mappings()
{
  return MEMORY[0x1E0CA09A8]();
}

uint64_t FigGeometryMarginsEqualToMargins()
{
  return MEMORY[0x1E0CA09B8]();
}

uint64_t FigGeometryMarginsMakeFromDictionary()
{
  return MEMORY[0x1E0CA09C8]();
}

uint64_t FigGeometryPointCopyAsDictionary()
{
  return MEMORY[0x1E0CA09D0]();
}

uint64_t FigGeometryPointCopyDescription()
{
  return MEMORY[0x1E0CA09D8]();
}

uint64_t FigGeometryPointEqualToPoint()
{
  return MEMORY[0x1E0CA09E0]();
}

uint64_t FigGeometryPointGetCGPoint()
{
  return MEMORY[0x1E0CA09E8]();
}

uint64_t FigGeometryPointMake()
{
  return MEMORY[0x1E0CA09F0]();
}

uint64_t FigGeometryPointMakeFromDictionary()
{
  return MEMORY[0x1E0CA09F8]();
}

uint64_t FigGeometryRectCopyAsDictionary()
{
  return MEMORY[0x1E0CA0A00]();
}

uint64_t FigGeometryRectEqualToRect()
{
  return MEMORY[0x1E0CA0A08]();
}

uint64_t FigGeometryRectMake()
{
  return MEMORY[0x1E0CA0A10]();
}

uint64_t FigGeometryRectMakeFromDictionary()
{
  return MEMORY[0x1E0CA0A18]();
}

uint64_t FigGeometrySizeCopyAsDictionary()
{
  return MEMORY[0x1E0CA0A20]();
}

uint64_t FigGeometrySizeMake()
{
  return MEMORY[0x1E0CA0A28]();
}

uint64_t FigGeometrySizeMakeFromDictionary()
{
  return MEMORY[0x1E0CA0A30]();
}

uint64_t FigGetAlignmentForIOSurfaceOutput()
{
  return MEMORY[0x1E0CEC8F0]();
}

uint64_t FigGetAlignmentForIOSurfaceOutputToDisplayService()
{
  return MEMORY[0x1E0CEC8F8]();
}

uint64_t FigGetAllocatorForMedia()
{
  return MEMORY[0x1E0CA0A38]();
}

uint64_t FigGetAllocatorForPermanentAllocations()
{
  return MEMORY[0x1E0CA0A40]();
}

uint64_t FigGetBaseByteStreamProvider()
{
  return MEMORY[0x1E0CA0A48]();
}

uint64_t FigGetBooleanFromCFTypeWithDefault()
{
  return MEMORY[0x1E0CA0A50]();
}

uint64_t FigGetCFPreferenceBooleanWithDefault()
{
  return MEMORY[0x1E0CA0A58]();
}

uint64_t FigGetCFPreferenceDoubleWithDefault()
{
  return MEMORY[0x1E0CA0A60]();
}

uint64_t FigGetCFPreferenceLongNumberWithDefault()
{
  return MEMORY[0x1E0CA0A68]();
}

uint64_t FigGetCFPreferenceNumberWithDefault()
{
  return MEMORY[0x1E0CA0A70]();
}

uint64_t FigGetCFPreferenceOrOptionDoubleWithDefault()
{
  return MEMORY[0x1E0CA0A78]();
}

uint64_t FigGetCFPreferenceSizeWithDefault()
{
  return MEMORY[0x1E0CA0A80]();
}

uint64_t FigGetCFStringFor3CCValue()
{
  return MEMORY[0x1E0CA0A88]();
}

uint64_t FigGetCFStringForOSTypeValue()
{
  return MEMORY[0x1E0CA0A90]();
}

uint64_t FigGetContinuousUpTimeNanoseconds()
{
  return MEMORY[0x1E0CA0A98]();
}

uint64_t FigGetDefaultManagedFilePool()
{
  return MEMORY[0x1E0CA0AA0]();
}

uint64_t FigGetDoubleFromCFTypeWithDefault()
{
  return MEMORY[0x1E0CA0AA8]();
}

uint64_t FigGetGlobalCFAllocatorFigMalloc()
{
  return MEMORY[0x1E0CA0AB0]();
}

uint64_t FigGetLongNumberFromCFTypeWithDefault()
{
  return MEMORY[0x1E0CA0AB8]();
}

uint64_t FigGetMallocZoneForMedia()
{
  return MEMORY[0x1E0CA0AC0]();
}

uint64_t FigGetNumberFromCFTypeWithDefault()
{
  return MEMORY[0x1E0CA0AC8]();
}

uint64_t FigGetSandboxRegistrationAssociatedWithURL()
{
  return MEMORY[0x1E0CA0AD0]();
}

uint64_t FigGetUpTime()
{
  return MEMORY[0x1E0CA0AE0]();
}

uint64_t FigGetUpTimeNanoseconds()
{
  return MEMORY[0x1E0CA0AE8]();
}

uint64_t FigGzipCompressMemory()
{
  return MEMORY[0x1E0CA0AF0]();
}

uint64_t FigGzipCreate()
{
  return MEMORY[0x1E0CA0AF8]();
}

uint64_t FigGzipCreate_zlib()
{
  return MEMORY[0x1E0CA0B00]();
}

uint64_t FigGzipDecompressMemory()
{
  return MEMORY[0x1E0CA0B08]();
}

uint64_t FigGzipDispose()
{
  return MEMORY[0x1E0CA0B10]();
}

uint64_t FigGzipReset()
{
  return MEMORY[0x1E0CA0B18]();
}

uint64_t FigH264Bridge_CopyStandalonePPSData()
{
  return MEMORY[0x1E0CA0B28]();
}

uint64_t FigH264Bridge_CopyStandaloneSPSData()
{
  return MEMORY[0x1E0CA0B30]();
}

uint64_t FigH264Bridge_CreateHLSfMP4ParsingInfoFromAVCCData()
{
  return MEMORY[0x1E0CA0B38]();
}

uint64_t FigH264Bridge_GetH264ParameterSetAtIndex()
{
  return MEMORY[0x1E0CA0B40]();
}

uint64_t FigH264Bridge_GetInterlaceTypeFromSlice()
{
  return MEMORY[0x1E0CA0B48]();
}

uint64_t FigH264Bridge_GetNALUnitHeaderLengthFromAVCC()
{
  return MEMORY[0x1E0CA0B50]();
}

uint64_t FigH264Bridge_GetPPSFromAVCC()
{
  return MEMORY[0x1E0CA0B58]();
}

uint64_t FigH264Bridge_GetPPSSequenceID()
{
  return MEMORY[0x1E0CA0B60]();
}

uint64_t FigH264Bridge_GetPPSSequenceIDFromSlice()
{
  return MEMORY[0x1E0CA0B68]();
}

uint64_t FigH264Bridge_GetSPSAndPPSCountFromAVCC()
{
  return MEMORY[0x1E0CA0B70]();
}

uint64_t FigH264Bridge_GetSPSChromaFormatAndBitDepths()
{
  return MEMORY[0x1E0CA0B78]();
}

uint64_t FigH264Bridge_GetSPSFromAVCC()
{
  return MEMORY[0x1E0CA0B80]();
}

uint64_t FigH264Bridge_GetSPSIsInterlaced()
{
  return MEMORY[0x1E0CA0B88]();
}

uint64_t FigH264Bridge_GetSPSSequenceID()
{
  return MEMORY[0x1E0CA0B90]();
}

uint64_t FigH264Bridge_GetSPSWidthAndHeight()
{
  return MEMORY[0x1E0CA0B98]();
}

uint64_t FigH264Bridge_GetSPS_VUI_Framerate()
{
  return MEMORY[0x1E0CA0BA8]();
}

uint64_t FigH264Bridge_GetSliceInformationFromSampleBuffer()
{
  return MEMORY[0x1E0CA0BB8]();
}

uint64_t FigH264Bridge_HLSfMP4ParsingInfoDestroy()
{
  return MEMORY[0x1E0CA0BC0]();
}

uint64_t FigH264Bridge_LocateSliceHeaderForHLSfMP4EncryptableNAL()
{
  return MEMORY[0x1E0CA0BC8]();
}

uint64_t FigHEVCBridge_CreateHLSfMP4ParsingInfoFromHVCCAndLHVCData()
{
  return MEMORY[0x1E0CA0C50]();
}

uint64_t FigHEVCBridge_GetHEVCParameterSetAtIndex()
{
  return MEMORY[0x1E0CA0C88]();
}

uint64_t FigHEVCBridge_GetNALUnitHeaderLengthFromHVCC()
{
  return MEMORY[0x1E0CA0C90]();
}

uint64_t FigHEVCBridge_GetSPSChromaFormatAndBitDepths()
{
  return MEMORY[0x1E0CA0C98]();
}

uint64_t FigHEVCBridge_GetSPSProfileTierLevel()
{
  return MEMORY[0x1E0CA0CA0]();
}

uint64_t FigHostTimeToNanoseconds()
{
  return MEMORY[0x1E0CA0CD8]();
}

uint64_t FigInMemoryDeserializerCopyCFString()
{
  return MEMORY[0x1E0CA0CE8]();
}

uint64_t FigInMemoryDeserializerCopyCFType()
{
  return MEMORY[0x1E0CA0CF0]();
}

uint64_t FigInMemoryDeserializerCopyCFURL()
{
  return MEMORY[0x1E0CA0CF8]();
}

uint64_t FigInMemoryDeserializerCopyCMFormatDescription()
{
  return MEMORY[0x1E0CA0D00]();
}

uint64_t FigInMemoryDeserializerCopyCMSampleBuffer()
{
  return MEMORY[0x1E0CA0D08]();
}

uint64_t FigInMemorySerializerAppendCFString()
{
  return MEMORY[0x1E0CA0D18]();
}

uint64_t FigInMemorySerializerAppendCFType()
{
  return MEMORY[0x1E0CA0D20]();
}

uint64_t FigInMemorySerializerAppendCFURL()
{
  return MEMORY[0x1E0CA0D28]();
}

uint64_t FigInMemorySerializerAppendCMFormatDescription()
{
  return MEMORY[0x1E0CA0D30]();
}

uint64_t FigInMemorySerializerAppendCMSampleBuffer()
{
  return MEMORY[0x1E0CA0D38]();
}

uint64_t FigInstallSysdiagnoseBlock()
{
  return MEMORY[0x1E0CA0D40]();
}

uint64_t FigIsDeviceCapableOfGeneratingStatisticsForHDR()
{
  return MEMORY[0x1E0CA0D50]();
}

uint64_t FigIsItOKToLogURLs()
{
  return MEMORY[0x1E0CA0D60]();
}

uint64_t FigIsMemoryPoolBlockBuffer()
{
  return MEMORY[0x1E0CA0D68]();
}

uint64_t FigIsPersistentURL()
{
  return MEMORY[0x1E0CA0D70]();
}

uint64_t FigIsReferenceAllowedBySecurityPolicy()
{
  return MEMORY[0x1E0CA0D78]();
}

uint64_t FigJSONObjectCreateWithData()
{
  return MEMORY[0x1E0CA0D88]();
}

uint64_t FigKTraceInit()
{
  return MEMORY[0x1E0CA0D90]();
}

uint64_t FigLogBacktrace()
{
  return MEMORY[0x1E0CA0D98]();
}

uint64_t FigMachPortReleaseSendRight_()
{
  return MEMORY[0x1E0CA0DA8]();
}

uint64_t FigManagedFilePoolCreateByteStreamForFile()
{
  return MEMORY[0x1E0CA0DB8]();
}

uint64_t FigManagedFilePoolCreateByteStreamForOpenFileAssumingOwnership()
{
  return MEMORY[0x1E0CA0DC0]();
}

uint64_t FigMayAccessPersistentURLOnBehalfOfClientWithAuditToken()
{
  return MEMORY[0x1E0CA0DC8]();
}

uint64_t FigMemoryBarrier()
{
  return MEMORY[0x1E0CA0DD0]();
}

uint64_t FigMemoryOriginBeginEstablishingMemoryRecipientByFillingInXPCMessage1()
{
  return MEMORY[0x1E0CA0DD8]();
}

uint64_t FigMemoryOriginCompleteEstablishingMemoryRecipientUsingXPCMessage2()
{
  return MEMORY[0x1E0CA0DE0]();
}

uint64_t FigMemoryOriginGetObjectID()
{
  return MEMORY[0x1E0CA0DE8]();
}

uint64_t FigMemoryOriginServerCopyMemoryOriginForObjectID()
{
  return MEMORY[0x1E0CA0DF0]();
}

uint64_t FigMemoryOriginSetBlockBufferInXPCMessage()
{
  return MEMORY[0x1E0CA0DF8]();
}

uint64_t FigMemoryOriginUpdateRecipientStateFromXPCMessage()
{
  return MEMORY[0x1E0CA0E08]();
}

uint64_t FigMemoryPoolBlockBufferGetPaddedWriteInfo()
{
  return MEMORY[0x1E0CA0E18]();
}

uint64_t FigMemoryPoolCreateBlockBuffer()
{
  return MEMORY[0x1E0CA0E20]();
}

uint64_t FigMemoryPoolCreateContiguousBlockBuffer()
{
  return MEMORY[0x1E0CA0E30]();
}

uint64_t FigMemoryRecipientAppendRecipientStateUpdateToXPCMessage()
{
  return MEMORY[0x1E0CA0E48]();
}

uint64_t FigMemoryRecipientCopyBlockBufferFromXPCMessage()
{
  return MEMORY[0x1E0CA0E50]();
}

uint64_t FigMemoryRecipientCreateWithXPCMessage1AndUpdateXPCMessage2()
{
  return MEMORY[0x1E0CA0E58]();
}

uint64_t FigMetadataFormatDescriptionGetConformingDataTypesForLocalID()
{
  return MEMORY[0x1E0CA0E60]();
}

uint64_t FigMetadataFormatDescriptionGetDataTypeForLocalID()
{
  return MEMORY[0x1E0CA0E68]();
}

uint64_t FigMetadataFormatDescriptionGetFirstLocalIDForIdentifier()
{
  return MEMORY[0x1E0CA0E70]();
}

uint64_t FigMetadataFormatDescriptionGetIdentifierForLocalID()
{
  return MEMORY[0x1E0CA0E78]();
}

uint64_t FigMetadataFormatDescriptionGetLanguageTagForLocalID()
{
  return MEMORY[0x1E0CA0E80]();
}

uint64_t FigMetadataFormatDescriptionQuickTimeWellKnownTypeIsRecognized()
{
  return MEMORY[0x1E0CA0E98]();
}

uint64_t FigMetadataKeyGetKeyNamespaceUInt32()
{
  return MEMORY[0x1E0CA0EA0]();
}

uint64_t FigMetadataKeyGetLocalIDUInt32()
{
  return MEMORY[0x1E0CA0EA8]();
}

uint64_t FigMetricEventClassInstallEventDeserializeHandler()
{
  return MEMORY[0x1E0CA0EB0]();
}

uint64_t FigMetricEventDeserializeEvent()
{
  return MEMORY[0x1E0CA0EB8]();
}

uint64_t FigMetricEventGetClassID()
{
  return MEMORY[0x1E0CA0EC0]();
}

uint64_t FigMetricEventTimelineCreate()
{
  return MEMORY[0x1E0CA0EC8]();
}

uint64_t FigMetricEventTimelineCreateRemoteWithObjectID()
{
  return MEMORY[0x1E0CA0ED0]();
}

uint64_t FigMetricEventTimelineGetIDByAssociatingWithClientConnection()
{
  return MEMORY[0x1E0CA0ED8]();
}

uint64_t FigMetricEventTimelineStartServer()
{
  return MEMORY[0x1E0CA0EE0]();
}

uint64_t FigNanosecondsToHostTime()
{
  return MEMORY[0x1E0CA0EF8]();
}

uint64_t FigNetworkHistoryCopySharedPredictor()
{
  return MEMORY[0x1E0CA0F00]();
}

uint64_t FigNetworkHistoryCreate()
{
  return MEMORY[0x1E0CA0F08]();
}

uint64_t FigNetworkHistoryGetBytesReceivedMaxResolution()
{
  return MEMORY[0x1E0CA0F10]();
}

uint64_t FigNetworkHistoryGetCFTypeID()
{
  return MEMORY[0x1E0CA0F18]();
}

uint64_t FigNetworkHistoryGetFirstActiveTimestamp()
{
  return MEMORY[0x1E0CA0F20]();
}

uint64_t FigNetworkHistoryGetGlobal()
{
  return MEMORY[0x1E0CA0F28]();
}

uint64_t FigNetworkHistoryObserverAddCondition()
{
  return MEMORY[0x1E0CA0F30]();
}

uint64_t FigNetworkHistoryObserverCreate()
{
  return MEMORY[0x1E0CA0F38]();
}

uint64_t FigNetworkHistoryObserverRemoveCondition()
{
  return MEMORY[0x1E0CA0F40]();
}

uint64_t FigNetworkHistoryObserverTestCondition()
{
  return MEMORY[0x1E0CA0F48]();
}

uint64_t FigNetworkHistoryRequestBecameActive()
{
  return MEMORY[0x1E0CA0F50]();
}

uint64_t FigNetworkHistoryRequestBecameInactive()
{
  return MEMORY[0x1E0CA0F58]();
}

uint64_t FigNetworkHistoryRequestReceivedBytes()
{
  return MEMORY[0x1E0CA0F60]();
}

uint64_t FigNetworkHistorySetRequestLatency()
{
  return MEMORY[0x1E0CA0F68]();
}

uint64_t FigNetworkHistorySetRequestSentTimestamp()
{
  return MEMORY[0x1E0CA0F70]();
}

uint64_t FigNetworkPredictorGetClassID()
{
  return MEMORY[0x1E0CA0F78]();
}

uint64_t FigNote_AllowInternalDefaultLogs()
{
  return MEMORY[0x1E0CA0F80]();
}

uint64_t FigNote_ChangeValue()
{
  return MEMORY[0x1E0CA0F88]();
}

uint64_t FigNote_GetValue()
{
  return MEMORY[0x1E0CA0F98]();
}

uint64_t FigNote_OneTimeInitializationForMediaServerd()
{
  return MEMORY[0x1E0CA0FA0]();
}

uint64_t FigNote_RefreshControlPreferences()
{
  return MEMORY[0x1E0CA0FA8]();
}

uint64_t FigNotificationCenterAddWeakListener()
{
  return MEMORY[0x1E0CA0FC0]();
}

uint64_t FigNotificationCenterAddWeakListeners()
{
  return MEMORY[0x1E0CA0FC8]();
}

uint64_t FigNotificationCenterRemoveWeakListener()
{
  return MEMORY[0x1E0CA0FD8]();
}

uint64_t FigNotificationCenterRemoveWeakListeners()
{
  return MEMORY[0x1E0CA0FE8]();
}

uint64_t FigOSEventLinkRemoteFillMessageBufferThenSendItAndHandleReply()
{
  return MEMORY[0x1E0CA0FF0]();
}

uint64_t FigOSEventLinkServerGetAssociatedFigXPCServerXPCConnection()
{
  return MEMORY[0x1E0CA1010]();
}

uint64_t FigOSEventLinkServerSetCallbacks()
{
  return MEMORY[0x1E0CA1018]();
}

uint64_t FigOSTransactionCreate()
{
  return MEMORY[0x1E0CA1028]();
}

uint64_t FigOSTransactionCreateWithProcessName()
{
  return MEMORY[0x1E0CA1030]();
}

uint64_t FigPacketDependencyInfoCopyAsSampleDependencyAttributeDictionary()
{
  return MEMORY[0x1E0CA1038]();
}

uint64_t FigPixelBufferOriginBeginEstablishingPixelBufferRecipientByFillingInXPCMessage1()
{
  return MEMORY[0x1E0CA1048]();
}

uint64_t FigPixelBufferOriginCompleteEstablishingPixelBufferRecipientUsingXPCMessage2()
{
  return MEMORY[0x1E0CA1050]();
}

uint64_t FigPixelBufferOriginGetObjectID()
{
  return MEMORY[0x1E0CA1058]();
}

uint64_t FigPixelBufferOriginServerCopyPixelBufferOriginForObjectID()
{
  return MEMORY[0x1E0CA1060]();
}

uint64_t FigPixelBufferOriginSetPixelBufferInXPCMessage()
{
  return MEMORY[0x1E0CA1068]();
}

uint64_t FigPixelBufferOriginSetTaggedBufferGroupInXPCMessage()
{
  return MEMORY[0x1E0CA1070]();
}

uint64_t FigPixelBufferRecipientCopyPixelBufferFromXPCMessage()
{
  return MEMORY[0x1E0CA1080]();
}

uint64_t FigPixelBufferRecipientCopyTaggedBufferGroupFromXPCMessage()
{
  return MEMORY[0x1E0CA1088]();
}

uint64_t FigPixelBufferRecipientCreateWithXPCMessage1AndUpdateXPCMessage2()
{
  return MEMORY[0x1E0CA1090]();
}

uint64_t FigPixelBufferRecipientFlushPixelBufferBackings()
{
  return MEMORY[0x1E0CA1098]();
}

uint64_t FigPlaybackLogPowerEvent()
{
  return MEMORY[0x1E0CA10A0]();
}

uint64_t FigPlayerCMSessionOneTimeFinalization()
{
  return MEMORY[0x1E0D483D8]();
}

uint64_t FigPlayerCMSessionOneTimeInitialization()
{
  return MEMORY[0x1E0D483E0]();
}

uint64_t FigPlayerCMSession_SystemWillPowerOn()
{
  return MEMORY[0x1E0D483E8]();
}

uint64_t FigPlayerCMSession_SystemWillSleep()
{
  return MEMORY[0x1E0D483F0]();
}

uint64_t FigPowerLogRegisterEvent()
{
  return MEMORY[0x1E0CA10A8]();
}

uint64_t FigPowerReduceUtilitySFI()
{
  return MEMORY[0x1E0CA10B0]();
}

uint64_t FigPreferAudioSessionClock()
{
  return MEMORY[0x1E0CA10B8]();
}

uint64_t FigPreferAudioSessionOverCMSession()
{
  return MEMORY[0x1E0CA10C0]();
}

uint64_t FigProcessInfoCreateWithDetails()
{
  return MEMORY[0x1E0CA10F0]();
}

uint64_t FigProcessStateMonitorCreateExpiringAssertionOnBehalfOfProcessWithPID()
{
  return MEMORY[0x1E0CA10F8]();
}

uint64_t FigRPCCreateClientConnectionWithNotifications()
{
  return MEMORY[0x1E0CA1128]();
}

uint64_t FigRPCCreateRemoteClient()
{
  return MEMORY[0x1E0CA1130]();
}

uint64_t FigRPCCreateServerConnectionForObject()
{
  return MEMORY[0x1E0CA1138]();
}

uint64_t FigRPCDisposeClientConnection()
{
  return MEMORY[0x1E0CA1148]();
}

uint64_t FigRPCDisposeServerConnection()
{
  return MEMORY[0x1E0CA1150]();
}

uint64_t FigRPCFetchNextPendingNotification()
{
  return MEMORY[0x1E0CA1160]();
}

uint64_t FigRPCGetConnectionInfo()
{
  return MEMORY[0x1E0CA1168]();
}

uint64_t FigRPCGetServerConnectionInfo()
{
  return MEMORY[0x1E0CA1170]();
}

uint64_t FigRPCKillServerOnTimeout()
{
  return MEMORY[0x1E0CA1178]();
}

uint64_t FigRPCLookupClientConnection()
{
  return MEMORY[0x1E0CA1180]();
}

uint64_t FigRPCStartServer()
{
  return MEMORY[0x1E0CA1188]();
}

uint64_t FigRPCStartServerUsingMachChannel()
{
  return MEMORY[0x1E0CA1190]();
}

uint64_t FigReadOnlyTimebaseSetTargetTimebase()
{
  return MEMORY[0x1E0CA1198]();
}

uint64_t FigReadWriteLockCreate()
{
  return MEMORY[0x1E0CA11A0]();
}

uint64_t FigReadWriteLockDestroy()
{
  return MEMORY[0x1E0CA11A8]();
}

uint64_t FigReadWriteLockLockForRead()
{
  return MEMORY[0x1E0CA11B0]();
}

uint64_t FigReadWriteLockLockForWrite()
{
  return MEMORY[0x1E0CA11B8]();
}

uint64_t FigReadWriteLockUnlockForRead()
{
  return MEMORY[0x1E0CA11C0]();
}

uint64_t FigReadWriteLockUnlockForWrite()
{
  return MEMORY[0x1E0CA11C8]();
}

uint64_t FigReentrantMutexCreate()
{
  return MEMORY[0x1E0CA11D0]();
}

uint64_t FigReentrantMutexDestroy()
{
  return MEMORY[0x1E0CA11D8]();
}

uint64_t FigReentrantMutexLock()
{
  return MEMORY[0x1E0CA11E0]();
}

uint64_t FigReentrantMutexTryLock()
{
  return MEMORY[0x1E0CA11E8]();
}

uint64_t FigReentrantMutexUnlock()
{
  return MEMORY[0x1E0CA11F0]();
}

uint64_t FigRemote_CreateBinaryPListData()
{
  return MEMORY[0x1E0CA1258]();
}

uint64_t FigRemote_CreateCFTypeFromSerializedAtomDataBlockBuffer()
{
  return MEMORY[0x1E0CA1260]();
}

uint64_t FigRemote_CreateFormatDescriptionCollectionFromPList()
{
  return MEMORY[0x1E0CA1270]();
}

uint64_t FigRemote_CreateFormatDescriptionFromSerializedAtomDataBlockBuffer()
{
  return MEMORY[0x1E0CA1278]();
}

uint64_t FigRemote_CreateFormatDescriptionFromSerializedDictionary()
{
  return MEMORY[0x1E0CA1280]();
}

uint64_t FigRemote_CreateKeyValuePairFromSerializedAtomDataBlockBuffer()
{
  return MEMORY[0x1E0CA1288]();
}

uint64_t FigRemote_CreatePListFromFormatDescriptionCollection()
{
  return MEMORY[0x1E0CA1290]();
}

uint64_t FigRemote_CreatePixelBufferFromSerializedAtomData()
{
  return MEMORY[0x1E0CA1298]();
}

uint64_t FigRemote_CreatePixelBufferFromSerializedAtomDataAndSurface()
{
  return MEMORY[0x1E0CA12A0]();
}

uint64_t FigRemote_CreatePropertyListFromBinaryPListData()
{
  return MEMORY[0x1E0CA12A8]();
}

uint64_t FigRemote_CreateSampleBufferFromSerializedAtomBlockBufferAndSurface()
{
  return MEMORY[0x1E0CA12B0]();
}

uint64_t FigRemote_CreateSampleBufferFromSerializedAtomBlockBufferAndSurfaceArray()
{
  return MEMORY[0x1E0CA12B8]();
}

uint64_t FigRemote_CreateSampleBufferFromSerializedAtomData()
{
  return MEMORY[0x1E0CA12C0]();
}

uint64_t FigRemote_CreateSampleBufferFromSerializedAtomDataBlockBuffer()
{
  return MEMORY[0x1E0CA12C8]();
}

uint64_t FigRemote_CreateSerializableDictionaryForFormatDescription()
{
  return MEMORY[0x1E0CA12D0]();
}

uint64_t FigRemote_CreateSerializedAtomDataAndSurfaceForPixelBuffer()
{
  return MEMORY[0x1E0CA12D8]();
}

uint64_t FigRemote_CreateSerializedAtomDataAndSurfaceForSampleBuffer()
{
  return MEMORY[0x1E0CA12E0]();
}

uint64_t FigRemote_CreateSerializedAtomDataBlockBufferForCFType()
{
  return MEMORY[0x1E0CA12E8]();
}

uint64_t FigRemote_CreateSerializedAtomDataBlockBufferForFormatDescription()
{
  return MEMORY[0x1E0CA12F0]();
}

uint64_t FigRemote_CreateSerializedAtomDataBlockBufferForKeyValuePair()
{
  return MEMORY[0x1E0CA12F8]();
}

uint64_t FigRemote_CreateSerializedAtomDataBlockBufferForPixelBuffer()
{
  return MEMORY[0x1E0CA1300]();
}

uint64_t FigRemote_CreateSerializedAtomDataBlockBufferForSampleBuffer()
{
  return MEMORY[0x1E0CA1308]();
}

uint64_t FigRemote_CreateSerializedAtomDataBlockBufferWithFlagsForCFType()
{
  return MEMORY[0x1E0CA1310]();
}

uint64_t FigRemote_CreateSerializedAtomDataBlockBufferWithFlagsForSampleBuffer()
{
  return MEMORY[0x1E0CA1318]();
}

uint64_t FigRemote_CreateSerializedAtomDataForPixelBuffer()
{
  return MEMORY[0x1E0CA1328]();
}

uint64_t FigRemote_CreateSerializedAtomDataForSampleBuffer()
{
  return MEMORY[0x1E0CA1330]();
}

uint64_t FigRemote_CreateSerializedAtomDataForSampleBufferWithOptions()
{
  return MEMORY[0x1E0CA1338]();
}

uint64_t FigRemote_CreateVMBufferFromPropertyList()
{
  return MEMORY[0x1E0CA1340]();
}

uint64_t FigRemote_GetKnownNeroKeysForLightningAdapters()
{
  return MEMORY[0x1E0CA1348]();
}

uint64_t FigRemote_GetServerTimeoutToken()
{
  return MEMORY[0x1E0CA1350]();
}

uint64_t FigRemote_SetServerPid()
{
  return MEMORY[0x1E0CA1358]();
}

uint64_t FigRemote_ShouldConnectToAirplayd()
{
  return MEMORY[0x1E0CA1360]();
}

uint64_t FigRemote_ShouldConnectToMediaparserdFile_OptIn()
{
  return MEMORY[0x1E0CA1368]();
}

uint64_t FigRemote_ShouldConnectToMediaparserdForFileParsing()
{
  return MEMORY[0x1E0CA1370]();
}

uint64_t FigRemote_ShouldConnectToMediaplaybackd()
{
  return MEMORY[0x1E0CA1378]();
}

uint64_t FigReplaceStringWithURL()
{
  return MEMORY[0x1E0CA1380]();
}

uint64_t FigReplaceURLWithString()
{
  return MEMORY[0x1E0CA1388]();
}

uint64_t FigRetainProxyConditionVariableWaitRelative()
{
  return MEMORY[0x1E0CA1390]();
}

uint64_t FigRetainProxyCreate()
{
  return MEMORY[0x1E0CA1398]();
}

uint64_t FigRetainProxyGetLockCount()
{
  return MEMORY[0x1E0CA13A0]();
}

uint64_t FigRetainProxyGetOwner()
{
  return MEMORY[0x1E0CA13A8]();
}

uint64_t FigRetainProxyInvalidate()
{
  return MEMORY[0x1E0CA13B0]();
}

uint64_t FigRetainProxyIsInvalidated()
{
  return MEMORY[0x1E0CA13B8]();
}

uint64_t FigRetainProxyLockMutex()
{
  return MEMORY[0x1E0CA13C0]();
}

uint64_t FigRetainProxyRelease()
{
  return MEMORY[0x1E0CA13C8]();
}

uint64_t FigRetainProxyReleaseOwner()
{
  return MEMORY[0x1E0CA13D0]();
}

uint64_t FigRetainProxyRelock()
{
  return MEMORY[0x1E0CA13D8]();
}

uint64_t FigRetainProxyRetain()
{
  return MEMORY[0x1E0CA13E0]();
}

uint64_t FigRetainProxyRetainOwner()
{
  return MEMORY[0x1E0CA13E8]();
}

uint64_t FigRetainProxyTryLockMutex()
{
  return MEMORY[0x1E0CA13F0]();
}

uint64_t FigRetainProxyUnlockAll()
{
  return MEMORY[0x1E0CA13F8]();
}

uint64_t FigRetainProxyUnlockMutex()
{
  return MEMORY[0x1E0CA1400]();
}

uint64_t FigRouteDiscovererStartServer()
{
  return MEMORY[0x1E0D48410]();
}

uint64_t FigRoutingContextCopySystemMusicContext()
{
  return MEMORY[0x1E0D48428]();
}

uint64_t FigRoutingContextGetTypeID()
{
  return MEMORY[0x1E0D48430]();
}

uint64_t FigRoutingContextRemoteCopyContextForUUID()
{
  return MEMORY[0x1E0D48438]();
}

uint64_t FigRoutingContextRemoteCopySystemMusicContext()
{
  return MEMORY[0x1E0D48440]();
}

uint64_t FigRoutingContextStartServer()
{
  return MEMORY[0x1E0D48448]();
}

uint64_t FigRoutingSessionManagerCopyLongFormVideoManager()
{
  return MEMORY[0x1E0D48458]();
}

uint64_t FigRoutingSessionManagerRemoteCopyLongFormVideoManager()
{
  return MEMORY[0x1E0D48468]();
}

uint64_t FigRoutingSessionManagerStartServer()
{
  return MEMORY[0x1E0D48478]();
}

uint64_t FigRuntimeRegisterAttachmentBearerWithTypeID()
{
  return MEMORY[0x1E0CA1408]();
}

uint64_t FigSTSServerStart()
{
  return MEMORY[0x1E0D48480]();
}

uint64_t FigSampleBufferCreateCopyWithNewFormatDescription()
{
  return MEMORY[0x1E0CA1410]();
}

uint64_t FigSampleBufferCreateCopyWithNewSizesAndDataBuffer()
{
  return MEMORY[0x1E0CA1418]();
}

uint64_t FigSampleBufferCreateCopyWithNoData()
{
  return MEMORY[0x1E0CA1420]();
}

uint64_t FigSampleBufferCreateForCaptionGroup()
{
  return MEMORY[0x1E0CA1428]();
}

uint64_t FigSampleBufferCreateForTaggedBufferGroup()
{
  return MEMORY[0x1E0CA1430]();
}

uint64_t FigSampleBufferGetCaptionGroup()
{
  return MEMORY[0x1E0CA1438]();
}

uint64_t FigSampleBufferGetDecryptor()
{
  return MEMORY[0x1E0CA1440]();
}

uint64_t FigSampleBufferGetTaggedBufferGroup()
{
  return MEMORY[0x1E0CA1448]();
}

uint64_t FigSampleBufferSetDecryptor()
{
  return MEMORY[0x1E0CA1460]();
}

uint64_t FigSandboxAssertionCreateForPID()
{
  return MEMORY[0x1E0CA1468]();
}

uint64_t FigSandboxRegisterDirectoryURLWithProcess()
{
  return MEMORY[0x1E0CA1478]();
}

uint64_t FigSandboxRegisterDirectoryURLWithProcessAndCopyRegistration()
{
  return MEMORY[0x1E0CA1480]();
}

uint64_t FigSandboxRegisterURLWithProcessAndCopyRegistration()
{
  return MEMORY[0x1E0CA1490]();
}

uint64_t FigSandboxRegistrationAssociateWithURL()
{
  return MEMORY[0x1E0CA1498]();
}

uint64_t FigSandboxRegistrationServerStart()
{
  return MEMORY[0x1E0CA14A0]();
}

uint64_t FigScheduledIOCreateForReadingByteStream()
{
  return MEMORY[0x1E0CA14A8]();
}

uint64_t FigScheduledIOGetClassID()
{
  return MEMORY[0x1E0CA14B0]();
}

uint64_t FigScheduledIOGetFigBaseObject()
{
  return MEMORY[0x1E0CA14B8]();
}

uint64_t FigScheduledIOGetTypeID()
{
  return MEMORY[0x1E0CA14C0]();
}

uint64_t FigSemaphoreCreate()
{
  return MEMORY[0x1E0CA14C8]();
}

uint64_t FigSemaphoreDestroy()
{
  return MEMORY[0x1E0CA14D0]();
}

uint64_t FigSemaphoreSignal()
{
  return MEMORY[0x1E0CA14D8]();
}

uint64_t FigSemaphoreWaitRelative()
{
  return MEMORY[0x1E0CA14E0]();
}

uint64_t FigServer_CopyProcessName()
{
  return MEMORY[0x1E0CA14E8]();
}

uint64_t FigServer_GetClientPIDFromAuditToken()
{
  return MEMORY[0x1E0CA14F0]();
}

uint64_t FigServer_InitializeWithEnvironment()
{
  return MEMORY[0x1E0CA14F8]();
}

uint64_t FigServer_IsAirplayd()
{
  return MEMORY[0x1E0CA1500]();
}

uint64_t FigServer_IsCameracaptured()
{
  return MEMORY[0x1E0CA1508]();
}

uint64_t FigServer_IsMediaparserd()
{
  return MEMORY[0x1E0CA1510]();
}

uint64_t FigServer_IsMediaplaybackd()
{
  return MEMORY[0x1E0CA1518]();
}

uint64_t FigServer_IsMediaserverd()
{
  return MEMORY[0x1E0CA1520]();
}

uint64_t FigServer_IsServerProcess()
{
  return MEMORY[0x1E0CA1528]();
}

uint64_t FigServer_IsWritableFileOpeningOrCreationPermittedForAuditToken()
{
  return MEMORY[0x1E0CA1540]();
}

uint64_t FigServer_RememberProcessInfoForAFewSeconds()
{
  return MEMORY[0x1E0CA1548]();
}

uint64_t FigSignalErrorAt()
{
  return MEMORY[0x1E0CA1550]();
}

uint64_t FigSimpleMutexCheckIsLockedOnThisThread()
{
  return MEMORY[0x1E0CA1560]();
}

uint64_t FigSimpleMutexCreate()
{
  return MEMORY[0x1E0CA1570]();
}

uint64_t FigSimpleMutexDestroy()
{
  return MEMORY[0x1E0CA1578]();
}

uint64_t FigSimpleMutexLock()
{
  return MEMORY[0x1E0CA1580]();
}

uint64_t FigSimpleMutexTryLock()
{
  return MEMORY[0x1E0CA1588]();
}

uint64_t FigSimpleMutexUnlock()
{
  return MEMORY[0x1E0CA1590]();
}

uint64_t FigSimpleQueueRelease()
{
  return MEMORY[0x1E0CA1598]();
}

uint64_t FigSoundDescriptionBlockBufferIsISOv1()
{
  return MEMORY[0x1E0CA15A8]();
}

uint64_t FigSoundDescriptionDataIsISOv1()
{
  return MEMORY[0x1E0CA15B0]();
}

uint64_t FigStartCaptureServers()
{
  return MEMORY[0x1E0D054B8]();
}

uint64_t FigStartForwardingMediaServicesProcessDeathNotification()
{
  return MEMORY[0x1E0CA15B8]();
}

uint64_t FigStartMonitoringMediaServicesProcessDeath()
{
  return MEMORY[0x1E0CA15C0]();
}

uint64_t FigStopForwardingMediaServicesProcessDeathNotification()
{
  return MEMORY[0x1E0CA15C8]();
}

uint64_t FigStopMonitoringMediaServicesProcessDeath()
{
  return MEMORY[0x1E0CA15D0]();
}

uint64_t FigSysdiagnoseBlock_OneTimeInitializationForMediaserverd()
{
  return MEMORY[0x1E0CA15D8]();
}

uint64_t FigSystemControllerStartServer()
{
  return MEMORY[0x1E0D484B0]();
}

uint64_t FigTagCollectionAddTag()
{
  return MEMORY[0x1E0CA15E0]();
}

uint64_t FigTagCollectionAddTagsFromCollection()
{
  return MEMORY[0x1E0CA15E8]();
}

uint64_t FigTagCollectionAddTagsFromCollectionWithFilterFunction()
{
  return MEMORY[0x1E0CA15F0]();
}

uint64_t FigTagCollectionContainsCategory()
{
  return MEMORY[0x1E0CA15F8]();
}

uint64_t FigTagCollectionContainsTag()
{
  return MEMORY[0x1E0CA1600]();
}

uint64_t FigTagCollectionContainsTagsOfCollection()
{
  return MEMORY[0x1E0CA1608]();
}

uint64_t FigTagCollectionCopyAsDictionary()
{
  return MEMORY[0x1E0CA1618]();
}

uint64_t FigTagCollectionCopyAsXPCDictionary()
{
  return MEMORY[0x1E0CA1620]();
}

uint64_t FigTagCollectionCopyTagsOfCategories()
{
  return MEMORY[0x1E0CA1628]();
}

uint64_t FigTagCollectionCreate()
{
  return MEMORY[0x1E0CA1630]();
}

uint64_t FigTagCollectionCreateCopy()
{
  return MEMORY[0x1E0CA1638]();
}

uint64_t FigTagCollectionCreateFromDictionary()
{
  return MEMORY[0x1E0CA1648]();
}

uint64_t FigTagCollectionCreateFromXPCDictionary()
{
  return MEMORY[0x1E0CA1650]();
}

uint64_t FigTagCollectionCreateMutable()
{
  return MEMORY[0x1E0CA1658]();
}

uint64_t FigTagCollectionCreateMutableCopy()
{
  return MEMORY[0x1E0CA1660]();
}

uint64_t FigTagCollectionGetCount()
{
  return MEMORY[0x1E0CA1668]();
}

uint64_t FigTagCollectionGetCountOfCategory()
{
  return MEMORY[0x1E0CA1670]();
}

uint64_t FigTagCollectionGetTagsWithCategory()
{
  return MEMORY[0x1E0CA1678]();
}

uint64_t FigTagCollectionIsEmpty()
{
  return MEMORY[0x1E0CA1688]();
}

uint64_t FigTagCollectionRemoveAllTagsOfCategory()
{
  return MEMORY[0x1E0CA1690]();
}

uint64_t FigTagCollectionRemoveTag()
{
  return MEMORY[0x1E0CA1698]();
}

uint64_t FigTagCompare()
{
  return MEMORY[0x1E0CA16A0]();
}

uint64_t FigTagEqualToTag()
{
  return MEMORY[0x1E0CA16A8]();
}

uint64_t FigTagGetFlagsValue()
{
  return MEMORY[0x1E0CA16B0]();
}

uint64_t FigTagGetSInt64Value()
{
  return MEMORY[0x1E0CA16B8]();
}

uint64_t FigTagMakeWithFlagsValue()
{
  return MEMORY[0x1E0CA16C0]();
}

uint64_t FigTagMakeWithOSTypeValue()
{
  return MEMORY[0x1E0CA16C8]();
}

uint64_t FigTagMakeWithSInt64Value()
{
  return MEMORY[0x1E0CA16D0]();
}

uint64_t FigTaggedBufferGroupCreate()
{
  return MEMORY[0x1E0CA16D8]();
}

uint64_t FigTaggedBufferGroupGetCVPixelBufferAtIndex()
{
  return MEMORY[0x1E0CA16E8]();
}

uint64_t FigTaggedBufferGroupGetCVPixelBufferForTag()
{
  return MEMORY[0x1E0CA16F0]();
}

uint64_t FigTaggedBufferGroupGetCount()
{
  return MEMORY[0x1E0CA16F8]();
}

uint64_t FigTaggedBufferGroupGetTagCollectionAtIndex()
{
  return MEMORY[0x1E0CA1700]();
}

uint64_t FigTapToRadarCreateRadarDescriptionString()
{
  return MEMORY[0x1E0CA1708]();
}

uint64_t FigTextMarkupAspectRatioCopyAsSimplifiedDictionary()
{
  return MEMORY[0x1E0CA1710]();
}

uint64_t FigTextMarkupAspectRatioMakeFromSimplifiedDictionary()
{
  return MEMORY[0x1E0CA1718]();
}

uint64_t FigTextMarkupCreateARGBColorArrayFromCGColor()
{
  return MEMORY[0x1E0CA1720]();
}

uint64_t FigTextMarkupCreateBlackARGBColorArray()
{
  return MEMORY[0x1E0CA1728]();
}

uint64_t FigTextMarkupCreateClearARGBColorArray()
{
  return MEMORY[0x1E0CA1730]();
}

uint64_t FigTextMarkupCreateTextMarkupFromAbstractPosition()
{
  return MEMORY[0x1E0CA1738]();
}

uint64_t FigTextMarkupCreateTextMarkupFromRubyReserve()
{
  return MEMORY[0x1E0CA1740]();
}

uint64_t FigTextMarkupCreateTextMarkupFromTextEmphasis()
{
  return MEMORY[0x1E0CA1748]();
}

uint64_t FigTextMarkupCreateTextMarkupFromTextShadowList()
{
  return MEMORY[0x1E0CA1750]();
}

uint64_t FigTextMarkupCreateWhiteARGBColorArray()
{
  return MEMORY[0x1E0CA1758]();
}

uint64_t FigTextMarkupDimensionCopyAsSimplifiedDictionary()
{
  return MEMORY[0x1E0CA1760]();
}

uint64_t FigTextMarkupDimensionMakeFromSimplifiedDictionary()
{
  return MEMORY[0x1E0CA1768]();
}

uint64_t FigTextMarkupMapGenericFontFamilyToMACaptionAppearanceFontStyle()
{
  return MEMORY[0x1E0CA1770]();
}

uint64_t FigTextMarkupSizeCopyAsSimplifiedDictionary()
{
  return MEMORY[0x1E0CA1778]();
}

uint64_t FigTextMarkupSizeMakeFromSimplifiedDictionary()
{
  return MEMORY[0x1E0CA1780]();
}

uint64_t FigThreadAbort()
{
  return MEMORY[0x1E0CA1788]();
}

uint64_t FigThreadAbortForTeardown()
{
  return MEMORY[0x1E0CA1790]();
}

uint64_t FigThreadAbortQueue()
{
  return MEMORY[0x1E0CA1798]();
}

uint64_t FigThreadAbortQueueForTeardown()
{
  return MEMORY[0x1E0CA17A0]();
}

uint64_t FigThreadAllocKey()
{
  return MEMORY[0x1E0CA17A8]();
}

uint64_t FigThreadCopyProperty()
{
  return MEMORY[0x1E0CA17B0]();
}

uint64_t FigThreadCreate()
{
  return MEMORY[0x1E0CA17B8]();
}

uint64_t FigThreadGetCurrent()
{
  return MEMORY[0x1E0CA17C0]();
}

uint64_t FigThreadGetGlobalNetworkBufferingLowPriorityQueue()
{
  return MEMORY[0x1E0CA17C8]();
}

uint64_t FigThreadGetGlobalNetworkBufferingQueue()
{
  return MEMORY[0x1E0CA17D0]();
}

uint64_t FigThreadGetGlobalNetworkBufferingRunloop()
{
  return MEMORY[0x1E0CA17D8]();
}

uint64_t FigThreadGetMaxLogicalCoreCount()
{
  return MEMORY[0x1E0CA17E8]();
}

uint64_t FigThreadGetValue()
{
  return MEMORY[0x1E0CA17F0]();
}

uint64_t FigThreadJoin()
{
  return MEMORY[0x1E0CA17F8]();
}

uint64_t FigThreadMakeDispatchQueueAbortable()
{
  return MEMORY[0x1E0CA1800]();
}

uint64_t FigThreadRegisterAbortAction()
{
  return MEMORY[0x1E0CA1808]();
}

uint64_t FigThreadRunOnce()
{
  return MEMORY[0x1E0CA1810]();
}

uint64_t FigThreadSetProperty()
{
  return MEMORY[0x1E0CA1818]();
}

uint64_t FigThreadSetValue()
{
  return MEMORY[0x1E0CA1820]();
}

uint64_t FigThreadUnregisterAbortAction()
{
  return MEMORY[0x1E0CA1828]();
}

uint64_t FigTimelineCoordinatorBeginSuspension()
{
  return MEMORY[0x1E0CA1848]();
}

uint64_t FigTimelineCoordinatorBeginSuspensionProposingTime()
{
  return MEMORY[0x1E0CA1850]();
}

uint64_t FigTimelineCoordinatorCoordinateJumpToTime2()
{
  return MEMORY[0x1E0CA1860]();
}

uint64_t FigTimelineCoordinatorCoordinateRateChange()
{
  return MEMORY[0x1E0CA1868]();
}

uint64_t FigTimelineCoordinatorCopyParticipantSnapshotForUUID()
{
  return MEMORY[0x1E0CA1870]();
}

uint64_t FigTimelineCoordinatorCopyParticipantSnapshots()
{
  return MEMORY[0x1E0CA1878]();
}

uint64_t FigTimelineCoordinatorCopyProperty()
{
  return MEMORY[0x1E0CA1880]();
}

uint64_t FigTimelineCoordinatorCreate()
{
  return MEMORY[0x1E0CA1888]();
}

uint64_t FigTimelineCoordinatorDisconnectFromMedium()
{
  return MEMORY[0x1E0CA1890]();
}

uint64_t FigTimelineCoordinatorEndSuspension()
{
  return MEMORY[0x1E0CA1898]();
}

uint64_t FigTimelineCoordinatorEndSuspensionProposingNewTime()
{
  return MEMORY[0x1E0CA18A0]();
}

uint64_t FigTimelineCoordinatorEndSuspensionReApplyingGroupStateOnlyIfNeeded()
{
  return MEMORY[0x1E0CA18A8]();
}

uint64_t FigTimelineCoordinatorEndSuspensionWeaklyIfNeededProposingNewRateAndTime()
{
  return MEMORY[0x1E0CA18B0]();
}

uint64_t FigTimelineCoordinatorEndSuspensions()
{
  return MEMORY[0x1E0CA18B8]();
}

uint64_t FigTimelineCoordinatorEndSuspensionsProposingNewTime()
{
  return MEMORY[0x1E0CA18C0]();
}

uint64_t FigTimelineCoordinatorGetExpectedGroupTimeForIdentifier()
{
  return MEMORY[0x1E0CA18C8]();
}

uint64_t FigTimelineCoordinatorGetExpectedTimeAtHostTime()
{
  return MEMORY[0x1E0CA18D0]();
}

uint64_t FigTimelineCoordinatorHandleAssignmentOfUUIDToLocalParticipantByMedium()
{
  return MEMORY[0x1E0CA18D8]();
}

uint64_t FigTimelineCoordinatorHandleRemovalOfParticipantStateFromMedium()
{
  return MEMORY[0x1E0CA18E0]();
}

uint64_t FigTimelineCoordinatorHandleReplacementOfAllParticipantStatesFromMedium()
{
  return MEMORY[0x1E0CA18E8]();
}

uint64_t FigTimelineCoordinatorHandleTransitionToNewTimelineFromTimelineControl()
{
  return MEMORY[0x1E0CA18F0]();
}

uint64_t FigTimelineCoordinatorHandleTransitionToNewTimelineFromTimelineControlProposingTimeAndPrerollRate()
{
  return MEMORY[0x1E0CA18F8]();
}

uint64_t FigTimelineCoordinatorHandleUpdatedParticipantStateFromMedium()
{
  return MEMORY[0x1E0CA1900]();
}

uint64_t FigTimelineCoordinatorHandleUpdatedTimelineStateFromMedium()
{
  return MEMORY[0x1E0CA1908]();
}

uint64_t FigTimelineCoordinatorIsSuspended()
{
  return MEMORY[0x1E0CA1910]();
}

uint64_t FigTimelineCoordinatorReapplyGroupStateViaTimelineControl()
{
  return MEMORY[0x1E0CA1918]();
}

uint64_t FigTimelineCoordinatorResetGroupTimelineExpectations()
{
  return MEMORY[0x1E0CA1920]();
}

uint64_t FigTimelineCoordinatorSetProperty()
{
  return MEMORY[0x1E0CA1928]();
}

uint64_t FigTimelineCoordinatorSetReadinessHintFromTimelineControl()
{
  return MEMORY[0x1E0CA1930]();
}

uint64_t FigTimelineCoordinatorSetWeakMediumAndCallbacks()
{
  return MEMORY[0x1E0CA1938]();
}

uint64_t FigTimelineCoordinatorSuspensionCreate()
{
  return MEMORY[0x1E0CA1940]();
}

uint64_t FigTransportConnectionIDSCreate()
{
  return MEMORY[0x1E0CA1950]();
}

uint64_t FigTransportConnectionTCPCreate()
{
  return MEMORY[0x1E0CA1958]();
}

uint64_t FigTransportCreateBBufFromPointer()
{
  return MEMORY[0x1E0CA1960]();
}

uint64_t FigTransportCreateCFNumberFromRemoteObjectRef()
{
  return MEMORY[0x1E0CA1968]();
}

uint64_t FigTransportGetLocalRootObject()
{
  return MEMORY[0x1E0CA1980]();
}

uint64_t FigTransportGetRemoteRootObject()
{
  return MEMORY[0x1E0CA1988]();
}

uint64_t FigTransportSetSharedTransport()
{
  return MEMORY[0x1E0CA19A8]();
}

uint64_t FigTriggerTapToRadar()
{
  return MEMORY[0x1E0CA19D0]();
}

uint64_t FigUInt32NearestPowerOfTwo()
{
  return MEMORY[0x1E0CA19D8]();
}

uint64_t FigUSleep()
{
  return MEMORY[0x1E0CA19E0]();
}

uint64_t FigUserCrash()
{
  return MEMORY[0x1E0CA19E8]();
}

uint64_t FigVP9Bridge_ParseVPCC()
{
  return MEMORY[0x1E0CA19F0]();
}

uint64_t FigVideoCreateBlockBufferAndFormatDescriptionForHoistingInStreamParameterSets()
{
  return MEMORY[0x1E0CA19F8]();
}

uint64_t FigVideoFormatDescriptionContainsAlphaChannel()
{
  return MEMORY[0x1E0CA1A20]();
}

uint64_t FigVideoFormatDescriptionContainsHDR()
{
  return MEMORY[0x1E0CA1A28]();
}

uint64_t FigVideoFormatDescriptionContainsStereoMultiviewVideo()
{
  return MEMORY[0x1E0CA1A30]();
}

uint64_t FigVideoFormatDescriptionContainsWideColor()
{
  return MEMORY[0x1E0CA1A38]();
}

uint64_t FigVideoFormatDescriptionCreateFromBigEndianImageDescriptionBlockBufferWithReporter()
{
  return MEMORY[0x1E0CA1A48]();
}

uint64_t FigVideoFormatDescriptionCreateWithSampleDescriptionExtensionAtom()
{
  return MEMORY[0x1E0CA1A58]();
}

uint64_t FigVideoFormatDescriptionGetMVHEVCVideoLayerIDs()
{
  return MEMORY[0x1E0CA1A68]();
}

uint64_t FigVirtualCaptureCardGetCMBaseObject()
{
  return MEMORY[0x1E0CA1A78]();
}

uint64_t FigVirtualCaptureCardGetSingleton()
{
  return MEMORY[0x1E0CA1A80]();
}

uint64_t FigVirtualCaptureCardRemoteSupported()
{
  return MEMORY[0x1E0CA1A90]();
}

uint64_t FigVirtualCaptureCardServerStart()
{
  return MEMORY[0x1E0CA1A98]();
}

uint64_t FigVolumeControllerStartServer()
{
  return MEMORY[0x1E0D484C0]();
}

uint64_t FigWatchdogBeginVitalWork()
{
  return MEMORY[0x1E0CA1AA0]();
}

uint64_t FigWatchdogCompleteVitalWork()
{
  return MEMORY[0x1E0CA1AA8]();
}

uint64_t FigWatchdogMonitorDispatchQueue()
{
  return MEMORY[0x1E0CA1AB0]();
}

uint64_t FigWatchdogStart()
{
  return MEMORY[0x1E0CA1AB8]();
}

uint64_t FigXPCArrayAppendCMTime()
{
  return MEMORY[0x1E0CA1AC0]();
}

uint64_t FigXPCArrayGetCMTime()
{
  return MEMORY[0x1E0CA1AC8]();
}

uint64_t FigXPCArrayGetCount()
{
  return MEMORY[0x1E0CA1AD0]();
}

uint64_t FigXPCAudioDeviceClockServerAssociateCopiedNeighborClock()
{
  return MEMORY[0x1E0CA1AD8]();
}

uint64_t FigXPCAudioDeviceClockServerCopyClockForID()
{
  return MEMORY[0x1E0CA1AE0]();
}

uint64_t FigXPCConnectionAssociateObject()
{
  return MEMORY[0x1E0CA1AE8]();
}

uint64_t FigXPCConnectionCopyMemoryOriginForConnectedProcess()
{
  return MEMORY[0x1E0CA1AF0]();
}

uint64_t FigXPCConnectionCopyMemoryRecipientForConnectedProcess()
{
  return MEMORY[0x1E0CA1AF8]();
}

uint64_t FigXPCConnectionCreateAssociatedEventLink()
{
  return MEMORY[0x1E0CA1B00]();
}

uint64_t FigXPCConnectionDisassociateObject()
{
  return MEMORY[0x1E0CA1B08]();
}

uint64_t FigXPCConnectionHasEntitlement()
{
  return MEMORY[0x1E0CA1B10]();
}

uint64_t FigXPCConnectionKillServerOnTimeout()
{
  return MEMORY[0x1E0CA1B18]();
}

uint64_t FigXPCConnectionRetainCopiedObject()
{
  return MEMORY[0x1E0CA1B20]();
}

uint64_t FigXPCConnectionSendAsyncMessage()
{
  return MEMORY[0x1E0CA1B28]();
}

uint64_t FigXPCConnectionSendStdCopyPropertyMessage()
{
  return MEMORY[0x1E0CA1B30]();
}

uint64_t FigXPCConnectionSendSyncMessage()
{
  return MEMORY[0x1E0CA1B38]();
}

uint64_t FigXPCConnectionSendSyncMessageCreatingReply()
{
  return MEMORY[0x1E0CA1B40]();
}

uint64_t FigXPCConnectionSendSyncMessageWithNoTimeoutCreatingReply()
{
  return MEMORY[0x1E0CA1B48]();
}

uint64_t FigXPCConnectionSetCustomServerTimeoutPerConnection()
{
  return MEMORY[0x1E0CA1B50]();
}

uint64_t FigXPCCreateBasicMessage()
{
  return MEMORY[0x1E0CA1B58]();
}

uint64_t FigXPCEndpointStreamServerAssociateCopiedNeighborFigEndpointStream()
{
  return MEMORY[0x1E0CA1B68]();
}

uint64_t FigXPCEndpointStreamServerRetainEndpointStreamForID()
{
  return MEMORY[0x1E0CA1B70]();
}

uint64_t FigXPCHandleStdCopyPropertyMessage()
{
  return MEMORY[0x1E0CA1B78]();
}

uint64_t FigXPCHandleStdSetPropertyMessage()
{
  return MEMORY[0x1E0CA1B80]();
}

uint64_t FigXPCIsObjectIDLocallyServed()
{
  return MEMORY[0x1E0CA1B88]();
}

uint64_t FigXPCMessageAddCMSampleBuffer()
{
  return MEMORY[0x1E0CA1B90]();
}

uint64_t FigXPCMessageAddCMSampleBufferForPID()
{
  return MEMORY[0x1E0CA1B98]();
}

uint64_t FigXPCMessageAddDataBufferFromCMSampleBuffer()
{
  return MEMORY[0x1E0CA1BA0]();
}

uint64_t FigXPCMessageCopyBlockBufferUsingMemoryRecipient()
{
  return MEMORY[0x1E0CA1BA8]();
}

uint64_t FigXPCMessageCopyCFArray()
{
  return MEMORY[0x1E0CA1BB0]();
}

uint64_t FigXPCMessageCopyCFBoolean()
{
  return MEMORY[0x1E0CA1BB8]();
}

uint64_t FigXPCMessageCopyCFData()
{
  return MEMORY[0x1E0CA1BC0]();
}

uint64_t FigXPCMessageCopyCFDate()
{
  return MEMORY[0x1E0CA1BC8]();
}

uint64_t FigXPCMessageCopyCFDictionary()
{
  return MEMORY[0x1E0CA1BD0]();
}

uint64_t FigXPCMessageCopyCFError()
{
  return MEMORY[0x1E0CA1BD8]();
}

uint64_t FigXPCMessageCopyCFNumber()
{
  return MEMORY[0x1E0CA1BE0]();
}

uint64_t FigXPCMessageCopyCFObject()
{
  return MEMORY[0x1E0CA1BE8]();
}

uint64_t FigXPCMessageCopyCFString()
{
  return MEMORY[0x1E0CA1BF0]();
}

uint64_t FigXPCMessageCopyCFURL()
{
  return MEMORY[0x1E0CA1BF8]();
}

uint64_t FigXPCMessageCopyCMSampleBuffer()
{
  return MEMORY[0x1E0CA1C00]();
}

uint64_t FigXPCMessageCopyDataBufferFromCMSampleBufferMessage()
{
  return MEMORY[0x1E0CA1C10]();
}

uint64_t FigXPCMessageCopyFigEndpointStreamAudioFormatDescription()
{
  return MEMORY[0x1E0CA1C18]();
}

uint64_t FigXPCMessageCopyFigEndpointStreamAudioFormatDescriptionArray()
{
  return MEMORY[0x1E0CA1C20]();
}

uint64_t FigXPCMessageCopyFormatDescription()
{
  return MEMORY[0x1E0CA1C28]();
}

uint64_t FigXPCMessageCopyFormatDescription2()
{
  return MEMORY[0x1E0CA1C30]();
}

uint64_t FigXPCMessageCopyFormatDescriptionArray()
{
  return MEMORY[0x1E0CA1C38]();
}

uint64_t FigXPCMessageCopySandboxRegistration()
{
  return MEMORY[0x1E0CA1C40]();
}

uint64_t FigXPCMessageCopyTimelineCoordinatorParticipantSnapshot()
{
  return MEMORY[0x1E0CA1C48]();
}

uint64_t FigXPCMessageCopyTimelineCoordinatorParticipantSnapshots()
{
  return MEMORY[0x1E0CA1C50]();
}

uint64_t FigXPCMessageCopyTimelineCoordinatorSuspension()
{
  return MEMORY[0x1E0CA1C58]();
}

uint64_t FigXPCMessageCreateBlockBufferData()
{
  return MEMORY[0x1E0CA1C60]();
}

uint64_t FigXPCMessageCreateBlockBufferDataWithSize()
{
  return MEMORY[0x1E0CA1C68]();
}

uint64_t FigXPCMessageGetCMTime()
{
  return MEMORY[0x1E0CA1C70]();
}

uint64_t FigXPCMessageGetCMTimeMapping()
{
  return MEMORY[0x1E0CA1C78]();
}

uint64_t FigXPCMessageGetCMTimeRange()
{
  return MEMORY[0x1E0CA1C80]();
}

uint64_t FigXPCMessageGetInt32()
{
  return MEMORY[0x1E0CA1C88]();
}

uint64_t FigXPCMessageGetOSStatus()
{
  return MEMORY[0x1E0CA1C90]();
}

uint64_t FigXPCMessageGetOpCode()
{
  return MEMORY[0x1E0CA1C98]();
}

uint64_t FigXPCMessageGetUInt32()
{
  return MEMORY[0x1E0CA1CA0]();
}

uint64_t FigXPCMessageSetAndConsumeVMData()
{
  return MEMORY[0x1E0CA1CA8]();
}

uint64_t FigXPCMessageSetBlockBuffer()
{
  return MEMORY[0x1E0CA1CB0]();
}

uint64_t FigXPCMessageSetBlockBufferUsingMemoryOrigin()
{
  return MEMORY[0x1E0CA1CB8]();
}

uint64_t FigXPCMessageSetCFArray()
{
  return MEMORY[0x1E0CA1CC0]();
}

uint64_t FigXPCMessageSetCFBoolean()
{
  return MEMORY[0x1E0CA1CC8]();
}

uint64_t FigXPCMessageSetCFData()
{
  return MEMORY[0x1E0CA1CD0]();
}

uint64_t FigXPCMessageSetCFDate()
{
  return MEMORY[0x1E0CA1CD8]();
}

uint64_t FigXPCMessageSetCFDictionary()
{
  return MEMORY[0x1E0CA1CE0]();
}

uint64_t FigXPCMessageSetCFError()
{
  return MEMORY[0x1E0CA1CE8]();
}

uint64_t FigXPCMessageSetCFNumber()
{
  return MEMORY[0x1E0CA1CF0]();
}

uint64_t FigXPCMessageSetCFObject()
{
  return MEMORY[0x1E0CA1CF8]();
}

uint64_t FigXPCMessageSetCFString()
{
  return MEMORY[0x1E0CA1D00]();
}

uint64_t FigXPCMessageSetCFURL()
{
  return MEMORY[0x1E0CA1D08]();
}

uint64_t FigXPCMessageSetCMTime()
{
  return MEMORY[0x1E0CA1D10]();
}

uint64_t FigXPCMessageSetCMTimeMapping()
{
  return MEMORY[0x1E0CA1D18]();
}

uint64_t FigXPCMessageSetCMTimeRange()
{
  return MEMORY[0x1E0CA1D20]();
}

uint64_t FigXPCMessageSetFigEndpointStreamAudioFormatDescription()
{
  return MEMORY[0x1E0CA1D28]();
}

uint64_t FigXPCMessageSetFigEndpointStreamAudioFormatDescriptionArray()
{
  return MEMORY[0x1E0CA1D30]();
}

uint64_t FigXPCMessageSetFormatDescription()
{
  return MEMORY[0x1E0CA1D38]();
}

uint64_t FigXPCMessageSetFormatDescriptionArray()
{
  return MEMORY[0x1E0CA1D40]();
}

uint64_t FigXPCMessageSetInt32()
{
  return MEMORY[0x1E0CA1D48]();
}

uint64_t FigXPCMessageSetOSStatus()
{
  return MEMORY[0x1E0CA1D50]();
}

uint64_t FigXPCMessageSetSandboxRegistration()
{
  return MEMORY[0x1E0CA1D58]();
}

uint64_t FigXPCMessageSetTimelineCoordinatorParticipantSnapshot()
{
  return MEMORY[0x1E0CA1D60]();
}

uint64_t FigXPCMessageSetTimelineCoordinatorParticipantSnapshots()
{
  return MEMORY[0x1E0CA1D68]();
}

uint64_t FigXPCMessageSetTimelineCoordinatorSuspension()
{
  return MEMORY[0x1E0CA1D70]();
}

uint64_t FigXPCMessageSetUInt32()
{
  return MEMORY[0x1E0CA1D78]();
}

uint64_t FigXPCRelease()
{
  return MEMORY[0x1E0CA1D80]();
}

uint64_t FigXPCRemoteClientAssociateObject()
{
  return MEMORY[0x1E0CA1D88]();
}

uint64_t FigXPCRemoteClientCopyMemoryOrigin()
{
  return MEMORY[0x1E0CA1D90]();
}

uint64_t FigXPCRemoteClientCopyMemoryRecipient()
{
  return MEMORY[0x1E0CA1D98]();
}

uint64_t FigXPCRemoteClientCopyPrimaryConnection()
{
  return MEMORY[0x1E0CA1DA0]();
}

uint64_t FigXPCRemoteClientCreate()
{
  return MEMORY[0x1E0CA1DA8]();
}

uint64_t FigXPCRemoteClientCreateSecondaryConnection()
{
  return MEMORY[0x1E0CA1DB0]();
}

uint64_t FigXPCRemoteClientCreateWithXPCEndpoint()
{
  return MEMORY[0x1E0CA1DB8]();
}

uint64_t FigXPCRemoteClientDisassociateObject()
{
  return MEMORY[0x1E0CA1DC0]();
}

uint64_t FigXPCRemoteClientGetServerPID()
{
  return MEMORY[0x1E0CA1DD0]();
}

uint64_t FigXPCRemoteClientKillServerOnTimeout()
{
  return MEMORY[0x1E0CA1DD8]();
}

uint64_t FigXPCRemoteClientLookupAndRetainAssociatedObject()
{
  return MEMORY[0x1E0CA1DE0]();
}

uint64_t FigXPCRemoteClientRetainCopiedObject()
{
  return MEMORY[0x1E0CA1DE8]();
}

uint64_t FigXPCRemoteClientSendAsyncMessage()
{
  return MEMORY[0x1E0CA1DF0]();
}

uint64_t FigXPCRemoteClientSendSyncMessage()
{
  return MEMORY[0x1E0CA1DF8]();
}

uint64_t FigXPCRemoteClientSendSyncMessageCreatingReply()
{
  return MEMORY[0x1E0CA1E00]();
}

uint64_t FigXPCRemoteClientSendSyncMessageWithNoTimeoutCreatingReply()
{
  return MEMORY[0x1E0CA1E08]();
}

uint64_t FigXPCRetain()
{
  return MEMORY[0x1E0CA1E10]();
}

uint64_t FigXPCSendStdCopyPropertyMessage()
{
  return MEMORY[0x1E0CA1E18]();
}

uint64_t FigXPCSendStdSetPropertyMessage()
{
  return MEMORY[0x1E0CA1E20]();
}

uint64_t FigXPCServerActivate()
{
  return MEMORY[0x1E0CA1E28]();
}

uint64_t FigXPCServerAssociateCopiedObjectWithConnection()
{
  return MEMORY[0x1E0CA1E30]();
}

uint64_t FigXPCServerAssociateCopiedObjectWithNeighborProcess()
{
  return MEMORY[0x1E0CA1E38]();
}

uint64_t FigXPCServerAssociateCopiedObjectWithNeighborProcessByPID()
{
  return MEMORY[0x1E0CA1E40]();
}

uint64_t FigXPCServerAssociateObjectWithConnection()
{
  return MEMORY[0x1E0CA1E48]();
}

uint64_t FigXPCServerAssociateObjectWithConnectionWithFlags()
{
  return MEMORY[0x1E0CA1E50]();
}

uint64_t FigXPCServerAssociateObjectWithNeighborProcess()
{
  return MEMORY[0x1E0CA1E58]();
}

uint64_t FigXPCServerAssociateObjectWithNeighborProcessByPID()
{
  return MEMORY[0x1E0CA1E60]();
}

uint64_t FigXPCServerCopyMemoryOrigin()
{
  return MEMORY[0x1E0CA1E68]();
}

uint64_t FigXPCServerCopyMemoryRecipient()
{
  return MEMORY[0x1E0CA1E70]();
}

uint64_t FigXPCServerCopyXPCEndpoint()
{
  return MEMORY[0x1E0CA1E78]();
}

uint64_t FigXPCServerDisassociateObjectWithConnection()
{
  return MEMORY[0x1E0CA1E88]();
}

uint64_t FigXPCServerDisassociateObjectWithNeighborClientPID()
{
  return MEMORY[0x1E0CA1E90]();
}

uint64_t FigXPCServerFindUniqueObjectIDForObjectAssociatedWithConnection()
{
  return MEMORY[0x1E0CA1E98]();
}

uint64_t FigXPCServerGetConnectionRefcon()
{
  return MEMORY[0x1E0CA1EA0]();
}

uint64_t FigXPCServerLookupAndRetainAssociatedObject()
{
  return MEMORY[0x1E0CA1EA8]();
}

uint64_t FigXPCServerLookupAndRetainAssociatedObjectAndCFTypeRefcon()
{
  return MEMORY[0x1E0CA1EB0]();
}

uint64_t FigXPCServerRetainNeighborObjectFromID()
{
  return MEMORY[0x1E0CA1EB8]();
}

uint64_t FigXPCServerRetainNeighborObjectFromIDWithConnection()
{
  return MEMORY[0x1E0CA1EC0]();
}

uint64_t FigXPCServerSetConnectionRefcon()
{
  return MEMORY[0x1E0CA1EC8]();
}

uint64_t FigXPCServerStart()
{
  return MEMORY[0x1E0CA1ED0]();
}

uint64_t FigXPCServerStartWithNewXPCEndpoint()
{
  return MEMORY[0x1E0CA1EE0]();
}

uint64_t GSInitialize()
{
  return MEMORY[0x1E0D27BB8]();
}

uint64_t GSMainScreenScaleFactor()
{
  return MEMORY[0x1E0D27C58]();
}

uint64_t ID3ParserClose()
{
  return MEMORY[0x1E0C922C8]();
}

uint64_t ID3ParserGetProperty()
{
  return MEMORY[0x1E0C922D0]();
}

uint64_t ID3ParserOpen()
{
  return MEMORY[0x1E0C922D8]();
}

uint64_t IOAVControllerCreateWithLocation()
{
  return MEMORY[0x1E0CBAD10]();
}

uint64_t IOAVControllerSetProtectionType()
{
  return MEMORY[0x1E0CBAD18]();
}

IOReturn IOAllowPowerChange(io_connect_t kernelPort, intptr_t notificationID)
{
  return MEMORY[0x1E0CBAD20](*(_QWORD *)&kernelPort, notificationID);
}

uint64_t IOMobileFramebufferCopyProperty()
{
  return MEMORY[0x1E0D39F60]();
}

uint64_t IOMobileFramebufferCreateDisplayList()
{
  return MEMORY[0x1E0D39F68]();
}

uint64_t IOMobileFramebufferDisableHotPlugDetectNotifications()
{
  return MEMORY[0x1E0D39F70]();
}

uint64_t IOMobileFramebufferDisableVSyncNotifications()
{
  return MEMORY[0x1E0D39F80]();
}

uint64_t IOMobileFramebufferEnableHotPlugDetectNotifications()
{
  return MEMORY[0x1E0D39F90]();
}

uint64_t IOMobileFramebufferEnableVSyncNotifications()
{
  return MEMORY[0x1E0D39FA0]();
}

uint64_t IOMobileFramebufferGetDigitalOutState()
{
  return MEMORY[0x1E0D39FE8]();
}

uint64_t IOMobileFramebufferGetDisplaySize()
{
  return MEMORY[0x1E0D39FF8]();
}

uint64_t IOMobileFramebufferGetHotPlugRunLoopSource()
{
  return MEMORY[0x1E0D3A008]();
}

uint64_t IOMobileFramebufferGetID()
{
  return MEMORY[0x1E0D3A010]();
}

uint64_t IOMobileFramebufferGetProtectionOptions()
{
  return MEMORY[0x1E0D3A030]();
}

uint64_t IOMobileFramebufferGetSecondaryDisplay()
{
  return MEMORY[0x1E0D3A040]();
}

uint64_t IOMobileFramebufferGetSupportedDigitalOutModes()
{
  return MEMORY[0x1E0D3A050]();
}

uint64_t IOMobileFramebufferGetVSyncRunLoopSource()
{
  return MEMORY[0x1E0D3A058]();
}

uint64_t IOMobileFramebufferInstallVirtualDisplays()
{
  return MEMORY[0x1E0D3A068]();
}

uint64_t IOMobileFramebufferOpenByName()
{
  return MEMORY[0x1E0D3A078]();
}

uint64_t IOMobileFramebufferSetDigitalOutMode()
{
  return MEMORY[0x1E0D3A0B0]();
}

uint64_t IOMobileFramebufferSetDisplayDevice()
{
  return MEMORY[0x1E0D3A0B8]();
}

uint64_t IOMobileFramebufferSwapBegin()
{
  return MEMORY[0x1E0D3A100]();
}

uint64_t IOMobileFramebufferSwapEnd()
{
  return MEMORY[0x1E0D3A128]();
}

uint64_t IOMobileFramebufferSwapSetBackgroundColor()
{
  return MEMORY[0x1E0D3A138]();
}

uint64_t IOMobileFramebufferSwapSetLayer()
{
  return MEMORY[0x1E0D3A1A0]();
}

uint64_t IOMobileFramebufferSwapWait()
{
  return MEMORY[0x1E0D3A1B8]();
}

void IONotificationPortSetDispatchQueue(IONotificationPortRef notify, dispatch_queue_t queue)
{
  MEMORY[0x1E0CBB6B8](notify, queue);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x1E0CBB6F0](*(_QWORD *)&object);
}

io_connect_t IORegisterForSystemPower(void *refcon, IONotificationPortRef *thePortRef, IOServiceInterestCallback callback, io_object_t *notifier)
{
  return MEMORY[0x1E0CBB8D8](refcon, thePortRef, callback, notifier);
}

kern_return_t IORegistryEntryGetProperty(io_registry_entry_t entry, const io_name_t propertyName, io_struct_inband_t buffer, uint32_t *size)
{
  return MEMORY[0x1E0CBB978](*(_QWORD *)&entry, propertyName, buffer, size);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x1E0CBB9E0](*(_QWORD *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0CBBA00](name);
}

uint64_t IOSurfaceAcceleratorBlitSurface()
{
  return MEMORY[0x1E0D3A1C8]();
}

uint64_t IOSurfaceAcceleratorCreate()
{
  return MEMORY[0x1E0D3A1D0]();
}

uint64_t IOSurfaceAcceleratorGetRunLoopSource()
{
  return MEMORY[0x1E0D3A1E0]();
}

uint64_t IOSurfaceBindAccel()
{
  return MEMORY[0x1E0CBBAD0]();
}

CFTypeRef IOSurfaceCopyValue(IOSurfaceRef buffer, CFStringRef key)
{
  return (CFTypeRef)MEMORY[0x1E0CBBAE8](buffer, key);
}

mach_port_t IOSurfaceCreateMachPort(IOSurfaceRef buffer)
{
  return MEMORY[0x1E0CBBB00](buffer);
}

xpc_object_t IOSurfaceCreateXPCObject(IOSurfaceRef aSurface)
{
  return (xpc_object_t)MEMORY[0x1E0CBBB10](aSurface);
}

uint64_t IOSurfaceGetBulkAttachments()
{
  return MEMORY[0x1E0CBBB70]();
}

size_t IOSurfaceGetHeightOfPlane(IOSurfaceRef buffer, size_t planeIndex)
{
  return MEMORY[0x1E0CBBC38](buffer, planeIndex);
}

IOSurfaceID IOSurfaceGetID(IOSurfaceRef buffer)
{
  return MEMORY[0x1E0CBBC48](buffer);
}

OSType IOSurfaceGetPixelFormat(IOSurfaceRef buffer)
{
  return MEMORY[0x1E0CBBC68](buffer);
}

uint64_t IOSurfaceGetProtectionOptions()
{
  return MEMORY[0x1E0CBBC90]();
}

CFTypeID IOSurfaceGetTypeID(void)
{
  return MEMORY[0x1E0CBBCC8]();
}

size_t IOSurfaceGetWidthOfPlane(IOSurfaceRef buffer, size_t planeIndex)
{
  return MEMORY[0x1E0CBBCF0](buffer, planeIndex);
}

IOSurfaceRef IOSurfaceLookupFromXPCObject(xpc_object_t xobj)
{
  return (IOSurfaceRef)MEMORY[0x1E0CBBD48](xobj);
}

uint64_t IOSurfaceNeedsBindAccel()
{
  return MEMORY[0x1E0CBBD50]();
}

void IOSurfaceSetValue(IOSurfaceRef buffer, CFStringRef key, CFTypeRef value)
{
  MEMORY[0x1E0CBBE40](buffer, key, value);
}

CFArrayRef MAAudibleMediaCopyPreferredCharacteristics(void)
{
  return (CFArrayRef)MEMORY[0x1E0CC1B50]();
}

CGColorRef MACaptionAppearanceCopyBackgroundColor(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  return (CGColorRef)MEMORY[0x1E0CC1B60](domain, behavior);
}

uint64_t MACaptionAppearanceCopyFontDescriptorForLanguage()
{
  return MEMORY[0x1E0CC1B68]();
}

CTFontDescriptorRef MACaptionAppearanceCopyFontDescriptorForStyle(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior, MACaptionAppearanceFontStyle fontStyle)
{
  return (CTFontDescriptorRef)MEMORY[0x1E0CC1B70](domain, behavior, fontStyle);
}

CGColorRef MACaptionAppearanceCopyForegroundColor(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  return (CGColorRef)MEMORY[0x1E0CC1B78](domain, behavior);
}

CFArrayRef MACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics(MACaptionAppearanceDomain domain)
{
  return (CFArrayRef)MEMORY[0x1E0CC1B80](domain);
}

CFArrayRef MACaptionAppearanceCopySelectedLanguages(MACaptionAppearanceDomain domain)
{
  return (CFArrayRef)MEMORY[0x1E0CC1B88](domain);
}

uint64_t MACaptionAppearanceCopyStrokeColor()
{
  return MEMORY[0x1E0CC1B90]();
}

CGColorRef MACaptionAppearanceCopyWindowColor(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  return (CGColorRef)MEMORY[0x1E0CC1B98](domain, behavior);
}

CGFloat MACaptionAppearanceGetBackgroundOpacity(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  CGFloat result;

  MEMORY[0x1E0CC1BA0](domain, behavior);
  return result;
}

MACaptionAppearanceDisplayType MACaptionAppearanceGetDisplayType(MACaptionAppearanceDomain domain)
{
  return MEMORY[0x1E0CC1BA8](domain);
}

CGFloat MACaptionAppearanceGetForegroundOpacity(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  CGFloat result;

  MEMORY[0x1E0CC1BB0](domain, behavior);
  return result;
}

CGFloat MACaptionAppearanceGetRelativeCharacterSize(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  CGFloat result;

  MEMORY[0x1E0CC1BB8](domain, behavior);
  return result;
}

uint64_t MACaptionAppearanceGetRelativeCharacterSizeForLanguage()
{
  return MEMORY[0x1E0CC1BC0]();
}

uint64_t MACaptionAppearanceGetStrokeWidth()
{
  return MEMORY[0x1E0CC1BC8]();
}

MACaptionAppearanceTextEdgeStyle MACaptionAppearanceGetTextEdgeStyle(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  return MEMORY[0x1E0CC1BD0](domain, behavior);
}

CGFloat MACaptionAppearanceGetWindowOpacity(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  CGFloat result;

  MEMORY[0x1E0CC1BD8](domain, behavior);
  return result;
}

CGFloat MACaptionAppearanceGetWindowRoundedCornerRadius(MACaptionAppearanceDomain domain, MACaptionAppearanceBehavior *behavior)
{
  CGFloat result;

  MEMORY[0x1E0CC1BE0](domain, behavior);
  return result;
}

uint64_t MACaptionAppearancePrefCopyActiveProfileID()
{
  return MEMORY[0x1E0CC1BE8]();
}

uint64_t MACaptionAppearancePrefCopyProfileName()
{
  return MEMORY[0x1E0CC1BF8]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x1E0DE2B70]();
}

uint64_t MXBeginUpdatingIncrementalCodeCoverageData()
{
  return MEMORY[0x1E0D484C8]();
}

uint64_t MXEnsureReadyToCollectIncrementalCoverageData()
{
  return MEMORY[0x1E0D484D0]();
}

uint64_t MXFinishUpdatingIncrementalCodeCoverageData()
{
  return MEMORY[0x1E0D484D8]();
}

uint64_t MXSessionCopyProperties()
{
  return MEMORY[0x1E0D484E8]();
}

uint64_t MXSessionCopyProperty()
{
  return MEMORY[0x1E0D484F0]();
}

uint64_t MXSessionCreate()
{
  return MEMORY[0x1E0D484F8]();
}

uint64_t MXSessionSetProperties()
{
  return MEMORY[0x1E0D48518]();
}

uint64_t MXSessionSetProperty()
{
  return MEMORY[0x1E0D48520]();
}

uint64_t MXSetCodeCoverageFilePathPattern()
{
  return MEMORY[0x1E0D48528]();
}

uint64_t MX_RunningBoardServices_CreateBackgroundDownloadProcessAssertionForBundleIdentifier()
{
  return MEMORY[0x1E0D48530]();
}

uint64_t MX_RunningBoardServices_CreateMediaPlaybackProcessAssertionForPID()
{
  return MEMORY[0x1E0D48538]();
}

uint64_t MX_RunningBoardServices_InvalidateBackgroundDownloadProcessAssertion()
{
  return MEMORY[0x1E0D48540]();
}

uint64_t MX_RunningBoardServices_InvalidateMediaPlaybackProcessAssertion()
{
  return MEMORY[0x1E0D48548]();
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

uint64_t NeroTransportCreate()
{
  return MEMORY[0x1E0CA1EE8]();
}

uint64_t NeroTransportCreateWithNTCXPCConnection()
{
  return MEMORY[0x1E0CA1EF0]();
}

uint64_t NeroTransportDisconnectFromReceiver()
{
  return MEMORY[0x1E0CA1EF8]();
}

uint64_t NeroTransportInvalidate()
{
  return MEMORY[0x1E0CA1F00]();
}

uint64_t NeroTransportRegisterObject()
{
  return MEMORY[0x1E0CA1F08]();
}

uint64_t NeroTransportRegisterObjectWithFlags()
{
  return MEMORY[0x1E0CA1F10]();
}

uint64_t NeroTransportSendAsyncMessage()
{
  return MEMORY[0x1E0CA1F18]();
}

uint64_t NeroTransportSendSyncMessageCreatingReply()
{
  return MEMORY[0x1E0CA1F20]();
}

uint64_t NeroTransportStartAcceptingConnections()
{
  return MEMORY[0x1E0CA1F28]();
}

uint64_t NeroTransportStopAcceptingConnections()
{
  return MEMORY[0x1E0CA1F30]();
}

uint64_t NeroTransportUnregisterObject()
{
  return MEMORY[0x1E0CA1F38]();
}

uint64_t SBSGetScreenLockStatus()
{
  return MEMORY[0x1E0DAB728]();
}

uint64_t SBSSetAllApplicationsShowProgress()
{
  return MEMORY[0x1E0DAB978]();
}

uint64_t SBSSetStatusBarShowsActivityForApplication()
{
  return MEMORY[0x1E0DAB988]();
}

CFArrayRef SCDynamicStoreCopyKeyList(SCDynamicStoreRef store, CFStringRef pattern)
{
  return (CFArrayRef)MEMORY[0x1E0CE8748](store, pattern);
}

CFPropertyListRef SCDynamicStoreCopyValue(SCDynamicStoreRef store, CFStringRef key)
{
  return (CFPropertyListRef)MEMORY[0x1E0CE8768](store, key);
}

SCDynamicStoreRef SCDynamicStoreCreate(CFAllocatorRef allocator, CFStringRef name, SCDynamicStoreCallBack callout, SCDynamicStoreContext *context)
{
  return (SCDynamicStoreRef)MEMORY[0x1E0CE8770](allocator, name, callout, context);
}

CFStringRef SCDynamicStoreKeyCreateNetworkInterface(CFAllocatorRef allocator, CFStringRef domain)
{
  return (CFStringRef)MEMORY[0x1E0CE87A0](allocator, domain);
}

CFStringRef SCDynamicStoreKeyCreateNetworkInterfaceEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x1E0CE87A8](allocator, domain, ifname, entity);
}

CFTypeID SecIdentityGetTypeID(void)
{
  return MEMORY[0x1E0CD6288]();
}

uint64_t SecKeyCreateFromPublicData()
{
  return MEMORY[0x1E0CD6368]();
}

OSStatus SecKeyRawVerify(SecKeyRef key, SecPadding padding, const uint8_t *signedData, size_t signedDataLen, const uint8_t *sig, size_t sigLen)
{
  return MEMORY[0x1E0CD6400](key, *(_QWORD *)&padding, signedData, signedDataLen, sig, sigLen);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1E0CD65F0](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1E0CD6610](allocator);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return (SecTaskRef)MEMORY[0x1E0CD6620](allocator, token);
}

CFTypeID SecTaskGetTypeID(void)
{
  return MEMORY[0x1E0CD6640]();
}

void TXTRecordCreate(TXTRecordRef *txtRecord, uint16_t bufferLen, void *buffer)
{
  MEMORY[0x1E0C806F0](txtRecord, bufferLen, buffer);
}

void TXTRecordDeallocate(TXTRecordRef *txtRecord)
{
  MEMORY[0x1E0C806F8](txtRecord);
}

const void *__cdecl TXTRecordGetBytesPtr(const TXTRecordRef *txtRecord)
{
  return (const void *)MEMORY[0x1E0C80700](txtRecord);
}

uint16_t TXTRecordGetLength(const TXTRecordRef *txtRecord)
{
  return MEMORY[0x1E0C80718](txtRecord);
}

const void *__cdecl TXTRecordGetValuePtr(uint16_t txtLen, const void *txtRecord, const char *key, uint8_t *valueLen)
{
  return (const void *)MEMORY[0x1E0C80720](txtLen, txtRecord, key, valueLen);
}

DNSServiceErrorType TXTRecordSetValue(TXTRecordRef *txtRecord, const char *key, uint8_t valueSize, const void *value)
{
  return MEMORY[0x1E0C80730](txtRecord, key, valueSize, value);
}

CFStringRef UTTypeCopyPreferredTagWithClass(CFStringRef inUTI, CFStringRef inTagClass)
{
  return (CFStringRef)MEMORY[0x1E0CA5970](inUTI, inTagClass);
}

CFArrayRef UTTypeCreateAllIdentifiersForTag(CFStringRef inTagClass, CFStringRef inTag, CFStringRef inConformingToUTI)
{
  return (CFArrayRef)MEMORY[0x1E0CA5978](inTagClass, inTag, inConformingToUTI);
}

CFStringRef UTTypeCreatePreferredIdentifierForTag(CFStringRef inTagClass, CFStringRef inTag, CFStringRef inConformingToUTI)
{
  return (CFStringRef)MEMORY[0x1E0CA5980](inTagClass, inTag, inConformingToUTI);
}

uint64_t VTAvoidIOSurfaceBackings()
{
  return MEMORY[0x1E0CEC910]();
}

uint64_t VTBeginUpdatingIncrementalCodeCoverageData()
{
  return MEMORY[0x1E0CEC918]();
}

uint64_t VTBuildPixelBufferPools2()
{
  return MEMORY[0x1E0CEC928]();
}

OSStatus VTCompressionSessionBeginPass(VTCompressionSessionRef session, VTCompressionSessionOptionFlags beginPassFlags, uint32_t *reserved)
{
  return MEMORY[0x1E0CEC930](session, *(_QWORD *)&beginPassFlags, reserved);
}

OSStatus VTCompressionSessionCompleteFrames(VTCompressionSessionRef session, CMTime *completeUntilPresentationTimeStamp)
{
  return MEMORY[0x1E0CEC938](session, completeUntilPresentationTimeStamp);
}

uint64_t VTCompressionSessionCopyProperty()
{
  return MEMORY[0x1E0CEC940]();
}

OSStatus VTCompressionSessionCreate(CFAllocatorRef allocator, int32_t width, int32_t height, CMVideoCodecType codecType, CFDictionaryRef encoderSpecification, CFDictionaryRef sourceImageBufferAttributes, CFAllocatorRef compressedDataAllocator, VTCompressionOutputCallback outputCallback, void *outputCallbackRefCon, VTCompressionSessionRef *compressionSessionOut)
{
  return MEMORY[0x1E0CEC948](allocator, *(_QWORD *)&width, *(_QWORD *)&height, *(_QWORD *)&codecType, encoderSpecification, sourceImageBufferAttributes, compressedDataAllocator, outputCallback);
}

uint64_t VTCompressionSessionCreateWithOptions()
{
  return MEMORY[0x1E0CEC950]();
}

OSStatus VTCompressionSessionEncodeFrame(VTCompressionSessionRef session, CVImageBufferRef imageBuffer, CMTime *presentationTimeStamp, CMTime *duration, CFDictionaryRef frameProperties, void *sourceFrameRefcon, VTEncodeInfoFlags *infoFlagsOut)
{
  return MEMORY[0x1E0CEC958](session, imageBuffer, presentationTimeStamp, duration, frameProperties, sourceFrameRefcon, infoFlagsOut);
}

OSStatus VTCompressionSessionEncodeMultiImageFrame(VTCompressionSessionRef session, CMTaggedBufferGroupRef taggedBufferGroup, CMTime *presentationTimeStamp, CMTime *duration, CFDictionaryRef frameProperties, void *sourceFrameRefcon, VTEncodeInfoFlags *infoFlagsOut)
{
  return MEMORY[0x1E0CEC968](session, taggedBufferGroup, presentationTimeStamp, duration, frameProperties, sourceFrameRefcon, infoFlagsOut);
}

OSStatus VTCompressionSessionEndPass(VTCompressionSessionRef session, Boolean *furtherPassesRequestedOut, uint32_t *reserved)
{
  return MEMORY[0x1E0CEC970](session, furtherPassesRequestedOut, reserved);
}

CVPixelBufferPoolRef VTCompressionSessionGetPixelBufferPool(VTCompressionSessionRef session)
{
  return (CVPixelBufferPoolRef)MEMORY[0x1E0CEC978](session);
}

OSStatus VTCompressionSessionGetTimeRangesForNextPass(VTCompressionSessionRef session, CMItemCount *timeRangeCountOut, const CMTimeRange **timeRangeArrayOut)
{
  return MEMORY[0x1E0CEC980](session, timeRangeCountOut, timeRangeArrayOut);
}

void VTCompressionSessionInvalidate(VTCompressionSessionRef session)
{
  MEMORY[0x1E0CEC990](session);
}

uint64_t VTCompressionSessionServerStart()
{
  return MEMORY[0x1E0CEC9A0]();
}

OSStatus VTCopySupportedPropertyDictionaryForEncoder(int32_t width, int32_t height, CMVideoCodecType codecType, CFDictionaryRef encoderSpecification, CFStringRef *encoderIDOut, CFDictionaryRef *supportedPropertiesOut)
{
  return MEMORY[0x1E0CEC9C0](*(_QWORD *)&width, *(_QWORD *)&height, *(_QWORD *)&codecType, encoderSpecification, encoderIDOut, supportedPropertiesOut);
}

uint64_t VTCopyVP9DecoderCapabilitiesDictionary()
{
  return MEMORY[0x1E0CEC9C8]();
}

OSStatus VTCopyVideoEncoderList(CFDictionaryRef options, CFArrayRef *listOfVideoEncodersOut)
{
  return MEMORY[0x1E0CEC9D0](options, listOfVideoEncodersOut);
}

OSStatus VTCreateCGImageFromCVPixelBuffer(CVPixelBufferRef pixelBuffer, CFDictionaryRef options, CGImageRef *imageOut)
{
  return MEMORY[0x1E0CEC9D8](pixelBuffer, options, imageOut);
}

uint64_t VTCreateCGImageFromIOSurfaceAndAttributes()
{
  return MEMORY[0x1E0CEC9E0]();
}

uint64_t VTCreatePixelBufferPoolAttributesWithName()
{
  return MEMORY[0x1E0CEC9E8]();
}

Boolean VTDecompressionSessionCanAcceptFormatDescription(VTDecompressionSessionRef session, CMFormatDescriptionRef newFormatDesc)
{
  return MEMORY[0x1E0CECA08](session, newFormatDesc);
}

OSStatus VTDecompressionSessionCopyBlackPixelBuffer(VTDecompressionSessionRef session, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CECA10](session, pixelBufferOut);
}

OSStatus VTDecompressionSessionCreate(CFAllocatorRef allocator, CMVideoFormatDescriptionRef videoFormatDescription, CFDictionaryRef videoDecoderSpecification, CFDictionaryRef destinationImageBufferAttributes, const VTDecompressionOutputCallbackRecord *outputCallback, VTDecompressionSessionRef *decompressionSessionOut)
{
  return MEMORY[0x1E0CECA30](allocator, videoFormatDescription, videoDecoderSpecification, destinationImageBufferAttributes, outputCallback, decompressionSessionOut);
}

uint64_t VTDecompressionSessionCreateWithOptions()
{
  return MEMORY[0x1E0CECA38]();
}

OSStatus VTDecompressionSessionDecodeFrame(VTDecompressionSessionRef session, CMSampleBufferRef sampleBuffer, VTDecodeFrameFlags decodeFlags, void *sourceFrameRefCon, VTDecodeInfoFlags *infoFlagsOut)
{
  return MEMORY[0x1E0CECA40](session, sampleBuffer, *(_QWORD *)&decodeFlags, sourceFrameRefCon, infoFlagsOut);
}

OSStatus VTDecompressionSessionFinishDelayedFrames(VTDecompressionSessionRef session)
{
  return MEMORY[0x1E0CECA58](session);
}

uint64_t VTDecompressionSessionGetMinAndMaxOutputPresentationTimeStampOfFramesBeingDecoded()
{
  return MEMORY[0x1E0CECA60]();
}

void VTDecompressionSessionInvalidate(VTDecompressionSessionRef session)
{
  MEMORY[0x1E0CECA70](session);
}

uint64_t VTDecompressionSessionServerStart()
{
  return MEMORY[0x1E0CECA78]();
}

OSStatus VTDecompressionSessionSetMultiImageCallback(VTDecompressionSessionRef decompressionSession, VTDecompressionOutputMultiImageCallback outputMultiImageCallback, void *outputMultiImageRefcon)
{
  return MEMORY[0x1E0CECA80](decompressionSession, outputMultiImageCallback, outputMultiImageRefcon);
}

OSStatus VTDecompressionSessionWaitForAsynchronousFrames(VTDecompressionSessionRef session)
{
  return MEMORY[0x1E0CECA98](session);
}

uint64_t VTEnsureReadyToCollectIncrementalCoverageData()
{
  return MEMORY[0x1E0CECAE8]();
}

uint64_t VTFigAudioSessionInitialize()
{
  return MEMORY[0x1E0CECAF0]();
}

uint64_t VTFinishUpdatingIncrementalCodeCoverageData()
{
  return MEMORY[0x1E0CECB08]();
}

OSStatus VTFrameSiloAddSampleBuffer(VTFrameSiloRef silo, CMSampleBufferRef sampleBuffer)
{
  return MEMORY[0x1E0CECB10](silo, sampleBuffer);
}

OSStatus VTFrameSiloCallFunctionForEachSampleBuffer(VTFrameSiloRef silo, CMTimeRange *timeRange, void *refcon, OSStatus (__cdecl *callback)(void *, CMSampleBufferRef))
{
  return MEMORY[0x1E0CECB18](silo, timeRange, refcon, callback);
}

OSStatus VTFrameSiloCreate(CFAllocatorRef allocator, CFURLRef fileURL, CMTimeRange *timeRange, CFDictionaryRef options, VTFrameSiloRef *frameSiloOut)
{
  return MEMORY[0x1E0CECB20](allocator, fileURL, timeRange, options, frameSiloOut);
}

OSStatus VTFrameSiloGetProgressOfCurrentPass(VTFrameSiloRef silo, Float32 *progressOut)
{
  return MEMORY[0x1E0CECB28](silo, progressOut);
}

OSStatus VTFrameSiloSetTimeRangesForNextPass(VTFrameSiloRef silo, CMItemCount timeRangeCount, const CMTimeRange *timeRangeArray)
{
  return MEMORY[0x1E0CECB30](silo, timeRangeCount, timeRangeArray);
}

uint64_t VTGetDefaultColorAttributesWithHints()
{
  return MEMORY[0x1E0CECB40]();
}

uint64_t VTGetDefaultYCbCrMatrixWithColorSpaceNameAndDimensionHints()
{
  return MEMORY[0x1E0CECB48]();
}

uint64_t VTHDRImageStatisticsGenerationSessionCreate()
{
  return MEMORY[0x1E0CECB58]();
}

uint64_t VTHDRImageStatisticsGenerationSessionCreateStatistics()
{
  return MEMORY[0x1E0CECB60]();
}

uint64_t VTHDRMetadataGenerationSessionCreate()
{
  return MEMORY[0x1E0CECB68]();
}

uint64_t VTHDRMetadataGenerationSessionCreateDataFromStatistics()
{
  return MEMORY[0x1E0CECB70]();
}

uint64_t VTImageRotationSessionCreate()
{
  return MEMORY[0x1E0CECB88]();
}

uint64_t VTImageRotationSessionInvalidate()
{
  return MEMORY[0x1E0CECB90]();
}

uint64_t VTImageRotationSessionSetProperty()
{
  return MEMORY[0x1E0CECBA0]();
}

uint64_t VTImageRotationSessionTransferImage()
{
  return MEMORY[0x1E0CECBA8]();
}

uint64_t VTImageRotationSessionTransferSubImage()
{
  return MEMORY[0x1E0CECBB0]();
}

Boolean VTIsHardwareDecodeSupported(CMVideoCodecType codecType)
{
  return MEMORY[0x1E0CECBB8](*(_QWORD *)&codecType);
}

uint64_t VTIsSecTaskEntitledForVP9Decode()
{
  return MEMORY[0x1E0CECBC0]();
}

Boolean VTIsStereoMVHEVCDecodeSupported(void)
{
  return MEMORY[0x1E0CECBC8]();
}

uint64_t VTMetalTransferSessionComposeImageWithAffineMatrix()
{
  return MEMORY[0x1E0CECBD8]();
}

uint64_t VTMetalTransferSessionCreate()
{
  return MEMORY[0x1E0CECBE0]();
}

uint64_t VTMetalTransferSessionIsPixelFormatTypeSupportedOnDestination()
{
  return MEMORY[0x1E0CECBE8]();
}

OSStatus VTMultiPassStorageCreate(CFAllocatorRef allocator, CFURLRef fileURL, CMTimeRange *timeRange, CFDictionaryRef options, VTMultiPassStorageRef *multiPassStorageOut)
{
  return MEMORY[0x1E0CECC10](allocator, fileURL, timeRange, options, multiPassStorageOut);
}

uint64_t VTParavirtualizationIsRunningInGuest()
{
  return MEMORY[0x1E0CECC40]();
}

uint64_t VTPixelBufferConformerCopyBlackPixelBuffer()
{
  return MEMORY[0x1E0CECCA8]();
}

uint64_t VTPixelBufferConformerCopyConformedPixelBuffer()
{
  return MEMORY[0x1E0CECCB0]();
}

uint64_t VTPixelBufferConformerCopyConformedTaggedBufferGroup()
{
  return MEMORY[0x1E0CECCB8]();
}

uint64_t VTPixelBufferConformerCreateWithAttributes()
{
  return MEMORY[0x1E0CECCC0]();
}

uint64_t VTPixelBufferConformerSetColorProperties()
{
  return MEMORY[0x1E0CECCD0]();
}

uint64_t VTPixelTransferSessionCanTransfer()
{
  return MEMORY[0x1E0CECD08]();
}

uint64_t VTPixelTransferSessionCanUseMetalInTheBackground()
{
  return MEMORY[0x1E0CECD10]();
}

OSStatus VTPixelTransferSessionCreate(CFAllocatorRef allocator, VTPixelTransferSessionRef *pixelTransferSessionOut)
{
  return MEMORY[0x1E0CECD18](allocator, pixelTransferSessionOut);
}

uint64_t VTPixelTransferSessionCreateScalingParameters()
{
  return MEMORY[0x1E0CECD20]();
}

void VTPixelTransferSessionInvalidate(VTPixelTransferSessionRef session)
{
  MEMORY[0x1E0CECD28](session);
}

uint64_t VTPixelTransferSessionSetProperty()
{
  return MEMORY[0x1E0CECD30]();
}

OSStatus VTPixelTransferSessionTransferImage(VTPixelTransferSessionRef session, CVPixelBufferRef sourceBuffer, CVPixelBufferRef destinationBuffer)
{
  return MEMORY[0x1E0CECD38](session, sourceBuffer, destinationBuffer);
}

uint64_t VTSelectAndCreateVideoDecoderInstance()
{
  return MEMORY[0x1E0CECD58]();
}

uint64_t VTSelectAndCreateVideoEncoderInstance()
{
  return MEMORY[0x1E0CECD60]();
}

OSStatus VTSessionCopyProperty(VTSessionRef session, CFStringRef propertyKey, CFAllocatorRef allocator, void *propertyValueOut)
{
  return MEMORY[0x1E0CECD68](session, propertyKey, allocator, propertyValueOut);
}

OSStatus VTSessionCopySupportedPropertyDictionary(VTSessionRef session, CFDictionaryRef *supportedPropertyDictionaryOut)
{
  return MEMORY[0x1E0CECD70](session, supportedPropertyDictionaryOut);
}

OSStatus VTSessionSetProperties(VTSessionRef session, CFDictionaryRef propertyDictionary)
{
  return MEMORY[0x1E0CECD78](session, propertyDictionary);
}

OSStatus VTSessionSetProperty(VTSessionRef session, CFStringRef propertyKey, CFTypeRef propertyValue)
{
  return MEMORY[0x1E0CECD80](session, propertyKey, propertyValue);
}

uint64_t VTSetCodeCoverageFilePathPattern()
{
  return MEMORY[0x1E0CECD88]();
}

uint64_t VTTemporalFilterSessionCompleteFrames()
{
  return MEMORY[0x1E0CECD90]();
}

uint64_t VTTemporalFilterSessionCreate()
{
  return MEMORY[0x1E0CECD98]();
}

uint64_t VTTemporalFilterSessionProcessFrame()
{
  return MEMORY[0x1E0CECDA8]();
}

uint64_t VTVideoCodecService_ShouldUseSeparateCodecProcessForDecode()
{
  return MEMORY[0x1E0CECE38]();
}

uint64_t VTVideoCodecService_ShouldUseSeparateCodecProcessForEncode()
{
  return MEMORY[0x1E0CECE40]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
  MEMORY[0x1E0C80940](a1, a2, *(_QWORD *)&a3);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFExecutableLinkedOnOrAfter()
{
  return MEMORY[0x1E0C9A178]();
}

uint64_t _CFMZEnabled()
{
  return MEMORY[0x1E0C9A260]();
}

uint64_t _CFNetworkCopyATSContext()
{
  return MEMORY[0x1E0C92EC8]();
}

uint64_t _CFRuntimeCreateInstance()
{
  return MEMORY[0x1E0C9A498]();
}

uint64_t _CFRuntimeRegisterClass()
{
  return MEMORY[0x1E0C9A4B0]();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x1E0C9A800]();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return MEMORY[0x1E0C9A818]();
}

uint64_t _FigIsNotCurrentDispatchQueue()
{
  return MEMORY[0x1E0CA1F48]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void std::terminate(void)
{
  MEMORY[0x1E0DE4E18]();
}

uint64_t operator delete[]()
{
  return off_1E2F73458();
}

uint64_t operator delete()
{
  return off_1E2F73460();
}

uint64_t operator new[]()
{
  return off_1E2F73468();
}

uint64_t operator new()
{
  return off_1E2F73470();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1E0DE5080](a1);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return MEMORY[0x1E0C80B50](*(_QWORD *)&a1, a2);
}

uint64_t __memcpy_chk()
{
  return MEMORY[0x1E0C80B68]();
}

int __snprintf_chk(char *a1, size_t a2, int a3, size_t a4, const char *a5, ...)
{
  return MEMORY[0x1E0C80BE0](a1, a2, *(_QWORD *)&a3, a4, a5);
}

int __sprintf_chk(char *a1, int a2, size_t a3, const char *a4, ...)
{
  return MEMORY[0x1E0C80BE8](a1, *(_QWORD *)&a2, a3, a4);
}

uint64_t __strlcat_chk()
{
  return MEMORY[0x1E0C80C40]();
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x1E0C80C48]();
}

__darwin_ct_rune_t __tolower(__darwin_ct_rune_t a1)
{
  return MEMORY[0x1E0C80C70](*(_QWORD *)&a1);
}

uint64_t _amkrtemp()
{
  return MEMORY[0x1E0C80CB8]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _os_log_send_and_compose_impl()
{
  return MEMORY[0x1E0C81068]();
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

int access(const char *a1, int a2)
{
  return MEMORY[0x1E0C813D0](a1, *(_QWORD *)&a2);
}

int aio_cancel(int fd, aiocb *aiocbp)
{
  return MEMORY[0x1E0C81520](*(_QWORD *)&fd, aiocbp);
}

int aio_error(const aiocb *aiocbp)
{
  return MEMORY[0x1E0C81528](aiocbp);
}

int aio_read(aiocb *aiocbp)
{
  return MEMORY[0x1E0C81530](aiocbp);
}

ssize_t aio_return(aiocb *aiocbp)
{
  return MEMORY[0x1E0C81538](aiocbp);
}

int aio_suspend(const aiocb *const aiocblist[], int nent, const timespec *timeoutp)
{
  return MEMORY[0x1E0C81540](aiocblist, *(_QWORD *)&nent, timeoutp);
}

int aio_write(aiocb *aiocbp)
{
  return MEMORY[0x1E0C81548](aiocbp);
}

uint32_t arc4random(void)
{
  return MEMORY[0x1E0C81570]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

int asprintf(char **a1, const char *a2, ...)
{
  return MEMORY[0x1E0C81608](a1, a2);
}

long double atan2(long double __y, long double __x)
{
  long double result;

  MEMORY[0x1E0C81620](__y, __x);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

int closedir(DIR *a1)
{
  return MEMORY[0x1E0C82698](a1);
}

uint64_t ct_green_tea_logger_create()
{
  return MEMORY[0x1E0DDFE88]();
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x1E0C82BC0](object);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_after_f(dispatch_time_t when, dispatch_queue_t queue, void *context, dispatch_function_t work)
{
  MEMORY[0x1E0C82BD0](when, queue, context, work);
}

void dispatch_apply(size_t iterations, dispatch_queue_t queue, void *block)
{
  MEMORY[0x1E0C82BD8](iterations, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_async_f(dispatch_queue_t queue, void *context, dispatch_function_t work)
{
  MEMORY[0x1E0C82C18](queue, context, work);
}

void dispatch_barrier_sync_f(dispatch_queue_t queue, void *context, dispatch_function_t work)
{
  MEMORY[0x1E0C82C50](queue, context, work);
}

dispatch_data_t dispatch_data_create(const void *buffer, size_t size, dispatch_queue_t queue, dispatch_block_t destructor)
{
  return (dispatch_data_t)MEMORY[0x1E0C82CB0](buffer, size, queue, destructor);
}

void *__cdecl dispatch_get_context(dispatch_object_t object)
{
  return (void *)MEMORY[0x1E0C82CF0](object);
}

dispatch_queue_t dispatch_get_current_queue(void)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82CF8]();
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D10](group, queue, block);
}

void dispatch_group_async_f(dispatch_group_t group, dispatch_queue_t queue, void *context, dispatch_function_t work)
{
  MEMORY[0x1E0C82D18](group, queue, context, work);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify_f(dispatch_group_t group, dispatch_queue_t queue, void *context, dispatch_function_t work)
{
  MEMORY[0x1E0C82D40](group, queue, context, work);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
  MEMORY[0x1E0C82E10](predicate, context, function);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E50](label, attr, target);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return (const char *)MEMORY[0x1E0C82E58](queue);
}

void dispatch_release(dispatch_object_t object)
{
  MEMORY[0x1E0C82E98](object);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

void dispatch_retain(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA8](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_set_context(dispatch_object_t object, void *context)
{
  MEMORY[0x1E0C82EE0](object, context);
}

void dispatch_set_finalizer_f(dispatch_object_t object, dispatch_function_t finalizer)
{
  MEMORY[0x1E0C82EE8](object, finalizer);
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
  MEMORY[0x1E0C82F08](object, queue);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

uintptr_t dispatch_source_get_data(dispatch_source_t source)
{
  return MEMORY[0x1E0C82F28](source);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F48](source, handler);
}

void dispatch_source_set_cancel_handler_f(dispatch_source_t source, dispatch_function_t handler)
{
  MEMORY[0x1E0C82F50](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_event_handler_f(dispatch_source_t source, dispatch_function_t handler)
{
  MEMORY[0x1E0C82F60](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

intptr_t dispatch_source_testcancel(dispatch_source_t source)
{
  return MEMORY[0x1E0C82F80](source);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x1E0C82F88](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

void dispatch_sync_f(dispatch_queue_t queue, void *context, dispatch_function_t work)
{
  MEMORY[0x1E0C82FA0](queue, context, work);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return MEMORY[0x1E0C82FC8](when, delta);
}

int dladdr(const void *a1, Dl_info *a2)
{
  return MEMORY[0x1E0C83028](a1, a2);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1E0C83158]();
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x1E0C83280](__x);
  return result;
}

float exp2f(float a1)
{
  float result;

  MEMORY[0x1E0C83290](a1);
  return result;
}

int fclose(FILE *a1)
{
  return MEMORY[0x1E0C832F8](a1);
}

int fcntl(int a1, int a2, ...)
{
  return MEMORY[0x1E0C83300](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

ssize_t fgetxattr(int fd, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C833A8](*(_QWORD *)&fd, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

uint64_t fig_gm_ktrace_wrapper()
{
  return MEMORY[0x1E0CA1F50]();
}

uint64_t fig_log()
{
  return MEMORY[0x1E0CA1F58]();
}

uint64_t fig_log_call_emit_and_clean_up_after_send_and_compose()
{
  return MEMORY[0x1E0CA1F60]();
}

uint64_t fig_log_emitter_get_os_log_and_send_and_compose_flags_and_os_log_type()
{
  return MEMORY[0x1E0CA1F68]();
}

uint64_t fig_log_handle()
{
  return MEMORY[0x1E0CA1F78]();
}

uint64_t fig_note_initialize_category_with_default_work_cf()
{
  return MEMORY[0x1E0CA1F88]();
}

uint64_t fig_post_a_symptom_guts()
{
  return MEMORY[0x1E0CA1F98]();
}

int fileno(FILE *a1)
{
  return MEMORY[0x1E0C833B0](a1);
}

int flock(int a1, int a2)
{
  return MEMORY[0x1E0C83400](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x1E0C83460](__filename, __mode);
}

uint64_t fpServer_CreateRPCTimeoutThread()
{
  return MEMORY[0x1E0CA1FA0]();
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x1E0C83478](a1, a2);
}

int fputc(int a1, FILE *a2)
{
  return MEMORY[0x1E0C83488](*(_QWORD *)&a1, a2);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1E0C834A0](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void freeifaddrs(ifaddrs *a1)
{
  MEMORY[0x1E0C834D0](a1);
}

int fremovexattr(int fd, const char *name, int options)
{
  return MEMORY[0x1E0C834E0](*(_QWORD *)&fd, name, *(_QWORD *)&options);
}

int fseeko(FILE *__stream, off_t a2, int __whence)
{
  return MEMORY[0x1E0C83538](__stream, a2, *(_QWORD *)&__whence);
}

int fsetxattr(int fd, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C83548](*(_QWORD *)&fd, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x1E0C83560](*(_QWORD *)&a1, a2);
}

int ftruncate(int a1, off_t a2)
{
  return MEMORY[0x1E0C83590](*(_QWORD *)&a1, a2);
}

int fts_close(FTS *a1)
{
  return MEMORY[0x1E0C835A0](a1);
}

FTS *__cdecl fts_open(char *const *a1, int a2, int (__cdecl *a3)(const FTSENT **, const FTSENT **))
{
  return (FTS *)MEMORY[0x1E0C835A8](a1, *(_QWORD *)&a2, a3);
}

FTSENT *__cdecl fts_read(FTS *a1)
{
  return (FTSENT *)MEMORY[0x1E0C835B0](a1);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1E0C835E0](__ptr, __size, __nitems, __stream);
}

uint64_t getCTGreenTeaOsLogHandle()
{
  return MEMORY[0x1E0DDFEA8]();
}

int getattrlist(const char *a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x1E0C83610](a1, a2, a3, a4, *(_QWORD *)&a5);
}

int getc(FILE *a1)
{
  return MEMORY[0x1E0C83638](a1);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1E0C83660](a1);
}

int getifaddrs(ifaddrs **a1)
{
  return MEMORY[0x1E0C836C8](a1);
}

int getnameinfo(const sockaddr *a1, socklen_t a2, char *a3, socklen_t a4, char *a5, socklen_t a6, int a7)
{
  return MEMORY[0x1E0C83708](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5, *(_QWORD *)&a6, *(_QWORD *)&a7);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x1E0C83778]();
}

passwd *__cdecl getpwuid(uid_t a1)
{
  return (passwd *)MEMORY[0x1E0C837A0](*(_QWORD *)&a1);
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x1E0C83820](a1, a2);
}

uid_t getuid(void)
{
  return MEMORY[0x1E0C83828]();
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C83840](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

void glActiveTexture(GLenum texture)
{
  MEMORY[0x1E0CD0960](*(_QWORD *)&texture);
}

void glAttachShader(GLuint program, GLuint shader)
{
  MEMORY[0x1E0CD0968](*(_QWORD *)&program, *(_QWORD *)&shader);
}

void glBindFramebuffer(GLenum target, GLuint framebuffer)
{
  MEMORY[0x1E0CD0980](*(_QWORD *)&target, *(_QWORD *)&framebuffer);
}

void glBindTexture(GLenum target, GLuint texture)
{
  MEMORY[0x1E0CD0990](*(_QWORD *)&target, *(_QWORD *)&texture);
}

void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
  MEMORY[0x1E0CD09A0](red, green, blue, alpha);
}

void glBlendEquation(GLenum mode)
{
  MEMORY[0x1E0CD09A8](*(_QWORD *)&mode);
}

void glBlendFunc(GLenum sfactor, GLenum dfactor)
{
  MEMORY[0x1E0CD09B8](*(_QWORD *)&sfactor, *(_QWORD *)&dfactor);
}

void glBlendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
{
  MEMORY[0x1E0CD09C0](*(_QWORD *)&srcRGB, *(_QWORD *)&dstRGB, *(_QWORD *)&srcAlpha, *(_QWORD *)&dstAlpha);
}

GLenum glCheckFramebufferStatus(GLenum target)
{
  return MEMORY[0x1E0CD09D8](*(_QWORD *)&target);
}

void glClear(GLbitfield mask)
{
  MEMORY[0x1E0CD09E0](*(_QWORD *)&mask);
}

void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
  MEMORY[0x1E0CD09E8](red, green, blue, alpha);
}

void glCompileShader(GLuint shader)
{
  MEMORY[0x1E0CD0A08](*(_QWORD *)&shader);
}

GLuint glCreateProgram(void)
{
  return MEMORY[0x1E0CD0A18]();
}

GLuint glCreateShader(GLenum type)
{
  return MEMORY[0x1E0CD0A20](*(_QWORD *)&type);
}

void glDeleteFramebuffers(GLsizei n, const GLuint *framebuffers)
{
  MEMORY[0x1E0CD0A38](*(_QWORD *)&n, framebuffers);
}

void glDeleteProgram(GLuint program)
{
  MEMORY[0x1E0CD0A40](*(_QWORD *)&program);
}

void glDeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers)
{
  MEMORY[0x1E0CD0A48](*(_QWORD *)&n, renderbuffers);
}

void glDeleteShader(GLuint shader)
{
  MEMORY[0x1E0CD0A50](*(_QWORD *)&shader);
}

void glDeleteTextures(GLsizei n, const GLuint *textures)
{
  MEMORY[0x1E0CD0A60](*(_QWORD *)&n, textures);
}

void glDisable(GLenum cap)
{
  MEMORY[0x1E0CD0A88](*(_QWORD *)&cap);
}

void glDrawArrays(GLenum mode, GLint first, GLsizei count)
{
  MEMORY[0x1E0CD0AA0](*(_QWORD *)&mode, *(_QWORD *)&first, *(_QWORD *)&count);
}

void glEnable(GLenum cap)
{
  MEMORY[0x1E0CD0AB8](*(_QWORD *)&cap);
}

void glEnableVertexAttribArray(GLuint index)
{
  MEMORY[0x1E0CD0AC0](*(_QWORD *)&index);
}

void glFinish(void)
{
  MEMORY[0x1E0CD0AD0]();
}

void glFlush(void)
{
  MEMORY[0x1E0CD0AD8]();
}

void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
  MEMORY[0x1E0CD0AF0](*(_QWORD *)&target, *(_QWORD *)&attachment, *(_QWORD *)&textarget, *(_QWORD *)&texture, *(_QWORD *)&level);
}

void glGenFramebuffers(GLsizei n, GLuint *framebuffers)
{
  MEMORY[0x1E0CD0B08](*(_QWORD *)&n, framebuffers);
}

void glGenRenderbuffers(GLsizei n, GLuint *renderbuffers)
{
  MEMORY[0x1E0CD0B10](*(_QWORD *)&n, renderbuffers);
}

void glGenTextures(GLsizei n, GLuint *textures)
{
  MEMORY[0x1E0CD0B18](*(_QWORD *)&n, textures);
}

int glGetAttribLocation(GLuint program, const GLchar *name)
{
  return MEMORY[0x1E0CD0B48](*(_QWORD *)&program, name);
}

void glGetProgramiv(GLuint program, GLenum pname, GLint *params)
{
  MEMORY[0x1E0CD0B78](*(_QWORD *)&program, *(_QWORD *)&pname, params);
}

void glGetShaderiv(GLuint shader, GLenum pname, GLint *params)
{
  MEMORY[0x1E0CD0B98](*(_QWORD *)&shader, *(_QWORD *)&pname, params);
}

const GLubyte *__cdecl glGetString(GLenum name)
{
  return (const GLubyte *)MEMORY[0x1E0CD0BA0](*(_QWORD *)&name);
}

int glGetUniformLocation(GLuint program, const GLchar *name)
{
  return MEMORY[0x1E0CD0BA8](*(_QWORD *)&program, name);
}

void glLinkProgram(GLuint program)
{
  MEMORY[0x1E0CD0BD0](*(_QWORD *)&program);
}

void glScissor(GLint x, GLint y, GLsizei width, GLsizei height)
{
  MEMORY[0x1E0CD0C20](*(_QWORD *)&x, *(_QWORD *)&y, *(_QWORD *)&width, *(_QWORD *)&height);
}

void glShaderSource(GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length)
{
  MEMORY[0x1E0CD0C28](*(_QWORD *)&shader, *(_QWORD *)&count, string, length);
}

void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  MEMORY[0x1E0CD0C50](*(_QWORD *)&target, *(_QWORD *)&level, *(_QWORD *)&internalformat, *(_QWORD *)&width, *(_QWORD *)&height, *(_QWORD *)&border, *(_QWORD *)&format, *(_QWORD *)&type);
}

void glTexParameteri(GLenum target, GLenum pname, GLint param)
{
  MEMORY[0x1E0CD0C60](*(_QWORD *)&target, *(_QWORD *)&pname, *(_QWORD *)&param);
}

void glUniform1f(GLint location, GLfloat x)
{
  MEMORY[0x1E0CD0C70](*(_QWORD *)&location, x);
}

void glUniform1i(GLint location, GLint x)
{
  MEMORY[0x1E0CD0C80](*(_QWORD *)&location, *(_QWORD *)&x);
}

void glUniform2f(GLint location, GLfloat x, GLfloat y)
{
  MEMORY[0x1E0CD0C88](*(_QWORD *)&location, x, y);
}

void glUniformMatrix3fv(GLint location, GLsizei count, GLBOOLean transpose, const GLfloat *value)
{
  MEMORY[0x1E0CD0CD0](*(_QWORD *)&location, *(_QWORD *)&count, transpose, value);
}

void glUniformMatrix4fv(GLint location, GLsizei count, GLBOOLean transpose, const GLfloat *value)
{
  MEMORY[0x1E0CD0CD8](*(_QWORD *)&location, *(_QWORD *)&count, transpose, value);
}

void glUseProgram(GLuint program)
{
  MEMORY[0x1E0CD0CE8](*(_QWORD *)&program);
}

void glVertexAttribPointer(GLuint indx, GLint size, GLenum type, GLBOOLean normalized, GLsizei stride, const GLvoid *ptr)
{
  MEMORY[0x1E0CD0D08](*(_QWORD *)&indx, *(_QWORD *)&size, *(_QWORD *)&type, normalized, *(_QWORD *)&stride, ptr);
}

void glViewport(GLint x, GLint y, GLsizei width, GLsizei height)
{
  MEMORY[0x1E0CD0D10](*(_QWORD *)&x, *(_QWORD *)&y, *(_QWORD *)&width, *(_QWORD *)&height);
}

kern_return_t host_statistics(host_t host_priv, host_flavor_t flavor, host_info_t host_info_out, mach_msg_type_number_t *host_info_outCnt)
{
  return MEMORY[0x1E0C838D8](*(_QWORD *)&host_priv, *(_QWORD *)&flavor, host_info_out, host_info_outCnt);
}

unsigned int if_nametoindex(const char *a1)
{
  return MEMORY[0x1E0C83910](a1);
}

uint64_t in_audio_mx_server_process()
{
  return MEMORY[0x1E0C924F8]();
}

const char *__cdecl inet_ntop(int a1, const void *a2, char *a3, socklen_t a4)
{
  return (const char *)MEMORY[0x1E0C83968](*(_QWORD *)&a1, a2, a3, *(_QWORD *)&a4);
}

int ioctl(int a1, unint64_t a2, ...)
{
  return MEMORY[0x1E0C83980](*(_QWORD *)&a1, a2);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1E0C83A20]();
}

uint64_t kpersona_info()
{
  return MEMORY[0x1E0C83A60]();
}

tm *__cdecl localtime_r(const time_t *a1, tm *a2)
{
  return (tm *)MEMORY[0x1E0C83BB0](a1, a2);
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BB8](__x);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1E0C83C50]();
}

mach_port_t mach_host_self(void)
{
  return MEMORY[0x1E0C83C90]();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x1E0C83CB0](msg, *(_QWORD *)&option, *(_QWORD *)&send_size, *(_QWORD *)&rcv_size, *(_QWORD *)&rcv_name, *(_QWORD *)&timeout, *(_QWORD *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
  MEMORY[0x1E0C83CC0](a1);
}

kern_return_t mach_port_deallocate(ipc_space_t task, mach_port_name_t name)
{
  return MEMORY[0x1E0C83CF8](*(_QWORD *)&task, *(_QWORD *)&name);
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x1E0C83DB8](info);
}

malloc_zone_t *__cdecl malloc_create_zone(vm_size_t start_size, unsigned int flags)
{
  return (malloc_zone_t *)MEMORY[0x1E0C83E78](start_size, *(_QWORD *)&flags);
}

malloc_zone_t *malloc_default_zone(void)
{
  return (malloc_zone_t *)MEMORY[0x1E0C83E88]();
}

void malloc_set_zone_name(malloc_zone_t *zone, const char *name)
{
  MEMORY[0x1E0C83ED8](zone, name);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F10](ptr, size, type_id);
}

void *__cdecl malloc_type_zone_calloc(malloc_zone_t *zone, size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F20](zone, count, size, type_id);
}

void *__cdecl malloc_type_zone_malloc(malloc_zone_t *zone, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F28](zone, size, type_id);
}

void *__cdecl malloc_type_zone_realloc(malloc_zone_t *zone, void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F40](zone, ptr, size, type_id);
}

void malloc_zone_free(malloc_zone_t *zone, void *ptr)
{
  MEMORY[0x1E0C83F70](zone, ptr);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return (void *)MEMORY[0x1E0C84070](__s, *(_QWORD *)&__c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x1E0C840B0](__b, *(_QWORD *)&__c, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
  MEMORY[0x1E0C840B8](__b, __pattern16, __len);
}

void memset_pattern4(void *__b, const void *__pattern4, size_t __len)
{
  MEMORY[0x1E0C840C0](__b, __pattern4, __len);
}

void memset_pattern8(void *__b, const void *__pattern8, size_t __len)
{
  MEMORY[0x1E0C840C8](__b, __pattern8, __len);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
  MEMORY[0x1E0C840E8](*(_QWORD *)&reply_port);
}

uint64_t mig_dealloc_special_reply_port()
{
  return MEMORY[0x1E0C840F0]();
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x1E0C84100]();
}

uint64_t mig_get_special_reply_port()
{
  return MEMORY[0x1E0C84108]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
  MEMORY[0x1E0C84110](*(_QWORD *)&reply_port);
}

int mig_strncpy(char *dest, const char *src, int len)
{
  return MEMORY[0x1E0C84120](dest, src, *(_QWORD *)&len);
}

int mig_strncpy_zerofill(char *dest, const char *src, int len)
{
  return MEMORY[0x1E0C84128](dest, src, *(_QWORD *)&len);
}

char *__cdecl mkdtemp(char *a1)
{
  return (char *)MEMORY[0x1E0C84170](a1);
}

int mkstemp(char *a1)
{
  return MEMORY[0x1E0C841A0](a1);
}

float modff(float a1, float *a2)
{
  float result;

  MEMORY[0x1E0C841E8](a2, a1);
  return result;
}

uint64_t network_release()
{
  return MEMORY[0x1E0CCEDD8]();
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_check(int token, int *check)
{
  return MEMORY[0x1E0C843E0](*(_QWORD *)&token, check);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

BOOL notify_is_valid_token(int val)
{
  return MEMORY[0x1E0C843F0](*(_QWORD *)&val);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1E0C84400](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x1E0C84428](*(_QWORD *)&token, state64);
}

uint64_t nw_activity_activate()
{
  return MEMORY[0x1E0CCEDE0]();
}

uint64_t nw_activity_complete_with_reason()
{
  return MEMORY[0x1E0CCEDE8]();
}

uint64_t nw_activity_create()
{
  return MEMORY[0x1E0CCEE00]();
}

uint64_t nw_activity_create_from_token()
{
  return MEMORY[0x1E0CCEE08]();
}

uint64_t nw_activity_get_token()
{
  return MEMORY[0x1E0CCEE28]();
}

uint64_t nw_activity_set_parent_activity()
{
  return MEMORY[0x1E0CCEE50]();
}

uint64_t nw_activity_submit_metrics()
{
  return MEMORY[0x1E0CCEE68]();
}

void nw_connection_cancel(nw_connection_t connection)
{
  MEMORY[0x1E0CCEFB8](connection);
}

nw_connection_t nw_connection_create(nw_endpoint_t endpoint, nw_parameters_t parameters)
{
  return (nw_connection_t)MEMORY[0x1E0CCF030](endpoint, parameters);
}

void nw_connection_set_queue(nw_connection_t connection, dispatch_queue_t queue)
{
  MEMORY[0x1E0CCF1B0](connection, queue);
}

void nw_connection_set_state_changed_handler(nw_connection_t connection, nw_connection_state_changed_handler_t handler)
{
  MEMORY[0x1E0CCF1C0](connection, handler);
}

void nw_connection_start(nw_connection_t connection)
{
  MEMORY[0x1E0CCF1D8](connection);
}

uint32_t nw_data_transfer_report_get_path_count(nw_data_transfer_report_t report)
{
  return MEMORY[0x1E0CCF308](report);
}

nw_interface_radio_type_t nw_data_transfer_report_get_path_radio_type(nw_data_transfer_report_t report, uint32_t path_index)
{
  return MEMORY[0x1E0CCF310](report, *(_QWORD *)&path_index);
}

uint64_t nw_data_transfer_report_get_received_application_byte_count(nw_data_transfer_report_t report, uint32_t path_index)
{
  return MEMORY[0x1E0CCF318](report, *(_QWORD *)&path_index);
}

nw_endpoint_t nw_endpoint_create_host(const char *hostname, const char *port)
{
  return (nw_endpoint_t)MEMORY[0x1E0CCF3B0](hostname, port);
}

uint64_t nw_endpoint_create_host_with_numeric_port()
{
  return MEMORY[0x1E0CCF3B8]();
}

CFErrorRef nw_error_copy_cf_error(nw_error_t error)
{
  return (CFErrorRef)MEMORY[0x1E0CCF458](error);
}

int nw_error_get_error_code(nw_error_t error)
{
  return MEMORY[0x1E0CCF468](error);
}

nw_error_domain_t nw_error_get_error_domain(nw_error_t error)
{
  return MEMORY[0x1E0CCF470](error);
}

uint64_t nw_establishment_report_get_accurate_ecn_state()
{
  return MEMORY[0x1E0CCF4A8]();
}

uint64_t nw_interface_create_with_name()
{
  return MEMORY[0x1E0CCF6F8]();
}

uint64_t nw_interface_get_subtype()
{
  return MEMORY[0x1E0CCF720]();
}

nw_interface_type_t nw_interface_get_type(nw_interface_t interface)
{
  return MEMORY[0x1E0CCF728](interface);
}

nw_parameters_t nw_parameters_create(void)
{
  return (nw_parameters_t)MEMORY[0x1E0CCF930]();
}

nw_parameters_t nw_parameters_create_secure_tcp(nw_parameters_configure_protocol_block_t configure_tls, nw_parameters_configure_protocol_block_t configure_tcp)
{
  return (nw_parameters_t)MEMORY[0x1E0CCF980](configure_tls, configure_tcp);
}

void nw_parameters_prohibit_interface_type(nw_parameters_t parameters, nw_interface_type_t interface_type)
{
  MEMORY[0x1E0CCFA38](parameters, *(_QWORD *)&interface_type);
}

void nw_parameters_require_interface(nw_parameters_t parameters, nw_interface_t interface)
{
  MEMORY[0x1E0CCFA48](parameters, interface);
}

uint64_t nw_parameters_set_source_application()
{
  return MEMORY[0x1E0CCFC38]();
}

uint64_t nw_parameters_set_source_application_by_bundle_id()
{
  return MEMORY[0x1E0CCFC40]();
}

uint64_t nw_path_copy_interface()
{
  return MEMORY[0x1E0CCFCD0]();
}

uint64_t nw_path_create_default_evaluator()
{
  return MEMORY[0x1E0CCFD00]();
}

uint64_t nw_path_create_evaluator_for_endpoint()
{
  return MEMORY[0x1E0CCFD10]();
}

uint64_t nw_path_evaluator_cancel()
{
  return MEMORY[0x1E0CCFD20]();
}

uint64_t nw_path_evaluator_copy_path()
{
  return MEMORY[0x1E0CCFD38]();
}

uint64_t nw_path_evaluator_set_cancel_handler()
{
  return MEMORY[0x1E0CCFD48]();
}

uint64_t nw_path_evaluator_set_update_handler()
{
  return MEMORY[0x1E0CCFD58]();
}

uint64_t nw_path_get_estimated_download_throughput()
{
  return MEMORY[0x1E0CCFD78]();
}

nw_path_status_t nw_path_get_status(nw_path_t path)
{
  return MEMORY[0x1E0CCFDE0](path);
}

BOOL nw_path_is_expensive(nw_path_t path)
{
  return MEMORY[0x1E0CCFE20](path);
}

uint64_t nw_path_is_local()
{
  return MEMORY[0x1E0CCFE30]();
}

BOOL nw_path_uses_interface_type(nw_path_t path, nw_interface_type_t interface_type)
{
  return MEMORY[0x1E0CCFE88](path, *(_QWORD *)&interface_type);
}

void nw_release(void *obj)
{
  MEMORY[0x1E0CD0248](obj);
}

void *__cdecl nw_retain(void *obj)
{
  return (void *)MEMORY[0x1E0CD0318](obj);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_loadWeak(id *location)
{
  return (id)MEMORY[0x1E0DE7D00](location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

DIR *__cdecl opendir(const char *a1)
{
  return (DIR *)MEMORY[0x1E0C844C0](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_release(void *object)
{
  MEMORY[0x1E0C84910](object);
}

void *__cdecl os_retain(void *object)
{
  return (void *)MEMORY[0x1E0C84918](object);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x1E0C849D8]();
}

uint64_t os_workgroup_attr_set_flags()
{
  return MEMORY[0x1E0C84A20]();
}

uint64_t os_workgroup_create()
{
  return MEMORY[0x1E0C84A48]();
}

int os_workgroup_join(os_workgroup_t wg, os_workgroup_join_token_t token_out)
{
  return MEMORY[0x1E0C84AA0](wg, token_out);
}

void os_workgroup_leave(os_workgroup_t wg, os_workgroup_join_token_t token)
{
  MEMORY[0x1E0C84AA8](wg, token);
}

float powf(float a1, float a2)
{
  float result;

  MEMORY[0x1E0C84BC0](a1, a2);
  return result;
}

ssize_t pread(int __fd, void *__buf, size_t __nbyte, off_t a4)
{
  return MEMORY[0x1E0C84BC8](*(_QWORD *)&__fd, __buf, __nbyte, a4);
}

int printf(const char *a1, ...)
{
  return MEMORY[0x1E0C84BD0](a1);
}

uint64_t proc_disable_cpumon()
{
  return MEMORY[0x1E0C84BE0]();
}

int proc_name(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x1E0C84C20](*(_QWORD *)&pid, buffer, *(_QWORD *)&buffersize);
}

int proc_pid_rusage(int pid, int flavor, rusage_info_t *buffer)
{
  return MEMORY[0x1E0C84C28](*(_QWORD *)&pid, *(_QWORD *)&flavor, buffer);
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x1E0C84C50](*(_QWORD *)&pid, buffer, *(_QWORD *)&buffersize);
}

int pthread_main_np(void)
{
  return MEMORY[0x1E0C84E08]();
}

int pthread_rwlock_init(pthread_rwlock_t *a1, const pthread_rwlockattr_t *a2)
{
  return MEMORY[0x1E0C84E98](a1, a2);
}

int pthread_rwlock_rdlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1E0C84EA0](a1);
}

int pthread_rwlock_unlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1E0C84EB8](a1);
}

int pthread_rwlock_wrlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1E0C84EC0](a1);
}

int putchar(int a1)
{
  return MEMORY[0x1E0C84F50](*(_QWORD *)&a1);
}

int puts(const char *a1)
{
  return MEMORY[0x1E0C84F60](a1);
}

void qsort(void *__base, size_t __nel, size_t __width, int (__cdecl *__compar)(const void *, const void *))
{
  MEMORY[0x1E0C84F88](__base, __nel, __width, __compar);
}

void qsort_r(void *__base, size_t __nel, size_t __width, void *a4, int (__cdecl *__compar)(void *, const void *, const void *))
{
  MEMORY[0x1E0C84F98](__base, __nel, __width, a4, __compar);
}

int rand(void)
{
  return MEMORY[0x1E0C84FB0]();
}

uint64_t random(void)
{
  return MEMORY[0x1E0C84FC0]();
}

dirent *__cdecl readdir(DIR *a1)
{
  return (dirent *)MEMORY[0x1E0C85008](a1);
}

int removefile(const char *path, removefile_state_t state, removefile_flags_t flags)
{
  return MEMORY[0x1E0C850C0](path, state, *(_QWORD *)&flags);
}

int setvbuf(FILE *a1, char *a2, int a3, size_t a4)
{
  return MEMORY[0x1E0C85398](a1, a2, *(_QWORD *)&a3, a4);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C853A0](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return (void (__cdecl *)(int))MEMORY[0x1E0C853F0](*(_QWORD *)&a1, a2);
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1E0C85438](*(_QWORD *)&a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x1E0C85440](__str, __size, __format);
}

int socket(int a1, int a2, int a3)
{
  return MEMORY[0x1E0C85450](*(_QWORD *)&a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x1E0C85498](a1, a2);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x1E0C854D8](a1, a2);
}

int strcasecmp(const char *a1, const char *a2)
{
  return MEMORY[0x1E0C85500](a1, a2);
}

char *__cdecl strcasestr(const char *__big, const char *__little)
{
  return (char *)MEMORY[0x1E0C85508](__big, __little);
}

char *__cdecl strchr(char *__s, int __c)
{
  return (char *)MEMORY[0x1E0C85518](__s, *(_QWORD *)&__c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

size_t strcspn(const char *__s, const char *__charset)
{
  return MEMORY[0x1E0C85538](__s, __charset);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

size_t strftime(char *a1, size_t a2, const char *a3, const tm *a4)
{
  return MEMORY[0x1E0C85558](a1, a2, a3, a4);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

int strncasecmp(const char *a1, const char *a2, size_t a3)
{
  return MEMORY[0x1E0C85590](a1, a2, a3);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1E0C855A8](__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x1E0C855B0](__dst, __src, __n);
}

size_t strnlen(const char *__s1, size_t __n)
{
  return MEMORY[0x1E0C855C0](__s1, __n);
}

char *__cdecl strnstr(const char *__big, const char *__little, size_t __len)
{
  return (char *)MEMORY[0x1E0C855C8](__big, __little, __len);
}

char *__cdecl strpbrk(char *__s1, const char *__s2)
{
  return (char *)MEMORY[0x1E0C855D0](__s1, __s2);
}

char *__cdecl strrchr(char *__s, int __c)
{
  return (char *)MEMORY[0x1E0C855E8](__s, *(_QWORD *)&__c);
}

char *__cdecl strsep(char **__stringp, const char *__delim)
{
  return (char *)MEMORY[0x1E0C855F0](__stringp, __delim);
}

size_t strspn(const char *__s, const char *__charset)
{
  return MEMORY[0x1E0C85608](__s, __charset);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return (char *)MEMORY[0x1E0C85610](__s1, __s2);
}

double strtod_l(const char *a1, char **a2, locale_t a3)
{
  double result;

  MEMORY[0x1E0C85620](a1, a2, a3);
  return result;
}

float strtof(const char *a1, char **a2)
{
  float result;

  MEMORY[0x1E0C85628](a1, a2);
  return result;
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C85658](__str, __endptr, *(_QWORD *)&__base);
}

uint64_t strtoll(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C85678](__str, __endptr, *(_QWORD *)&__base);
}

uint64_t strtonum(const char *__numstr, uint64_t __minval, uint64_t __maxval, const char **__errstrp)
{
  return MEMORY[0x1E0C85688](__numstr, __minval, __maxval, __errstrp);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C85698](__str, __endptr, *(_QWORD *)&__base);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C856A8](__str, __endptr, *(_QWORD *)&__base);
}

uint64_t symptom_send()
{
  return MEMORY[0x1E0C85738]();
}

uint64_t symptom_set_additional_qualifier()
{
  return MEMORY[0x1E0C85748]();
}

uint64_t symptom_set_qualifier()
{
  return MEMORY[0x1E0C85750]();
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return MEMORY[0x1E0C85798](a1, *(_QWORD *)&a2, a3, a4, a5, a6);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1E0C857A0](a1, a2, a3, a4, a5);
}

long double tan(long double __x)
{
  long double result;

  MEMORY[0x1E0C857E8](__x);
  return result;
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return MEMORY[0x1E0C85838](*(_QWORD *)&target_task, *(_QWORD *)&flavor, task_info_out, task_info_outCnt);
}

time_t time(time_t *a1)
{
  return MEMORY[0x1E0C85950](a1);
}

int ungetc(int a1, FILE *a2)
{
  return MEMORY[0x1E0C859A8](*(_QWORD *)&a1, a2);
}

int unlink(const char *a1)
{
  return MEMORY[0x1E0C859B8](a1);
}

int usleep(useconds_t a1)
{
  return MEMORY[0x1E0C859E0](*(_QWORD *)&a1);
}

void uuid_clear(uuid_t uu)
{
  MEMORY[0x1E0C85A00](uu);
}

void uuid_generate(uuid_t out)
{
  MEMORY[0x1E0C85A18](out);
}

void uuid_generate_random(uuid_t out)
{
  MEMORY[0x1E0C85A20](out);
}

int uuid_is_null(const uuid_t uu)
{
  return MEMORY[0x1E0C85A30](uu);
}

void uuid_unparse(const uuid_t uu, uuid_string_t out)
{
  MEMORY[0x1E0C85A40](uu, out);
}

void uuid_unparse_upper(const uuid_t uu, uuid_string_t out)
{
  MEMORY[0x1E0C85A50](uu, out);
}

vImage_Error vImageAffineWarp_ARGB16U(const vImage_Buffer *src, const vImage_Buffer *dest, void *tempBuffer, const vImage_AffineTransform *transform, const Pixel_ARGB_16U backColor, vImage_Flags flags)
{
  return MEMORY[0x1E0C8CB70](src, dest, tempBuffer, transform, backColor, *(_QWORD *)&flags);
}

vImage_Error vImageAffineWarp_ARGB8888(const vImage_Buffer *src, const vImage_Buffer *dest, void *tempBuffer, const vImage_AffineTransform *transform, const Pixel_8888 backColor, vImage_Flags flags)
{
  return MEMORY[0x1E0C8CB78](src, dest, tempBuffer, transform, backColor, *(_QWORD *)&flags);
}

vImage_Error vImageBufferFill_ARGB16U(const vImage_Buffer *dest, const Pixel_ARGB_16U color, vImage_Flags flags)
{
  return MEMORY[0x1E0C8CBD0](dest, color, *(_QWORD *)&flags);
}

vImage_Error vImageBufferFill_ARGB8888(const vImage_Buffer *dest, const Pixel_8888 color, vImage_Flags flags)
{
  return MEMORY[0x1E0C8CBD8](dest, color, *(_QWORD *)&flags);
}

vImage_Error vImageBuffer_CopyToCVPixelBuffer(const vImage_Buffer *buffer, const vImage_CGImageFormat *bufferFormat, CVPixelBufferRef cvPixelBuffer, vImageCVImageFormatRef cvImageFormat, const CGFloat *backgroundColor, vImage_Flags flags)
{
  return MEMORY[0x1E0C8CBF0](buffer, bufferFormat, cvPixelBuffer, cvImageFormat, backgroundColor, *(_QWORD *)&flags);
}

vImage_Error vImageBuffer_Init(vImage_Buffer *buf, vImagePixelCount height, vImagePixelCount width, uint32_t pixelBits, vImage_Flags flags)
{
  return MEMORY[0x1E0C8CC00](buf, height, width, *(_QWORD *)&pixelBits, *(_QWORD *)&flags);
}

vImage_Error vImageBuffer_InitWithCVPixelBuffer(vImage_Buffer *buffer, vImage_CGImageFormat *desiredFormat, CVPixelBufferRef cvPixelBuffer, vImageCVImageFormatRef cvImageFormat, const CGFloat *backgroundColor, vImage_Flags flags)
{
  return MEMORY[0x1E0C8CC30](buffer, desiredFormat, cvPixelBuffer, cvImageFormat, backgroundColor, *(_QWORD *)&flags);
}

vImageCVImageFormatRef vImageCVImageFormat_Create(uint32_t imageFormatType, const vImage_ARGBToYpCbCrMatrix *matrix, CFStringRef cvImageBufferChromaLocation, CGColorSpaceRef baseColorspace, int alphaIsOneHint)
{
  return (vImageCVImageFormatRef)MEMORY[0x1E0C8CC88](*(_QWORD *)&imageFormatType, matrix, cvImageBufferChromaLocation, baseColorspace, *(_QWORD *)&alphaIsOneHint);
}

void vImageCVImageFormat_Release(vImageCVImageFormatRef fmt)
{
  MEMORY[0x1E0C8CCD0](fmt);
}

vImage_Error vImagePremultipliedConstAlphaBlend_ARGB8888(const vImage_Buffer *srcTop, Pixel_8 constAlpha, const vImage_Buffer *srcBottom, const vImage_Buffer *dest, vImage_Flags flags)
{
  return MEMORY[0x1E0C8D5E8](srcTop, constAlpha, srcBottom, dest, *(_QWORD *)&flags);
}

kern_return_t vm_allocate(vm_map_t target_task, vm_address_t *address, vm_size_t size, int flags)
{
  return MEMORY[0x1E0C85A80](*(_QWORD *)&target_task, address, size, *(_QWORD *)&flags);
}

kern_return_t vm_deallocate(vm_map_t target_task, vm_address_t address, vm_size_t size)
{
  return MEMORY[0x1E0C85A98](*(_QWORD *)&target_task, address, size);
}

kern_return_t vm_purgable_control(vm_map_t target_task, vm_address_t address, vm_purgable_t control, int *state)
{
  return MEMORY[0x1E0C85AE8](*(_QWORD *)&target_task, address, *(_QWORD *)&control, state);
}

kern_return_t vm_region_recurse_64(vm_map_read_t target_task, vm_address_t *address, vm_size_t *size, natural_t *nesting_depth, vm_region_recurse_info_t info, mach_msg_type_number_t *infoCnt)
{
  return MEMORY[0x1E0C85B00](*(_QWORD *)&target_task, address, size, nesting_depth, info, infoCnt);
}

uint64_t voucher_adopt()
{
  return MEMORY[0x1E0C85B10]();
}

uint64_t voucher_copy()
{
  return MEMORY[0x1E0C85B18]();
}

uint64_t voucher_get_current_persona()
{
  return MEMORY[0x1E0C85B30]();
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x1E0C85B68](msg);
}

int vsnprintf(char *__str, size_t __size, const char *__format, va_list a4)
{
  return MEMORY[0x1E0C85B98](__str, __size, __format, a4);
}

void xpc_array_append_value(xpc_object_t xarray, xpc_object_t value)
{
  MEMORY[0x1E0C85DE0](xarray, value);
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return MEMORY[0x1E0C85DF8](xarray, applier);
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C85E00](objects, count);
}

xpc_object_t xpc_array_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x1E0C85E10]();
}

xpc_object_t xpc_array_get_array(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x1E0C85E20](xarray, index);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x1E0C85E30](xarray);
}

const void *__cdecl xpc_array_get_data(xpc_object_t xarray, size_t index, size_t *length)
{
  return (const void *)MEMORY[0x1E0C85E40](xarray, index, length);
}

xpc_object_t xpc_array_get_dictionary(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x1E0C85E50](xarray, index);
}

uint64_t xpc_array_get_uint64(xpc_object_t xarray, size_t index)
{
  return MEMORY[0x1E0C85E78](xarray, index);
}

xpc_object_t xpc_array_get_value(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x1E0C85E90](xarray, index);
}

void xpc_array_set_data(xpc_object_t xarray, size_t index, const void *bytes, size_t length)
{
  MEMORY[0x1E0C85EA8](xarray, index, bytes, length);
}

void xpc_array_set_uint64(xpc_object_t xarray, size_t index, uint64_t value)
{
  MEMORY[0x1E0C85ED8](xarray, index, value);
}

void xpc_array_set_value(xpc_object_t xarray, size_t index, xpc_object_t value)
{
  MEMORY[0x1E0C85EE8](xarray, index, value);
}

void xpc_connection_activate(xpc_connection_t connection)
{
  MEMORY[0x1E0C85F50](connection);
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x1E0C85F90](name, targetq);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return (xpc_connection_t)MEMORY[0x1E0C85FA0](endpoint);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x1E0C85FB0](name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return MEMORY[0x1E0C85FD0]();
}

void *__cdecl xpc_connection_get_context(xpc_connection_t connection)
{
  return (void *)MEMORY[0x1E0C85FE0](connection);
}

const char *__cdecl xpc_connection_get_name(xpc_connection_t connection)
{
  return (const char *)MEMORY[0x1E0C86000](connection);
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return MEMORY[0x1E0C86008](connection);
}

void xpc_connection_resume(xpc_connection_t connection)
{
  MEMORY[0x1E0C86018](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x1E0C86030](connection, message);
}

xpc_object_t xpc_connection_send_message_with_reply_sync(xpc_connection_t connection, xpc_object_t message)
{
  return (xpc_object_t)MEMORY[0x1E0C86048](connection, message);
}

void xpc_connection_set_context(xpc_connection_t connection, void *context)
{
  MEMORY[0x1E0C86070](connection, context);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x1E0C86080](connection, handler);
}

void xpc_connection_set_finalizer_f(xpc_connection_t connection, xpc_finalizer_t finalizer)
{
  MEMORY[0x1E0C86088](connection, finalizer);
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
  MEMORY[0x1E0C860C8](connection, targetq);
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return (char *)MEMORY[0x1E0C86108](object);
}

xpc_object_t xpc_data_create_with_dispatch_data(dispatch_data_t ddata)
{
  return (xpc_object_t)MEMORY[0x1E0C86188](ddata);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x1E0C86198](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x1E0C861A8](xdata);
}

uint64_t xpc_dictionary_copy_mach_send()
{
  return MEMORY[0x1E0C86200]();
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86218]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x1E0C86228](original);
}

int xpc_dictionary_dup_fd(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C86230](xdict, key);
}

xpc_object_t xpc_dictionary_get_array(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C86248](xdict, key);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C86260](xdict, key);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return (const void *)MEMORY[0x1E0C86278](xdict, key, length);
}

double xpc_dictionary_get_double(xpc_object_t xdict, const char *key)
{
  double result;

  MEMORY[0x1E0C86298](xdict, key);
  return result;
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

xpc_connection_t xpc_dictionary_get_remote_connection(xpc_object_t xdict)
{
  return (xpc_connection_t)MEMORY[0x1E0C862B0](xdict);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862D0](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x1E0C86310](xdict, key, value);
}

void xpc_dictionary_set_data(xpc_object_t xdict, const char *key, const void *bytes, size_t length)
{
  MEMORY[0x1E0C86330](xdict, key, bytes, length);
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
  MEMORY[0x1E0C86348](xdict, key, value);
}

void xpc_dictionary_set_fd(xpc_object_t xdict, const char *key, int fd)
{
  MEMORY[0x1E0C86358](xdict, key, *(_QWORD *)&fd);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

uint64_t xpc_dictionary_set_mach_send()
{
  return MEMORY[0x1E0C86378]();
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
  MEMORY[0x1E0C86398](xdict, key, value);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

xpc_endpoint_t xpc_endpoint_create(xpc_connection_t connection)
{
  return (xpc_endpoint_t)MEMORY[0x1E0C863F0](connection);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x1E0C86570](xint);
}

xpc_object_t xpc_null_create(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86628]();
}

void xpc_release(xpc_object_t object)
{
  MEMORY[0x1E0C86658](object);
}

xpc_object_t xpc_retain(xpc_object_t object)
{
  return (xpc_object_t)MEMORY[0x1E0C86660](object);
}

