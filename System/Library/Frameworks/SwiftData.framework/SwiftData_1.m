uint64_t sub_234806580(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_234807474(a1, a2, a3, a4, (void (*)(void))sub_2347D6B3C, (void (*)(void))sub_2347D0A38, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23482650C);
}

_OWORD *sub_23480659C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2347CDAA8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v17);
        return sub_234797294(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2347D6B48();
      goto LABEL_7;
    }
    sub_2347D0A44(v13, a3 & 1);
    v19 = sub_2347CDAA8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_234797134(a2, (uint64_t)v21);
      return sub_234826510(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_234870424();
  __break(1u);
  return result;
}

void sub_2348066D4(uint64_t a1, _QWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2347CDB28(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];

        *(_QWORD *)(v17 + 8 * v10) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2347D6D2C();
      goto LABEL_7;
    }
    sub_2347D0D58(v13, a3 & 1);
    v18 = sub_2347CDB28(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_234826588(v10, (uint64_t)a2, a1, v16);
      swift_retain();
      return;
    }
  }
  type metadata accessor for Schema();
  sub_234870424();
  __break(1u);
}

void sub_2348067F0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_23486F4AC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_2347CDD24(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2347D70A4();
    goto LABEL_7;
  }
  sub_2347D152C(v17, a3 & 1);
  v22 = sub_2347CDD24(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_234870424();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_2348265D0(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23480694C(_QWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_23486F158();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_2347CDDBC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_23480FB34(a1, v20[7] + (v14 << 6));
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_2347D72CC();
      goto LABEL_7;
    }
    sub_2347D18C0(v17, a3 & 1);
    v22 = sub_2347CDDBC(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_23480FB34(a1, v20[7] + (v14 << 6));
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_234826668(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_234806ABC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2348072F4(a1, a2, a3, (void (*)(void))sub_2347D78B4, (void (*)(void))sub_2347D22A8, type metadata accessor for DefaultSnapshot, (uint64_t (*)(unint64_t, char *, uint64_t, uint64_t))sub_234826710);
}

id sub_234806AE0(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_2347CDEDC((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        v17 = type metadata accessor for PersistentIdentifier(0);
        return (id)sub_23480FA98(a1, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v9, type metadata accessor for PersistentIdentifier);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_2347D7B58();
      goto LABEL_7;
    }
    sub_2347D26D4(v12, a3 & 1);
    v19 = sub_2347CDEDC((uint64_t)a2);
    if ((v13 & 1) == (v20 & 1))
    {
      v9 = v19;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23482671C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_23480FA60(0, (unint64_t *)&qword_254257600);
  result = (id)sub_234870424();
  __break(1u);
  return result;
}

void sub_234806C20(uint64_t a1, uint64_t a2, char a3)
{
  sub_234806C58(a1, a2, a3, (void (*)(void))sub_2347D7D88, (void (*)(void))sub_2347D2A28, (void (*)(unint64_t, char *, uint64_t, uint64_t))sub_2348267A8);
}

void sub_234806C3C(uint64_t a1, uint64_t a2, char a3)
{
  sub_234806C58(a1, a2, a3, (void (*)(void))sub_2347D76C0, (void (*)(void))sub_2347D1F78, (void (*)(unint64_t, char *, uint64_t, uint64_t))sub_2348267AC);
}

void sub_234806C58(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), void (*a6)(unint64_t, char *, uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*v27)(void);
  void (*v28)(unint64_t, char *, uint64_t, uint64_t);

  v27 = a5;
  v28 = a6;
  v8 = v6;
  v12 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v6;
  v17 = sub_2347CDE54(a2);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a3 & 1) != 0)
  {
LABEL_7:
    v23 = *v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = *(_QWORD *)(v23 + 56);

      *(_QWORD *)(v24 + 8 * v17) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_7;
  }
  v27();
  v25 = sub_2347CDE54(a2);
  if ((v21 & 1) != (v26 & 1))
  {
LABEL_14:
    sub_234870424();
    __break(1u);
    return;
  }
  v17 = v25;
  v23 = *v8;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23480DD54(a2, (uint64_t)v14, type metadata accessor for PersistentIdentifier);
  v28(v17, v14, a1, v23);
}

uint64_t sub_234806DC8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for PersistentIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_2347CDE54(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
      return sub_23480FA98(a1, v20[7] + *(_QWORD *)(v9 + 72) * v14, type metadata accessor for PersistentIdentifier);
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2347D7FC8();
    goto LABEL_7;
  }
  sub_2347D2DF0(v17, a3 & 1);
  v22 = sub_2347CDE54(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_234870424();
    __break(1u);
    return result;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    return sub_23480FA98(a1, v20[7] + *(_QWORD *)(v9 + 72) * v14, type metadata accessor for PersistentIdentifier);
LABEL_11:
  sub_23480DD54(a2, (uint64_t)v11, type metadata accessor for PersistentIdentifier);
  return sub_234826848(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_234806F2C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_2347CDE54(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_2347D8230();
    goto LABEL_7;
  }
  sub_2347D31E8(v16, a3 & 1);
  v22 = sub_2347CDE54(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_234870424();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23480DD54(a2, (uint64_t)v10, type metadata accessor for PersistentIdentifier);
  return sub_2348268F4(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_234807088(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2347CD944(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      return sub_23482698C(v12, a2, a3, a1, v18);
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2347D8618();
      goto LABEL_7;
    }
    sub_2347D38B0(v15, a4 & 1);
    v21 = sub_2347CD944(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_23482698C(v12, a2, a3, a1, v18);
    }
  }
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_2348071AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2347CD9BC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_23480FADC(a1, v18[7] + 32 * v12);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2347D87BC();
      goto LABEL_7;
    }
    sub_2347D3B88(v15, a4 & 1);
    v20 = sub_2347CD9BC(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_23480FADC(a1, v18[7] + 32 * v12);
LABEL_11:
      sub_2348269D4(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_2348072D0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2348072F4(a1, a2, a3, (void (*)(void))sub_2347D7090, (void (*)(void))sub_2347D1518, type metadata accessor for ModelContext.WeakAnyPersistentObject, (uint64_t (*)(unint64_t, char *, uint64_t, uint64_t))sub_234826A3C);
}

uint64_t sub_2348072F4(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), uint64_t (*a6)(_QWORD), uint64_t (*a7)(unint64_t, char *, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t (*v32)(unint64_t, char *, uint64_t, uint64_t);
  uint64_t v33;

  v31 = a5;
  v32 = a7;
  v10 = v7;
  v33 = a1;
  v13 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v7;
  v18 = sub_2347CDE54(a2);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  v22 = v17;
  v23 = *(_QWORD *)(v16 + 24);
  if (v23 >= v21 && (a3 & 1) != 0)
  {
LABEL_7:
    v24 = *v10;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = *(_QWORD *)(v24 + 56);
      v26 = a6(0);
      return sub_23480FA98(v33, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v18, a6);
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_7;
  }
  v31();
  v28 = sub_2347CDE54(a2);
  if ((v22 & 1) != (v29 & 1))
  {
LABEL_14:
    result = sub_234870424();
    __break(1u);
    return result;
  }
  v18 = v28;
  v24 = *v10;
  if ((v22 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23480DD54(a2, (uint64_t)v15, type metadata accessor for PersistentIdentifier);
  return v32(v18, v15, v33, v24);
}

uint64_t sub_234807474(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v10 = v7;
  v15 = *v7;
  v17 = sub_2347CD9BC(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        result = swift_release();
        *(_QWORD *)(v24 + 8 * v17) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v26 = sub_2347CD9BC(a2, a3);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_2348075C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2347CDF0C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_release();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      return sub_234826B4C(v12, a2, a3, a1, v18);
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2347D8B60();
      goto LABEL_7;
    }
    sub_2347D41BC(v15, a4 & 1);
    v21 = sub_2347CDF0C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_234826B4C(v12, a2, a3, a1, v18);
    }
  }
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_2348076EC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_234807890(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_234807708(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_234807ECC(a1, a2, a3, (_QWORD *)*v3, qword_254257280, &qword_2542588D8);
  *v3 = result;
  return result;
}

uint64_t sub_234807734(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2348081FC(a1, a2, a3, (_QWORD *)*v3, &qword_254258930, &qword_254258840);
  *v3 = result;
  return result;
}

uint64_t sub_234807760(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_234807B80(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23480777C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_234807CEC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_234807798(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_234807ECC(a1, a2, a3, (_QWORD *)*v3, &qword_254258950, &qword_2542588C8);
  *v3 = result;
  return result;
}

uint64_t sub_2348077C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_234807ECC(a1, a2, a3, (_QWORD *)*v3, &qword_254257680, &qword_254257668);
  *v3 = result;
  return result;
}

uint64_t sub_2348077F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_234808388(a1, a2, a3, (_QWORD *)*v3, &qword_254258938, &qword_254258850);
  *v3 = result;
  return result;
}

uint64_t sub_23480781C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_234808058(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_234807838(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2348081FC(a1, a2, a3, (_QWORD *)*v3, &qword_254257728, &qword_2542576D8);
  *v3 = result;
  return result;
}

uint64_t sub_234807864(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_234808388(a1, a2, a3, (_QWORD *)*v3, &qword_2561893D8, &qword_2561893E0);
  *v3 = result;
  return result;
}

uint64_t sub_234807890(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_1(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_2348079F8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2561896D0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_1(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542588D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_234807B80(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189300);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_1(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_234807CEC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254257730);
  v10 = *(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size_1(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_234807ECC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size_1(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_234808058(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254257DE8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_1(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254257D88);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_2348081FC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size_1(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 17;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11)
      memmove(v13 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_234808388(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size_1(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_234870064();
  __break(1u);
  return result;
}

void *sub_23480852C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2561893C0);
  v2 = *v0;
  v3 = sub_23486FE78();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2348086DC()
{
  return sub_234808700(&qword_254257610);
}

void *sub_2348086E8()
{
  return sub_234808700(&qword_254258810);
}

void *sub_2348086F4()
{
  return sub_234808700(&qword_2561893D0);
}

void *sub_234808700(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23486FE78();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    result = (void *)swift_retain();
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2348088A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258788);
  v2 = *v0;
  v3 = sub_23486FE78();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    result = (void *)sub_2347A6F5C(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v17 = *(_QWORD *)(v4 + 48) + v16;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_234808A6C()
{
  return sub_234808C40((uint64_t (*)(_QWORD))type metadata accessor for ModelConfiguration, &qword_254257678);
}

void *sub_234808A80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254257718);
  v2 = *v0;
  v3 = sub_23486FE78();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    result = (void *)swift_unknownObjectRetain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_234808C2C()
{
  return sub_234808C40(type metadata accessor for PersistentIdentifier, &qword_254257628);
}

void *sub_234808C40(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  unint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v5 = v2;
  v6 = a1(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *v2;
  v11 = sub_23486FE78();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v5 = v12;
    return result;
  }
  v29 = v5;
  result = (void *)(v11 + 56);
  v14 = v10 + 56;
  v15 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 56 + 8 * v15)
    result = memmove(result, (const void *)(v10 + 56), 8 * v15);
  v17 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v18 = 1 << *(_BYTE *)(v10 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v10 + 56);
  v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v25 >= v21)
      goto LABEL_28;
    v26 = *(_QWORD *)(v14 + 8 * v25);
    ++v17;
    if (!v26)
    {
      v17 = v25 + 1;
      if (v25 + 1 >= v21)
        goto LABEL_28;
      v26 = *(_QWORD *)(v14 + 8 * v17);
      if (!v26)
      {
        v17 = v25 + 2;
        if (v25 + 2 >= v21)
          goto LABEL_28;
        v26 = *(_QWORD *)(v14 + 8 * v17);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v20 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v17 << 6);
LABEL_12:
    v24 = *(_QWORD *)(v7 + 72) * v23;
    sub_23480DD54(*(_QWORD *)(v10 + 48) + v24, (uint64_t)v9, a1);
    result = (void *)sub_23480E3CC((uint64_t)v9, *(_QWORD *)(v12 + 48) + v24, a1);
  }
  v27 = v25 + 3;
  if (v27 >= v21)
  {
LABEL_28:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_30;
  }
  v26 = *(_QWORD *)(v14 + 8 * v27);
  if (v26)
  {
    v17 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v17 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v17 >= v21)
      goto LABEL_28;
    v26 = *(_QWORD *)(v14 + 8 * v17);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_234808E58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_234785C80((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_234808E98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _OWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t i;
  _OWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  _OWORD v46[2];
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v50 = a1;
  v51 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v52 = v8;
  v53 = 0;
  v54 = v11 & v9;
  v55 = a2;
  v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2347E8EF0(&v48);
  v12 = *((_QWORD *)&v48 + 1);
  if (!*((_QWORD *)&v48 + 1))
    goto LABEL_27;
  v13 = v48;
  sub_234797294(v49, v47);
  v14 = *(_QWORD **)a5;
  v16 = sub_2347CD9BC(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_2347D65A0();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v24[6] + 16 * v16);
    *v25 = v13;
    v25[1] = v12;
    sub_234797294(v47, (_OWORD *)(v24[7] + 32 * v16));
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_2347E8EF0(&v48);
    for (i = *((_QWORD *)&v48 + 1); *((_QWORD *)&v48 + 1); i = *((_QWORD *)&v48 + 1))
    {
      v31 = v48;
      sub_234797294(v49, v47);
      v32 = *(_QWORD **)a5;
      v34 = sub_2347CD9BC(v31, i);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        goto LABEL_28;
      v38 = v33;
      if (v32[3] < v37)
      {
        sub_2347D00DC(v37, 1);
        v39 = sub_2347CD9BC(v31, i);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_30;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {
        sub_234785C80((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v30);
        sub_234797294(v46, v30);
      }
      else
      {
        v41 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v31;
        v42[1] = i;
        sub_234797294(v47, (_OWORD *)(v41[7] + 32 * v34));
        v43 = v41[2];
        v27 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v27)
          goto LABEL_29;
        v41[2] = v44;
      }
      sub_2347E8EF0(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23480FA58();
    return swift_release();
  }
  sub_2347D00DC(v19, a4 & 1);
  v21 = sub_2347CD9BC(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_234785C80((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v47);
    swift_bridgeObjectRelease();
    v23 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v23);
    sub_234797294(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_2348091EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  BOOL v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v43 = type metadata accessor for PersistentIdentifier(0);
  v5 = MEMORY[0x24BDAC7A8](v43);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v39 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v39 - v11;
  v40 = v2;
  v13 = *v2;
  sub_234870484();
  ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  v44 = a1;
  v45 = a2;
  PersistentModel.persistentModelID.getter(ObjectType, a2, (uint64_t)v12);
  sub_23486F440();
  sub_23480F7E0((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  sub_23480DD98((uint64_t)v12, type metadata accessor for PersistentIdentifier);
  v15 = sub_2348704B4();
  v16 = -1 << *(_BYTE *)(v13 + 32);
  v17 = v15 & ~v16;
  v18 = v13;
  v42 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    return 0;
  }
  v41 = ~v16;
  while (1)
  {
    v19 = v18;
    v20 = *(_QWORD *)(*(_QWORD *)(v18 + 48) + 16 * v17 + 8);
    v21 = swift_getObjectType();
    swift_unknownObjectRetain();
    PersistentModel.persistentModelID.getter(v21, v20, (uint64_t)v10);
    PersistentModel.persistentModelID.getter(ObjectType, v45, (uint64_t)v7);
    v22 = *(int *)(v43 + 20);
    v23 = *(_QWORD *)&v10[v22];
    v24 = *(_QWORD *)&v7[v22];
    v25 = *(_QWORD *)(v23 + 24);
    v26 = *(_QWORD *)(v24 + 24);
    if (v25)
    {
      if (!v26
        || (*(_QWORD *)(v23 + 16) == *(_QWORD *)(v24 + 16) ? (v27 = v25 == v26) : (v27 = 0),
            !v27 && (sub_2348702E0() & 1) == 0))
      {
LABEL_4:
        sub_23480DD98((uint64_t)v7, type metadata accessor for PersistentIdentifier);
        sub_23480DD98((uint64_t)v10, type metadata accessor for PersistentIdentifier);
LABEL_5:
        swift_unknownObjectRelease();
        goto LABEL_6;
      }
    }
    else if (v26)
    {
      goto LABEL_4;
    }
    v28 = *(_QWORD *)(v23 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(_QWORD *)(v23 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v28 && (sub_2348702E0() & 1) == 0)
      goto LABEL_4;
    if (*(_QWORD *)(v23 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v23 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      sub_23480DD98((uint64_t)v7, type metadata accessor for PersistentIdentifier);
      sub_23480DD98((uint64_t)v10, type metadata accessor for PersistentIdentifier);
    }
    else
    {
      v30 = sub_2348702E0();
      sub_23480DD98((uint64_t)v7, type metadata accessor for PersistentIdentifier);
      sub_23480DD98((uint64_t)v10, type metadata accessor for PersistentIdentifier);
      if ((v30 & 1) == 0)
        goto LABEL_5;
    }
    v31 = PersistentModel.modelContext.getter(v21, v20);
    v32 = PersistentModel.modelContext.getter(ObjectType, v45);
    v33 = v32;
    if (!v31)
      break;
    swift_unknownObjectRelease();
    swift_release();
    if (!v33)
      goto LABEL_32;
    swift_release();
    if (v31 == v33)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
LABEL_6:
    v17 = (v17 + 1) & v41;
    v18 = v19;
    if (((*(_QWORD *)(v42 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      goto LABEL_33;
  }
  if (v32)
  {
    swift_unknownObjectRelease();
LABEL_32:
    swift_release();
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
LABEL_36:
  v36 = v40;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = *v36;
  v46 = *v36;
  *v36 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_234808A80();
    v38 = v46;
  }
  v34 = *(_QWORD *)(*(_QWORD *)(v38 + 48) + 16 * v17);
  sub_23480991C(v17);
  *v36 = v46;
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_234809600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  BOOL v24;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for PersistentIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_234870484();
  sub_23486F440();
  sub_23480F7E0((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  swift_bridgeObjectRetain();
  v36 = a1;
  sub_23486F6B0();
  v11 = sub_2348704B4();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v27 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v27, 1, v6);
  }
  v32 = v3;
  v33 = v7;
  v34 = a2;
  v35 = ~v12;
  v15 = *(int *)(v6 + 20);
  v16 = *(_QWORD *)(v7 + 72);
  while (1)
  {
    v17 = v10;
    sub_23480DD54(*(_QWORD *)(v10 + 48) + v16 * v13, (uint64_t)v9, type metadata accessor for PersistentIdentifier);
    v18 = v6;
    v19 = *(_QWORD *)&v9[*(int *)(v6 + 20)];
    v20 = *(_QWORD *)(v36 + v15);
    v21 = *(_QWORD *)(v19 + 24);
    v22 = *(_QWORD *)(v20 + 24);
    if (v21)
    {
      if (!v22
        || (*(_QWORD *)(v19 + 16) == *(_QWORD *)(v20 + 16) ? (v23 = v21 == v22) : (v23 = 0),
            !v23 && (sub_2348702E0() & 1) == 0))
      {
LABEL_4:
        sub_23480DD98((uint64_t)v9, type metadata accessor for PersistentIdentifier);
        v6 = v18;
        goto LABEL_5;
      }
    }
    else if (v22)
    {
      goto LABEL_4;
    }
    v24 = *(_QWORD *)(v19 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v20 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(_QWORD *)(v19 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v20 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v24 && (sub_2348702E0() & 1) == 0)
      goto LABEL_4;
    if (*(_QWORD *)(v19 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v20 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v19 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v20 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    v26 = sub_2348702E0();
    sub_23480DD98((uint64_t)v9, type metadata accessor for PersistentIdentifier);
    v6 = v18;
    if ((v26 & 1) != 0)
      goto LABEL_27;
LABEL_5:
    v13 = (v13 + 1) & v35;
    v10 = v17;
    if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v27 = 1;
      v7 = v33;
      a2 = v34;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v27, 1, v6);
    }
  }
  sub_23480DD98((uint64_t)v9, type metadata accessor for PersistentIdentifier);
  v6 = v18;
LABEL_27:
  swift_bridgeObjectRelease();
  v28 = v32;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30 = *v28;
  v37 = *v28;
  *v28 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_234808C40(type metadata accessor for PersistentIdentifier, &qword_254257628);
    v30 = v37;
  }
  a2 = v34;
  sub_23480E3CC(*(_QWORD *)(v30 + 48) + v16 * v13, v34, type metadata accessor for PersistentIdentifier);
  sub_234809B84(v13);
  *v28 = v37;
  swift_bridgeObjectRelease();
  v27 = 0;
  v7 = v33;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v27, 1, v6);
}

uint64_t sub_23480991C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;

  v3 = type metadata accessor for PersistentIdentifier(0);
  result = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_23486FDA0();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      do
      {
        v14 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v10 + 8);
        sub_234870484();
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        PersistentModel.persistentModelID.getter(ObjectType, v14, (uint64_t)v6);
        sub_23486F440();
        sub_23480F7E0((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        sub_23486F6B0();
        sub_23480DD98((uint64_t)v6, type metadata accessor for PersistentIdentifier);
        v16 = sub_2348704B4();
        swift_unknownObjectRelease();
        v17 = v16 & v11;
        if ((uint64_t)a1 >= (uint64_t)v13)
        {
          if (v17 < v13)
            goto LABEL_5;
        }
        else if (v17 >= v13)
        {
          goto LABEL_11;
        }
        if ((uint64_t)a1 >= (uint64_t)v17)
        {
LABEL_11:
          v18 = *(_QWORD *)(v7 + 48);
          v19 = (_OWORD *)(v18 + 16 * a1);
          v20 = (_OWORD *)(v18 + 16 * v10);
          if (a1 != v10 || (a1 = v10, v19 >= v20 + 1))
          {
            *v19 = *v20;
            a1 = v10;
          }
        }
LABEL_5:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

uint64_t sub_234809B84(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;

  v25 = type metadata accessor for PersistentIdentifier(0);
  v3 = *(_QWORD *)(v25 - 8);
  result = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v24 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = sub_23486FDA0();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v26 = v7;
      v27 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v3 + 72);
      v13 = (uint64_t)v28;
      do
      {
        v14 = v12;
        v15 = v12 * v9;
        sub_23480DD54(*(_QWORD *)(v6 + 48) + v12 * v9, v13, type metadata accessor for PersistentIdentifier);
        sub_234870484();
        sub_23486F440();
        sub_23480F7E0((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        v16 = v10;
        sub_23486F6B0();
        v17 = sub_2348704B4();
        sub_23480DD98(v13, type metadata accessor for PersistentIdentifier);
        v18 = v17 & v16;
        v10 = v16;
        if (a1 >= (uint64_t)v27)
        {
          if (v18 < v27)
          {
            v7 = v26;
            v12 = v14;
            goto LABEL_6;
          }
          v7 = v26;
          v12 = v14;
          if (a1 < (uint64_t)v18)
            goto LABEL_6;
        }
        else
        {
          v7 = v26;
          v12 = v14;
          if (v18 < v27 && a1 < (uint64_t)v18)
            goto LABEL_6;
        }
        v19 = v12 * a1;
        if (v12 * a1 < v15 || *(_QWORD *)(v6 + 48) + v12 * a1 >= (unint64_t)(*(_QWORD *)(v6 + 48) + v15 + v12))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v19 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v24;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v20 = *v1;
  v21 = *(_QWORD *)(*v1 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
  return result;
}

uint64_t sub_234809E3C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_234809EE4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_234809FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v7 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542583D8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v39 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - v14;
  v16 = type metadata accessor for PersistentIdentifier(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v38 = (uint64_t)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v34 - v19;
  PersistentModel.persistentModelID.getter(a3, a4, (uint64_t)&v34 - v19);
  v35 = a2;
  v21 = a2 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration;
  swift_beginAccess();
  v22 = *(_QWORD *)v21;
  if (*(_QWORD *)(*(_QWORD *)v21 + 16))
  {
    swift_bridgeObjectRetain();
    v23 = sub_2347CDE54((uint64_t)v20);
    if ((v24 & 1) != 0)
    {
      sub_23480DD54(*(_QWORD *)(v22 + 56) + *(_QWORD *)(v8 + 72) * v23, (uint64_t)v15, type metadata accessor for ModelContext.WeakAnyPersistentObject);
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v26 = v15;
      v27 = 0;
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v26 = v15;
      v27 = 1;
    }
    v37 = v25;
    v25(v26, v27, 1, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v37(v15, 1, 1, v7);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7))
    v36 = 0;
  else
    v36 = MEMORY[0x23494676C](v15);
  sub_234810544((uint64_t)v15, &qword_2542583D8);
  v28 = PersistentModel.modelContext.getter(a3, a4);
  swift_release();
  if (v28)
  {
    PersistentModel.modelContext.getter(a3, a4);
    swift_release();
  }
  else
  {
    sub_2348119AC(v35, a3, a4);
  }
  v29 = sub_2347E5F00(a3, a4);
  sub_2347E5F28(v29 & 0xFFF7FF7F, a3, a4);
  v30 = v38;
  sub_23480DD54((uint64_t)v20, v38, type metadata accessor for PersistentIdentifier);
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit();
  *((_QWORD *)v10 + 1) = a4;
  swift_unknownObjectWeakAssign();
  v31 = (uint64_t)&v10[*(int *)(v7 + 20)];
  swift_unknownObjectRetain();
  PersistentModel.persistentModelID.getter(a3, a4, v31);
  swift_unknownObjectRelease();
  v32 = v39;
  sub_23480E3CC((uint64_t)v10, v39, type metadata accessor for ModelContext.WeakAnyPersistentObject);
  v37((char *)v32, 0, 1, v7);
  swift_beginAccess();
  sub_2347C70BC(v32, v30);
  swift_endAccess();
  swift_unknownObjectRelease();
  return sub_23480DD98((uint64_t)v20, type metadata accessor for PersistentIdentifier);
}

uint64_t sub_23480A344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t result;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542583D8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersistentModel.persistentModelID.getter(a3, a4, (uint64_t)v13);
  v14 = a2 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration;
  swift_beginAccess();
  v15 = *(_QWORD *)v14;
  if (*(_QWORD *)(*(_QWORD *)v14 + 16))
  {
    swift_bridgeObjectRetain();
    v16 = sub_2347CDE54((uint64_t)v13);
    if ((v17 & 1) != 0)
    {
      v18 = v16;
      v28[1] = v11;
      v19 = *(_QWORD *)(v15 + 56);
      v20 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      v29 = a1;
      v21 = a2;
      v22 = a3;
      v23 = a4;
      v24 = *(_QWORD *)(v20 - 8);
      sub_23480DD54(v19 + *(_QWORD *)(v24 + 72) * v18, (uint64_t)v10, type metadata accessor for ModelContext.WeakAnyPersistentObject);
      v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
      a4 = v23;
      a3 = v22;
      a2 = v21;
      a1 = v29;
      v25(v10, 0, 1, v20);
    }
    else
    {
      v20 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
  }
  type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v10, 1, v20))
  {
    sub_234810544((uint64_t)v10, &qword_2542583D8);
LABEL_12:
    sub_234809FC8(a1, a2, a3, a4);
    swift_unknownObjectRelease();
    return sub_23480DD98((uint64_t)v13, type metadata accessor for PersistentIdentifier);
  }
  v26 = MEMORY[0x23494676C](v10);
  sub_234810544((uint64_t)v10, &qword_2542583D8);
  if (!v26 || v26 == a1)
    goto LABEL_12;
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486FF74();
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_23480A64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t *boxed_opaque_existential_1Tm_0;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v16[5];

  v16[3] = a3;
  v16[4] = a4;
  boxed_opaque_existential_1Tm_0 = __swift_allocate_boxed_opaque_existential_1Tm_0(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1Tm_0, a1, a3);
  v11 = sub_23480A704((uint64_t)boxed_opaque_existential_1Tm_0, a2, a3, a4);
  v13 = v12;
  ObjectType = swift_getObjectType();
  sub_234805D24(ObjectType, v11, v13, a2, (uint64_t)v16, ObjectType, v13, a5);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v16);
}

uint64_t sub_23480A704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t result;
  _QWORD v29[2];
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v33[5];
  _QWORD v34[5];
  uint64_t v35[6];

  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  v7 = MEMORY[0x24BDAC7A8](v30);
  v29[1] = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v29 - v9;
  v11 = type metadata accessor for PersistentIdentifier(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v29 - v16;
  v35[3] = a3;
  v35[4] = a4;
  __swift_allocate_boxed_opaque_existential_1Tm_0(v35);
  (*(void (**)(void))(*(_QWORD *)(a3 - 8) + 16))();
  v29[0] = *(_QWORD *)(a4 + 32);
  ((void (*)(uint64_t, uint64_t))v29[0])(a3, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_234810544((uint64_t)v10, &qword_2542576E0);
    sub_23480FB70((uint64_t)v35, (uint64_t)v34);
    v33[0] = 0;
    v33[1] = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    __swift_instantiateConcreteTypeFromMangledName(qword_2542577C8);
    sub_23486FF74();
  }
  else
  {
    sub_23480E3CC((uint64_t)v10, (uint64_t)v17, type metadata accessor for PersistentIdentifier);
    v18 = *(_QWORD *)&v17[*(int *)(v11 + 20)];
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v18 + 24);
    sub_23480DD54((uint64_t)v17, (uint64_t)v15, type metadata accessor for PersistentIdentifier);
    sub_23480FB70((uint64_t)v35, (uint64_t)v34);
    if (v20)
    {
      v21 = v20;
    }
    else
    {
      v22 = __swift_project_boxed_opaque_existential_1(v34, v34[3]);
      v19 = sub_23480AB00(a2, (uint64_t)v15, (uint64_t)v22, a3, a4);
      v21 = v23;
    }
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v34);
    sub_23480DD98((uint64_t)v15, type metadata accessor for PersistentIdentifier);
    swift_beginAccess();
    v24 = *(_QWORD *)(a2 + 16);
    if (*(_QWORD *)(v24 + 16))
    {
      swift_bridgeObjectRetain();
      v25 = sub_2347CD9BC(v19, v21);
      if ((v26 & 1) != 0)
      {
        v27 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 16 * v25);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23480DD98((uint64_t)v17, type metadata accessor for PersistentIdentifier);
        __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v35);
        return v27;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_23480FB70((uint64_t)v35, (uint64_t)v33);
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    v31 = 0xD000000000000019;
    v32 = 0x80000002348746F0;
    __swift_project_boxed_opaque_existential_1(v33, v33[3]);
    ((void (*)(uint64_t, uint64_t))v29[0])(a3, a4);
    sub_23486F77C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
  }
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_23480AB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1Tm_0;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t result;
  int64_t v32;
  _BYTE v33[40];
  uint64_t v34[6];

  v34[3] = a4;
  v34[4] = a5;
  boxed_opaque_existential_1Tm_0 = __swift_allocate_boxed_opaque_existential_1Tm_0(v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1Tm_0, a3, a4);
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = v9 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v9 + 64);
  v32 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  while (v13)
  {
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v16 = v15 | (v14 << 6);
LABEL_23:
    v20 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v16 + 8);
    ObjectType = swift_getObjectType();
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 48);
    swift_unknownObjectRetain();
    v23 = *(_QWORD *)(v22(ObjectType, v20) + 72);
    swift_bridgeObjectRetain();
    swift_release();
    v24 = type metadata accessor for PersistentIdentifier(0);
    if (*(_QWORD *)(v23 + 16))
    {
      v25 = (uint64_t *)(*(_QWORD *)(a2 + *(int *)(v24 + 20))
                      + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
      v27 = *v25;
      v26 = v25[1];
      swift_bridgeObjectRetain();
      sub_2347CD9BC(v27, v26);
      LOBYTE(v27) = v28;
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(ObjectType, v20);
        swift_release();
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm_2((uint64_t)v34);
        return v29;
      }
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v17 >= v32)
    goto LABEL_28;
  v18 = *(_QWORD *)(v10 + 8 * v17);
  ++v14;
  if (v18)
    goto LABEL_22;
  v14 = v17 + 1;
  if (v17 + 1 >= v32)
    goto LABEL_28;
  v18 = *(_QWORD *)(v10 + 8 * v14);
  if (v18)
    goto LABEL_22;
  v14 = v17 + 2;
  if (v17 + 2 >= v32)
    goto LABEL_28;
  v18 = *(_QWORD *)(v10 + 8 * v14);
  if (v18)
    goto LABEL_22;
  v14 = v17 + 3;
  if (v17 + 3 >= v32)
    goto LABEL_28;
  v18 = *(_QWORD *)(v10 + 8 * v14);
  if (v18)
  {
LABEL_22:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_23;
  }
  v19 = v17 + 4;
  if (v19 >= v32)
    goto LABEL_28;
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v32)
      goto LABEL_28;
    v18 = *(_QWORD *)(v10 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  swift_release();
  sub_23480FB70((uint64_t)v34, (uint64_t)v33);
  sub_23486FEA8();
  sub_23486F7DC();
  __swift_instantiateConcreteTypeFromMangledName(qword_2542577C8);
  sub_23486FF74();
  sub_23486F7DC();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258840);
  sub_23486F638();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_23480AEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v4 = *(int *)(type metadata accessor for ModelContext.WeakAnyPersistentObject(0) + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = *(int *)(type metadata accessor for PersistentIdentifier(0) + 20);
  v8 = *(_QWORD *)(v5 + v7);
  v9 = *(_QWORD *)(v6 + v7);
  v10 = *(_QWORD *)(v8 + 24);
  v11 = *(_QWORD *)(v9 + 24);
  if (v10)
  {
    if (!v11)
      return 0;
    v12 = *(_QWORD *)(v8 + 16) == *(_QWORD *)(v9 + 16) && v10 == v11;
    if (!v12 && (sub_2348702E0() & 1) == 0)
      return 0;
  }
  else if (v11)
  {
    return 0;
  }
  v13 = *(_QWORD *)(v8 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v9 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
     && *(_QWORD *)(v8 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v9 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
  if (v13 || (sub_2348702E0() & 1) != 0)
  {
    v14 = *(_QWORD *)(v8 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v9 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
       && *(_QWORD *)(v8 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v9 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8);
    if (v14 || (sub_2348702E0() & 1) != 0)
      return 1;
  }
  return 0;
}

void sub_23480AFB8(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v3 = (void **)(v1 + 40);
  swift_beginAccess();
  v4 = *(void **)(v1 + 40);
  v5 = (_QWORD *)MEMORY[0x24BDD13A0];
  if (v4)
  {
    v6 = (void *)objc_opt_self();
    v7 = v4;
    v8 = objc_msgSend(v6, sel_defaultCenter);
    objc_msgSend(v8, sel_removeObserver_name_object_, v1, *v5, v7);

    objc_msgSend(v7, sel_removeAllActionsWithTarget_, v1);
    v9 = *(void **)(v1 + 40);
  }
  else
  {
    v9 = 0;
  }
  *v3 = a1;
  v10 = a1;

  v11 = *v3;
  if (*v3)
  {
    v12 = (void *)objc_opt_self();
    v13 = v11;
    v14 = objc_msgSend(v12, sel_defaultCenter);
    objc_msgSend(v14, sel_addObserver_selector_name_object_, v1, sel__undoManagerCheckpoint_, *v5, v13);

  }
}

BOOL sub_23480B0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t ObjectType;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = type metadata accessor for PersistentIdentifier(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  ObjectType = swift_getObjectType();
  PersistentModel.persistentModelID.getter(ObjectType, a2, (uint64_t)v11);
  v13 = swift_getObjectType();
  PersistentModel.persistentModelID.getter(v13, a4, (uint64_t)v9);
  v14 = _s9SwiftData20PersistentIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v9);
  sub_23480DD98((uint64_t)v9, type metadata accessor for PersistentIdentifier);
  sub_23480DD98((uint64_t)v11, type metadata accessor for PersistentIdentifier);
  if ((v14 & 1) == 0)
    return 0;
  v15 = PersistentModel.modelContext.getter(ObjectType, a2);
  v16 = PersistentModel.modelContext.getter(v13, a4);
  v17 = v16;
  if (v15)
  {
    swift_release();
    if (v17)
    {
      swift_release();
      return v15 == v17;
    }
    goto LABEL_7;
  }
  if (v16)
  {
LABEL_7:
    swift_release();
    return 0;
  }
  swift_release();
  return 1;
}

uint64_t sub_23480B274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_23;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        return swift_release();
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          return swift_release();
        v14 = *(_QWORD *)(v4 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v8)
            return swift_release();
          v14 = *(_QWORD *)(v4 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_23:
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    v19 = swift_unknownObjectRetain();
    if ((sub_234799C9C(v19, v18, a2) & 1) != 0)
    {
      sub_2348091EC(v17, v18);
      swift_unknownObjectRelease();
    }
    result = swift_unknownObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23480B418(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v5 = *(_QWORD *)(v1 + 16);
  }
  else
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
      __break(1u);
      return result;
    }
    v5 = result;
  }
  swift_beginAccess();
  v7 = *(_QWORD *)(v5 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = v8 - 1;
    v10 = (uint64_t *)(v7 + 80);
    do
    {
      v11 = v9;
      sub_2347FC6C0((uint64_t)(v10 - 6), *(v10 - 1), *v10, a1);
      if (v3)
        break;
      v9 = v11 - 1;
      v10 += 7;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23480B528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v10[5];

  v5 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersistentModel.persistentModelID.getter(a2, a3, (uint64_t)v7);
  sub_234800CEC((uint64_t)v7, a2, a3, v10);
  sub_23480DD98((uint64_t)v7, type metadata accessor for PersistentIdentifier);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a3 + 48))(v10, a2, a3);
}

uint64_t sub_23480B5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(__int128 *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  __int128 v23;
  int64_t v24;

  v22 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v23 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16 * i);
    swift_unknownObjectRetain();
    a5(&v23, a2, a3, a4);
    if (v5)
    {
      swift_release();
      return swift_unknownObjectRelease();
    }
    result = swift_unknownObjectRelease();
    if (v13)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v24)
      return swift_release();
    v19 = *(_QWORD *)(v22 + 8 * v15);
    if (!v19)
    {
      v20 = v15 + 1;
      if (v15 + 1 >= v24)
        return swift_release();
      v19 = *(_QWORD *)(v22 + 8 * v20);
      if (v19)
        goto LABEL_14;
      v20 = v15 + 2;
      if (v15 + 2 >= v24)
        return swift_release();
      v19 = *(_QWORD *)(v22 + 8 * v20);
      if (v19)
        goto LABEL_14;
      v20 = v15 + 3;
      if (v15 + 3 >= v24)
        return swift_release();
      v19 = *(_QWORD *)(v22 + 8 * v20);
      if (v19)
      {
LABEL_14:
        v15 = v20;
        goto LABEL_15;
      }
      v21 = v15 + 4;
      if (v15 + 4 >= v24)
        return swift_release();
      v19 = *(_QWORD *)(v22 + 8 * v21);
      v15 += 4;
      if (!v19)
        break;
    }
LABEL_15:
    v13 = (v19 - 1) & v19;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v24)
      return swift_release();
    v19 = *(_QWORD *)(v22 + 8 * v15);
    ++v21;
    if (v19)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23480B7F4(uint64_t a1, uint64_t a2, _QWORD **a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  __int128 v19;
  int64_t v20;

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v20 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v19 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16 * i);
    swift_unknownObjectRetain();
    sub_2347F70F4((uint64_t *)&v19, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_unknownObjectRelease();
    }
    result = swift_unknownObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v20)
      return swift_release();
    v16 = *(_QWORD *)(v7 + 8 * v12);
    if (!v16)
    {
      v17 = v12 + 1;
      if (v12 + 1 >= v20)
        return swift_release();
      v16 = *(_QWORD *)(v7 + 8 * v17);
      if (v16)
        goto LABEL_14;
      v17 = v12 + 2;
      if (v12 + 2 >= v20)
        return swift_release();
      v16 = *(_QWORD *)(v7 + 8 * v17);
      if (v16)
        goto LABEL_14;
      v17 = v12 + 3;
      if (v12 + 3 >= v20)
        return swift_release();
      v16 = *(_QWORD *)(v7 + 8 * v17);
      if (v16)
      {
LABEL_14:
        v12 = v17;
        goto LABEL_15;
      }
      v18 = v12 + 4;
      if (v12 + 4 >= v20)
        return swift_release();
      v16 = *(_QWORD *)(v7 + 8 * v18);
      v12 += 4;
      if (!v16)
        break;
    }
LABEL_15:
    v10 = (v16 - 1) & v16;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v20)
      return swift_release();
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v16)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23480B9CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v6)
      return swift_release();
    v14 = *(_QWORD *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v6)
        return swift_release();
      v14 = *(_QWORD *)(v2 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v6)
          return swift_release();
        v14 = *(_QWORD *)(v2 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v6)
            return swift_release();
          v14 = *(_QWORD *)(v2 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v10 + 8);
    v12 = swift_unknownObjectRetain();
    sub_2347F85A8(v12, v11, 0, 1);
    result = swift_unknownObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v6)
    return swift_release();
  v14 = *(_QWORD *)(v2 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v6)
      return swift_release();
    v14 = *(_QWORD *)(v2 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23480BB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_2347E1354(a2, a3);
  if (v5)
    return v5;
  sub_2347E5DDC(a2, a3);
  v6 = v7;
  v9 = v8;
  v10 = swift_unknownObjectRetain();
  sub_2347E1398(v10, v9, a2, a3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_23480BBCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_23;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6)
      return swift_release();
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v6)
        return swift_release();
      v12 = *(_QWORD *)(v2 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v6)
          return swift_release();
        v12 = *(_QWORD *)(v2 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v6)
            return swift_release();
          v12 = *(_QWORD *)(v2 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_23:
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v10 + 8);
    ObjectType = swift_getObjectType();
    v16 = swift_unknownObjectRetain();
    if (sub_23480BB44(v16, ObjectType, v14))
      swift_unknownObjectRelease();
    result = swift_unknownObjectRelease();
  }
  v13 = v11 + 4;
  if (v13 >= v6)
    return swift_release();
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      return swift_release();
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23480BD54(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v9)
      return swift_release();
    v18 = *(_QWORD *)(v5 + 8 * v17);
    ++v11;
    if (!v18)
    {
      v11 = v17 + 1;
      if (v17 + 1 >= v9)
        return swift_release();
      v18 = *(_QWORD *)(v5 + 8 * v11);
      if (!v18)
      {
        v11 = v17 + 2;
        if (v17 + 2 >= v9)
          return swift_release();
        v18 = *(_QWORD *)(v5 + 8 * v11);
        if (!v18)
        {
          v11 = v17 + 3;
          if (v17 + 3 >= v9)
            return swift_release();
          v18 = *(_QWORD *)(v5 + 8 * v11);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_5:
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v13 + 8);
    ObjectType = swift_getObjectType();
    v16 = swift_unknownObjectRetain();
    a3(v16, ObjectType, v14);
    result = swift_unknownObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v9)
    return swift_release();
  v18 = *(_QWORD *)(v5 + 8 * v19);
  if (v18)
  {
    v11 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v11 >= v9)
      return swift_release();
    v18 = *(_QWORD *)(v5 + 8 * v11);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23480BEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t ObjectType;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v20 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v20 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v20 + 8 * v9);
        if (!v14)
        {
          v9 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v20 + 8 * v9);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    v19 = swift_unknownObjectRetain_n();
    if ((sub_234799C9C(v19, v18, a2) & 1) != 0)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_2347E7688(0, ObjectType, v18);
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_2348091EC(v17, v18);
      swift_endAccess();
      swift_unknownObjectRelease_n();
    }
    result = swift_unknownObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v20 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v20 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_23480C104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[13];

  v47[2] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542583D8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23486FDC4();
    sub_23480FA60(0, (unint64_t *)&qword_254257600);
    sub_23480FA00();
    sub_23486FA88();
    a1 = v56[5];
    v52 = v56[6];
    v11 = v56[7];
    v12 = v56[8];
    v13 = v56[9];
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 56);
    v52 = a1 + 56;
    v16 = ~v14;
    v17 = -v14;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v13 = v18 & v15;
    swift_bridgeObjectRetain();
    v11 = v16;
    v12 = 0;
  }
  v47[0] = v11;
  v50 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v51 = (unint64_t)(v11 + 64) >> 6;
  v48 = v8;
  v49 = MEMORY[0x24BEE4AD0] + 8;
  if ((a1 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_31:
  v25 = sub_23486FE24();
  if (!v25)
    goto LABEL_43;
  v56[12] = v25;
  sub_23480FA60(0, (unint64_t *)&qword_254257600);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v24 = (id)v56[0];
  swift_unknownObjectRelease();
  v20 = v12;
  v55 = v13;
  if (!v24)
    goto LABEL_43;
  while (1)
  {
    v54 = v20;
    type metadata accessor for PersistentIdentifierImplementation(0);
    swift_allocObject();
    v26 = v24;
    v27 = sub_234854878(v26);
    *(_QWORD *)&v10[*(int *)(v8 + 20)] = v27;
    v28 = v27 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
    v29 = sub_23486F440();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v10, v28, v29);
    v30 = (uint64_t *)(a2 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration);
    swift_beginAccess();
    v31 = *v30;
    v32 = *(_QWORD *)(*v30 + 16);
    v53 = v26;
    if (v32)
    {
      swift_bridgeObjectRetain();
      v33 = sub_2347CDE54((uint64_t)v10);
      if ((v34 & 1) != 0)
      {
        v35 = v33;
        v36 = v7;
        v37 = a2;
        v38 = a1;
        v39 = *(_QWORD *)(v31 + 56);
        v40 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        v41 = v10;
        v42 = *(_QWORD *)(v40 - 8);
        v43 = v39 + *(_QWORD *)(v42 + 72) * v35;
        a1 = v38;
        a2 = v37;
        v7 = v36;
        v8 = v48;
        sub_23480DD54(v43, (uint64_t)v7, type metadata accessor for ModelContext.WeakAnyPersistentObject);
        v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56);
        v10 = v41;
        v44(v7, 0, 1, v40);
      }
      else
      {
        v40 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v7, 1, 1, v40);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v7, 1, 1, v40);
    }
    v13 = v55;
    type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v7, 1, v40))
    {
      sub_234810544((uint64_t)v7, &qword_2542583D8);
LABEL_10:
      sub_23480DD98((uint64_t)v10, type metadata accessor for PersistentIdentifier);

      v12 = v54;
      if (a1 < 0)
        goto LABEL_31;
      goto LABEL_11;
    }
    v45 = MEMORY[0x23494676C](v7);
    v46 = *((_QWORD *)v7 + 1);
    sub_234810544((uint64_t)v7, &qword_2542583D8);
    if (!v45)
      goto LABEL_10;
    sub_23480DD98((uint64_t)v10, type metadata accessor for PersistentIdentifier);
    sub_2347A0750(v56, v45, v46);

    swift_unknownObjectRelease();
    v12 = v54;
    if (a1 < 0)
      goto LABEL_31;
LABEL_11:
    if (!v13)
      break;
    v55 = (v13 - 1) & v13;
    v19 = __clz(__rbit64(v13)) | (v12 << 6);
    v20 = v12;
LABEL_29:
    v24 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v19);
    if (!v24)
      goto LABEL_43;
  }
  v21 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    return;
  }
  if (v21 >= v51)
    goto LABEL_43;
  v22 = *(_QWORD *)(v52 + 8 * v21);
  v20 = v12 + 1;
  if (v22)
    goto LABEL_28;
  v20 = v12 + 2;
  if (v12 + 2 >= v51)
    goto LABEL_43;
  v22 = *(_QWORD *)(v52 + 8 * v20);
  if (v22)
    goto LABEL_28;
  v20 = v12 + 3;
  if (v12 + 3 >= v51)
    goto LABEL_43;
  v22 = *(_QWORD *)(v52 + 8 * v20);
  if (v22)
    goto LABEL_28;
  v20 = v12 + 4;
  if (v12 + 4 >= v51)
    goto LABEL_43;
  v22 = *(_QWORD *)(v52 + 8 * v20);
  if (v22)
    goto LABEL_28;
  v20 = v12 + 5;
  if (v12 + 5 >= v51)
    goto LABEL_43;
  v22 = *(_QWORD *)(v52 + 8 * v20);
  if (v22)
  {
LABEL_28:
    v55 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v20 << 6);
    goto LABEL_29;
  }
  v23 = v12 + 6;
  while (v51 != v23)
  {
    v22 = *(_QWORD *)(v52 + 8 * v23++);
    if (v22)
    {
      v20 = v23 - 1;
      goto LABEL_28;
    }
  }
LABEL_43:
  sub_23480FA58();
}

void sub_23480C660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[13];

  v47[2] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542583D8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23486FDC4();
    sub_23480FA60(0, (unint64_t *)&qword_254257600);
    sub_23480FA00();
    sub_23486FA88();
    a1 = v56[5];
    v52 = v56[6];
    v11 = v56[7];
    v12 = v56[8];
    v13 = v56[9];
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 56);
    v52 = a1 + 56;
    v16 = ~v14;
    v17 = -v14;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v13 = v18 & v15;
    swift_bridgeObjectRetain();
    v11 = v16;
    v12 = 0;
  }
  v47[0] = v11;
  v50 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v51 = (unint64_t)(v11 + 64) >> 6;
  v48 = v8;
  v49 = MEMORY[0x24BEE4AD0] + 8;
  while (a1 < 0)
  {
    v21 = sub_23486FE24();
    if (!v21)
      goto LABEL_45;
    v56[12] = v21;
    sub_23480FA60(0, (unint64_t *)&qword_254257600);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v22 = (id)v56[0];
    swift_unknownObjectRelease();
    v20 = v12;
    v55 = v13;
    if (!v22)
      goto LABEL_45;
LABEL_34:
    v54 = v20;
    type metadata accessor for PersistentIdentifierImplementation(0);
    swift_allocObject();
    v26 = v22;
    v27 = sub_234854878(v26);
    *(_QWORD *)&v10[*(int *)(v8 + 20)] = v27;
    v28 = v27 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
    v29 = sub_23486F440();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v10, v28, v29);
    v30 = (uint64_t *)(a2 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration);
    swift_beginAccess();
    v31 = *v30;
    if (*(_QWORD *)(*v30 + 16))
    {
      swift_bridgeObjectRetain();
      v32 = sub_2347CDE54((uint64_t)v10);
      if ((v33 & 1) != 0)
      {
        v34 = v32;
        v35 = v7;
        v36 = a1;
        v37 = *(_QWORD *)(v31 + 56);
        v38 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        v53 = v26;
        v39 = v10;
        v40 = a2;
        v41 = *(_QWORD *)(v38 - 8);
        v42 = v37 + *(_QWORD *)(v41 + 72) * v34;
        a1 = v36;
        v7 = v35;
        v8 = v48;
        sub_23480DD54(v42, (uint64_t)v7, type metadata accessor for ModelContext.WeakAnyPersistentObject);
        v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56);
        a2 = v40;
        v10 = v39;
        v26 = v53;
        v43(v7, 0, 1, v38);
      }
      else
      {
        v38 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v7, 1, 1, v38);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v7, 1, 1, v38);
    }
    type metadata accessor for ModelContext.WeakAnyPersistentObject(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v7, 1, v38))
    {
      sub_234810544((uint64_t)v7, &qword_2542583D8);
LABEL_9:
      sub_23480DD98((uint64_t)v10, type metadata accessor for PersistentIdentifier);

      goto LABEL_10;
    }
    v44 = MEMORY[0x23494676C](v7);
    v45 = *((_QWORD *)v7 + 1);
    sub_234810544((uint64_t)v7, &qword_2542583D8);
    if (!v44)
      goto LABEL_9;
    sub_23480DD98((uint64_t)v10, type metadata accessor for PersistentIdentifier);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    if ((sub_2347E7588(ObjectType, v45) & 1) != 0)
    {
      sub_2347A0750(v56, v44, v45);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
LABEL_10:
    v12 = v54;
    v13 = v55;
  }
  if (v13)
  {
    v55 = (v13 - 1) & v13;
    v19 = __clz(__rbit64(v13)) | (v12 << 6);
    v20 = v12;
LABEL_33:
    v22 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v19);
    if (!v22)
      goto LABEL_45;
    goto LABEL_34;
  }
  v23 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v23 >= v51)
      goto LABEL_45;
    v24 = *(_QWORD *)(v52 + 8 * v23);
    v20 = v12 + 1;
    if (!v24)
    {
      v20 = v12 + 2;
      if (v12 + 2 >= v51)
        goto LABEL_45;
      v24 = *(_QWORD *)(v52 + 8 * v20);
      if (!v24)
      {
        v20 = v12 + 3;
        if (v12 + 3 >= v51)
          goto LABEL_45;
        v24 = *(_QWORD *)(v52 + 8 * v20);
        if (!v24)
        {
          v20 = v12 + 4;
          if (v12 + 4 >= v51)
            goto LABEL_45;
          v24 = *(_QWORD *)(v52 + 8 * v20);
          if (!v24)
          {
            v20 = v12 + 5;
            if (v12 + 5 >= v51)
              goto LABEL_45;
            v24 = *(_QWORD *)(v52 + 8 * v20);
            if (!v24)
            {
              v25 = v12 + 6;
              while (v51 != v25)
              {
                v24 = *(_QWORD *)(v52 + 8 * v25++);
                if (v24)
                {
                  v20 = v25 - 1;
                  goto LABEL_32;
                }
              }
LABEL_45:
              sub_23480FA58();
              return;
            }
          }
        }
      }
    }
LABEL_32:
    v55 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_23480CBEC(unint64_t a1, void (*a2)(id, id))
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  void *v22;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v21 = 0;
    v3 = 0;
    v4 = 0;
    v5 = sub_23486FFC8() | 0x8000000000000000;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v3 = ~v6;
    v21 = a1 + 64;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v4 = v8 & *(_QWORD *)(a1 + 64);
    v5 = a1;
  }
  swift_bridgeObjectRetain();
  v9 = 0;
  v20 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v10 = (v4 - 1) & v4;
      v11 = __clz(__rbit64(v4)) | (v9 << 6);
      v12 = v9;
      goto LABEL_29;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v15 >= v20)
      goto LABEL_32;
    v16 = *(_QWORD *)(v21 + 8 * v15);
    v12 = v9 + 1;
    if (!v16)
    {
      v12 = v9 + 2;
      if (v9 + 2 >= v20)
        goto LABEL_32;
      v16 = *(_QWORD *)(v21 + 8 * v12);
      if (!v16)
      {
        v12 = v9 + 3;
        if (v9 + 3 >= v20)
          goto LABEL_32;
        v16 = *(_QWORD *)(v21 + 8 * v12);
        if (!v16)
        {
          v12 = v9 + 4;
          if (v9 + 4 >= v20)
            goto LABEL_32;
          v16 = *(_QWORD *)(v21 + 8 * v12);
          if (!v16)
          {
            v12 = v9 + 5;
            if (v9 + 5 >= v20)
              goto LABEL_32;
            v16 = *(_QWORD *)(v21 + 8 * v12);
            if (!v16)
            {
              v17 = v9 + 6;
              while (v20 != v17)
              {
                v16 = *(_QWORD *)(v21 + 8 * v17++);
                if (v16)
                {
                  v12 = v17 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_23480FA58();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_29:
    v18 = 8 * v11;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    v13 = *(id *)(*(_QWORD *)(v5 + 48) + v18);
    v14 = v19;
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      a2(v13, v14);

      v9 = v12;
      v4 = v10;
      if ((v5 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_23486FFEC())
      {
        sub_23480FA60(0, (unint64_t *)&qword_254257600);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v22;
        swift_unknownObjectRelease();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v14 = v22;
        swift_unknownObjectRelease();
        v12 = v9;
        v10 = v4;
        if (v22)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_23480CED0(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257BB8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v24 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v24)
        return swift_release();
      v20 = *(_QWORD *)(v23 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v24)
          return swift_release();
        v20 = *(_QWORD *)(v23 + 8 * v12);
        if (!v20)
        {
          v12 = v19 + 3;
          if (v19 + 3 >= v24)
            return swift_release();
          v20 = *(_QWORD *)(v23 + 8 * v12);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v14 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_5:
    v15 = *(_QWORD *)(a1 + 48);
    v16 = type metadata accessor for PersistentIdentifier(0);
    sub_23480DD54(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, (uint64_t)v6, type metadata accessor for PersistentIdentifier);
    v17 = *(_QWORD *)(a1 + 56) + 40 * v14;
    v18 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_23480FB70(v17, v18);
    a2(v6, v18);
    result = sub_234810544((uint64_t)v6, &qword_254257BB8);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
    return swift_release();
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23480D108(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  void (*v24)(char *, uint64_t);

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257BC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 64);
  v22 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v23 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23)
      return swift_release();
    v19 = *(_QWORD *)(v22 + 8 * v18);
    ++v11;
    if (!v19)
    {
      v11 = v18 + 1;
      if (v18 + 1 >= v23)
        return swift_release();
      v19 = *(_QWORD *)(v22 + 8 * v11);
      if (!v19)
      {
        v11 = v18 + 2;
        if (v18 + 2 >= v23)
          return swift_release();
        v19 = *(_QWORD *)(v22 + 8 * v11);
        if (!v19)
        {
          v11 = v18 + 3;
          if (v18 + 3 >= v23)
            return swift_release();
          v19 = *(_QWORD *)(v22 + 8 * v11);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v19 - 1) & v19;
    v13 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8) + 72) * v13;
    sub_23480DD54(v14 + v15, (uint64_t)v5, type metadata accessor for PersistentIdentifier);
    v16 = *(_QWORD *)(a1 + 56) + v15;
    v17 = (uint64_t)&v5[*(int *)(v3 + 48)];
    sub_23480DD54(v16, v17, type metadata accessor for PersistentIdentifier);
    v24(v5, v17);
    result = sub_234810544((uint64_t)v5, &qword_254257BC0);
  }
  v20 = v18 + 4;
  if (v20 >= v23)
    return swift_release();
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
  {
    v11 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v23)
      return swift_release();
    v19 = *(_QWORD *)(v22 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23480D34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t i;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t j;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542582E8);
  v4 = MEMORY[0x24BDAC7A8](v33);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (uint64_t)&v29 - v7;
  v8 = *(_QWORD *)(a1 + 64);
  v30 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v31 = (unint64_t)(v9 + 63) >> 6;
  v34 = a1;
  result = swift_bridgeObjectRetain();
  i = 0;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (i << 6);
    }
    else
    {
      v16 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_34;
      if (v16 >= v31)
        return swift_release();
      v17 = *(_QWORD *)(v30 + 8 * v16);
      ++i;
      if (!v17)
      {
        i = v16 + 1;
        if (v16 + 1 >= v31)
          return swift_release();
        v17 = *(_QWORD *)(v30 + 8 * i);
        if (!v17)
        {
          i = v16 + 2;
          if (v16 + 2 >= v31)
            return swift_release();
          v17 = *(_QWORD *)(v30 + 8 * i);
          if (!v17)
          {
            i = v16 + 3;
            if (v16 + 3 >= v31)
              return swift_release();
            v17 = *(_QWORD *)(v30 + 8 * i);
            if (!v17)
            {
              v18 = v16 + 4;
              if (v18 >= v31)
                return swift_release();
              v17 = *(_QWORD *)(v30 + 8 * v18);
              for (i = v18; !v17; ++v18)
              {
                i = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_35;
                if (i >= v31)
                  return swift_release();
                v17 = *(_QWORD *)(v30 + 8 * i);
              }
            }
          }
        }
      }
      v11 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (i << 6);
    }
    v19 = v34;
    v20 = *(_QWORD *)(v34 + 48);
    v21 = type metadata accessor for PersistentIdentifier(0);
    v22 = v32;
    sub_23480DD54(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v15, v32, type metadata accessor for PersistentIdentifier);
    v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v15);
    v24 = v33;
    *(_QWORD *)(v22 + *(int *)(v33 + 48)) = v23;
    sub_23480FD14(v22, (uint64_t)v6, &qword_2542582E8);
    v25 = (uint64_t)v6;
    v26 = *(_QWORD *)&v6[*(int *)(v24 + 48)];
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = sub_23487001C();
      v27 = result;
      if (!result)
        goto LABEL_4;
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      if (!v27)
        goto LABEL_4;
    }
    if (v27 < 1)
      break;
    for (j = 0; j != v27; ++j)
    {
      if ((v26 & 0xC000000000000001) != 0)
        MEMORY[0x234945A1C](j, v26);
      else
        swift_retain();
      sub_2347C2054(a2);
      swift_release();
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v6 = (char *)v25;
    result = sub_234810544(v25, &qword_2542582E8);
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23480D674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  void (*v29)(uint64_t, uint64_t);
  char v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45[5];
  _QWORD v46[7];

  v2 = v1;
  v4 = type metadata accessor for EditingState(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258868);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ModelConfiguration();
  v42 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v41 = (uint64_t)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  swift_weakInit();
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_DWORD *)(v1 + 57) = 0;
  *(_WORD *)(v1 + 61) = 0;
  v12 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = v12;
  *(_QWORD *)(v1 + 80) = v12;
  *(_QWORD *)(v1 + 88) = v12;
  *(_QWORD *)(v1 + 96) = v12;
  *(_QWORD *)(v1 + 104) = v12;
  *(_QWORD *)(v1 + 112) = v12;
  *(_QWORD *)(v1 + 120) = v12;
  *(_QWORD *)(v1 + 128) = v12;
  *(_QWORD *)(v1 + 136) = v12;
  v13 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 144) = 0;
  *(_QWORD *)(v2 + 152) = v13;
  *(_DWORD *)(v2 + 160) = 0;
  *(_BYTE *)(v2 + 164) = 0;
  v14 = v2 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  *(_DWORD *)(v2 + 168) = 0;
  sub_23486F4A0();
  v15 = (_QWORD *)(v14 + *(int *)(v4 + 20));
  *v15 = 0;
  v15[1] = 0;
  *(_BYTE *)(v14 + *(int *)(v4 + 24)) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9SwiftData12ModelContext_timer) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9SwiftData12ModelContext_hasAutosaveObservers) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9SwiftData12ModelContext_AUTOSAVE_MAX_TIME) = 0x403D000000000000;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9SwiftData12ModelContext_contextChanged) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveDelay) = 0;
  v39[0] = v2 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9SwiftData12ModelContext__objectRegistration) = v13;
  _SD_Initialize_framework();
  *(_QWORD *)(v2 + 16) = a1;
  swift_retain();
  swift_release();
  v16 = a1 + 48;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 48) + 16))
  {
    *(_BYTE *)(v2 + 62) = 0;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(*(_QWORD *)v16 + 16);
    if (v18)
    {
      v40 = v2;
      v19 = v17 + 32;
      v39[1] = v17;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v43 = 0;
      do
      {
        v44 = v18;
        sub_2348105AC(v19, (uint64_t)v46, &qword_254258748);
        v27 = v46[6];
        ObjectType = swift_getObjectType();
        v29 = *(void (**)(uint64_t, uint64_t))(v27 + 56);
        v45[3] = swift_getAssociatedTypeWitness();
        v45[4] = swift_getAssociatedConformanceWitness();
        __swift_allocate_boxed_opaque_existential_1Tm_0(v45);
        v29(ObjectType, v27);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254258738);
        v30 = swift_dynamicCast();
        v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
        if ((v30 & 1) != 0)
        {
          v31(v9, 0, 1, v10);
          v20 = (uint64_t)v9;
          v21 = v9;
          v22 = v6;
          v23 = v14;
          v24 = v41;
          sub_23480E3CC(v20, v41, (uint64_t (*)(_QWORD))type metadata accessor for ModelConfiguration);
          v25 = *(unsigned __int8 *)(v24 + *(int *)(v10 + 52));
          v26 = v24;
          v14 = v23;
          v6 = v22;
          v9 = v21;
          sub_23480DD98(v26, (uint64_t (*)(_QWORD))type metadata accessor for ModelConfiguration);
          v43 |= v25;
        }
        else
        {
          v31(v9, 1, 1, v10);
          sub_234810544((uint64_t)v9, &qword_254258868);
        }
        sub_23480DD54(v14, (uint64_t)v6, type metadata accessor for EditingState);
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 112))(v6, ObjectType, v27);
        swift_unknownObjectRelease();
        sub_23480DD98((uint64_t)v6, type metadata accessor for EditingState);
        sub_234797650((uint64_t)v46);
        v19 += 56;
        v18 = v44 - 1;
      }
      while (v44 != 1);
      swift_bridgeObjectRelease();
      v2 = v40;
    }
    else
    {
      v43 = 0;
    }
    if (qword_2542586E8 != -1)
      swift_once();
    v32 = qword_25425B110;
    v33 = *(_QWORD *)algn_25425B118;
    if ((qword_25425B110 != 0x65666E6969726973 || *(_QWORD *)algn_25425B118 != 0xEE006465636E6572)
      && (sub_2348702E0() & 1) == 0
      && (v32 != 0xD000000000000014 || v33 != 0x8000000234874920)
      && (sub_2348702E0() & 1) == 0
      && _SD_is_mainqueue_context() | v43 & 1
      && (*(_BYTE *)(v2 + 62) & 1) == 0)
    {
      v34 = (_BYTE *)v39[0];
      swift_beginAccess();
      *v34 = 1;
      sub_2347EEC94();
      if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        if (_CFRunLoopCurrentIsMain())
        {
          v35 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
          v36 = swift_allocObject();
          swift_weakInit();
          swift_retain();
          v37 = sub_234781E94(0xA0uLL, (uint64_t)sub_2348105A4, v36);
          swift_release_n();

          *(_QWORD *)(v2 + 32) = v37;
          swift_release();
        }
      }
      sub_2347EEC94();
      *(_BYTE *)(v2 + 62) = 1;
    }
    return v2;
  }
  else
  {
    v46[0] = 0;
    v46[1] = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    v45[0] = a1;
    type metadata accessor for ModelContainer();
    sub_23486FF74();
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_23480DD34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t type metadata accessor for ModelContext.WeakAnyPersistentObject(uint64_t a1)
{
  return sub_23480DE14(a1, (uint64_t *)&unk_2542583C8);
}

uint64_t sub_23480DD54(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23480DD98(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23480DDD4()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23480DDE0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_2347F2708(a1, a2, a3, v3[4], v3[5], v3[2], v3[3]);
}

uint64_t type metadata accessor for ModelContext(uint64_t a1)
{
  return sub_23480DE14(a1, (uint64_t *)&unk_254258AC0);
}

uint64_t type metadata accessor for DataStoreSaveChangesRequestBuilder(uint64_t a1)
{
  return sub_23480DE14(a1, (uint64_t *)&unk_254257A60);
}

uint64_t sub_23480DE14(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23480DE48(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  int64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;

  v6 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    while (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      if (a2 != 2)
      {
LABEL_21:
        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v14 + 8);
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        PersistentModel.isDeleted.getter(ObjectType, v18);
        result = swift_unknownObjectRelease();
      }
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v15 >= v10)
      goto LABEL_22;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_22;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_22;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    if (a2 != 2)
      goto LABEL_21;
  }
  v17 = v15 + 3;
  if (v17 < v10)
  {
    v16 = *(_QWORD *)(v6 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        v12 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        if (v12 >= v10)
          goto LABEL_22;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        ++v17;
        if (v16)
          goto LABEL_20;
      }
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    v12 = v17;
    goto LABEL_20;
  }
LABEL_22:
  result = swift_release();
  if ((a3 & 1) == 0)
  {

    return 1;
  }
  v20 = 0;
  v21 = *(_BYTE *)(v28 + 59);
  *(_BYTE *)(v28 + 59) = 1;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v22 + 63) >> 6;
  while (2)
  {
    if (v24)
      goto LABEL_28;
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_50;
    if (v26 >= v25)
    {
LABEL_47:

      *(_BYTE *)(v28 + 59) = v21;
      return 1;
    }
    v24 = *(_QWORD *)(v6 + 8 * v26);
    ++v20;
    if (v24)
      goto LABEL_28;
    v20 = v26 + 1;
    if (v26 + 1 >= v25)
      goto LABEL_47;
    v24 = *(_QWORD *)(v6 + 8 * v20);
    if (v24)
      goto LABEL_28;
    v20 = v26 + 2;
    if (v26 + 2 >= v25)
      goto LABEL_47;
    v24 = *(_QWORD *)(v6 + 8 * v20);
    if (v24)
      goto LABEL_28;
    v20 = v26 + 3;
    if (v26 + 3 >= v25)
      goto LABEL_47;
    v24 = *(_QWORD *)(v6 + 8 * v20);
    if (v24)
      goto LABEL_28;
    v20 = v26 + 4;
    if (v26 + 4 >= v25)
      goto LABEL_47;
    v24 = *(_QWORD *)(v6 + 8 * v20);
    if (v24)
    {
LABEL_28:
      v24 &= v24 - 1;
      continue;
    }
    break;
  }
  v27 = v26 + 5;
  if (v27 >= v25)
    goto LABEL_47;
  v24 = *(_QWORD *)(v6 + 8 * v27);
  if (v24)
  {
    v20 = v27;
    goto LABEL_28;
  }
  while (1)
  {
    v20 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v20 >= v25)
      goto LABEL_47;
    v24 = *(_QWORD *)(v6 + 8 * v20);
    ++v27;
    if (v24)
      goto LABEL_28;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_23480E0F0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a6;
  v13[3] = a7;
  v13[4] = a2;
  v13[5] = a3;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a6;
  v14[3] = a7;
  v14[4] = a2;
  v14[5] = a3;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a6;
  v15[3] = a7;
  v15[4] = a2;
  v15[5] = a3;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a2;
  v16[5] = a3;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  sub_234812B78(a1, a4, a5, (uint64_t)sub_234810410, (uint64_t)v13, (uint64_t)sub_234810428, (uint64_t)v14, (uint64_t)sub_234810440, (uint64_t)v15, (uint64_t)sub_234810488, (uint64_t)v16, 0, 0, 0, 0, a4, a4, a5, a6,
    a6,
    a7);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23480E258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v19;

  v3 = v2;
  v5 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v3 + 24) = v5;
  sub_23480DD54(a1, v3 + OBJC_IVAR____TtC9SwiftData34DataStoreSaveChangesRequestBuilder_editingState, type metadata accessor for EditingState);
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v7 = (uint64_t *)(a2 + 40);
    do
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      ObjectType = swift_getObjectType();
      v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 40);
      swift_unknownObjectRetain();
      v12 = v11(ObjectType, v9);
      v14 = v13;
      swift_beginAccess();
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = *(_QWORD *)(v3 + 16);
      *(_QWORD *)(v3 + 16) = 0x8000000000000000;
      sub_2347A5B74(v8, v12, v14, isUniquelyReferenced_nonNull_native, &v19, ObjectType, v9);
      *(_QWORD *)(v3 + 16) = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      v16 = swift_getObjectType();
      sub_234805860(v16, v3, v8, v9);
      swift_unknownObjectRelease();
      v7 += 2;
      --v6;
    }
    while (v6);
  }
  sub_23480DD98(a1, type metadata accessor for EditingState);
  return v3;
}

uint64_t sub_23480E3CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_23480E410(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;

  v6 = v2[2];
  v5 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v10 = v2[7];
  v11 = v2[8];
  ObjectType = swift_getObjectType();
  sub_23480FD58(a1, a2, v7, v8, v9, v10, v11, v6, ObjectType, v5);
}

void sub_23480E49C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  ObjectType = swift_getObjectType();
  sub_2347FC910(ObjectType, a1, a2, v7, v8, v9, v5, ObjectType, v6, a2);
}

uint64_t sub_23480E518()
{
  return swift_deallocObject();
}

uint64_t sub_23480E528(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v5 = v2[2];
  v6 = v2[3];
  v8 = v2[4];
  v7 = v2[5];
  ObjectType = swift_getObjectType();
  return sub_2347FED5C(ObjectType, a1, a2, v8, v7, v5, ObjectType, v6, a2);
}

uint64_t sub_23480E5A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2347FF8B4(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

unint64_t sub_23480E5C0()
{
  unint64_t result;

  result = qword_256189628;
  if (!qword_256189628)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for SwiftDataError, &type metadata for SwiftDataError);
    atomic_store(result, (unint64_t *)&qword_256189628);
  }
  return result;
}

unint64_t sub_23480E608()
{
  unint64_t result;

  result = qword_256189630;
  if (!qword_256189630)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for ModelContext.NotificationKey, &type metadata for ModelContext.NotificationKey);
    atomic_store(result, (unint64_t *)&qword_256189630);
  }
  return result;
}

id sub_23480E654@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 40);
  *a2 = v4;
  return v4;
}

void sub_23480E698(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_23480AFB8(v1);

}

uint64_t sub_23480E6D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
  swift_beginAccess();
  return sub_23480DD54(v3, a2, type metadata accessor for EditingState);
}

uint64_t sub_23480E734@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_23480E784(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9SwiftData12ModelContext_autosaveEnabled);
  swift_beginAccess();
  *v3 = v2;
  sub_2347EEC94();
}

uint64_t destroy for SwiftDataError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s9SwiftData14SwiftDataErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SwiftDataError(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SwiftDataError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SwiftDataError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SwiftDataError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SwiftDataError()
{
  return &type metadata for SwiftDataError;
}

uint64_t sub_23480E960()
{
  return type metadata accessor for ModelContext(0);
}

uint64_t sub_23480E968()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EditingState(319);
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for ModelContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModelContext.author.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ModelContext.author.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ModelContext.author.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ModelContext.undoManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ModelContext.undoManager.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of ModelContext.undoManager.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of ModelContext.insertedModelsArray.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of ModelContext.changedModelsArray.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of ModelContext.deletedModelsArray.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of ModelContext.editingState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1280))();
}

uint64_t dispatch thunk of ModelContext.editingState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1288))();
}

uint64_t dispatch thunk of ModelContext.editingState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1296))();
}

uint64_t dispatch thunk of ModelContext.container.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1304))();
}

uint64_t dispatch thunk of ModelContext.autosaveEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1440))();
}

uint64_t dispatch thunk of ModelContext.autosaveEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1448))();
}

uint64_t dispatch thunk of ModelContext.autosaveEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1456))();
}

uint64_t dispatch thunk of ModelContext.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1520))();
}

uint64_t dispatch thunk of ModelContext.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1552))();
}

uint64_t dispatch thunk of ModelContext.hasChanges.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1600))();
}

uint64_t dispatch thunk of ModelContext.model(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1664))();
}

uint64_t dispatch thunk of ModelContext.registeredModel<A>(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1688))();
}

uint64_t dispatch thunk of ModelContext.insert<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1704))();
}

uint64_t dispatch thunk of ModelContext.rollback()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1744))();
}

uint64_t dispatch thunk of ModelContext.processPendingChanges()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1984))();
}

uint64_t dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2304))();
}

uint64_t dispatch thunk of ModelContext.delete<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2312))();
}

uint64_t dispatch thunk of ModelContext.transaction(block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2360))();
}

uint64_t dispatch thunk of ModelContext.save()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2368))();
}

uint64_t dispatch thunk of ModelContext.enumerate<A>(_:batchSize:allowEscapingMutations:block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2376))();
}

uint64_t dispatch thunk of ModelContext.fetch<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2392))();
}

uint64_t dispatch thunk of ModelContext.fetchCount<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2400))();
}

uint64_t dispatch thunk of ModelContext.fetch<A>(_:batchSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2408))();
}

uint64_t dispatch thunk of ModelContext.fetchIdentifiers<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2416))();
}

uint64_t dispatch thunk of ModelContext.fetchIdentifiers<A>(_:batchSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2424))();
}

uint64_t dispatch thunk of ModelContext.fetchHistory<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2456))();
}

uint64_t dispatch thunk of ModelContext.deleteHistory<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2464))();
}

uint64_t type metadata accessor for ModelContext.ProcessPendingChangesContext()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ModelContext._UndoPayload()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ModelContext._UndoModifiedDeletedList()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for ModelContext.NotificationKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelContext.NotificationKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23480EE10 + 4 * byte_234879DBE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23480EE44 + 4 * byte_234879DB9[v4]))();
}

uint64_t sub_23480EE44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23480EE4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23480EE54);
  return result;
}

uint64_t sub_23480EE60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23480EE68);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23480EE6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23480EE74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelContext.NotificationKey()
{
  return &type metadata for ModelContext.NotificationKey;
}

uint64_t type metadata accessor for _SwiftDataContextScope()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _SwiftDataContextThreadLocalState()
{
  return objc_opt_self();
}

uint64_t sub_23480EED4()
{
  return type metadata accessor for DataStoreSaveChangesRequestBuilder(0);
}

uint64_t sub_23480EEDC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EditingState(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23480EF5C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DataStoreSaveChangesRequestBuilder.StoreBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataStoreSaveChangesRequestBuilder.StoreBuilder);
}

uint64_t type metadata accessor for DataStoreSaveChangesRequestBuilder.AnyStoreBuilderBox()
{
  return objc_opt_self();
}

_OWORD *initializeBufferWithCopyOfBuffer for ModelContext.AnyPersistentObject(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for ModelContext.AnyPersistentObject()
{
  return swift_unknownObjectRelease();
}

_QWORD *assignWithCopy for ModelContext.AnyPersistentObject(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *assignWithTake for ModelContext.AnyPersistentObject(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  *a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelContext.AnyPersistentObject(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelContext.AnyPersistentObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelContext.AnyPersistentObject()
{
  return &type metadata for ModelContext.AnyPersistentObject;
}

uint64_t getEnumTagSinglePayload for SwiftDataError._Error(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SwiftDataError._Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_23480F1FC + 4 * byte_234879DC8[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_23480F230 + 4 * byte_234879DC3[v4]))();
}

uint64_t sub_23480F230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23480F238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23480F240);
  return result;
}

uint64_t sub_23480F24C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23480F254);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_23480F258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23480F260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23480F26C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23480F278(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SwiftDataError._Error()
{
  return &type metadata for SwiftDataError._Error;
}

uint64_t *sub_23480F290(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    a1[1] = a2[1];
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23486F440();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = type metadata accessor for PersistentIdentifier(0);
    *(_QWORD *)&v8[*(int *)(v11 + 20)] = *(_QWORD *)&v9[*(int *)(v11 + 20)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_23480F340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_unknownObjectWeakDestroy();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for PersistentIdentifier(0);
  return swift_release();
}

uint64_t sub_23480F398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 20);
  v8 = v6 + v7;
  v9 = a2 + v7;
  v10 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_23480F418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 20);
  v8 = v6 + v7;
  v9 = a2 + v7;
  v10 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23480F4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 20);
  v8 = v6 + v7;
  v9 = a2 + v7;
  v10 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  return a1;
}

uint64_t sub_23480F520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 20);
  v8 = v6 + v7;
  v9 = a2 + v7;
  v10 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)(v8 + *(int *)(v11 + 20)) = *(_QWORD *)(v9 + *(int *)(v11 + 20));
  swift_release();
  return a1;
}

uint64_t sub_23480F5A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23480F5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    else
      return 0;
  }
  else
  {
    v7 = type metadata accessor for PersistentIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v7);
  }
}

uint64_t sub_23480F62C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23480F638(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
    *((_QWORD *)result + 1) = 1;
  }
  else
  {
    v7 = type metadata accessor for PersistentIdentifier(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23480F6B0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PersistentIdentifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23480F724()
{
  return sub_23480F7E0(&qword_256189668, type metadata accessor for ModelContext.WeakAnyPersistentObject, (uint64_t)&unk_23487A320);
}

unint64_t sub_23480F754()
{
  unint64_t result;

  result = qword_256189670;
  if (!qword_256189670)
  {
    result = MEMORY[0x2349465EC](&unk_23487A3C8, &type metadata for SwiftDataError._Error);
    atomic_store(result, (unint64_t *)&qword_256189670);
  }
  return result;
}

unint64_t sub_23480F79C()
{
  unint64_t result;

  result = qword_2542576D0;
  if (!qword_2542576D0)
  {
    result = MEMORY[0x2349465EC](&unk_23487A3F0, &type metadata for ModelContext.AnyPersistentObject);
    atomic_store(result, (unint64_t *)&qword_2542576D0);
  }
  return result;
}

uint64_t sub_23480F7E0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2349465EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm_2(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23480F844(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23480F85C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23480561C(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD ***)(v2 + 24));
}

uint64_t sub_23480F864()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[32];

  sub_234785C80(v0 + 16, (uint64_t)v6);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for DataStoreSaveChangesRequestBuilder.StoreBuilder(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3);
  swift_dynamicCast();
  return v5;
}

uint64_t sub_23480F918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_234801034(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23480F928()
{
  return 16;
}

__n128 sub_23480F934(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_23480F940()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254257500;
  if (!qword_254257500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254257510);
    v2[0] = sub_23480F7E0(&qword_254257BD8, type metadata accessor for PersistentIdentifier, (uint64_t)&protocol conformance descriptor for PersistentIdentifier);
    v2[1] = sub_23480F7E0(&qword_254257BD0, type metadata accessor for PersistentIdentifier, (uint64_t)&protocol conformance descriptor for PersistentIdentifier);
    result = MEMORY[0x2349465EC](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254257500);
  }
  return result;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_23480FA00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256189690;
  if (!qword_256189690)
  {
    v1 = sub_23480FA60(255, (unint64_t *)&qword_254257600);
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_256189690);
  }
  return result;
}

uint64_t sub_23480FA58()
{
  return swift_release();
}

uint64_t sub_23480FA60(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23480FA98(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_23480FADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23480FB24(uint64_t a1)
{
  uint64_t v1;

  return sub_2347F1B64(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_23480FB2C(void *a1, void *a2)
{
  uint64_t v2;

  return sub_2347EF98C(a1, a2, v2);
}

uint64_t sub_23480FB34(_QWORD *a1, uint64_t a2)
{
  assignWithTake for VariableMapping(a2, a1);
  return a2;
}

uint64_t sub_23480FB70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23480FBB4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23480FBD8()
{
  return sub_234800A18();
}

uint64_t sub_23480FBF4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2349465EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23480FC34(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_234800A84(a1, a2, v2[4], v2[2], v2[3]) & 1;
}

uint64_t sub_23480FC54@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 24);
  *a2 = *a1;
  a2[1] = v3;
  return swift_unknownObjectRetain();
}

void sub_23480FC74(uint64_t a1)
{
  uint64_t *v1;

  sub_2347FE90C(a1, v1[6], v1[7], v1[8], v1[9], v1[10], v1[2], v1[3], v1[4]);
}

uint64_t sub_23480FCA8(char **a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_2347FE6E4(a1, a2, v2[6], v2[2], v2[3], v2[4]) & 1;
}

uint64_t sub_23480FCCC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return PersistentModel.persistentModelID.getter(*(_QWORD *)(a2 + a1 - 32), *(_QWORD *)(a2 + a1 - 16), a3);
}

uint64_t sub_23480FCFC()
{
  return 32;
}

__n128 sub_23480FD08(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_23480FD14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_23480FD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  _QWORD v16[14];
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v16[7] = a6;
  v16[8] = a7;
  v18 = a5;
  v20 = a4;
  v21 = a3;
  v16[9] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_QWORD *)(v17 + 64);
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v19 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16[13] = (char *)v16 - v14;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v22 = a8;
  v23 = AssociatedTypeWitness;
  v24 = a10;
  v25 = AssociatedConformanceWitness;
  v16[12] = AssociatedConformanceWitness;
  type metadata accessor for DataStoreFetchResult();
}

uint64_t sub_234810304(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_2347FAE70(a1, a2, a3, v3[4], v3[5], v3[6], v3[7], v3[8], v3[2], v3[3]);
}

uint64_t sub_234810334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2347FB228(a1, a2, *(_QWORD *)(v2 + 32), *(_QWORD **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16));
}

uint64_t sub_234810344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2347FBE38(a1, a2, *(_QWORD *)(v2 + 32), *(uint64_t **)(v2 + 40), *(_QWORD *)(v2 + 48), *(uint64_t **)(v2 + 56));
}

uint64_t sub_234810354(uint64_t a1)
{
  uint64_t v1;

  return sub_2347FBF70(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
}

uint64_t sub_234810370(uint64_t a1)
{
  uint64_t v1;

  return sub_2347FC018(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_23481038C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2347FC2AC(*(uint64_t **)(v1 + 32), a1);
}

uint64_t sub_2348103AC()
{
  return sub_2347FC3B4();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_234810404()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_234810410(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2347F2834(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_23481041C()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_234810428(uint64_t *a1)
{
  uint64_t v1;

  return sub_2347F2910(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_234810434()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_234810440(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2347F2A88(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_23481044C()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t objectdestroyTm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 32));
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_234810488(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2347F2BE0(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_234810494(uint64_t a1)
{
  return sub_2348104C4(a1) & 1;
}

uint64_t sub_2348104AC(uint64_t a1)
{
  return sub_2348104C4(a1) & 1;
}

uint64_t sub_2348104C4(uint64_t a1)
{
  uint64_t *v1;

  return sub_2347F2D90(a1, v1[6], v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_2348104E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_234787AD0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_234810500()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_234810524()
{
  uint64_t v0;

  return sub_234787AE4(*(void **)(v0 + 16));
}

uint64_t sub_23481052C()
{
  return swift_deallocObject();
}

uint64_t sub_23481053C()
{
  uint64_t v0;

  return sub_2347976A8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_234810544(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_234810580()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2348105A4()
{
  return sub_2347EF120();
}

uint64_t sub_2348105AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2348105F4(uint64_t a1, uint64_t a2)
{
  return sub_23480E5A0(a1, a2);
}

uint64_t sub_234810608()
{
  return sub_2348103AC();
}

uint64_t sub_23481063C()
{
  swift_getMetatypeMetadata();
  return sub_23486F77C();
}

uint64_t PersistentModel.persistentModelID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 40))(v14, a1, a2);
  v9 = v15;
  v10 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  v11 = type metadata accessor for PersistentIdentifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11) == 1)
  {
    sub_23481927C((uint64_t)v8, &qword_2542576E0);
    __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v14);
    result = sub_234870004();
    __break(1u);
  }
  else
  {
    sub_2348107C0((uint64_t)v8, a3);
    return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v14);
  }
  return result;
}

uint64_t sub_2348107C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersistentIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_234810808(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD *__return_ptr))(a2 + 40))(v6);
  v2 = v7;
  v3 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v4 = sub_2348627EC(v2, v3);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v6);
  return v4;
}

uint64_t sub_234810868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  uint64_t v32;

  v4 = sub_23486F5D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (PersistentModel.modelContext.getter(a1, a2))
  {
    PersistentModel.persistentModelID.getter(a1, a2, (uint64_t)v10);
    v11 = *(_DWORD *)(sub_234810808(a1, a2) + 24);
    swift_release();
    sub_234800CEC(v31, v10, a1, a2);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(a2 + 48))(v31, a1, a2);
    v12 = sub_234810808(a1, a2);
    swift_release();
    sub_2347EB0B0((uint64_t)v10);
    *(_DWORD *)(v12 + 24) = v11;
    return swift_release();
  }
  else
  {
    sub_23486F5CC();
    swift_unknownObjectRetain_n();
    v14 = sub_23486F5C0();
    v15 = sub_23486FBC0();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = swift_slowAlloc();
      v29 = v4;
      v18 = v17;
      v28 = swift_slowAlloc();
      v32 = v28;
      *(_DWORD *)v18 = 136315394;
      v27 = v16;
      v26 = v14;
      PersistentModel.persistentModelID.getter(a1, a2, (uint64_t)v10);
      v19 = sub_23486F77C();
      v31[0] = sub_23478470C(v19, v20, &v32);
      sub_23486FCEC();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 40))(v31, a1, a2);
      v30 = a1;
      swift_getExtendedExistentialTypeMetadata();
      v21 = sub_23486F77C();
      v31[0] = sub_23478470C(v21, v22, &v32);
      sub_23486FCEC();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v23 = v26;
      _os_log_impl(&dword_234780000, v26, (os_log_type_t)v27, "Cannot fulfill future for %s without a context %s", (uint8_t *)v18, 0x16u);
      v24 = v28;
      swift_arrayDestroy();
      MEMORY[0x2349466D0](v24, -1, -1);
      MEMORY[0x2349466D0](v18, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v29);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t PersistentModel.modelContext.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(sub_234810808(a1, a2) + 16);
  swift_retain();
  swift_release();
  return v2;
}

uint64_t PersistentModel.getValue<A>(forKey:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  v7 = (_QWORD *)MEMORY[0x24BEE46A8];
  v8 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v8, a2) & 1) != 0)
    sub_234810868(v8, a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 40))(v13, v8, a2);
  v9 = v14;
  v10 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v11 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t, uint64_t))(v10 + 72))(a1, *(_QWORD *)(*v7 + v6 + 8), a3, v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v13);
  return v11;
}

{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  v7 = (_QWORD *)MEMORY[0x24BEE46A8];
  v8 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v8, a2) & 1) != 0)
    sub_234810868(v8, a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 40))(v13, v8, a2);
  v9 = v14;
  v10 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v11 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t, uint64_t))(v10 + 80))(a1, *(_QWORD *)(*(_QWORD *)(*v7 + v6 + 8) + 16), a3, v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v13);
  return v11;
}

{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  v7 = (_QWORD *)MEMORY[0x24BEE46A8];
  v8 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v8, a2) & 1) != 0)
    sub_234810868(v8, a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 40))(v12, v8, a2);
  v9 = v13;
  v10 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, uint64_t))(v10 + 64))(a1, *(_QWORD *)(*v7 + v6 + 8), a3, v9, v10);
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v12);
}

uint64_t sub_234810CE8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  ValueMetadata *v61;
  _QWORD *v62;
  _OWORD v63[6];

  v53 = a4;
  v50 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257390);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if (!a1[14])
    return result;
  v47 = a5;
  v52 = v6;
  swift_beginAccess();
  v16 = a1[9];
  v17 = a1[10];
  swift_bridgeObjectRetain();
  v18 = sub_2347A6250(v16, v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    swift_bridgeObjectRetain();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    *(_QWORD *)&v55 = a1;
    type metadata accessor for Schema.Relationship();
    sub_23486FF74();
    sub_23486F7DC();
    *(_QWORD *)&v55 = v52;
    sub_2348702BC();
LABEL_19:
    result = sub_234870004();
    __break(1u);
    return result;
  }
  v51 = a6;
  v49 = a3;
  swift_beginAccess();
  v19 = a1[13];
  if (!v19)
  {
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    *(_QWORD *)&v55 = a1;
    type metadata accessor for Schema.Relationship();
    sub_23486FF74();
    goto LABEL_19;
  }
  v20 = a1[12];
  swift_beginAccess();
  v21 = *(_QWORD *)(v18 + 104);
  v22 = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRetain();
  if (!v22)
  {
LABEL_17:
    swift_endAccess();
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486F7DC();
    sub_23486F7DC();
    *(_QWORD *)&v55 = v18;
    type metadata accessor for Schema.Entity();
    sub_23486FF74();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v23 = sub_2347CD9BC(v20, v19);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
  swift_endAccess();
  v54 = v25;
  swift_retain();
  swift_bridgeObjectRelease();
  v26 = v53;
  v27 = sub_234828A6C(v53, (uint64_t)v51);
  v46[1] = (uint64_t)v46;
  v62 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v61 = &type metadata for Schema.PropertyMetadata;
  sub_23486F4E8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254257398);
  sub_234819404(&qword_2542573A0, &qword_254257398, MEMORY[0x24BEE12C8]);
  v28 = sub_23486F830();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v28 + 16))
  {
    sub_2347C63D0(v28 + 32, (uint64_t)&v55);
  }
  else
  {
    v59 = 0u;
    v60 = 0u;
    v57 = 0u;
    v58 = 0u;
    v55 = 0u;
    v56 = 0u;
  }
  v29 = v51;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v55 + 1))
  {
    sub_23481927C((uint64_t)&v55, &qword_254257D78);
    *(_QWORD *)&v63[0] = 0;
    *((_QWORD *)&v63[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    *(_QWORD *)&v55 = v54;
    type metadata accessor for Schema.Relationship();
    sub_23486FF74();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v48 = v18;
  v51 = a1;
  v63[2] = v57;
  v63[3] = v58;
  v63[4] = v59;
  v63[5] = v60;
  v63[0] = v55;
  v63[1] = v56;
  v30 = v50;
  if ((sub_2347E174C(v26, (uint64_t)v29) & 1) != 0)
    sub_234810868(v26, (uint64_t)v29);
  sub_2347C63D0((uint64_t)v63, (uint64_t)&v55);
  v31 = swift_allocObject();
  v32 = v47;
  *(_QWORD *)(v31 + 16) = v47;
  *(_QWORD *)(v31 + 24) = v29;
  v33 = v58;
  *(_OWORD *)(v31 + 64) = v57;
  *(_OWORD *)(v31 + 80) = v33;
  v34 = v60;
  *(_OWORD *)(v31 + 96) = v59;
  *(_OWORD *)(v31 + 112) = v34;
  v35 = v56;
  *(_OWORD *)(v31 + 32) = v55;
  *(_OWORD *)(v31 + 48) = v35;
  v36 = v52;
  *(_QWORD *)(v31 + 128) = v52;
  v37 = v36;
  *(_QWORD *)(v31 + 136) = v54;
  *(_QWORD *)(v31 + 144) = v30;
  v38 = (_QWORD *)swift_allocObject();
  v46[0] = (uint64_t)v38;
  v38[2] = v32;
  v38[3] = v29;
  v38[4] = v30;
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v32;
  v39[3] = v29;
  v39[4] = v30;
  v39[5] = v37;
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = v32;
  v40[3] = v29;
  v40[4] = v30;
  v40[5] = v37;
  v41 = (_QWORD *)swift_allocObject();
  v42 = v49;
  v41[2] = v49;
  v41[3] = v32;
  v41[4] = v29;
  v43 = (_QWORD *)swift_allocObject();
  v43[2] = v42;
  v43[3] = v32;
  v43[4] = v29;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_234812B78(v51, v44, v45, (uint64_t)sub_234819088, v31, (uint64_t)sub_2348190C0, v46[0], (uint64_t)sub_2348190D0, (uint64_t)v39, (uint64_t)sub_2348190E0, (uint64_t)v40, (uint64_t)nullsub_13, (uint64_t)v41, (uint64_t)nullsub_14, (uint64_t)v43, v42, v42, v53, v32,
    v32,
    (uint64_t)v29);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_2347C640C((uint64_t)v63);
}

uint64_t PersistentModel.getValue<A, B>(forKey:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v8 = *a1;
  v9 = (_QWORD *)MEMORY[0x24BEE46A8];
  v10 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v10, a3) & 1) != 0)
    sub_234810868(v10, a3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v14, v10, a3);
  v11 = v15;
  v12 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 88))(a1, *(_QWORD *)(*v9 + v8 + 8), a2, a4, v11, v12);
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v14);
}

uint64_t sub_2348117B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[32];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2347EB29C(a1, (uint64_t)v8);
  v9 = type metadata accessor for PersistentIdentifier(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v10 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a3 + 56))(v15, a2, a3);
  v12 = *(_QWORD *)(v11 + 24);
  v13 = *(_QWORD *)(v11 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 40))(v8, v12, v13);
  return v10(v15, 0);
}

uint64_t sub_2348118A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[5];

  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_234810808(a1, a2);
  sub_2348181D4();
  swift_release();
  v8 = type metadata accessor for _DestroyedBackingData(0, a1, a2, v7);
  PersistentModel.persistentModelID.getter(a1, a2, (uint64_t)v6);
  v9 = sub_234810808(a1, a2);
  v10 = sub_23486278C(a1, (uint64_t)v6, v9);
  v13[3] = v8;
  v13[4] = MEMORY[0x2349465EC](&unk_23487DE80, v8);
  v13[0] = v10;
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a2 + 48))(v13, a1, a2);
}

uint64_t sub_2348119AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(sub_234810808(a2, a3) + 16) = a1;
  swift_retain();
  swift_release();
  return swift_release();
}

BOOL PersistentModel.hasChanges.getter(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(sub_234810808(a1, a2) + 24);
  swift_release();
  return (v2 & 0x3F) != 0;
}

uint64_t sub_234811A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  __int128 v7[2];
  _BYTE v8[32];
  _BYTE v9[40];

  sub_234785C80(a1, (uint64_t)v8);
  swift_getExtendedExistentialTypeMetadata();
  if (swift_dynamicCast())
  {
    sub_234818F60(v7, (uint64_t)v9);
    sub_234818F78((uint64_t)v9, (uint64_t)v7);
    (*(void (**)(__int128 *, uint64_t, uint64_t))(a3 + 48))(v7, a2, a3);
    sub_2347E761C(0, a2, a3);
    sub_2347E7688(0, a2, a3);
    sub_2347E75B0(0, a2, a3);
    sub_2347E7520(a2, a3);
    sub_2347E7500(a2, a3);
    sub_2347E7540(a2, a3);
    return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v9);
  }
  else
  {
    sub_234785C80(a1, (uint64_t)v9);
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486FF74();
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_234811BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned __int8 *)(sub_234810808(a1, a2) + 80);
  swift_release();
  return v2;
}

uint64_t sub_234811BF8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  int v10;
  _QWORD v11[5];

  *(_BYTE *)(sub_234810808(a2, a3) + 80) = a1;
  swift_release();
  if ((a1 & 1) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v11, a2, a3);
    swift_getExtendedExistentialTypeMetadata();
    type metadata accessor for _KKMDBackingData(0, a2, a3, v6);
    result = swift_dynamicCast();
    if ((result & 1) == 0)
      return result;
    if (!PersistentModel.modelContext.getter(a2, a3))
      return swift_release();
    swift_release();
    v8 = 0;
    goto LABEL_9;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v11, a2, a3);
  swift_getExtendedExistentialTypeMetadata();
  type metadata accessor for _KKMDBackingData(0, a2, a3, v9);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  if (PersistentModel.modelContext.getter(a2, a3))
  {
    swift_release();
    v10 = *(_DWORD *)(sub_234810808(a2, a3) + 24);
    swift_release();
    if ((v10 & 0x3F) == 0)
    {
      v8 = 1;
LABEL_9:
      sub_2348622F8(v8);
    }
  }
  return swift_release();
}

uint64_t PersistentModel.setValue<A>(forKey:to:)(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t *v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;

  v5 = v4;
  v9 = a1;
  v10 = *a1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PersistentIdentifier(0);
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v49 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)MEMORY[0x24BEE46A8];
  v15 = *(_QWORD *)(v10 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v15, a3) & 1) != 0)
    sub_234810868(v15, a3);
  v55 = v9;
  if (a2)
  {
    v16 = *(_QWORD *)(*(_QWORD *)(*v14 + v10 + 8) + 16);
    swift_unknownObjectRetain();
    if ((sub_2347E174C(v16, (uint64_t)a4) & 1) != 0)
      sub_234810868(v16, (uint64_t)a4);
    swift_unknownObjectRelease();
    v17 = PersistentModel.getValue<A>(forKey:)(v9, a3, (uint64_t)a4);
    if (v17)
    {
      v18 = v17;
      v57 = a2;
      v58[0] = v17;
      swift_unknownObjectRetain_n();
      v19 = sub_23486F710();
      swift_unknownObjectRelease();
      v9 = v55;
      swift_unknownObjectRelease();
      if ((v19 & 1) != 0)
        return swift_unknownObjectRelease();
      goto LABEL_11;
    }
  }
  else
  {
    v21 = PersistentModel.getValue<A>(forKey:)(v9, a3, (uint64_t)a4);
    if (v21)
    {
      v18 = v21;
LABEL_11:
      v22 = (_QWORD *)sub_234818BD0((uint64_t)v9);
      sub_234810CE8(v22, v18, v15, *(_QWORD *)(*(_QWORD *)(*v14 + v10 + 8) + 16), a3, a4);
      swift_unknownObjectRelease();
      swift_release();
    }
  }
  v23 = PersistentModel.modelContext.getter(v15, a3);
  swift_release();
  v56 = a4;
  if (a2
    && !v23
    && (v24 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v10 + 8) + 16),
        PersistentModel.modelContext.getter(v24, (uint64_t)a4)))
  {
    swift_release();
    v25 = PersistentModel.modelContext.getter(v24, (uint64_t)a4);
    sub_2348119AC(v25, v15, a3);
    swift_release();
    v53 = 0;
    v26 = 1;
  }
  else
  {
    v27 = PersistentModel.modelContext.getter(v15, a3);
    swift_release();
    if (a2
      && v27
      && (v28 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v10 + 8) + 16),
          v29 = PersistentModel.modelContext.getter(v28, (uint64_t)a4),
          swift_release(),
          !v29))
    {
      v36 = PersistentModel.modelContext.getter(v15, a3);
      sub_2348119AC(v36, v28, (uint64_t)a4);
      swift_release();
      v26 = 0;
      v53 = 1;
    }
    else
    {
      v30 = PersistentModel.modelContext.getter(v15, a3);
      swift_release();
      v26 = v30 == 0;
      if (a2)
      {
        v31 = PersistentModel.modelContext.getter(*(_QWORD *)(*(_QWORD *)(*v14 + v10 + 8) + 16), (uint64_t)a4);
        swift_release();
        v53 = v31 == 0;
        v32 = PersistentModel.modelContext.getter(v15, a3);
        if (v32)
        {
          v33 = v32;
          v34 = *(_QWORD *)(*(_QWORD *)(*v14 + v10 + 8) + 16);
          v35 = PersistentModel.modelContext.getter(v34, (uint64_t)a4);
          if (v35)
          {
            if (v33 != v35)
            {
              v58[0] = 0;
              v58[1] = 0xE000000000000000;
              v56 = (_QWORD *)v35;
              sub_23486FEA8();
              sub_23486F7DC();
              v45 = v34;
              v46 = v49;
              PersistentModel.persistentModelID.getter(v15, a3, v49);
              v47 = v51;
              sub_23486FF74();
              sub_2347EB0B0(v46);
              sub_23486F7DC();
              v57 = v33;
              type metadata accessor for ModelContext(0);
              sub_23486FF74();
              sub_23486F7DC();
              v48 = v52;
              PersistentModel.persistentModelID.getter(v45, (uint64_t)a4, v52);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v48, 0, 1, v47);
              sub_23486F77C();
              sub_23486F7DC();
              swift_bridgeObjectRelease();
              sub_23486F7DC();
              v57 = (uint64_t)v56;
              sub_23486FF74();
              result = sub_234870004();
              __break(1u);
              return result;
            }
            swift_release_n();
          }
          else
          {
            swift_release();
          }
        }
      }
      else
      {
        if (PersistentModel.modelContext.getter(v15, a3))
          swift_release();
        v53 = 0;
      }
    }
  }
  LODWORD(v54) = v26;
  if (PersistentModel.modelContext.getter(v15, a3))
  {
    sub_2347F2FA0(v5, v15, a3);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v58, v15, a3);
  v37 = v59;
  v38 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v39 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v10 + 8) + 16);
  v41 = (uint64_t)v55;
  v40 = (uint64_t)v56;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v38 + 128))(v55, a2, v39, v56, v37, v38);
  result = __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v58);
  if (a2)
  {
    v42 = swift_unknownObjectRetain();
    sub_2348139D8(v42, v40, v15, a3);
    v43 = (_QWORD *)sub_234818BD0(v41);
    sub_234813BCC(v43, a2, v15, v39, a3, v40);
    swift_unknownObjectRelease();
    result = swift_release();
  }
  if ((_DWORD)v54)
  {
    result = PersistentModel.modelContext.getter(v15, a3);
    if (result)
    {
      sub_2347F2514(v5, v15, a3);
      result = swift_release();
    }
  }
  v44 = (uint64_t)v56;
  if (a2 && v53)
  {
    result = PersistentModel.modelContext.getter(v39, (uint64_t)v56);
    if (result)
    {
      sub_2347F2514(a2, v39, v44);
      return swift_release();
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t result;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  void (*v35)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v5 = v4;
  v10 = *a1;
  v34 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v34);
  *((_QWORD *)&v33 + 1) = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)MEMORY[0x24BEE46A8];
  v13 = *(_QWORD *)(v10 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v13, a3) & 1) != 0)
    sub_234810868(v13, a3);
  v14 = *(_QWORD *)(*v12 + v10 + 8);
  if ((sub_2347E174C(v14, (uint64_t)a4) & 1) != 0)
    sub_234810868(v14, (uint64_t)a4);
  v35 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40);
  v35(v37, v13, a3);
  v15 = v38;
  v16 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  v17 = (*(uint64_t (**)(uint64_t *, uint64_t, _QWORD *, uint64_t, uint64_t))(v16 + 72))(a1, v14, a4, v15, v16);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v37);
  v36 = a2;
  v37[0] = v17;
  if ((sub_23486F710() & 1) != 0)
    return swift_unknownObjectRelease();
  sub_2348139D8(a2, (uint64_t)a4, v13, a3);
  v18 = PersistentModel.modelContext.getter(v13, a3);
  swift_release();
  if (!v18)
  {
    v24 = PersistentModel.modelContext.getter(v14, (uint64_t)a4);
    swift_release();
    if (v24)
    {
      v25 = PersistentModel.modelContext.getter(v14, (uint64_t)a4);
      sub_2348119AC(v25, v13, a3);
      *(_QWORD *)((char *)&v33 + 4) = 1;
LABEL_18:
      swift_release();
      goto LABEL_19;
    }
  }
  v19 = PersistentModel.modelContext.getter(v13, a3);
  swift_release();
  if (v19)
  {
    v20 = PersistentModel.modelContext.getter(v14, (uint64_t)a4);
    swift_release();
    if (!v20)
    {
      v26 = PersistentModel.modelContext.getter(v13, a3);
      sub_2348119AC(v26, v14, (uint64_t)a4);
      *(_QWORD *)((char *)&v33 + 4) = 0x100000000;
      goto LABEL_18;
    }
  }
  v21 = PersistentModel.modelContext.getter(v13, a3);
  v22 = PersistentModel.modelContext.getter(v14, (uint64_t)a4);
  v23 = v22;
  if (v21)
  {
    swift_release();
    if (!v23)
      goto LABEL_29;
    swift_release();
    if (v21 != v23)
      goto LABEL_29;
LABEL_16:
    *(_QWORD *)((char *)&v33 + 4) = 0;
LABEL_19:
    if (PersistentModel.modelContext.getter(v13, a3))
    {
      sub_2347F2FA0(v5, v13, a3);
      swift_release();
    }
    v27 = (_QWORD *)sub_234818BD0((uint64_t)a1);
    v34 = v17;
    sub_234810CE8(v27, v17, v13, v14, a3, a4);
    swift_release();
    v35(v37, v13, a3);
    v29 = v38;
    v28 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v28 + 120))(a1, a2, v14, a4, v29, v28);
    __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v37);
    v30 = (_QWORD *)sub_234818BD0((uint64_t)a1);
    sub_234813BCC(v30, a2, v13, v14, a3, (uint64_t)a4);
    swift_release();
    if (DWORD1(v33) && PersistentModel.modelContext.getter(v13, a3))
    {
      sub_2347F2514(v5, v13, a3);
      swift_release();
    }
    if (DWORD2(v33))
    {
      if (PersistentModel.modelContext.getter(v14, (uint64_t)a4))
      {
        sub_2347F2514(a2, v14, (uint64_t)a4);
        swift_release();
      }
    }
    return swift_unknownObjectRelease();
  }
  if (!v22)
    goto LABEL_16;
  swift_release();
LABEL_29:
  v37[0] = 0;
  v37[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  v32 = *((_QWORD *)&v33 + 1);
  PersistentModel.persistentModelID.getter(v13, a3, *((uint64_t *)&v33 + 1));
  sub_23486FF74();
  sub_2347EB0B0(v32);
  sub_23486F7DC();
  v36 = PersistentModel.modelContext.getter(v13, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189700);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  PersistentModel.persistentModelID.getter(v14, (uint64_t)a4, v32);
  sub_23486FF74();
  sub_2347EB0B0(v32);
  sub_23486F7DC();
  v36 = PersistentModel.modelContext.getter(v14, (uint64_t)a4);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t PersistentModel.setValue<A, B>(forKey:to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  int v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t ObjectType;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  _QWORD v72[2];
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v6 = v5;
  v69 = a1;
  v70 = a5;
  v9 = (uint64_t *)(*a1 + *MEMORY[0x24BEE46A8]);
  v10 = v9[1];
  v65 = sub_23486FCBC();
  v61 = *(_QWORD *)(v65 - 8);
  v11 = MEMORY[0x24BDAC7A8](v65);
  v67 = (char *)&v61 - v12;
  v66 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v71 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v61 - v15;
  v17 = *v9;
  if ((sub_2347E174C(*v9, a4) & 1) != 0)
    sub_234810868(v17, a4);
  v80 = PersistentModel.modelContext.getter(v17, a4);
  v18 = MEMORY[0x24BEE4B08];
  v79 = MEMORY[0x24BEE4B08];
  v78 = sub_23486F614();
  v77 = (_QWORD *)MEMORY[0x24BEE4AF8];
  MEMORY[0x24BDAC7A8](v78);
  *(&v61 - 10) = v17;
  *(&v61 - 9) = v10;
  v64 = a3;
  *(&v61 - 8) = a3;
  *(&v61 - 7) = a4;
  v19 = v70;
  *(&v61 - 6) = v70;
  *(&v61 - 5) = (uint64_t)&v79;
  *(&v61 - 4) = (uint64_t)&v78;
  *(&v61 - 3) = (uint64_t)&v80;
  v59 = (uint64_t)&v77;
  v68 = v10;
  sub_23486261C((void (*)(uint64_t))sub_234818E04, (uint64_t)(&v61 - 12), v10, v19);
  v20 = PersistentModel.modelContext.getter(v17, a4);
  swift_release();
  if (!v20 && v80)
  {
    v21 = v77;
    swift_unknownObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v77 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v21 = sub_23479EAF8(0, v21[2] + 1, 1, v21);
      v77 = v21;
    }
    v24 = v21[2];
    v23 = v21[3];
    if (v24 >= v23 >> 1)
      v21 = sub_23479EAF8((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    v21[2] = v24 + 1;
    v25 = &v21[2 * v24];
    v25[4] = v6;
    v25[5] = a4;
    v77 = v21;
    v26 = swift_retain();
    sub_2348119AC(v26, v17, a4);
    swift_release();
  }
  v76 = v18;
  v63 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 40);
  v63(v73, v17, a4);
  v27 = v74;
  v28 = v75;
  __swift_project_boxed_opaque_existential_1(v73, v74);
  v29 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 88);
  v62 = v17;
  v30 = v6;
  v31 = v16;
  v33 = v68;
  v32 = (uint64_t)v69;
  v34 = v64;
  v35 = v70;
  v36 = v29(v69, v68, v64, v70, v27, v28);
  MEMORY[0x24BDAC7A8](v36);
  *(&v61 - 8) = v34;
  *(&v61 - 7) = a4;
  *(&v61 - 6) = v35;
  *(&v61 - 5) = (uint64_t)&v76;
  *(&v61 - 4) = (uint64_t)&v79;
  *(&v61 - 3) = v30;
  v59 = v32;
  sub_23486261C((void (*)(uint64_t))sub_234818E38, (uint64_t)(&v61 - 10), v33, v35);
  v37 = v66;
  v38 = *(void (**)(char *, uint64_t))(v66 + 8);
  v38(v31, v33);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v73);
  v73[0] = v78;
  v39 = sub_23486F98C();
  swift_bridgeObjectRetain();
  v40 = v67;
  v41 = swift_dynamicCast();
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  if (v41)
  {
    v65 = (uint64_t)v38;
    v42(v40, 0, 1, v33);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v71, v40, v33);
    v43 = v62;
    v44 = v30;
    if (PersistentModel.modelContext.getter(v62, a4))
    {
      sub_2347F2FA0(v30, v43, a4);
      swift_release();
    }
    v63(v73, v43, a4);
    v45 = v74;
    v46 = v75;
    __swift_project_boxed_opaque_existential_1(v73, v74);
    v48 = v69;
    v47 = v70;
    (*(void (**)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 136))(v69, v71, v33, v34, v70, v45, v46);
    v49 = __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v73);
    v73[0] = v78;
    MEMORY[0x24BDAC7A8](v49);
    *(&v61 - 6) = v34;
    *(&v61 - 5) = a4;
    *(&v61 - 4) = v47;
    *(&v61 - 3) = (uint64_t)&v76;
    v59 = v44;
    v60 = v48;
    v72[0] = swift_getAssociatedConformanceWitness();
    swift_bridgeObjectRetain();
    v50 = MEMORY[0x2349465EC](&protocol conformance descriptor for <A> [A], v39, v72);
    sub_23486261C((void (*)(uint64_t))sub_234818E4C, (uint64_t)(&v61 - 8), v39, v50);
    swift_bridgeObjectRelease();
    v51 = (void (*)(char *, uint64_t))v65;
    if (v80)
    {
      v52 = v77;
      v53 = v77[2];
      if (v53)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        v54 = v52 + 5;
        do
        {
          v55 = *v54;
          ObjectType = swift_getObjectType();
          v57 = swift_unknownObjectRetain();
          sub_2347F2514(v57, ObjectType, v55);
          swift_unknownObjectRelease();
          v54 += 2;
          --v53;
        }
        while (v53);
        swift_bridgeObjectRelease();
        swift_release();
        v33 = v68;
      }
    }
    v51(v71, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v42(v40, 1, 1, v33);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v65);
    v73[0] = 0;
    v73[1] = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    v72[1] = v78;
    MEMORY[0x2349465EC](MEMORY[0x24BEE12F8], v39);
    sub_2348702C8();
    LODWORD(v60) = 0;
    v59 = 236;
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_234812B78(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;

  result = swift_beginAccess();
  v26 = a1[14];
  if (v26)
  {
    v36 = a4;
    swift_beginAccess();
    v27 = a1[9];
    v28 = a1[10];
    swift_bridgeObjectRetain();
    swift_retain();
    v29 = sub_2347A6250(v27, v28);
    swift_bridgeObjectRelease();
    if (v29)
    {
      swift_release();
      v35 = (_QWORD *)swift_allocObject();
      v35[2] = a16;
      v35[3] = a19;
      v35[4] = a20;
      v35[5] = a21;
      v35[6] = v36;
      v35[7] = a5;
      v30 = (_QWORD *)swift_allocObject();
      v30[2] = a16;
      v30[3] = a19;
      v30[4] = a20;
      v30[5] = a21;
      v30[6] = a6;
      v30[7] = a7;
      v31 = (_QWORD *)swift_allocObject();
      v31[2] = a16;
      v31[3] = a19;
      v31[4] = a20;
      v31[5] = a21;
      v31[6] = a8;
      v31[7] = a9;
      v32 = (_QWORD *)swift_allocObject();
      v32[2] = a16;
      v32[3] = a19;
      v32[4] = a20;
      v32[5] = a21;
      v32[6] = a10;
      v32[7] = a11;
      v33 = (_QWORD *)swift_allocObject();
      v33[2] = a16;
      v33[3] = a17;
      v33[4] = a19;
      v33[5] = a20;
      v33[6] = a21;
      v33[7] = a12;
      v33[8] = a13;
      v34 = (_QWORD *)swift_allocObject();
      v34[2] = a16;
      v34[3] = a17;
      v34[4] = a19;
      v34[5] = a20;
      v34[6] = a21;
      v34[7] = a14;
      v34[8] = a15;
      sub_234819204(v36);
      sub_234819204(a6);
      sub_234819204(a8);
      sub_234819204(a10);
      sub_234819204(a12);
      sub_234819204(a14);
      sub_234818234(a18, v26, (void (*)(uint64_t))sub_234819118, (uint64_t)v35, (void (*)(uint64_t))sub_234819128, (uint64_t)v30, (void (*)(uint64_t))sub_234819150, (uint64_t)v31, (void (*)(uint64_t))sub_234819184, (uint64_t)v32, (void (*)(uint64_t))sub_2348191A8, (uint64_t)v33, (void (*)(uint64_t))sub_2348191DC, (uint64_t)v34, a16, a18, a17);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      sub_23486FEA8();
      sub_23486F7DC();
      swift_bridgeObjectRetain();
      sub_23486F7DC();
      swift_bridgeObjectRelease();
      sub_23486F7DC();
      type metadata accessor for Schema.Relationship();
      sub_23486FF74();
      sub_23486F7DC();
      sub_2348702BC();
      result = sub_234870004();
      __break(1u);
    }
  }
  return result;
}

uint64_t PersistentModel.isDeleted.getter(uint64_t a1, uint64_t a2)
{
  if ((sub_2347E7588(a1, a2) & 1) != 0)
    return 1;
  else
    return sub_2347E76CC(a1, a2);
}

void static PersistentModel.createBackingData<A>()(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (_SD_get_faulting_backingdata_tsd())
  {
    type metadata accessor for _NullBackingData(0, a1, a2, v6);
    v7 = sub_234862518();
    _SD_remove_faulting_backingdata_tsd();
  }
  else
  {
    type metadata accessor for _KKMDBackingData(0, a1, a2, v6);
    v7 = sub_234862528(a1);
  }
  *a3 = v7;
}

uint64_t PersistentModel.getValue<A, B>(forKey:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v10 = *a1;
  v11 = (_QWORD *)MEMORY[0x24BEE46A8];
  v12 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v12, a3) & 1) != 0)
    sub_234810868(v12, a3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v16, v12, a3);
  v13 = v17;
  v14 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 96))(a1, *(_QWORD *)(*v11 + v10 + 8), a2, a4, a5, v13, v14);
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v16);
}

uint64_t PersistentModel.getTransformableValue<A>(forKey:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = (_QWORD *)MEMORY[0x24BEE46A8];
  v6 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v6, a2) & 1) != 0)
    sub_234810868(v6, a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 40))(v10, v6, a2);
  v7 = v11;
  v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 104))(a1, *(_QWORD *)(*v5 + v4 + 8), v7, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v10);
}

uint64_t PersistentModel.setValue<A>(forKey:to:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v9 = *a1;
  v10 = (_QWORD *)MEMORY[0x24BEE46A8];
  v11 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v11, a3) & 1) != 0)
    sub_234810868(v11, a3);
  if (PersistentModel.modelContext.getter(v11, a3))
  {
    sub_2347F2FA0(v4, v11, a3);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v15, v11, a3);
  v12 = v16;
  v13 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  (*(void (**)(uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v13 + 112))(a1, a2, *(_QWORD *)(*v10 + v9 + 8), a4, v12, v13);
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v15);
}

uint64_t sub_2348139D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t result;
  _QWORD v21[2];

  v7 = type metadata accessor for PersistentIdentifier(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v21 - v11;
  PersistentModel.persistentModelID.getter(a3, a4, (uint64_t)v21 - v11);
  ObjectType = swift_getObjectType();
  PersistentModel.persistentModelID.getter(ObjectType, a2, (uint64_t)v10);
  v14 = *(int *)(v7 + 20);
  v15 = *(_QWORD *)&v12[v14];
  v16 = *(_QWORD *)(v15 + 24);
  if (v16
    && (v17 = *(_QWORD *)&v10[v14], (v18 = *(_QWORD *)(v17 + 24)) != 0)
    && (*(_QWORD *)(v15 + 16) == *(_QWORD *)(v17 + 16) ? (v19 = v16 == v18) : (v19 = 0),
        !v19 && (sub_2348702E0() & 1) == 0))
  {
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486FF74();
    sub_23486F7DC();
    sub_23486FF74();
    sub_23486F7DC();
    result = sub_234870004();
    __break(1u);
  }
  else
  {
    sub_2347EB0B0((uint64_t)v10);
    return sub_2347EB0B0((uint64_t)v12);
  }
  return result;
}

uint64_t sub_234813BCC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _OWORD v56[6];
  uint64_t v57;
  ValueMetadata *v58;
  _QWORD *v59;
  _QWORD *v60;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257390);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if (a1[14])
  {
    v50 = a2;
    v51 = a5;
    v55 = v6;
    swift_beginAccess();
    v18 = a1[9];
    v19 = a1[10];
    swift_bridgeObjectRetain();
    v20 = sub_2347A6250(v18, v19);
    swift_bridgeObjectRelease();
    if (v20)
    {
      v54 = a3;
      swift_beginAccess();
      v21 = a1[13];
      if (!v21)
      {
        *(_QWORD *)&v56[0] = 0;
        *((_QWORD *)&v56[0] + 1) = 0xE000000000000000;
        sub_23486FEA8();
        sub_23486F7DC();
        v59 = a1;
        type metadata accessor for Schema.Relationship();
        sub_23486FF74();
        goto LABEL_17;
      }
      v22 = a1[12];
      swift_beginAccess();
      v52 = v20;
      v23 = *(_QWORD *)(v20 + 104);
      v24 = *(_QWORD *)(v23 + 16);
      swift_bridgeObjectRetain();
      if (v24)
      {
        swift_bridgeObjectRetain();
        v25 = sub_2347CD9BC(v22, v21);
        if ((v26 & 1) != 0)
        {
          v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
          swift_endAccess();
          v49 = v27;
          swift_retain();
          swift_bridgeObjectRelease();
          v28 = sub_234828A6C(a4, a6);
          v48[2] = v48;
          v59 = v28;
          MEMORY[0x24BDAC7A8](v28);
          v58 = &type metadata for Schema.PropertyMetadata;
          sub_23486F4E8();
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254257398);
          sub_234819404(&qword_2542573A0, &qword_254257398, MEMORY[0x24BEE12C8]);
          v29 = sub_23486F830();
          (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
          swift_bridgeObjectRelease();
          v30 = a1;
          if (*(_QWORD *)(v29 + 16))
            sub_2347C63D0(v29 + 32, (uint64_t)v56);
          else
            memset(v56, 0, sizeof(v56));
          v31 = a6;
          v53 = a4;
          swift_bridgeObjectRelease();
          v32 = *((_QWORD *)&v56[0] + 1);
          sub_23481927C((uint64_t)v56, &qword_254257D78);
          if (v32)
          {
            v33 = (_QWORD *)swift_allocObject();
            v34 = v51;
            v33[2] = v51;
            v33[3] = v31;
            v35 = v50;
            v36 = v55;
            v33[4] = v50;
            v33[5] = v36;
            v37 = v36;
            v33[6] = v30;
            v38 = v30;
            v48[1] = v30;
            v39 = (_QWORD *)swift_allocObject();
            v39[2] = v34;
            v39[3] = v31;
            v39[4] = v35;
            v39[5] = v37;
            v39[6] = v38;
            v40 = (_QWORD *)swift_allocObject();
            v40[2] = v34;
            v40[3] = v31;
            v40[4] = v35;
            v40[5] = v37;
            v41 = (_QWORD *)swift_allocObject();
            v41[2] = v34;
            v41[3] = v31;
            v41[4] = v35;
            v41[5] = v37;
            v42 = (_QWORD *)swift_allocObject();
            v43 = v54;
            v42[2] = v54;
            v42[3] = v34;
            v42[4] = v31;
            v44 = (_QWORD *)swift_allocObject();
            v44[2] = v43;
            v44[3] = v34;
            v44[4] = v31;
            swift_unknownObjectRetain_n();
            swift_unknownObjectRetain_n();
            v45 = (_QWORD *)swift_retain_n();
            sub_234812B78(v45, v46, v47, (uint64_t)sub_234819460, (uint64_t)v33, (uint64_t)sub_2348194A4, (uint64_t)v39, (uint64_t)sub_2348194C8, (uint64_t)v40, (uint64_t)sub_2348194D8, (uint64_t)v41, (uint64_t)nullsub_15, (uint64_t)v42, (uint64_t)nullsub_16, (uint64_t)v44, v43, v43, v53, v34,
              v34,
              v31);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            return swift_release();
          }
          *(_QWORD *)&v56[0] = 0;
          *((_QWORD *)&v56[0] + 1) = 0xE000000000000000;
          sub_23486FEA8();
          sub_23486F7DC();
          v57 = v49;
          type metadata accessor for Schema.Relationship();
          sub_23486FF74();
          sub_23486F7DC();
          sub_23487055C();
          sub_23486F7DC();
          swift_bridgeObjectRelease();
LABEL_17:
          result = sub_234870004();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      *(_QWORD *)&v56[0] = 0;
      *((_QWORD *)&v56[0] + 1) = 0xE000000000000000;
      sub_23486FEA8();
      sub_23486F7DC();
      sub_23486F7DC();
      sub_23486F7DC();
      v59 = (_QWORD *)v52;
      type metadata accessor for Schema.Entity();
      sub_23486FF74();
      goto LABEL_17;
    }
    *(_QWORD *)&v56[0] = 0;
    *((_QWORD *)&v56[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    swift_bridgeObjectRetain();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    v60 = a1;
    type metadata accessor for Schema.Relationship();
    sub_23486FF74();
    sub_23486F7DC();
    v60 = v55;
    sub_2348702BC();
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_2348145B0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4, _QWORD **a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  BOOL v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v53 = a5;
  v60 = a4;
  v58 = a3;
  v63 = type metadata accessor for PersistentIdentifier(0);
  v54 = *(_QWORD *)(v63 - 8);
  v11 = MEMORY[0x24BDAC7A8](v63);
  v56 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v55 = (uint64_t)&v52 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v52 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v52 - v18;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if ((sub_2347E174C(a8, AssociatedConformanceWitness) & 1) != 0)
    sub_234810868(a8, AssociatedConformanceWitness);
  v57 = a2;
  v21 = *a2;
  swift_bridgeObjectRetain();
  v61 = a1;
  v62 = a8;
  v59 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a8, AssociatedConformanceWitness, (uint64_t)v19);
  if (!*(_QWORD *)(v21 + 16)
    || (sub_234870484(),
        sub_23486F440(),
        sub_234818FBC(),
        sub_23486F6B0(),
        v22 = sub_2348704B4(),
        v23 = -1 << *(_BYTE *)(v21 + 32),
        v24 = v22 & ~v23,
        ((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    sub_2347EB0B0((uint64_t)v19);
    v36 = v56;
    v38 = v61;
    v37 = v62;
    v39 = v59;
    PersistentModel.persistentModelID.getter(v62, v59, v56);
    v40 = v55;
    sub_2347A0B9C(v55, v36);
    sub_2347EB0B0(v40);
    v64 = v38;
    sub_23486F98C();
    swift_unknownObjectRetain();
    sub_23486F974();
    v41 = PersistentModel.modelContext.getter(v37, v39);
    result = swift_release();
    v43 = v60;
    v44 = *v60;
    if (v41)
    {
      if (v44)
        return result;
    }
    else if (v44)
    {
      v45 = v53;
      v46 = *v53;
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v45 = v46;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v46 = sub_23479EAF8(0, v46[2] + 1, 1, v46);
        *v45 = v46;
      }
      v49 = v46[2];
      v48 = v46[3];
      if (v49 >= v48 >> 1)
      {
        v46 = sub_23479EAF8((_QWORD *)(v48 > 1), v49 + 1, 1, v46);
        *v45 = v46;
      }
      v46[2] = v49 + 1;
      v50 = &v46[2 * v49];
      v50[4] = v38;
      v50[5] = v39;
      v51 = swift_retain();
      sub_2348119AC(v51, v37, v39);
      return swift_release();
    }
    *v43 = PersistentModel.modelContext.getter(v37, v39);
    return swift_release();
  }
  v25 = ~v23;
  v26 = *(int *)(v63 + 20);
  v27 = *(_QWORD *)(v54 + 72);
  while (1)
  {
    sub_2347EB29C(*(_QWORD *)(v21 + 48) + v27 * v24, (uint64_t)v17);
    v28 = *(_QWORD *)&v17[*(int *)(v63 + 20)];
    v29 = *(_QWORD *)&v19[v26];
    v30 = *(_QWORD *)(v28 + 24);
    v31 = *(_QWORD *)(v29 + 24);
    if (v30)
    {
      if (!v31
        || (*(_QWORD *)(v28 + 16) == *(_QWORD *)(v29 + 16) ? (v32 = v30 == v31) : (v32 = 0),
            !v32 && (sub_2348702E0() & 1) == 0))
      {
LABEL_7:
        sub_2347EB0B0((uint64_t)v17);
        goto LABEL_8;
      }
    }
    else if (v31)
    {
      goto LABEL_7;
    }
    v33 = *(_QWORD *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(_QWORD *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v33 && (sub_2348702E0() & 1) == 0)
      goto LABEL_7;
    if (*(_QWORD *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    v35 = sub_2348702E0();
    sub_2347EB0B0((uint64_t)v17);
    if ((v35 & 1) != 0)
      goto LABEL_39;
LABEL_8:
    v24 = (v24 + 1) & v25;
    if (((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      goto LABEL_27;
  }
  sub_2347EB0B0((uint64_t)v17);
LABEL_39:
  swift_bridgeObjectRelease();
  return sub_2347EB0B0((uint64_t)v19);
}

uint64_t sub_234814A0C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  _QWORD *AssociatedConformanceWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  BOOL v35;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a4;
  v49 = a7;
  v45 = a5;
  v10 = *a5;
  v50 = type metadata accessor for PersistentIdentifier(0);
  v42 = *(_QWORD *)(v50 - 8);
  v11 = MEMORY[0x24BDAC7A8](v50);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v42 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v42 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v42 - v20;
  v44 = v10;
  AssociatedConformanceWitness = (_QWORD *)swift_getAssociatedConformanceWitness();
  PersistentModel.persistentModelID.getter(a6, (uint64_t)AssociatedConformanceWitness, (uint64_t)v19);
  sub_2347A0B9C((uint64_t)v21, (uint64_t)v19);
  sub_2347EB0B0((uint64_t)v21);
  v23 = *a3;
  swift_bridgeObjectRetain();
  v46 = a1;
  v47 = a6;
  v43 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a6, (uint64_t)AssociatedConformanceWitness, (uint64_t)v16);
  if (!*(_QWORD *)(v23 + 16)
    || (sub_234870484(),
        sub_23486F440(),
        sub_234818FBC(),
        sub_23486F6B0(),
        v24 = sub_2348704B4(),
        v25 = -1 << *(_BYTE *)(v23 + 32),
        v26 = v24 & ~v25,
        ((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_2347EB0B0((uint64_t)v16);
    v38 = *(_QWORD *)(v44 + *MEMORY[0x24BEE46A8]);
    v39 = v49;
    v40 = (_QWORD *)sub_234818BD0((uint64_t)v45);
    sub_234810CE8(v40, v46, v38, v47, v39, v43);
    return swift_release();
  }
  v27 = ~v25;
  v28 = *(int *)(v50 + 20);
  v29 = *(_QWORD *)(v42 + 72);
  while (1)
  {
    sub_2347EB29C(*(_QWORD *)(v23 + 48) + v29 * v26, (uint64_t)v13);
    v30 = *(_QWORD *)&v13[*(int *)(v50 + 20)];
    v31 = *(_QWORD *)&v16[v28];
    v32 = *(_QWORD *)(v30 + 24);
    v33 = *(_QWORD *)(v31 + 24);
    if (v32)
    {
      if (!v33
        || (*(_QWORD *)(v30 + 16) == *(_QWORD *)(v31 + 16) ? (v34 = v32 == v33) : (v34 = 0),
            !v34 && (sub_2348702E0() & 1) == 0))
      {
LABEL_5:
        sub_2347EB0B0((uint64_t)v13);
        goto LABEL_6;
      }
    }
    else if (v33)
    {
      goto LABEL_5;
    }
    v35 = *(_QWORD *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(_QWORD *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v35 && (sub_2348702E0() & 1) == 0)
      goto LABEL_5;
    if (*(_QWORD *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    v37 = sub_2348702E0();
    sub_2347EB0B0((uint64_t)v13);
    if ((v37 & 1) != 0)
      goto LABEL_28;
LABEL_6:
    v26 = (v26 + 1) & v27;
    if (((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      goto LABEL_25;
  }
  sub_2347EB0B0((uint64_t)v13);
LABEL_28:
  swift_bridgeObjectRelease();
  return sub_2347EB0B0((uint64_t)v16);
}

uint64_t sub_234814D6C(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a3;
  v45 = a6;
  v41 = a4;
  v9 = *a4;
  v46 = type metadata accessor for PersistentIdentifier(0);
  v10 = *(_QWORD *)(v46 - 8);
  v11 = MEMORY[0x24BDAC7A8](v46);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v38 - v14;
  v16 = *a2;
  v40 = v9;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  v42 = a1;
  v43 = a5;
  v39 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a5, AssociatedConformanceWitness, (uint64_t)v15);
  if (!*(_QWORD *)(v16 + 16)
    || (sub_234870484(),
        sub_23486F440(),
        sub_234818FBC(),
        sub_23486F6B0(),
        v18 = sub_2348704B4(),
        v19 = -1 << *(_BYTE *)(v16 + 32),
        v20 = v18 & ~v19,
        ((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_2347EB0B0((uint64_t)v15);
    v32 = v39;
    v33 = *(_QWORD *)(v40 + *MEMORY[0x24BEE46A8]);
    v34 = v42;
    v35 = v45;
    sub_2348139D8(v42, v39, v33, v45);
    v36 = (_QWORD *)sub_234818BD0((uint64_t)v41);
    sub_234813BCC(v36, v34, v33, v43, v35, v32);
    return swift_release();
  }
  v21 = ~v19;
  v22 = *(int *)(v46 + 20);
  v23 = *(_QWORD *)(v10 + 72);
  while (1)
  {
    sub_2347EB29C(*(_QWORD *)(v16 + 48) + v23 * v20, (uint64_t)v13);
    v24 = *(_QWORD *)&v13[*(int *)(v46 + 20)];
    v25 = *(_QWORD *)&v15[v22];
    v26 = *(_QWORD *)(v24 + 24);
    v27 = *(_QWORD *)(v25 + 24);
    if (v26)
    {
      if (!v27
        || (*(_QWORD *)(v24 + 16) == *(_QWORD *)(v25 + 16) ? (v28 = v26 == v27) : (v28 = 0),
            !v28 && (sub_2348702E0() & 1) == 0))
      {
LABEL_5:
        sub_2347EB0B0((uint64_t)v13);
        goto LABEL_6;
      }
    }
    else if (v27)
    {
      goto LABEL_5;
    }
    v29 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v29 && (sub_2348702E0() & 1) == 0)
      goto LABEL_5;
    if (*(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    v31 = sub_2348702E0();
    sub_2347EB0B0((uint64_t)v13);
    if ((v31 & 1) != 0)
      goto LABEL_28;
LABEL_6:
    v20 = (v20 + 1) & v21;
    if (((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_25;
  }
  sub_2347EB0B0((uint64_t)v13);
LABEL_28:
  swift_bridgeObjectRelease();
  return sub_2347EB0B0((uint64_t)v15);
}

uint64_t PersistentModel.setValue<A, B>(forKey:to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t (*v30)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t ObjectType;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;

  v7 = v6;
  v75 = a5;
  v76 = a6;
  v73 = a1;
  v10 = (uint64_t *)(*a1 + *MEMORY[0x24BEE46A8]);
  v11 = v10[1];
  v71 = (void (*)(char *, uint64_t))sub_23486FCBC();
  v69 = *((_QWORD *)v71 - 1);
  v12 = MEMORY[0x24BDAC7A8](v71);
  v70 = (char *)&v67 - v13;
  v68 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v74 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v67 - v16;
  v18 = *v10;
  if ((sub_2347E174C(*v10, a4) & 1) != 0)
    sub_234810868(v18, a4);
  v86 = PersistentModel.modelContext.getter(v18, a4);
  v85 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v19 = MEMORY[0x24BEE4B08];
  v84 = MEMORY[0x24BEE4B08];
  v83 = sub_23486F614();
  MEMORY[0x24BDAC7A8](v83);
  *(&v67 - 10) = v18;
  *(&v67 - 9) = v11;
  v72 = a3;
  *(&v67 - 8) = a3;
  *(&v67 - 7) = a4;
  v20 = v76;
  *(&v67 - 6) = v75;
  *(&v67 - 5) = v20;
  *(&v67 - 4) = (uint64_t)&v84;
  *(&v67 - 3) = (uint64_t)&v83;
  v65 = (uint64_t)&v86;
  v66 = &v85;
  sub_23486261C((void (*)(uint64_t))sub_234818E5C, (uint64_t)(&v67 - 12), v11, v20);
  v21 = PersistentModel.modelContext.getter(v18, a4);
  swift_release();
  if (!v21 && v86)
  {
    v22 = v85;
    swift_unknownObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v85 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v22 = sub_23479EAF8(0, v22[2] + 1, 1, v22);
      v85 = v22;
    }
    v25 = v22[2];
    v24 = v22[3];
    if (v25 >= v24 >> 1)
      v22 = sub_23479EAF8((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
    v22[2] = v25 + 1;
    v26 = &v22[2 * v25];
    v26[4] = v7;
    v26[5] = a4;
    v85 = v22;
    v27 = swift_retain();
    sub_2348119AC(v27, v18, a4);
    swift_release();
  }
  v82 = v19;
  v28 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 40);
  v28(v79, v18, a4);
  v29 = v81;
  __swift_project_boxed_opaque_existential_1(v79, v80);
  v30 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v29 + 88);
  v31 = v73;
  v32 = v11;
  v77 = v11;
  v33 = v72;
  v34 = v76;
  v35 = v30(v73, v32, v72);
  MEMORY[0x24BDAC7A8](v35);
  *(&v67 - 8) = v33;
  *(&v67 - 7) = a4;
  *(&v67 - 6) = v75;
  *(&v67 - 5) = v34;
  *(&v67 - 4) = (uint64_t)&v82;
  *(&v67 - 3) = (uint64_t)&v84;
  v65 = v7;
  v66 = v31;
  sub_23486261C((void (*)(uint64_t))sub_234818E98, (uint64_t)(&v67 - 10), v77, v34);
  v36 = v68;
  v37 = *(void (**)(char *, uint64_t))(v68 + 8);
  v37(v17, v77);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v79);
  v79[0] = v83;
  v38 = v77;
  v39 = sub_23486F98C();
  swift_bridgeObjectRetain();
  v40 = v70;
  v41 = swift_dynamicCast();
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  if (v41)
  {
    v69 = v39;
    v71 = v37;
    v42(v40, 0, 1, v38);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v74, v40, v38);
    if (PersistentModel.modelContext.getter(v18, a4))
    {
      sub_2347F2FA0(v7, v18, a4);
      swift_release();
    }
    v28(v79, v18, a4);
    v43 = v80;
    v44 = v81;
    __swift_project_boxed_opaque_existential_1(v79, v80);
    v45 = (uint64_t)v73;
    v46 = v38;
    v47 = v72;
    v48 = v75;
    v49 = v76;
    (*(void (**)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 144))(v73, v74, v46, v72, v75, v76, v43, v44);
    __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v79);
    v50 = PersistentModel.modelContext.getter(v18, a4);
    v51 = swift_release();
    if (!v50)
    {
      v52 = v85;
      swift_unknownObjectRetain();
      v51 = swift_isUniquelyReferenced_nonNull_native();
      v85 = v52;
      if ((v51 & 1) == 0)
      {
        v51 = (uint64_t)sub_23479EAF8(0, v52[2] + 1, 1, v52);
        v52 = (_QWORD *)v51;
        v85 = (_QWORD *)v51;
      }
      v54 = v52[2];
      v53 = v52[3];
      if (v54 >= v53 >> 1)
      {
        v51 = (uint64_t)sub_23479EAF8((_QWORD *)(v53 > 1), v54 + 1, 1, v52);
        v52 = (_QWORD *)v51;
      }
      v52[2] = v54 + 1;
      v55 = &v52[2 * v54];
      v55[4] = v7;
      v55[5] = a4;
      v85 = v52;
      v49 = v76;
      v47 = v72;
      v45 = (uint64_t)v73;
      v48 = v75;
    }
    v79[0] = v83;
    MEMORY[0x24BDAC7A8](v51);
    *(&v67 - 8) = v47;
    *(&v67 - 7) = a4;
    *(&v67 - 6) = v48;
    *(&v67 - 5) = v49;
    *(&v67 - 4) = (uint64_t)&v82;
    *(&v67 - 3) = v7;
    v65 = v45;
    v78[0] = swift_getAssociatedConformanceWitness();
    swift_bridgeObjectRetain();
    v56 = v69;
    v57 = MEMORY[0x2349465EC](&protocol conformance descriptor for <A> [A], v69, v78);
    sub_23486261C((void (*)(uint64_t))sub_234818EC8, (uint64_t)(&v67 - 10), v56, v57);
    swift_bridgeObjectRelease();
    if (v86)
    {
      v58 = v85;
      v59 = v85[2];
      if (v59)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        v60 = v58 + 5;
        do
        {
          v61 = *v60;
          ObjectType = swift_getObjectType();
          v63 = swift_unknownObjectRetain();
          sub_2347F2514(v63, ObjectType, v61);
          swift_unknownObjectRelease();
          v60 += 2;
          --v59;
        }
        while (v59);
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    v71(v74, v77);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v42(v40, 1, 1, v38);
    (*(void (**)(char *, _QWORD *))(v69 + 8))(v40, v71);
    v79[0] = 0;
    v79[1] = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    v78[1] = v83;
    MEMORY[0x2349465EC](MEMORY[0x24BEE12F8], v39);
    sub_2348702C8();
    LODWORD(v66) = 0;
    v65 = 293;
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_2348157D4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4, _QWORD **a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  BOOL v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v53 = a5;
  v60 = a4;
  v58 = a3;
  v63 = type metadata accessor for PersistentIdentifier(0);
  v54 = *(_QWORD *)(v63 - 8);
  v11 = MEMORY[0x24BDAC7A8](v63);
  v56 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v55 = (uint64_t)&v52 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v52 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v52 - v18;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if ((sub_2347E174C(a8, AssociatedConformanceWitness) & 1) != 0)
    sub_234810868(a8, AssociatedConformanceWitness);
  v57 = a2;
  v21 = *a2;
  swift_bridgeObjectRetain();
  v61 = a1;
  v62 = a8;
  v59 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a8, AssociatedConformanceWitness, (uint64_t)v19);
  if (!*(_QWORD *)(v21 + 16)
    || (sub_234870484(),
        sub_23486F440(),
        sub_234818FBC(),
        sub_23486F6B0(),
        v22 = sub_2348704B4(),
        v23 = -1 << *(_BYTE *)(v21 + 32),
        v24 = v22 & ~v23,
        ((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    sub_2347EB0B0((uint64_t)v19);
    v36 = v56;
    v38 = v61;
    v37 = v62;
    v39 = v59;
    PersistentModel.persistentModelID.getter(v62, v59, v56);
    v40 = v55;
    sub_2347A0B9C(v55, v36);
    sub_2347EB0B0(v40);
    v64 = v38;
    sub_23486F98C();
    swift_unknownObjectRetain();
    sub_23486F974();
    v41 = PersistentModel.modelContext.getter(v37, v39);
    result = swift_release();
    v43 = v60;
    v44 = *v60;
    if (v41)
    {
      if (v44)
        return result;
    }
    else if (v44)
    {
      v45 = v53;
      v46 = *v53;
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v45 = v46;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v46 = sub_23479EAF8(0, v46[2] + 1, 1, v46);
        *v45 = v46;
      }
      v49 = v46[2];
      v48 = v46[3];
      if (v49 >= v48 >> 1)
      {
        v46 = sub_23479EAF8((_QWORD *)(v48 > 1), v49 + 1, 1, v46);
        *v45 = v46;
      }
      v46[2] = v49 + 1;
      v50 = &v46[2 * v49];
      v50[4] = v38;
      v50[5] = v39;
      v51 = swift_retain();
      sub_2348119AC(v51, v37, v39);
      return swift_release();
    }
    *v43 = PersistentModel.modelContext.getter(v37, v39);
    return swift_release();
  }
  v25 = ~v23;
  v26 = *(int *)(v63 + 20);
  v27 = *(_QWORD *)(v54 + 72);
  while (1)
  {
    sub_2347EB29C(*(_QWORD *)(v21 + 48) + v27 * v24, (uint64_t)v17);
    v28 = *(_QWORD *)&v17[*(int *)(v63 + 20)];
    v29 = *(_QWORD *)&v19[v26];
    v30 = *(_QWORD *)(v28 + 24);
    v31 = *(_QWORD *)(v29 + 24);
    if (v30)
    {
      if (!v31
        || (*(_QWORD *)(v28 + 16) == *(_QWORD *)(v29 + 16) ? (v32 = v30 == v31) : (v32 = 0),
            !v32 && (sub_2348702E0() & 1) == 0))
      {
LABEL_7:
        sub_2347EB0B0((uint64_t)v17);
        goto LABEL_8;
      }
    }
    else if (v31)
    {
      goto LABEL_7;
    }
    v33 = *(_QWORD *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(_QWORD *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v33 && (sub_2348702E0() & 1) == 0)
      goto LABEL_7;
    if (*(_QWORD *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v28 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v29 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    v35 = sub_2348702E0();
    sub_2347EB0B0((uint64_t)v17);
    if ((v35 & 1) != 0)
      goto LABEL_39;
LABEL_8:
    v24 = (v24 + 1) & v25;
    if (((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      goto LABEL_27;
  }
  sub_2347EB0B0((uint64_t)v17);
LABEL_39:
  swift_bridgeObjectRelease();
  return sub_2347EB0B0((uint64_t)v19);
}

uint64_t sub_234815C30(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  _QWORD *AssociatedConformanceWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  BOOL v35;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a4;
  v49 = a7;
  v45 = a5;
  v10 = *a5;
  v50 = type metadata accessor for PersistentIdentifier(0);
  v42 = *(_QWORD *)(v50 - 8);
  v11 = MEMORY[0x24BDAC7A8](v50);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v42 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v42 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v42 - v20;
  v44 = v10;
  AssociatedConformanceWitness = (_QWORD *)swift_getAssociatedConformanceWitness();
  PersistentModel.persistentModelID.getter(a6, (uint64_t)AssociatedConformanceWitness, (uint64_t)v19);
  sub_2347A0B9C((uint64_t)v21, (uint64_t)v19);
  sub_2347EB0B0((uint64_t)v21);
  v23 = *a3;
  swift_bridgeObjectRetain();
  v46 = a1;
  v47 = a6;
  v43 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a6, (uint64_t)AssociatedConformanceWitness, (uint64_t)v16);
  if (!*(_QWORD *)(v23 + 16)
    || (sub_234870484(),
        sub_23486F440(),
        sub_234818FBC(),
        sub_23486F6B0(),
        v24 = sub_2348704B4(),
        v25 = -1 << *(_BYTE *)(v23 + 32),
        v26 = v24 & ~v25,
        ((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_2347EB0B0((uint64_t)v16);
    v38 = *(_QWORD *)(v44 + *MEMORY[0x24BEE46A8]);
    v39 = v49;
    v40 = (_QWORD *)sub_234818BD0((uint64_t)v45);
    sub_234810CE8(v40, v46, v38, v47, v39, v43);
    return swift_release();
  }
  v27 = ~v25;
  v28 = *(int *)(v50 + 20);
  v29 = *(_QWORD *)(v42 + 72);
  while (1)
  {
    sub_2347EB29C(*(_QWORD *)(v23 + 48) + v29 * v26, (uint64_t)v13);
    v30 = *(_QWORD *)&v13[*(int *)(v50 + 20)];
    v31 = *(_QWORD *)&v16[v28];
    v32 = *(_QWORD *)(v30 + 24);
    v33 = *(_QWORD *)(v31 + 24);
    if (v32)
    {
      if (!v33
        || (*(_QWORD *)(v30 + 16) == *(_QWORD *)(v31 + 16) ? (v34 = v32 == v33) : (v34 = 0),
            !v34 && (sub_2348702E0() & 1) == 0))
      {
LABEL_5:
        sub_2347EB0B0((uint64_t)v13);
        goto LABEL_6;
      }
    }
    else if (v33)
    {
      goto LABEL_5;
    }
    v35 = *(_QWORD *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(_QWORD *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v35 && (sub_2348702E0() & 1) == 0)
      goto LABEL_5;
    if (*(_QWORD *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v30 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v31 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    v37 = sub_2348702E0();
    sub_2347EB0B0((uint64_t)v13);
    if ((v37 & 1) != 0)
      goto LABEL_28;
LABEL_6:
    v26 = (v26 + 1) & v27;
    if (((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      goto LABEL_25;
  }
  sub_2347EB0B0((uint64_t)v13);
LABEL_28:
  swift_bridgeObjectRelease();
  return sub_2347EB0B0((uint64_t)v16);
}

uint64_t sub_234815F90(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a3;
  v45 = a6;
  v41 = a4;
  v9 = *a4;
  v46 = type metadata accessor for PersistentIdentifier(0);
  v10 = *(_QWORD *)(v46 - 8);
  v11 = MEMORY[0x24BDAC7A8](v46);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v38 - v14;
  v16 = *a2;
  v40 = v9;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  v42 = a1;
  v43 = a5;
  v39 = AssociatedConformanceWitness;
  PersistentModel.persistentModelID.getter(a5, AssociatedConformanceWitness, (uint64_t)v15);
  if (!*(_QWORD *)(v16 + 16)
    || (sub_234870484(),
        sub_23486F440(),
        sub_234818FBC(),
        sub_23486F6B0(),
        v18 = sub_2348704B4(),
        v19 = -1 << *(_BYTE *)(v16 + 32),
        v20 = v18 & ~v19,
        ((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_2347EB0B0((uint64_t)v15);
    v32 = v39;
    v33 = *(_QWORD *)(v40 + *MEMORY[0x24BEE46A8]);
    v34 = v42;
    v35 = v45;
    sub_2348139D8(v42, v39, v33, v45);
    v36 = (_QWORD *)sub_234818BD0((uint64_t)v41);
    sub_234813BCC(v36, v34, v33, v43, v35, v32);
    return swift_release();
  }
  v21 = ~v19;
  v22 = *(int *)(v46 + 20);
  v23 = *(_QWORD *)(v10 + 72);
  while (1)
  {
    sub_2347EB29C(*(_QWORD *)(v16 + 48) + v23 * v20, (uint64_t)v13);
    v24 = *(_QWORD *)&v13[*(int *)(v46 + 20)];
    v25 = *(_QWORD *)&v15[v22];
    v26 = *(_QWORD *)(v24 + 24);
    v27 = *(_QWORD *)(v25 + 24);
    if (v26)
    {
      if (!v27
        || (*(_QWORD *)(v24 + 16) == *(_QWORD *)(v25 + 16) ? (v28 = v26 == v27) : (v28 = 0),
            !v28 && (sub_2348702E0() & 1) == 0))
      {
LABEL_5:
        sub_2347EB0B0((uint64_t)v13);
        goto LABEL_6;
      }
    }
    else if (v27)
    {
      goto LABEL_5;
    }
    v29 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
       && *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
    if (!v29 && (sub_2348702E0() & 1) == 0)
      goto LABEL_5;
    if (*(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v24 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v25 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      break;
    }
    v31 = sub_2348702E0();
    sub_2347EB0B0((uint64_t)v13);
    if ((v31 & 1) != 0)
      goto LABEL_28;
LABEL_6:
    v20 = (v20 + 1) & v21;
    if (((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_25;
  }
  sub_2347EB0B0((uint64_t)v13);
LABEL_28:
  swift_bridgeObjectRelease();
  return sub_2347EB0B0((uint64_t)v15);
}

uint64_t PersistentModel.setTransformableValue<A>(forKey:to:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v7 = *a1;
  v8 = (_QWORD *)MEMORY[0x24BEE46A8];
  v9 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if ((sub_2347E174C(v9, a3) & 1) != 0)
    sub_234810868(v9, a3);
  if (PersistentModel.modelContext.getter(v9, a3))
  {
    sub_2347F2FA0(v3, v9, a3);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v13, v9, a3);
  v10 = v14;
  v11 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 152))(a1, a2, *(_QWORD *)(*v8 + v7 + 8), v10, v11);
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v13);
}

uint64_t sub_2348163A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v13 = *a1;
  sub_2347C5508(a2 + 24, (uint64_t)v21);
  v14 = (_QWORD *)MEMORY[0x24BEE46A8];
  if (!v22)
  {
    sub_23481927C((uint64_t)v21, &qword_254258968);
    goto LABEL_7;
  }
  v15 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v13 + 8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    v24 = a3;
    sub_2348702BC();
    sub_23486F7DC();
    v24 = a4;
    type metadata accessor for Schema.Relationship();
    sub_23486FF74();
    sub_23486F7DC();
    v24 = a5;
    sub_2348702BC();
    sub_23486F7DC();
    result = sub_234870004();
    __break(1u);
    return result;
  }
  v16 = v24;
  v17 = *(_QWORD *)(v13 + *v14);
  if (PersistentModel.modelContext.getter(v17, a7))
  {
    sub_2347F2FA0(a5, v17, a7);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a7 + 40))(v21, v17, a7);
  v18 = v22;
  v19 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 120))(a1, v16, v15, a6, v18, v19);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v21);
}

uint64_t sub_234816638(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;

  v20 = a3;
  v9 = *a1;
  v10 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 + 16);
  v25[0] = MEMORY[0x2349465EC](MEMORY[0x24BEE12C8], v11);
  v25[1] = a4;
  v13 = MEMORY[0x2349465EC](&protocol conformance descriptor for <A> A?, v10, v25);
  result = PersistentModel.getValue<A, B>(forKey:)(a1, v12, a5, v13);
  if (v22[0])
  {
    v18[1] = v18;
    v19 = v13;
    v26 = v22[0];
    MEMORY[0x24BDAC7A8](result);
    v15 = *(_QWORD *)(v9 + *MEMORY[0x24BEE46A8]);
    MEMORY[0x2349465EC](MEMORY[0x24BEE12B8], v11);
    MEMORY[0x2349465EC](MEMORY[0x24BEE12E8], v11);
    sub_23486FB54();
    if (PersistentModel.modelContext.getter(v15, a5))
    {
      sub_2347F2FA0(a2, v15, a5);
      swift_release();
    }
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v22, v15, a5);
    v16 = v23;
    v17 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v21 = v26;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 136))(a1, &v21, v10, v12, v19, v16, v17);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v22);
  }
  return result;
}

uint64_t sub_23481682C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v8 = *a1;
  v9 = (_QWORD *)MEMORY[0x24BEE46A8];
  v10 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8);
  v11 = *(_QWORD *)(v10 + 16);
  v21[0] = a4;
  v16 = MEMORY[0x2349465EC](&protocol conformance descriptor for <A> [A], v10, v21);
  PersistentModel.getValue<A, B>(forKey:)(a1, v11, a5, v16);
  v12 = *(_QWORD *)(v8 + *v9);
  MEMORY[0x2349465EC](MEMORY[0x24BEE12B8], v10);
  MEMORY[0x2349465EC](MEMORY[0x24BEE12E8], v10);
  sub_23486FB54();
  if (PersistentModel.modelContext.getter(v12, a5))
  {
    sub_2347F2FA0(a2, v12, a5);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v18, v12, a5);
  v13 = v19;
  v14 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  v17 = v21[1];
  (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 136))(a1, &v17, v10, v11, v16, v13, v14);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v18);
}

uint64_t sub_2348169C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  _QWORD v15[2];

  v7 = type metadata accessor for PersistentIdentifier(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v15 - v11;
  PersistentModel.persistentModelID.getter(a3, a5, (uint64_t)v15 - v11);
  PersistentModel.persistentModelID.getter(a3, a5, (uint64_t)v10);
  v13 = _s9SwiftData20PersistentIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v12, (uint64_t)v10);
  sub_2347EB0B0((uint64_t)v10);
  sub_2347EB0B0((uint64_t)v12);
  return v13 & 1;
}

uint64_t sub_234816AB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v8 = *a1;
  v9 = (_QWORD *)MEMORY[0x24BEE46A8];
  v10 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if (PersistentModel.modelContext.getter(v10, a4))
  {
    sub_2347F2FA0(a2, v10, a4);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 40))(v14, v10, a4);
  v11 = v15;
  v12 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t *, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v12 + 128))(a1, 0, *(_QWORD *)(*(_QWORD *)(*v9 + v8 + 8) + 16), a3, v11, v12);
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v14);
}

uint64_t sub_234816B9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v11 = *a1;
  sub_2347C5508(a2 + 24, (uint64_t)v19);
  v12 = (_QWORD *)MEMORY[0x24BEE46A8];
  if (!v20)
  {
    sub_23481927C((uint64_t)v19, &qword_254258968);
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v11 + 8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    v22 = a3;
    type metadata accessor for Schema.Relationship();
    sub_23486FF74();
    sub_23486F7DC();
    v22 = a4;
    sub_2348702BC();
    sub_23486F7DC();
    result = sub_234870004();
    __break(1u);
    return result;
  }
  v14 = v22;
  v15 = *(_QWORD *)(v11 + *v12);
  if (PersistentModel.modelContext.getter(v15, a5))
  {
    sub_2347F2FA0(a4, v15, a5);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v19, v15, a5);
  v16 = v20;
  v17 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 120))(a1, v14, v13, a6, v16, v17);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v19);
}

uint64_t sub_234816E24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v23)(_QWORD *__return_ptr, uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v8 = *a1;
  v9 = (_QWORD *)MEMORY[0x24BEE46A8];
  v10 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  v23 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 40);
  v23(v27, v10, a4);
  v12 = v28;
  v11 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  v13 = *(void (**)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 88);
  v14 = *(_QWORD *)(*v9 + v8 + 8);
  v15 = *(_QWORD *)(v14 + 16);
  v26 = a5;
  v16 = MEMORY[0x2349465EC](&protocol conformance descriptor for <A> [A], v14, &v26);
  v24 = a1;
  v17 = a1;
  v18 = v16;
  v13(&v30, v17, v14, v15, v16, v12, v11);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v27);
  MEMORY[0x2349465EC](MEMORY[0x24BEE12B8], v14);
  MEMORY[0x2349465EC](MEMORY[0x24BEE12E8], v14);
  sub_23486FB54();
  if (PersistentModel.modelContext.getter(v10, a4))
  {
    sub_2347F2FA0(a2, v10, a4);
    swift_release();
  }
  v23(v27, v10, a4);
  v19 = v28;
  v20 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  v25 = v30;
  (*(void (**)(_QWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 136))(v24, &v25, v14, v15, v18, v19, v20);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v27);
}

uint64_t sub_23481700C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(_QWORD *__return_ptr);
  _QWORD *v23;
  _QWORD v24[2];
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = *a1;
  v9 = (_QWORD *)MEMORY[0x24BEE46A8];
  v22 = *(void (**)(_QWORD *__return_ptr))(a4 + 40);
  v19 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  v22(v26);
  v10 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v11 = *(void (**)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t))(v10 + 88);
  v12 = *(_QWORD *)(*v9 + v8 + 8);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v13 + 16);
  v24[0] = MEMORY[0x2349465EC](MEMORY[0x24BEE12C8], v13);
  v24[1] = a5;
  v23 = a1;
  v20 = MEMORY[0x2349465EC](&protocol conformance descriptor for <A> A?, v12, v24);
  v11(&v25, a1, v12, v14);
  if (v25)
  {
    v29 = v25;
    v15 = __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v26);
    MEMORY[0x24BDAC7A8](v15);
    MEMORY[0x2349465EC](MEMORY[0x24BEE12B8], v13);
    MEMORY[0x2349465EC](MEMORY[0x24BEE12E8], v13);
    sub_23486FB54();
    if (PersistentModel.modelContext.getter(v19, a4))
    {
      sub_2347F2FA0(a2, v19, a4);
      swift_release();
    }
    ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v22)(v26, v19, a4);
    v16 = v27;
    v17 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v25 = v29;
    (*(void (**)(_QWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 136))(v23, &v25, v12, v14, v20, v16, v17);
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v26);
}

uint64_t sub_23481723C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  _QWORD v16[2];

  v8 = type metadata accessor for PersistentIdentifier(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  PersistentModel.persistentModelID.getter(a4, a6, (uint64_t)v16 - v12);
  PersistentModel.persistentModelID.getter(a4, a6, (uint64_t)v11);
  v14 = _s9SwiftData20PersistentIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v11);
  sub_2347EB0B0((uint64_t)v11);
  sub_2347EB0B0((uint64_t)v13);
  return v14 & 1;
}

uint64_t sub_234817324(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v8 = *a1;
  v9 = (_QWORD *)MEMORY[0x24BEE46A8];
  v10 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  if (PersistentModel.modelContext.getter(v10, a3))
  {
    sub_2347F2FA0(a2, v10, a3);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 40))(v14, v10, a3);
  v11 = v15;
  v12 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t *, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v12 + 128))(a1, 0, *(_QWORD *)(*(_QWORD *)(*v9 + v8 + 8) + 16), a4, v11, v12);
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v14);
}

uint64_t sub_234817410@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = a1;
  v16 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257358);
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257388);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257370);
  v17 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_234819404(&qword_254257380, &qword_254257388, MEMORY[0x24BDCD230]);
  sub_23486F374();
  swift_getKeyPath();
  sub_23486F1DC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v19 = v15;
  v20 = v16;
  sub_23486F368();
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254257340);
  a3[4] = sub_2348192B8();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_234819404(&qword_254257368, &qword_254257370, MEMORY[0x24BDCD1C0]);
  sub_234819404(&qword_254257350, &qword_254257358, MEMORY[0x24BDCD130]);
  sub_23486F1B8();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, v11);
}

uint64_t sub_234817660(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v10 = *a1;
  v11 = *(void (**)(_QWORD *__return_ptr))(a6 + 40);
  v12 = (_QWORD *)MEMORY[0x24BEE46A8];
  v20 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  v11(v23);
  v14 = v24;
  v13 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v15 = *(_QWORD *)(*v12 + v10 + 8);
  v16 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 72))(a1, v15, a5, v14, v13);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v23);
  v23[0] = v16;
  if ((sub_23486F710() & 1) == 0)
  {
    if (PersistentModel.modelContext.getter(v20, a6))
    {
      sub_2347F2FA0(a2, v20, a6);
      swift_release();
    }
    ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v11)(v23, v20, a6);
    v17 = v24;
    v18 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 120))(a1, a3, v15, a5, v17, v18);
    __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v23);
    sub_23481950C(a2, a4, v16, v15, v20, a5, a6);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_234817800(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void (*v22)(_QWORD *__return_ptr, uint64_t, uint64_t);
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v10 = *a1;
  v11 = (_QWORD *)MEMORY[0x24BEE46A8];
  v12 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  v22 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a6 + 40);
  v22(v24, v12, a6);
  v14 = v25;
  v13 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  v15 = *(_QWORD *)(*(_QWORD *)(*v11 + v10 + 8) + 16);
  v16 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 80))(a1, v15, a5, v14, v13);
  __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v24);
  if (v16)
  {
    v24[0] = v16;
    swift_unknownObjectRetain_n();
    v17 = sub_23486F710();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    if ((v17 & 1) != 0)
      return swift_unknownObjectRelease();
  }
  if (PersistentModel.modelContext.getter(v12, a6))
  {
    sub_2347F2FA0(a2, v12, a6);
    swift_release();
  }
  v22(v24, v12, a6);
  v18 = v25;
  v19 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 128))(a1, a3, v15, a5, v18, v19);
  result = __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v24);
  if (v16)
  {
    swift_unknownObjectRetain();
    sub_23481950C(a2, a4, v16, v15, v12, a5, a6);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2348179E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;

  v10 = *a1;
  v11 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8);
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 16) + 16);
  v23[0] = MEMORY[0x2349465EC](MEMORY[0x24BEE12C8], *(_QWORD *)(v11 + 16));
  v23[1] = a4;
  v13 = MEMORY[0x2349465EC](&protocol conformance descriptor for <A> A?, v11, v23);
  PersistentModel.getValue<A, B>(forKey:)(a1, v12, a5, v13);
  v14 = v20[0];
  if (!v20[0])
    v14 = sub_23486F92C();
  v24 = v14;
  v20[0] = a3;
  swift_unknownObjectRetain();
  sub_23486F974();
  v15 = *(_QWORD *)(v10 + *MEMORY[0x24BEE46A8]);
  if (PersistentModel.modelContext.getter(v15, a5))
  {
    sub_2347F2FA0(a2, v15, a5);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v20, v15, a5);
  v16 = v21;
  v17 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v19 = v24;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 136))(a1, &v19, v11, v12, v13, v16, v17);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v20);
}

uint64_t sub_234817B7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];

  v9 = *a1;
  v10 = (_QWORD *)MEMORY[0x24BEE46A8];
  v11 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8);
  v12 = *(_QWORD *)(v11 + 16);
  v22[0] = a4;
  v13 = MEMORY[0x2349465EC](&protocol conformance descriptor for <A> [A], v11, v22);
  PersistentModel.getValue<A, B>(forKey:)(a1, v12, a5, v13);
  v19[0] = a3;
  swift_unknownObjectRetain();
  sub_23486F974();
  v14 = *(_QWORD *)(v9 + *v10);
  if (PersistentModel.modelContext.getter(v14, a5))
  {
    sub_2347F2FA0(a2, v14, a5);
    swift_release();
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 40))(v19, v14, a5);
  v15 = v20;
  v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v18 = v22[1];
  (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 136))(a1, &v18, v11, v12, v13, v15, v16);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm_3((uint64_t)v19);
}

uint64_t sub_234817CDC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a1)
  {
    swift_retain();
    a1(a3);
    return sub_234818F50((uint64_t)a1);
  }
  else
  {
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_234817DC0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (a2)
    v5 = a3;
  else
    v5 = 0;
  sub_234870520();
  return sub_234817CDC(a2, v5, a1);
}

uint64_t sub_234817E70(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (a2)
    v5 = a3;
  else
    v5 = 0;
  sub_234870520();
  return sub_234817CDC(a2, v5, a1);
}

uint64_t sub_234817F20(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (a2)
    v5 = a3;
  else
    v5 = 0;
  sub_234870520();
  return sub_234817CDC(a2, v5, a1);
}

uint64_t sub_234817FD4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (a2)
    v5 = a3;
  else
    v5 = 0;
  sub_234870520();
  return sub_234817CDC(a2, v5, a1);
}

BOOL static PersistentModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t PersistentModel.hash(into:)()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v4 = (char *)&v6 - v3;
  v7 = v0;
  sub_23486FECC();
  swift_getAssociatedConformanceWitness();
  sub_23486F6B0();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, AssociatedTypeWitness);
}

uint64_t sub_234818180()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  swift_release();
  *(_DWORD *)(v0 + 24) |= 0x80000u;
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2348181D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  swift_release();
  *(_DWORD *)(v0 + 24) |= 0x80000u;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_23481821C(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a3;
  *(_QWORD *)(v5 + 16) = result + 1;
  v6 = v5 + 16 * result;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a5;
  return result;
}

uint64_t sub_234818234(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8, void (*a9)(uint64_t), uint64_t a10, void (*a11)(uint64_t), uint64_t a12, void (*a13)(uint64_t), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v43;
  unint64_t v44;

  if (sub_23486FD4C() != a1)
    goto LABEL_55;
  sub_23486FD4C();
  v20 = (uint64_t *)v19;
  v43 = (uint64_t *)v19;
  if (swift_conformsToProtocol2())
    v21 = (uint64_t)v20;
  else
    v21 = 0;
  while (v21)
  {
    sub_2347E85B4(v21, (uint64_t *)&v43);
    v20 = v43;
    if (swift_conformsToProtocol2())
      v21 = (uint64_t)v20;
    else
      v21 = 0;
  }
  sub_23486FD4C();
  v23 = v22;
  if (swift_conformsToProtocol2())
    v24 = v23;
  else
    v24 = 0;
  if (swift_dynamicCastMetatype())
  {
    if (v24)
    {
      if (a5)
      {
        sub_23486FCBC();
        sub_234870520();
        v25 = swift_dynamicCastClassUnconditional();
        swift_retain();
        a5(v25);
        return sub_234818F50((uint64_t)a5);
      }
    }
    else if (a3)
    {
      sub_234870520();
      v37 = swift_dynamicCastClassUnconditional();
      swift_retain();
      a3(v37);
      return sub_234818F50((uint64_t)a3);
    }
    goto LABEL_61;
  }
  v27 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542580B0);
  v28 = *v20;
  if ((unint64_t)*v20 > 0x7FF || ((unint64_t)(v28 - 512) >= 3 ? (v29 = v28 == 0) : (v29 = 1), v29))
    v41 = sub_23486F524();
  else
    v41 = 0;
  v30 = *v27;
  if ((unint64_t)*v27 <= 0x7FF && (unint64_t)(v30 - 512) >= 3 && v30)
  {
    if (!v41)
      goto LABEL_30;
LABEL_46:
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    v43 = (uint64_t *)0xD000000000000029;
    v44 = 0x8000000234874B30;
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  v31 = sub_23486F524();
  if (!v41)
  {
    if (!v31)
      goto LABEL_30;
    goto LABEL_46;
  }
  if (!v31 || v31 != v41)
    goto LABEL_46;
LABEL_30:
  v32 = (uint64_t *)sub_23486F584();
  if (v33 < 1)
  {
    __break(1u);
LABEL_55:
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    sub_23486FD70();
    sub_23486FF74();
    goto LABEL_62;
  }
  v34 = *v32;
  if (swift_conformsToProtocol2())
    v35 = v34;
  else
    v35 = 0;
  if (!v35)
  {
    if (!dynamic_cast_existential_2_conditional(v34))
    {
      v43 = 0;
      v44 = 0xE000000000000000;
      sub_23486FEA8();
      swift_bridgeObjectRelease();
      v43 = (uint64_t *)0xD00000000000002BLL;
      v44 = 0x8000000234874B60;
      sub_23487055C();
      sub_23486F7DC();
      swift_bridgeObjectRelease();
      goto LABEL_62;
    }
    if (v24)
    {
      v38 = a13;
      if (a13)
      {
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189710);
        sub_234870520();
        v39 = swift_dynamicCastClassUnconditional();
LABEL_51:
        swift_retain();
        v38(v39);
        return sub_234818F50((uint64_t)v38);
      }
    }
    else
    {
      v38 = a11;
      if (a11)
      {
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189708);
        sub_234870520();
        v39 = swift_dynamicCastClassUnconditional();
        goto LABEL_51;
      }
    }
LABEL_61:
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486FD70();
    sub_23486FF74();
    goto LABEL_62;
  }
  if (v35 == a17)
  {
    if (v24)
    {
      if (a9)
      {
        sub_23486F98C();
        sub_23486FCBC();
        sub_234870520();
        v36 = swift_dynamicCastClassUnconditional();
        swift_retain();
        a9(v36);
        return sub_234818F50((uint64_t)a9);
      }
    }
    else if (a7)
    {
      sub_23486F98C();
      sub_234870520();
      v40 = swift_dynamicCastClassUnconditional();
      swift_retain();
      a7(v40);
      return sub_234818F50((uint64_t)a7);
    }
    goto LABEL_61;
  }
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
LABEL_62:
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_234818BD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;

  swift_getMetatypeMetadata();
  v2 = sub_23486F77C();
  v4 = sub_2347A6250(v2, v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    v5 = sub_2347DFD1C(a1);
    v7 = v6;
    swift_beginAccess();
    v8 = *(_QWORD *)(v4 + 104);
    if (*(_QWORD *)(v8 + 16))
    {
      v9 = sub_2347CD9BC(v5, v7);
      if ((v10 & 1) != 0)
      {
        v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
        swift_endAccess();
        swift_retain();
        swift_release();
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    sub_23486FD70();
    sub_23486FF74();
  }
  else
  {
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    sub_23481063C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
  }
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_234818E04(uint64_t a1)
{
  uint64_t v1;

  return sub_2348145B0(a1, *(_QWORD **)(v1 + 56), *(_QWORD *)(v1 + 64), *(uint64_t **)(v1 + 72), *(_QWORD ***)(v1 + 80), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_234818E38(uint64_t a1)
{
  uint64_t v1;

  return sub_234814A0C(a1, *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD **)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_234818E4C(uint64_t a1)
{
  uint64_t v1;

  return sub_234814D6C(a1, *(uint64_t **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD **)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_234818E5C(uint64_t a1)
{
  uint64_t v1;

  return sub_2348157D4(a1, *(_QWORD **)(v1 + 64), *(_QWORD *)(v1 + 72), *(uint64_t **)(v1 + 80), *(_QWORD ***)(v1 + 88), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_234818E98(uint64_t a1)
{
  uint64_t v1;

  return sub_234815C30(a1, *(_QWORD *)(v1 + 48), *(uint64_t **)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD **)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_234818EC8(uint64_t a1)
{
  uint64_t v1;

  return sub_234815F90(a1, *(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD **)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t dispatch thunk of PersistentModel.init(backingData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PersistentModel.persistentBackingData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PersistentModel.persistentBackingData.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PersistentModel.persistentBackingData.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of static PersistentModel.schemaMetadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t type metadata accessor for _ModelMetadata()
{
  return objc_opt_self();
}

void sub_234818F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _InitialBackingData(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_234818F50(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_234818F60(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_234818F78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_234818FBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254258718;
  if (!qword_254258718)
  {
    v1 = sub_23486F440();
    result = MEMORY[0x2349465EC](MEMORY[0x24BDCDAF0], v1);
    atomic_store(result, (unint64_t *)&qword_254258718);
  }
  return result;
}

uint64_t sub_234819004()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 80))
    __swift_destroy_boxed_opaque_existential_1Tm_3(v0 + 56);
  if (*(_QWORD *)(v0 + 112))
    __swift_destroy_boxed_opaque_existential_1Tm_3(v0 + 88);
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm_3(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_234819088(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2348163A0(a1, (uint64_t)(v1 + 4), v1[16], v1[17], v1[18], v1[2], v1[3]);
}

uint64_t sub_23481909C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2348190C0(uint64_t *a1)
{
  uint64_t *v1;

  return sub_234816AB0(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_2348190D0(uint64_t *a1)
{
  uint64_t *v1;

  return sub_23481682C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_2348190E0(uint64_t *a1)
{
  uint64_t *v1;

  return sub_234816638(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_2348190EC()
{
  return swift_deallocObject();
}

uint64_t sub_234819100()
{
  return swift_deallocObject();
}

uint64_t sub_234819118(uint64_t a1)
{
  return sub_234819190(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_234817DC0);
}

uint64_t sub_23481912C(uint64_t a1)
{
  uint64_t v1;

  return sub_234817E70(a1, *(void (**)(uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_234819184(uint64_t a1)
{
  return sub_234819190(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_234817F20);
}

uint64_t sub_234819190(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_2348191E0(uint64_t a1)
{
  uint64_t v1;

  return sub_234817FD4(a1, *(void (**)(uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_234819204(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_234819214(uint64_t a1)
{
  return sub_234819254(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2348169C8) & 1;
}

uint64_t sub_234819234(uint64_t a1)
{
  return sub_234819254(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2348169C8) & 1;
}

uint64_t sub_234819254(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]) & 1;
}

uint64_t sub_23481927C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2348192B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254257338;
  if (!qword_254257338)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254257340);
    v2[0] = sub_234819324();
    v2[1] = sub_2348193A0();
    result = MEMORY[0x2349465EC](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254257338);
  }
  return result;
}

unint64_t sub_234819324()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254257360;
  if (!qword_254257360)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254257370);
    v2 = sub_234819404(&qword_254257378, &qword_254257388, MEMORY[0x24BDCD228]);
    result = MEMORY[0x2349465EC](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254257360);
  }
  return result;
}

unint64_t sub_2348193A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254257348;
  if (!qword_254257348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254257358);
    v2[0] = MEMORY[0x24BEE0D38];
    v2[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x2349465EC](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254257348);
  }
  return result;
}

uint64_t sub_234819404(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2349465EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_234819444@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_234817410(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_234819460(uint64_t a1)
{
  return sub_2348194B0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_234817660);
}

uint64_t objectdestroy_36Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2348194A4(uint64_t a1)
{
  return sub_2348194B0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_234817800);
}

uint64_t sub_2348194B0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_2348194C8(uint64_t *a1)
{
  uint64_t *v1;

  return sub_234817B7C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_2348194D8(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2348179E8(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_2348194E4()
{
  return swift_deallocObject();
}

uint64_t sub_2348194F8()
{
  return swift_deallocObject();
}

uint64_t sub_23481950C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD *v7;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v36;
  _OWORD v37[6];
  _OWORD v38[6];
  uint64_t v39;
  unint64_t v40;

  swift_beginAccess();
  v14 = (uint64_t *)a2[6];
  if (!v14)
  {
    v39 = 0;
    v40 = 0xE000000000000000;
    v14 = &v39;
    sub_23486FEA8();
    sub_23486F7DC();
    *(_QWORD *)&v38[0] = a2;
    type metadata accessor for Schema.Relationship();
    sub_23486FF74();
    goto LABEL_12;
  }
  v7 = v38;
  swift_retain();
  v36 = a4;
  v15 = sub_234828A6C(a4, a6);
  v16 = v15[2];
  if (v16)
  {
    v17 = (uint64_t)(v15 + 4);
    swift_beginAccess();
    do
    {
      sub_2347C63D0(v17, (uint64_t)v37);
      v18 = *(_QWORD *)&v37[0] == a2[2] && *((_QWORD *)&v37[0] + 1) == a2[3];
      if (v18 || (sub_2348702E0() & 1) != 0)
        goto LABEL_13;
      sub_2347C640C((uint64_t)v37);
      v17 += 96;
      --v16;
    }
    while (v16);
  }
  memset(v38, 0, sizeof(v38));
  swift_bridgeObjectRelease();
  do
  {
    sub_23481927C((uint64_t)v38, &qword_254257D78);
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v38[0] = 0xD000000000000025;
    *((_QWORD *)&v38[0] + 1) = 0x8000000234875090;
    swift_beginAccess();
    a2 = (_QWORD *)a2[3];
    swift_bridgeObjectRetain();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    sub_23487055C();
    v14 = (uint64_t *)v38;
    sub_23486F7DC();
    swift_bridgeObjectRelease();
LABEL_12:
    sub_234870004();
    __break(1u);
LABEL_13:
    v19 = v37[2];
    v20 = v37[4];
    v21 = v37[5];
    v7[3] = v37[3];
    v7[4] = v20;
    v7[5] = v21;
    v38[0] = v37[0];
    v7[1] = v37[1];
    v7[2] = v19;
    swift_bridgeObjectRelease();
  }
  while (!*((_QWORD *)&v38[0] + 1));
  v22 = v7[3];
  v23 = v7[4];
  v24 = v7[1];
  v7[8] = v7[2];
  v7[9] = v22;
  v25 = v7[5];
  v7[10] = v23;
  v7[11] = v25;
  v7[6] = v38[0];
  v7[7] = v24;
  sub_2347C63D0((uint64_t)&v39, (uint64_t)v38);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a6;
  *(_QWORD *)(v26 + 24) = a7;
  v27 = v7[3];
  v28 = v7[4];
  v29 = v7[1];
  *(_OWORD *)(v26 + 64) = v7[2];
  *(_OWORD *)(v26 + 80) = v27;
  v30 = v7[5];
  *(_OWORD *)(v26 + 96) = v28;
  *(_OWORD *)(v26 + 112) = v30;
  *(_OWORD *)(v26 + 32) = v38[0];
  *(_OWORD *)(v26 + 48) = v29;
  *(_QWORD *)(v26 + 128) = a2;
  *(_QWORD *)(v26 + 136) = a3;
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = a6;
  v31[3] = a7;
  v31[4] = a3;
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = a6;
  v32[3] = a7;
  v32[4] = a3;
  v32[5] = a1;
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = a6;
  v33[3] = a7;
  v33[4] = a3;
  v33[5] = a1;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_234818234(v36, (uint64_t)v14, (void (*)(uint64_t))sub_23481997C, v26, (void (*)(uint64_t))sub_23481998C, (uint64_t)v31, (void (*)(uint64_t))sub_23481999C, (uint64_t)v32, (void (*)(uint64_t))sub_2348199D8, (uint64_t)v33, 0, 0, 0, 0, v36, v36, a5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_2347C640C((uint64_t)&v39);
}

uint64_t sub_234819920()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 80))
    __swift_destroy_boxed_opaque_existential_1Tm_3(v0 + 56);
  if (*(_QWORD *)(v0 + 112))
    __swift_destroy_boxed_opaque_existential_1Tm_3(v0 + 88);
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23481997C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_234816B9C(a1, (uint64_t)(v1 + 4), v1[16], v1[17], v1[2], v1[3]);
}

uint64_t sub_23481998C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_234817324(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_23481999C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_234816E24(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t objectdestroy_6Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2348199D8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23481700C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_2348199E4(uint64_t a1)
{
  return sub_234819254(a1, sub_23481723C) & 1;
}

uint64_t sub_234819A04(uint64_t a1)
{
  return sub_234819254(a1, sub_23481723C) & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for _UnorderedCollectionDeltaSnapshot(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for _UnorderedCollectionDeltaSnapshot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for _UnorderedCollectionDeltaSnapshot(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for _UnorderedCollectionDeltaSnapshot(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for _UnorderedCollectionDeltaSnapshot(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _UnorderedCollectionDeltaSnapshot(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _UnorderedCollectionDeltaSnapshot(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _UnorderedCollectionDeltaSnapshot()
{
  return &type metadata for _UnorderedCollectionDeltaSnapshot;
}

uint64_t sub_234819C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t result;

  *a6 = a1;
  v9 = type metadata accessor for DefaultHistoryInsert(0, a4, a5, a4);
  result = sub_2348107C0(a3, (uint64_t)a6 + *(int *)(v9 + 40));
  a6[1] = a2;
  return result;
}

uint64_t sub_234819CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  uint64_t result;

  *a7 = a1;
  v11 = type metadata accessor for DefaultHistoryUpdate(0, a5, a6, a4);
  result = sub_2348107C0(a3, (uint64_t)a7 + *(int *)(v11 + 40));
  a7[1] = a2;
  *(_QWORD *)((char *)a7 + *(int *)(v11 + 44)) = a4;
  return result;
}

uint64_t sub_234819D54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258790);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  sub_23486FF2C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189718);
  swift_getTupleTypeMetadata2();
  sub_23486F92C();
  result = sub_23486F650();
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_234819DF8(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s **v2;
  os_unfair_lock_s *v4;
  _BYTE v5[32];

  v4 = *v2 + 4;
  os_unfair_lock_lock(v4);
  sub_23481EC14(a2, (uint64_t)v5);
  sub_23486FF2C();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189718);
  sub_23486F674();
  sub_23486F68C();
  os_unfair_lock_unlock(v4);
}

__n128 sub_234819EA8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  __n128 result;

  *a7 = a1;
  v11 = type metadata accessor for DefaultHistoryDelete(0, a5, a6, (uint64_t)a4);
  sub_2348107C0(a3, (uint64_t)a7 + *(int *)(v11 + 40));
  a7[1] = a2;
  result = *a4;
  *(__n128 *)((char *)a7 + *(int *)(v11 + 44)) = *a4;
  return result;
}

uint64_t DefaultHistoryToken.tokenValue.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_234819F20(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_234828A44(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23481B620(v5);
  *a1 = v2;
  return result;
}

uint64_t HistoryChange.changedPersistentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;
  __int128 v7[2];

  sub_234796D1C(v0, (uint64_t)v7);
  sub_23481A008(v7, (uint64_t)v4);
  v1 = v5;
  v2 = v6;
  __swift_project_boxed_opaque_existential_1Tm_2(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2);
  return __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v4);
}

uint64_t sub_23481A008(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t HistoryTombstone.Iterator.next()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = sub_23486FF2C();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189718);
  swift_bridgeObjectRetain();
  v7 = sub_23486F668();
  result = swift_bridgeObjectRelease();
  if (v4 >= v7)
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    v14 = *(_QWORD *)(v1 + 16);
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (!v15)
      goto LABEL_9;
    __break(1u);
  }
  else
  {
    v19[0] = v3;
    v9 = MEMORY[0x24BEE20F8];
    v10 = sub_23486F65C();
    swift_bridgeObjectRetain();
    MEMORY[0x2349465EC](MEMORY[0x24BEE0310], v10);
    sub_23486F9B0();
    sub_23486F9C8();
    swift_bridgeObjectRelease();
    v18 = v3;
    swift_bridgeObjectRetain();
    swift_retain();
    MEMORY[0x234945194](v19, &v18, v3, v5, v6, v9);
    swift_release();
    swift_bridgeObjectRelease();
    v11 = v20;
    if (v20)
    {
      v12 = __swift_project_boxed_opaque_existential_1Tm_2(v19, v20);
      *(_QWORD *)(a1 + 24) = v11;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_0, v12, v11);
      swift_release();
      result = __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)v19);
      goto LABEL_8;
    }
  }
  swift_release();
  result = sub_23481C06C((uint64_t)v19);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
LABEL_8:
  v17 = *(_QWORD *)(v1 + 16);
  v15 = __OFADD__(v17, 1);
  v16 = v17 + 1;
  if (!v15)
  {
LABEL_9:
    *(_QWORD *)(v1 + 16) = v16;
    return result;
  }
  __break(1u);
  return result;
}

void HistoryTombstone.subscript.getter(uint64_t a1)
{
  os_unfair_lock_s **v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = v1[1];
  v5 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  v8 = a1;
  v6 = sub_23486FF2C();
  swift_retain();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189718);
  MEMORY[0x234945194](&v8, v4, v6, v7, MEMORY[0x24BEE20F8]);
  swift_release();
  os_unfair_lock_unlock(v5);
}

uint64_t HistoryTombstone.makeIterator()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = 0;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23481A2C8@<X0>(_QWORD *a1@<X8>)
{
  HistoryTombstone.makeIterator()(a1);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23481A2F0()
{
  return 0;
}

uint64_t sub_23481A2F8()
{
  return 2;
}

uint64_t sub_23481A300()
{
  uint64_t v0;

  v0 = sub_23481C340();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_23481A34C()
{
  return sub_23486F86C();
}

uint64_t HistoryDescriptor.predicate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_23486F4DC();
  v3 = sub_23486FCBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HistoryDescriptor.predicate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23486F4DC();
  v3 = sub_23486FCBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*HistoryDescriptor.predicate.modify())()
{
  return nullsub_17;
}

uint64_t HistoryDescriptor.fetchLimit.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 36));
}

uint64_t HistoryDescriptor.fetchLimit.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(a2 + 36)) = result;
  return result;
}

uint64_t (*HistoryDescriptor.fetchLimit.modify())()
{
  return nullsub_18;
}

uint64_t HistoryDescriptor.init(predicate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_23486F4DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 1, 1, v8);
  v9 = sub_23486FCBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(a4, a1, v9);
  result = type metadata accessor for HistoryDescriptor(0, a2, a3, v10);
  *(_QWORD *)(a4 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t DefaultHistoryTransaction.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23486F488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DefaultHistoryTransaction.changes.getter()
{
  type metadata accessor for DefaultHistoryTransaction();
  return swift_bridgeObjectRetain();
}

uint64_t DefaultHistoryTransaction.token.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 24));
  return swift_bridgeObjectRetain();
}

uint64_t DefaultHistoryTransaction.transactionIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 28));
}

uint64_t DefaultHistoryTransaction.storeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DefaultHistoryTransaction.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DefaultHistoryTransaction.processIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DefaultHistoryTransaction.author.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DefaultHistoryTransaction() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static DefaultHistoryTransaction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DefaultHistoryTransaction();
  return *(_QWORD *)(a1 + *(int *)(v4 + 28)) == *(_QWORD *)(a2 + *(int *)(v4 + 28));
}

uint64_t DefaultHistoryTransaction.hash(into:)()
{
  type metadata accessor for DefaultHistoryTransaction();
  return sub_2348704A8();
}

uint64_t DefaultHistoryTransaction.hashValue.getter()
{
  sub_234870484();
  type metadata accessor for DefaultHistoryTransaction();
  sub_2348704A8();
  return sub_2348704B4();
}

uint64_t sub_23481A774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23486F488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_23481A7AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23481A7B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(a1 + 24));
  return swift_bridgeObjectRetain();
}

uint64_t sub_23481A7C8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t sub_23481A7D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23481A80C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23481A840()
{
  sub_234870484();
  sub_2348704A8();
  return sub_2348704B4();
}

uint64_t sub_23481A888()
{
  return sub_2348704A8();
}

uint64_t sub_23481A8B4()
{
  sub_234870484();
  sub_2348704A8();
  return sub_2348704B4();
}

BOOL sub_23481A8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a1 + *(int *)(a3 + 28)) == *(_QWORD *)(a2 + *(int *)(a3 + 28));
}

BOOL static DefaultHistoryInsert.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23481A9BC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for DefaultHistoryInsert);
}

uint64_t DefaultHistoryUpdate.updatedAttributes.getter(uint64_t a1)
{
  sub_23481C344(a1);
  return swift_bridgeObjectRetain();
}

BOOL static DefaultHistoryUpdate.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23481A9BC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for DefaultHistoryUpdate);
}

uint64_t sub_23481A94C(uint64_t a1)
{
  sub_23481C344(a1);
  return swift_bridgeObjectRetain();
}

uint64_t DefaultHistoryDelete.changeIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DefaultHistoryDelete.transactionIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t DefaultHistoryDelete.changedPersistentIdentifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2347EB29C(v2 + *(int *)(a1 + 40), a2);
}

uint64_t DefaultHistoryDelete.tombstone.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 44));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  swift_retain();
  return swift_bridgeObjectRetain();
}

BOOL static DefaultHistoryDelete.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23481A9BC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for DefaultHistoryDelete);
}

BOOL sub_23481A9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v7 = a5(0, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v22 - v12);
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a2 + 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v16((char *)&v22 - v12, a1, v7);
  v16(v11, a2, v7);
  if (v14 == v15)
  {
    v17 = *v13;
    v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18((char *)v13, v7);
    v19 = *(_QWORD *)v11;
    v18(v11, v7);
    return v17 == v19;
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v11, v7);
    v21((char *)v13, v7);
    return 0;
  }
}

uint64_t _s9SwiftData20DefaultHistoryInsertV4hash4intoys6HasherVz_tF_0()
{
  sub_2348704A8();
  return sub_2348704A8();
}

uint64_t sub_23481AB14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DefaultHistoryDelete.changeIdentifier.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23481AB38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DefaultHistoryDelete.transactionIdentifier.getter();
  *a1 = result;
  return result;
}

uint64_t DefaultHistoryToken.id.getter()
{
  return DefaultHistoryToken.hashValue.getter();
}

uint64_t DefaultHistoryToken.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  v1 = *v0;
  result = sub_234870484();
  v3 = 0;
  v4 = v1 + 64;
  v5 = 1 << *(_BYTE *)(v1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v9 >= v8)
      return sub_2348704B4();
    v10 = *(_QWORD *)(v4 + 8 * v9);
    ++v3;
    if (!v10)
    {
      v3 = v9 + 1;
      if (v9 + 1 >= v8)
        return sub_2348704B4();
      v10 = *(_QWORD *)(v4 + 8 * v3);
      if (!v10)
      {
        v3 = v9 + 2;
        if (v9 + 2 >= v8)
          return sub_2348704B4();
        v10 = *(_QWORD *)(v4 + 8 * v3);
        if (!v10)
        {
          v3 = v9 + 3;
          if (v9 + 3 >= v8)
            return sub_2348704B4();
          v10 = *(_QWORD *)(v4 + 8 * v3);
          if (!v10)
          {
            v3 = v9 + 4;
            if (v9 + 4 >= v8)
              return sub_2348704B4();
            v10 = *(_QWORD *)(v4 + 8 * v3);
            if (!v10)
              break;
          }
        }
      }
    }
LABEL_24:
    v7 = (v10 - 1) & v10;
LABEL_5:
    result = sub_2348704A8();
  }
  v11 = v9 + 5;
  if (v11 >= v8)
    return sub_2348704B4();
  v10 = *(_QWORD *)(v4 + 8 * v11);
  if (v10)
  {
    v3 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    v3 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v3 >= v8)
      return sub_2348704B4();
    v10 = *(_QWORD *)(v4 + 8 * v3);
    ++v11;
    if (v10)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t DefaultHistoryToken.hash(into:)()
{
  uint64_t *v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v1 = 0;
  v2 = *v0;
  v3 = 1 << *(_BYTE *)(*v0 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v6 = *(_QWORD *)(v2 + 64);
  v5 = v2 + 64;
  v7 = v4 & v6;
  v8 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v10 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v10 >= v8)
      return result;
    v11 = *(_QWORD *)(v5 + 8 * v10);
    ++v1;
    if (!v11)
    {
      v1 = v10 + 1;
      if (v10 + 1 >= v8)
        return result;
      v11 = *(_QWORD *)(v5 + 8 * v1);
      if (!v11)
      {
        v1 = v10 + 2;
        if (v10 + 2 >= v8)
          return result;
        v11 = *(_QWORD *)(v5 + 8 * v1);
        if (!v11)
          break;
      }
    }
LABEL_20:
    v7 = (v11 - 1) & v11;
LABEL_5:
    result = sub_2348704A8();
  }
  v12 = v10 + 3;
  if (v12 >= v8)
    return result;
  v11 = *(_QWORD *)(v5 + 8 * v12);
  if (v11)
  {
    v1 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v1 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v1 >= v8)
      return result;
    v11 = *(_QWORD *)(v5 + 8 * v1);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

BOOL static DefaultHistoryToken.< infix(_:_:)()
{
  uint64_t v0;

  v0 = DefaultHistoryToken.hashValue.getter();
  return v0 < DefaultHistoryToken.hashValue.getter();
}

uint64_t sub_23481AE84()
{
  return 1;
}

uint64_t sub_23481AE8C()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23481AECC()
{
  return sub_234870490();
}

uint64_t sub_23481AEF0()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23481AF2C()
{
  return 0x6B6F5465726F7473;
}

uint64_t sub_23481AF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6B6F5465726F7473 && a2 == 0xEB00000000736E65)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2348702E0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23481AFF8()
{
  return 0;
}

void sub_23481B004(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23481B010()
{
  sub_23481C368();
  return sub_234870544();
}

uint64_t sub_23481B038()
{
  sub_23481C368();
  return sub_234870550();
}

uint64_t DefaultHistoryToken.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189728);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1Tm_2(a1, a1[3]);
  sub_23481C368();
  sub_234870508();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189738);
  sub_23481C3AC(&qword_256189740, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4010], MEMORY[0x24BEE04C0]);
  sub_234870208();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DefaultHistoryToken.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189748);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2347EBAC0(MEMORY[0x24BEE4AF8]);
  __swift_project_boxed_opaque_existential_1Tm_2(a1, a1[3]);
  sub_23481C368();
  sub_2348704FC();
  if (!v2)
  {
    v8 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189738);
    sub_23481C3AC(&qword_256189750, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4038], MEMORY[0x24BEE04E0]);
    sub_234870184();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v10 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v8 = v10;
  }
  __swift_destroy_boxed_opaque_existential_1Tm_4((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23481B318@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23481B32C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  v1 = *v0;
  result = sub_234870484();
  v3 = 0;
  v4 = v1 + 64;
  v5 = 1 << *(_BYTE *)(v1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v9 >= v8)
      return sub_2348704B4();
    v10 = *(_QWORD *)(v4 + 8 * v9);
    ++v3;
    if (!v10)
    {
      v3 = v9 + 1;
      if (v9 + 1 >= v8)
        return sub_2348704B4();
      v10 = *(_QWORD *)(v4 + 8 * v3);
      if (!v10)
      {
        v3 = v9 + 2;
        if (v9 + 2 >= v8)
          return sub_2348704B4();
        v10 = *(_QWORD *)(v4 + 8 * v3);
        if (!v10)
          break;
      }
    }
LABEL_20:
    v7 = (v10 - 1) & v10;
LABEL_5:
    result = sub_2348704A8();
  }
  v11 = v9 + 3;
  if (v11 >= v8)
    return sub_2348704B4();
  v10 = *(_QWORD *)(v4 + 8 * v11);
  if (v10)
  {
    v3 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v3 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v3 >= v8)
      return sub_2348704B4();
    v10 = *(_QWORD *)(v4 + 8 * v3);
    ++v11;
    if (v10)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

BOOL sub_23481B46C()
{
  uint64_t v0;

  v0 = DefaultHistoryToken.hashValue.getter();
  return v0 < DefaultHistoryToken.hashValue.getter();
}

BOOL sub_23481B4C0()
{
  uint64_t v0;

  v0 = DefaultHistoryToken.hashValue.getter();
  return v0 >= DefaultHistoryToken.hashValue.getter();
}

BOOL sub_23481B514()
{
  uint64_t v0;

  v0 = DefaultHistoryToken.hashValue.getter();
  return v0 >= DefaultHistoryToken.hashValue.getter();
}

BOOL sub_23481B568()
{
  uint64_t v0;

  v0 = DefaultHistoryToken.hashValue.getter();
  return v0 < DefaultHistoryToken.hashValue.getter();
}

uint64_t sub_23481B5BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DefaultHistoryToken.hashValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23481B5F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DefaultHistoryToken.init(from:)(a1, a2);
}

uint64_t sub_23481B608(_QWORD *a1)
{
  return DefaultHistoryToken.encode(to:)(a1);
}

uint64_t sub_23481B620(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_234870298();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_23481BD08(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_23481BDD4((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_234828A30((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_23486F938();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (*v17 == v15 && v17[1] == v16)
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_2348702E0();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*v23 == *(v21 - 1) && v23[1] == *v21)
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_2348702E0()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_2348287E8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_2348287E8((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_23481BDD4((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = *(v38 - 2) == v35 && *(v38 - 1) == v36;
          if (v39 || (sub_2348702E0() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_23486FFF8();
  __break(1u);
  return result;
}

uint64_t sub_23481BD08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    v10 = *v9;
    v11 = v9[1];
    v12 = v6;
    v13 = (_QWORD *)v8;
    while (1)
    {
      result = *(v13 - 2);
      v14 = result == v10 && *(v13 - 1) == v11;
      if (v14 || (result = sub_2348702E0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v10 = *v13;
      v11 = v13[1];
      *(_OWORD *)v13 = *((_OWORD *)v13 - 1);
      *(v13 - 1) = v11;
      *(v13 - 2) = v10;
      v13 -= 2;
      if (v4 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23481BDD4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = v21 == *((_QWORD *)v17 - 2) && v22 == *((_QWORD *)v17 - 1);
          if (v23 || (sub_2348702E0() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v4 == *(_QWORD *)v6 && *((_QWORD *)v4 + 1) == *((_QWORD *)v6 + 1);
        if (v15 || (sub_2348702E0() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_2348288E0((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_23481C06C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *__swift_project_boxed_opaque_existential_1Tm_2(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm_4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t type metadata accessor for HistoryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HistoryDescriptor);
}

uint64_t type metadata accessor for DefaultHistoryTransaction()
{
  uint64_t result;

  result = qword_2542585C0;
  if (!qword_2542585C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for DefaultHistoryInsert(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultHistoryInsert);
}

uint64_t _s9SwiftData19DefaultHistoryTokenV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v21;

  v2 = *a1;
  v3 = *a2;
  if (*(_QWORD *)(*a1 + 16) != *(_QWORD *)(*a2 + 16))
    return 0;
  swift_bridgeObjectRetain_n();
  v4 = sub_234826B94(v2);
  swift_bridgeObjectRelease();
  v21 = v4;
  sub_234819F20((uint64_t *)&v21);
  swift_bridgeObjectRelease();
  v5 = v21;
  swift_bridgeObjectRetain_n();
  v6 = sub_234826B94(v3);
  swift_bridgeObjectRelease();
  v21 = v6;
  sub_234819F20((uint64_t *)&v21);
  swift_bridgeObjectRelease();
  v7 = sub_23484CA04(v5, v21);
  swift_release();
  if ((v7 & 1) == 0)
  {
LABEL_15:
    swift_release();
    return 0;
  }
  v8 = v5[2];
  if (v8)
  {
    v9 = v5 + 5;
    do
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v12 = *(_QWORD *)(v2 + 16);
      swift_bridgeObjectRetain();
      if (v12 && (v13 = sub_2347CD9BC(v11, v10), (v14 & 1) != 0))
      {
        v15 = 0;
        v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v13);
        if (!*(_QWORD *)(v3 + 16))
          goto LABEL_5;
      }
      else
      {
        v16 = 0;
        v15 = 1;
        if (!*(_QWORD *)(v3 + 16))
          goto LABEL_5;
      }
      v17 = sub_2347CD9BC(v11, v10);
      if ((v18 & 1) == 0)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
          goto LABEL_15;
        goto LABEL_6;
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v17);
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0 || v16 != v19)
        goto LABEL_15;
LABEL_6:
      v9 += 2;
      --v8;
    }
    while (v8);
  }
  swift_release();
  return 1;
}

uint64_t sub_23481C344(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 44));
}

uint64_t type metadata accessor for DefaultHistoryUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultHistoryUpdate);
}

uint64_t type metadata accessor for DefaultHistoryDelete(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultHistoryDelete);
}

unint64_t sub_23481C368()
{
  unint64_t result;

  result = qword_256189730;
  if (!qword_256189730)
  {
    result = MEMORY[0x2349465EC](&unk_23487AC78, &type metadata for DefaultHistoryToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189730);
  }
  return result;
}

uint64_t sub_23481C3AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189738);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x2349465EC](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23481C410()
{
  JUMPOUT(0x2349465ECLL);
}

unint64_t sub_23481C424()
{
  unint64_t result;

  result = qword_256189758;
  if (!qword_256189758)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for DefaultHistoryToken, &type metadata for DefaultHistoryToken);
    atomic_store(result, (unint64_t *)&qword_256189758);
  }
  return result;
}

unint64_t sub_23481C46C()
{
  unint64_t result;

  result = qword_256189760;
  if (!qword_256189760)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for DefaultHistoryToken, &type metadata for DefaultHistoryToken);
    atomic_store(result, (unint64_t *)&qword_256189760);
  }
  return result;
}

unint64_t sub_23481C4B4()
{
  unint64_t result;

  result = qword_256189768;
  if (!qword_256189768)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for DefaultHistoryToken, &type metadata for DefaultHistoryToken);
    atomic_store(result, (unint64_t *)&qword_256189768);
  }
  return result;
}

uint64_t sub_23481C4F8()
{
  return MEMORY[0x24BEE4020];
}

uint64_t sub_23481C504()
{
  return MEMORY[0x24BEE4018];
}

uint64_t sub_23481C510(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23481C580(&qword_254257448, (uint64_t)&protocol conformance descriptor for DefaultHistoryTransaction);
  result = sub_23481C580(&qword_254257458, (uint64_t)&protocol conformance descriptor for DefaultHistoryTransaction);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23481C55C()
{
  return sub_23481C580(&qword_254257450, (uint64_t)&protocol conformance descriptor for DefaultHistoryTransaction);
}

uint64_t sub_23481C580(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DefaultHistoryTransaction();
    result = MEMORY[0x2349465EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23481C5C0()
{
  return MEMORY[0x24BEE4018];
}

uint64_t sub_23481C5CC()
{
  return MEMORY[0x24BEE4020];
}

uint64_t sub_23481C5D8()
{
  return MEMORY[0x24BEE4018];
}

uint64_t sub_23481C5E4()
{
  return MEMORY[0x24BEE4020];
}

uint64_t sub_23481C5F0()
{
  return MEMORY[0x24BEE4018];
}

uint64_t sub_23481C5FC()
{
  return MEMORY[0x24BEE4020];
}

uint64_t sub_23481C608()
{
  return MEMORY[0x24BEE4018];
}

uint64_t sub_23481C614()
{
  return MEMORY[0x24BEE4020];
}

uint64_t sub_23481C620()
{
  return MEMORY[0x24BEE4018];
}

uint64_t sub_23481C62C()
{
  return MEMORY[0x24BEE4020];
}

uint64_t sub_23481C638()
{
  return MEMORY[0x24BEE4018];
}

uint64_t sub_23481C644(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_23481C64C()
{
  return MEMORY[0x24BEE4020];
}

uint64_t sub_23481C658()
{
  return MEMORY[0x24BEE4018];
}

uint64_t sub_23481C664()
{
  return sub_23481C3AC(&qword_256189750, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4038], MEMORY[0x24BEE04E0]);
}

uint64_t sub_23481C698()
{
  return sub_23481C3AC(&qword_256189740, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4010], MEMORY[0x24BEE04C0]);
}

unint64_t sub_23481C6D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256189770;
  if (!qword_256189770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189738);
    v2 = MEMORY[0x24BEE4018];
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE04C8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256189770);
  }
  return result;
}

unint64_t sub_23481C72C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23481C424();
  a1[2] = sub_23481C770();
  a1[3] = sub_23481C7B4();
  a1[4] = sub_23481C46C();
  result = sub_23481C4B4();
  a1[5] = result;
  return result;
}

unint64_t sub_23481C770()
{
  unint64_t result;

  result = qword_256189778;
  if (!qword_256189778)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for DefaultHistoryToken, &type metadata for DefaultHistoryToken);
    atomic_store(result, (unint64_t *)&qword_256189778);
  }
  return result;
}

unint64_t sub_23481C7B4()
{
  unint64_t result;

  result = qword_256189780;
  if (!qword_256189780)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for DefaultHistoryToken, &type metadata for DefaultHistoryToken);
    atomic_store(result, (unint64_t *)&qword_256189780);
  }
  return result;
}

unint64_t sub_23481C7FC()
{
  unint64_t result;

  result = qword_256189788[0];
  if (!qword_256189788[0])
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for DefaultHistoryToken, &type metadata for DefaultHistoryToken);
    atomic_store(result, qword_256189788);
  }
  return result;
}

uint64_t sub_23481C844()
{
  return MEMORY[0x24BEE1778];
}

uint64_t dispatch thunk of HistoryTransaction.changes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HistoryTransaction.token.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of HistoryTransaction.transactionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HistoryTransaction.storeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of HistoryTransaction.author.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t initializeBufferWithCopyOfBuffer for HistoryChange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for HistoryChange(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm_4(a1);
}

uint64_t initializeWithCopy for HistoryChange(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  char v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2)
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    v5 = 2;
  }
  else if (v3 == 1)
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    v5 = 1;
  }
  else
  {
    v5 = 0;
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
  }
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for HistoryChange(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  char v6;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_4(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a2 + 3;
    if (v4 == 2)
    {
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v6 = 2;
    }
    else if (v4 == 1)
    {
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v6;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HistoryChange(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_4(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 3)
      LOBYTE(v4) = *(_BYTE *)a2 + 3;
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryChange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HistoryChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_23481CAF8(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_23481CB18(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HistoryChange()
{
  return &type metadata for HistoryChange;
}

uint64_t dispatch thunk of HistoryUpdate.updatedAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of HistoryDelete.changeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HistoryDelete.changedPersistentIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HistoryDelete.tombstone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of HistoryToken.tokenValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_23481CB78()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_23481CB88(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23481CBBC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_23481CC18(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23481CC54(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23481CC9C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for HistoryTombstone(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HistoryTombstone);
}

uint64_t sub_23481CCE4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23481CCF0()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23481CD1C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23481CD58(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_23481CDBC(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t sub_23481CE00(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23481CE48(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for HistoryTombstone.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HistoryTombstone.Iterator);
}

uint64_t sub_23481CE94()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23481CE9C()
{
  uint64_t result;
  unint64_t v1;

  sub_23486F4DC();
  result = sub_23486FCBC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23481CF2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23486F4DC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_23486FCBC();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
  }
  return a1;
}

uint64_t sub_23481D02C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_23486F4DC();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

char *sub_23481D0A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23486F4DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_23486FCBC();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 36)] = *(_QWORD *)&a2[*(int *)(a3 + 36)];
  return a1;
}

char *sub_23481D174(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_23486F4DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_23486FCBC();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 36)] = *(_QWORD *)&a2[*(int *)(a3 + 36)];
  return a1;
}

char *sub_23481D294(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23486F4DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_23486FCBC();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 36)] = *(_QWORD *)&a2[*(int *)(a3 + 36)];
  return a1;
}

char *sub_23481D368(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_23486F4DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_23486FCBC();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 36)] = *(_QWORD *)&a2[*(int *)(a3 + 36)];
  return a1;
}

uint64_t sub_23481D488()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23481D494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23486F4DC();
  v4 = sub_23486FCBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23481D4F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23481D504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23486F4DC();
  v4 = sub_23486FCBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t dispatch thunk of static HistoryProviding.historyType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HistoryProviding.fetchHistory(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of HistoryProviding.deleteHistory(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DefaultHistoryTransaction(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23486F488();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = a3[9];
    v14 = a3[10];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)a1 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[11];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DefaultHistoryTransaction(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23486F488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = sub_23486F488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[9];
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(a1 + v13);
  v18 = (_QWORD *)(a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_23486F488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v7 = a3[8];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[9];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[11];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23486F488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for DefaultHistoryTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23486F488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v7 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultHistoryTransaction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23481DB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23486F488();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DefaultHistoryTransaction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23481DBA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23486F488();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23481DC20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23486F488();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23481DCBC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23481DCC4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PersistentIdentifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23481DD3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 40);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23486F440();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    v9 = type metadata accessor for PersistentIdentifier(0);
    *(_QWORD *)&v6[*(int *)(v9 + 20)] = *(_QWORD *)&v7[*(int *)(v9 + 20)];
  }
  swift_retain();
  return v3;
}

uint64_t sub_23481DDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 40);
  v3 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for PersistentIdentifier(0);
  return swift_release();
}

_OWORD *sub_23481DE24(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 40);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  v8 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v5[*(int *)(v8 + 20)] = *(_QWORD *)&v6[*(int *)(v8 + 20)];
  swift_retain();
  return a1;
}

_QWORD *sub_23481DE98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 40);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  v8 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v5[*(int *)(v8 + 20)] = *(_QWORD *)&v6[*(int *)(v8 + 20)];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_23481DF20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 40);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v5[*(int *)(v8 + 20)] = *(_QWORD *)&v6[*(int *)(v8 + 20)];
  return a1;
}

_OWORD *sub_23481DF90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 40);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  v8 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v5[*(int *)(v8 + 20)] = *(_QWORD *)&v6[*(int *)(v8 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_23481E008()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23481E014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 40);
  v5 = type metadata accessor for PersistentIdentifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_23481E054()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23481E060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 40);
  v6 = type metadata accessor for PersistentIdentifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23481E0A4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23481E0AC()
{
  return sub_23481E490();
}

uint64_t *sub_23481E0BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = *(int *)(a3 + 40);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23486F440();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = type metadata accessor for PersistentIdentifier(0);
    *(_QWORD *)&v8[*(int *)(v11 + 20)] = *(_QWORD *)&v9[*(int *)(v11 + 20)];
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23481E180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 40);
  v3 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for PersistentIdentifier(0);
  swift_release();
  return swift_bridgeObjectRelease();
}

_OWORD *sub_23481E1E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v7[*(int *)(v10 + 20)] = *(_QWORD *)&v8[*(int *)(v10 + 20)];
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 44));
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23481E280(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v7[*(int *)(v10 + 20)] = *(_QWORD *)&v8[*(int *)(v10 + 20)];
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_23481E334(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v7[*(int *)(v10 + 20)] = *(_QWORD *)&v8[*(int *)(v10 + 20)];
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 44));
  return a1;
}

_OWORD *sub_23481E3C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v7[*(int *)(v10 + 20)] = *(_QWORD *)&v8[*(int *)(v10 + 20)];
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23481E45C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23481E46C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23481E47C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23481E484()
{
  return sub_23481E490();
}

uint64_t sub_23481E490()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PersistentIdentifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23481E50C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = *(int *)(a3 + 40);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23486F440();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = type metadata accessor for PersistentIdentifier(0);
    *(_QWORD *)&v8[*(int *)(v11 + 20)] = *(_QWORD *)&v9[*(int *)(v11 + 20)];
    v12 = *(int *)(a3 + 44);
    v13 = (uint64_t *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23481E5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 40);
  v3 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for PersistentIdentifier(0);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_OWORD *sub_23481E654(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v7[*(int *)(v10 + 20)] = *(_QWORD *)&v8[*(int *)(v10 + 20)];
  v11 = *(int *)(a3 + 44);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23481E6FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v7[*(int *)(v10 + 20)] = *(_QWORD *)&v8[*(int *)(v10 + 20)];
  swift_retain();
  swift_release();
  v11 = *(int *)(a3 + 44);
  v12 = (char *)a1 + v11;
  v13 = (_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = *v13;
  swift_retain();
  swift_release();
  *((_QWORD *)v12 + 1) = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_23481E7D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v7[*(int *)(v10 + 20)] = *(_QWORD *)&v8[*(int *)(v10 + 20)];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 44));
  return a1;
}

_OWORD *sub_23481E85C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23486F440();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = type metadata accessor for PersistentIdentifier(0);
  *(_QWORD *)&v7[*(int *)(v10 + 20)] = *(_QWORD *)&v8[*(int *)(v10 + 20)];
  swift_release();
  v11 = *(int *)(a3 + 44);
  v12 = (char *)a1 + v11;
  v13 = (_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = *v13;
  swift_release();
  *((_QWORD *)v12 + 1) = v13[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23481E910()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for PersistentIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 40), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23481E9A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_6Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for PersistentIdentifier(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 40), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for DefaultHistoryToken()
{
  return &type metadata for DefaultHistoryToken;
}

uint64_t getEnumTagSinglePayload for DefaultHistoryToken.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for DefaultHistoryToken.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23481EAD0 + 4 * asc_23487A590[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23481EAF0 + 4 * byte_23487A595[v4]))();
}

_BYTE *sub_23481EAD0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23481EAF0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23481EAF8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23481EB00(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23481EB08(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23481EB10(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23481EB1C()
{
  return 0;
}

ValueMetadata *type metadata accessor for DefaultHistoryToken.CodingKeys()
{
  return &type metadata for DefaultHistoryToken.CodingKeys;
}

unint64_t sub_23481EB40()
{
  unint64_t result;

  result = qword_256189910;
  if (!qword_256189910)
  {
    result = MEMORY[0x2349465EC](&unk_23487AC50, &type metadata for DefaultHistoryToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189910);
  }
  return result;
}

unint64_t sub_23481EB88()
{
  unint64_t result;

  result = qword_256189918;
  if (!qword_256189918)
  {
    result = MEMORY[0x2349465EC](&unk_23487ABC0, &type metadata for DefaultHistoryToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189918);
  }
  return result;
}

unint64_t sub_23481EBD0()
{
  unint64_t result;

  result = qword_256189920;
  if (!qword_256189920)
  {
    result = MEMORY[0x2349465EC](&unk_23487ABE8, &type metadata for DefaultHistoryToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189920);
  }
  return result;
}

uint64_t sub_23481EC14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_23481ECAC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  char v6;
  id v7;
  void *v9;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v5 = sub_2347CDB28(a1);
      if ((v6 & 1) != 0)
      {
        v4 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v5);
        v7 = v4;
        return v4;
      }
    }
    return 0;
  }
  swift_retain();
  v3 = sub_23486FFE0();
  swift_release();
  if (!v3)
    return 0;
  sub_23482B104(0, &qword_256189340);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v4 = v9;
  swift_unknownObjectRelease();
  return v4;
}

uint64_t Schema.__allocating_init(_:version:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  Schema.init(_:version:)(a1, a2);
  return v4;
}

uint64_t Schema.__allocating_init(versionedSchema:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = (*(uint64_t (**)(void))(a2 + 8))();
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a2 + 16))(&v9, a1, a2);
  v7 = v9;
  v8 = v10;
  v5 = swift_allocObject();
  Schema.init(_:version:)(v4, (uint64_t)&v7);
  return v5;
}

uint64_t sub_23481EE68(_QWORD **a1, uint64_t *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = (_QWORD *)sub_234828A58(v4);
  v5 = v4[2];
  v7[0] = (uint64_t)(v4 + 4);
  v7[1] = v5;
  result = sub_234827158(v7, a2);
  *a1 = v4;
  return result;
}

uint64_t sub_23481EEE4()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23481EF28()
{
  return sub_234870490();
}

uint64_t sub_23481EF54()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

BOOL sub_23481EF94(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23481EFA8()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258790);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_2561914E0 = result;
  return result;
}

void sub_23481EFDC()
{
  off_256189928 = (_UNKNOWN *)MEMORY[0x24BEE4B00];
}

uint64_t sub_23481EFF0()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258790);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_25425B120 = result;
  return result;
}

void sub_23481F024()
{
  off_254258768 = (_UNKNOWN *)MEMORY[0x24BEE4B00];
}

void sub_23481F048()
{
  qword_254258878 = MEMORY[0x24BEE4B00];
}

void sub_23481F05C()
{
  off_256189930 = (_UNKNOWN *)MEMORY[0x24BEE4B00];
}

id sub_23481F070()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1788]), sel_init);
  qword_254258888 = (uint64_t)result;
  return result;
}

SwiftData::Schema::Version __swiftcall Schema.Version.init(_:_:_:)(Swift::Int a1, Swift::Int a2, Swift::Int a3)
{
  Swift::Int *v3;
  SwiftData::Schema::Version result;

  if ((a2 | a1 | a3) < 0)
  {
    __break(1u);
  }
  else
  {
    *v3 = a1;
    v3[1] = a2;
    v3[2] = a3;
  }
  result.patch = a3;
  result.minor = a2;
  result.major = a1;
  return result;
}

void static Schema.schemaEncodingVersion.getter(_QWORD *a1@<X8>)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 1;
}

__n128 Schema.encodingVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  __n128 result;

  v2 = v1[2].n128_u64[0];
  result = v1[1];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  return result;
}

__n128 Schema.version.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 56);
  result = *(__n128 *)(v1 + 40);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  return result;
}

uint64_t Schema.entities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.entitiesByName.getter()
{
  return swift_bridgeObjectRetain();
}

id static Schema.purgeSchemaCaches()()
{
  void *v0;

  if (qword_254258818 != -1)
    swift_once();
  objc_msgSend((id)qword_254258888, sel_lock);
  if (qword_254258880 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)MEMORY[0x24BEE4B00];
  qword_254258878 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  if (qword_256189238 != -1)
    swift_once();
  swift_beginAccess();
  off_256189930 = v0;
  swift_bridgeObjectRelease();
  return objc_msgSend((id)qword_254258888, sel_unlock);
}

_QWORD *static Schema.createSchema(versionedSchema:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  void *v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  if (qword_254258818 != -1)
    swift_once();
  objc_msgSend((id)qword_254258888, sel_lock);
  if (qword_256189238 != -1)
    swift_once();
  swift_beginAccess();
  v4 = off_256189930;
  if (*((_QWORD *)off_256189930 + 2) && (v5 = sub_2347CDF0C(a1, a2), (v6 & 1) != 0))
  {
    v7 = *(_QWORD **)(v4[7] + 8 * v5);
    swift_endAccess();
    v8 = (void *)qword_254258888;
    swift_retain();
    objc_msgSend(v8, sel_unlock);
  }
  else
  {
    swift_endAccess();
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a2 + 16))(&v20, a1, a2);
    v18 = v20;
    v19 = v21;
    v7 = (_QWORD *)swift_allocObject();
    Schema.init(_:version:)(v9, (uint64_t)&v18);
    objc_msgSend((id)qword_254258888, sel_lock, v18, v19);
    if (qword_254258880 != -1)
      swift_once();
    swift_beginAccess();
    v10 = qword_254258878;
    v11 = (_QWORD *)swift_retain();
    v12 = sub_23481ECAC(v11, v10);
    swift_release();
    swift_endAccess();
    if (!v12)
    {
      v13 = sub_2348576C8();
      if (!v13)
      {
        objc_msgSend((id)qword_254258888, sel_unlock);
        sub_234828FF8();
        swift_allocError();
        *v17 = 0xD000000000000031;
        v17[1] = 0x80000002348751C0;
        swift_willThrow();
        swift_release();
        objc_msgSend((id)qword_254258888, sel_unlock);
        return v7;
      }
      v14 = (void *)v13;
      swift_beginAccess();
      swift_retain();
      v12 = v14;
      sub_234825F8C((uint64_t)v12, v7);
      swift_endAccess();
      swift_release();
    }
    objc_msgSend((id)qword_254258888, sel_unlock);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v18 = off_256189930;
    off_256189930 = (_UNKNOWN *)0x8000000000000000;
    sub_2348075C8((uint64_t)v7, a1, a2, isUniquelyReferenced_nonNull_native);
    off_256189930 = (_UNKNOWN *)v18;
    swift_bridgeObjectRelease();
    swift_endAccess();

    objc_msgSend((id)qword_254258888, sel_unlock);
  }
  return v7;
}

_QWORD *Schema.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;

  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 1;
  v0[3] = 0;
  v0[4] = 0;
  v0[5] = 1;
  v0[6] = 0;
  v0[7] = 0;
  v1 = MEMORY[0x24BEE4AF8];
  v0[8] = MEMORY[0x24BEE4AF8];
  v0[9] = sub_2347EBBD0(v1);
  return v0;
}

_QWORD *Schema.init()()
{
  _QWORD *v0;
  uint64_t v1;

  v0[2] = 1;
  v0[3] = 0;
  v0[4] = 0;
  v0[5] = 1;
  v0[6] = 0;
  v0[7] = 0;
  v1 = MEMORY[0x24BEE4AF8];
  v0[8] = MEMORY[0x24BEE4AF8];
  v0[9] = sub_2347EBBD0(v1);
  return v0;
}

uint64_t Schema.__allocating_init(_:version:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_234829C7C(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t Schema.init(_:version:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_234829C7C(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Schema.init(_:version:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  int64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  int64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  int64_t v103;
  unint64_t v104;
  unint64_t v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  int64_t v109;
  char v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  int64_t v129;
  unint64_t v130;
  unint64_t v131;
  int64_t v132;
  unint64_t v133;
  int64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  _QWORD *v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t result;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  int64_t v167;
  uint64_t v168;
  int64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  int64_t v177;
  _QWORD *v178;
  int64_t v179;
  uint64_t v180;
  _QWORD *v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  int64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int64_t v198;
  unint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  int64_t v203;
  unint64_t v204;

  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 16) = 1;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)a2;
  *(_QWORD *)(v2 + 56) = v4;
  v162 = swift_allocObject();
  *(_QWORD *)(v162 + 16) = MEMORY[0x24BEE4AF8];
  v5 = (uint64_t *)(v162 + 16);
  v6 = swift_allocObject();
  v7 = MEMORY[0x24BEE4B00];
  v161 = v6;
  *(_QWORD *)(v6 + 16) = MEMORY[0x24BEE4B00];
  v174 = v6 + 16;
  v160 = swift_allocObject();
  *(_QWORD *)(v160 + 16) = v7;
  v8 = v160 + 16;
  v9 = *(_QWORD *)(a1 + 16);
  v163 = a1;
  if (v9)
  {
    v8 = a1 + 32;
    swift_bridgeObjectRetain();
    v10 = 0;
    while (v10 < *(_QWORD *)(a1 + 16))
    {
      v11 = *(_QWORD *)(v8 + 16 * v10);
      v200 = v11;
      if (swift_conformsToProtocol2())
        v12 = v11;
      else
        v12 = 0;
      if (v12)
      {
        do
        {
          sub_2347E85B4(v12, &v200);
          v13 = v200;
          if (swift_conformsToProtocol2())
            v12 = v13;
          else
            v12 = 0;
        }
        while (v12);
      }
      else
      {
        v13 = v11;
      }
      v14 = swift_conformsToProtocol2();
      if (v14)
        v15 = v14;
      else
        v15 = 0;
      if (v14)
        v16 = (objc_class *)v13;
      else
        v16 = 0;
      if (!v16)
      {
        v200 = 0;
        v201 = 0xE000000000000000;
        sub_23486FEA8();
        swift_bridgeObjectRelease();
        v200 = 0xD00000000000001DLL;
        v201 = 0x8000000234875220;
        sub_23487055C();
        sub_23486F7DC();
        swift_bridgeObjectRelease();
        goto LABEL_259;
      }
      ++v10;
      sub_234820FC0(v16, v161, v162, v160, (uint64_t)v16, v15);
      if (v10 == v9)
      {
        swift_bridgeObjectRelease();
        v8 = v160 + 16;
        goto LABEL_23;
      }
    }
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    swift_bridgeObjectRetain_n();
    v17 = sub_23487001C();
    swift_bridgeObjectRelease();
    if (!v17)
      goto LABEL_218;
    goto LABEL_25;
  }
LABEL_23:
  swift_beginAccess();
  v159 = *v5;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_217;
  v17 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v17)
  {
LABEL_25:
    v18 = 0;
    v19 = v159;
    v158 = v17;
    do
    {
      if ((v159 & 0xC000000000000001) != 0)
      {
        v20 = v18;
        v178 = (_QWORD *)MEMORY[0x234945A1C](v18, v19);
        v21 = __OFADD__(v20, 1);
        v22 = v20 + 1;
        if (v21)
          goto LABEL_215;
      }
      else
      {
        if (v18 >= *(_QWORD *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_216;
        v23 = v18;
        v178 = *(_QWORD **)(v159 + 32 + 8 * v18);
        swift_retain();
        v21 = __OFADD__(v23, 1);
        v22 = v23 + 1;
        if (v21)
          goto LABEL_215;
      }
      v164 = v22;
      v165 = v178 + 11;
      swift_beginAccess();
      v24 = v178[11];
      if ((v24 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        sub_23486FDC4();
        type metadata accessor for Schema.Relationship();
        sub_23482B044((unint64_t *)&qword_2542575D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
        sub_23486FA88();
        v24 = v185;
        v8 = v186;
        v25 = v187;
        v26 = v188;
        v27 = v189;
      }
      else
      {
        v28 = -1 << *(_BYTE *)(v24 + 32);
        v8 = v24 + 56;
        v25 = ~v28;
        v29 = -v28;
        if (v29 < 64)
          v30 = ~(-1 << v29);
        else
          v30 = -1;
        v27 = v30 & *(_QWORD *)(v24 + 56);
        swift_bridgeObjectRetain();
        v26 = 0;
      }
      v31 = 0;
      v177 = (unint64_t)(v25 + 64) >> 6;
      while (1)
      {
        v32 = v26;
        if (v24 < 0)
          break;
        if (v27)
        {
          v33 = __clz(__rbit64(v27));
          v27 &= v27 - 1;
          v34 = v33 | (v26 << 6);
        }
        else
        {
          ++v26;
          if (__OFADD__(v32, 1))
          {
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
            goto LABEL_212;
          }
          if (v26 >= v177)
            goto LABEL_75;
          v37 = *(_QWORD *)(v8 + 8 * v26);
          if (!v37)
          {
            v38 = v32 + 2;
            if (v32 + 2 >= v177)
              goto LABEL_75;
            v37 = *(_QWORD *)(v8 + 8 * v38);
            if (v37)
              goto LABEL_54;
            v38 = v32 + 3;
            if (v32 + 3 >= v177)
              goto LABEL_75;
            v37 = *(_QWORD *)(v8 + 8 * v38);
            if (v37)
            {
LABEL_54:
              v26 = v38;
            }
            else
            {
              v26 = v32 + 4;
              if (v32 + 4 >= v177)
                goto LABEL_75;
              v37 = *(_QWORD *)(v8 + 8 * v26);
              if (!v37)
              {
                v50 = v32 + 5;
                do
                {
                  if (v177 == v50)
                    goto LABEL_75;
                  v37 = *(_QWORD *)(v8 + 8 * v50++);
                }
                while (!v37);
                v26 = v50 - 1;
              }
            }
          }
          v27 = (v37 - 1) & v37;
          v34 = __clz(__rbit64(v37)) + (v26 << 6);
        }
        v36 = *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * v34);
        swift_retain();
        if (!v36)
          goto LABEL_75;
LABEL_57:
        swift_beginAccess();
        v39 = *(_QWORD **)(v36 + 112);
        if (v39)
        {
          swift_retain();
          v40 = sub_23486FD4C();
          v41 = swift_conformsToProtocol2();
          if (v41)
            v42 = v41;
          else
            v42 = 0;
          if (v41)
            v43 = v40;
          else
            v43 = 0;
          if (!v43)
            goto LABEL_259;
          v171 = sub_23481063C();
          v45 = v44;
          swift_beginAccess();
          v46 = *(_QWORD *)v174;
          if (!*(_QWORD *)(*(_QWORD *)v174 + 16))
            goto LABEL_258;
          swift_bridgeObjectRetain();
          v47 = sub_2347CD9BC(v171, v45);
          if ((v48 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_258:
            swift_endAccess();
            v183 = 0;
            v184 = 0xE000000000000000;
            sub_23486FEA8();
            sub_23486F7DC();
            sub_23486F7DC();
            sub_23486F7DC();
            v181 = v39;
            sub_23486FD70();
            sub_23486FF74();
            goto LABEL_259;
          }
          v49 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v47);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease_n();
          sub_234823108(v43, (uint64_t)v39, v49, v36, v43, v42);
          swift_release();
          swift_release();
          swift_release();
          v31 = 1;
        }
        else
        {
          swift_release();
        }
      }
      v35 = (_QWORD *)sub_23486FE24();
      if (v35)
      {
        v181 = v35;
        type metadata accessor for Schema.Relationship();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v36 = v183;
        swift_unknownObjectRelease();
        if (v183)
          goto LABEL_57;
      }
LABEL_75:
      sub_23482AF78();
      if ((v31 & 1) != 0)
      {
        v8 = v160 + 16;
        goto LABEL_27;
      }
      v51 = *v165;
      v8 = v160 + 16;
      if ((*v165 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        sub_23486FDC4();
        type metadata accessor for Schema.Relationship();
        sub_23482B044((unint64_t *)&qword_2542575D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
        sub_23486FA88();
        v51 = v190;
        v168 = v191;
        v52 = v192;
        v53 = v193;
        v54 = v194;
      }
      else
      {
        v55 = -1 << *(_BYTE *)(v51 + 32);
        v168 = v51 + 56;
        v56 = ~v55;
        v57 = -v55;
        if (v57 < 64)
          v58 = ~(-1 << v57);
        else
          v58 = -1;
        v54 = v58 & *(_QWORD *)(v51 + 56);
        swift_bridgeObjectRetain();
        v52 = v56;
        v53 = 0;
      }
      v167 = (unint64_t)(v52 + 64) >> 6;
      v166 = v51;
LABEL_84:
      while (2)
      {
        if (v51 < 0)
        {
          v62 = (_QWORD *)sub_23486FE24();
          if (!v62)
            break;
          v181 = v62;
          type metadata accessor for Schema.Relationship();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v63 = v183;
          swift_unknownObjectRelease();
          v61 = v53;
          v59 = v54;
          if (!v183)
            break;
          goto LABEL_100;
        }
        if (v54)
        {
          v59 = (v54 - 1) & v54;
          v60 = __clz(__rbit64(v54)) | (v53 << 6);
          v61 = v53;
          goto LABEL_99;
        }
        v61 = v53 + 1;
        if (__OFADD__(v53, 1))
          goto LABEL_211;
        if (v61 < v167)
        {
          v64 = *(_QWORD *)(v168 + 8 * v61);
          if (!v64)
          {
            v65 = v53 + 2;
            if (v53 + 2 >= v167)
              break;
            v64 = *(_QWORD *)(v168 + 8 * v65);
            if (v64)
              goto LABEL_97;
            v65 = v53 + 3;
            if (v53 + 3 >= v167)
              break;
            v64 = *(_QWORD *)(v168 + 8 * v65);
            if (v64)
            {
LABEL_97:
              v61 = v65;
            }
            else
            {
              v61 = v53 + 4;
              if (v53 + 4 >= v167)
                break;
              v64 = *(_QWORD *)(v168 + 8 * v61);
              if (!v64)
              {
                v121 = v53 + 5;
                do
                {
                  if (v167 == v121)
                    goto LABEL_207;
                  v64 = *(_QWORD *)(v168 + 8 * v121++);
                }
                while (!v64);
                v61 = v121 - 1;
              }
            }
          }
          v59 = (v64 - 1) & v64;
          v60 = __clz(__rbit64(v64)) + (v61 << 6);
LABEL_99:
          v63 = *(_QWORD *)(*(_QWORD *)(v51 + 48) + 8 * v60);
          swift_retain();
          if (!v63)
            break;
LABEL_100:
          swift_beginAccess();
          v66 = *(_QWORD *)(v63 + 64);
          if (swift_conformsToProtocol2())
            v67 = v66;
          else
            v67 = 0;
          if (!v67 || (*(_BYTE *)(v63 + 169) & 1) != 0)
          {
            swift_release();
            v53 = v61;
            v54 = v59;
            continue;
          }
          swift_beginAccess();
          v69 = *(_QWORD *)(v63 + 72);
          v68 = *(_QWORD *)(v63 + 80);
          swift_beginAccess();
          v70 = *(_QWORD *)v174;
          if (!*(_QWORD *)(*(_QWORD *)v174 + 16))
            goto LABEL_249;
          swift_bridgeObjectRetain();
          v71 = sub_2347CD9BC(v69, v68);
          if ((v72 & 1) == 0)
          {
LABEL_248:
            swift_bridgeObjectRelease();
LABEL_249:
            swift_endAccess();
            v183 = 0;
            v184 = 0xE000000000000000;
            sub_23486FEA8();
            swift_bridgeObjectRelease();
            v183 = 0xD00000000000001DLL;
            v184 = 0x80000002348752B0;
            swift_bridgeObjectRetain();
            sub_23486F7DC();
            swift_bridgeObjectRelease();
            sub_23486F7DC();
            type metadata accessor for Schema.Entity();
            swift_bridgeObjectRetain();
            sub_23486F638();
            sub_23486F7DC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_259;
          }
          v172 = v59;
          v73 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v71);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v74 = *(_QWORD *)(v73 + 88);
          if ((v74 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            sub_23486FDC4();
            type metadata accessor for Schema.Relationship();
            sub_23482B044((unint64_t *)&qword_2542575D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
            sub_23486FA88();
            v74 = v195;
            v75 = v196;
            v76 = v197;
            v77 = v198;
            v8 = v199;
          }
          else
          {
            v78 = -1 << *(_BYTE *)(v74 + 32);
            v75 = v74 + 56;
            v76 = ~v78;
            v79 = -v78;
            if (v79 < 64)
              v80 = ~(-1 << v79);
            else
              v80 = -1;
            v8 = v80 & *(_QWORD *)(v74 + 56);
            swift_bridgeObjectRetain();
            v77 = 0;
          }
          v169 = v61;
          v173 = 0;
          v175 = 0;
          v81 = (unint64_t)(v76 + 64) >> 6;
          while (1)
          {
            v82 = v77;
            if (v74 < 0)
            {
              v85 = (_QWORD *)sub_23486FE24();
              if (!v85
                || (v181 = v85,
                    type metadata accessor for Schema.Relationship(),
                    swift_unknownObjectRetain(),
                    swift_dynamicCast(),
                    v86 = v183,
                    swift_unknownObjectRelease(),
                    !v183))
              {
LABEL_150:
                sub_23482AF78();
                if (v175 == 1)
                {
                  v95 = *v165;
                  if ((*v165 & 0xC000000000000001) != 0)
                  {
                    swift_bridgeObjectRetain();
                    sub_23486FDC4();
                    type metadata accessor for Schema.Relationship();
                    sub_23482B044((unint64_t *)&qword_2542575D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
                    sub_23486FA88();
                    v95 = v200;
                    v176 = v201;
                    v96 = v202;
                    v97 = v203;
                    v8 = v204;
                  }
                  else
                  {
                    v98 = -1 << *(_BYTE *)(v95 + 32);
                    v176 = v95 + 56;
                    v96 = ~v98;
                    v99 = -v98;
                    if (v99 < 64)
                      v100 = ~(-1 << v99);
                    else
                      v100 = -1;
                    v8 = v100 & *(_QWORD *)(v95 + 56);
                    swift_bridgeObjectRetain();
                    v97 = 0;
                  }
                  v101 = 0;
                  v102 = (unint64_t)(v96 + 64) >> 6;
LABEL_159:
                  v170 = v101;
                  v103 = v97;
                  v104 = v8;
                  while (1)
                  {
                    if (v95 < 0)
                    {
                      v106 = (_QWORD *)sub_23486FE24();
                      if (!v106)
                        goto LABEL_192;
                      v181 = v106;
                      type metadata accessor for Schema.Relationship();
                      swift_unknownObjectRetain();
                      swift_dynamicCast();
                      v107 = v183;
                      swift_unknownObjectRelease();
                      v97 = v103;
                      v8 = v104;
                      if (!v183)
                        goto LABEL_192;
                    }
                    else
                    {
                      if (v104)
                      {
                        v8 = (v104 - 1) & v104;
                        v105 = __clz(__rbit64(v104)) | (v103 << 6);
                        v97 = v103;
                      }
                      else
                      {
                        v97 = v103 + 1;
                        if (__OFADD__(v103, 1))
                          goto LABEL_209;
                        if (v97 >= v102)
                        {
LABEL_192:
                          v54 = v172;
LABEL_193:
                          sub_23482AF78();
                          if (v170 == 1)
                          {
                            v51 = v166;
                            v8 = v160 + 16;
                            if (!v173)
                              goto LABEL_259;
                            swift_beginAccess();
                            v113 = *(_QWORD *)(v63 + 48);
                            if (!v113)
                              goto LABEL_259;
                            swift_beginAccess();
                            v114 = v173[6];
                            if (!v114)
                              goto LABEL_259;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            v115 = sub_2347DFD1C(v113);
                            v117 = v116;
                            swift_beginAccess();
                            v173[12] = v115;
                            v173[13] = v117;
                            swift_bridgeObjectRelease();
                            swift_beginAccess();
                            v173[14] = v113;
                            swift_retain();
                            swift_release();
                            v118 = sub_2347DFD1C(v114);
                            v120 = v119;
                            swift_release();
                            swift_release();
                            swift_release_n();
                            swift_beginAccess();
                            *(_QWORD *)(v63 + 96) = v118;
                            *(_QWORD *)(v63 + 104) = v120;
                            swift_bridgeObjectRelease();
                            swift_beginAccess();
                            *(_QWORD *)(v63 + 112) = v114;
                            swift_release();
                            swift_release();
                            v53 = v169;
                            v54 = v172;
                            goto LABEL_84;
                          }
                          swift_release();
                          swift_release();
                          swift_release();
                          v53 = v169;
LABEL_199:
                          v51 = v166;
                          v8 = v160 + 16;
                          goto LABEL_84;
                        }
                        v108 = *(_QWORD *)(v176 + 8 * v97);
                        if (!v108)
                        {
                          v109 = v103 + 2;
                          if (v103 + 2 >= v102)
                            goto LABEL_192;
                          v108 = *(_QWORD *)(v176 + 8 * v109);
                          if (v108)
                            goto LABEL_173;
                          v109 = v103 + 3;
                          if (v103 + 3 >= v102)
                            goto LABEL_192;
                          v108 = *(_QWORD *)(v176 + 8 * v109);
                          if (v108)
                          {
LABEL_173:
                            v97 = v109;
                          }
                          else
                          {
                            v97 = v103 + 4;
                            if (v103 + 4 >= v102)
                              goto LABEL_192;
                            v108 = *(_QWORD *)(v176 + 8 * v97);
                            if (!v108)
                            {
                              v112 = v103 + 5;
                              v54 = v172;
                              do
                              {
                                if (v102 == v112)
                                  goto LABEL_193;
                                v108 = *(_QWORD *)(v176 + 8 * v112++);
                              }
                              while (!v108);
                              v97 = v112 - 1;
                            }
                          }
                        }
                        v8 = (v108 - 1) & v108;
                        v105 = __clz(__rbit64(v108)) + (v97 << 6);
                      }
                      v107 = *(_QWORD *)(*(_QWORD *)(v95 + 48) + 8 * v105);
                      swift_retain();
                      if (!v107)
                        goto LABEL_192;
                    }
                    swift_beginAccess();
                    if (*(_QWORD *)(v107 + 72) == *(_QWORD *)(v63 + 72)
                      && *(_QWORD *)(v107 + 80) == *(_QWORD *)(v63 + 80))
                    {
                      swift_release();
LABEL_189:
                      v101 = v170 + 1;
                      if (__OFADD__(v170, 1))
                        goto LABEL_213;
                      goto LABEL_159;
                    }
                    v111 = sub_2348702E0();
                    swift_release();
                    v103 = v97;
                    v104 = v8;
                    if ((v111 & 1) != 0)
                      goto LABEL_189;
                  }
                }
                swift_release();
                swift_release();
                swift_release();
                v53 = v169;
                v54 = v172;
                goto LABEL_199;
              }
            }
            else
            {
              if (v8)
              {
                v83 = __clz(__rbit64(v8));
                v8 &= v8 - 1;
                v84 = v83 | (v77 << 6);
              }
              else
              {
                ++v77;
                if (__OFADD__(v82, 1))
                {
                  __break(1u);
LABEL_209:
                  __break(1u);
                  goto LABEL_210;
                }
                if (v77 >= v81)
                  goto LABEL_150;
                v87 = *(_QWORD *)(v75 + 8 * v77);
                if (!v87)
                {
                  v88 = v82 + 2;
                  if (v82 + 2 >= v81)
                    goto LABEL_150;
                  v87 = *(_QWORD *)(v75 + 8 * v88);
                  if (v87)
                    goto LABEL_128;
                  v88 = v82 + 3;
                  if (v82 + 3 >= v81)
                    goto LABEL_150;
                  v87 = *(_QWORD *)(v75 + 8 * v88);
                  if (v87)
                  {
LABEL_128:
                    v77 = v88;
                  }
                  else
                  {
                    v77 = v82 + 4;
                    if (v82 + 4 >= v81)
                      goto LABEL_150;
                    v87 = *(_QWORD *)(v75 + 8 * v77);
                    if (!v87)
                    {
                      v94 = v82 + 5;
                      do
                      {
                        if (v81 == v94)
                          goto LABEL_150;
                        v87 = *(_QWORD *)(v75 + 8 * v94++);
                      }
                      while (!v87);
                      v77 = v94 - 1;
                    }
                  }
                }
                v8 = (v87 - 1) & v87;
                v84 = __clz(__rbit64(v87)) + (v77 << 6);
              }
              v86 = *(_QWORD *)(*(_QWORD *)(v74 + 48) + 8 * v84);
              swift_retain();
              if (!v86)
                goto LABEL_150;
            }
            swift_beginAccess();
            v89 = *(_QWORD *)(v86 + 72);
            v90 = *(_QWORD *)(v86 + 80);
            swift_beginAccess();
            v91 = v89 == v178[2] && v90 == v178[3];
            if ((v91 || (sub_2348702E0() & 1) != 0)
              && (*(_BYTE *)(v86 + 169) & 1) == 0
              && ((swift_beginAccess(), v92 = *(_QWORD *)(v86 + 64), swift_conformsToProtocol2())
                ? (v93 = v92)
                : (v93 = 0),
                  v93 || (*(_BYTE *)(v86 + 168) & 1) == 0))
            {
              swift_release();
              if (__OFADD__(v175, 1))
                goto LABEL_214;
              ++v175;
              v173 = (_QWORD *)v86;
            }
            else
            {
              swift_release();
            }
          }
        }
        break;
      }
LABEL_207:
      sub_23482AF78();
LABEL_27:
      swift_release();
      v18 = v164;
      v19 = v159;
    }
    while (v164 != v158);
  }
LABEL_218:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v122 = *(_QWORD *)v8;
  swift_bridgeObjectRetain_n();
  v123 = sub_234826C78(v122);
  swift_bridgeObjectRelease();
  v181 = v123;
  sub_23481EE68(&v181, (uint64_t *)v8);
  swift_bridgeObjectRelease();
  swift_release();
  v124 = *(_QWORD *)v8;
  v125 = *(_QWORD *)v8 + 64;
  v126 = 1 << *(_BYTE *)(*(_QWORD *)v8 + 32);
  v127 = -1;
  if (v126 < 64)
    v127 = ~(-1 << v126);
  v128 = v127 & *(_QWORD *)(*(_QWORD *)v8 + 64);
  v179 = (unint64_t)(v126 + 63) >> 6;
  swift_bridgeObjectRetain();
  v129 = 0;
  while (1)
  {
    if (v128)
    {
      v130 = __clz(__rbit64(v128));
      v128 &= v128 - 1;
      v131 = v130 | (v129 << 6);
      goto LABEL_239;
    }
    v132 = v129 + 1;
    if (__OFADD__(v129, 1))
    {
      __break(1u);
LABEL_247:
      __break(1u);
      goto LABEL_248;
    }
    if (v132 >= v179)
      goto LABEL_245;
    v133 = *(_QWORD *)(v125 + 8 * v132);
    ++v129;
    if (v133)
      goto LABEL_238;
    v129 = v132 + 1;
    if (v132 + 1 >= v179)
      goto LABEL_245;
    v133 = *(_QWORD *)(v125 + 8 * v129);
    if (v133)
      goto LABEL_238;
    v129 = v132 + 2;
    if (v132 + 2 >= v179)
      goto LABEL_245;
    v133 = *(_QWORD *)(v125 + 8 * v129);
    if (v133)
      goto LABEL_238;
    v134 = v132 + 3;
    if (v134 >= v179)
    {
LABEL_245:
      swift_bridgeObjectRelease();
      swift_release();
      *(_QWORD *)(v157 + 64) = *(_QWORD *)(v162 + 16);
      swift_beginAccess();
      *(_QWORD *)(v157 + 72) = *(_QWORD *)(v161 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      swift_release();
      return v157;
    }
    v133 = *(_QWORD *)(v125 + 8 * v134);
    if (!v133)
    {
      while (1)
      {
        v129 = v134 + 1;
        if (__OFADD__(v134, 1))
          goto LABEL_247;
        if (v129 >= v179)
          goto LABEL_245;
        v133 = *(_QWORD *)(v125 + 8 * v129);
        ++v134;
        if (v133)
          goto LABEL_238;
      }
    }
    v129 = v134;
LABEL_238:
    v128 = (v133 - 1) & v133;
    v131 = __clz(__rbit64(v133)) + (v129 << 6);
LABEL_239:
    v135 = 16 * v131;
    v136 = (uint64_t *)(*(_QWORD *)(v124 + 48) + v135);
    v138 = *v136;
    v137 = v136[1];
    v139 = (uint64_t *)(*(_QWORD *)(v124 + 56) + v135);
    v141 = *v139;
    v140 = v139[1];
    swift_beginAccess();
    v142 = *(_QWORD *)v174;
    v143 = *(_QWORD *)(*(_QWORD *)v174 + 16);
    swift_bridgeObjectRetain();
    if (!v143)
    {
      swift_bridgeObjectRetain();
LABEL_252:
      swift_endAccess();
      v181 = 0;
      v182 = 0xE000000000000000;
      sub_23486FEA8();
      swift_bridgeObjectRelease();
      v181 = (_QWORD *)0xD000000000000016;
      v182 = 0x8000000234875240;
      sub_23486F7DC();
      goto LABEL_259;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v144 = sub_2347CD9BC(v138, v137);
    if ((v145 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_252;
    }
    v146 = *(_QWORD **)(*(_QWORD *)(v142 + 56) + 8 * v144);
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v147 = *(_QWORD *)v174;
    if (!*(_QWORD *)(*(_QWORD *)v174 + 16))
      goto LABEL_254;
    swift_bridgeObjectRetain();
    v148 = sub_2347CD9BC(v141, v140);
    if ((v149 & 1) == 0)
      break;
    v150 = *(_QWORD *)(*(_QWORD *)(v147 + 56) + 8 * v148);
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    v146[7] = v150;
    swift_retain_n();
    swift_release();
    v151 = v146[7];
    swift_beginAccess();
    if (v151)
    {
      v152 = *(_QWORD **)(v151 + 64);
      swift_beginAccess();
      v153 = *(_QWORD *)(v151 + 72);
      v181 = v152;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23483A478(v153);
      v154 = v181;
      swift_beginAccess();
      v146[9] = v154;
      swift_bridgeObjectRelease();
      sub_23483CC54();
      swift_release();
    }
    else
    {
      v146[9] = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRelease();
      sub_23483CC54();
    }
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_23479FC64(&v180, v146);
    swift_endAccess();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
LABEL_254:
  swift_endAccess();
  v181 = 0;
  v182 = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486F7DC();
  sub_23486F7DC();
  sub_23486F7DC();
  sub_23486F7DC();
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189940);
  MEMORY[0x234945404](v163, v156);
  sub_23486F7DC();
  swift_bridgeObjectRelease();
LABEL_259:
  sub_234870004();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_234820FC0(Class a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  os_log_t v34;
  Class isa;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t *v80;
  uint64_t (*v81)();
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  uint64_t (*v86)();
  uint64_t v87;
  uint64_t *v88;
  __int128 v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  unint64_t v118;
  os_log_t v119;
  uint8_t *v120;
  uint64_t v121;
  _QWORD *v122;
  char v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  unint64_t v153;
  _QWORD *v154;
  uint64_t result;
  uint64_t v156;
  _QWORD v157[2];
  __int128 v158;
  _OWORD *v159;
  uint64_t v160;
  unint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  os_log_t v166;
  uint8_t *v167;
  uint64_t v168;
  uint64_t v169;
  os_log_t v170;
  __int128 v171;
  uint64_t *v172;
  Class v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  unint64_t v178;
  _BYTE *v179;
  uint64_t v180;
  _QWORD *v181;
  unint64_t v182;
  uint64_t v183;
  _OWORD v184[2];
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  __int128 v189;
  uint64_t v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  _BYTE v194[32];
  _QWORD v195[3];
  uint64_t v196;
  _BYTE v197[40];
  _QWORD *v198;

  v168 = a4;
  v169 = a3;
  v10 = sub_23486F5D8();
  v163 = *(_QWORD *)(v10 - 8);
  v164 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t *)(a2 + 16);
  v166 = (os_log_t)sub_234810804(a5, a6);
  v175 = a5;
  v176 = a6;
  v14 = sub_23481063C();
  v16 = v15;
  swift_beginAccess();
  v167 = (uint8_t *)a2;
  if (*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16))
  {
    sub_2347CD9BC(v14, v16);
    if ((v17 & 1) != 0)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  v162 = v12;
  v18 = (_QWORD *)(v169 + 16);
  swift_endAccess();
  type metadata accessor for Schema.Entity();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v19 = Schema.Entity.init(_:)(v14, v16);
  swift_beginAccess();
  v20 = swift_retain();
  MEMORY[0x2349453E0](v20);
  if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_156;
LABEL_5:
  sub_23486F950();
  sub_23486F8FC();
  swift_endAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v191 = *v13;
  *v13 = 0x8000000000000000;
  sub_234806580(v19, v14, v16, isUniquelyReferenced_nonNull_native);
  *v13 = v191;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_getMetatypeMetadata();
  *(_QWORD *)(v19 + 128) = sub_23486FF98();
  *(_QWORD *)(v19 + 136) = v22;
  swift_bridgeObjectRelease();
  v23 = v176;
  *(_QWORD *)(v19 + 144) = a1;
  *(_QWORD *)(v19 + 152) = v23;
  v24 = *(_QWORD *)a1 - 2048;
  v174 = v19;
  if (v24 >= 0xFFFFFFFFFFFFF801)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_getKeyPath();
    v25 = sub_23486FD58();
    swift_release();
    v26 = *(_QWORD *)((char *)a1 + v25);
    v195[0] = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258970);
    v27 = sub_23486F77C();
    v13 = v28;
    if (v27 == 0xD000000000000013 && v28 == (uint64_t *)0x8000000234875550)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = sub_2348702E0();
      swift_bridgeObjectRelease();
      if ((v29 & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = (uint64_t *)(v168 + 16);
        v195[0] = v26;
        v30 = sub_23486F77C();
        v32 = v31;
        swift_beginAccess();
        v33 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v191 = *v13;
        *v13 = 0x8000000000000000;
        sub_234806440(v30, v32, v14, v16, v33);
        *v13 = v191;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
      }
    }
    v19 = v174;
  }
  v198 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v34 = v166;
  isa = v166[2].isa;
  v165 = a1;
  v173 = isa;
  if (isa)
  {
    a1 = 0;
    v172 = &v196;
    v170 = v166 + 4;
    *(_QWORD *)&v171 = v197;
    v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v19 = (unint64_t)&qword_254258968;
    v14 = (uint64_t)&qword_254258858;
    while (1)
    {
      if (a1 >= v34[2].isa)
      {
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        sub_23486F914();
        goto LABEL_5;
      }
      sub_2347C63D0((uint64_t)&v170[12 * (_QWORD)a1], (uint64_t)v195);
      v37 = v195[1];
      v179 = (_BYTE *)v195[0];
      v38 = (uint64_t *)v195[2];
      sub_23482AF80((uint64_t)v172, (uint64_t)v194, &qword_254258968);
      sub_23482AF80(v171, (uint64_t)&v191, &qword_254258858);
      v180 = v37;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2347C640C((uint64_t)v195);
      v13 = v38;
      sub_23486FD4C();
      v40 = v39;
      *(_QWORD *)&v188 = v39;
      if (swift_conformsToProtocol2())
        v41 = v40;
      else
        v41 = 0;
      v178 = v40;
      while (v41)
      {
        sub_2347E85B4(v41, (uint64_t *)&v188);
        v40 = v188;
        if (swift_conformsToProtocol2())
          v41 = v40;
        else
          v41 = 0;
      }
      sub_23482AF80((uint64_t)&v191, (uint64_t)&v188, &qword_254258858);
      if (*((_QWORD *)&v189 + 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
        v42 = type metadata accessor for Schema.Attribute();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v43 = (_QWORD *)v185;
          swift_beginAccess();
          v44 = v43[6];
          v45 = *(_QWORD *)(v44 + 16);
          if (v45)
          {
            v46 = (_BYTE *)(v44 + 32);
            while (*v46 != 1)
            {
              v46 += 40;
              if (!--v45)
                goto LABEL_31;
            }
            v177 = v36;
            sub_23482AF80((uint64_t)v194, (uint64_t)&v188, &qword_254258968);
            if (*((_QWORD *)&v189 + 1))
            {
              sub_234797294(&v188, v184);
              swift_beginAccess();
              v57 = v43[5];
              v161 = v43[4];
              v58 = v43[6];
              sub_234785C80((uint64_t)v184, (uint64_t)&v188);
              swift_beginAccess();
              v59 = v43[14];
              v160 = v43[13];
              v159 = (_OWORD *)swift_allocObject();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v156 = v59;
              v19 = (unint64_t)&qword_254258968;
              v60 = Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)((uint64_t)v179, v180, v161, v57, v58, v178, (uint64_t)&v188, v160, v156);
              v186 = v42;
              v187 = sub_23482B044(&qword_2542588B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
              swift_release();
              *(_QWORD *)&v185 = v60;
              __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)v184);
              sub_2347DDCCC(&v185, (uint64_t)&v188);
            }
            else
            {
              sub_23482AFC4((uint64_t)&v188, &qword_254258968);
              swift_beginAccess();
              v67 = v43[5];
              v161 = v43[4];
              v68 = v43[6];
              v188 = 0u;
              v189 = 0u;
              swift_beginAccess();
              v69 = v43[14];
              v160 = v43[13];
              v159 = (_OWORD *)swift_allocObject();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v70 = v67;
              v19 = (unint64_t)&qword_254258968;
              v71 = Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)((uint64_t)v179, v180, v161, v70, v68, v178, (uint64_t)&v188, v160, v69);
              *((_QWORD *)&v189 + 1) = v42;
              v190 = sub_23482B044(&qword_2542588B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
              swift_release();
              *(_QWORD *)&v188 = v71;
            }
            v36 = v177;
            goto LABEL_52;
          }
LABEL_31:
          swift_release();
        }
      }
      else
      {
        sub_23482AFC4((uint64_t)&v188, &qword_254258858);
      }
      v47 = swift_conformsToProtocol2();
      v48 = v47 ? v47 : 0;
      v49 = v47 ? v40 : 0;
      if (v49)
        break;
      if (swift_conformsToProtocol2())
        v52 = v40;
      else
        v52 = 0;
      if (!v52)
      {
        sub_23482AF80((uint64_t)&v191, (uint64_t)&v188, &qword_254258858);
        if (*((_QWORD *)&v189 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
          type metadata accessor for Schema.Attribute();
          if (swift_dynamicCast())
            v56 = (_QWORD *)v185;
          else
            v56 = 0;
        }
        else
        {
          sub_23482AFC4((uint64_t)&v188, &qword_254258858);
          v56 = 0;
        }
        if (sub_234843754(v40))
        {
          sub_23482AF80((uint64_t)v194, (uint64_t)&v188, &qword_254258968);
          if (*((_QWORD *)&v189 + 1))
          {
            sub_234797294(&v188, v184);
            if (v56)
            {
              swift_beginAccess();
              v61 = v56[5];
              v177 = (_QWORD *)v56[4];
              swift_beginAccess();
              v62 = v56[6];
              v161 = v61;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_234785C80((uint64_t)v184, (uint64_t)&v188);
              swift_beginAccess();
              v63 = v56[14];
              v160 = v56[13];
              swift_bridgeObjectRetain();
            }
            else
            {
              sub_234785C80((uint64_t)v184, (uint64_t)&v188);
              v160 = 0;
              v161 = 0;
              v177 = 0;
              v63 = 0;
              v62 = MEMORY[0x24BEE4AF8];
            }
            v78 = type metadata accessor for Schema.Attribute();
            swift_allocObject();
            v79 = Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)((uint64_t)v179, v180, (uint64_t)v177, v161, v62, v178, (uint64_t)&v188, v160, v63);
            *((_QWORD *)&v189 + 1) = v78;
            v80 = &qword_2542588B0;
            v81 = type metadata accessor for Schema.Attribute;
            goto LABEL_82;
          }
          sub_23482AFC4((uint64_t)&v188, &qword_254258968);
          if (v56)
          {
            swift_beginAccess();
            v72 = v56[5];
            v177 = (_QWORD *)v56[4];
            swift_beginAccess();
            v73 = v56[6];
            v161 = v72;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v188 = 0u;
            v189 = 0u;
            swift_beginAccess();
            v74 = v56[14];
            v160 = v56[13];
            swift_bridgeObjectRetain();
          }
          else
          {
            v160 = 0;
            v161 = 0;
            v177 = 0;
            v74 = 0;
            v188 = 0u;
            v189 = 0u;
            v73 = MEMORY[0x24BEE4AF8];
          }
          v83 = type metadata accessor for Schema.Attribute();
          swift_allocObject();
          v84 = Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)((uint64_t)v179, v180, (uint64_t)v177, v161, v73, v178, (uint64_t)&v188, v160, v74);
          *((_QWORD *)&v189 + 1) = v83;
          v85 = &qword_2542588B0;
          v86 = type metadata accessor for Schema.Attribute;
LABEL_87:
          v190 = sub_23482B044(v85, 255, (uint64_t (*)(uint64_t))v86, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
          swift_release();
          *(_QWORD *)&v188 = v84;
        }
        else
        {
          sub_23482AF80((uint64_t)v194, (uint64_t)&v188, &qword_254258968);
          if (!*((_QWORD *)&v189 + 1))
          {
            sub_23482AFC4((uint64_t)&v188, &qword_254258968);
            if (v56)
            {
              swift_beginAccess();
              v75 = v56[5];
              v177 = (_QWORD *)v56[4];
              swift_beginAccess();
              v76 = v56[6];
              v161 = v75;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v188 = 0u;
              v189 = 0u;
              swift_beginAccess();
              v77 = v56[14];
              v160 = v56[13];
              swift_bridgeObjectRetain();
            }
            else
            {
              v160 = 0;
              v161 = 0;
              v177 = 0;
              v77 = 0;
              v188 = 0u;
              v189 = 0u;
              v76 = MEMORY[0x24BEE4AF8];
            }
            v87 = type metadata accessor for Schema.CompositeAttribute();
            swift_allocObject();
            v84 = Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)((uint64_t)v179, v180, (uint64_t)v177, v161, v76, v178, (uint64_t)&v188, v160, v77);
            *((_QWORD *)&v189 + 1) = v87;
            v85 = (unint64_t *)&unk_254256FD8;
            v86 = type metadata accessor for Schema.CompositeAttribute;
            goto LABEL_87;
          }
          sub_234797294(&v188, v184);
          if (v56)
          {
            swift_beginAccess();
            v64 = v56[5];
            v177 = (_QWORD *)v56[4];
            swift_beginAccess();
            v65 = v56[6];
            v161 = v64;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_234785C80((uint64_t)v184, (uint64_t)&v188);
            swift_beginAccess();
            v66 = v56[14];
            v160 = v56[13];
            swift_bridgeObjectRetain();
          }
          else
          {
            sub_234785C80((uint64_t)v184, (uint64_t)&v188);
            v160 = 0;
            v161 = 0;
            v177 = 0;
            v66 = 0;
            v65 = MEMORY[0x24BEE4AF8];
          }
          v82 = type metadata accessor for Schema.CompositeAttribute();
          swift_allocObject();
          v79 = Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)((uint64_t)v179, v180, (uint64_t)v177, v161, v65, v178, (uint64_t)&v188, v160, v66);
          *((_QWORD *)&v189 + 1) = v82;
          v80 = (unint64_t *)&unk_254256FD8;
          v81 = type metadata accessor for Schema.CompositeAttribute;
LABEL_82:
          v190 = sub_23482B044(v80, 255, (uint64_t (*)(uint64_t))v81, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
          swift_release();
          *(_QWORD *)&v188 = v79;
          __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)v184);
        }
        sub_2347DDCCC(&v188, (uint64_t)&v185);
        sub_2347DDCCC(&v185, (uint64_t)&v188);
LABEL_51:
        v19 = (unint64_t)&qword_254258968;
        goto LABEL_52;
      }
      sub_234822C7C((uint64_t)v179, v180, v178, (uint64_t)v13, (uint64_t)&v191, (uint64_t)v167, v169, (uint64_t *)&v188, v168, (uint64_t)v194);
      swift_bridgeObjectRelease();
LABEL_52:
      sub_23482B000((uint64_t)&v188, (uint64_t)&v185);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_23479E190(0, v36[2] + 1, 1, v36);
      v14 = (uint64_t)&qword_254258858;
      v16 = v36[2];
      v55 = v36[3];
      if (v16 >= v55 >> 1)
        v36 = sub_23479E190((_QWORD *)(v55 > 1), v16 + 1, 1, v36);
      a1 = (Class)((char *)a1 + 1);
      v36[2] = v16 + 1;
      sub_2347DDCCC(&v185, (uint64_t)&v36[5 * v16 + 4]);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)&v188);
      sub_23482AFC4((uint64_t)&v191, &qword_254258858);
      sub_23482AFC4((uint64_t)v194, &qword_254258968);
      if (a1 == v173)
      {
        swift_bridgeObjectRelease();
        v19 = v174;
        goto LABEL_90;
      }
    }
    sub_23482AF80((uint64_t)&v191, (uint64_t)&v188, &qword_254258858);
    if (*((_QWORD *)&v189 + 1))
    {
      v50 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
      type metadata accessor for Schema.Relationship();
      if (swift_dynamicCast())
        v51 = v185;
      else
        v51 = 0;
    }
    else
    {
      v50 = v36;
      sub_23482AFC4((uint64_t)&v188, &qword_254258858);
      v51 = 0;
    }
    v53 = type metadata accessor for Schema.Relationship();
    swift_allocObject();
    swift_retain();
    v54 = sub_23484A884((uint64_t)v179, v180, v178, (uint64_t)v13, v51);
    *((_QWORD *)&v189 + 1) = v53;
    v190 = sub_23482B044(&qword_2542575E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
    *(_QWORD *)&v188 = v54;
    swift_retain();
    sub_234820FC0(v49, v167, v169, v168, v49, v48);
    swift_release();
    v36 = v50;
    v34 = v166;
    goto LABEL_51;
  }
  swift_bridgeObjectRelease();
  v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_90:
  v16 = v36[2];
  v177 = v36;
  if (v16)
  {
    v13 = (uint64_t *)(v19 + 104);
    v173 = (Class)(v19 + 80);
    v88 = (uint64_t *)(v19 + 96);
    a1 = (Class)(v19 + 64);
    v178 = v19 + 88;
    v179 = v36 + 4;
    v159 = v184;
    swift_bridgeObjectRetain();
    v19 = 0;
    v180 = 0;
    v14 = 40;
    *((_QWORD *)&v89 + 1) = 2;
    v171 = xmmword_234877ED0;
    v169 = 0x80000002348756C0;
    v170 = (os_log_t)0x8000000234870F70;
    *(_QWORD *)&v89 = 136315138;
    v158 = v89;
    v157[1] = MEMORY[0x24BEE4AD8] + 8;
    v172 = (uint64_t *)v16;
    while (1)
    {
      if (v19 >= v36[2])
        goto LABEL_155;
      sub_23482B000((uint64_t)&v179[40 * v19], (uint64_t)v195);
      sub_23482B000((uint64_t)v195, (uint64_t)&v191);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
      type metadata accessor for Schema.Attribute();
      if (swift_dynamicCast())
      {
        v90 = v181;
        swift_beginAccess();
        swift_retain();
        sub_23479F834(&v183, v90);
        swift_endAccess();
        swift_release();
        swift_beginAccess();
        v91 = v90[2];
        v92 = v90[3];
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        v93 = swift_isUniquelyReferenced_nonNull_native();
        v183 = *v88;
        *v88 = 0x8000000000000000;
        sub_234806424((uint64_t)v90, v91, v92, v93);
        *v88 = v183;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_beginAccess();
        v94 = v90[6];
        v95 = *(_QWORD *)(v94 + 16);
        if (v95)
        {
          v96 = (_BYTE *)(v94 + 64);
          while ((*v96 & 1) == 0)
          {
            v96 += 40;
            if (!--v95)
              goto LABEL_104;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
          v104 = swift_allocObject();
          *(_OWORD *)(v104 + 16) = v171;
          v105 = v90[3];
          *(_QWORD *)(v104 + 32) = v90[2];
          *(_QWORD *)(v104 + 40) = v105;
          v106 = v198;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v106 = sub_23479DF78(0, v106[2] + 1, 1, v106);
          v108 = v106[2];
          v107 = v106[3];
          if (v108 >= v107 >> 1)
            v106 = sub_23479DF78((_QWORD *)(v107 > 1), v108 + 1, 1, v106);
          v106[2] = v108 + 1;
          v109 = &v106[v108];
LABEL_116:
          v109[4] = v104;
          swift_release();
          v198 = v106;
          goto LABEL_121;
        }
      }
      else
      {
        type metadata accessor for Schema.Relationship();
        if (!swift_dynamicCast())
        {
          *(_QWORD *)&v188 = 0;
          *((_QWORD *)&v188 + 1) = 0xE000000000000000;
          sub_23486FEA8();
          sub_23486F7DC();
          sub_23486FF74();
          goto LABEL_164;
        }
        v97 = (uint64_t)v181;
        swift_beginAccess();
        swift_retain();
        sub_23479F214(&v183, (_QWORD *)v97);
        swift_endAccess();
        swift_release();
        swift_beginAccess();
        v98 = *(_QWORD *)(v97 + 16);
        v99 = *(_QWORD *)(v97 + 24);
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        v100 = swift_isUniquelyReferenced_nonNull_native();
        v183 = *v13;
        *v13 = 0x8000000000000000;
        sub_234806408(v97, v98, v99, v100);
        *v13 = v183;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_beginAccess();
        v101 = *(_QWORD *)(v97 + 56);
        v102 = *(_QWORD *)(v101 + 16);
        if (v102)
        {
          v103 = (_BYTE *)(v101 + 32);
          while ((*v103 & 1) == 0)
          {
            ++v103;
            if (!--v102)
              goto LABEL_104;
          }
          if (*(_BYTE *)(v97 + 168) == 1)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
            v104 = swift_allocObject();
            *(_OWORD *)(v104 + 16) = v171;
            v110 = *(_QWORD *)(v97 + 24);
            *(_QWORD *)(v104 + 32) = *(_QWORD *)(v97 + 16);
            *(_QWORD *)(v104 + 40) = v110;
            v106 = v198;
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v106 = sub_23479DF78(0, v106[2] + 1, 1, v106);
            v112 = v106[2];
            v111 = v106[3];
            if (v112 >= v111 >> 1)
              v106 = sub_23479DF78((_QWORD *)(v111 > 1), v112 + 1, 1, v106);
            v106[2] = v112 + 1;
            v109 = &v106[v112];
            goto LABEL_116;
          }
          v113 = v162;
          sub_23486F5CC();
          swift_retain();
          v114 = sub_23486F5C0();
          v115 = sub_23486FBC0();
          if (os_log_type_enabled(v114, v115))
          {
            v116 = (uint8_t *)swift_slowAlloc();
            v117 = swift_slowAlloc();
            v167 = v116;
            v168 = v117;
            *(_QWORD *)&v188 = v117;
            *(_DWORD *)v116 = v158;
            v160 = *(_QWORD *)(v97 + 16);
            v161 = (unint64_t)(v116 + 4);
            v166 = v114;
            v118 = *(_QWORD *)(v97 + 24);
            swift_bridgeObjectRetain();
            v183 = sub_23478470C(v160, v118, (uint64_t *)&v188);
            sub_23486FCEC();
            swift_release();
            swift_bridgeObjectRelease();
            v119 = v166;
            v120 = v167;
            _os_log_impl(&dword_234780000, v166, v115, "A toMany Relationship ([PersistentModel]) cannot be marked Unique - %s", v167, 0xCu);
            v121 = v168;
            swift_arrayDestroy();
            MEMORY[0x2349466D0](v121, -1, -1);
            MEMORY[0x2349466D0](v120, -1, -1);
            swift_release();

          }
          else
          {

            swift_release_n();
          }
          (*(void (**)(char *, uint64_t))(v163 + 8))(v113, v164);
LABEL_121:
          v16 = (unint64_t)v172;
          goto LABEL_122;
        }
      }
LABEL_104:
      swift_release();
LABEL_122:
      __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)&v191);
      sub_23482B000((uint64_t)v195, (uint64_t)&v191);
      swift_beginAccess();
      v122 = *(_QWORD **)a1;
      v123 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)a1 = v122;
      v36 = v177;
      if ((v123 & 1) == 0)
      {
        v122 = sub_23479E190(0, v122[2] + 1, 1, v122);
        *(_QWORD *)a1 = v122;
      }
      v125 = v122[2];
      v124 = v122[3];
      if (v125 >= v124 >> 1)
      {
        v122 = sub_23479E190((_QWORD *)(v124 > 1), v125 + 1, 1, v122);
        *(_QWORD *)a1 = v122;
      }
      ++v19;
      v122[2] = v125 + 1;
      v14 = 40;
      sub_2347DDCCC(&v191, (uint64_t)&v122[5 * v125 + 4]);
      swift_endAccess();
      sub_23483C978();
      __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)v195);
      if (v19 == v16)
      {
        swift_bridgeObjectRelease();
        goto LABEL_129;
      }
    }
  }
  v180 = 0;
LABEL_129:
  v183 = MEMORY[0x24BEE4AF8];
  v126 = (*(uint64_t (**)(void))(v176 + 64))();
  v127 = *(_QWORD *)(v126 + 16);
  if (!v127)
  {
LABEL_152:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v152 = v183;
    v153 = v174;
    swift_beginAccess();
    *(_QWORD *)(v153 + 168) = v152;
    swift_bridgeObjectRelease();
    v154 = v198;
    swift_beginAccess();
    *(_QWORD *)(v153 + 160) = v154;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v178 = v126;
  v179 = v197;
  v128 = v126 + 32;
  while (1)
  {
    sub_2347C63D0(v128, (uint64_t)v195);
    sub_23482AF80((uint64_t)v179, (uint64_t)&v188, &qword_254258858);
    sub_2347C640C((uint64_t)v195);
    if (*((_QWORD *)&v189 + 1))
      break;
    sub_23482AFC4((uint64_t)&v188, &qword_254258858);
LABEL_132:
    v128 += 96;
    if (!--v127)
      goto LABEL_152;
  }
  sub_2347DDCCC(&v188, (uint64_t)&v191);
  sub_23482B000((uint64_t)&v191, (uint64_t)&v188);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
  type metadata accessor for Schema.Index(0, v175, v176, v129);
  if (swift_dynamicCast())
    sub_234844140();
  v130 = v192;
  v131 = v193;
  __swift_project_boxed_opaque_existential_1(&v191, v192);
  v132 = (*(uint64_t (**)(uint64_t, uint64_t))(v131 + 32))(v130, v131);
  v134 = v133;
  if (v132 == sub_234844F44() && v134 == v135)
  {
    swift_bridgeObjectRelease_n();
LABEL_159:
    *(_QWORD *)&v188 = 0;
    *((_QWORD *)&v188 + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    sub_23486FF74();
    goto LABEL_164;
  }
  v137 = sub_2348702E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v137 & 1) != 0)
    goto LABEL_159;
  sub_23482B000((uint64_t)&v191, (uint64_t)&v188);
  type metadata accessor for Schema.Unique(0, v175, v176, v138);
  if (swift_dynamicCast())
  {
    v139 = v180;
    v140 = sub_234844F64();
    if (v139)
    {
      swift_unexpectedError();
      __break(1u);
      goto LABEL_164;
    }
    v180 = 0;
    if ((v140 & 1) == 0)
      goto LABEL_164;
    v141 = sub_234845238();
    sub_23483A318(v141);
    swift_release();
    goto LABEL_151;
  }
  v142 = v192;
  v143 = v193;
  __swift_project_boxed_opaque_existential_1(&v191, v192);
  v144 = (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 136))(v142, v143);
  sub_23482B000((uint64_t)&v191, (uint64_t)&v188);
  if ((v144 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)&v188);
LABEL_151:
    __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)&v191);
    goto LABEL_132;
  }
  v145 = *((_QWORD *)&v189 + 1);
  v146 = v190;
  __swift_project_boxed_opaque_existential_1(&v188, *((uint64_t *)&v189 + 1));
  v147 = (*(uint64_t (**)(uint64_t, uint64_t))(v146 + 32))(v145, v146);
  v149 = v148;
  if (v147 != sub_234845510() || v149 != v150)
  {
    v151 = sub_2348702E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)&v188);
    if ((v151 & 1) != 0)
      goto LABEL_163;
    goto LABEL_151;
  }
  swift_bridgeObjectRelease_n();
  __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)&v188);
LABEL_163:
  v181 = 0;
  v182 = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_23486FF74();
LABEL_164:
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_234822C7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = swift_conformsToProtocol2();
  if (v19)
  {
    v20 = v19;
  }
  else
  {
    AssociatedTypeWitness = 0;
    v20 = 0;
  }
  if (AssociatedTypeWitness)
  {
    v38 = a6;
    v41 = a7;
    v21 = a2;
    sub_23482AF80(a5, (uint64_t)&v45, &qword_254258858);
    if (*((_QWORD *)&v46 + 1))
    {
      v22 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
      type metadata accessor for Schema.Relationship();
      if (swift_dynamicCast())
        v23 = v43;
      else
        v23 = 0;
    }
    else
    {
      v22 = a3;
      sub_23482AFC4((uint64_t)&v45, &qword_254258858);
      v23 = 0;
    }
    v25 = type metadata accessor for Schema.Relationship();
    swift_allocObject();
    swift_retain();
    swift_bridgeObjectRetain();
    v26 = sub_23484A884(a1, v21, v22, a4, v23);
    a8[3] = v25;
    a8[4] = sub_23482B044(&qword_2542575E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
    *a8 = v26;
    swift_retain();
    sub_234820FC0(AssociatedTypeWitness, v38, v41, a9, AssociatedTypeWitness, v20);
    return swift_release();
  }
  else
  {
    v42 = a1;
    sub_23482AF80(a5, (uint64_t)&v45, &qword_254258858);
    if (*((_QWORD *)&v46 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
      type metadata accessor for Schema.Attribute();
      if (swift_dynamicCast())
        v24 = (_QWORD *)v43;
      else
        v24 = 0;
    }
    else
    {
      sub_23482AFC4((uint64_t)&v45, &qword_254258858);
      v24 = 0;
    }
    sub_23482AF80(a10, (uint64_t)&v43, &qword_254258968);
    if (v44)
    {
      sub_234797294(&v43, &v45);
      if (v24)
      {
        swift_beginAccess();
        v28 = v24[5];
        v39 = v24[4];
        swift_beginAccess();
        v29 = v24[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_234785C80((uint64_t)&v45, (uint64_t)&v43);
        swift_beginAccess();
        v31 = v24[13];
        v30 = v24[14];
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_234785C80((uint64_t)&v45, (uint64_t)&v43);
        v28 = 0;
        v39 = 0;
        v31 = 0;
        v30 = 0;
        v29 = MEMORY[0x24BEE4AF8];
      }
      v36 = type metadata accessor for Schema.Attribute();
      swift_allocObject();
      swift_bridgeObjectRetain();
      v37 = Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(v42, a2, v39, v28, v29, a3, (uint64_t)&v43, v31, v30);
      __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)&v45);
    }
    else
    {
      sub_23482AFC4((uint64_t)&v43, &qword_254258968);
      if (v24)
      {
        swift_beginAccess();
        v32 = v24[5];
        v40 = v24[4];
        swift_beginAccess();
        v33 = v24[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_beginAccess();
        v35 = v24[13];
        v34 = v24[14];
        swift_bridgeObjectRetain();
      }
      else
      {
        v32 = 0;
        v40 = 0;
        v35 = 0;
        v34 = 0;
        v33 = MEMORY[0x24BEE4AF8];
      }
      v36 = type metadata accessor for Schema.Attribute();
      v45 = 0u;
      v46 = 0u;
      swift_allocObject();
      swift_bridgeObjectRetain();
      v37 = Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(v42, a2, v40, v32, v33, a3, (uint64_t)&v45, v35, v34);
    }
    type metadata accessor for Schema.Attribute();
    a8[3] = v36;
    a8[4] = sub_23482B044(&qword_2542588B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
    result = swift_release();
    *a8 = v37;
  }
  return result;
}

uint64_t sub_234823108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  BOOL v31;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  NSObject *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  _BYTE v48[4];
  int v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  unint64_t v56;

  v11 = sub_23486F5D8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v48[-v16];
  v18 = sub_2347DFE10(a2, a5, a6);
  v20 = v19;
  swift_beginAccess();
  v21 = *(_QWORD *)(a3 + 104);
  if (!*(_QWORD *)(v21 + 16))
    goto LABEL_30;
  swift_bridgeObjectRetain();
  v22 = sub_2347CD9BC(v18, v20);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_30:
    swift_endAccess();
    goto LABEL_31;
  }
  v52 = v12;
  v53 = v11;
  v24 = *(_QWORD **)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease_n();
  swift_beginAccess();
  v20 = *(_QWORD *)(a4 + 48);
  if (!v20)
    goto LABEL_31;
  v25 = swift_retain();
  v26 = sub_2347DFD1C(v25);
  v28 = v27;
  swift_beginAccess();
  v29 = v24[13];
  if (!v29 || (v30 = v24[12], swift_beginAccess(), (a3 = v24[14]) == 0))
  {
    v24[12] = v26;
    v24[13] = v28;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v24[14] = v20;
    swift_release();
    return swift_release();
  }
  v31 = v30 == v26 && v29 == v28;
  if (v31 || (sub_2348702E0() & 1) != 0)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    sub_23486FD70();
    if ((MEMORY[0x234945878](a3, v20) & 1) != 0)
    {
      swift_release();
      swift_release();
      return swift_release();
    }
    if (qword_256189248 != -1)
      swift_once();
    if ((dyld_program_sdk_at_least() & 1) != 0)
    {
      while (1)
      {
        v55 = 0;
        v56 = 0xE000000000000000;
        sub_23486FEA8();
        sub_23486F7DC();
        v54 = a3;
        a3 = MEMORY[0x24BEE3970];
        sub_23486FF74();
        sub_23486F7DC();
        v54 = v20;
        sub_23486FF74();
LABEL_31:
        sub_234870004();
        __break(1u);
      }
    }
    sub_23486F5CC();
    swift_retain_n();
    swift_retain_n();
    v33 = sub_23486F5C0();
    v34 = sub_23486FBC0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v55 = v51;
      *(_DWORD *)v35 = 136315394;
      v36 = sub_23486FD40();
      v54 = sub_23478470C(v36, v37, (uint64_t *)&v55);
      sub_23486FCEC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v38 = sub_23486FD40();
      v54 = sub_23478470C(v38, v39, (uint64_t *)&v55);
      sub_23486FCEC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_234780000, v33, v34, "Inverse already set to another relationship keypath - %s - cannot assign to - %s", (uint8_t *)v35, 0x16u);
      v40 = v51;
      swift_arrayDestroy();
      MEMORY[0x2349466D0](v40, -1, -1);
      MEMORY[0x2349466D0](v35, -1, -1);
      swift_release();
      swift_release();
      swift_release();

    }
    else
    {

      swift_release();
      swift_release_n();
      swift_release_n();
    }
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v52 + 8))(v17, v53);
  }
  else
  {
    v41 = qword_256189248;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    if ((dyld_program_sdk_at_least() & 1) != 0)
    {
      v55 = 0;
      v56 = 0xE000000000000000;
      sub_23486FEA8();
      sub_23486F7DC();
      sub_23486F7DC();
      sub_23486F7DC();
      sub_23486F7DC();
      goto LABEL_31;
    }
    sub_23486F5CC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = sub_23486F5C0();
    v43 = sub_23486FBC0();
    v44 = v43;
    v51 = v42;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v55 = v50;
      *(_DWORD *)v45 = 136315394;
      v49 = v44;
      swift_bridgeObjectRetain();
      v54 = sub_23478470C(v30, v29, (uint64_t *)&v55);
      sub_23486FCEC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      v54 = sub_23478470C(v26, v28, (uint64_t *)&v55);
      sub_23486FCEC();
      swift_bridgeObjectRelease_n();
      v46 = v51;
      _os_log_impl(&dword_234780000, v51, (os_log_type_t)v49, "Inverse already set to another relationship - %s - cannot assign to - %s", (uint8_t *)v45, 0x16u);
      v47 = v50;
      swift_arrayDestroy();
      MEMORY[0x2349466D0](v47, -1, -1);
      MEMORY[0x2349466D0](v45, -1, -1);
      swift_release();
      swift_release();
      swift_release();

    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
    }
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v52 + 8))(v15, v53);
  }
}

uint64_t sub_23482398C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v28;

  v3 = a1[2];
  v4 = a1[3];
  v5 = *a2;
  v6 = a2[1];
  if (v3 == *a2 && v4 == v6)
    return 0;
  v10 = *a1;
  v9 = a1[1];
  v11 = a2[3];
  v28 = a2[2];
  v12 = sub_2348702E0();
  result = 0;
  if ((v12 & 1) == 0)
  {
    if ((sub_2348702E0() & 1) == 0)
    {
      if ((v3 == v28 && v4 == v11 || (sub_2348702E0() & 1) != 0)
        && (v5 != v10 || v6 != v9)
        && (sub_2348702E0() & 1) != 0)
      {
        return 0;
      }
      v14 = v11;
      swift_beginAccess();
      v15 = *a3;
      if (*(_QWORD *)(*a3 + 16))
      {
        swift_bridgeObjectRetain();
        v16 = sub_2347CD9BC(v3, v4);
        if ((v17 & 1) != 0)
        {
          v18 = (uint64_t *)(*(_QWORD *)(v15 + 56) + 16 * v16);
          v19 = *v18;
          v20 = v18[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v21 = v19 == v28 && v20 == v14;
          if (v21 || (sub_2348702E0() & 1) != 0)
          {
LABEL_33:
            swift_bridgeObjectRelease();
            return 0;
          }
          while (1)
          {
            swift_beginAccess();
            v22 = *a3;
            if (!*(_QWORD *)(*a3 + 16))
              break;
            swift_bridgeObjectRetain();
            v23 = sub_2347CD9BC(v19, v20);
            if ((v24 & 1) == 0)
            {
              swift_endAccess();
              swift_bridgeObjectRelease_n();
              return 1;
            }
            v25 = (uint64_t *)(*(_QWORD *)(v22 + 56) + 16 * v23);
            v19 = *v25;
            v26 = v25[1];
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease_n();
            if (v19 != v28 || v26 != v14)
            {
              v20 = v26;
              if ((sub_2348702E0() & 1) == 0)
                continue;
            }
            goto LABEL_33;
          }
        }
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_endAccess();
      }
    }
    return 1;
  }
  return result;
}

BOOL sub_234823C1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_234823C34()
{
  return sub_234870490();
}

uint64_t sub_234823C60()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6F6973726576;
  if (*v0 != 1)
    v1 = 0x7365697469746E65;
  if (*v0)
    return v1;
  else
    return 0x676E69646F636E65;
}

uint64_t sub_234823CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2348299C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_234823CEC()
{
  return 0;
}

void sub_234823CF8(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_234823D04()
{
  sub_234829F34();
  return sub_234870544();
}

uint64_t sub_234823D2C()
{
  sub_234829F34();
  return sub_234870550();
}

uint64_t Schema.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Schema.init(from:)(a1);
  return v2;
}

uint64_t Schema.init(from:)(_QWORD *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  _WORD v63[8];
  _QWORD *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;

  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189948);
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_234829F34();
  v60 = v6;
  sub_2348704FC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)a1);
    return v1;
  }
  v56 = a1;
  v59 = v1;
  LOBYTE(v64) = 0;
  sub_234829F78();
  v7 = v67;
  sub_234870184();
  v8 = v66;
  v9 = v59;
  *(_OWORD *)(v59 + 16) = v65;
  *(_QWORD *)(v9 + 32) = v8;
  LOBYTE(v64) = 1;
  sub_234870184();
  v10 = 0;
  v11 = v66;
  *(_OWORD *)(v9 + 40) = v65;
  *(_QWORD *)(v9 + 56) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189960);
  LOBYTE(v64) = 2;
  sub_23482A000(&qword_256189968, &qword_256189970, (uint64_t)&protocol conformance descriptor for Schema.Entity, MEMORY[0x24BEE12D0]);
  sub_234870184();
  v13 = v65;
  *(_QWORD *)(v9 + 64) = v65;
  if (v13 >> 62)
    goto LABEL_50;
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
LABEL_6:
  v15 = isUniquelyReferenced_nonNull_native;
  v55 = v10;
  v58 = isUniquelyReferenced_nonNull_native;
  if (v14)
  {
    v54 = v13 & 0xC000000000000001;
    v16 = (_QWORD *)MEMORY[0x24BEE4B00];
    v10 = 4;
    v53 = v14;
    while (1)
    {
      isUniquelyReferenced_nonNull_native = v10 - 4;
      if (v54)
      {
        v20 = MEMORY[0x234945A1C](v10 - 4, v13);
        v21 = v10 - 3;
        if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
          goto LABEL_46;
      }
      else
      {
        v20 = *(_QWORD *)(v13 + 8 * v10);
        swift_retain();
        v21 = v10 - 3;
        if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          swift_bridgeObjectRetain_n();
          v14 = sub_23487001C();
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      v57 = v21;
      swift_beginAccess();
      v22 = *(_QWORD *)(v20 + 16);
      v7 = *(_QWORD *)(v20 + 24);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v64 = v16;
      v24 = sub_2347CD9BC(v22, v7);
      v25 = v16[2];
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
        goto LABEL_47;
      v28 = v23;
      if (v16[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v16 = v64;
          if ((v23 & 1) != 0)
            goto LABEL_8;
        }
        else
        {
          sub_2347D6B3C();
          v16 = v64;
          if ((v28 & 1) != 0)
            goto LABEL_8;
        }
      }
      else
      {
        sub_2347D0A38(v27, isUniquelyReferenced_nonNull_native);
        v29 = sub_2347CD9BC(v22, v7);
        if ((v28 & 1) != (v30 & 1))
          goto LABEL_54;
        v24 = v29;
        v16 = v64;
        if ((v28 & 1) != 0)
        {
LABEL_8:
          v17 = v16[7];
          swift_release();
          *(_QWORD *)(v17 + 8 * v24) = v20;
          goto LABEL_9;
        }
      }
      v16[(v24 >> 6) + 8] |= 1 << v24;
      v31 = (uint64_t *)(v16[6] + 16 * v24);
      *v31 = v22;
      v31[1] = v7;
      *(_QWORD *)(v16[7] + 8 * v24) = v20;
      v32 = v16[2];
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_49;
      v16[2] = v34;
      swift_bridgeObjectRetain();
LABEL_9:
      v15 = v58;
      v18 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v10;
      v19 = v59;
      v7 = v67;
      if (v57 == v18)
        goto LABEL_27;
    }
  }
  v16 = (_QWORD *)MEMORY[0x24BEE4B00];
  v19 = v59;
LABEL_27:
  swift_bridgeObjectRelease_n();
  *(_QWORD *)(v19 + 72) = v16;
  v13 = v19;
  v35 = *(_QWORD *)(v19 + 64);
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v36 = sub_23487001C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v37 = v60;
  if (!v36)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v37, v7);
    __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)v56);
    return v13;
  }
  v59 = v35 & 0xC000000000000001;
  v38 = 4;
  v54 = v35;
  v57 = v36;
  while (1)
  {
    isUniquelyReferenced_nonNull_native = v38 - 4;
    if (v59)
    {
      v40 = (_QWORD *)MEMORY[0x234945A1C](v38 - 4, v35);
      v10 = v38 - 3;
      if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
        goto LABEL_48;
    }
    else
    {
      v40 = *(_QWORD **)(v35 + 8 * v38);
      swift_retain();
      v10 = v38 - 3;
      if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
        goto LABEL_48;
    }
    swift_beginAccess();
    v41 = v40[6];
    if (v41)
      break;
    swift_release();
    v15 = v58;
    v39 = v57;
LABEL_32:
    ++v38;
    if (v10 == v39)
      goto LABEL_45;
  }
  v42 = v40[5];
  v43 = *(_QWORD *)(v13 + 72);
  v44 = *(_QWORD *)(v43 + 16);
  swift_bridgeObjectRetain();
  if (!v44)
    goto LABEL_53;
  swift_bridgeObjectRetain();
  v45 = sub_2347CD9BC(v42, v41);
  if ((v46 & 1) != 0)
  {
    v47 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v45);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    v40[7] = v47;
    swift_retain_n();
    swift_release();
    v48 = v40[7];
    swift_beginAccess();
    if (v48)
    {
      v49 = *(_QWORD *)(v48 + 64);
      swift_beginAccess();
      v61 = v49;
      swift_retain();
      swift_bridgeObjectRetain();
      v50 = swift_bridgeObjectRetain();
      sub_23483A478(v50);
      v51 = v61;
      swift_beginAccess();
      v40[9] = v51;
      swift_bridgeObjectRelease();
      sub_23483CC54();
      swift_release();
    }
    else
    {
      v40[9] = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRelease();
      sub_23483CC54();
    }
    swift_release();
    swift_release();
    v35 = v54;
    v39 = v57;
    swift_release();
    v7 = v67;
    v15 = v58;
    v37 = v60;
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
LABEL_53:
  v61 = 0;
  v62 = 0xE000000000000000;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  strcpy((char *)v63, "SuperEntity ");
  HIBYTE(v63[6]) = 0;
  v63[7] = -5120;
  sub_23486F7DC();
  sub_23486F7DC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
LABEL_54:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t Schema.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189978);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_234829F34();
  sub_234870508();
  v9 = *(_QWORD *)(v3 + 32);
  v14 = *(_OWORD *)(v3 + 16);
  v15 = v9;
  v13 = 0;
  sub_234829FBC();
  sub_234870208();
  if (!v2)
  {
    v10 = *(_QWORD *)(v3 + 56);
    v14 = *(_OWORD *)(v3 + 40);
    v15 = v10;
    v13 = 1;
    sub_234870208();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + 64);
    v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189960);
    sub_23482A000(&qword_256189988, &qword_256189990, (uint64_t)&protocol conformance descriptor for Schema.Entity, MEMORY[0x24BEE12A0]);
    sub_234870208();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Schema.hash(into:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_234870490();
  sub_234870490();
  sub_234870490();
  v1 = *(_QWORD *)(v0 + 64);
  if (!(v1 >> 62))
  {
    swift_bridgeObjectRetain();
    result = sub_234870490();
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  sub_23487001C();
  swift_bridgeObjectRelease();
  sub_234870490();
  swift_bridgeObjectRetain();
  v3 = sub_23487001C();
  result = swift_bridgeObjectRelease();
  if (!v3)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        MEMORY[0x234945A1C](v4++, v1);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v3 != v4);
    }
    else
    {
      v5 = 0;
      do
      {
        ++v5;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v3 != v5);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Schema.save(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_23486F038();
  swift_allocObject();
  sub_23486F02C();
  sub_23482B044(&qword_256189998, v1, (uint64_t (*)(uint64_t))type metadata accessor for Schema, (uint64_t)&protocol conformance descriptor for Schema);
  v2 = sub_23486F020();
  if (!v0)
  {
    v4 = v2;
    v5 = v3;
    sub_23486F470();
    sub_2347C6460(v4, v5);
  }
  return swift_release();
}

uint64_t static Schema.load(from:)()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_23486F44C();
  if (!v0)
  {
    v3 = result;
    v4 = v2;
    sub_23486F014();
    swift_allocObject();
    sub_23486F008();
    sub_23482B044(&qword_2561899A0, v5, (uint64_t (*)(uint64_t))type metadata accessor for Schema, (uint64_t)&protocol conformance descriptor for Schema);
    sub_23486EFFC();
    swift_release();
    sub_2347C6460(v3, v4);
    return v6;
  }
  return result;
}

uint64_t Schema.entity<A>(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = sub_23481063C();
  if (!*(_QWORD *)(v1 + 16) || (v4 = sub_2347CD9BC(v2, v3), (v5 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v4);
  swift_retain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v6 + 144)
    || (ObjCClassFromMetadata = swift_getObjCClassFromMetadata(),
        ObjCClassFromMetadata != swift_getObjCClassFromMetadata()))
  {
    swift_release();
    return 0;
  }
  return v6;
}

uint64_t static Schema.entityName<A>(for:)()
{
  return sub_23481063C();
}

uint64_t Schema.Version.major.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Schema.Version.minor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t Schema.Version.patch.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t static Schema.Version.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v4 = _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0((__int128 *)a1, (__int128 *)a2);
  v5 = *(_QWORD *)(a1 + 16);
  v11 = *(_OWORD *)a1;
  v12 = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v9 = *(_OWORD *)a2;
  v10 = v6;
  if ((v4 & 1) != 0)
    v7 = 0;
  else
    v7 = _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v9, &v11) ^ 1;
  return v7 & 1;
}

uint64_t sub_234824CAC(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(result + 16);
    if (!v3)
      return 0;
    v4 = *(_QWORD *)(a2 + 32);
    v5 = *(_QWORD *)(result + 32);
    if (v4 < v5)
      return 1;
    if (v5 < v4)
      return 0;
    v6 = 0;
    v7 = result + 40;
    while (v2 - 1 != v6)
    {
      if (v3 - 1 == v6)
        return 0;
      v8 = *(_QWORD *)(a2 + 40 + 8 * v6);
      v9 = *(_QWORD *)(v7 + 8 * v6);
      if (v8 < v9)
        return 1;
      result = 0;
      ++v6;
      if (v9 < v8)
        return result;
    }
  }
  else
  {
    v3 = *(_QWORD *)(result + 16);
  }
  if (v2 == v3)
    return 0;
  if (v2 < v3)
    return 1;
  __break(1u);
  return result;
}

uint64_t Schema.Version.description.getter()
{
  uint64_t v1;

  v1 = sub_2348702B0();
  sub_23486F7DC();
  sub_2348702B0();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_2348702B0();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Schema.Version.hash(into:)()
{
  sub_234870490();
  sub_234870490();
  return sub_234870490();
}

uint64_t sub_234824E5C()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_234824EA4()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_234824EE4()
{
  char *v0;

  return *(_QWORD *)&aMajor_0[8 * *v0];
}

uint64_t sub_234824EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_234829B40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_234824F20()
{
  return 0;
}

void sub_234824F2C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_234824F38()
{
  sub_23482A0A8();
  return sub_234870544();
}

uint64_t sub_234824F60()
{
  sub_23482A0A8();
  return sub_234870550();
}

uint64_t Schema.Version.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561899A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v10[0] = *(_QWORD *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23482A0A8();
  sub_234870508();
  v13 = 0;
  sub_2348701F0();
  if (!v2)
  {
    v12 = 1;
    sub_2348701F0();
    v11 = 2;
    sub_2348701F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Schema.Version.hashValue.getter()
{
  sub_234870484();
  sub_234870490();
  sub_234870490();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t Schema.Version.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561899B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23482A0A8();
  sub_2348704FC();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_234870178();
    v15 = 1;
    v11 = sub_234870178();
    v14 = 2;
    v12 = sub_234870178();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm_5((uint64_t)a1);
}

uint64_t sub_2348252B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Schema.Version.init(from:)(a1, a2);
}

uint64_t sub_2348252C4(_QWORD *a1)
{
  return Schema.Version.encode(to:)(a1);
}

BOOL sub_2348252DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  v7 = *(_OWORD *)a1;
  v8 = v2;
  v5 = *(_OWORD *)a2;
  v6 = v3;
  return (_s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v5, &v7) & 1) == 0;
}

BOOL sub_234825328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  v7 = *(_OWORD *)a1;
  v8 = v2;
  v5 = *(_OWORD *)a2;
  v6 = v3;
  return (_s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v7, &v5) & 1) == 0;
}

uint64_t sub_234825374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  v7 = *(_OWORD *)a1;
  v8 = v2;
  v5 = *(_OWORD *)a2;
  v6 = v3;
  return _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v5, &v7) & 1;
}

uint64_t sub_2348253C0()
{
  sub_234870484();
  sub_234870490();
  sub_234870490();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_234825428()
{
  sub_234870490();
  sub_234870490();
  return sub_234870490();
}

uint64_t sub_23482546C()
{
  sub_234870484();
  sub_234870490();
  sub_234870490();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_2348254D0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v4 = _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0((__int128 *)a1, (__int128 *)a2);
  v5 = *(_QWORD *)(a1 + 16);
  v11 = *(_OWORD *)a1;
  v12 = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v9 = *(_OWORD *)a2;
  v10 = v6;
  if ((v4 & 1) != 0)
    v7 = 0;
  else
    v7 = _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v9, &v11) ^ 1;
  return v7 & 1;
}

uint64_t Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;

  *(_QWORD *)(a6 + 88) = 0;
  *(_OWORD *)(a6 + 72) = 0u;
  *(_OWORD *)(a6 + 40) = 0u;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_OWORD *)(a6 + 56) = 0u;
  v7 = a6 + 56;
  *(_OWORD *)(a6 + 24) = 0u;
  sub_23482A0EC(a4, a6 + 24, &qword_254258968);
  return sub_23482A0EC(a5, v7, &qword_254258858);
}

uint64_t Schema.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Schema.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t Schema.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_234870484();
  sub_234870490();
  sub_234870490();
  sub_234870490();
  v1 = *(_QWORD *)(v0 + 64);
  if (!(v1 >> 62))
  {
    swift_bridgeObjectRetain();
    result = sub_234870490();
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return sub_2348704B4();
  }
  swift_bridgeObjectRetain_n();
  sub_23487001C();
  swift_bridgeObjectRelease();
  sub_234870490();
  swift_bridgeObjectRetain();
  v3 = sub_23487001C();
  result = swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        MEMORY[0x234945A1C](v4++, v1);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v3 != v4);
    }
    else
    {
      v5 = 0;
      do
      {
        ++v5;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v3 != v5);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2348257D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = Schema.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_234825828(_QWORD *a1)
{
  return Schema.encode(to:)(a1);
}

uint64_t sub_234825848()
{
  return Schema.hashValue.getter();
}

uint64_t sub_234825868()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  sub_234870490();
  sub_234870490();
  sub_234870490();
  v2 = *(_QWORD *)(v1 + 64);
  if (!(v2 >> 62))
  {
    swift_bridgeObjectRetain();
    result = sub_234870490();
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  sub_23487001C();
  swift_bridgeObjectRelease();
  sub_234870490();
  swift_bridgeObjectRetain();
  v4 = sub_23487001C();
  result = swift_bridgeObjectRelease();
  if (!v4)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        MEMORY[0x234945A1C](v5++, v2);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v4 != v5);
    }
    else
    {
      v6 = 0;
      do
      {
        ++v6;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v4 != v6);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_234825A50()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  sub_234870484();
  sub_234870490();
  sub_234870490();
  sub_234870490();
  v2 = *(_QWORD *)(v1 + 64);
  if (!(v2 >> 62))
  {
    swift_bridgeObjectRetain();
    result = sub_234870490();
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return sub_2348704B4();
  }
  swift_bridgeObjectRetain_n();
  sub_23487001C();
  swift_bridgeObjectRelease();
  sub_234870490();
  swift_bridgeObjectRetain();
  v4 = sub_23487001C();
  result = swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_10;
LABEL_3:
  if (v4 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        MEMORY[0x234945A1C](v5++, v2);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v4 != v5);
    }
    else
    {
      v6 = 0;
      do
      {
        ++v6;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v4 != v6);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_234825C28(_QWORD **a1, _QWORD **a2)
{
  return _s9SwiftData6SchemaC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t Schema.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_234879D90;
  *(_QWORD *)(v1 + 32) = 0x616D65686353;
  *(_QWORD *)(v1 + 40) = 0xE600000000000000;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  Schema.Version.description.getter();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = 0xD000000000000017;
  *(_QWORD *)(v1 + 56) = 0x80000002348753E0;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  Schema.Version.description.getter();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = 0xD000000000000011;
  *(_QWORD *)(v1 + 72) = 0x8000000234875400;
  *(_QWORD *)(v1 + 80) = 0x7365697469746E65;
  *(_QWORD *)(v1 + 88) = 0xE90000000000003ALL;
  v2 = *(_QWORD *)(v0 + 64);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258650);
    sub_234784FB4();
    v13 = sub_23486F6BC();
    swift_bridgeObjectRelease();
    return v13;
  }
  swift_bridgeObjectRetain();
  result = sub_23487001C();
  v3 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        MEMORY[0x234945A1C](v5, v2);
        Schema.Entity.debugDescription.getter();
        sub_23486F7DC();
        swift_bridgeObjectRelease();
        v7 = *(_QWORD *)(v1 + 16);
        v6 = *(_QWORD *)(v1 + 24);
        if (v7 >= v6 >> 1)
          v1 = (uint64_t)sub_23479E084((_QWORD *)(v6 > 1), v7 + 1, 1, (_QWORD *)v1);
        ++v5;
        *(_QWORD *)(v1 + 16) = v7 + 1;
        v8 = v1 + 16 * v7;
        *(_QWORD *)(v8 + 32) = 32;
        *(_QWORD *)(v8 + 40) = 0xE100000000000000;
        swift_unknownObjectRelease();
      }
      while (v3 != v5);
    }
    else
    {
      v9 = 0;
      do
      {
        swift_retain();
        Schema.Entity.debugDescription.getter();
        sub_23486F7DC();
        swift_bridgeObjectRelease();
        v11 = *(_QWORD *)(v1 + 16);
        v10 = *(_QWORD *)(v1 + 24);
        if (v11 >= v10 >> 1)
          v1 = (uint64_t)sub_23479E084((_QWORD *)(v10 > 1), v11 + 1, 1, (_QWORD *)v1);
        ++v9;
        *(_QWORD *)(v1 + 16) = v11 + 1;
        v12 = v1 + 16 * v11;
        *(_QWORD *)(v12 + 32) = 32;
        *(_QWORD *)(v12 + 40) = 0xE100000000000000;
        swift_release();
      }
      while (v3 != v9);
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_234825F6C()
{
  return Schema.debugDescription.getter();
}

uint64_t sub_234825F8C(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t result;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v3 = v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_23;
  result = sub_23486FDF4();
  if (__OFADD__(result, 1))
    goto LABEL_25;
  if (result == -1)
  {
    swift_bridgeObjectRelease();
    *v2 = MEMORY[0x24BEE4B00];
    goto LABEL_23;
  }
  v16 = a2;
  v17 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258910);
  v7 = (_QWORD *)sub_23487004C();
  v21 = v7;
  sub_23486FFC8();
  if (!sub_23486FFEC())
  {
LABEL_21:
    swift_release();
    a2 = v16;
    v3 = v17;
    *v17 = (uint64_t)v7;
LABEL_23:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_2348066D4(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    return swift_bridgeObjectRelease();
  }
  type metadata accessor for Schema();
  while (1)
  {
    swift_dynamicCast();
    sub_23482B104(0, &qword_256189340);
    swift_dynamicCast();
    v7 = v21;
    v10 = v21[2];
    if (v21[3] <= v10)
    {
      sub_2347D0D58(v10 + 1, 1);
      v7 = v21;
    }
    sub_234870484();
    sub_234870490();
    sub_234870490();
    sub_234870490();
    v11 = *(_QWORD *)(v20 + 64);
    if (v11 >> 62)
      break;
    swift_bridgeObjectRetain();
    result = sub_234870490();
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_11;
LABEL_6:
    swift_bridgeObjectRelease();
    sub_2348704B4();
    v8 = sub_23486FDAC();
    *(_QWORD *)((char *)v7 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    v9 = 8 * v8;
    *(_QWORD *)(v7[6] + v9) = v20;
    *(_QWORD *)(v7[7] + v9) = v19;
    ++v7[2];
    if (!sub_23486FFEC())
      goto LABEL_21;
  }
  swift_bridgeObjectRetain_n();
  sub_23487001C();
  swift_bridgeObjectRelease();
  sub_234870490();
  swift_bridgeObjectRetain();
  v12 = sub_23487001C();
  result = swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_6;
LABEL_11:
  if (v12 >= 1)
  {
    if ((v11 & 0xC000000000000001) != 0)
    {
      v13 = 0;
      do
      {
        MEMORY[0x234945A1C](v13++, v11);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v12 != v13);
    }
    else
    {
      v14 = 0;
      do
      {
        ++v14;
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v12 != v14);
    }
    goto LABEL_6;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_234826370(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_2348263BC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_234826404(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_23482644C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_234797294(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_2348264BC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

_OWORD *sub_234826510(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_234797294(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_234826588(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_2348265D0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23486F4AC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_234826668(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23486F158();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = (_OWORD *)(a4[7] + (a1 << 6));
  v12 = a3[3];
  v11[2] = a3[2];
  v11[3] = v12;
  v13 = a3[1];
  *v11 = *a3;
  v11[1] = v13;
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
  return result;
}

uint64_t sub_234826710(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_234826A48(a1, a2, a3, a4, type metadata accessor for DefaultSnapshot);
}

uint64_t sub_23482671C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for PersistentIdentifier(0);
  result = sub_23482B13C(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, type metadata accessor for PersistentIdentifier);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_2348267B0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for PersistentIdentifier(0);
  result = sub_23482B13C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for PersistentIdentifier);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_234826848(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v7 = a4[6];
  v8 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8) + 72) * a1;
  sub_23482B13C(a2, v7 + v8, type metadata accessor for PersistentIdentifier);
  result = sub_23482B13C(a3, a4[7] + v8, type metadata accessor for PersistentIdentifier);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_2348268F4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for PersistentIdentifier(0);
  result = sub_23482B13C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for PersistentIdentifier);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_23482698C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_2348269D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_2347DDBC8(a4, a5[7] + 32 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_234826A3C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_234826A48(a1, a2, a3, a4, type metadata accessor for ModelContext.WeakAnyPersistentObject);
}

uint64_t sub_234826A48(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = type metadata accessor for PersistentIdentifier(0);
  sub_23482B13C(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for PersistentIdentifier);
  v12 = a4[7];
  v13 = a5(0);
  result = sub_23482B13C(a3, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a5);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

unint64_t sub_234826B04(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_234826B4C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_QWORD *sub_234826B94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_2(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_234840430((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23482AF78();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_234826C78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2561896D0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size_2(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_234840434((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23482AF78();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_234826D5C(uint64_t a1)
{
  return sub_234826D74(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_234840850);
}

uint64_t sub_234826D68(uint64_t a1)
{
  return sub_234826D74(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_23484086C);
}

uint64_t sub_234826D74(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_23486FDF4();
    if (v4)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v4 <= 0)
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258438);
    v5 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size_2(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 25;
    v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v8 = a2(&v10, v5 + 4, v4, a1);
  result = sub_23482AF78();
  if (v8 == v4)
    return (uint64_t)v5;
  __break(1u);
  return result;
}

uint64_t sub_234826E78(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v5)
    return MEMORY[0x24BEE4AF8];
  if (v5 <= 0)
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0)
        goto LABEL_24;
      v14 = *(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8);
      v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v16 = *(_QWORD *)(v14 + 72);
      v17 = a2 + v16 * a3;
      v18 = v16 * v5;
      v19 = &v15[v18];
      v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254257730);
  v8 = *(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v12 = _swift_stdlib_malloc_size_2(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1)
      goto LABEL_23;
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_234870064();
  __break(1u);
  return result;
}

size_t sub_234827040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254257730);
  v3 = *(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size_2(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_234840B7C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_23482AF78();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_234827158(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  BOOL v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  BOOL v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  _QWORD *v91;
  __int128 v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  char v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  unint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v164[4];
  uint64_t v165[5];
  uint64_t v166;

  v3 = a1;
  v4 = a1[1];
  result = sub_234870298();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_224;
    if (v4)
      return sub_234827F98(0, v4, 1, v3, a2);
    return result;
  }
  v151 = result;
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_232;
  v157 = v2;
  if (v4 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    v156 = (uint64_t *)(MEMORY[0x24BEE4AF8] + 32);
    if (v4 != 1)
    {
      v95 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
      goto LABEL_189;
    }
    v150 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v6 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542588D0);
    v8 = sub_23486F938();
    *(_QWORD *)(v8 + 16) = v7;
    v150 = v8;
    v156 = (uint64_t *)(v8 + 32);
  }
  v10 = 0;
  v149 = v3;
  v158 = *v3;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v154 = v4;
  while (2)
  {
    v12 = v4;
    v13 = v10 + 1;
    v152 = v11;
    v159 = v10;
    if (v10 + 1 >= v12)
    {
      v22 = v10 + 1;
      v51 = v154;
      v23 = v158;
      v52 = v10;
      if (v13 < v154)
        goto LABEL_75;
      goto LABEL_62;
    }
    v14 = (uint64_t *)(v158 + 32 * v13);
    v15 = v14[1];
    v16 = v14[2];
    v17 = v14[3];
    v165[0] = *v14;
    v165[1] = v15;
    v165[2] = v16;
    v165[3] = v17;
    v18 = (uint64_t *)(v158 + 32 * v10);
    v19 = v18[1];
    v20 = v18[2];
    v21 = v18[3];
    v164[0] = *v18;
    v164[1] = v19;
    v164[2] = v20;
    v164[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v166) = sub_23482398C(v165, v164, a2);
    if (v157)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_200;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = v10 + 2;
    v23 = v158;
    if (v10 + 2 >= v154)
    {
LABEL_64:
      if ((v166 & 1) == 0)
        goto LABEL_186;
      goto LABEL_65;
    }
    do
    {
      v24 = v22;
      v25 = (uint64_t *)(v23 + 32 * v22);
      v27 = v25[1];
      v26 = v25[2];
      v28 = v25[3];
      v29 = (uint64_t *)(v23 + 32 * v13);
      v31 = *v29;
      v30 = v29[1];
      v32 = v26 == *v29 && v28 == v30;
      if (v32 || (v33 = *v25, v34 = v29[3], v162 = v29[2], (sub_2348702E0() & 1) != 0))
      {
LABEL_22:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v35 = 0;
        goto LABEL_23;
      }
      if ((sub_2348702E0() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v35 = 1;
        goto LABEL_23;
      }
      v36 = v26 == v162 && v28 == v34;
      if (v36 || (sub_2348702E0() & 1) != 0)
      {
        v37 = v31 == v33 && v30 == v27;
        if (!v37 && (sub_2348702E0() & 1) != 0)
          goto LABEL_22;
      }
      swift_beginAccess();
      v38 = *a2;
      if (!*(_QWORD *)(*a2 + 16))
      {
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_56;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39 = sub_2347CD9BC(v26, v28);
      if ((v40 & 1) == 0)
        goto LABEL_55;
      v41 = (uint64_t *)(*(_QWORD *)(v38 + 56) + 16 * v39);
      v42 = *v41;
      v43 = v41[1];
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v42 == v162 && v43 == v34)
      {
LABEL_57:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_58;
      }
      if ((sub_2348702E0() & 1) == 0)
      {
        while (1)
        {
          swift_beginAccess();
          v45 = *a2;
          if (!*(_QWORD *)(*a2 + 16))
            break;
          swift_bridgeObjectRetain();
          v46 = sub_2347CD9BC(v42, v43);
          if ((v47 & 1) == 0)
          {
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_56;
          }
          v48 = (uint64_t *)(*(_QWORD *)(v45 + 56) + 16 * v46);
          v42 = *v48;
          v49 = v48[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          if (v42 == v162 && v49 == v34)
            goto LABEL_57;
          v43 = v49;
          if ((sub_2348702E0() & 1) != 0)
            goto LABEL_45;
        }
LABEL_55:
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_56:
        v35 = 1;
        v23 = v158;
        goto LABEL_23;
      }
LABEL_45:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_58:
      v35 = 0;
      v23 = v158;
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v166 ^ v35) & 1) != 0)
      {
        v22 = v24;
        goto LABEL_64;
      }
      v13 = v24;
      v22 = v24 + 1;
    }
    while (v24 + 1 != v154);
    v22 = v154;
    if ((v166 & 1) == 0)
    {
LABEL_186:
      v51 = v154;
      v52 = v159;
      if (v22 < v154)
        goto LABEL_75;
LABEL_62:
      v10 = v22;
      goto LABEL_135;
    }
LABEL_65:
    v52 = v159;
    if (v22 < v159)
      goto LABEL_227;
    v51 = v154;
    if (v159 < v22)
    {
      v53 = 32 * v22;
      v54 = 32 * v159;
      v55 = v22;
      v56 = v159;
      do
      {
        if (v56 != --v22)
        {
          if (!v23)
            goto LABEL_230;
          v57 = (_OWORD *)(v23 + v54);
          v58 = v23 + v53;
          v59 = *(_OWORD *)(v23 + v54);
          v60 = *(_QWORD *)(v23 + v54 + 16);
          v61 = *(_QWORD *)(v23 + v54 + 24);
          v62 = *(_OWORD *)(v23 + v53 - 16);
          *v57 = *(_OWORD *)(v23 + v53 - 32);
          v57[1] = v62;
          *(_OWORD *)(v58 - 32) = v59;
          *(_QWORD *)(v58 - 16) = v60;
          *(_QWORD *)(v58 - 8) = v61;
        }
        ++v56;
        v53 -= 32;
        v54 += 32;
      }
      while (v56 < v22);
      v22 = v55;
    }
    if (v22 >= v154)
      goto LABEL_62;
LABEL_75:
    if (__OFSUB__(v22, v52))
      goto LABEL_223;
    v10 = v22;
    if (v22 - v52 >= v151)
    {
LABEL_135:
      if (v10 < v159)
        goto LABEL_219;
      v11 = v152;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_2348287E8(0, *((_QWORD *)v152 + 2) + 1, 1, v152);
      v94 = *((_QWORD *)v11 + 2);
      v93 = *((_QWORD *)v11 + 3);
      v95 = v94 + 1;
      if (v94 >= v93 >> 1)
        v11 = sub_2348287E8((char *)(v93 > 1), v94 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v95;
      v96 = v11 + 32;
      v97 = &v11[16 * v94 + 32];
      *(_QWORD *)v97 = v159;
      *((_QWORD *)v97 + 1) = v10;
      if (v94)
      {
        while (1)
        {
          v98 = v95 - 1;
          if (v95 >= 4)
          {
            v103 = &v96[16 * v95];
            v104 = *((_QWORD *)v103 - 8);
            v105 = *((_QWORD *)v103 - 7);
            v109 = __OFSUB__(v105, v104);
            v106 = v105 - v104;
            if (v109)
              goto LABEL_207;
            v108 = *((_QWORD *)v103 - 6);
            v107 = *((_QWORD *)v103 - 5);
            v109 = __OFSUB__(v107, v108);
            v101 = v107 - v108;
            v102 = v109;
            if (v109)
              goto LABEL_208;
            v110 = v95 - 2;
            v111 = &v96[16 * v95 - 32];
            v113 = *(_QWORD *)v111;
            v112 = *((_QWORD *)v111 + 1);
            v109 = __OFSUB__(v112, v113);
            v114 = v112 - v113;
            if (v109)
              goto LABEL_210;
            v109 = __OFADD__(v101, v114);
            v115 = v101 + v114;
            if (v109)
              goto LABEL_213;
            if (v115 >= v106)
            {
              v133 = &v96[16 * v98];
              v135 = *(_QWORD *)v133;
              v134 = *((_QWORD *)v133 + 1);
              v109 = __OFSUB__(v134, v135);
              v136 = v134 - v135;
              if (v109)
                goto LABEL_217;
              v126 = v101 < v136;
              goto LABEL_172;
            }
          }
          else
          {
            if (v95 != 3)
            {
              v127 = *((_QWORD *)v11 + 4);
              v128 = *((_QWORD *)v11 + 5);
              v109 = __OFSUB__(v128, v127);
              v120 = v128 - v127;
              v121 = v109;
              goto LABEL_166;
            }
            v100 = *((_QWORD *)v11 + 4);
            v99 = *((_QWORD *)v11 + 5);
            v109 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            v102 = v109;
          }
          if ((v102 & 1) != 0)
            goto LABEL_209;
          v110 = v95 - 2;
          v116 = &v96[16 * v95 - 32];
          v118 = *(_QWORD *)v116;
          v117 = *((_QWORD *)v116 + 1);
          v119 = __OFSUB__(v117, v118);
          v120 = v117 - v118;
          v121 = v119;
          if (v119)
            goto LABEL_212;
          v122 = &v96[16 * v98];
          v124 = *(_QWORD *)v122;
          v123 = *((_QWORD *)v122 + 1);
          v109 = __OFSUB__(v123, v124);
          v125 = v123 - v124;
          if (v109)
            goto LABEL_215;
          if (__OFADD__(v120, v125))
            goto LABEL_216;
          if (v120 + v125 >= v101)
          {
            v126 = v101 < v125;
LABEL_172:
            if (v126)
              v98 = v110;
            goto LABEL_174;
          }
LABEL_166:
          if ((v121 & 1) != 0)
            goto LABEL_211;
          v129 = &v96[16 * v98];
          v131 = *(_QWORD *)v129;
          v130 = *((_QWORD *)v129 + 1);
          v109 = __OFSUB__(v130, v131);
          v132 = v130 - v131;
          if (v109)
            goto LABEL_214;
          if (v132 < v120)
            goto LABEL_183;
LABEL_174:
          v137 = v98 - 1;
          if (v98 - 1 >= v95)
          {
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
LABEL_212:
            __break(1u);
LABEL_213:
            __break(1u);
LABEL_214:
            __break(1u);
LABEL_215:
            __break(1u);
LABEL_216:
            __break(1u);
LABEL_217:
            __break(1u);
LABEL_218:
            __break(1u);
LABEL_219:
            __break(1u);
LABEL_220:
            __break(1u);
LABEL_221:
            __break(1u);
LABEL_222:
            __break(1u);
LABEL_223:
            __break(1u);
LABEL_224:
            __break(1u);
LABEL_225:
            __break(1u);
            goto LABEL_226;
          }
          if (!v158)
            goto LABEL_229;
          v138 = &v96[16 * v137];
          v139 = *(_QWORD *)v138;
          v140 = &v96[16 * v98];
          v141 = *((_QWORD *)v140 + 1);
          sub_2348283F0((uint64_t *)(v158 + 32 * *(_QWORD *)v138), (uint64_t *)(v158 + 32 * *(_QWORD *)v140), v158 + 32 * v141, v156, a2);
          if (v157)
            goto LABEL_200;
          if (v141 < v139)
            goto LABEL_204;
          if (v98 > *((_QWORD *)v11 + 2))
            goto LABEL_205;
          *(_QWORD *)v138 = v139;
          *(_QWORD *)&v96[16 * v137 + 8] = v141;
          v142 = *((_QWORD *)v11 + 2);
          if (v98 >= v142)
            goto LABEL_206;
          v95 = v142 - 1;
          memmove(&v96[16 * v98], v140 + 16, 16 * (v142 - 1 - v98));
          *((_QWORD *)v11 + 2) = v142 - 1;
          if (v142 <= 2)
            goto LABEL_183;
        }
      }
      v95 = 1;
LABEL_183:
      v4 = v154;
      if (v10 >= v154)
      {
        v3 = v149;
        v9 = v150;
LABEL_189:
        v150 = v9;
        if (v95 >= 2)
        {
          v143 = *v3;
          do
          {
            v144 = v95 - 2;
            if (v95 < 2)
              goto LABEL_218;
            if (!v143)
              goto LABEL_231;
            v145 = *(_QWORD *)&v11[16 * v144 + 32];
            v146 = *(_QWORD *)&v11[16 * v95 + 24];
            sub_2348283F0((uint64_t *)(v143 + 32 * v145), (uint64_t *)(v143 + 32 * *(_QWORD *)&v11[16 * v95 + 16]), v143 + 32 * v146, v156, a2);
            if (v157)
              break;
            if (v146 < v145)
              goto LABEL_220;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v11 = sub_234828A30((uint64_t)v11);
            if (v144 >= *((_QWORD *)v11 + 2))
              goto LABEL_221;
            v147 = &v11[16 * v144 + 32];
            *(_QWORD *)v147 = v145;
            *((_QWORD *)v147 + 1) = v146;
            v148 = *((_QWORD *)v11 + 2);
            if (v95 > v148)
              goto LABEL_222;
            memmove(&v11[16 * v95 + 16], &v11[16 * v95 + 32], 16 * (v148 - v95));
            *((_QWORD *)v11 + 2) = v148 - 1;
            v95 = v148 - 1;
          }
          while (v148 > 2);
        }
LABEL_200:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v150 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  v63 = v52 + v151;
  if (__OFADD__(v52, v151))
    goto LABEL_225;
  if (v63 >= v51)
    v63 = v51;
  if (v63 >= v52)
  {
    v153 = v63;
    if (v22 == v63)
      goto LABEL_135;
LABEL_86:
    v64 = (uint64_t *)(v23 + 32 * v10);
    v66 = *v64;
    v65 = v64[1];
    v68 = v64[2];
    v67 = v64[3];
    v155 = v10;
    while (1)
    {
      v166 = v65;
      v69 = (uint64_t *)(v23 + 32 * (v10 - 1));
      v70 = *v69;
      v71 = v69[1];
      v72 = v68 == *v69 && v67 == v71;
      if (v72
        || (v161 = v10 - 1,
            v73 = v69 + 2,
            v74 = v69[2],
            v160 = v23 + 32 * (v10 - 1),
            v75 = v69[3],
            (sub_2348702E0() & 1) != 0))
      {
LABEL_83:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_84;
      }
      if ((sub_2348702E0() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v76 = v68 == v74 && v67 == v75;
        if (v76 || (sub_2348702E0() & 1) != 0)
        {
          v77 = v70 == v66 && v71 == v166;
          if (!v77 && (sub_2348702E0() & 1) != 0)
            goto LABEL_83;
        }
        swift_beginAccess();
        v78 = *a2;
        if (*(_QWORD *)(*a2 + 16))
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v79 = sub_2347CD9BC(v68, v67);
          if ((v80 & 1) != 0)
          {
            v81 = (uint64_t *)(*(_QWORD *)(v78 + 56) + 16 * v79);
            v82 = *v81;
            v83 = v81[1];
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v82 == v74 && v83 == v75)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
LABEL_133:
              v23 = v158;
              goto LABEL_84;
            }
            if ((sub_2348702E0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_133;
            }
            while (2)
            {
              swift_beginAccess();
              v85 = *a2;
              if (!*(_QWORD *)(*a2 + 16))
              {
                swift_endAccess();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_123:
                v23 = v158;
                goto LABEL_124;
              }
              swift_bridgeObjectRetain();
              v86 = sub_2347CD9BC(v82, v83);
              if ((v87 & 1) == 0)
              {
                swift_endAccess();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                goto LABEL_123;
              }
              v88 = (uint64_t *)(*(_QWORD *)(v85 + 56) + 16 * v86);
              v82 = *v88;
              v89 = v88[1];
              swift_endAccess();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease_n();
              if (v82 != v74 || v89 != v75)
              {
                v83 = v89;
                if ((sub_2348702E0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_128;
                }
                continue;
              }
              break;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
LABEL_128:
            v23 = v158;
LABEL_84:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_85:
            v10 = v155 + 1;
            if (v155 + 1 == v153)
            {
              v10 = v153;
              goto LABEL_135;
            }
            goto LABEL_86;
          }
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v23 = v158;
        }
        else
        {
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v23 = v158;
        }
      }
LABEL_124:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v23)
        goto LABEL_228;
      v91 = (_QWORD *)(v23 + 32 * v10);
      v66 = *v91;
      v65 = v91[1];
      v68 = v91[2];
      v67 = v91[3];
      v92 = *(_OWORD *)(v160 + 16);
      *(_OWORD *)v91 = *(_OWORD *)v160;
      *((_OWORD *)v91 + 1) = v92;
      *(_QWORD *)v160 = v66;
      *(_QWORD *)(v160 + 8) = v65;
      *v73 = v68;
      v73[1] = v67;
      --v10;
      if (v161 == v159)
        goto LABEL_85;
    }
  }
LABEL_226:
  __break(1u);
LABEL_227:
  __break(1u);
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  __break(1u);
LABEL_231:
  __break(1u);
LABEL_232:
  result = sub_23486FFF8();
  __break(1u);
  return result;
}

uint64_t sub_234827F98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  _QWORD *v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v38 = result;
  if (a3 != a2)
  {
    v5 = *a4;
    v37 = *a4;
LABEL_8:
    v6 = (uint64_t *)(v5 + 32 * a3);
    v8 = *v6;
    v7 = v6[1];
    v10 = v6[2];
    v9 = v6[3];
    v36 = a3;
    while (1)
    {
      v44 = v7;
      v11 = (uint64_t *)(v5 + 32 * (a3 - 1));
      v12 = *v11;
      v13 = v11[1];
      v14 = v10 == *v11 && v9 == v13;
      if (v14
        || (v42 = a3,
            v43 = a3 - 1,
            v15 = v11 + 2,
            v16 = v11[2],
            v41 = v5 + 32 * (a3 - 1),
            v17 = v11[3],
            (sub_2348702E0() & 1) != 0))
      {
LABEL_49:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_6;
      }
      if ((sub_2348702E0() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v39 = v9;
        v18 = v10 == v16 && v9 == v17;
        if (v18 || (sub_2348702E0() & 1) != 0)
        {
          v19 = v12 == v8 && v13 == v44;
          if (!v19 && (sub_2348702E0() & 1) != 0)
            goto LABEL_49;
        }
        swift_beginAccess();
        v20 = *a5;
        if (*(_QWORD *)(*a5 + 16))
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = sub_2347CD9BC(v10, v39);
          if ((v22 & 1) != 0)
          {
            v23 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v21);
            v24 = *v23;
            v25 = v23[1];
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v24 == v16 && v25 == v17)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_53;
            }
            if ((sub_2348702E0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_53:
              v5 = v37;
LABEL_6:
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
LABEL_7:
              a3 = v36 + 1;
              if (v36 + 1 == a2)
                return result;
              goto LABEL_8;
            }
            while (1)
            {
              swift_beginAccess();
              v27 = *a5;
              if (!*(_QWORD *)(*a5 + 16))
              {
                swift_endAccess();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_45;
              }
              swift_bridgeObjectRetain();
              v28 = sub_2347CD9BC(v24, v25);
              if ((v29 & 1) == 0)
                break;
              v30 = (uint64_t *)(*(_QWORD *)(v27 + 56) + 16 * v28);
              v24 = *v30;
              v31 = v30[1];
              swift_endAccess();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease_n();
              if (v24 == v16 && v31 == v17)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
LABEL_5:
                v5 = v37;
                goto LABEL_6;
              }
              v25 = v31;
              if ((sub_2348702E0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_5;
              }
            }
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
LABEL_45:
            v5 = v37;
          }
          else
          {
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v5 = v37;
          }
        }
        else
        {
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v5 = v37;
        }
      }
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!v5)
        break;
      v33 = (_QWORD *)(v5 + 32 * v42);
      v8 = *v33;
      v7 = v33[1];
      v10 = v33[2];
      v9 = v33[3];
      v34 = *(_OWORD *)(v41 + 16);
      *(_OWORD *)v33 = *(_OWORD *)v41;
      *((_OWORD *)v33 + 1) = v34;
      *(_QWORD *)v41 = v8;
      *(_QWORD *)(v41 + 8) = v7;
      *v15 = v10;
      v15[1] = v9;
      a3 = v43;
      if (v43 == v38)
        goto LABEL_7;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2348283F0(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t *v23;
  uint64_t *v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t *v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t result;
  uint64_t *v45;
  uint64_t *v47;
  uint64_t *v48;
  unint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t *v63;

  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 5;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 5;
  v63 = __src;
  v62 = a4;
  if (v9 >= v11 >> 5)
  {
    if (v10 >= -31)
    {
      if (a4 != a2 || &a2[4 * v12] <= a4)
        memmove(a4, a2, 32 * v12);
      v27 = (char *)&a4[4 * v12];
      v61 = (uint64_t *)v27;
      v63 = v5;
      if (v6 >= v5 || v10 < 32)
        goto LABEL_47;
      v28 = (uint64_t *)(a3 - 32);
      v29 = v5;
      v45 = v6;
      while (1)
      {
        v50 = (unint64_t)v27;
        v30 = *((_QWORD *)v27 - 4);
        v31 = *((_QWORD *)v27 - 3);
        v27 -= 32;
        v32 = *((_QWORD *)v27 + 2);
        v33 = *((_QWORD *)v27 + 3);
        v57 = v30;
        v58 = v31;
        v59 = v32;
        v60 = v33;
        v34 = *(v29 - 4);
        v35 = *(v29 - 3);
        v29 -= 4;
        v36 = v29[2];
        v37 = v29[3];
        v53 = v34;
        v54 = v35;
        v55 = v36;
        v56 = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = sub_23482398C(&v57, &v53, a5);
        if (v52)
          goto LABEL_46;
        v39 = v38;
        v48 = v5;
        v40 = v28 + 4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
        {
          v27 = (char *)v50;
          v41 = (unint64_t)v45;
          if (v40 != v48 || v28 >= v48)
          {
            v42 = *((_OWORD *)v29 + 1);
            *(_OWORD *)v28 = *(_OWORD *)v29;
            *((_OWORD *)v28 + 1) = v42;
          }
          v63 = v29;
        }
        else
        {
          v61 = (uint64_t *)v27;
          v41 = (unint64_t)v45;
          if ((unint64_t)v40 < v50 || (unint64_t)v28 >= v50 || v40 != (uint64_t *)v50)
          {
            v43 = *((_OWORD *)v27 + 1);
            *(_OWORD *)v28 = *(_OWORD *)v27;
            *((_OWORD *)v28 + 1) = v43;
          }
          v29 = v48;
        }
        if ((unint64_t)v29 > v41)
        {
          v28 -= 4;
          v5 = v29;
          if (v27 > (char *)a4)
            continue;
        }
        goto LABEL_47;
      }
    }
  }
  else if (v7 >= -31)
  {
    if (a4 != __src || &__src[4 * v9] <= a4)
      memmove(a4, __src, 32 * v9);
    v47 = &a4[4 * v9];
    v61 = v47;
    if ((unint64_t)v5 >= a3 || v7 < 32)
      goto LABEL_47;
    v13 = a4;
    while (1)
    {
      v14 = v6;
      v15 = v5[1];
      v16 = v5[2];
      v17 = v5[3];
      v57 = *v5;
      v58 = v15;
      v59 = v16;
      v60 = v17;
      v18 = v13[1];
      v19 = v13[2];
      v20 = v13[3];
      v53 = *v13;
      v54 = v18;
      v55 = v19;
      v56 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = sub_23482398C(&v57, &v53, a5);
      if (v52)
        break;
      v22 = v21;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        v23 = v5 + 4;
        v24 = v14;
        if (v14 < v5 || v14 >= v23 || v14 != v5)
        {
          v25 = *((_OWORD *)v5 + 1);
          *(_OWORD *)v14 = *(_OWORD *)v5;
          *((_OWORD *)v14 + 1) = v25;
        }
      }
      else
      {
        v24 = v14;
        if (v14 != v13)
        {
          v26 = *((_OWORD *)v13 + 1);
          *(_OWORD *)v14 = *(_OWORD *)v13;
          *((_OWORD *)v14 + 1) = v26;
        }
        v13 += 4;
        v62 = v13;
        v23 = v5;
      }
      v52 = 0;
      v6 = v24 + 4;
      v63 = v6;
      if (v13 < v47)
      {
        v5 = v23;
        if ((unint64_t)v23 < a3)
          continue;
      }
      goto LABEL_47;
    }
LABEL_46:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_47:
    sub_234828988((void **)&v63, (const void **)&v62, &v61);
    return 1;
  }
  result = sub_234870064();
  __break(1u);
  return result;
}

char *sub_2348287E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2561899F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_2(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2348288E0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_234870064();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_234828988(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_234870064();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_234828A30(uint64_t a1)
{
  return sub_2348287E8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_234828A44(uint64_t a1)
{
  return sub_234807890(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_234828A58(_QWORD *a1)
{
  return sub_2348079F8(0, a1[2], 0, a1);
}

_QWORD *sub_234828A6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  os_unfair_lock_s *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  _OWORD v26[6];
  _BYTE v27[16];

  if (qword_254258778 != -1)
    swift_once();
  v4 = &qword_25425B000;
  v5 = (os_unfair_lock_s *)(qword_25425B120 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  swift_release();
  if (qword_254258770 != -1)
    swift_once();
  swift_beginAccess();
  v6 = off_254258768;
  if (*((_QWORD *)off_254258768 + 2) && (v7 = sub_2347CD944(a1, a2), (v8 & 1) != 0))
  {
    v9 = *(_QWORD **)(v6[7] + 8 * v7);
    swift_endAccess();
    v10 = (os_unfair_lock_s *)qword_25425B120;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v25 = a2;
      v13 = v11 + 32;
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        sub_2347C63D0(v13, (uint64_t)v27);
        v19 = sub_23486FD4C();
        if (swift_conformsToProtocol2())
          v20 = v19;
        else
          v20 = 0;
        if (v20)
        {
          sub_2347C63D0((uint64_t)v27, (uint64_t)v26);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_23479DE54(0, v9[2] + 1, 1, v9);
          v22 = v9[2];
          v21 = v9[3];
          if (v22 >= v21 >> 1)
            v9 = sub_23479DE54((_QWORD *)(v21 > 1), v22 + 1, 1, v9);
          v9[2] = v22 + 1;
          v14 = &v9[12 * v22];
          v15 = v26[1];
          v14[2] = v26[0];
          v14[3] = v15;
          v16 = v26[2];
          v17 = v26[3];
          v18 = v26[5];
          v14[6] = v26[4];
          v14[7] = v18;
          v14[4] = v16;
          v14[5] = v17;
        }
        sub_2347C640C((uint64_t)v27);
        v13 += 96;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      v4 = &qword_25425B000;
      a2 = v25;
    }
    else
    {
      swift_bridgeObjectRelease();
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v26[0] = off_254258768;
    off_254258768 = (_UNKNOWN *)0x8000000000000000;
    sub_234806084((uint64_t)v9, a1, a2, isUniquelyReferenced_nonNull_native);
    off_254258768 = *(_UNKNOWN **)&v26[0];
    swift_bridgeObjectRelease();
    swift_endAccess();
    v10 = (os_unfair_lock_s *)v4[36];
  }
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  return v9;
}

uint64_t sub_234828D4C(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  os_unfair_lock_s *v9;

  if (qword_256189228 != -1)
    swift_once();
  v4 = (os_unfair_lock_s *)(qword_2561914E0 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  swift_release();
  if (qword_256189230 != -1)
    swift_once();
  swift_beginAccess();
  v5 = off_256189928;
  if (*((_QWORD *)off_256189928 + 2) && (v6 = sub_2347CD944(a1, a2), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(v5[7] + 8 * v6);
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = 0;
  }
  swift_endAccess();
  v9 = (os_unfair_lock_s *)qword_2561914E0;
  swift_retain();
  os_unfair_lock_unlock(v9 + 4);
  swift_release();
  return v8;
}

uint64_t _s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  char v6;
  __int128 v8;
  __int128 v9;

  v2 = *((_QWORD *)a1 + 2);
  v8 = *a1;
  v9 = *a2;
  v3 = *((_QWORD *)a2 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258960);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_234877EE0;
  *(_OWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 48) = v2;
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_234877EE0;
  *(_OWORD *)(v5 + 32) = v9;
  *(_QWORD *)(v5 + 48) = v3;
  if (sub_23484CAC8((_QWORD *)inited, (_QWORD *)v5))
    v6 = 0;
  else
    v6 = sub_234824CAC(v5, inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  return v6 & 1;
}

unint64_t _s9SwiftData6SchemaC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  *(_QWORD *)&v17 = v4;
  *((_QWORD *)&v17 + 1) = v5;
  v18 = v6;
  v7 = a2[5];
  v8 = a2[6];
  v9 = a2[7];
  *(_QWORD *)&v15 = v7;
  *((_QWORD *)&v15 + 1) = v8;
  v16 = v9;
  if ((_s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v17, &v15) & 1) != 0)
    return 0;
  *(_QWORD *)&v13 = v4;
  *((_QWORD *)&v13 + 1) = v5;
  v14 = v6;
  *(_QWORD *)&v11 = v7;
  *((_QWORD *)&v11 + 1) = v8;
  v12 = v9;
  if ((_s9SwiftData6SchemaC7VersionV1loiySbAE_AEtFZ_0(&v11, &v13) & 1) != 0)
    return 0;
  else
    return sub_23484C524(a1[8], a2[8]);
}

unint64_t sub_234828FF8()
{
  unint64_t result;

  result = qword_256189938;
  if (!qword_256189938)
  {
    result = MEMORY[0x2349465EC](&unk_23487B1F8, &type metadata for Schema.SchemaError);
    atomic_store(result, (unint64_t *)&qword_256189938);
  }
  return result;
}

uint64_t sub_23482903C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v6;
  char isUniquelyReferenced_nonNull_native;
  os_unfair_lock_s *v8;
  void *v10;

  if (qword_256189228 != -1)
    swift_once();
  v6 = (os_unfair_lock_s *)(qword_2561914E0 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  swift_release();
  if (qword_256189230 != -1)
    swift_once();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = off_256189928;
  off_256189928 = (_UNKNOWN *)0x8000000000000000;
  sub_234805E44(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  off_256189928 = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v8 = (os_unfair_lock_s *)qword_2561914E0;
  swift_retain();
  os_unfair_lock_unlock(v8 + 4);
  return swift_release();
}

void *sub_234829178(_QWORD *a1, char *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  id v41;
  id v42;
  _QWORD *v43;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;

  v45 = a2;
  v46 = a1;
  v2 = type metadata accessor for ModelConfiguration();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (uint64_t)&v45 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v45 - v10;
  if (qword_254258818 != -1)
    goto LABEL_68;
  while (1)
  {
    objc_msgSend((id)qword_254258888, sel_lock, v45);
    if (qword_254258880 != -1)
      swift_once();
    swift_beginAccess();
    v12 = qword_254258878;
    v13 = (_QWORD *)swift_retain();
    v14 = sub_23481ECAC(v13, v12);
    swift_release();
    v49 = v6;
    v50 = v2;
    if (v14)
      break;
    swift_endAccess();
LABEL_12:
    v14 = (void *)sub_2348576C8();
    if (!v14)
      goto LABEL_65;
    v53 = *((_QWORD *)v45 + 2);
    if (!v53)
      goto LABEL_64;
    v52 = &v45[(*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)];
    v51 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    v20 = 0;
    v47 = v9;
    do
    {
      sub_23482B084((uint64_t)&v52[v51 * v20], v9);
      v54 = MEMORY[0x24BEE4AF8];
      v22 = *(_QWORD *)(v9 + *(int *)(v2 + 40));
      if (v22)
      {
        v2 = *(_QWORD *)(v22 + 64);
        if ((unint64_t)v2 >> 62)
        {
          if (v2 < 0)
            v11 = *(char **)(v22 + 64);
          else
            v11 = (char *)(v2 & 0xFFFFFFFFFFFFFF8);
          swift_retain();
          swift_bridgeObjectRetain();
          v6 = sub_23487001C();
          if (v6)
          {
LABEL_21:
            if (v6 < 1)
            {
              __break(1u);
              goto LABEL_67;
            }
            v48 = v22;
            v23 = 0;
            while (2)
            {
              if ((v2 & 0xC000000000000001) != 0)
              {
                v24 = MEMORY[0x234945A1C](v23, v2);
              }
              else
              {
                v24 = *(_QWORD *)(v2 + 8 * v23 + 32);
                swift_retain();
              }
              v25 = objc_msgSend(v14, sel_entitiesByName);
              sub_23482B104(0, &qword_2542588E8);
              v26 = sub_23486F62C();

              v3 = v24 + 16;
              swift_beginAccess();
              if (*(_QWORD *)(v26 + 16))
              {
                v27 = *(_QWORD *)(v24 + 24);
                v3 = *(_QWORD *)v3;
                swift_bridgeObjectRetain();
                v28 = sub_2347CD9BC(v3, v27);
                if ((v29 & 1) != 0)
                {
                  v30 = *(id *)(*(_QWORD *)(v26 + 56) + 8 * v28);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v31 = v30;
                  MEMORY[0x2349453E0]();
                  v3 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v3 >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                    sub_23486F914();
                  sub_23486F950();
                  sub_23486F8FC();
                  swift_release();

LABEL_25:
                  if (v6 == ++v23)
                  {
                    swift_bridgeObjectRelease();
                    v9 = v47;
                    goto LABEL_16;
                  }
                  continue;
                }
                swift_bridgeObjectRelease();
              }
              break;
            }
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_25;
          }
        }
        else
        {
          v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain();
          if (v6)
            goto LABEL_21;
        }
        swift_bridgeObjectRelease();
LABEL_16:
        sub_23482B104(0, &qword_2542588E8);
        v21 = (void *)sub_23486F8D8();
        swift_bridgeObjectRelease();
        v2 = v50;
        v11 = (char *)sub_23486F74C();
        objc_msgSend(v14, sel_setEntities_forConfiguration_, v21, v11);
        swift_release();

        v6 = v49;
      }
      ++v20;
      sub_23482B0C8(v9);
    }
    while (v20 != v53);
    v11 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      sub_23482B084((uint64_t)&v52[v9 * v51], v6);
      v54 = MEMORY[0x24BEE4AF8];
      v33 = *(_QWORD *)(v6 + *(int *)(v2 + 40));
      if (!v33)
        goto LABEL_41;
      v2 = *(_QWORD *)(v33 + 64);
      if (!((unint64_t)v2 >> 62))
      {
        v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        swift_bridgeObjectRetain();
        if (v6)
          break;
        goto LABEL_40;
      }
      v11 = v2 < 0 ? *(char **)(v33 + 64) : (char *)(v2 & 0xFFFFFFFFFFFFFF8);
      swift_retain();
      swift_bridgeObjectRetain();
      v6 = sub_23487001C();
      if (v6)
        break;
LABEL_40:
      swift_bridgeObjectRelease();
      sub_23482B104(0, &qword_2542588E8);
      v32 = (void *)sub_23486F8D8();
      swift_bridgeObjectRelease();
      v6 = v49;
      v2 = v50;
      v11 = (char *)sub_23486F74C();
      objc_msgSend(v14, sel_setEntities_forConfiguration_, v32, v11);
      swift_release();

LABEL_41:
      ++v9;
      sub_23482B0C8(v6);
      if (v9 == v53)
      {
        swift_bridgeObjectRelease();
LABEL_64:
        swift_beginAccess();
        v43 = v46;
        swift_retain();
        sub_234825F8C((uint64_t)v14, v43);
        swift_endAccess();
        swift_release();
        goto LABEL_65;
      }
    }
    if (v6 >= 1)
    {
      v48 = v33;
      v3 = 0;
      while (1)
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          v34 = MEMORY[0x234945A1C](v3, v2);
        }
        else
        {
          v34 = *(_QWORD *)(v2 + 8 * v3 + 32);
          swift_retain();
        }
        v35 = objc_msgSend(v14, sel_entitiesByName);
        sub_23482B104(0, &qword_2542588E8);
        v36 = sub_23486F62C();

        swift_beginAccess();
        if (*(_QWORD *)(v36 + 16))
        {
          v37 = *(_QWORD *)(v34 + 24);
          v38 = *(_QWORD *)(v34 + 16);
          swift_bridgeObjectRetain();
          v39 = sub_2347CD9BC(v38, v37);
          if ((v40 & 1) != 0)
          {
            v41 = *(id *)(*(_QWORD *)(v36 + 56) + 8 * v39);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v42 = v41;
            MEMORY[0x2349453E0]();
            if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23486F914();
            sub_23486F950();
            sub_23486F8FC();
            swift_release();

            goto LABEL_49;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_release();
LABEL_49:
        if (v6 == ++v3)
          goto LABEL_40;
      }
    }
LABEL_67:
    __break(1u);
LABEL_68:
    swift_once();
  }
  swift_endAccess();
  v15 = *((_QWORD *)v45 + 2);
  if (v15)
  {
    v47 = v9;
    v16 = (uint64_t)&v45[(*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)];
    v53 = v3;
    v17 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23482B084(v16, (uint64_t)v11);
      swift_bridgeObjectRetain();
      sub_23482B0C8((uint64_t)v11);
      v18 = (void *)sub_23486F74C();
      swift_bridgeObjectRelease();
      v19 = objc_msgSend(v14, sel_entitiesForConfiguration_, v18);

      if (!v19)
        break;

      v16 += v17;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
    }
    swift_bridgeObjectRelease();

    v6 = v49;
    v2 = v50;
    v9 = v47;
    v3 = v53;
    goto LABEL_12;
  }
LABEL_65:
  objc_msgSend((id)qword_254258888, sel_unlock);
  return v14;
}

uint64_t sub_2348299C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646F636E65 && a2 == 0xEF6E6F6973726556;
  if (v2 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_234829B40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6A616DLL && a2 == 0xE500000000000000;
  if (v2 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6E696DLL && a2 == 0xE500000000000000 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6863746170 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_234829C7C(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v3 = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = 1;
  *(_OWORD *)(v2 + 5) = *(_OWORD *)a2;
  v2[7] = v4;
  v2[8] = a1;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain_n();
    v5 = sub_23487001C();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v5)
    {
LABEL_3:
      v27 = v2;
      v29 = v3 & 0xC000000000000001;
      v6 = (_QWORD *)MEMORY[0x24BEE4B00];
      v7 = 4;
      v28 = v3;
      while (1)
      {
        v9 = v7 - 4;
        if (v29)
        {
          v10 = MEMORY[0x234945A1C](v7 - 4, v3);
          v11 = v7 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_23;
        }
        else
        {
          v10 = *(_QWORD *)(v3 + 8 * v7);
          swift_retain();
          v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        v30 = v11;
        swift_beginAccess();
        v3 = *(_QWORD *)(v10 + 16);
        v12 = *(_QWORD *)(v10 + 24);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v31 = v6;
        v2 = v6;
        v15 = sub_2347CD9BC(v3, v12);
        v16 = v6[2];
        v17 = (v14 & 1) == 0;
        v18 = v16 + v17;
        if (__OFADD__(v16, v17))
          goto LABEL_24;
        v19 = v14;
        if (v6[3] >= v18)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v6 = v31;
            if ((v14 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            v2 = &v31;
            sub_2347D6B3C();
            v6 = v31;
            if ((v19 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_2347D0A38(v18, isUniquelyReferenced_nonNull_native);
          v2 = v31;
          v20 = sub_2347CD9BC(v3, v12);
          if ((v19 & 1) != (v21 & 1))
          {
            result = sub_234870424();
            __break(1u);
            return result;
          }
          v15 = v20;
          v6 = v31;
          if ((v19 & 1) != 0)
          {
LABEL_4:
            v8 = v6[7];
            swift_release();
            *(_QWORD *)(v8 + 8 * v15) = v10;
            goto LABEL_5;
          }
        }
        v6[(v15 >> 6) + 8] |= 1 << v15;
        v22 = (uint64_t *)(v6[6] + 16 * v15);
        *v22 = v3;
        v22[1] = v12;
        *(_QWORD *)(v6[7] + 8 * v15) = v10;
        v23 = v6[2];
        v24 = __OFADD__(v23, 1);
        v25 = v23 + 1;
        if (v24)
          goto LABEL_25;
        v6[2] = v25;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v7;
        v3 = v28;
        if (v30 == v5)
        {
          swift_bridgeObjectRelease();
          v2 = v27;
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_28:
  v2[9] = v6;
  return (uint64_t)v2;
}

uint64_t sub_234829F10()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_234829F34()
{
  unint64_t result;

  result = qword_256189950;
  if (!qword_256189950)
  {
    result = MEMORY[0x2349465EC](&unk_23487B1A8, &type metadata for Schema.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189950);
  }
  return result;
}

unint64_t sub_234829F78()
{
  unint64_t result;

  result = qword_256189958;
  if (!qword_256189958)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Version, &type metadata for Schema.Version);
    atomic_store(result, (unint64_t *)&qword_256189958);
  }
  return result;
}

unint64_t sub_234829FBC()
{
  unint64_t result;

  result = qword_256189980;
  if (!qword_256189980)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Version, &type metadata for Schema.Version);
    atomic_store(result, (unint64_t *)&qword_256189980);
  }
  return result;
}

uint64_t sub_23482A000(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189960);
    v10 = sub_23482B044(a2, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Entity, a3);
    result = MEMORY[0x2349465EC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Schema()
{
  return objc_opt_self();
}

unint64_t sub_23482A0A8()
{
  unint64_t result;

  result = qword_2561899B0;
  if (!qword_2561899B0)
  {
    result = MEMORY[0x2349465EC](&unk_23487B158, &type metadata for Schema.Version.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561899B0);
  }
  return result;
}

uint64_t sub_23482A0EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_23482A134()
{
  unint64_t result;

  result = qword_2561899C0;
  if (!qword_2561899C0)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Version, &type metadata for Schema.Version);
    atomic_store(result, (unint64_t *)&qword_2561899C0);
  }
  return result;
}

uint64_t sub_23482A17C(uint64_t a1, uint64_t a2)
{
  return sub_23482B044(&qword_2542588B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for Schema, (uint64_t)&protocol conformance descriptor for Schema);
}

uint64_t initializeBufferWithCopyOfBuffer for MigrationStage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for MigrationStage(uint64_t *a1)
{
  return sub_234797514(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t *initializeWithCopy for MigrationStage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  sub_2347974B8(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return a1;
}

uint64_t *assignWithCopy for MigrationStage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  sub_2347974B8(*a2, v4, v5, v6, v7, v8, v9);
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v15 = a1[4];
  v16 = a1[5];
  v17 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  sub_234797514(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for MigrationStage(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v10;
  v11 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v11;
  sub_234797514(v3, v5, v4, v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MigrationStage(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0xFFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = (((v3 >> 36) >> 27) & 0xF0000001 | (2
                                                       * ((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7 | (*(_QWORD *)(a1 + 8) >> 50) & 0x3C00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) & 0x3FFF | (*(_QWORD *)(a1 + 16) >> 43) & 0x1E0000 | ((*(_QWORD *)(a1 + 16) & 7) << 14) & 0x7FFFFFF | (v3 >> 36) & 0x7000000 | ((v3 & 7) << 21) & 0x7FFFFFF))) ^ 0xFFFFFFF;
  if (v4 >= 0xFFFFFFE)
    v4 = -1;
  return v4 + 1;
}

uint64_t storeEnumTagSinglePayload for MigrationStage(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;
  uint64x2_t v4;

  if (a2 > 0xFFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0xFFFFFFF;
    if (a3 >= 0xFFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 1) & 0x7FFFFFF) - (a2 << 27);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      v4 = (uint64x2_t)vdupq_n_s64(v3);
      *(int8x16_t *)(result + 8) = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_23487ACD0), (int8x16_t)vdupq_n_s64(7uLL)), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_23487ACE0), (int8x16_t)vdupq_n_s64(0xF000000000000000)));
      *(_QWORD *)(result + 24) = ((v3 >> 21) | (v3 << 36)) & 0xF000000000000007;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
    }
  }
  return result;
}

uint64_t sub_23482A4D0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24) >> 63;
}

uint64_t sub_23482A4DC(uint64_t result)
{
  *(_QWORD *)(result + 24) &= ~0x8000000000000000;
  return result;
}

int8x16_t sub_23482A4EC(int8x16_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int8x16_t result;

  v2 = a1[1].i64[0] & 0xFFFFFFFFFFFFFF8;
  v3 = a1[1].i64[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  result = vandq_s8(*a1, (int8x16_t)vdupq_n_s64(0xFFFFFFFFFFFFFF8uLL));
  *a1 = result;
  a1[1].i64[0] = v2;
  a1[1].i64[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for MigrationStage()
{
  return &type metadata for MigrationStage;
}

uint64_t dispatch thunk of static VersionedSchema.models.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static VersionedSchema.versionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static SchemaMigrationPlan.stages.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for Schema()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Schema.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Schema.__allocating_init(_:version:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Schema.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t getEnumTagSinglePayload for Schema.Version(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Schema.Version(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Schema.Version()
{
  return &type metadata for Schema.Version;
}

uint64_t destroy for Schema.PropertyMetadata(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_release();
  if (*(_QWORD *)(a1 + 48))
    result = __swift_destroy_boxed_opaque_existential_1Tm_5(a1 + 24);
  if (*(_QWORD *)(a1 + 80))
    return __swift_destroy_boxed_opaque_existential_1Tm_5(a1 + 56);
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm_5(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t initializeWithCopy for Schema.PropertyMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6)
  {
    *(_QWORD *)(a1 + 48) = v6;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v6 - 8))(a1 + 24, v5, v6);
  }
  else
  {
    v7 = v5[1];
    *(_OWORD *)(a1 + 24) = *v5;
    *(_OWORD *)(a1 + 40) = v7;
  }
  v8 = (_OWORD *)(a1 + 56);
  v9 = (_OWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 80);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v10;
    *(_QWORD *)(a1 + 88) = v11;
    (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 72);
    *v8 = *v9;
    *(_OWORD *)(a1 + 72) = v12;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  }
  return a1;
}

uint64_t assignWithCopy for Schema.PropertyMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm_5(a1 + 24);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 48) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
LABEL_8:
  v6 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 56, a2 + 56);
      return a1;
    }
LABEL_14:
    v7 = *(_OWORD *)(a2 + 56);
    v8 = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v7;
    *(_OWORD *)(a1 + 72) = v8;
    return a1;
  }
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1Tm_5(a1 + 56);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for Schema.PropertyMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1Tm_5(a1 + 24);
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  if (*(_QWORD *)(a1 + 80))
    __swift_destroy_boxed_opaque_existential_1Tm_5(a1 + 56);
  v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for Schema.PropertyMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Schema.PropertyMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Schema.PropertyMetadata()
{
  return &type metadata for Schema.PropertyMetadata;
}

ValueMetadata *type metadata accessor for Schema.Version.CodingKeys()
{
  return &type metadata for Schema.Version.CodingKeys;
}

uint64_t _s9SwiftData6SchemaC7VersionV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9SwiftData6SchemaC7VersionV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23482ABE8 + 4 * byte_23487ACF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23482AC1C + 4 * byte_23487ACF0[v4]))();
}

uint64_t sub_23482AC1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23482AC24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23482AC2CLL);
  return result;
}

uint64_t sub_23482AC38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23482AC40);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23482AC44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23482AC4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23482AC58(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23482AC64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Schema.CodingKeys()
{
  return &type metadata for Schema.CodingKeys;
}

_QWORD *initializeBufferWithCopyOfBuffer for Schema.SchemaError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Schema.SchemaError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for Schema.SchemaError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Schema.SchemaError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Schema.SchemaError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Schema.SchemaError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23482ADA4()
{
  return 0;
}

ValueMetadata *type metadata accessor for Schema.SchemaError()
{
  return &type metadata for Schema.SchemaError;
}

unint64_t sub_23482ADC8()
{
  unint64_t result;

  result = qword_2561899C8;
  if (!qword_2561899C8)
  {
    result = MEMORY[0x2349465EC](&unk_23487B078, &type metadata for Schema.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561899C8);
  }
  return result;
}

unint64_t sub_23482AE10()
{
  unint64_t result;

  result = qword_2561899D0;
  if (!qword_2561899D0)
  {
    result = MEMORY[0x2349465EC](&unk_23487B130, &type metadata for Schema.Version.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561899D0);
  }
  return result;
}

unint64_t sub_23482AE58()
{
  unint64_t result;

  result = qword_2561899D8;
  if (!qword_2561899D8)
  {
    result = MEMORY[0x2349465EC](&unk_23487B0A0, &type metadata for Schema.Version.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561899D8);
  }
  return result;
}

unint64_t sub_23482AEA0()
{
  unint64_t result;

  result = qword_2561899E0;
  if (!qword_2561899E0)
  {
    result = MEMORY[0x2349465EC](&unk_23487B0C8, &type metadata for Schema.Version.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561899E0);
  }
  return result;
}

unint64_t sub_23482AEE8()
{
  unint64_t result;

  result = qword_2561899E8;
  if (!qword_2561899E8)
  {
    result = MEMORY[0x2349465EC](&unk_23487AFE8, &type metadata for Schema.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561899E8);
  }
  return result;
}

unint64_t sub_23482AF30()
{
  unint64_t result;

  result = qword_2561899F0;
  if (!qword_2561899F0)
  {
    result = MEMORY[0x2349465EC](&unk_23487B010, &type metadata for Schema.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561899F0);
  }
  return result;
}

uint64_t sub_23482AF78()
{
  return swift_release();
}

uint64_t sub_23482AF80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23482AFC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23482B000(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23482B044(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2349465EC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23482B084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModelConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23482B0C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModelConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23482B104(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23482B13C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for Schema.VersionedSchemaTypeKey()
{
  return &type metadata for Schema.VersionedSchemaTypeKey;
}

uint64_t _s9SwiftData6SchemaC22VersionedSchemaTypeKeyVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23482B1E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Schema.ModelTypeKey()
{
  return &type metadata for Schema.ModelTypeKey;
}

unint64_t sub_23482B238()
{
  unint64_t result;

  result = qword_254258760;
  if (!qword_254258760)
  {
    result = MEMORY[0x2349465EC](&unk_23487B284, &type metadata for Schema.ModelTypeKey);
    atomic_store(result, (unint64_t *)&qword_254258760);
  }
  return result;
}

unint64_t sub_23482B280()
{
  unint64_t result;

  result = qword_256189A00;
  if (!qword_256189A00)
  {
    result = MEMORY[0x2349465EC](&unk_23487B2EC, &type metadata for Schema.VersionedSchemaTypeKey);
    atomic_store(result, (unint64_t *)&qword_256189A00);
  }
  return result;
}

id sub_23482B2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  int *Descriptor;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[7];

  v69 = a2;
  v7 = sub_23486F158();
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v66 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_23486F35C();
  v65 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v71 = (char *)&v64 - v9;
  v81[6] = a3;
  v10 = sub_23486F4DC();
  v11 = sub_23486FCBC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v64 - v14;
  v16 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v70 = (char *)&v64 - v17;
  v74 = a3;
  v75 = a4;
  sub_23481063C();
  v18 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v19 = (void *)sub_23486F74C();
  v20 = a1;
  swift_bridgeObjectRelease();
  v77 = objc_msgSend(v18, sel_initWithEntityName_, v19);

  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  v72 = v16;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  else
  {
    v64 = a1;
    v22 = v70;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v70, v15, v10);
    v23 = v71;
    v81[3] = (uint64_t)v71;
    sub_23486F4D0();
    v24 = v66;
    sub_23486F350();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258398);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542581A0);
    v26 = *(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80);
    v27 = (v26 + 32) & ~v26;
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_234877ED0;
    v29 = v28 + v27 + *(int *)(v25 + 48);
    v31 = v67;
    v30 = v68;
    (*(void (**)(void))(v67 + 16))();
    v32 = (void *)objc_opt_self();
    v33 = v69;
    swift_retain();
    v34 = objc_msgSend(v32, sel_expressionForEvaluatedObject);
    *(_OWORD *)(v29 + 8) = 0u;
    *(_OWORD *)(v29 + 24) = 0u;
    *(_OWORD *)(v29 + 40) = 0u;
    *(_QWORD *)(v29 + 56) = 0;
    *(_QWORD *)v29 = v34;
    v35 = sub_2347EB918(v28);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v30);
    v81[0] = 1;
    v81[1] = v35;
    v81[2] = v33;
    sub_23486F4B8();
    v36 = v79;
    v37 = v80;
    __swift_project_boxed_opaque_existential_0Tm(v78, v79);
    v38 = v76;
    v39 = sub_23482BD48(v81, v36, *(_QWORD *)(v37 + 8));
    if (v38)
    {
      v40 = v77;

      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v22, v10);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v78);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v23, v73);
      return v40;
    }
    v41 = v39;
    v76 = 0;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v78);
    objc_msgSend(v77, sel_setPredicate_, v41);

    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v22, v10);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v23, v73);
    v20 = v64;
  }
  v43 = v74;
  v42 = v75;
  Descriptor = (int *)type metadata accessor for FetchDescriptor(0, v74, v75, v21);
  v78[0] = *(_QWORD *)(v20 + Descriptor[9]);
  MEMORY[0x24BDAC7A8](Descriptor);
  *(&v64 - 2) = v43;
  *(&v64 - 1) = v42;
  sub_23486F0B0();
  v45 = sub_23486F98C();
  v46 = sub_2348394CC(0, &qword_2542580C0);
  swift_bridgeObjectRetain();
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258120);
  v48 = MEMORY[0x2349465EC](MEMORY[0x24BEE12E0], v45);
  v49 = v76;
  sub_2347C86C8((void (*)(char *, char *))sub_2348394B0, (uint64_t)(&v64 - 4), v45, v46, v47, v48, MEMORY[0x24BEE3F20], (uint64_t)v81);
  if (v49)
  {
    v40 = v77;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v50 = (void *)sub_23486F8D8();
    swift_bridgeObjectRelease();
    v51 = v77;
    objc_msgSend(v77, sel_setSortDescriptors_, v50);

    v53 = v20 + Descriptor[10];
    if ((*(_BYTE *)(v53 + 8) & 1) == 0)
      v52 = objc_msgSend(v51, sel_setFetchLimit_, *(_QWORD *)v53);
    v54 = v20 + Descriptor[11];
    if ((*(_BYTE *)(v54 + 8) & 1) == 0)
      v52 = objc_msgSend(v51, sel_setFetchOffset_, *(_QWORD *)v54);
    v78[0] = *(_QWORD *)(v20 + Descriptor[13]);
    MEMORY[0x24BDAC7A8](v52);
    v55 = v75;
    *(&v64 - 2) = v74;
    *(&v64 - 1) = v55;
    sub_23486FF2C();
    v56 = sub_23486F98C();
    swift_bridgeObjectRetain();
    v57 = MEMORY[0x2349465EC](MEMORY[0x24BEE12E0], v56);
    v58 = sub_2347C86C8((void (*)(char *, char *))sub_234839504, (uint64_t)(&v64 - 4), v56, MEMORY[0x24BEE0D00], v47, v57, MEMORY[0x24BEE3F20], (uint64_t)v81);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v58 + 16))
    {
      sub_2347ECB78(v58);
      swift_bridgeObjectRelease();
      v59 = (void *)sub_23486F8D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v77, sel_setPropertiesToFetch_, v59);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v78[0] = *(_QWORD *)(v20 + Descriptor[14]);
    MEMORY[0x24BDAC7A8](v78[0]);
    v60 = v75;
    *(&v64 - 2) = v74;
    *(&v64 - 1) = v60;
    swift_bridgeObjectRetain();
    v62 = sub_2347C86C8((void (*)(char *, char *))sub_23483A274, (uint64_t)(&v64 - 4), v56, MEMORY[0x24BEE0D00], v47, v57, MEMORY[0x24BEE3F20], (uint64_t)v81);
    swift_bridgeObjectRelease();
    v40 = v77;
    if (*(_QWORD *)(v62 + 16))
    {
      v63 = (void *)sub_23486F8D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v40, sel_setRelationshipKeyPathsForPrefetching_, v63);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v40, sel_setIncludesPendingChanges_, *(unsigned __int8 *)(v20 + Descriptor[12]));
  }
  return v40;
}

id sub_23482BAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[6];

  v25 = a2;
  v24[1] = a1;
  v4 = sub_23486F158();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23486F35C();
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - v9;
  v30[5] = (uint64_t)v24 - v9;
  v30[3] = a3;
  sub_23486F4DC();
  sub_23486F4D0();
  sub_23486F350();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258398);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542581A0);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_234877ED0;
  v15 = v14 + v13 + *(int *)(v11 + 48);
  (*(void (**)(void))(v5 + 16))();
  v16 = (void *)objc_opt_self();
  v17 = v25;
  swift_retain();
  v18 = objc_msgSend(v16, sel_expressionForEvaluatedObject);
  *(_OWORD *)(v15 + 8) = 0u;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  *(_QWORD *)(v15 + 56) = 0;
  *(_QWORD *)v15 = v18;
  v19 = sub_2347EB918(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v30[0] = 1;
  v30[1] = v19;
  v30[2] = v17;
  sub_23486F4B8();
  v20 = v28;
  v21 = v29;
  __swift_project_boxed_opaque_existential_0Tm(v27, v28);
  v22 = sub_23482BD48(v30, v20, *(_QWORD *)(v21 + 8));
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return v22;
}

id sub_23482BD48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  char v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;

  v4 = sub_23482CAF4(a1, a2, a3);
  v6 = v4;
  if (!v3 && (v5 & 1) == 0)
  {
    v7 = v4;
    v8 = sub_23487040C();
    v9 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v8);
    swift_unknownObjectRelease();
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v7, v9, 0, 4, 0);

  }
  return v6;
}

uint64_t FetchDescriptor.init(predicate:sortBy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  int *Descriptor;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v10 = sub_23486F4DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a5, 1, 1, v10);
  Descriptor = (int *)type metadata accessor for FetchDescriptor(0, a3, a4, v11);
  v13 = a5 + Descriptor[10];
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = a5 + Descriptor[11];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = sub_23486FCBC();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(a5, a1, v15);
  *(_QWORD *)(a5 + Descriptor[9]) = a2;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 0;
  *(_BYTE *)(a5 + Descriptor[12]) = 1;
  sub_23486FF2C();
  *(_QWORD *)(a5 + Descriptor[13]) = sub_23486F92C();
  v17 = sub_23486F92C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  *(_QWORD *)(a5 + Descriptor[14]) = v17;
  *(_BYTE *)(a5 + Descriptor[15]) = 0;
  return result;
}

uint64_t type metadata accessor for FetchDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchDescriptor);
}

uint64_t FetchDescriptor.predicate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_23486F4DC();
  v3 = sub_23486FCBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FetchDescriptor.predicate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23486F4DC();
  v3 = sub_23486FCBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FetchDescriptor.predicate.modify())()
{
  return nullsub_26;
}

uint64_t FetchDescriptor.sortBy.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchDescriptor.sortBy.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FetchDescriptor.sortBy.modify())()
{
  return nullsub_27;
}

uint64_t FetchDescriptor.fetchLimit.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t FetchDescriptor.fetchLimit.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(a3 + 40);
  *(_QWORD *)v4 = result;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*FetchDescriptor.fetchLimit.modify())()
{
  return nullsub_28;
}

uint64_t FetchDescriptor.fetchOffset.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 44));
}

uint64_t FetchDescriptor.fetchOffset.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(a3 + 44);
  *(_QWORD *)v4 = result;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*FetchDescriptor.fetchOffset.modify())()
{
  return nullsub_29;
}

uint64_t FetchDescriptor.includePendingChanges.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t FetchDescriptor.includePendingChanges.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 48)) = result;
  return result;
}

uint64_t (*FetchDescriptor.includePendingChanges.modify())()
{
  return nullsub_30;
}

uint64_t FetchDescriptor.propertiesToFetch.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchDescriptor.propertiesToFetch.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FetchDescriptor.propertiesToFetch.modify())()
{
  return nullsub_31;
}

uint64_t FetchDescriptor.relationshipKeyPathsForPrefetching.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchDescriptor.relationshipKeyPathsForPrefetching.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 56);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FetchDescriptor.relationshipKeyPathsForPrefetching.modify())()
{
  return nullsub_32;
}

uint64_t FetchDescriptor.returnModelsAsFutures.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 60));
}

uint64_t FetchDescriptor.returnModelsAsFutures.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 60)) = result;
  return result;
}

uint64_t (*FetchDescriptor.returnModelsAsFutures.modify())()
{
  return nullsub_33;
}

uint64_t sub_23482C248@<X0>(uint64_t a1@<X2>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;

  v7 = sub_23486F0B0();
  result = sub_23482C2B0(v7, a1);
  if (v3)
    *a2 = v3;
  else
    *a3 = result;
  return result;
}

uint64_t sub_23482C2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  char **v31;
  char v32;
  char v33;
  id v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542574A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23486F740();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v44 = (char *)&v38 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v38 - v15;
  v17 = sub_23486F0A4();
  if (!v17)
  {
    sub_234785044();
    swift_allocError();
    *(_BYTE *)v23 = 4;
    *(_QWORD *)(v23 + 8) = 0;
    *(_QWORD *)(v23 + 16) = 0;
    swift_willThrow();
    return a2;
  }
  v42 = v8;
  v43 = v16;
  v18 = *(_QWORD *)(a1 + 16);
  v19 = a1;
  v20 = v17;
  v21 = sub_2347DFE10(v17, v18, a2);
  if (!v2)
  {
    v40 = v20;
    v41 = v19;
    v24 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0)
      v24 = v21 & 0xFFFFFFFFFFFFLL;
    if (v24)
    {
      v38 = v21;
      v39 = v22;
    }
    else
    {
      swift_bridgeObjectRelease();
      v38 = 0x44497463656A626FLL;
      v39 = 0xE800000000000000;
    }
    v26 = v42;
    v25 = v43;
    sub_23486F080();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v26) == 1)
    {
      sub_234839520((uint64_t)v7, &qword_2542574A8);
      v27 = 0;
LABEL_18:
      sub_23486F08C();
      v33 = sub_23486F4F4();
      v34 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
      v35 = (void *)sub_23486F74C();
      swift_bridgeObjectRelease();
      a2 = (uint64_t)objc_msgSend(v34, sel_initWithKey_ascending_selector_, v35, v33 & 1, v27, v38, v39, v40, v41);
      swift_release();

      return a2;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v25, v7, v26);
    v28 = v44;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v44, v25, v26);
    sub_23486F728();
    sub_23483955C();
    v29 = sub_23486F710();
    v30 = *(void (**)(char *, uint64_t))(v9 + 8);
    v30(v12, v26);
    if ((v29 & 1) != 0)
    {
      v31 = &selRef_compare_;
    }
    else
    {
      sub_23486F734();
      v32 = sub_23486F710();
      v30(v12, v26);
      if ((v32 & 1) == 0)
      {
        sub_23486F71C();
        a2 = sub_23486F710();
        v30(v12, v26);
        v30(v28, v26);
        if ((a2 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_234785044();
          swift_allocError();
          *(_BYTE *)v37 = 4;
          *(_QWORD *)(v37 + 8) = 0;
          *(_QWORD *)(v37 + 16) = 0;
          swift_willThrow();
          swift_release();
          v30(v43, v26);
          return a2;
        }
        v31 = &selRef_localizedStandardCompare_;
        goto LABEL_17;
      }
      v31 = &selRef_localizedCompare_;
    }
    v30(v28, v26);
LABEL_17:
    v27 = *v31;
    v30(v43, v26);
    goto LABEL_18;
  }
  swift_release();
  return a2;
}

uint64_t sub_23482C690@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = v5;
  result = sub_2347DFE10(*a1, a2, a3);
  if (v5)
    goto LABEL_2;
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = result & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_234785044();
    v7 = swift_allocError();
    *(_BYTE *)v12 = 2;
    *(_QWORD *)(v12 + 8) = 0;
    *(_QWORD *)(v12 + 16) = 0;
    result = swift_willThrow();
LABEL_2:
    *a4 = v7;
    return result;
  }
  *a5 = result;
  a5[1] = v10;
  return result;
}

uint64_t sub_23482C734(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_23486F158();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0x5F6C61636F6C5F24;
  *(_QWORD *)&v14 = 0xE800000000000000;
  v18 = *v1;
  v7 = v18;
  sub_2348702B0();
  sub_23486F7DC();
  result = swift_bridgeObjectRelease();
  if (v7 == -1)
  {
    __break(1u);
  }
  else
  {
    v9 = v13;
    *v1 = v7 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    swift_bridgeObjectRetain();
    v10 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_expressionForVariable_, v10);

    v17 = 0;
    v15 = 0u;
    v16 = 0u;
    v14 = 0u;
    v13 = (uint64_t)v11;
    sub_2347C6AC8(&v13, (uint64_t)v6);
    return v9;
  }
  return result;
}

id sub_23482C898()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id result;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  if (objc_msgSend(v0, sel_expressionType) == (id)1)
  {
    swift_bridgeObjectRetain();
    v2 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v2);
LABEL_3:
    v4 = v3;

    return v4;
  }
  if (objc_msgSend(v0, sel_expressionType) == (id)3)
  {
    v6 = objc_msgSend(v0, sel_keyPath);
    v7 = sub_23486F770();
    v9 = v8;

    v22 = v7;
    v23 = v9;
    *(_QWORD *)&v20 = 64;
    *((_QWORD *)&v20 + 1) = 0xE100000000000000;
    sub_234785000();
    LOBYTE(v6) = sub_23486FD28();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      v16 = objc_msgSend(v1, sel_keyPath, v20);
      v17 = sub_23486F770();
      v19 = v18;

      v22 = v17;
      v23 = v19;
      sub_23486F7DC();
      sub_23486F7DC();
      v2 = (void *)sub_23486F74C();
      swift_bridgeObjectRelease();
      v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v2);
      goto LABEL_3;
    }
  }
  v10 = sub_2348394CC(0, &qword_256189A10);
  v24 = v10;
  v22 = (uint64_t)v1;
  v11 = (void *)objc_opt_self();
  v12 = v1;
  v13 = (void *)sub_23486F74C();
  v14 = objc_msgSend(v11, sel__newKeyPathExpressionForString_, v13);

  if (v14)
  {
    *((_QWORD *)&v21 + 1) = v10;
    *(_QWORD *)&v20 = v14;
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  v15 = objc_allocWithZone(MEMORY[0x24BDD1610]);
  result = sub_234837BB8(&v22, &v20);
  if (!result)
    __break(1u);
  return result;
}

id sub_23482CAF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t *boxed_opaque_existential_0Tm;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  __int128 v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59[4];
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;

  v4 = v3;
  v8 = sub_23486F0C8();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v53 = sub_23486FCBC();
  v52 = *(_QWORD *)(v53 - 8);
  v12 = MEMORY[0x24BDAC7A8](v53);
  v14 = (char *)&v49 - v13;
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = MEMORY[0x24BDAC7A8](v12);
  v18 = (char *)&v49 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v54 = v4;
  v22(v20, v4, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258428);
  v23 = swift_dynamicCast();
  v51 = a1;
  if (v23)
  {
    v49 = v18;
    v50 = v15;
    sub_23483942C(&v60, (uint64_t)&v63);
    v25 = v64;
    v24 = v65;
    __swift_project_boxed_opaque_existential_0Tm(&v63, v64);
    v26 = v58;
    v27 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v24 + 16))(a1, v25, v24);
    if (!v26)
    {
      v28 = (id)v27;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v63);
      return v28;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v63);
    v28 = 0;
    v29 = v26;
    v15 = v50;
    v18 = v49;
  }
  else
  {
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
    sub_234839520((uint64_t)&v60, &qword_256189A08);
    v29 = 0;
    v28 = v58;
  }
  sub_23486F0D4();
  sub_23486F0E0();
  if (v28)
  {

    (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v57);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v53);
    if (v29)
    {
LABEL_7:
      swift_willThrow();
      return v28;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v14, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v14, AssociatedTypeWitness);
    v59[3] = AssociatedTypeWitness;
    boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm(v59);
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_0Tm, v18, AssociatedTypeWitness);
    sub_23482D0CC(v59, *v51, v51[1], v51[2], &v60);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v59);
    if (*((_QWORD *)&v61 + 1))
    {
      sub_234797294(&v60, &v63);
      __swift_project_boxed_opaque_existential_0Tm(&v63, v64);
      v39 = sub_2348702D4();
      v28 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v39);
      swift_unknownObjectRelease();

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v63);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
      return v28;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
    sub_234839520((uint64_t)&v60, &qword_254258968);
    if (v29)
      goto LABEL_7;
  }
  v31 = sub_23487055C();
  v33 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0)
    v33 = v31 & 0xFFFFFFFFFFFFLL;
  if (v33)
  {
    v34 = 4 * v33;
    while (1)
    {
      swift_bridgeObjectRetain();
      v35 = sub_23486F818();
      v37 = v36;
      swift_bridgeObjectRelease();
      if (v35 == 60 && v37 == 0xE100000000000000)
        break;
      v38 = sub_2348702E0();
      swift_bridgeObjectRelease();
      if ((v38 & 1) != 0 || v34 == (unint64_t)sub_23486F7C4() >> 14)
        goto LABEL_24;
    }
    swift_bridgeObjectRelease();
  }
LABEL_24:
  v40 = sub_23486F824();
  v42 = v41;
  v44 = v43;
  v28 = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v63 = 0;
  *((_QWORD *)&v63 + 1) = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  MEMORY[0x2349452B4](v40, v42, v44, v28);
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  v46 = v63;
  sub_234785044();
  swift_allocError();
  *(_BYTE *)v47 = 1;
  *(_OWORD *)(v47 + 8) = v46;
  swift_willThrow();

  return v28;
}

void sub_23482D0CC(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *boxed_opaque_existential_0Tm;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  _QWORD *v78;
  uint64_t v79[3];
  uint64_t v80;
  _QWORD v81[3];
  uint64_t v82;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85[3];
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  char v90[8];
  uint64_t v91;

  v70 = a4;
  v69 = a3;
  v68 = a2;
  v7 = type metadata accessor for PersistentIdentifier.ID(0);
  MEMORY[0x24BDAC7A8](v7);
  v72 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for PersistentIdentifier(0);
  v9 = MEMORY[0x24BDAC7A8](v71);
  v73 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v74 = (uint64_t)&v66 - v11;
  v76 = sub_23486F440();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23486F488();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23486F4AC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = a1;
  sub_234785C80((uint64_t)a1, (uint64_t)v90);
  sub_234785C80((uint64_t)v90, (uint64_t)v85);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
  swift_dynamicCast();
  if (!v89)
  {
    *a5 = 0u;
    a5[1] = 0u;
LABEL_50:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v90);
    return;
  }
  v77 = a5;
  sub_234839520((uint64_t)&v88, &qword_254258968);
  type metadata accessor for ComparisonResult(0);
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  type metadata accessor for Decimal(0);
  if ((swift_dynamicCast() & 1) != 0 || (swift_dynamicCast() & 1) != 0 || (swift_dynamicCast() & 1) != 0)
    goto LABEL_25;
  v22 = MEMORY[0x24BEE0D00];
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
LABEL_25:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v90);
    sub_23482E4BC(v78, (uint64_t)v77);
    return;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    goto LABEL_25;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_25;
  }
  if (swift_dynamicCast())
  {
    sub_2347C6460(v88, *((unint64_t *)&v88 + 1));
    goto LABEL_25;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v13, v76);
    goto LABEL_25;
  }
  if (swift_dynamicCast())
  {
    v23 = v88;
    v24 = v77;
    *((_QWORD *)v77 + 3) = v22;
    *v24 = v23;
    goto LABEL_50;
  }
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542575F0);
    if (swift_dynamicCast())
    {
      sub_23483942C(&v88, (uint64_t)v85);
      v32 = v86;
      v33 = v87;
      v34 = __swift_project_boxed_opaque_existential_0Tm(v85, v86);
      v35 = MEMORY[0x24BDAC7A8](v34);
      v36 = v69;
      *(&v66 - 4) = v68;
      *(&v66 - 3) = v36;
      *(&v66 - 2) = v70;
      MEMORY[0x24BDAC7A8](v35);
      *(&v66 - 4) = v32;
      *(&v66 - 3) = v33;
      *(&v66 - 2) = (uint64_t)sub_234838CC8;
      *(&v66 - 1) = v37;
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258120);
      v39 = v91;
      v40 = sub_23482DFB0((void (*)(char *, char *))sub_234838CE4, (uint64_t)(&v66 - 6), v32, v67, v38, v33, MEMORY[0x24BEE3F20], (uint64_t)v83);
      if (v39)
        goto LABEL_49;
      v46 = v40;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256188628);
      if (!swift_dynamicCast())
      {
        if (swift_dynamicCast())
        {
          v53 = v88;
          v54 = sub_2348394CC(0, &qword_2561893A0);
          v85[0] = v53;
          v55 = sub_234790F14(v85);
          v56 = (uint64_t *)v77;
          *((_QWORD *)v77 + 3) = v54;
          *v56 = v55;
        }
        else
        {
          *(_QWORD *)&v88 = 0;
          *((_QWORD *)&v88 + 1) = 0xE000000000000000;
          sub_23486FEA8();
          sub_23486F7DC();
          __swift_project_boxed_opaque_existential_0Tm(v78, v78[3]);
          swift_getDynamicType();
          sub_23487055C();
          sub_23486F7DC();
          swift_bridgeObjectRelease();
          sub_23486F7DC();
          v59 = v88;
          sub_234785044();
          swift_allocError();
          *(_BYTE *)v60 = 1;
          *(_OWORD *)(v60 + 8) = v59;
          swift_willThrow();
        }
        goto LABEL_50;
      }
      sub_23483942C(&v88, (uint64_t)v85);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256189360);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_234879D80;
      v47 = v86;
      v48 = v87;
      __swift_project_boxed_opaque_existential_0Tm(v85, v86);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v48 + 8))(v83, v81, v47, v48);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v81);
      v49 = v84;
      v50 = __swift_project_boxed_opaque_existential_0Tm(v83, v84);
      v80 = v49;
      boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm(v79);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(boxed_opaque_existential_0Tm, v50, v49);
      v52 = v91;
      sub_23482D0CC(v79, v68, v69, v70);
      if (v52)
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v79);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v83);
        *(_QWORD *)(v46 + 16) = 0;
        swift_release();
LABEL_49:
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v85);
        goto LABEL_50;
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v79);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v83);
      v61 = v86;
      v62 = v87;
      __swift_project_boxed_opaque_existential_0Tm(v85, v86);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v62 + 8))(v83, v81, v61, v62);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v83);
      v63 = v82;
      v64 = __swift_project_boxed_opaque_existential_0Tm(v81, v82);
      v80 = v63;
      v65 = __swift_allocate_boxed_opaque_existential_0Tm(v79);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v65, v64, v63);
      sub_23482D0CC(v79, v68, v69, v70);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v79);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v81);
    }
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256188758);
    v58 = (uint64_t *)v77;
    *((_QWORD *)v77 + 3) = v57;
    *v58 = v46;
    goto LABEL_49;
  }
  v25 = v73;
  sub_2348107C0(v74, v73);
  v26 = v72;
  sub_234838D04(v25, v72);
  sub_23486F3BC();
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v26, v76);
  LOBYTE(v25) = sub_23486F800();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    v41 = v73;
    v42 = v72;
    sub_234838D04(v73, v72);
    v43 = (uint64_t *)v77;
    v44 = v76;
    *((_QWORD *)v77 + 3) = v76;
    v45 = __swift_allocate_boxed_opaque_existential_0Tm(v43);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v75 + 32))(v45, v42, v44);
    sub_2347EB0B0(v41);
    goto LABEL_50;
  }
  v27 = objc_msgSend(*(id *)(v70 + OBJC_IVAR____TtC9SwiftData12DefaultStore_container), sel_persistentStoreCoordinator);
  v28 = (void *)sub_23486F3E0();
  v29 = objc_msgSend(v27, sel_managedObjectIDForURIRepresentation_, v28);

  if (v29)
  {
    v30 = sub_2348394CC(0, (unint64_t *)&qword_254257600);
    v31 = v77;
    *((_QWORD *)v77 + 3) = v30;
    *(_QWORD *)v31 = v29;
    sub_2347EB0B0(v73);
    goto LABEL_50;
  }
  __break(1u);
}

id sub_23482DD44(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id result;
  char v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  result = sub_23482CAF4(a1, a2, a3);
  if (!v3 && (v5 & 1) != 0)
  {
    v6 = result;
    v7 = sub_23487040C();
    v8 = (void *)objc_opt_self();
    v9 = objc_msgSend(v8, sel_expressionForConstantValue_, v7);
    swift_unknownObjectRelease();
    v10 = objc_msgSend(v8, sel_expressionForConstantValue_, sub_23487040C());
    swift_unknownObjectRelease();
    v11 = objc_msgSend(v8, sel_expressionForConditional_trueExpression_falseExpression_, v6, v9, v10);

    return v11;
  }
  return result;
}

uint64_t sub_23482DE58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_0Tm;
  uint64_t v9;
  uint64_t *v10;
  void (*v12)(uint64_t *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  a1[3] = v6;
  a1[4] = v7;
  boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm(a1);
  v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v12(boxed_opaque_existential_0Tm, v3, v6);
  v9 = v3 + *(int *)(a3 + 36);
  a2[3] = v6;
  a2[4] = v7;
  v10 = __swift_allocate_boxed_opaque_existential_0Tm(a2);
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v12)(v10, v9, v6);
}

uint64_t sub_23482DEDC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_0Tm;
  uint64_t v13[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13[3] = AssociatedTypeWitness;
  boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_0Tm, a1, AssociatedTypeWitness);
  a2(v13);
  if (v6)
    *a6 = v6;
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
}

uint64_t sub_23482DFB0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_23486FCBC();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_23486F848();
  v57 = sub_23486F614();
  v53 = sub_23486FF5C();
  sub_23486FF38();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_23486F83C();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_23486FCE0();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_23486FF44();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_23486FCE0();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_23486FF44();
      sub_23486FCE0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t sub_23482E4BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29[32];
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE v33[32];

  v4 = sub_23486F440();
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23486F488();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23486F4AC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1;
  sub_234785C80((uint64_t)a1, (uint64_t)v33);
  sub_234785C80((uint64_t)v33, (uint64_t)v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
  swift_dynamicCast();
  if (!v32)
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
  }
  sub_234839520((uint64_t)&v30, &qword_254258968);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
LABEL_10:
    v16 = a2;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
    return sub_234785C80((uint64_t)v28, v16);
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_10;
  }
  v16 = a2;
  if (swift_dynamicCast())
  {
    sub_2347C6460(v30, v31);
    goto LABEL_11;
  }
  v17 = v27;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v17);
    goto LABEL_11;
  }
  v18 = MEMORY[0x24BEE1768];
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_11;
  type metadata accessor for Decimal(0);
  if ((swift_dynamicCast() & 1) != 0 || (swift_dynamicCast() & 1) != 0 || swift_dynamicCast())
    goto LABEL_11;
  type metadata accessor for ComparisonResult(0);
  if (swift_dynamicCast())
  {
    v19 = v30;
    *(_QWORD *)(a2 + 24) = v18;
    *(_QWORD *)a2 = v19;
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
  }
  if (swift_dynamicCast())
  {
    v20 = v30;
    v21 = v31;
    *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE0D00];
    *(_QWORD *)a2 = v20;
    *(_QWORD *)(a2 + 8) = v21;
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
  }
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  __swift_project_boxed_opaque_existential_0Tm(v28, v28[3]);
  swift_getDynamicType();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  v22 = v30;
  v23 = v31;
  sub_234785044();
  swift_allocError();
  *(_BYTE *)v24 = 1;
  *(_QWORD *)(v24 + 8) = v22;
  *(_QWORD *)(v24 + 16) = v23;
  swift_willThrow();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
}

id sub_23482EB24(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12[4];
  __int128 v13;
  uint64_t v14;

  v3 = a2;
  v12[3] = a2[2];
  __swift_allocate_boxed_opaque_existential_0Tm(v12);
  sub_23486F2D8();
  sub_23482D0CC(v12, *a1, a1[1], a1[2], &v13);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  if (!v2)
  {
    v5 = v14;
    if (v14)
    {
      v6 = __swift_project_boxed_opaque_existential_0Tm(&v13, v14);
      v7 = *(_QWORD *)(v5 - 8);
      MEMORY[0x24BDAC7A8](v6);
      v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      v10 = sub_2348702D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v13);
    }
    else
    {
      v10 = 0;
    }
    v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v10);
    swift_unknownObjectRelease();
  }
  return v3;
}

id sub_23482EC70(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_23482EB24(a1, a2);
  if (v2)
    return (id)v4;
  return result;
}

unint64_t sub_23482EC90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t result;
  uint64_t v7;
  char v8;
  id v9;
  id v10[8];

  v2 = sub_23486F158();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23486F350();
  v7 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(v7 + 16))
  {
    result = sub_2347CDDBC((uint64_t)v5);
    if ((v8 & 1) != 0)
    {
      sub_2347DDC90(*(_QWORD *)(v7 + 56) + (result << 6), v10);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v9 = v10[0];
      sub_234838D48((uint64_t)v10);
      return (unint64_t)v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_23482ED78(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v3;

  result = sub_23482EC90(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t sub_23482ED98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_23486F158();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23486F350();
  if (*(_QWORD *)(a1 + 16))
  {
    result = sub_2347CDDBC((uint64_t)v7);
    if ((v9 & 1) != 0)
    {
      sub_2347DDC90(*(_QWORD *)(a1 + 56) + (result << 6), &v10);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_2348392D0((uint64_t)&v11, a2, &qword_2542582E0);
      return sub_234838D48((uint64_t)&v10);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23482EE88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23482ED98(a1, a2);
}

uint64_t sub_23482EE9C()
{
  return swift_getKeyPath();
}

uint64_t sub_23482EEC8()
{
  return sub_23482EE9C();
}

uint64_t sub_23482EED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t result;
  int v22;
  unint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _QWORD *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _QWORD *v95;
  _QWORD v96[3];
  _QWORD *v97;
  uint64_t v98;
  unint64_t v99;

  v83 = a3;
  v82 = a2;
  v81 = a1;
  v84 = a5;
  v6 = *(_QWORD *)(a4 + 16);
  MEMORY[0x24BDAC7A8](a1);
  v85 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 32);
  sub_23486F314();
  v86 = sub_23486FCBC();
  v10 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v12 = (char *)&v77 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = AssociatedTypeWitness;
  if (AssociatedTypeWitness == MEMORY[0x24BEE1E08] || AssociatedTypeWitness == MEMORY[0x24BEE0D00])
    v16 = 0x6874676E656CLL;
  else
    v16 = 0x746E756F6340;
  sub_23486F320();
  v17 = v87;
  v18 = sub_23482F968((uint64_t)v12, v16);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v86);
    return swift_bridgeObjectRelease();
  }
  v22 = v20;
  v87 = 0;
  v80 = v6;
  v77 = v14;
  v78 = v18;
  v79 = v19;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v86);
  swift_bridgeObjectRelease();
  v23 = MEMORY[0x24BEE4AF8];
  v24 = v22;
  v25 = v5;
  if ((_BYTE)v22 == 0xFF)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258438);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_23487B370;
    *(_QWORD *)(v26 + 32) = sub_23486F308();
    *(_QWORD *)&v92 = v26;
    sub_23486F8FC();
    v23 = v92;
  }
  sub_23486F2D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258420);
  v27 = v80;
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)&v94 = 0;
    v92 = 0u;
    v93 = 0u;
    sub_234839520((uint64_t)&v92, &qword_256188620);
LABEL_16:
    *((_QWORD *)&v93 + 1) = v27;
    *(_QWORD *)&v94 = v9;
    __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)&v92);
    sub_23486F2D8();
    if (v24 == 0xFF)
    {
      v32 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2561893C8);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_234877ED0;
      v33 = v79;
      *(_QWORD *)(v32 + 32) = v78;
      *(_QWORD *)(v32 + 40) = v33;
      *(_BYTE *)(v32 + 48) = v24;
    }
    v34 = v84;
    result = sub_23483942C(&v92, v84);
    *(_QWORD *)(v34 + 40) = v23;
    *(_QWORD *)(v34 + 48) = v32;
    return result;
  }
  v28 = v25;
  LODWORD(v86) = v22;
  sub_23483942C(&v92, (uint64_t)v96);
  v29 = v97;
  v30 = v98;
  __swift_project_boxed_opaque_existential_0Tm(v96, (uint64_t)v97);
  v31 = v87;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t))(v30 + 8))(&v88, v81, v82, v83, v29, v30);
  v87 = v31;
  if (v31)
  {
    sub_234839444(v78, v79, v86);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v96);
  }
  v24 = v86;
  if (!*((_QWORD *)&v89 + 1))
  {
    sub_234839520((uint64_t)&v88, &qword_2542582E0);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v96);
    v27 = v80;
    goto LABEL_16;
  }
  v35 = v23;
  v92 = v88;
  v93 = v89;
  v94 = v90;
  v95 = v91;
  v36 = *((_QWORD *)&v90 + 1);
  if (*((_QWORD *)&v90 + 1) >> 62)
  {
    swift_bridgeObjectRetain();
    v37 = sub_23487001C();
    if (v37)
    {
LABEL_23:
      v38 = v37 - 1;
      if (__OFSUB__(v37, 1))
      {
        __break(1u);
      }
      else if ((v36 & 0xC000000000000001) == 0)
      {
        if ((v38 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v38 < *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v85 = *(char **)(v36 + 8 * v38 + 32);
          swift_retain();
LABEL_28:
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
        __break(1u);
        goto LABEL_83;
      }
      v85 = (char *)MEMORY[0x234945A1C](v38, v36);
      goto LABEL_28;
    }
  }
  else
  {
    v37 = *(_QWORD *)((*((_QWORD *)&v90 + 1) & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v37)
      goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  v85 = 0;
LABEL_32:
  v39 = v77;
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    v40 = sub_23487001C();
    swift_bridgeObjectRelease();
    v39 = v77;
  }
  else
  {
    v40 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v29 = v95;
  v41 = v95[2];
  if (!v40)
  {
    swift_bridgeObjectRelease();
    if (v41)
    {
      if (v24 != 0xFF)
      {
        sub_234839458((uint64_t)&v92, (uint64_t)&v88);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_23483949C(v78, v79, v24);
        v43 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
LABEL_46:
          v45 = v43[2];
          v44 = v43[3];
          if (v45 >= v44 >> 1)
            v43 = sub_23479E40C((_QWORD *)(v44 > 1), v45 + 1, 1, v43);
          v43[2] = v45 + 1;
          v46 = &v43[3 * v45];
          v47 = v78;
          v48 = v79;
          v46[4] = v78;
          v46[5] = v48;
          v49 = v86;
          *((_BYTE *)v46 + 48) = v86;
          swift_bridgeObjectRelease();
          swift_release();
          sub_234839444(v47, v48, v49);
          sub_234839350((uint64_t)&v92);
          v50 = v84;
          sub_23483942C(&v88, v84);
          *(_QWORD *)(v50 + 40) = v36;
          *(_QWORD *)(v50 + 48) = v43;
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v96);
        }
LABEL_83:
        v43 = sub_23479E40C(0, v29[2] + 1, 1, v29);
        goto LABEL_46;
      }
    }
    else
    {
      if (!v85)
        goto LABEL_40;
      if (v24 != 0xFF)
      {
        sub_234839458((uint64_t)&v92, (uint64_t)&v88);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2561893C8);
        v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = xmmword_234877ED0;
        v52 = v79;
        *(_QWORD *)(v51 + 32) = v78;
        *(_QWORD *)(v51 + 40) = v52;
        *(_BYTE *)(v51 + 48) = v24;
        swift_bridgeObjectRetain();
        swift_release();
        sub_234839350((uint64_t)&v92);
        v53 = v84;
        sub_23483942C(&v88, v84);
        *(_QWORD *)(v53 + 40) = v36;
        *(_QWORD *)(v53 + 48) = v51;
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v96);
      }
    }
    swift_release();
    goto LABEL_41;
  }
  if (!v85)
  {
LABEL_39:
    swift_bridgeObjectRelease();
LABEL_40:
    sub_234839444(v78, v79, v24);
LABEL_41:
    sub_234785044();
    swift_allocError();
    *(_BYTE *)v42 = 2;
    *(_QWORD *)(v42 + 8) = 0;
    *(_QWORD *)(v42 + 16) = 0;
    swift_willThrow();
LABEL_42:
    sub_234839350((uint64_t)&v92);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v96);
  }
  if (v41 || v24 != 0xFF)
  {
    swift_release();
    goto LABEL_39;
  }
  v54 = v39;
  if (swift_conformsToProtocol2())
    v55 = v54;
  else
    v55 = 0;
  if (v55)
  {
    sub_234839458((uint64_t)&v92, (uint64_t)&v88);
    v99 = v36;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23483A48C(v35);
    v56 = v99;
    swift_release_n();
    sub_234839350((uint64_t)&v92);
    v57 = v84;
    sub_23483942C(&v88, v84);
    *(_QWORD *)(v57 + 40) = v56;
    *(_QWORD *)(v57 + 48) = MEMORY[0x24BEE4AF8];
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v96);
  }
  swift_retain();
  sub_23486FD4C();
  v59 = v58;
  v60 = swift_conformsToProtocol2();
  if (v60)
    v61 = v60;
  else
    v61 = 0;
  if (v60)
    v62 = v59;
  else
    v62 = 0;
  if (!v62)
  {
    swift_retain();
LABEL_69:
    if ((v35 & 0xC000000000000001) != 0)
    {
      MEMORY[0x234945A1C](0, v35);
    }
    else
    {
      if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_86;
      }
      swift_retain();
    }
    swift_bridgeObjectRelease();
    sub_23486FD70();
    v63 = sub_234870088();
    swift_release();
    swift_release();
    if (!v63)
    {
      sub_234785044();
      swift_allocError();
      *(_BYTE *)v76 = 2;
      *(_QWORD *)(v76 + 8) = 0;
      *(_QWORD *)(v76 + 16) = 0;
      swift_willThrow();
      swift_release_n();
      goto LABEL_42;
    }
    sub_234839458((uint64_t)&v92, (uint64_t)&v88);
    swift_bridgeObjectRetain();
    sub_234838F80(1, v36);
    v65 = v64;
    v67 = v66;
    v69 = v68;
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
    v99 = MEMORY[0x24BEE4AF8];
    v70 = (v69 >> 1) - v67;
    if (!__OFSUB__(v69 >> 1, v67))
    {
      v71 = v70 + 1;
      if (!__OFADD__(v70, 1))
      {
        swift_retain();
        sub_234838EC4(v71, 0);
        sub_23486F8FC();
        v72 = swift_unknownObjectRetain();
        sub_23483A644(v72, v65, v67, v69);
        v73 = swift_retain();
        MEMORY[0x2349453E0](v73);
        if (*(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_76:
          sub_23486F950();
          sub_23486F8FC();
          v74 = v99;
          swift_release_n();
          swift_unknownObjectRelease();
          swift_release_n();
          sub_234839350((uint64_t)&v92);
          v75 = v84;
          sub_23483942C(&v88, v84);
          *(_QWORD *)(v75 + 40) = v74;
          *(_QWORD *)(v75 + 48) = v28;
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v96);
        }
LABEL_88:
        sub_23486F914();
        goto LABEL_76;
      }
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  (*(void (**)(void))(v61 + 8))();
  sub_23486FD70();
  result = sub_234870088();
  if (result)
  {
    swift_release();
    goto LABEL_69;
  }
  __break(1u);
  return result;
}

uint64_t sub_23482F968(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int v16;
  unint64_t v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v23 = a2;
  v3 = sub_23486F314();
  v4 = sub_23486FCBC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  v10 = MEMORY[0x24BDAC7A8](v6);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v22 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v8, v3);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v3);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v3);
  if (v16 == *MEMORY[0x24BDCD168] || v16 == *MEMORY[0x24BDCD178])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v3);
    swift_bridgeObjectRetain();
    return v23;
  }
  else
  {
    v17 = 0xD000000000000045;
    if (v16 == *MEMORY[0x24BDCD170])
    {
      v18 = "Unsupported Predicate: The Collection.first property is not supported";
    }
    else
    {
      if (v16 != *MEMORY[0x24BDCD180])
      {
        v21 = *(void (**)(char *, uint64_t))(v9 + 8);
        v21(v14, v3);
        v21(v12, v3);
        return 0;
      }
      v17 = 0xD000000000000051;
      v18 = "Unsupported Predicate: The BidirectionalCollection.last property is not supported";
    }
    v19 = (unint64_t)(v18 - 32) | 0x8000000000000000;
    sub_234785044();
    swift_allocError();
    *(_BYTE *)v20 = 2;
    *(_QWORD *)(v20 + 8) = v17;
    *(_QWORD *)(v20 + 16) = v19;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v3);
  }
}

uint64_t sub_23482FC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_23482EED0(a1, a2, a3, a4, a5);
}

uint64_t sub_23482FC18(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  unsigned __int8 v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void *v86;
  id v87;
  void *v88;
  id v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  void *v103;
  id v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  id v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  id v120;
  uint64_t v121;
  id v122;
  id v123;
  id v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  unint64_t v138;
  void *v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  _OWORD v146[2];
  __int128 v147;
  uint64_t v148;
  uint64_t v149;

  result = sub_23482EED0(*a1, a1[1], a1[2], a2, (uint64_t)&v142);
  if (v2)
    return (uint64_t)v3;
  if (*((_QWORD *)&v143 + 1))
  {
    v146[1] = v143;
    v147 = v144;
    v146[0] = v142;
    v148 = v145;
    v6 = *((_QWORD *)&v143 + 1);
    v7 = v144;
    __swift_project_boxed_opaque_existential_0Tm(v146, *((uint64_t *)&v143 + 1));
    v8 = sub_23482DD44(a1, v6, v7);
    v9 = *((_QWORD *)&v147 + 1);
    *(_QWORD *)&v142 = 0;
    *((_QWORD *)&v142 + 1) = 0xE000000000000000;
    if (*((_QWORD *)&v147 + 1) >> 62)
    {
LABEL_17:
      swift_bridgeObjectRetain_n();
      v10 = sub_23487001C();
      v139 = v8;
      if (v10)
        goto LABEL_8;
    }
    else
    {
      v10 = *(_QWORD *)((*((_QWORD *)&v147 + 1) & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      v139 = v8;
      if (v10)
      {
LABEL_8:
        v11 = 4;
        while (1)
        {
          v12 = v11 - 4;
          if ((v9 & 0xC000000000000001) != 0)
          {
            v13 = MEMORY[0x234945A1C](v11 - 4, v9);
            v14 = __OFADD__(v12, 1);
            v15 = v11 - 3;
            if (v14)
              goto LABEL_16;
          }
          else
          {
            v13 = *(_QWORD *)(v9 + 8 * v11);
            swift_retain();
            v14 = __OFADD__(v12, 1);
            v15 = v11 - 3;
            if (v14)
            {
LABEL_16:
              __break(1u);
              goto LABEL_17;
            }
          }
          v149 = v13;
          sub_2348313C0((unint64_t *)&v142, &v149, &v140);
          swift_bridgeObjectRelease();
          swift_release();
          v16 = *((_QWORD *)&v140 + 1);
          v142 = v140;
          ++v11;
          if (v15 == v10)
          {
            v135 = v140;
            goto LABEL_19;
          }
        }
      }
    }
    v135 = 0;
    v16 = 0xE000000000000000;
LABEL_19:
    swift_bridgeObjectRelease_n();
    v17 = *(_QWORD *)(v148 + 16);
    v18 = HIBYTE(v16) & 0xF;
    if (v17)
    {
      v138 = v16;
      if ((v16 & 0x2000000000000000) == 0)
        v18 = v135 & 0xFFFFFFFFFFFFLL;
      v137 = v18;
      v3 = 0;
      v133 = swift_bridgeObjectRetain();
      v19 = (_BYTE *)(v133 + 48);
      v20 = -1;
      v136 = xmmword_234877ED0;
      while (1)
      {
        v23 = *((_QWORD *)v19 - 2);
        v24 = *((_QWORD *)v19 - 1);
        if (*v19)
          break;
        if (v20)
        {
          if (v20 != 255)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_234785044();
            swift_allocError();
            *(_BYTE *)v128 = 2;
            *(_QWORD *)(v128 + 8) = 0;
            *(_QWORD *)(v128 + 16) = 0;
            swift_willThrow();
            sub_2348393E8(v3, v20);

            sub_234839414(v23, v24, 0);
            goto LABEL_4;
          }
          if (v137)
          {
            *(_QWORD *)&v142 = v135;
            *((_QWORD *)&v142 + 1) = v138;
            sub_2348393FC(v23, v24, 0);
            sub_2348393FC(v23, v24, 0);
            swift_bridgeObjectRetain();
            sub_23486F7DC();
            sub_23486F7DC();
            sub_234839414(v23, v24, 0);
            v26 = *((_QWORD *)&v142 + 1);
          }
          else
          {
            sub_2348393FC(*((_QWORD *)v19 - 2), *((_QWORD *)v19 - 1), 0);
            swift_bridgeObjectRetain();
            v26 = v24;
          }
          v48 = v139;
          if (objc_msgSend(v139, sel_expressionType) == (id)1)
          {
            swift_bridgeObjectRetain();
            v49 = (void *)sub_23486F74C();
            swift_bridgeObjectRelease();
            v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v49);
            swift_bridgeObjectRelease();

LABEL_101:
            sub_234839414(v23, v24, 0);
            v20 = 0;
            goto LABEL_25;
          }
          v134 = v26;
          if (objc_msgSend(v48, sel_expressionType) == (id)3)
          {
            v50 = objc_msgSend(v48, sel_keyPath);
            v51 = sub_23486F770();
            v53 = v52;

            *(_QWORD *)&v142 = v51;
            *((_QWORD *)&v142 + 1) = v53;
            sub_23486F7DC();
            sub_23486F7DC();
            v54 = (void *)sub_23486F74C();
            swift_bridgeObjectRelease();
            v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v54);
            swift_bridgeObjectRelease();

            goto LABEL_101;
          }
          v100 = sub_2348394CC(0, &qword_256189A10);
          *((_QWORD *)&v143 + 1) = v100;
          *(_QWORD *)&v142 = v48;
          v101 = (void *)objc_opt_self();
          v102 = v48;
          v103 = (void *)sub_23486F74C();
          v104 = objc_msgSend(v101, sel__newKeyPathExpressionForString_, v103);

          if (v104)
          {
            *((_QWORD *)&v141 + 1) = v100;
            *(_QWORD *)&v140 = v104;
            v105 = *((_QWORD *)&v143 + 1);
            if (*((_QWORD *)&v143 + 1))
              goto LABEL_79;
LABEL_97:
            v132 = 0;
            if (!v100)
              goto LABEL_98;
LABEL_80:
            v110 = __swift_project_boxed_opaque_existential_0Tm(&v140, v100);
            v130 = (uint64_t)&v130;
            v111 = *(_QWORD *)(v100 - 8);
            MEMORY[0x24BDAC7A8](v110);
            v113 = (char *)&v130 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v111 + 16))(v113);
            v114 = sub_2348702D4();
            (*(void (**)(char *, uint64_t))(v111 + 8))(v113, v100);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v140);
          }
          else
          {
            v100 = 0;
            v140 = 0u;
            v141 = 0u;
            v105 = *((_QWORD *)&v143 + 1);
            if (!*((_QWORD *)&v143 + 1))
              goto LABEL_97;
LABEL_79:
            v106 = __swift_project_boxed_opaque_existential_0Tm(&v142, v105);
            v107 = *(_QWORD *)(v105 - 8);
            MEMORY[0x24BDAC7A8](v106);
            v109 = (char *)&v130 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v107 + 16))(v109);
            v132 = (uint64_t *)sub_2348702D4();
            (*(void (**)(char *, uint64_t))(v107 + 8))(v109, v105);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v142);
            v100 = *((_QWORD *)&v141 + 1);
            if (*((_QWORD *)&v141 + 1))
              goto LABEL_80;
LABEL_98:
            v114 = 0;
          }
          v123 = objc_allocWithZone(MEMORY[0x24BDD1610]);
          v3 = objc_msgSend(v123, sel_initWithOperand_andKeyPath_, v132, v114);
          swift_unknownObjectRelease();
          result = swift_unknownObjectRelease();
          if (!v3)
            goto LABEL_118;
          swift_bridgeObjectRelease();
          goto LABEL_101;
        }
        sub_2348393FC(*((_QWORD *)v19 - 2), *((_QWORD *)v19 - 1), 0);
        sub_2348393D4(v3, 0);
        if (objc_msgSend(v3, sel_expressionType) != (id)1)
        {
          if (objc_msgSend(v3, sel_expressionType) == (id)3)
          {
            v29 = objc_msgSend(v3, sel_keyPath);
            v30 = sub_23486F770();
            v32 = v31;

            *(_QWORD *)&v142 = v30;
            *((_QWORD *)&v142 + 1) = v32;
            sub_23486F7DC();
            sub_23486F7DC();
            v33 = (void *)sub_23486F74C();
            swift_bridgeObjectRelease();
            v34 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v33);

            goto LABEL_85;
          }
          v58 = sub_2348394CC(0, &qword_256189A10);
          *((_QWORD *)&v143 + 1) = v58;
          *(_QWORD *)&v142 = v3;
          v59 = (void *)objc_opt_self();
          v60 = v3;
          v61 = (void *)sub_23486F74C();
          v62 = objc_msgSend(v59, sel__newKeyPathExpressionForString_, v61);

          if (v62)
          {
            *((_QWORD *)&v141 + 1) = v58;
            *(_QWORD *)&v140 = v62;
            v63 = *((_QWORD *)&v143 + 1);
            if (*((_QWORD *)&v143 + 1))
              goto LABEL_68;
LABEL_82:
            v134 = 0;
            if (!v58)
              goto LABEL_83;
LABEL_69:
            v68 = __swift_project_boxed_opaque_existential_0Tm(&v140, v58);
            v132 = &v130;
            v69 = *(_QWORD *)(v58 - 8);
            MEMORY[0x24BDAC7A8](v68);
            v71 = (char *)&v130 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v69 + 16))(v71);
            v72 = sub_2348702D4();
            v73 = v71;
            v74 = v72;
            (*(void (**)(char *, uint64_t))(v69 + 8))(v73, v58);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v140);
          }
          else
          {
            v58 = 0;
            v140 = 0u;
            v141 = 0u;
            v63 = *((_QWORD *)&v143 + 1);
            if (!*((_QWORD *)&v143 + 1))
              goto LABEL_82;
LABEL_68:
            v64 = __swift_project_boxed_opaque_existential_0Tm(&v142, v63);
            v132 = &v130;
            v65 = *(_QWORD *)(v63 - 8);
            MEMORY[0x24BDAC7A8](v64);
            v67 = (char *)&v130 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v65 + 16))(v67);
            v134 = sub_2348702D4();
            (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v63);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v142);
            v58 = *((_QWORD *)&v141 + 1);
            if (*((_QWORD *)&v141 + 1))
              goto LABEL_69;
LABEL_83:
            v74 = 0;
          }
          v115 = objc_allocWithZone(MEMORY[0x24BDD1610]);
          v34 = objc_msgSend(v115, sel_initWithOperand_andKeyPath_, v134, v74);
          swift_unknownObjectRelease();
          result = swift_unknownObjectRelease();
          if (!v34)
            goto LABEL_116;
LABEL_85:
          sub_2348393E8(v3, 0);
          sub_2348393E8(v3, 0);
          sub_234839414(v23, v24, 0);
LABEL_65:
          v20 = 0;
          v3 = v34;
          goto LABEL_25;
        }
        swift_bridgeObjectRetain();
        v21 = (void *)sub_23486F74C();
        sub_234839414(v23, v24, 0);
        v22 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v21);

        sub_2348393E8(v3, 0);
        sub_2348393E8(v3, 0);
        sub_234839414(v23, v24, 0);
        v20 = 0;
LABEL_24:
        v3 = v22;
LABEL_25:
        v19 += 24;
        if (!--v17)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      if (*v19 != 1)
      {
        if (v23 | v24)
        {
          if (v20 != 255)
          {
            if (v20)
              goto LABEL_114;
            v27 = v3;
            goto LABEL_64;
          }
        }
        else if (v20 != 255)
        {
          if (v20)
          {
LABEL_114:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_234785044();
            swift_allocError();
            *(_BYTE *)v129 = 2;
            *(_QWORD *)(v129 + 8) = 0;
            *(_QWORD *)(v129 + 16) = 0;
            swift_willThrow();
            sub_2348393E8(v3, v20);

            goto LABEL_4;
          }
          v27 = v3;
          goto LABEL_64;
        }
        v27 = v139;
LABEL_64:
        v55 = sub_2348394CC(0, &qword_256189A10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256189A40);
        v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = v136;
        *(_QWORD *)(v56 + 56) = v55;
        *(_QWORD *)(v56 + 64) = sub_23483937C();
        *(_QWORD *)(v56 + 32) = v27;
        sub_2348393D4(v3, v20);
        v57 = v27;
        v34 = (id)sub_23486FB9C();
        sub_2348393E8(v3, v20);

        goto LABEL_65;
      }
      if (v20)
      {
        if (v20 != 255)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_234785044();
          swift_allocError();
          *(_BYTE *)v127 = 2;
          *(_QWORD *)(v127 + 8) = 0;
          *(_QWORD *)(v127 + 16) = 0;
          swift_willThrow();
          sub_2348393E8(v3, v20);

          sub_234839414(v23, v24, 1u);
          goto LABEL_4;
        }
        if (v137)
        {
          *(_QWORD *)&v142 = v135;
          *((_QWORD *)&v142 + 1) = v138;
          sub_2348393FC(v23, v24, 1u);
          sub_2348393FC(v23, v24, 1u);
          swift_bridgeObjectRetain();
          sub_23486F7DC();
          sub_23486F7DC();
          sub_234839414(v23, v24, 1u);
          v25 = *((_QWORD *)&v142 + 1);
        }
        else
        {
          sub_2348393FC(*((_QWORD *)v19 - 2), *((_QWORD *)v19 - 1), 1u);
          swift_bridgeObjectRetain();
          v25 = v24;
        }
        v40 = v139;
        if (objc_msgSend(v139, sel_expressionType) == (id)1)
        {
          swift_bridgeObjectRetain();
          v41 = (void *)sub_23486F74C();
          swift_bridgeObjectRelease();
          v42 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v41);
          goto LABEL_57;
        }
        v134 = v25;
        if (objc_msgSend(v40, sel_expressionType) == (id)3)
        {
          v43 = objc_msgSend(v40, sel_keyPath);
          v44 = sub_23486F770();
          v46 = v45;

          *(_QWORD *)&v142 = v44;
          *((_QWORD *)&v142 + 1) = v46;
          sub_23486F7DC();
          sub_23486F7DC();
          v41 = (void *)sub_23486F74C();
          swift_bridgeObjectRelease();
          v42 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v41);
LABEL_57:
          v47 = v42;
          swift_bridgeObjectRelease();

LABEL_95:
          *(_QWORD *)&v142 = 0;
          v121 = sub_23487040C();
          v122 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v121);
          swift_unknownObjectRelease();
          v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v47, v122, 0, 4, 0);

          v20 = 1;
          sub_234839414(v23, v24, 1u);
          goto LABEL_25;
        }
        v85 = sub_2348394CC(0, &qword_256189A10);
        *((_QWORD *)&v143 + 1) = v85;
        *(_QWORD *)&v142 = v40;
        v86 = (void *)objc_opt_self();
        v87 = v40;
        v88 = (void *)sub_23486F74C();
        v89 = objc_msgSend(v86, sel__newKeyPathExpressionForString_, v88);

        if (v89)
        {
          *((_QWORD *)&v141 + 1) = v85;
          *(_QWORD *)&v140 = v89;
          v90 = *((_QWORD *)&v143 + 1);
          if (*((_QWORD *)&v143 + 1))
            goto LABEL_75;
LABEL_91:
          v132 = 0;
          if (!v85)
            goto LABEL_92;
LABEL_76:
          v95 = __swift_project_boxed_opaque_existential_0Tm(&v140, v85);
          v130 = (uint64_t)&v130;
          v96 = *(_QWORD *)(v85 - 8);
          MEMORY[0x24BDAC7A8](v95);
          v98 = (char *)&v130 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v96 + 16))(v98);
          v99 = sub_2348702D4();
          (*(void (**)(char *, uint64_t))(v96 + 8))(v98, v85);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v140);
        }
        else
        {
          v85 = 0;
          v140 = 0u;
          v141 = 0u;
          v90 = *((_QWORD *)&v143 + 1);
          if (!*((_QWORD *)&v143 + 1))
            goto LABEL_91;
LABEL_75:
          v91 = __swift_project_boxed_opaque_existential_0Tm(&v142, v90);
          v92 = *(_QWORD *)(v90 - 8);
          MEMORY[0x24BDAC7A8](v91);
          v94 = (char *)&v130 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v92 + 16))(v94);
          v132 = (uint64_t *)sub_2348702D4();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v94, v90);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v142);
          v85 = *((_QWORD *)&v141 + 1);
          if (*((_QWORD *)&v141 + 1))
            goto LABEL_76;
LABEL_92:
          v99 = 0;
        }
        v120 = objc_allocWithZone(MEMORY[0x24BDD1610]);
        v47 = objc_msgSend(v120, sel_initWithOperand_andKeyPath_, v132, v99);
        swift_unknownObjectRelease();
        result = swift_unknownObjectRelease();
        if (!v47)
          goto LABEL_117;
        swift_bridgeObjectRelease();
        goto LABEL_95;
      }
      sub_2348393FC(*((_QWORD *)v19 - 2), *((_QWORD *)v19 - 1), 1u);
      sub_2348393D4(v3, 0);
      if (objc_msgSend(v3, sel_expressionType) == (id)1)
      {
        swift_bridgeObjectRetain();
        v28 = (void *)sub_23486F74C();
        sub_234839414(v23, v24, 1u);
LABEL_51:
        v39 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v28);

LABEL_104:
        *(_QWORD *)&v142 = 0;
        v125 = sub_23487040C();
        v126 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v125);
        swift_unknownObjectRelease();
        v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v39, v126, 0, 4, 0);

        sub_2348393E8(v3, 0);
        sub_2348393E8(v3, 0);
        v20 = 1;
        sub_234839414(v23, v24, 1u);
        goto LABEL_24;
      }
      if (objc_msgSend(v3, sel_expressionType) == (id)3)
      {
        v35 = objc_msgSend(v3, sel_keyPath);
        v36 = sub_23486F770();
        v38 = v37;

        *(_QWORD *)&v142 = v36;
        *((_QWORD *)&v142 + 1) = v38;
        sub_23486F7DC();
        sub_23486F7DC();
        v28 = (void *)sub_23486F74C();
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      v75 = sub_2348394CC(0, &qword_256189A10);
      *((_QWORD *)&v143 + 1) = v75;
      *(_QWORD *)&v142 = v3;
      v76 = (void *)objc_opt_self();
      v77 = v3;
      v78 = (void *)sub_23486F74C();
      v79 = objc_msgSend(v76, sel__newKeyPathExpressionForString_, v78);

      if (v79)
      {
        *((_QWORD *)&v141 + 1) = v75;
        *(_QWORD *)&v140 = v79;
        v80 = *((_QWORD *)&v143 + 1);
        if (*((_QWORD *)&v143 + 1))
        {
LABEL_72:
          v81 = __swift_project_boxed_opaque_existential_0Tm(&v142, v80);
          v132 = &v130;
          v82 = *(_QWORD *)(v80 - 8);
          MEMORY[0x24BDAC7A8](v81);
          v84 = (char *)&v130 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v82 + 16))(v84);
          v134 = sub_2348702D4();
          (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v80);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v142);
          v75 = *((_QWORD *)&v141 + 1);
          goto LABEL_88;
        }
      }
      else
      {
        v75 = 0;
        v140 = 0u;
        v141 = 0u;
        v80 = *((_QWORD *)&v143 + 1);
        if (*((_QWORD *)&v143 + 1))
          goto LABEL_72;
      }
      v134 = 0;
LABEL_88:
      v131 = v23;
      if (v75)
      {
        v116 = __swift_project_boxed_opaque_existential_0Tm(&v140, v75);
        v117 = *(_QWORD *)(v75 - 8);
        MEMORY[0x24BDAC7A8](v116);
        v119 = (char *)&v130 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v117 + 16))(v119);
        v132 = (uint64_t *)sub_2348702D4();
        (*(void (**)(char *, uint64_t))(v117 + 8))(v119, v75);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v140);
      }
      else
      {
        v132 = 0;
      }
      v124 = objc_allocWithZone(MEMORY[0x24BDD1610]);
      v39 = objc_msgSend(v124, sel_initWithOperand_andKeyPath_, v134, v132);
      swift_unknownObjectRelease();
      result = swift_unknownObjectRelease();
      v23 = v131;
      if (!v39)
        goto LABEL_119;
      goto LABEL_104;
    }
    if ((v16 & 0x2000000000000000) == 0)
      v18 = v135 & 0xFFFFFFFFFFFFLL;
    if (v18)
    {
      v3 = sub_2348311DC(v139);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForEvaluatedObject);
    }

LABEL_4:
    sub_234839350((uint64_t)v146);
    return (uint64_t)v3;
  }
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
  return result;
}

id sub_2348311DC(void *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id result;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  __int128 v16;
  __int128 v17;
  _QWORD v18[4];

  if (objc_msgSend(a1, sel_expressionType) == (id)1)
  {
    swift_bridgeObjectRetain();
    v2 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v2);
LABEL_5:
    v8 = v3;

    return v8;
  }
  if (objc_msgSend(a1, sel_expressionType) == (id)3)
  {
    v4 = objc_msgSend(a1, sel_keyPath);
    v5 = sub_23486F770();
    v7 = v6;

    v18[0] = v5;
    v18[1] = v7;
    sub_23486F7DC();
    sub_23486F7DC();
    v2 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v2);
    goto LABEL_5;
  }
  v10 = sub_2348394CC(0, &qword_256189A10);
  v18[3] = v10;
  v18[0] = a1;
  v11 = (void *)objc_opt_self();
  v12 = a1;
  v13 = (void *)sub_23486F74C();
  v14 = objc_msgSend(v11, sel__newKeyPathExpressionForString_, v13);

  if (v14)
  {
    *((_QWORD *)&v17 + 1) = v10;
    *(_QWORD *)&v16 = v14;
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  v15 = objc_allocWithZone(MEMORY[0x24BDD1610]);
  result = sub_234837BB8(v18, &v16);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_2348313C0@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t KeyPath;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;

  v6 = *a1;
  v5 = a1[1];
  v7 = *a2;
  v8 = sub_23486FD4C();
  if (v8 == type metadata accessor for DefaultHistoryTransaction())
  {
    sub_23486FD70();
    KeyPath = swift_getKeyPath();
    v20 = MEMORY[0x234945878](v7, KeyPath);
    result = swift_release();
    if ((v20 & 1) != 0)
    {
      v17 = 0x6E656B6F74;
      v18 = 0xE500000000000000;
      goto LABEL_33;
    }
    v22 = swift_getKeyPath();
    v23 = MEMORY[0x234945878](v7, v22);
    result = swift_release();
    if ((v23 & 1) != 0)
    {
      v17 = 0xD000000000000011;
      v18 = 0x8000000234875AA0;
      goto LABEL_33;
    }
    v24 = swift_getKeyPath();
    v25 = MEMORY[0x234945878](v7, v24);
    result = swift_release();
    if ((v25 & 1) != 0)
    {
      v17 = 0x6D617473656D6974;
      v18 = 0xE900000000000070;
      goto LABEL_33;
    }
    v26 = swift_getKeyPath();
    v27 = MEMORY[0x234945878](v7, v26);
    result = swift_release();
    if ((v27 & 1) != 0)
    {
      v17 = 0x726F68747561;
      v18 = 0xE600000000000000;
      goto LABEL_33;
    }
    v28 = swift_getKeyPath();
    v29 = MEMORY[0x234945878](v7, v28);
    result = swift_release();
    if ((v29 & 1) != 0)
    {
      v17 = 0x4449656C646E7562;
      v18 = 0xE800000000000000;
      goto LABEL_33;
    }
    v30 = swift_getKeyPath();
    v31 = MEMORY[0x234945878](v7, v30);
    result = swift_release();
    if ((v31 & 1) != 0)
    {
      v17 = 0x49737365636F7270;
      v18 = 0xE900000000000044;
      goto LABEL_33;
    }
LABEL_19:
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486FD40();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    sub_234785044();
    swift_allocError();
    *(_BYTE *)v21 = 2;
    *(_QWORD *)(v21 + 8) = 0;
    *(_QWORD *)(v21 + 16) = 0xE000000000000000;
    return swift_willThrow();
  }
  v9 = sub_23486FD4C();
  v10 = swift_conformsToProtocol2();
  if (v10)
    v11 = v10;
  else
    v11 = 0;
  if (v10)
    v12 = v9;
  else
    v12 = 0;
  if (!v12)
    goto LABEL_19;
  result = sub_2347DFE10(v7, v12, v11);
  if (v3)
    return result;
  v15 = v6 & 0xFFFFFFFFFFFFLL;
  if ((v5 & 0x2000000000000000) != 0)
    v15 = HIBYTE(v5) & 0xF;
  v16 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v16 = result & 0xFFFFFFFFFFFFLL;
  if (!v15)
  {
    if (v16)
    {
      *a3 = result;
      a3[1] = v14;
      return result;
    }
    goto LABEL_26;
  }
  if (!v16)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    *a3 = v6;
    a3[1] = v5;
    return swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v17 = v6;
  v18 = v5;
LABEL_33:
  *a3 = v17;
  a3[1] = v18;
  return result;
}

uint64_t sub_2348317E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = sub_23482FC18(a1, a2);
  if (v2)
    return v4;
  return result;
}

uint64_t sub_234831800(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 *v15;
  _OWORD *v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  uint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t *v89;
  void *v90;
  id v91;
  id v92;
  char *v93;
  uint64_t v94;
  void (*v95)(uint64_t, char *, uint64_t);
  uint64_t v96;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v98;
  char v99;
  unint64_t v100;
  uint64_t v101;
  _BOOL8 v102;
  uint64_t v103;
  char v104;
  unint64_t v105;
  char v106;
  _QWORD *v107;
  _OWORD *v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  void *v118;
  id v119;
  uint64_t result;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t *v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t *v142;
  char *v143;
  char *v144;
  unint64_t v145;
  uint64_t *v146;
  unint64_t v147;
  uint64_t *v148;
  void *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  _QWORD *v153;
  _OWORD v154[4];
  id v155;
  char v156;
  uint64_t v157;
  unint64_t v158;

  v142 = a1;
  v141 = sub_23486F158();
  v150 = *(_QWORD *)(v141 - 8);
  v3 = MEMORY[0x24BDAC7A8](v141);
  v151 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v152 = (char *)&v121 - v6;
  v7 = a2[2];
  v8 = 8 * v7;
  v145 = v7;
  v129 = 8 * v7;
  if (v7 == 1)
  {
    v135 = &v121;
    v139 = *(_QWORD *)(a2[4] & 0xFFFFFFFFFFFFFFFELL);
    v126 = *(_QWORD *)(v139 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v144 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_getAssociatedTypeWitness();
    v10 = sub_23486F35C();
  }
  else
  {
    MEMORY[0x24BDAC7A8](v5);
    v11 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
    v12 = (char *)&v121 - v11;
    if (v7)
    {
      v13 = 0;
      v14 = a2[4] & 0xFFFFFFFFFFFFFFFELL;
      if (v7 < 4)
        goto LABEL_9;
      if ((unint64_t)&v12[-v14] < 0x20)
        goto LABEL_9;
      v13 = v7 & 0xFFFFFFFFFFFFFFFCLL;
      v15 = (__int128 *)(v14 + 16);
      v16 = v12 + 16;
      v17 = v7 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v18 = *v15;
        *(v16 - 1) = *(v15 - 1);
        *v16 = v18;
        v15 += 2;
        v16 += 2;
        v17 -= 4;
      }
      while (v17);
      if (v7 != v13)
      {
LABEL_9:
        v19 = v7 - v13;
        v20 = 8 * v13;
        v21 = &v12[8 * v13];
        v22 = (uint64_t *)(v14 + v20);
        do
        {
          v23 = *v22++;
          *(_QWORD *)v21 = v23;
          v21 += 8;
          --v19;
        }
        while (v19);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v135 = &v121;
    v139 = TupleTypeMetadata;
    v126 = *(_QWORD *)(TupleTypeMetadata - 8);
    v25 = MEMORY[0x24BDAC7A8](TupleTypeMetadata);
    v144 = (char *)&v121 - v26;
    MEMORY[0x24BDAC7A8](v25);
    v27 = (uint64_t *)((char *)&v121 - v11);
    if (v7)
    {
      v28 = a2[4] & 0xFFFFFFFFFFFFFFFELL;
      v29 = a2[6] & 0xFFFFFFFFFFFFFFFELL;
      v30 = v27;
      v31 = v145;
      do
      {
        v28 += 8;
        v29 += 8;
        swift_getAssociatedTypeWitness();
        *v30++ = sub_23486F35C();
        --v31;
      }
      while (v31);
    }
    v7 = v145;
    v10 = swift_getTupleTypeMetadata();
    v8 = v129;
  }
  v134 = &v121;
  v138 = v10;
  v125 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v143 = (char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23486F0C8();
  v133 = &v121;
  v146 = (uint64_t *)v33;
  v137 = *(_QWORD *)(v33 - 8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v121 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = &v121;
  v148 = a2;
  v140 = (char *)a2[3];
  v136 = *((_QWORD *)v140 - 1);
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v121 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = &v121;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (uint64_t *)((char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v7)
  {
    v41 = v148[4] & 0xFFFFFFFFFFFFFFFELL;
    v42 = v148[6] & 0xFFFFFFFFFFFFFFFELL;
    v43 = v40;
    v44 = v145;
    do
    {
      v41 += 8;
      v42 += 8;
      *v43++ = swift_getAssociatedTypeWitness();
      --v44;
    }
    while (v44);
  }
  v45 = v145;
  v46 = sub_23486F4DC();
  v128 = sub_23486FCBC();
  v127 = *(_QWORD *)(v128 - 8);
  v47 = MEMORY[0x24BDAC7A8](v128);
  v49 = (char *)&v121 - v48;
  v130 = &v121;
  v50 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v52 = (char *)&v121 - v51;
  sub_23486F0F8();
  sub_23486F0D4();
  v53 = v149;
  v54 = v140;
  sub_23486F0E0();
  if (v53)
  {

    (*(void (**)(char *, uint64_t *))(v137 + 8))(v36, v146);
    (*(void (**)(char *, char *))(v136 + 8))(v39, v54);
    v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
    v56 = 1;
    v55(v49, 1, 1, v46);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v49, v128);
    sub_234785044();
    swift_allocError();
    *(_BYTE *)v57 = 1;
    *(_QWORD *)(v57 + 8) = 0xD0000000000000A4;
    *(_QWORD *)(v57 + 16) = 0x8000000234875970;
    swift_willThrow();
    return v56;
  }
  v149 = 0;
  (*(void (**)(char *, uint64_t *))(v137 + 8))(v36, v146);
  (*(void (**)(char *, char *))(v136 + 8))(v39, v54);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v49, 0, 1, v46);
  v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v50 + 32))(v52, v49, v46);
  v59 = v129;
  MEMORY[0x24BDAC7A8](v58);
  v124 = v46;
  v123 = v50;
  v122 = v52;
  v137 = v60;
  if (!v45)
  {
    sub_23486F4D0();
    sub_23486F0EC();
    v89 = v142;
    v64 = v143;
LABEL_50:
    v115 = v124;
    v116 = v122;
    sub_23486F4B8();
    v117 = v157;
    v56 = v158;
    __swift_project_boxed_opaque_existential_0Tm(&v155, v157);
    v118 = v149;
    v119 = sub_23482CAF4(v89, v117, *(_QWORD *)(v56 + 8));
    if (!v118)
      v56 = (unint64_t)v119;
    (*(void (**)(char *, uint64_t))(v123 + 8))(v116, v115);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v155);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v144, v139);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v64, v138);
    return v56;
  }
  v61 = 0;
  v62 = 32;
  v63 = v138;
  v64 = v143;
  v65 = v148;
  do
  {
    if (v45 == 1)
      v66 = 0;
    else
      v66 = *(_DWORD *)(v63 + v62);
    *(uint64_t *)((char *)&v121 + 8 * v61++ - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0)) = (uint64_t)&v64[v66];
    v62 += 16;
  }
  while (v45 != v61);
  v67 = sub_23486F4D0();
  MEMORY[0x24BDAC7A8](v67);
  v68 = 0;
  v69 = 32;
  v70 = v139;
  v71 = v144;
  do
  {
    if (v45 == 1)
      v72 = 0;
    else
      v72 = *(_DWORD *)(v70 + v69);
    *(uint64_t *)((char *)&v121 + 8 * v68++ - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0)) = (uint64_t)&v71[v72];
    v69 += 16;
  }
  while (v45 != v68);
  sub_23486F0EC();
  v73 = (uint64_t *)(v65[4] & 0xFFFFFFFFFFFFFFFELL);
  v56 = v65[6] & 0xFFFFFFFFFFFFFFFELL;
  v140 = &v156;
  v74 = 32;
  v75 = v45;
  while (1)
  {
    v147 = v75;
    if (v45 == 1)
      v77 = 0;
    else
      v77 = *(_DWORD *)(v138 + v74);
    v148 = v73;
    v78 = *v73;
    v79 = *(_QWORD *)v56;
    v80 = &v64[v77];
    swift_getAssociatedTypeWitness();
    v81 = sub_23486F35C();
    v146 = &v121;
    v82 = *(_QWORD *)(v81 - 8);
    MEMORY[0x24BDAC7A8](v81);
    v84 = (char *)&v121 - v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))((char *)&v121 - v83, v80, v81);
    sub_23486F350();
    v85 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v84, v81);
    v86 = *(_QWORD *)(v78 - 8);
    MEMORY[0x24BDAC7A8](v85);
    v88 = (char *)&v121 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v86 + 16))(v88);
    v89 = v142;
    v90 = v149;
    v91 = sub_23482DD44(v142, v78, v79);
    v149 = v90;
    if (v90)
    {
      (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v78);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v152, v141);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v122, v124);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v144, v139);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v143, v138);
      return v56;
    }
    v92 = v91;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v78);
    v93 = v140;
    *((_QWORD *)v140 + 6) = 0;
    *((_OWORD *)v93 + 1) = 0u;
    *((_OWORD *)v93 + 2) = 0u;
    *(_OWORD *)v93 = 0u;
    v155 = v92;
    v94 = (uint64_t)v151;
    v95 = *(void (**)(uint64_t, char *, uint64_t))(v150 + 16);
    v96 = v141;
    v95((uint64_t)v151, v152, v141);
    sub_2347DDC90((uint64_t)&v155, v154);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v153 = (_QWORD *)v89[1];
    v98 = v153;
    v89[1] = 0x8000000000000000;
    v100 = sub_2347CDDBC(v94);
    v101 = v98[2];
    v102 = (v99 & 1) == 0;
    v103 = v101 + v102;
    if (__OFADD__(v101, v102))
      break;
    v104 = v99;
    if (v98[3] >= v103)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v107 = v153;
        if ((v99 & 1) != 0)
          goto LABEL_32;
      }
      else
      {
        sub_2347D72CC();
        v107 = v153;
        if ((v104 & 1) != 0)
          goto LABEL_32;
      }
    }
    else
    {
      sub_2347D18C0(v103, isUniquelyReferenced_nonNull_native);
      v105 = sub_2347CDDBC((uint64_t)v151);
      if ((v104 & 1) != (v106 & 1))
        goto LABEL_57;
      v100 = v105;
      v107 = v153;
      if ((v104 & 1) != 0)
      {
LABEL_32:
        sub_23480FB34(v154, v107[7] + (v100 << 6));
        goto LABEL_33;
      }
    }
    v107[(v100 >> 6) + 8] |= 1 << v100;
    v95(v107[6] + *(_QWORD *)(v150 + 72) * v100, v151, v96);
    v108 = (_OWORD *)(v107[7] + (v100 << 6));
    v109 = v154[0];
    v110 = v154[1];
    v111 = v154[3];
    v108[2] = v154[2];
    v108[3] = v111;
    *v108 = v109;
    v108[1] = v110;
    v112 = v107[2];
    v113 = __OFADD__(v112, 1);
    v114 = v112 + 1;
    if (v113)
      goto LABEL_56;
    v107[2] = v114;
    v107 = v153;
LABEL_33:
    v89[1] = (uint64_t)v107;
    swift_bridgeObjectRelease();
    v76 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
    v76((uint64_t)v151, v96);
    v76((uint64_t)v152, v96);
    sub_234838D48((uint64_t)&v155);
    v74 += 16;
    v56 += 8;
    v73 = v148 + 1;
    v75 = v147 - 1;
    v45 = v145;
    v64 = v143;
    if (v147 == 1)
      goto LABEL_50;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_234832638(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = sub_234831800(a1, a2);
  if (v2)
    return v4;
  return result;
}

uint64_t sub_234832658(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 *v16;
  _OWORD *v17;
  unint64_t v18;
  __int128 v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t *v90;
  void *v91;
  id v92;
  id v93;
  char *v94;
  uint64_t v95;
  void (*v96)(uint64_t, char *, uint64_t);
  uint64_t v97;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v99;
  char v100;
  unint64_t v101;
  uint64_t v102;
  _BOOL8 v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  _QWORD *v108;
  _OWORD *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void *v119;
  id v120;
  uint64_t result;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char **v129;
  char **v130;
  char **v131;
  char **v132;
  char **v133;
  char **v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t *v141;
  char *v142;
  char *v143;
  _QWORD *v144;
  unint64_t v145;
  uint64_t *v146;
  unint64_t v147;
  void *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  _QWORD *v152;
  _OWORD v153[4];
  id v154;
  char v155;
  uint64_t v156;
  unint64_t v157;

  v141 = a1;
  v140 = sub_23486F158();
  v149 = *(_QWORD *)(v140 - 8);
  v3 = MEMORY[0x24BDAC7A8](v140);
  v150 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v151 = (char *)&v122 - v6;
  v7 = a2[2];
  v8 = 8 * v7;
  v147 = v7;
  v146 = a2;
  if (v7 == 1)
  {
    v134 = &v122;
    v138 = *(_QWORD *)(a2[4] & 0xFFFFFFFFFFFFFFFELL);
    v126 = *(_QWORD *)(v138 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v143 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_getAssociatedTypeWitness();
    v10 = sub_23486F35C();
    v11 = 1;
  }
  else
  {
    MEMORY[0x24BDAC7A8](v5);
    v12 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
    v13 = (char *)&v122 - v12;
    if (v7)
    {
      v14 = 0;
      v15 = a2[4] & 0xFFFFFFFFFFFFFFFELL;
      if (v7 < 4)
        goto LABEL_9;
      if ((unint64_t)&v13[-v15] < 0x20)
        goto LABEL_9;
      v14 = v7 & 0xFFFFFFFFFFFFFFFCLL;
      v16 = (__int128 *)(v15 + 16);
      v17 = v13 + 16;
      v18 = v7 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v19 = *v16;
        *(v17 - 1) = *(v16 - 1);
        *v17 = v19;
        v16 += 2;
        v17 += 2;
        v18 -= 4;
      }
      while (v18);
      if (v7 != v14)
      {
LABEL_9:
        v20 = v7 - v14;
        v21 = 8 * v14;
        v22 = &v13[8 * v14];
        v23 = (uint64_t *)(v15 + v21);
        do
        {
          v24 = *v23++;
          *(_QWORD *)v22 = v24;
          v22 += 8;
          --v20;
        }
        while (v20);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v134 = &v122;
    v138 = TupleTypeMetadata;
    v126 = *(_QWORD *)(TupleTypeMetadata - 8);
    v26 = MEMORY[0x24BDAC7A8](TupleTypeMetadata);
    v143 = (char *)&v122 - v27;
    MEMORY[0x24BDAC7A8](v26);
    v28 = (uint64_t *)((char *)&v122 - v12);
    if (v7)
    {
      v29 = v146[4] & 0xFFFFFFFFFFFFFFFELL;
      v30 = v146[7] & 0xFFFFFFFFFFFFFFFELL;
      v31 = v28;
      v32 = v147;
      do
      {
        v29 += 8;
        v30 += 8;
        swift_getAssociatedTypeWitness();
        *v31++ = sub_23486F35C();
        --v32;
      }
      while (v32);
    }
    v11 = v147;
    v10 = swift_getTupleTypeMetadata();
    a2 = v146;
  }
  v133 = &v122;
  v137 = v10;
  v125 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v142 = (char *)&v122 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23486F0C8();
  v132 = &v122;
  v144 = (_QWORD *)v34;
  v136 = *(_QWORD *)(v34 - 8);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = &v122;
  v139 = (char *)a2[3];
  v135 = *((_QWORD *)v139 - 1);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v40 = (char *)&v122 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = &v122;
  MEMORY[0x24BDAC7A8](v38);
  v127 = v8;
  v41 = (uint64_t *)((char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v11)
  {
    v42 = v146[4] & 0xFFFFFFFFFFFFFFFELL;
    v43 = v146[7] & 0xFFFFFFFFFFFFFFFELL;
    v44 = v41;
    v45 = v147;
    do
    {
      v42 += 8;
      v43 += 8;
      *v44++ = swift_getAssociatedTypeWitness();
      --v45;
    }
    while (v45);
  }
  v46 = sub_23486EFE4();
  v128 = sub_23486FCBC();
  v47 = *(_QWORD *)(v128 - 8);
  v48 = MEMORY[0x24BDAC7A8](v128);
  v50 = (char *)&v122 - v49;
  v129 = &v122;
  v51 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v53 = (char *)&v122 - v52;
  sub_23486F23C();
  sub_23486F0D4();
  v54 = v148;
  v55 = v139;
  sub_23486F0E0();
  if (v54)
  {

    (*(void (**)(char *, _QWORD *))(v136 + 8))(v37, v144);
    (*(void (**)(char *, char *))(v135 + 8))(v40, v55);
    v56 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v50, 1, 1, v46);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v128);
    sub_234785044();
    swift_allocError();
    *(_BYTE *)v57 = 1;
    *(_QWORD *)(v57 + 8) = 0xD0000000000000A6;
    *(_QWORD *)(v57 + 16) = 0x80000002348758C0;
    swift_willThrow();
    return v56;
  }
  v148 = 0;
  (*(void (**)(char *, _QWORD *))(v136 + 8))(v37, v144);
  (*(void (**)(char *, char *))(v135 + 8))(v40, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v50, 0, 1, v46);
  v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v51 + 32))(v53, v50, v46);
  v59 = v127;
  MEMORY[0x24BDAC7A8](v58);
  v60 = v147;
  v124 = v46;
  v123 = v51;
  v122 = v53;
  v136 = v61;
  if (!v147)
  {
    sub_23486EFD8();
    sub_23486F248();
    v90 = v141;
    v65 = v142;
LABEL_50:
    v116 = v124;
    v117 = v122;
    sub_23486EFCC();
    v118 = v156;
    v56 = v157;
    __swift_project_boxed_opaque_existential_0Tm(&v154, v156);
    v119 = v148;
    v120 = sub_23482CAF4(v90, v118, *(_QWORD *)(v56 + 8));
    if (!v119)
      v56 = (unint64_t)v120;
    (*(void (**)(char *, uint64_t))(v123 + 8))(v117, v116);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v154);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v143, v138);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v65, v137);
    return v56;
  }
  v62 = 0;
  v63 = 32;
  v64 = v137;
  v65 = v142;
  do
  {
    if (v60 == 1)
      v66 = 0;
    else
      v66 = *(_DWORD *)(v64 + v63);
    *(char **)((char *)&(&v122)[v62++] - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0)) = &v65[v66];
    v63 += 16;
  }
  while (v60 != v62);
  v67 = sub_23486EFD8();
  MEMORY[0x24BDAC7A8](v67);
  v68 = 0;
  v69 = 32;
  v70 = v138;
  v71 = v143;
  do
  {
    if (v60 == 1)
      v72 = 0;
    else
      v72 = *(_DWORD *)(v70 + v69);
    *(char **)((char *)&(&v122)[v68++] - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0)) = &v71[v72];
    v69 += 16;
  }
  while (v60 != v68);
  v73 = v146;
  sub_23486F248();
  v74 = (uint64_t *)(v73[4] & 0xFFFFFFFFFFFFFFFELL);
  v56 = v73[7] & 0xFFFFFFFFFFFFFFFELL;
  v139 = &v155;
  v75 = 32;
  v76 = v60;
  while (1)
  {
    v145 = v76;
    if (v60 == 1)
      v78 = 0;
    else
      v78 = *(_DWORD *)(v137 + v75);
    v146 = v74;
    v79 = *v74;
    v80 = *(_QWORD *)v56;
    v81 = &v65[v78];
    swift_getAssociatedTypeWitness();
    v82 = sub_23486F35C();
    v144 = &v122;
    v83 = *(_QWORD *)(v82 - 8);
    MEMORY[0x24BDAC7A8](v82);
    v85 = (char *)&v122 - v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))((char *)&v122 - v84, v81, v82);
    sub_23486F350();
    v86 = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v85, v82);
    v87 = *(_QWORD *)(v79 - 8);
    MEMORY[0x24BDAC7A8](v86);
    v89 = (char *)&v122 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v87 + 16))(v89);
    v90 = v141;
    v91 = v148;
    v92 = sub_23482DD44(v141, v79, v80);
    v148 = v91;
    if (v91)
    {
      (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v79);
      (*(void (**)(char *, uint64_t))(v149 + 8))(v151, v140);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v122, v124);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v143, v138);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v142, v137);
      return v56;
    }
    v93 = v92;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v79);
    v94 = v139;
    *((_QWORD *)v139 + 6) = 0;
    *((_OWORD *)v94 + 1) = 0u;
    *((_OWORD *)v94 + 2) = 0u;
    *(_OWORD *)v94 = 0u;
    v154 = v93;
    v95 = (uint64_t)v150;
    v96 = *(void (**)(uint64_t, char *, uint64_t))(v149 + 16);
    v97 = v140;
    v96((uint64_t)v150, v151, v140);
    sub_2347DDC90((uint64_t)&v154, v153);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v152 = (_QWORD *)v90[1];
    v99 = v152;
    v90[1] = 0x8000000000000000;
    v101 = sub_2347CDDBC(v95);
    v102 = v99[2];
    v103 = (v100 & 1) == 0;
    v104 = v102 + v103;
    if (__OFADD__(v102, v103))
      break;
    v105 = v100;
    if (v99[3] >= v104)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v108 = v152;
        if ((v100 & 1) != 0)
          goto LABEL_32;
      }
      else
      {
        sub_2347D72CC();
        v108 = v152;
        if ((v105 & 1) != 0)
          goto LABEL_32;
      }
    }
    else
    {
      sub_2347D18C0(v104, isUniquelyReferenced_nonNull_native);
      v106 = sub_2347CDDBC((uint64_t)v150);
      if ((v105 & 1) != (v107 & 1))
        goto LABEL_57;
      v101 = v106;
      v108 = v152;
      if ((v105 & 1) != 0)
      {
LABEL_32:
        sub_23480FB34(v153, v108[7] + (v101 << 6));
        goto LABEL_33;
      }
    }
    v108[(v101 >> 6) + 8] |= 1 << v101;
    v96(v108[6] + *(_QWORD *)(v149 + 72) * v101, v150, v97);
    v109 = (_OWORD *)(v108[7] + (v101 << 6));
    v110 = v153[0];
    v111 = v153[1];
    v112 = v153[3];
    v109[2] = v153[2];
    v109[3] = v112;
    *v109 = v110;
    v109[1] = v111;
    v113 = v108[2];
    v114 = __OFADD__(v113, 1);
    v115 = v113 + 1;
    if (v114)
      goto LABEL_56;
    v108[2] = v115;
    v108 = v152;
LABEL_33:
    v90[1] = (uint64_t)v108;
    swift_bridgeObjectRelease();
    v77 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
    v77((uint64_t)v150, v97);
    v77((uint64_t)v151, v97);
    sub_234838D48((uint64_t)&v154);
    v75 += 16;
    v56 += 8;
    v74 = v146 + 1;
    v76 = v145 - 1;
    v60 = v147;
    v65 = v142;
    if (v145 == 1)
      goto LABEL_50;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_234833494(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = sub_234832658(a1, a2);
  if (v2)
    return v4;
  return result;
}

void (**sub_2348334B4(uint64_t *a1, _QWORD *a2))(char *, uint64_t)
{
  uint64_t v2;
  void (**result)(char *, uint64_t);
  uint64_t v4;

  result = sub_2348334EC(a1, a2, MEMORY[0x24BDCCD90], MEMORY[0x24BDCCD98], (SEL *)&selRef_andPredicateWithSubpredicates_);
  if (v2)
    return (void (**)(char *, uint64_t))v4;
  return result;
}

void (**sub_2348334EC(uint64_t *a1, _QWORD *a2, void (*a3)(_QWORD *), void (*a4)(_QWORD *), SEL *a5))(char *, uint64_t)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (**v15)(char *, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  SEL *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  id v26;
  void *v27;
  uint64_t v28;
  SEL *v29;
  uint64_t v30;
  void (*v31)(_QWORD *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v9 = a2[3];
  v31 = a4;
  v32 = v9;
  v28 = *(_QWORD *)(v9 - 8);
  v29 = a5;
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(void (***)(char *, uint64_t))(v14 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258438);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_23487B380;
  v30 = v5;
  a3(a2);
  v19 = v33;
  v20 = sub_23482BD48(a1, v14, a2[4]);
  v15[1](v17, v14);
  if (v19)
  {
    *(_QWORD *)(v18 + 16) = 0;
    swift_release();
  }
  else
  {
    v22 = v28;
    v21 = v29;
    *(_QWORD *)(v18 + 32) = v20;
    v31(a2);
    v23 = a1;
    v24 = v32;
    v26 = sub_23482BD48(v23, v32, a2[5]);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
    *(_QWORD *)(v18 + 40) = v26;
    v34 = v18;
    sub_23486F8FC();
    sub_2348394CC(0, &qword_254257698);
    v27 = (void *)sub_23486F8D8();
    swift_bridgeObjectRelease();
    v15 = (void (**)(char *, uint64_t))objc_msgSend((id)objc_opt_self(), *v21, v27);

  }
  return v15;
}

void (**sub_234833700(uint64_t *a1, _QWORD *a2))(char *, uint64_t)
{
  uint64_t v2;
  void (**result)(char *, uint64_t);
  uint64_t v4;

  result = sub_2348334EC(a1, a2, MEMORY[0x24BDCCDC0], MEMORY[0x24BDCCDC8], (SEL *)&selRef_orPredicateWithSubpredicates_);
  if (v2)
    return (void (**)(char *, uint64_t))v4;
  return result;
}

id sub_234833738(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_2348379D8(a1, a2, MEMORY[0x24BDCD0C8], MEMORY[0x24BDCD0D0], 4, 0);
  if (v2)
    return (id)v4;
  return result;
}

id sub_234833770(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_2348379D8(a1, a2, MEMORY[0x24BDCD1E0], MEMORY[0x24BDCD1E8], 5, 0);
  if (v2)
    return (id)v4;
  return result;
}

uint64_t sub_2348337A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  void *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;

  v3 = a2;
  v45 = a1;
  v40 = a2[3];
  v39 = *(_QWORD *)(v40 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 16);
  v41 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v4);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23486F224();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v36 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v35 - v18;
  sub_23486F104();
  v20 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v19, v14);
  if (v20 == *MEMORY[0x24BDCCF28])
  {
    v21 = 0x3A6F743A646461;
LABEL_5:
    v37 = v21;
    goto LABEL_8;
  }
  if (v20 == *MEMORY[0x24BDCCF38])
  {
    v21 = 0x6275733A6D6F7266;
    goto LABEL_5;
  }
  if (v20 != *MEMORY[0x24BDCCF30])
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD *))(v12 + 16))(v37, v2, v3);
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    v34 = v36;
    sub_23486F104();
    sub_23486FF74();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v14);
    result = sub_234870004();
    __break(1u);
    return result;
  }
  v37 = 0x796C7069746C756DLL;
LABEL_8:
  v22 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189300);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_234879D80;
  sub_23486F110();
  v24 = v42;
  v25 = sub_23482DD44(v22, v7, v3[4]);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v7);
  if (v24)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v23 + 16) = 0;
    swift_release();
  }
  else
  {
    v26 = sub_2348394CC(0, &qword_256189A10);
    *(_QWORD *)(v23 + 56) = v26;
    *(_QWORD *)(v23 + 32) = v25;
    v27 = v22;
    v28 = v38;
    sub_23486F11C();
    v29 = v40;
    v31 = sub_23482DD44(v27, v40, v3[5]);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v29);
    *(_QWORD *)(v23 + 88) = v26;
    *(_QWORD *)(v23 + 64) = v31;
    v32 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    v33 = (void *)sub_23486F8D8();
    swift_bridgeObjectRelease();
    v3 = objc_msgSend((id)objc_opt_self(), sel_expressionForFunction_arguments_, v32, v33);

  }
  return (uint64_t)v3;
}

uint64_t sub_234833C34(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = sub_2348337A8(a1, a2);
  if (v2)
    return v4;
  return result;
}

char *sub_234833C54(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  _QWORD v20[2];

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189300);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_234879D80;
  sub_23486F14C();
  v10 = v8;
  v11 = sub_23482DD44(a1, v5, *(_QWORD *)(a2 + 24));
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v9 + 16) = 0;
    swift_release();
  }
  else
  {
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = sub_2348394CC(0, &qword_256189A10);
    *(_QWORD *)(v9 + 56) = v13;
    *(_QWORD *)(v9 + 32) = v12;
    v20[1] = -1;
    v14 = sub_23487040C();
    v15 = (void *)objc_opt_self();
    v16 = objc_msgSend(v15, sel_expressionForConstantValue_, v14);
    swift_unknownObjectRelease();
    *(_QWORD *)(v9 + 88) = v13;
    *(_QWORD *)(v9 + 64) = v16;
    v17 = (void *)sub_23486F74C();
    v18 = (void *)sub_23486F8D8();
    swift_bridgeObjectRelease();
    v10 = (char *)objc_msgSend(v15, sel_expressionForFunction_arguments_, v17, v18);

  }
  return v10;
}

char *sub_234833E48(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char *result;
  uint64_t v4;

  result = sub_234833C54(a1, a2);
  if (v2)
    return (char *)v4;
  return result;
}

uint64_t sub_234833E68(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t result;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;

  v42 = a1;
  v38 = a2[3];
  v37 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v36 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v4);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v35 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23486F230();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v34 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v32 - v18;
  sub_23486F128();
  v20 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v19, v14);
  v21 = 0;
  if (v20 != *MEMORY[0x24BDCCF60])
  {
    if (v20 == *MEMORY[0x24BDCCF50])
    {
      v21 = 1;
    }
    else if (v20 == *MEMORY[0x24BDCCF48])
    {
      v21 = 2;
    }
    else
    {
      if (v20 != *MEMORY[0x24BDCCF58])
      {
        (*(void (**)(char *, uint64_t, _QWORD *))(v33 + 16))(v35, v2, a2);
        v40 = 0;
        v41 = 0xE000000000000000;
        sub_23486FEA8();
        sub_23486F7DC();
        v31 = v34;
        sub_23486F128();
        sub_23486FF74();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v14);
        result = sub_234870004();
        __break(1u);
        return result;
      }
      v21 = 3;
    }
  }
  v35 = (char *)v21;
  sub_23486F134();
  v22 = v42;
  v23 = v11;
  v24 = v39;
  v25 = sub_23482DD44(v42, v7, a2[4]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (!v24)
  {
    v26 = v36;
    sub_23486F140();
    v27 = v38;
    v28 = sub_23482DD44(v22, v38, a2[5]);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v27);
    v30 = objc_allocWithZone(MEMORY[0x24BDD14B8]);
    v23 = (char *)objc_msgSend(v30, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v25, v28, 0, v35, 0);

  }
  return (uint64_t)v23;
}

uint64_t sub_2348341F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = sub_234833E68(a1, a2);
  if (v2)
    return v4;
  return result;
}

uint64_t *sub_234834210(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v3 = a2;
  v5 = a2[2];
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23486F344();
  v9 = sub_23482BD48(a1, v5, v3[3]);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v2)
  {
    v3 = (uint64_t *)objc_msgSend((id)objc_opt_self(), sel_notPredicateWithSubpredicate_, v9);

  }
  return v3;
}

uint64_t *sub_2348342FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *result;
  uint64_t v4;

  result = sub_234834210(a1, a2);
  if (v2)
    return (uint64_t *)v4;
  return result;
}

char *sub_23483431C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  char *v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  id v41;

  v39 = a1;
  v35 = a2[3];
  v33 = *(_QWORD *)(v35 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v34 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v5 + 16);
  v40 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23486F158();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a2[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v12 = sub_23486F35C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - v14;
  sub_23486F2FC();
  sub_23486F350();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v16 = v39;
  v17 = sub_23482C734((uint64_t)v11);
  v19 = v18;
  v20 = v11;
  v21 = v16;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v38);
  sub_23486F2F0();
  v22 = v8;
  v23 = v41;
  v24 = sub_23482DD44(v21, v6, v36);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = v17;
    v38 = v19;
    v41 = v24;
    v25 = v33;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v6);
    v26 = v34;
    sub_23486F2E4();
    v27 = v35;
    v29 = sub_23482BD48(v21, v35, a2[5]);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
    v30 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    v31 = (void *)objc_opt_self();
    v32 = v41;
    v22 = (char *)objc_msgSend(v31, sel_expressionForSubquery_usingIteratorVariable_predicate_, v41, v30, v29);

  }
  return v22;
}

char *sub_234834630(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  char *result;
  uint64_t v4;

  result = sub_23483431C(a1, a2);
  if (v2)
    return (char *)v4;
  return result;
}

id sub_234834650(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;

  v28 = a2[3];
  v6 = *(_QWORD *)(v28 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v26 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189300);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_234879D80;
  v25 = v2;
  sub_23486F1C4();
  v15 = a2[4];
  v27 = a1;
  v16 = sub_23482DD44(a1, v10, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v3)
  {
    *(_QWORD *)(v14 + 16) = 0;
    swift_release();
  }
  else
  {
    v17 = sub_2348394CC(0, &qword_256189A10);
    *(_QWORD *)(v14 + 56) = v17;
    *(_QWORD *)(v14 + 32) = v16;
    v18 = v26;
    MEMORY[0x234944CE4](a2);
    v19 = v28;
    v21 = sub_23482DD44(v27, v28, a2[5]);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v19);
    *(_QWORD *)(v14 + 88) = v17;
    *(_QWORD *)(v14 + 64) = v21;
    v22 = (void *)sub_23486F74C();
    v23 = (void *)sub_23486F8D8();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend((id)objc_opt_self(), sel_expressionForFunction_arguments_, v22, v23);

  }
  return v16;
}

id sub_234834894(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_234834650(a1, a2);
  if (v2)
    return (id)v4;
  return result;
}

id sub_2348348B4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2[3];
  v5 = *(_QWORD *)(v24 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258438);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23487B380;
  v22 = v2;
  sub_23486F164();
  v15 = a2[4];
  v23 = a1;
  v16 = v25;
  v17 = sub_23482DD44(a1, v10, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    *(_QWORD *)(v14 + 16) = 0;
    swift_release();
  }
  else
  {
    *(_QWORD *)(v14 + 32) = v17;
    MEMORY[0x234944C84](a2);
    v18 = v24;
    v20 = sub_23482DD44(v23, v24, a2[5]);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v18);
    *(_QWORD *)(v14 + 40) = v20;
    v26 = v14;
    sub_23486F8FC();
    sub_2348394CC(0, &qword_256189A10);
    v21 = (void *)sub_23486F8D8();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend((id)objc_opt_self(), sel_expressionForAggregate_, v21);

  }
  return v17;
}

id sub_234834ABC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_2348348B4(a1, a2);
  if (v2)
    return (id)v4;
  return result;
}

void (**sub_234834ADC(uint64_t *a1, _QWORD *a2))(char *, uint64_t)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(char *, uint64_t);
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2[2];
  v23 = *(_QWORD *)(v24 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(void (***)(char *, uint64_t))(v9 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23486F20C();
  v13 = sub_23482DD44(a1, v9, a2[5]);
  v10[1](v12, v9);
  if (!v2)
  {
    v14 = v13;
    sub_23486F218();
    v15 = v24;
    v16 = sub_23482DD44(a1, v24, a2[4]);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v15);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (swift_conformsToProtocol2())
      v19 = AssociatedTypeWitness;
    else
      v19 = 0;
    if (v19)
      v20 = 100;
    else
      v20 = 10;
    v21 = v14;
    v10 = (void (**)(char *, uint64_t))objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v14, v16, 0, v20, 0);

  }
  return v10;
}

void (**sub_234834CC0(uint64_t *a1, _QWORD *a2))(char *, uint64_t)
{
  uint64_t v2;
  void (**result)(char *, uint64_t);
  uint64_t v4;

  result = sub_234834ADC(a1, a2);
  if (v2)
    return (void (**)(char *, uint64_t))v4;
  return result;
}

uint64_t sub_234834CE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  a2[3] = *(_QWORD *)(a1 + 16);
  a2[4] = v2;
  __swift_allocate_boxed_opaque_existential_0Tm(a2);
  return sub_23486F164();
}

uint64_t sub_234834D1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 40);
  a2[3] = *(_QWORD *)(a1 + 24);
  a2[4] = v3;
  __swift_allocate_boxed_opaque_existential_0Tm(a2);
  return MEMORY[0x234944DE0](a1);
}

uint64_t sub_234834D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0Tm;
  void (*v32)(uint64_t *, char *, uint64_t);
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  void (*v40)(uint64_t *, char *, uint64_t);
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  char v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t *v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v73 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v63 = sub_23486FF8C();
  v58 = *(_QWORD *)(v63 - 8);
  v5 = MEMORY[0x24BDAC7A8](v63);
  v59 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)&v57 - v7;
  v67 = sub_234870070();
  v60 = *(_QWORD *)(v67 - 8);
  v8 = MEMORY[0x24BDAC7A8](v67);
  v61 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v57 - v10;
  v71 = sub_23486FF80();
  v64 = *(_QWORD *)(v71 - 8);
  v11 = MEMORY[0x24BDAC7A8](v71);
  v65 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v70 = (char *)&v57 - v13;
  v14 = sub_23486F704();
  v68 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v69 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v57 - v17;
  v19 = sub_23486FB60();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v57 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v72, a1);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v26, v19);
    v30 = v73;
    *(_QWORD *)(v73 + 24) = AssociatedTypeWitness;
    *(_QWORD *)(v30 + 32) = AssociatedConformanceWitness;
    boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v30);
    v32 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
    v32(boxed_opaque_existential_0Tm, v23, AssociatedTypeWitness);
    v33 = &v23[*(int *)(v19 + 36)];
    *(_QWORD *)(v30 + 64) = AssociatedTypeWitness;
    *(_QWORD *)(v30 + 72) = AssociatedConformanceWitness;
    v34 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(v30 + 40));
    v32(v34, v33, AssociatedTypeWitness);
    *(_BYTE *)(v30 + 80) = 0;
  }
  else
  {
    v35 = v73;
    if (swift_dynamicCast())
    {
      v36 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v69, v18, v14);
      v37 = v35;
      v38 = (uint64_t *)(v35 + 40);
      *(_QWORD *)(v35 + 24) = AssociatedTypeWitness;
      *(_QWORD *)(v35 + 32) = AssociatedConformanceWitness;
      v39 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v35);
      v40 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
      v40(v39, v36, AssociatedTypeWitness);
      v41 = &v36[*(int *)(v14 + 36)];
      *(_QWORD *)(v37 + 64) = AssociatedTypeWitness;
      *(_QWORD *)(v37 + 72) = AssociatedConformanceWitness;
      v42 = __swift_allocate_boxed_opaque_existential_0Tm(v38);
      v40(v42, v41, AssociatedTypeWitness);
      *(_BYTE *)(v37 + 80) = 1;
    }
    else
    {
      v44 = v70;
      v43 = v71;
      if (swift_dynamicCast())
      {
        v45 = v65;
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v65, v44, v43);
        *(_QWORD *)(v35 + 24) = AssociatedTypeWitness;
        *(_QWORD *)(v35 + 32) = AssociatedConformanceWitness;
        v46 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v35);
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v46, v45, AssociatedTypeWitness);
        v47 = 2;
      }
      else
      {
        v49 = v66;
        v48 = v67;
        if (swift_dynamicCast())
        {
          v50 = v61;
          (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v61, v49, v48);
          *(_QWORD *)(v35 + 24) = AssociatedTypeWitness;
          *(_QWORD *)(v35 + 32) = AssociatedConformanceWitness;
          v51 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v35);
          (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v51, v50, AssociatedTypeWitness);
          v47 = 3;
        }
        else
        {
          v53 = v62;
          v52 = v63;
          if (swift_dynamicCast())
          {
            v54 = v59;
            (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v59, v53, v52);
            *(_QWORD *)(v35 + 24) = AssociatedTypeWitness;
            *(_QWORD *)(v35 + 32) = AssociatedConformanceWitness;
            v55 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)v35);
            (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v55, v54, AssociatedTypeWitness);
            v47 = 4;
          }
          else
          {
            *(_OWORD *)(v35 + 48) = 0u;
            *(_OWORD *)(v35 + 64) = 0u;
            *(_OWORD *)(v35 + 16) = 0u;
            *(_OWORD *)(v35 + 32) = 0u;
            *(_OWORD *)v35 = 0u;
            v47 = -1;
          }
        }
      }
      *(_BYTE *)(v35 + 80) = v47;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v28, a1);
}

uint64_t sub_234835284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23486F2D8();
  sub_234834D60(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_234835314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_234835284(a1, a2);
}

char *sub_23483531C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  void (*v23)(char *, uint64_t);
  id v24;
  id v25;
  void *v26;
  _QWORD v27[4];
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;

  v32 = a2[2];
  v29 = *(_QWORD *)(v32 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v27[3] = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v27 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)v27 - v11;
  v13 = *(_QWORD *)(v12 + 24);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v2;
  MEMORY[0x234944DBC](v17);
  v18 = a2[5];
  v28 = a1;
  v19 = v16;
  v20 = v33;
  v21 = sub_23482DD44(a1, v13, v18);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    v27[2] = v9;
    v33 = v21;
    v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v27[1] = v13;
    v23(v16, v13);
    sub_23486F164();
    v24 = sub_23482DD44(v28, v32, a2[4]);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v32);
    v25 = objc_allocWithZone(MEMORY[0x24BDD14B8]);
    v26 = v33;
    v19 = (char *)objc_msgSend(v25, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v33, v24, 0, 100, 0);

  }
  return v19;
}

void sub_234835978()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_0Tm;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;

  sub_23483942C((__int128 *)(v0 + 256), v0 + 208);
  sub_23483942C((__int128 *)(v0 + 296), v0 + 168);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 168), v3);
  *(_QWORD *)(v0 + 128) = v3;
  boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(v0 + 104));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0Tm, v4, v3);
  sub_23482D0CC((_QWORD *)(v0 + 104), *v1, v1[1], v1[2], (__int128 *)(v0 + 136));
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 104);
  v6 = *(_QWORD *)(v0 + 232);
  v7 = __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 208), v6);
  *(_QWORD *)(v0 + 96) = v6;
  v8 = __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(v0 + 72));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, v7, v6);
  sub_23482D0CC((_QWORD *)(v0 + 72), *v1, v1[1], v1[2], (__int128 *)(v0 + 104));
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189360);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_234879D80;
  sub_2348392D0(v0 + 136, v9 + 32, &qword_254258968);
  sub_2348392D0(v0 + 104, v9 + 64, &qword_254258968);
  *(_QWORD *)(v0 + 72) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256188758);
  v10 = sub_23487040C();
  v11 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v10);
  swift_unknownObjectRelease();
  v12 = objc_allocWithZone(MEMORY[0x24BDD14B8]);
  v13 = *(void **)(v2 - 72);
  objc_msgSend(v12, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v13, v11, 0, 100, 0);

  sub_234839520(v0 + 104, &qword_254258968);
  sub_234839520(v0 + 136, &qword_254258968);
  sub_2348392A4(v2 - 184);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 168);
  JUMPOUT(0x23483596CLL);
}

void sub_234835A04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;

  sub_23483942C((__int128 *)(v0 + 256), v0 + 208);
  v3 = (void *)sub_234839144((_QWORD *)(v0 + 208), *v1, v1[1], v1[2]);
  v4 = objc_allocWithZone(MEMORY[0x24BDD14B8]);
  v5 = *(void **)(v2 - 72);
  objc_msgSend(v4, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v5, v3, 0, 3, 0);

  JUMPOUT(0x234835CB0);
}

char *sub_234835EF0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  char *result;
  uint64_t v4;

  result = sub_23483531C(a1, a2);
  if (v2)
    return (char *)v4;
  return result;
}

id sub_234835F10(uint64_t *a1, _QWORD *a2)
{
  void *v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;

  v3 = v2;
  v42 = a1;
  v38 = a2[3];
  v36 = *(_QWORD *)(v38 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 16);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23486F158();
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a2[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v14 = sub_23486F35C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - v16;
  sub_23486F26C();
  sub_23486F350();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v18 = v42;
  v19 = sub_23482C734((uint64_t)v13);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
  sub_23486F218();
  v22 = v44;
  v23 = sub_23482DD44(v18, v8, v39);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = v19;
    v41 = v21;
    v44 = v23;
    v24 = v36;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
    v25 = v37;
    MEMORY[0x234944D8C](a2);
    v26 = v38;
    v28 = sub_23482BD48(v18, v38, a2[5]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    v29 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    v30 = (void *)objc_opt_self();
    v31 = v44;
    v32 = objc_msgSend(v30, sel_expressionForSubquery_usingIteratorVariable_predicate_, v44, v29, v28);

    v33 = sub_23482C898();
    v45 = 0;
    v34 = objc_msgSend(v30, sel_expressionForConstantValue_, sub_23487040C());
    swift_unknownObjectRelease();
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v33, v34, 0, 5, 0);

  }
  return v3;
}

id sub_2348362BC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_234835F10(a1, a2);
  if (v2)
    return (id)v4;
  return result;
}

id sub_2348362DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;

  v46 = a1;
  v3 = a2[2];
  v40 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(_QWORD *)(v6 + 24);
  v47 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23486F158();
  v9 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a2[4];
  v43 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v12 = sub_23486F35C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v39 - v14;
  sub_23486F26C();
  sub_23486F350();
  v16 = v15;
  v17 = v46;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v18 = sub_23482C734((uint64_t)v11);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22 = v45;
  v21(v11, v44);
  MEMORY[0x234944D68](a2);
  v23 = v48;
  v24 = sub_23482BD48(v17, v22, a2[5]);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = v24;
    v44 = v18;
    v48 = v20;
    v26 = v40;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v22);
    v27 = objc_msgSend((id)objc_opt_self(), sel_notPredicateWithSubpredicate_, v25);

    v28 = v42;
    sub_23486F218();
    v29 = v17;
    v30 = v43;
    v32 = sub_23482DD44(v29, v43, v41);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v30);
    v33 = v27;
    v34 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    v35 = (void *)objc_opt_self();
    v36 = objc_msgSend(v35, sel_expressionForSubquery_usingIteratorVariable_predicate_, v32, v34, v33);

    v37 = sub_23482C898();
    v49 = 0;
    v38 = objc_msgSend(v35, sel_expressionForConstantValue_, sub_23487040C());
    swift_unknownObjectRelease();
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v37, v38, 0, 4, 0);

  }
  return v20;
}

id sub_2348366C8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_2348362DC(a1, a2);
  if (v2)
    return (id)v4;
  return result;
}

id sub_2348366E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_234836720(a1, a2, MEMORY[0x24BDCCEA8], (id)0x6C65732E78616D40);
  if (v2)
    return (id)v4;
  return result;
}

id sub_234836720(uint64_t *a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  id v14;
  uint64_t v16;

  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v12);
  v14 = sub_23482DD44(a1, v8, *(_QWORD *)(a2 + 24));
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v4)
  {
    a4 = sub_23482C898();

  }
  return a4;
}

id sub_2348367FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_234836720(a1, a2, MEMORY[0x24BDCCEC0], (id)0x6C65732E6E696D40);
  if (v2)
    return (id)v4;
  return result;
}

_QWORD *sub_234836834(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  id v25;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;

  v31 = a2[4];
  v5 = *(_QWORD *)(v31 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD **)(v9 + 24);
  v32 = *(v33 - 1);
  v10 = MEMORY[0x24BDAC7A8](v6);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD **)(v13 + 16);
  v15 = *(v14 - 1);
  MEMORY[0x24BDAC7A8](v10);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v2;
  sub_23486F194();
  v18 = a2[5];
  v34 = a1;
  v19 = v36;
  v20 = sub_23482BD48(a1, (uint64_t)v14, v18);
  (*(void (**)(char *, _QWORD *))(v15 + 8))(v17, v14);
  if (!v19)
  {
    v36 = v20;
    v21 = v31;
    sub_23486F17C();
    v22 = (uint64_t)v33;
    v23 = v34;
    v24 = sub_23482DD44(v34, (uint64_t)v33, a2[6]);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v22);
    v33 = v24;
    sub_23486F188();
    v25 = sub_23482DD44(v23, v21, a2[7]);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v21);
    v27 = (void *)objc_opt_self();
    v28 = v36;
    v29 = v33;
    v14 = objc_msgSend(v27, sel_expressionForConditional_trueExpression_falseExpression_, v36, v33, v25);

  }
  return v14;
}

_QWORD *sub_234836A64(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  result = sub_234836834(a1, a2);
  if (v2)
    return (_QWORD *)v4;
  return result;
}

char *sub_234836A84(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v24 = a2[3];
  v26 = *(_QWORD *)(v24 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23486F1A0();
  v13 = a2[4];
  v25 = a1;
  v14 = sub_23482DD44(a1, v9, v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!v2)
  {
    v15 = v14;
    sub_23486F1AC();
    v16 = v24;
    v17 = sub_23482DD44(v25, v24, a2[5]);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v16);
    v19 = (void *)objc_opt_self();
    v20 = v15;
    v21 = objc_msgSend(v19, sel_expressionForConstantValue_, 0);
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v20, v21, 0, 5, 0);

    v23 = v22;
    v7 = (char *)objc_msgSend(v19, sel_expressionForConditional_trueExpression_falseExpression_, v23, v20, v17);

  }
  return v7;
}

char *sub_234836C90(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  char *result;
  uint64_t v4;

  result = sub_234836A84(a1, a2);
  if (v2)
    return (char *)v4;
  return result;
}

id sub_234836CB0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  void (**v55)(_QWORD, uint64_t);
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  _OWORD v59[4];
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _OWORD v63[3];
  uint64_t v64;
  uint64_t v65;

  v51 = a2[4];
  v55 = *(void (***)(_QWORD, uint64_t))(v51 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v54 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_23486F158();
  v53 = *(_QWORD *)(v56 - 8);
  v6 = MEMORY[0x24BDAC7A8](v56);
  v52 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v45 - v8;
  v49 = sub_23486F35C();
  v9 = *(_QWORD *)(v49 - 8);
  v10 = MEMORY[0x24BDAC7A8](v49);
  v12 = (char *)&v45 - v11;
  v13 = a2[2];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v45 - v16;
  v58 = v2;
  sub_23486F1A0();
  v18 = a2[6];
  v57 = a1;
  v19 = v65;
  v20 = sub_23482DD44(a1, v13, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  if (!v19)
  {
    v47 = v20;
    v48 = v12;
    v46 = v9;
    v21 = v56;
    v22 = v57;
    v65 = 0;
    sub_23486F1A0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258420);
    if (swift_dynamicCast())
    {
      v23 = *((_QWORD *)&v61 + 1);
      v24 = v62;
      __swift_project_boxed_opaque_existential_0Tm(&v60, *((uint64_t *)&v61 + 1));
      v25 = v65;
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8))(v63, *v22, v22[1], v22[2], v23, v24);
      v20 = v48;
      if (v25)
      {

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v60);
        return v20;
      }
      v65 = 0;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v60);
    }
    else
    {
      v62 = 0;
      v60 = 0u;
      v61 = 0u;
      sub_234839520((uint64_t)&v60, &qword_256188620);
      memset(v63, 0, sizeof(v63));
      v64 = 0;
      v20 = v48;
    }
    v26 = v47;
    sub_23486F1F4();
    v27 = v20;
    v28 = v50;
    v29 = v49;
    sub_23486F350();
    (*(void (**)(id, uint64_t))(v46 + 8))(v27, v29);
    sub_2348392D0((uint64_t)v63, (uint64_t)&v60 + 8, &qword_2542582E0);
    *(_QWORD *)&v60 = v26;
    v30 = v53;
    v31 = (uint64_t)v52;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v28, v21);
    sub_2347DDC90((uint64_t)&v60, v59);
    v32 = v26;
    sub_2347C6AC8(v59, v31);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v21);
    sub_234838D48((uint64_t)&v60);
    v33 = v54;
    sub_23486F200();
    v34 = v51;
    v35 = v65;
    v36 = sub_23482DD44(v22, v51, a2[7]);
    v20 = v55;
    if (v35)
    {

      (*((void (**)(char *, uint64_t))v20 + 1))(v33, v34);
    }
    else
    {
      v38 = v36;
      ((void (**)(char *, uint64_t))v55)[1](v33, v34);
      v39 = (void *)objc_opt_self();
      v40 = v32;
      v41 = objc_msgSend(v39, sel_expressionForConstantValue_, 0);
      v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v40, v41, 0, 5, 0);

      v43 = v42;
      v44 = objc_msgSend(v39, sel_expressionForConstantValue_, 0);
      v20 = objc_msgSend(v39, sel_expressionForConditional_trueExpression_falseExpression_, v43, v38, v44);

    }
    sub_234839520((uint64_t)v63, &qword_2542582E0);
  }
  return v20;
}

id sub_2348371DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_234836CB0(a1, a2);
  if (v2)
    return (id)v4;
  return result;
}

id sub_2348371FC(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_2348373F0(a1, a2, a3, MEMORY[0x24BDCCC48], MEMORY[0x24BDCCC50], 99);
}

id sub_234837224(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD *), uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)(_QWORD *);
  uint64_t v32;

  v31 = a6;
  v10 = a2[3];
  v28 = a7;
  v29 = v10;
  v32 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20(v19);
  v21 = a2[4];
  v30 = a1;
  v22 = sub_23482DD44(a1, v15, v21);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (!v7)
  {
    v23 = v22;
    v24 = v28;
    v31(a2);
    v25 = v29;
    v26 = sub_23482DD44(v30, v29, a2[5]);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v25);
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v22, v26, 0, v24, 0);

  }
  return v22;
}

id sub_2348373C8(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_2348373F0(a1, a2, a3, MEMORY[0x24BDCCFB8], MEMORY[0x24BDCCFC0], 8);
}

id sub_2348373F0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *), uint64_t a6)
{
  uint64_t v6;
  id result;
  uint64_t v8;

  result = sub_234837224(a1, a2, *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16), a4, a5, a6);
  if (v6)
    return (id)v8;
  return result;
}

id sub_234837424()
{
  return objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, 0);
}

uint64_t sub_23483746C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[4];
  _QWORD v13[3];
  uint64_t v14;

  type metadata accessor for ComparisonResult(0);
  v12[3] = v3;
  v12[0] = a1;
  sub_23482E4BC(v12, (uint64_t)v13);
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  if (!v1)
  {
    v5 = v14;
    if (v14)
    {
      v6 = __swift_project_boxed_opaque_existential_0Tm(v13, v14);
      v7 = *(_QWORD *)(v5 - 8);
      MEMORY[0x24BDAC7A8](v6);
      v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      v10 = sub_2348702D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
    }
    else
    {
      v10 = 0;
    }
    v11 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v10);
    swift_unknownObjectRelease();
    return (uint64_t)v11;
  }
  return result;
}

id sub_234837598(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  id v12;
  id v15;
  id v16;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;

  v12 = (id)a5;
  v15 = sub_23482DD44(a3, a5, a7);
  if (!v8)
  {
    v29 = v15;
    v16 = sub_23482DD44(a3, a6, a8);
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v29, v16, 0, 4, a4);

    v18 = sub_23482DD44(a3, (uint64_t)v12, a7);
    v19 = sub_23482DD44(a3, a6, a8);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v18, v19, 0, 0, a4);

    v21 = (void *)sub_23483746C(-1);
    v22 = (void *)sub_23483746C(1);
    v23 = (void *)objc_opt_self();
    v24 = v20;
    v25 = objc_msgSend(v23, sel_expressionForConditional_trueExpression_falseExpression_, v24, v21, v22);

    v26 = (void *)sub_23483746C(0);
    v27 = v28;
    v12 = objc_msgSend(v23, sel_expressionForConditional_trueExpression_falseExpression_, v27, v26, v25);

  }
  return v12;
}

void (*sub_234837828(uint64_t *a1, _QWORD *a2))(_QWORD *)
{
  uint64_t v2;
  void (*result)(_QWORD *);
  uint64_t v4;

  result = sub_23483785C(a1, a2, MEMORY[0x24BDCD080], MEMORY[0x24BDCD088], 1);
  if (v2)
    return (void (*)(_QWORD *))v4;
  return result;
}

void (*sub_23483785C(uint64_t *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5))(_QWORD *)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  void (*v20)(_QWORD *);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a1;
  v23 = a5;
  v7 = a2[3];
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18(v17);
  a4(a2);
  v19 = v24;
  v20 = (void (*)(_QWORD *))sub_234837598((uint64_t)v16, (uint64_t)v11, v22, v23, v13, v7, a2[4], a2[5]);
  if (!v19)
    a4 = v20;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return a4;
}

void (*sub_2348379A4(uint64_t *a1, _QWORD *a2))(_QWORD *)
{
  uint64_t v2;
  void (*result)(_QWORD *);
  uint64_t v4;

  result = sub_23483785C(a1, a2, MEMORY[0x24BDCD020], MEMORY[0x24BDCD028], 8);
  if (v2)
    return (void (*)(_QWORD *))v4;
  return result;
}

id sub_2348379D8(uint64_t *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  void (*v32)(_QWORD *);
  uint64_t v33;

  v28 = a5;
  v29 = a6;
  v32 = a4;
  v30 = a2[3];
  v33 = *(_QWORD *)(v30 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18(v17);
  v19 = a2[4];
  v31 = a1;
  v20 = sub_23482DD44(a1, v13, v19);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (!v6)
  {
    v21 = v20;
    v23 = v28;
    v22 = v29;
    v32(a2);
    v24 = v30;
    v25 = sub_23482DD44(v31, v30, a2[5]);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v24);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v20, v25, 0, v23, v22);

  }
  return v20;
}

id sub_234837B80(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  id result;
  uint64_t v4;

  result = sub_2348379D8(a1, a2, MEMORY[0x24BDCD0A0], MEMORY[0x24BDCD0A8], 99, 11);
  if (v2)
    return (id)v4;
  return result;
}

id sub_234837BB8(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v4 = a1[3];
  if (!v4)
  {
    v10 = 0;
    v11 = a2[3];
    if (v11)
      goto LABEL_3;
LABEL_5:
    v16 = 0;
    goto LABEL_6;
  }
  v6 = __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  v7 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = sub_2348702D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v11 = a2[3];
  if (!v11)
    goto LABEL_5;
LABEL_3:
  v12 = __swift_project_boxed_opaque_existential_0Tm(a2, v11);
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  v16 = sub_2348702D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a2);
LABEL_6:
  v17 = objc_msgSend(v2, sel_initWithOperand_andKeyPath_, v10, v16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_234837D3C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD130]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837D68(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD230]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837D94(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD1C0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837DC0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCC80]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837DEC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCF88]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837E18(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCDB8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837E44(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCDD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837E70(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD0F0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837E9C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD200]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837EC8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCCA8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837EF4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCD10]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837F20(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCCE0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837F4C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD1D8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837F78(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD158]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837FA4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCE28]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837FD0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCD50]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234837FFC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCEF8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838028(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD058]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838054(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCFF8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838080(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCFB0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2348380AC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCEB8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2348380D8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCED0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838104(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCD80]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838130(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCE00]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23483815C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCEA0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838188(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BEE12E0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2348381B4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCC60]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2348381E0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCFD0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23483820C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCCCF8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838238(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD098]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838264(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD038]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_234838290(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](MEMORY[0x24BDCD0B8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2348382BC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2348382C4()
{
  uint64_t result;
  unint64_t v1;

  sub_23486F4DC();
  result = sub_23486FCBC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_234838370(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23486F4DC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_23486FCBC();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[11];
    v15 = a3[12];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
    v18 = a3[14];
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2348384E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23486F4DC();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_23483857C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_23486F4DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_23486FCBC();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = a3[11];
  v13 = a3[12];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  a1[v13] = a2[v13];
  v16 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  a1[a3[15]] = a2[a3[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_2348386C0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_23486F4DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_23486FCBC();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[10];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = a3[11];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)v17 = v19;
  a1[a3[12]] = a2[a3[12]];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[15]] = a2[a3[15]];
  return a1;
}

char *sub_234838878(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_23486F4DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_23486FCBC();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = a3[11];
  v13 = a3[12];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  a1[v13] = a2[v13];
  v16 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  a1[a3[15]] = a2[a3[15]];
  return a1;
}

char *sub_2348389A8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = sub_23486F4DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_23486FCBC();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  v12 = a3[10];
  v13 = a3[11];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v14[8] = v15[8];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = &a1[v13];
  v17 = &a2[v13];
  v16[8] = v17[8];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v18 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  swift_bridgeObjectRelease();
  a1[a3[15]] = a2[a3[15]];
  return a1;
}

uint64_t sub_234838B40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_234838B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_23486F4DC();
  v6 = sub_23486FCBC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_234838BE4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_234838BF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  sub_23486F4DC();
  result = sub_23486FCBC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_0Tm(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_234838CC8(uint64_t a1)
{
  _QWORD *v1;

  return sub_23482D0CC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_234838CE4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_23482DEDC(a1, *(void (**)(uint64_t *))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_234838D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersistentIdentifier.ID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_234838D48(uint64_t a1)
{
  destroy for VariableMapping(a1);
  return a1;
}

uint64_t sub_234838D74(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  v5 = *(_OWORD *)(a1 + 64);
  *(_BYTE *)(a2 + 80) = *(_BYTE *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  return a2;
}

uint64_t sub_234838D9C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyRange(a2, a1);
  return a2;
}

void (*sub_234838DD0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_234838E50(v6, a2, a3);
  return sub_234838E24;
}

void sub_234838E24(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_234838E50(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x234945A1C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_234838EBC;
  }
  __break(1u);
  return result;
}

uint64_t sub_234838EBC()
{
  return swift_release();
}

uint64_t sub_234838EC4(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_23487001C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x234945A28](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_234838F80(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v2 = a2;
  v3 = result;
  v4 = a2 >> 62;
  if (a2 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v11 = sub_23487001C();
    result = swift_bridgeObjectRelease();
    v12 = v11 - v3;
    if (__OFSUB__(v11, v3))
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    v13 = sub_23487001C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v14 = sub_23487001C();
    result = swift_bridgeObjectRelease();
    if (v14 < 0)
    {
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= (v12 & ~(v12 >> 63)) || v13 <= -1)
      v16 = v12 & ~(v12 >> 63);
    else
      v16 = v13;
    if (v12 >= 1)
      v7 = v16;
    else
      v7 = v12 & ~(v12 >> 63);
    swift_bridgeObjectRetain();
    v17 = sub_23487001C();
    result = swift_bridgeObjectRelease();
    if (v17 >= v7)
      goto LABEL_10;
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5 >= ((v5 - result) & ~((uint64_t)(v5 - result) >> 63)))
    v6 = (v5 - result) & ~((uint64_t)(v5 - result) >> 63);
  else
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)(v5 - result) >= 1)
    v7 = v6;
  else
    v7 = (v5 - result) & ~((uint64_t)(v5 - result) >> 63);
  if ((uint64_t)v5 < v7)
    goto LABEL_31;
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_23486FD70();
    v8 = 0;
    do
    {
      v9 = v8 + 1;
      sub_23486FEF0();
      v8 = v9;
    }
    while (v7 != v9);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    v10 = sub_234870028();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v10;
}

uint64_t sub_234839144(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *boxed_opaque_existential_0Tm;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19[4];
  __int128 v20;
  uint64_t v21;

  v8 = a1[3];
  v9 = __swift_project_boxed_opaque_existential_0Tm(a1, v8);
  v19[3] = v8;
  boxed_opaque_existential_0Tm = __swift_allocate_boxed_opaque_existential_0Tm(v19);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0Tm, v9, v8);
  sub_23482D0CC(v19, a2, a3, a4, &v20);
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
  if (!v4)
  {
    v12 = v21;
    if (v21)
    {
      v13 = __swift_project_boxed_opaque_existential_0Tm(&v20, v21);
      v14 = *(_QWORD *)(v12 - 8);
      MEMORY[0x24BDAC7A8](v13);
      v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v14 + 16))(v16);
      v17 = sub_2348702D4();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v20);
    }
    else
    {
      v17 = 0;
    }
    v18 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v17);
    swift_unknownObjectRelease();
    return (uint64_t)v18;
  }
  return result;
}

uint64_t sub_2348392A4(uint64_t a1)
{
  destroy for AnyRange(a1);
  return a1;
}

uint64_t sub_2348392D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0Tm(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_234839350(uint64_t a1)
{
  destroy for KeyPathParserResult(a1);
  return a1;
}

unint64_t sub_23483937C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256189A48;
  if (!qword_256189A48)
  {
    v1 = sub_2348394CC(255, &qword_256189A10);
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_256189A48);
  }
  return result;
}

id sub_2348393D4(id result, char a2)
{
  if (a2 != -1)
    return result;
  return result;
}

void sub_2348393E8(id a1, char a2)
{
  if (a2 != -1)

}

uint64_t sub_2348393FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_234839414(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23483942C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_234839444(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_234839414(a1, a2, a3);
  return a1;
}

uint64_t sub_234839458(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23483949C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_2348393FC(a1, a2, a3);
  return a1;
}

uint64_t sub_2348394B0@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23482C248(*(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_2348394CC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_234839504@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_23482C690(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_234839520(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23483955C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256189A50;
  if (!qword_256189A50)
  {
    v1 = sub_23486F740();
    result = MEMORY[0x2349465EC](MEMORY[0x24BDCF9D8], v1);
    atomic_store(result, (unint64_t *)&qword_256189A50);
  }
  return result;
}

uint64_t destroy for SuffixOperation(uint64_t a1)
{
  return sub_234839414(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9SwiftData15SuffixOperationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2348393FC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SuffixOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2348393FC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_234839414(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SuffixOperation(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_234839414(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SuffixOperation(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SuffixOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23483973C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_234839758(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SuffixOperation()
{
  return &type metadata for SuffixOperation;
}

uint64_t destroy for AnyRange(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;

  v1 = a1;
  v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 >= 5)
    v2 = *(_DWORD *)a1 + 5;
  if (v2 <= 1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    v1 += 40;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v1);
}

uint64_t initializeWithCopy for AnyRange(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(unsigned __int8 *)(a2 + 80);
  while (2)
  {
    switch(v4)
    {
      case 0:
        v5 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v5;
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
        v6 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 64) = v6;
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
        v7 = 0;
        break;
      case 1:
        v8 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v8;
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
        v9 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 64) = v9;
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40);
        v7 = 1;
        break;
      case 2:
        v10 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v10;
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1, a2);
        v7 = 2;
        break;
      case 3:
        v11 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v11;
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
        v7 = 3;
        break;
      case 4:
        v12 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v12;
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1, a2);
        v7 = 4;
        break;
      default:
        v4 = *(_DWORD *)a2 + 5;
        continue;
    }
    break;
  }
  *(_BYTE *)(a1 + 80) = v7;
  return a1;
}

uint64_t assignWithCopy for AnyRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a1;
  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 5)
      v4 = *(_DWORD *)a1 + 5;
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
      a1 = v2 + 40;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    v5 = *(unsigned __int8 *)(a2 + 80);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v6;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v2, a2);
          v7 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(v2 + 64) = v7;
          *(_QWORD *)(v2 + 72) = *(_QWORD *)(a2 + 72);
          (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v2 + 40, a2 + 40);
          v8 = 0;
          break;
        case 1:
          v9 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v9;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v2, a2);
          v10 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(v2 + 64) = v10;
          *(_QWORD *)(v2 + 72) = *(_QWORD *)(a2 + 72);
          (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v2 + 40, a2 + 40);
          v8 = 1;
          break;
        case 2:
          v11 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v11;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v2, a2);
          v8 = 2;
          break;
        case 3:
          v12 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v12;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v2, a2);
          v8 = 3;
          break;
        case 4:
          v13 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v13;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v2, a2);
          v8 = 4;
          break;
        default:
          v5 = *(_DWORD *)a2 + 5;
          continue;
      }
      break;
    }
    *(_BYTE *)(v2 + 80) = v8;
  }
  return v2;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AnyRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;
  int v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = a1;
  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 5)
      v4 = *(_DWORD *)a1 + 5;
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
      a1 = v2 + 40;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    v5 = *(unsigned __int8 *)(a2 + 80);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          v7 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(v2 + 48) = v7;
          *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
          v8 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v8;
          break;
        case 1:
          v9 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(v2 + 48) = v9;
          *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
          v10 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v10;
          v6 = 1;
          break;
        case 2:
          v11 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v11;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          v6 = 2;
          break;
        case 3:
          v12 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v12;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          v6 = 3;
          break;
        case 4:
          v13 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v13;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          v6 = 4;
          break;
        default:
          v5 = *(_DWORD *)a2 + 5;
          continue;
      }
      break;
    }
    *(_BYTE *)(v2 + 80) = v6;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for AnyRange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 >= 5)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnyRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = -(char)a2;
  }
  return result;
}

uint64_t sub_234839CA0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 80);
  if (result >= 5)
    return (*(_DWORD *)a1 + 5);
  return result;
}

uint64_t sub_234839CC0(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyRange()
{
  return &type metadata for AnyRange;
}

uint64_t initializeBufferWithCopyOfBuffer for VariableMapping(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for VariableMapping(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 32))
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1 + 8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

_QWORD *initializeWithCopy for VariableMapping(_QWORD *a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  v5 = a1 + 1;
  v6 = a2 + 8;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = v4;
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 40);
    a1[4] = v7;
    a1[5] = v9;
    (**(void (***)(_QWORD *, uint64_t, uint64_t))(v7 - 8))(v5, v6, v7);
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    a1[6] = v10;
    a1[7] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v6;
    *((_OWORD *)v5 + 1) = v12;
    *((_OWORD *)v5 + 2) = *(_OWORD *)(v6 + 32);
    v5[6] = *(_QWORD *)(v6 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for VariableMapping(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = (_OWORD *)(a1 + 8);
  v8 = (__int128 *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_234839350(a1 + 8);
      v11 = *(_OWORD *)(a2 + 24);
      v10 = *(_OWORD *)(a2 + 40);
      v12 = *v8;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v11;
      *(_OWORD *)(a1 + 40) = v10;
      *v7 = v12;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 8, a2 + 8);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *v8;
    v14 = *(_OWORD *)(a2 + 24);
    v15 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v14;
    *(_OWORD *)(a1 + 40) = v15;
    *v7 = v13;
  }
  return a1;
}

uint64_t assignWithTake for VariableMapping(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  void *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;

  v4 = a2 + 1;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v6 = (_OWORD *)(a1 + 8);
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  if (!a2[4])
  {
    sub_234839350(a1 + 8);
LABEL_5:
    v8 = *((_OWORD *)v4 + 1);
    *v6 = *(_OWORD *)v4;
    *(_OWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 40) = *((_OWORD *)v4 + 2);
    *(_QWORD *)(a1 + 56) = v4[6];
    return a1;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 8);
  v7 = *((_OWORD *)v4 + 1);
  *v6 = *(_OWORD *)v4;
  *(_OWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = v4[4];
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VariableMapping(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VariableMapping(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VariableMapping()
{
  return &type metadata for VariableMapping;
}

uint64_t destroy for KeyPathParserResult(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KeyPathParserResult(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for KeyPathParserResult(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for KeyPathParserResult(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyPathParserResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyPathParserResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyPathParserResult()
{
  return &type metadata for KeyPathParserResult;
}

uint64_t sub_23483A274@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_234839504(a1, a2, a3);
}

uint64_t Schema.Entity.properties.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v2 = swift_bridgeObjectRetain();
  sub_23483AF78(v2, (uint64_t (*)(void))sub_23479E190, &qword_254258850);
  return v1;
}

uint64_t sub_23483A318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23479DF78(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258650);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_23483A478(uint64_t a1)
{
  return sub_23483AF78(a1, (uint64_t (*)(void))sub_23479E190, &qword_254258850);
}

uint64_t sub_23483A48C(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23487001C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23487001C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x234945A28](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_234840E04(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_23487001C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23486F8FC();
  }
  __break(1u);
  return result;
}

uint64_t sub_23483A644(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t result;

  v8 = a4 >> 1;
  v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_11;
  v5 = a3;
  v6 = a2;
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_12;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v9;
  if (!__OFADD__(v10, v9))
    goto LABEL_4;
LABEL_14:
  __break(1u);
LABEL_15:
  v13 = 1;
LABEL_16:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_23487001C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v16 <= v11)
    v16 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x234945A28](v13, v16, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v14 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      v15 = sub_23487001C();
      swift_bridgeObjectRelease();
      v11 = v15 + v9;
      if (__OFADD__(v15, v9))
        goto LABEL_14;
LABEL_4:
      v7 = *v4;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v4 = v7;
      v13 = 0;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v7 & 0x8000000000000000) != 0
        || (v7 & 0x4000000000000000) != 0)
      {
        goto LABEL_16;
      }
      v14 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_15;
      if (v8 != v5)
        goto LABEL_21;
    }
    goto LABEL_28;
  }
LABEL_21:
  v17 = *(_QWORD *)(v14 + 16);
  if ((*(_QWORD *)(v14 + 24) >> 1) - v17 < v9)
  {
    __break(1u);
  }
  else
  {
    if (v9 < 0)
      goto LABEL_32;
    v18 = v14 + 8 * v17 + 32;
    v19 = v6 + 8 * v5;
    if (v19 < v18 + 8 * v9 && v18 < v19 + 8 * v9)
      goto LABEL_32;
    sub_23486FD70();
    swift_arrayInitWithCopy();
    if (!v9)
    {
LABEL_28:
      swift_unknownObjectRelease();
      return sub_23486F8FC();
    }
    v20 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = __OFADD__(v20, v9);
    v22 = v20 + v9;
    if (!v21)
    {
      *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_32:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_23483A8C0(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  int64_t v40;
  unint64_t v41;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_23479E084(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_234840654((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_2348436A4();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v3 = v38[0];
  v37 = v38[1];
  v13 = v39;
  v6 = v40;
  if (v41)
  {
    v17 = (v41 - 1) & v41;
    v18 = __clz(__rbit64(v41)) | (v40 << 6);
    v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  v32 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_66;
  v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36)
    goto LABEL_13;
  v33 = *(_QWORD *)(v37 + 8 * v32);
  v34 = v6 + 1;
  if (!v33)
  {
    v34 = v6 + 2;
    if (v6 + 2 >= v36)
      goto LABEL_13;
    v33 = *(_QWORD *)(v37 + 8 * v34);
    if (!v33)
    {
      v34 = v6 + 3;
      if (v6 + 3 >= v36)
        goto LABEL_13;
      v33 = *(_QWORD *)(v37 + 8 * v34);
      if (!v33)
      {
        v34 = v6 + 4;
        if (v6 + 4 >= v36)
          goto LABEL_13;
        v33 = *(_QWORD *)(v37 + 8 * v34);
        if (!v33)
        {
          v34 = v6 + 5;
          if (v6 + 5 >= v36)
            goto LABEL_13;
          v33 = *(_QWORD *)(v37 + 8 * v34);
          if (!v33)
          {
            v35 = v6 + 6;
            do
            {
              if (v36 == v35)
                goto LABEL_13;
              v33 = *(_QWORD *)(v37 + 8 * v35++);
            }
            while (!v33);
            v34 = v35 - 1;
          }
        }
      }
    }
  }
  v17 = (v33 - 1) & v33;
  v18 = __clz(__rbit64(v33)) + (v34 << 6);
  v6 = v34;
LABEL_18:
  v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v18);
  v21 = *v19;
  v20 = v19[1];
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v22 = v4[3];
    v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1)
      break;
    if (v2 < v23)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = (uint64_t)sub_23479E084((_QWORD *)(v22 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v23 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v23)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v24 = &v4[2 * v2 + 4];
    *v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    v27 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v27 >= v36)
      goto LABEL_45;
    v28 = *(_QWORD *)(v37 + 8 * v27);
    v29 = v6 + 1;
    if (!v28)
    {
      v29 = v6 + 2;
      if (v6 + 2 >= v36)
        goto LABEL_45;
      v28 = *(_QWORD *)(v37 + 8 * v29);
      if (!v28)
      {
        v29 = v6 + 3;
        if (v6 + 3 >= v36)
          goto LABEL_45;
        v28 = *(_QWORD *)(v37 + 8 * v29);
        if (!v28)
        {
          v29 = v6 + 4;
          if (v6 + 4 >= v36)
            goto LABEL_45;
          v28 = *(_QWORD *)(v37 + 8 * v29);
          if (!v28)
          {
            v29 = v6 + 5;
            if (v6 + 5 >= v36)
              goto LABEL_45;
            v28 = *(_QWORD *)(v37 + 8 * v29);
            if (!v28)
            {
              v30 = v6 + 6;
              while (v36 != v30)
              {
                v28 = *(_QWORD *)(v37 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v17 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v6 = v29;
LABEL_41:
    v31 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v26);
    v21 = *v31;
    v20 = v31[1];
    if (v2 >= v23)
    {
      result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_23483AC88(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_23479E9C4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189398);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_23483ADFC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_23479EAE4(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for PersistentIdentifier(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_23483AF64(uint64_t a1)
{
  return sub_23483AF78(a1, (uint64_t (*)(void))sub_23479E880, &qword_2561893E0);
}

uint64_t sub_23483AF78(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4)
    goto LABEL_21;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v13 = *(_QWORD *)(v5 + 16);
  v14 = __OFADD__(v13, v4);
  v15 = v13 + v4;
  if (!v14)
  {
    *(_QWORD *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t sub_23483B0EC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  int64_t v37;
  uint64_t v38;
  uint64_t i;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;

  v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23486FDC4();
    type metadata accessor for Schema.Attribute();
    sub_2348436EC(&qword_254258898, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
    sub_23486FA88();
    v2 = v40;
    v38 = v41;
    v4 = v42;
    v5 = v43;
    v6 = v44;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v38 = a2 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v37 = (unint64_t)(v4 + 64) >> 6;
  for (i = v2; ; v2 = i)
  {
    if (v2 < 0)
    {
      if (!sub_23486FE24())
        goto LABEL_44;
      type metadata accessor for Schema.Attribute();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v45;
      swift_unknownObjectRelease();
      v14 = v5;
      v12 = v6;
      if (!v45)
        goto LABEL_44;
    }
    else
    {
      if (v6)
      {
        v12 = (v6 - 1) & v6;
        v13 = __clz(__rbit64(v6)) | (v5 << 6);
        v14 = v5;
      }
      else
      {
        v16 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_47;
        if (v16 >= v37)
          goto LABEL_44;
        v17 = *(_QWORD *)(v38 + 8 * v16);
        v14 = v5 + 1;
        if (!v17)
        {
          v14 = v5 + 2;
          if (v5 + 2 >= v37)
            goto LABEL_44;
          v17 = *(_QWORD *)(v38 + 8 * v14);
          if (!v17)
          {
            v14 = v5 + 3;
            if (v5 + 3 >= v37)
              goto LABEL_44;
            v17 = *(_QWORD *)(v38 + 8 * v14);
            if (!v17)
            {
              v14 = v5 + 4;
              if (v5 + 4 >= v37)
                goto LABEL_44;
              v17 = *(_QWORD *)(v38 + 8 * v14);
              if (!v17)
              {
                v14 = v5 + 5;
                if (v5 + 5 >= v37)
                  goto LABEL_44;
                v17 = *(_QWORD *)(v38 + 8 * v14);
                if (!v17)
                {
                  v18 = v5 + 6;
                  while (v37 != v18)
                  {
                    v17 = *(_QWORD *)(v38 + 8 * v18++);
                    if (v17)
                    {
                      v14 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_2348436A4();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        v12 = (v17 - 1) & v17;
        v13 = __clz(__rbit64(v17)) + (v14 << 6);
      }
      v15 = *(_QWORD **)(*(_QWORD *)(v2 + 48) + 8 * v13);
      swift_retain();
      if (!v15)
        goto LABEL_44;
    }
    swift_beginAccess();
    v20 = v15[2];
    v19 = v15[3];
    swift_bridgeObjectRetain();
    swift_retain();
    v21 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = a1;
    v24 = sub_2347CD9BC(v20, v19);
    v25 = a1[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      break;
    v28 = v23;
    if (v21[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v31 = v45;
        if ((v23 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        sub_2347D6978();
        v31 = v45;
        if ((v28 & 1) != 0)
          goto LABEL_8;
      }
    }
    else
    {
      sub_2347D0708(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_2347CD9BC(v20, v19);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_48;
      v24 = v29;
      v31 = v45;
      if ((v28 & 1) != 0)
      {
LABEL_8:
        a1 = v31;
        v11 = v31[7];
        swift_release();
        *(_QWORD *)(v11 + 8 * v24) = v15;
        goto LABEL_9;
      }
    }
    v31[(v24 >> 6) + 8] |= 1 << v24;
    v32 = (uint64_t *)(v31[6] + 16 * v24);
    *v32 = v20;
    v32[1] = v19;
    *(_QWORD *)(v31[7] + 8 * v24) = v15;
    v33 = v31[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_46;
    a1 = v31;
    v31[2] = v35;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v14;
    v6 = v12;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t sub_23483B518(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  int64_t v37;
  uint64_t v38;
  uint64_t i;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;

  v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23486FDC4();
    type metadata accessor for Schema.Relationship();
    sub_2348436EC((unint64_t *)&qword_2542575D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
    sub_23486FA88();
    v2 = v40;
    v38 = v41;
    v4 = v42;
    v5 = v43;
    v6 = v44;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v38 = a2 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v37 = (unint64_t)(v4 + 64) >> 6;
  for (i = v2; ; v2 = i)
  {
    if (v2 < 0)
    {
      if (!sub_23486FE24())
        goto LABEL_44;
      type metadata accessor for Schema.Relationship();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v45;
      swift_unknownObjectRelease();
      v14 = v5;
      v12 = v6;
      if (!v45)
        goto LABEL_44;
    }
    else
    {
      if (v6)
      {
        v12 = (v6 - 1) & v6;
        v13 = __clz(__rbit64(v6)) | (v5 << 6);
        v14 = v5;
      }
      else
      {
        v16 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_47;
        if (v16 >= v37)
          goto LABEL_44;
        v17 = *(_QWORD *)(v38 + 8 * v16);
        v14 = v5 + 1;
        if (!v17)
        {
          v14 = v5 + 2;
          if (v5 + 2 >= v37)
            goto LABEL_44;
          v17 = *(_QWORD *)(v38 + 8 * v14);
          if (!v17)
          {
            v14 = v5 + 3;
            if (v5 + 3 >= v37)
              goto LABEL_44;
            v17 = *(_QWORD *)(v38 + 8 * v14);
            if (!v17)
            {
              v14 = v5 + 4;
              if (v5 + 4 >= v37)
                goto LABEL_44;
              v17 = *(_QWORD *)(v38 + 8 * v14);
              if (!v17)
              {
                v14 = v5 + 5;
                if (v5 + 5 >= v37)
                  goto LABEL_44;
                v17 = *(_QWORD *)(v38 + 8 * v14);
                if (!v17)
                {
                  v18 = v5 + 6;
                  while (v37 != v18)
                  {
                    v17 = *(_QWORD *)(v38 + 8 * v18++);
                    if (v17)
                    {
                      v14 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_2348436A4();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        v12 = (v17 - 1) & v17;
        v13 = __clz(__rbit64(v17)) + (v14 << 6);
      }
      v15 = *(_QWORD **)(*(_QWORD *)(v2 + 48) + 8 * v13);
      swift_retain();
      if (!v15)
        goto LABEL_44;
    }
    swift_beginAccess();
    v20 = v15[2];
    v19 = v15[3];
    swift_bridgeObjectRetain();
    swift_retain();
    v21 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = a1;
    v24 = sub_2347CD9BC(v20, v19);
    v25 = a1[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      break;
    v28 = v23;
    if (v21[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v31 = v45;
        if ((v23 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        sub_2347D696C();
        v31 = v45;
        if ((v28 & 1) != 0)
          goto LABEL_8;
      }
    }
    else
    {
      sub_2347D06FC(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_2347CD9BC(v20, v19);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_48;
      v24 = v29;
      v31 = v45;
      if ((v28 & 1) != 0)
      {
LABEL_8:
        a1 = v31;
        v11 = v31[7];
        swift_release();
        *(_QWORD *)(v11 + 8 * v24) = v15;
        goto LABEL_9;
      }
    }
    v31[(v24 >> 6) + 8] |= 1 << v24;
    v32 = (uint64_t *)(v31[6] + 16 * v24);
    *v32 = v20;
    v32[1] = v19;
    *(_QWORD *)(v31[7] + 8 * v24) = v15;
    v33 = v31[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_46;
    a1 = v31;
    v31[2] = v35;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v14;
    v6 = v12;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t Schema.Entity.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  Schema.Entity.init(_:)(a1, a2);
  return v4;
}

uint64_t (*Schema.Entity.storedProperties.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23483B9D0;
}

uint64_t sub_23483B9D0(uint64_t a1, char a2)
{
  return sub_23483CEE8(a1, a2, (uint64_t (*)(uint64_t))sub_23483C978);
}

uint64_t Schema.Entity.superentity.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  swift_retain();
  swift_release();
  sub_23483C6F0();
  return swift_release();
}

uint64_t Schema.Entity.debugDescription.getter()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v63;
  int64_t v64;
  unint64_t v65;
  _QWORD v66[5];
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  uint64_t v71;
  unint64_t v72;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_234877EE0;
  v2 = 0xE000000000000000;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = 0x2D20797469746E45;
  *(_QWORD *)(v1 + 40) = 0xEF203A656D616E20;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  v68 = 0x6572657075732020;
  v69 = 0xEF203A797469746ELL;
  swift_beginAccess();
  v63 = v0;
  v3 = v0[7];
  if (v3)
  {
    swift_beginAccess();
    v2 = *(_QWORD *)(v3 + 24);
    swift_bridgeObjectRetain();
  }
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  v4 = v69;
  *(_QWORD *)(v1 + 48) = v68;
  *(_QWORD *)(v1 + 56) = v4;
  strcpy((char *)(v1 + 64), "  subentities:");
  *(_BYTE *)(v1 + 79) = -18;
  swift_beginAccess();
  v5 = v63[4];
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23486FDC4();
    sub_2348436EC(&qword_256189A58, v7, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Entity, (uint64_t)&protocol conformance descriptor for Schema.Entity);
    sub_23486FA88();
    v5 = v68;
    v65 = v69;
    v8 = v70;
    v9 = v71;
    v10 = v72;
  }
  else
  {
    v11 = -1 << *(_BYTE *)(v5 + 32);
    v65 = v5 + 56;
    v6 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(v5 + 56);
    swift_bridgeObjectRetain();
    v8 = v6;
    v9 = 0;
  }
  v64 = (unint64_t)(v8 + 64) >> 6;
  v14 = MEMORY[0x24BEE4AD0] + 8;
  if (v5 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v10)
    {
      v15 = (v10 - 1) & v10;
      v16 = __clz(__rbit64(v10)) | (v9 << 6);
      v17 = v9;
      goto LABEL_29;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_67;
    }
    if (v20 >= v64)
      goto LABEL_34;
    v21 = *(_QWORD *)(v65 + 8 * v20);
    v17 = v9 + 1;
    if (!v21)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v64)
        goto LABEL_34;
      v21 = *(_QWORD *)(v65 + 8 * v17);
      if (!v21)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v64)
          goto LABEL_34;
        v21 = *(_QWORD *)(v65 + 8 * v17);
        if (!v21)
        {
          v17 = v9 + 4;
          if (v9 + 4 >= v64)
            goto LABEL_34;
          v21 = *(_QWORD *)(v65 + 8 * v17);
          if (!v21)
            break;
        }
      }
    }
LABEL_28:
    v15 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_29:
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    swift_retain();
    if (!v19)
      goto LABEL_34;
    while (1)
    {
      v66[0] = 0;
      v66[1] = 0xE000000000000000;
      sub_23486F7DC();
      v67 = v19;
      sub_23486FF74();
      v2 = *(_QWORD *)(v1 + 16);
      v23 = *(_QWORD *)(v1 + 24);
      v6 = v2 + 1;
      if (v2 >= v23 >> 1)
        v1 = (uint64_t)sub_23479E084((_QWORD *)(v23 > 1), v2 + 1, 1, (_QWORD *)v1);
      *(_QWORD *)(v1 + 16) = v6;
      v24 = v1 + 16 * v2;
      *(_QWORD *)(v24 + 32) = 0;
      *(_QWORD *)(v24 + 40) = 0xE000000000000000;
      swift_release();
      v9 = v17;
      v10 = v15;
      if ((v5 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v18 = sub_23486FE24();
      if (v18)
      {
        v67 = v18;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v19 = v66[0];
        swift_unknownObjectRelease();
        v17 = v9;
        v15 = v10;
        if (v66[0])
          continue;
      }
      goto LABEL_34;
    }
  }
  v22 = v9 + 5;
  while (v64 != v22)
  {
    v21 = *(_QWORD *)(v65 + 8 * v22++);
    if (v21)
    {
      v17 = v22 - 1;
      goto LABEL_28;
    }
  }
LABEL_34:
  sub_2348436A4();
  v2 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  v6 = v2 + 1;
  if (v2 < v14 >> 1)
    goto LABEL_35;
LABEL_67:
  v1 = (uint64_t)sub_23479E084((_QWORD *)(v14 > 1), v6, 1, (_QWORD *)v1);
LABEL_35:
  *(_QWORD *)(v1 + 16) = v6;
  v25 = v1 + 16 * v2;
  *(_QWORD *)(v25 + 32) = 0xD000000000000013;
  *(_QWORD *)(v25 + 40) = 0x8000000234875B70;
  swift_beginAccess();
  v26 = v63[8];
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v28 = v26 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_23482B000(v28, (uint64_t)v66);
      sub_23486F7DC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
      sub_23486FF74();
      v30 = *(_QWORD *)(v1 + 16);
      v29 = *(_QWORD *)(v1 + 24);
      if (v30 >= v29 >> 1)
        v1 = (uint64_t)sub_23479E084((_QWORD *)(v29 > 1), v30 + 1, 1, (_QWORD *)v1);
      *(_QWORD *)(v1 + 16) = v30 + 1;
      v31 = v1 + 16 * v30;
      *(_QWORD *)(v31 + 32) = 0;
      *(_QWORD *)(v31 + 40) = 0xE000000000000000;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      v28 += 40;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  v33 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v1 + 24);
  if (v33 >= v32 >> 1)
    v1 = (uint64_t)sub_23479E084((_QWORD *)(v32 > 1), v33 + 1, 1, (_QWORD *)v1);
  *(_QWORD *)(v1 + 16) = v33 + 1;
  v34 = v1 + 16 * v33;
  *(_QWORD *)(v34 + 32) = 0xD000000000000016;
  *(_QWORD *)(v34 + 40) = 0x8000000234875B90;
  swift_beginAccess();
  v35 = v63[9];
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    v37 = v35 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_23482B000(v37, (uint64_t)v66);
      sub_23486F7DC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
      sub_23486FF74();
      v39 = *(_QWORD *)(v1 + 16);
      v38 = *(_QWORD *)(v1 + 24);
      if (v39 >= v38 >> 1)
        v1 = (uint64_t)sub_23479E084((_QWORD *)(v38 > 1), v39 + 1, 1, (_QWORD *)v1);
      *(_QWORD *)(v1 + 16) = v39 + 1;
      v40 = v1 + 16 * v39;
      *(_QWORD *)(v40 + 32) = 0;
      *(_QWORD *)(v40 + 40) = 0xE000000000000000;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      v37 += 40;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
  }
  v42 = *(_QWORD *)(v1 + 16);
  v41 = *(_QWORD *)(v1 + 24);
  if (v42 >= v41 >> 1)
    v1 = (uint64_t)sub_23479E084((_QWORD *)(v41 > 1), v42 + 1, 1, (_QWORD *)v1);
  *(_QWORD *)(v1 + 16) = v42 + 1;
  v43 = v1 + 16 * v42;
  *(_QWORD *)(v43 + 32) = 0xD000000000000018;
  *(_QWORD *)(v43 + 40) = 0x8000000234875BB0;
  swift_beginAccess();
  v44 = *(_QWORD *)(v63[20] + 16);
  if (v44)
  {
    swift_bridgeObjectRetain();
    v45 = 0;
    v46 = MEMORY[0x24BEE0D00];
    do
    {
      v47 = swift_bridgeObjectRetain();
      MEMORY[0x234945404](v47, v46);
      sub_23486F7DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = *(_QWORD *)(v1 + 16);
      v48 = *(_QWORD *)(v1 + 24);
      if (v49 >= v48 >> 1)
        v1 = (uint64_t)sub_23479E084((_QWORD *)(v48 > 1), v49 + 1, 1, (_QWORD *)v1);
      ++v45;
      *(_QWORD *)(v1 + 16) = v49 + 1;
      v50 = v1 + 16 * v49;
      *(_QWORD *)(v50 + 32) = 538976288;
      *(_QWORD *)(v50 + 40) = 0xE400000000000000;
    }
    while (v44 != v45);
    swift_bridgeObjectRelease();
  }
  v52 = *(_QWORD *)(v1 + 16);
  v51 = *(_QWORD *)(v1 + 24);
  if (v52 >= v51 >> 1)
    v1 = (uint64_t)sub_23479E084((_QWORD *)(v51 > 1), v52 + 1, 1, (_QWORD *)v1);
  *(_QWORD *)(v1 + 16) = v52 + 1;
  v53 = v1 + 16 * v52;
  *(_QWORD *)(v53 + 32) = 0x656369646E692020;
  *(_QWORD *)(v53 + 40) = 0xEA00000000003A73;
  swift_beginAccess();
  v54 = *(_QWORD *)(v63[21] + 16);
  if (v54)
  {
    swift_bridgeObjectRetain();
    v55 = 0;
    v56 = MEMORY[0x24BEE0D00];
    do
    {
      v57 = swift_bridgeObjectRetain();
      MEMORY[0x234945404](v57, v56);
      sub_23486F7DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v59 = *(_QWORD *)(v1 + 16);
      v58 = *(_QWORD *)(v1 + 24);
      if (v59 >= v58 >> 1)
        v1 = (uint64_t)sub_23479E084((_QWORD *)(v58 > 1), v59 + 1, 1, (_QWORD *)v1);
      ++v55;
      *(_QWORD *)(v1 + 16) = v59 + 1;
      v60 = v1 + 16 * v59;
      *(_QWORD *)(v60 + 32) = 538976288;
      *(_QWORD *)(v60 + 40) = 0xE400000000000000;
    }
    while (v54 != v55);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258650);
  sub_2348436AC((unint64_t *)&qword_256188750, &qword_254258650, MEMORY[0x24BEE12B0]);
  v61 = sub_23486F6BC();
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t Schema.Entity.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Entity.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t Schema.Entity.subentities.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.subentities.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.subentities.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_1;
}

uint64_t Schema.Entity.superentityName.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Entity.superentityName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.superentityName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_0;
}

uint64_t Schema.Entity.superentity.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_23483C684(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 56) = v2;
  swift_retain_n();
  swift_release();
  sub_23483C6F0();
  return swift_release();
}

uint64_t sub_23483C6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 56);
  swift_beginAccess();
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 64);
    swift_beginAccess();
    v4 = *(_QWORD *)(v2 + 72);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23483AF78(v4, (uint64_t (*)(void))sub_23479E190, &qword_254258850);
    swift_beginAccess();
    *(_QWORD *)(v1 + 72) = v3;
    swift_bridgeObjectRelease();
    sub_23483CC54();
    return swift_release();
  }
  else
  {
    *(_QWORD *)(v0 + 72) = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    return sub_23483CC54();
  }
}

uint64_t Schema.Entity.inheritedProperties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  swift_bridgeObjectRelease();
  return sub_23483CC54();
}

uint64_t (*Schema.Entity.superentity.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23483C890;
}

uint64_t sub_23483C890(uint64_t a1, char a2)
{
  return sub_23483CEE8(a1, a2, (uint64_t (*)(uint64_t))sub_23483C6F0);
}

uint64_t Schema.Entity.storedProperties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23483C8D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 64) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_23483C978();
}

uint64_t Schema.Entity.storedProperties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  swift_bridgeObjectRelease();
  return sub_23483C978();
}

uint64_t sub_23483C978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int128 v26[2];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v1 + 16);
  v25 = v0;
  if (!v2)
  {
    swift_bridgeObjectRetain();
    v4 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_17:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)(v25 + 112) = v4;
    return swift_bridgeObjectRelease();
  }
  v3 = v1 + 32;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    sub_23482B000(v3, (uint64_t)v27);
    v6 = v28;
    v7 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    v10 = v9;
    sub_23482B000((uint64_t)v27, (uint64_t)v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = sub_2347CD9BC(v8, v10);
    v14 = v4[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      break;
    v17 = v12;
    if (v4[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v12 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2347D6784();
        if ((v17 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2347D03D8(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_2347CD9BC(v8, v10);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_20;
      v13 = v18;
      if ((v17 & 1) != 0)
      {
LABEL_3:
        v5 = v4[7] + 40 * v13;
        __swift_destroy_boxed_opaque_existential_1(v5);
        sub_2347DDCCC(v26, v5);
        goto LABEL_4;
      }
    }
    v4[(v13 >> 6) + 8] |= 1 << v13;
    v20 = (uint64_t *)(v4[6] + 16 * v13);
    *v20 = v8;
    v20[1] = v10;
    sub_2347DDCCC(v26, v4[7] + 40 * v13);
    v21 = v4[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_19;
    v4[2] = v23;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    v3 += 40;
    if (!--v2)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t Schema.Entity.inheritedProperties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23483CBF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 72) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_23483CC54();
}

uint64_t sub_23483CC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int128 v26[2];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v1 + 16);
  v25 = v0;
  if (!v2)
  {
    swift_bridgeObjectRetain();
    v4 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_17:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)(v25 + 120) = v4;
    return swift_bridgeObjectRelease();
  }
  v3 = v1 + 32;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    sub_23482B000(v3, (uint64_t)v27);
    v6 = v28;
    v7 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    v10 = v9;
    sub_23482B000((uint64_t)v27, (uint64_t)v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = sub_2347CD9BC(v8, v10);
    v14 = v4[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      break;
    v17 = v12;
    if (v4[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v12 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2347D6784();
        if ((v17 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2347D03D8(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_2347CD9BC(v8, v10);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_20;
      v13 = v18;
      if ((v17 & 1) != 0)
      {
LABEL_3:
        v5 = v4[7] + 40 * v13;
        __swift_destroy_boxed_opaque_existential_1(v5);
        sub_2347DDCCC(v26, v5);
        goto LABEL_4;
      }
    }
    v4[(v13 >> 6) + 8] |= 1 << v13;
    v20 = (uint64_t *)(v4[6] + 16 * v13);
    *v20 = v8;
    v20[1] = v10;
    sub_2347DDCCC(v26, v4[7] + 40 * v13);
    v21 = v4[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_19;
    v4[2] = v23;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    v3 += 40;
    if (!--v2)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t (*Schema.Entity.inheritedProperties.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23483CEDC;
}

uint64_t sub_23483CEDC(uint64_t a1, char a2)
{
  return sub_23483CEE8(a1, a2, (uint64_t (*)(uint64_t))sub_23483CC54);
}

uint64_t sub_23483CEE8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

uint64_t Schema.Entity.attributes.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.attributes.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.attributes.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t Schema.Entity.relationships.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.relationships.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.relationships.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_2;
}

uint64_t Schema.Entity.attributesByName.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.attributesByName.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.attributesByName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_3;
}

uint64_t Schema.Entity.relationshipsByName.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.relationshipsByName.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 104) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.relationshipsByName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_4;
}

uint64_t Schema.Entity.storedPropertiesByName.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.storedPropertiesByName.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.storedPropertiesByName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_5;
}

uint64_t Schema.Entity.inheritedPropertiesByName.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.inheritedPropertiesByName.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.inheritedPropertiesByName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_6;
}

uint64_t Schema.Entity.uniquenessConstraints.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.uniquenessConstraints.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 160) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.uniquenessConstraints.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_7;
}

uint64_t Schema.Entity.indices.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Entity.indices.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 168) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Entity.indices.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0_8;
}

BOOL sub_23483D4C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23483D4DC()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23483D520()
{
  return sub_234870490();
}

uint64_t sub_23483D548()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23483D588()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23483D5B0
                                                            + 4 * asc_23487BA28[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_23483D5B0()
{
  return 0x7469746E65627573;
}

uint64_t sub_23483D5D0()
{
  return 0x746E657265707573;
}

uint64_t sub_23483D5F4()
{
  return 0x7475626972747461;
}

uint64_t sub_23483D610()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_23483D634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_234843090(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23483D658()
{
  return 0;
}

void sub_23483D664(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23483D670()
{
  sub_2348429C0();
  return sub_234870544();
}

uint64_t sub_23483D698()
{
  sub_2348429C0();
  return sub_234870550();
}

uint64_t Schema.Entity.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(v2 + 176) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v3 = MEMORY[0x24BEE4B08];
  v4 = MEMORY[0x24BEE4AF8];
  v5 = MEMORY[0x24BEE4B08];
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_23487001C())
      v5 = sub_2348412D4(MEMORY[0x24BEE4AF8]);
    else
      v5 = MEMORY[0x24BEE4B08];
  }
  *(_QWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 112) = sub_2347EB490(v4);
  *(_QWORD *)(v2 + 72) = v4;
  *(_QWORD *)(v2 + 120) = sub_2347EB490(v4);
  if ((v4 & 0xC000000000000000) != 0)
  {
    v6 = MEMORY[0x24BEE4AF8];
    if (sub_23487001C())
      v7 = sub_234841680(MEMORY[0x24BEE4AF8]);
    else
      v7 = MEMORY[0x24BEE4B08];
    *(_QWORD *)(v2 + 80) = v7;
    *(_QWORD *)(v2 + 96) = sub_2347EB5D0(v6);
    if ((v6 & 0xC000000000000000) != 0 && sub_23487001C())
      v3 = sub_234841CE8(MEMORY[0x24BEE4AF8]);
    else
      v3 = MEMORY[0x24BEE4B08];
  }
  else
  {
    *(_QWORD *)(v2 + 80) = v3;
    *(_QWORD *)(v2 + 96) = sub_2347EB5D0(MEMORY[0x24BEE4AF8]);
  }
  *(_QWORD *)(v2 + 88) = v3;
  *(_QWORD *)(v2 + 104) = sub_2347EB5DC(v4);
  *(_QWORD *)(v2 + 160) = v4;
  *(_QWORD *)(v2 + 168) = v4;
  return v2;
}

uint64_t type metadata accessor for Schema.Entity()
{
  return objc_opt_self();
}

uint64_t Schema.Entity.__allocating_init(_:subentities:properties:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  Schema.Entity.init(_:subentities:properties:)(a1, a2, a3, a4);
  return v8;
}

uint64_t Schema.Entity.init(_:subentities:properties:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57[2];
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4[22] = 0;
  v4[6] = 0;
  v4[7] = 0;
  v4[5] = 0;
  *((_OWORD *)v4 + 8) = 0u;
  *((_OWORD *)v4 + 9) = 0u;
  v4[2] = a1;
  v4[3] = a2;
  v6 = sub_234842868(a3);
  v7 = a4;
  swift_bridgeObjectRelease();
  v4[4] = v6;
  v8 = MEMORY[0x24BEE4B08];
  v4[8] = a4;
  v61 = v8;
  v62 = v8;
  v9 = *(_QWORD *)(a4 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (!v9)
  {
    v4[10] = v8;
    v4[11] = v8;
    v4[20] = v10;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = (_QWORD *)MEMORY[0x24BEE4B00];
    v49 = v8;
LABEL_41:
    swift_bridgeObjectRelease();
    v4[14] = v29;
    swift_bridgeObjectRetain();
    v50 = (_QWORD *)MEMORY[0x24BEE4B00];
    v51 = sub_23483B0EC(MEMORY[0x24BEE4B00], v49);
    swift_bridgeObjectRelease();
    v4[12] = v51;
    swift_bridgeObjectRetain();
    v52 = sub_23483B518(v50, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v4[13] = v52;
    v4[9] = v10;
    v4[15] = sub_2347EB490(v10);
    v4[21] = v10;
    return (uint64_t)v4;
  }
  v54 = v4;
  v11 = a4 + 32;
  swift_bridgeObjectRetain_n();
  v12 = 0;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v55 = v7;
  while (v12 < *(_QWORD *)(v7 + 16))
  {
    sub_23482B000(v11 + 40 * v12, (uint64_t)v58);
    sub_23482B000((uint64_t)v58, (uint64_t)v57);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
    type metadata accessor for Schema.Attribute();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v14 = v56;
      swift_retain();
      sub_23479F834(v57, (_QWORD *)v56);
      swift_release();
      swift_beginAccess();
      v15 = *(_QWORD *)(v56 + 48);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v17 = (_BYTE *)(v15 + 64);
        while ((*v17 & 1) == 0)
        {
          v17 += 40;
          if (!--v16)
            goto LABEL_3;
        }
LABEL_20:
        __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_234877ED0;
        swift_beginAccess();
        v22 = *(_QWORD *)(v14 + 24);
        *(_QWORD *)(v21 + 32) = *(_QWORD *)(v14 + 16);
        *(_QWORD *)(v21 + 40) = v22;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_23479DF78(0, v13[2] + 1, 1, v13);
        v23 = v13;
        v24 = v13[2];
        v25 = v23;
        v26 = v23[3];
        if (v24 >= v26 >> 1)
          v25 = sub_23479DF78((_QWORD *)(v26 > 1), v24 + 1, 1, v25);
        v25[2] = v24 + 1;
        v27 = &v25[v24];
        v13 = v25;
        v27[4] = v21;
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
        v7 = v55;
        goto LABEL_4;
      }
    }
    else
    {
      sub_23482B000((uint64_t)v58, (uint64_t)v57);
      type metadata accessor for Schema.Relationship();
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_45;
      v14 = v56;
      swift_retain();
      sub_23479F214(v57, (_QWORD *)v56);
      swift_release();
      swift_beginAccess();
      v18 = *(_QWORD *)(v56 + 56);
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v20 = (_BYTE *)(v18 + 32);
        while ((*v20 & 1) == 0)
        {
          ++v20;
          if (!--v19)
            goto LABEL_3;
        }
        if (*(_BYTE *)(v56 + 168) == 1)
          goto LABEL_20;
      }
    }
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    swift_release();
LABEL_4:
    if (++v12 == v9)
    {
      swift_bridgeObjectRelease();
      v28 = v61;
      v54[10] = v62;
      v54[11] = v28;
      v54[20] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = (_QWORD *)MEMORY[0x24BEE4B00];
      while (1)
      {
        sub_23482B000(v11, (uint64_t)v58);
        v31 = v59;
        v32 = v60;
        __swift_project_boxed_opaque_existential_1(v58, v59);
        v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
        v35 = v34;
        sub_23482B000((uint64_t)v58, (uint64_t)v57);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v38 = sub_2347CD9BC(v33, v35);
        v39 = v29[2];
        v40 = (v37 & 1) == 0;
        v41 = v39 + v40;
        if (__OFADD__(v39, v40))
          goto LABEL_43;
        v42 = v37;
        if (v29[3] >= v41)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v37 & 1) == 0)
              goto LABEL_35;
          }
          else
          {
            sub_2347D6784();
            if ((v42 & 1) == 0)
              goto LABEL_35;
          }
        }
        else
        {
          sub_2347D03D8(v41, isUniquelyReferenced_nonNull_native);
          v43 = sub_2347CD9BC(v33, v35);
          if ((v42 & 1) != (v44 & 1))
            goto LABEL_46;
          v38 = v43;
          if ((v42 & 1) == 0)
          {
LABEL_35:
            v29[(v38 >> 6) + 8] |= 1 << v38;
            v45 = (uint64_t *)(v29[6] + 16 * v38);
            *v45 = v33;
            v45[1] = v35;
            sub_2347DDCCC(v57, v29[7] + 40 * v38);
            v46 = v29[2];
            v47 = __OFADD__(v46, 1);
            v48 = v46 + 1;
            if (v47)
              goto LABEL_44;
            v29[2] = v48;
            swift_bridgeObjectRetain();
            goto LABEL_27;
          }
        }
        v30 = v29[7] + 40 * v38;
        __swift_destroy_boxed_opaque_existential_1(v30);
        sub_2347DDCCC(v57, v30);
LABEL_27:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
        v11 += 40;
        if (!--v9)
        {
          swift_bridgeObjectRelease();
          v8 = v61;
          v49 = v62;
          v4 = v54;
          v10 = MEMORY[0x24BEE4AF8];
          goto LABEL_41;
        }
      }
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  sub_234870004();
  __break(1u);
LABEL_46:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t Schema.Entity.__allocating_init(_:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  Schema.Entity.init(_:properties:)(a1, a2, a3);
  return v6;
}

uint64_t Schema.Entity.init(_:properties:)(uint64_t a1, uint64_t a2, uint64_t isUniquelyReferenced_nonNull_native)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t *v48;
  uint64_t v49;
  _QWORD *v50;
  __int128 v51[2];
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v3[22] = 0;
  v3[6] = 0;
  v3[7] = 0;
  v3[5] = 0;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  v3[2] = a1;
  v3[3] = a2;
  v5 = MEMORY[0x24BEE4B08];
  v6 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v7 = MEMORY[0x24BEE4B08];
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
    goto LABEL_46;
  while (1)
  {
    v3[4] = v7;
    v3[8] = isUniquelyReferenced_nonNull_native;
    v55 = v5;
    v56 = v5;
    v8 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    if (!v8)
      break;
    v48 = v3;
    v9 = isUniquelyReferenced_nonNull_native + 32;
    swift_bridgeObjectRetain_n();
    v10 = 0;
    v5 = MEMORY[0x24BEE4AF8];
    v6 = &qword_254258958;
    v49 = isUniquelyReferenced_nonNull_native;
    while (v10 < *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16))
    {
      sub_23482B000(v9 + 40 * v10, (uint64_t)v52);
      sub_23482B000((uint64_t)v52, (uint64_t)v51);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
      type metadata accessor for Schema.Attribute();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v11 = v50;
        swift_retain();
        v3 = &v56;
        sub_23479F834(v51, v11);
        swift_release();
        swift_beginAccess();
        v12 = v11[6];
        v13 = *(_QWORD *)(v12 + 16);
        if (v13)
        {
          v14 = (_BYTE *)(v12 + 64);
          while ((*v14 & 1) == 0)
          {
            v14 += 40;
            if (!--v13)
              goto LABEL_4;
          }
LABEL_21:
          __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
          v3 = (uint64_t *)swift_allocObject();
          *((_OWORD *)v3 + 1) = xmmword_234877ED0;
          swift_beginAccess();
          v18 = v11[3];
          v3[4] = v11[2];
          v3[5] = v18;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v5 = (uint64_t)sub_23479DF78(0, *(_QWORD *)(v5 + 16) + 1, 1, (_QWORD *)v5);
          v19 = (_QWORD *)v5;
          v20 = *(_QWORD *)(v5 + 16);
          v21 = v19;
          v22 = v19[3];
          if (v20 >= v22 >> 1)
            v21 = sub_23479DF78((_QWORD *)(v22 > 1), v20 + 1, 1, v21);
          v21[2] = v20 + 1;
          v23 = &v21[v20];
          v5 = (uint64_t)v21;
          v23[4] = v3;
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
          isUniquelyReferenced_nonNull_native = v49;
          goto LABEL_5;
        }
      }
      else
      {
        sub_23482B000((uint64_t)v52, (uint64_t)v51);
        type metadata accessor for Schema.Relationship();
        if ((swift_dynamicCast() & 1) == 0)
        {
          sub_234870004();
          __break(1u);
LABEL_50:
          result = sub_234870424();
          __break(1u);
          return result;
        }
        v11 = v50;
        swift_retain();
        v3 = &v55;
        sub_23479F214(v51, v11);
        swift_release();
        swift_beginAccess();
        v15 = v11[7];
        v16 = *(_QWORD *)(v15 + 16);
        if (v16)
        {
          v17 = (_BYTE *)(v15 + 32);
          while ((*v17 & 1) == 0)
          {
            ++v17;
            if (!--v16)
              goto LABEL_4;
          }
          if (*((_BYTE *)v11 + 168) == 1)
            goto LABEL_21;
        }
      }
LABEL_4:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      swift_release();
LABEL_5:
      if (++v10 == v8)
      {
        swift_bridgeObjectRelease();
        v24 = v55;
        v48[10] = v56;
        v48[11] = v24;
        v48[20] = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = (_QWORD *)MEMORY[0x24BEE4B00];
        v5 = 40;
        while (1)
        {
          sub_23482B000(v9, (uint64_t)v52);
          v27 = v53;
          v28 = v54;
          __swift_project_boxed_opaque_existential_1(v52, v53);
          v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 32))(v27, v28);
          v6 = v30;
          sub_23482B000((uint64_t)v52, (uint64_t)v51);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v50 = v25;
          v3 = v25;
          v32 = sub_2347CD9BC(v29, (uint64_t)v6);
          v33 = v25[2];
          v34 = (v31 & 1) == 0;
          v35 = v33 + v34;
          if (__OFADD__(v33, v34))
            goto LABEL_44;
          v36 = v31;
          if (v25[3] >= v35)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v25 = v50;
              if ((v31 & 1) == 0)
                goto LABEL_36;
            }
            else
            {
              v3 = (uint64_t *)&v50;
              sub_2347D6784();
              v25 = v50;
              if ((v36 & 1) == 0)
                goto LABEL_36;
            }
          }
          else
          {
            sub_2347D03D8(v35, isUniquelyReferenced_nonNull_native);
            v3 = v50;
            v37 = sub_2347CD9BC(v29, (uint64_t)v6);
            if ((v36 & 1) != (v38 & 1))
              goto LABEL_50;
            v32 = v37;
            v25 = v50;
            if ((v36 & 1) == 0)
            {
LABEL_36:
              v25[(v32 >> 6) + 8] |= 1 << v32;
              v39 = (uint64_t *)(v25[6] + 16 * v32);
              *v39 = v29;
              v39[1] = (uint64_t)v6;
              sub_2347DDCCC(v51, v25[7] + 40 * v32);
              v40 = v25[2];
              v41 = __OFADD__(v40, 1);
              v42 = v40 + 1;
              if (v41)
                goto LABEL_45;
              v25[2] = v42;
              swift_bridgeObjectRetain();
              goto LABEL_28;
            }
          }
          v26 = v25[7] + 40 * v32;
          __swift_destroy_boxed_opaque_existential_1(v26);
          sub_2347DDCCC(v51, v26);
LABEL_28:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
          v9 += 40;
          if (!--v8)
          {
            swift_bridgeObjectRelease();
            v5 = v55;
            v43 = v56;
            v3 = v48;
            v6 = (uint64_t *)MEMORY[0x24BEE4AF8];
            goto LABEL_42;
          }
        }
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    if (sub_23487001C())
      v7 = sub_2348412D4(MEMORY[0x24BEE4AF8]);
    else
      v7 = MEMORY[0x24BEE4B08];
  }
  v3[10] = v5;
  v3[11] = v5;
  v3[20] = (uint64_t)v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = (_QWORD *)MEMORY[0x24BEE4B00];
  v43 = v5;
LABEL_42:
  swift_bridgeObjectRelease();
  v3[14] = (uint64_t)v25;
  swift_bridgeObjectRetain();
  v44 = (_QWORD *)MEMORY[0x24BEE4B00];
  v45 = sub_23483B0EC(MEMORY[0x24BEE4B00], v43);
  swift_bridgeObjectRelease();
  v3[12] = v45;
  swift_bridgeObjectRetain();
  v46 = sub_23483B518(v44, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v3[13] = v46;
  v3[9] = (uint64_t)v6;
  v3[15] = sub_2347EB490((uint64_t)v6);
  v3[21] = (uint64_t)v6;
  return (uint64_t)v3;
}

uint64_t Schema.Entity.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Schema.Entity.init(from:)(a1);
  return v2;
}

uint64_t Schema.Entity.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  _QWORD *v78;
  __int128 v79[2];
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;

  v3 = v1;
  *(_QWORD *)&v77 = *(_QWORD *)v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189A60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 176) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  v9 = a1[3];
  v78 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2348429C0();
  sub_2348704FC();
  if (v2)
  {
    v11 = (uint64_t)v78;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    v12 = v11;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1(v12);
    return v3;
  }
  v76 = v6;
  LOBYTE(v80[0]) = 0;
  *(_QWORD *)(v3 + 16) = sub_234870160();
  *(_QWORD *)(v3 + 24) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189A70);
  LOBYTE(v79[0]) = 1;
  sub_234842A04();
  sub_234870184();
  *(_QWORD *)(v3 + 32) = v80[0];
  LOBYTE(v80[0]) = 2;
  v14 = sub_2348700AC();
  v16 = v15;
  swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v14;
  *(_QWORD *)(v3 + 48) = v16;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189A80);
  LOBYTE(v79[0]) = 3;
  sub_234842A80();
  sub_234870184();
  v17 = v8;
  *(_QWORD *)(v3 + 80) = v80[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189A90);
  LOBYTE(v79[0]) = 4;
  sub_234842B00();
  sub_234870184();
  v74 = v5;
  *(_QWORD *)(v3 + 88) = v80[0];
  swift_beginAccess();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_234826D68(v18);
  swift_bridgeObjectRelease();
  v20 = sub_2347ECC9C(v19);
  swift_release();
  swift_beginAccess();
  v21 = swift_bridgeObjectRetain();
  v22 = sub_234826D5C(v21);
  swift_bridgeObjectRelease();
  v23 = sub_2347ECCB8(v22);
  swift_release();
  v80[0] = v20;
  sub_23483AF78(v23, (uint64_t (*)(void))sub_23479E190, &qword_254258850);
  v24 = (_QWORD *)v80[0];
  *(_QWORD *)(v3 + 64) = v80[0];
  v25 = v24[2];
  v26 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v75 = v17;
  if (v25)
  {
    v72 = v3 + 64;
    v27 = (uint64_t)(v24 + 4);
    v73 = v24;
    swift_bridgeObjectRetain();
    v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v77 = xmmword_234877ED0;
    do
    {
      sub_23482B000(v27, (uint64_t)v80);
      v29 = v81;
      v30 = v82;
      __swift_project_boxed_opaque_existential_1(v80, v81);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v30 + 136))(v29, v30) & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = v77;
        v32 = v81;
        v33 = v82;
        __swift_project_boxed_opaque_existential_1(v80, v81);
        *(_QWORD *)(v31 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
        *(_QWORD *)(v31 + 40) = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28 = sub_23479DF78(0, v28[2] + 1, 1, v28);
        v35 = v28;
        v37 = v28[2];
        v36 = v28[3];
        v17 = v75;
        if (v37 >= v36 >> 1)
          v35 = sub_23479DF78((_QWORD *)(v36 > 1), v37 + 1, 1, v28);
        v35[2] = v37 + 1;
        v28 = v35;
        v35[v37 + 4] = v31;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
      v27 += 40;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    v26 = v28;
  }
  *(_QWORD *)(v3 + 160) = v26;
  swift_beginAccess();
  v38 = *(_QWORD *)(v3 + 64);
  v39 = *(_QWORD *)(v38 + 16);
  v73 = v26;
  v72 = v38;
  if (!v39)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_29:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 112) = v41;
    v65 = *(_QWORD *)(v3 + 80);
    swift_bridgeObjectRetain();
    v66 = (_QWORD *)MEMORY[0x24BEE4B00];
    v67 = sub_23483B0EC(MEMORY[0x24BEE4B00], v65);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 96) = v67;
    v68 = *(_QWORD *)(v3 + 88);
    swift_bridgeObjectRetain();
    v69 = sub_23483B518(v66, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 104) = v69;
    v70 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v3 + 72) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v3 + 120) = sub_2347EB490(v70);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v17, v74);
    *(_QWORD *)(v3 + 168) = v70;
    v12 = (uint64_t)v78;
    goto LABEL_4;
  }
  v40 = v38 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    *(_QWORD *)&v77 = v40;
    sub_23482B000(v40, (uint64_t)v80);
    v44 = v81;
    v45 = v82;
    __swift_project_boxed_opaque_existential_1(v80, v81);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 32))(v44, v45);
    v48 = v47;
    sub_23482B000((uint64_t)v80, (uint64_t)v79);
    v49 = v41;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v83 = v41;
    v51 = v46;
    v53 = sub_2347CD9BC(v46, v48);
    v54 = v41[2];
    v55 = (v52 & 1) == 0;
    v56 = v54 + v55;
    if (__OFADD__(v54, v55))
      break;
    v57 = v52;
    if (v49[3] >= v56)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2347D6784();
    }
    else
    {
      sub_2347D03D8(v56, isUniquelyReferenced_nonNull_native);
      v58 = sub_2347CD9BC(v51, v48);
      if ((v57 & 1) != (v59 & 1))
        goto LABEL_32;
      v53 = v58;
    }
    v17 = v75;
    v60 = v83;
    if ((v57 & 1) != 0)
    {
      v41 = v83;
      v42 = v83[7] + 40 * v53;
      __swift_destroy_boxed_opaque_existential_1(v42);
      sub_2347DDCCC(v79, v42);
    }
    else
    {
      v83[(v53 >> 6) + 8] |= 1 << v53;
      v61 = (uint64_t *)(v60[6] + 16 * v53);
      *v61 = v51;
      v61[1] = v48;
      sub_2347DDCCC(v79, v60[7] + 40 * v53);
      v62 = v60[2];
      v63 = __OFADD__(v62, 1);
      v64 = v62 + 1;
      if (v63)
        goto LABEL_31;
      v41 = v60;
      v60[2] = v64;
      swift_bridgeObjectRetain();
    }
    v43 = v77;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    v40 = v43 + 40;
    if (!--v39)
      goto LABEL_29;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = sub_234870424();
  __break(1u);
  return result;
}

uint64_t Schema.Entity.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189AA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2348429C0();
  sub_234870508();
  swift_beginAccess();
  v15 = 0;
  swift_bridgeObjectRetain();
  sub_2348701C0();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v14 = v3[4];
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189A70);
    sub_234842B80();
    sub_234870208();
    swift_beginAccess();
    v13 = 2;
    swift_bridgeObjectRetain();
    sub_2348701B4();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v12 = v3[10];
    LOBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189A80);
    sub_234842BFC();
    sub_234870208();
    swift_beginAccess();
    v11 = v3[11];
    v10[15] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189A90);
    sub_234842C7C();
    sub_234870208();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t Schema.Entity.hash(into:)()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Entity.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 56) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v2 = *(_QWORD *)(v1 + 56);
      swift_retain();
      swift_release();
      v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t Schema.Entity.__deallocating_deinit()
{
  Schema.Entity.deinit();
  return swift_deallocClassInstance();
}

uint64_t Schema.Entity.hashValue.getter()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

uint64_t sub_23483F2F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = Schema.Entity.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_23483F344(_QWORD *a1)
{
  return Schema.Entity.encode(to:)(a1);
}

uint64_t sub_23483F364()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

uint64_t sub_23483F3D4()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23483F43C()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

uint64_t sub_23483F4A8()
{
  return Schema.Entity.debugDescription.getter();
}

uint64_t sub_23483F4C8(_QWORD **a1, _QWORD **a2)
{
  return _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t sub_23483F4D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t j;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
      return sub_23486FE18();
    v8 = sub_2348402DC(v5, a2);
    return v8 & 1;
  }
  if (v4)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    v8 = sub_2348402DC(v7, a1);
    return v8 & 1;
  }
  if (a1 == a2)
  {
LABEL_46:
    v8 = 1;
    return v8 & 1;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
LABEL_48:
    v8 = 0;
    return v8 & 1;
  }
  v9 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(a1 + 56);
  result = type metadata accessor for Schema.Entity();
  v13 = 0;
  v32 = (unint64_t)(v10 + 63) >> 6;
  v14 = a2 + 56;
  if (!v12)
    goto LABEL_20;
LABEL_19:
  v33 = (v12 - 1) & v12;
  v34 = v13;
  for (i = __clz(__rbit64(v12)) | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i);
    sub_234870484();
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23486F7AC();
    swift_bridgeObjectRelease();
    v21 = sub_2348704B4();
    v22 = -1 << *(_BYTE *)(a2 + 32);
    v23 = v21 & ~v22;
    if (((*(_QWORD *)(v14 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      goto LABEL_47;
    v24 = swift_retain();
    v25 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v24, v20);
    swift_release();
    if ((v25 & 1) == 0)
    {
      v26 = v9;
      v27 = ~v22;
      for (j = v23 + 1; ; j = v29 + 1)
      {
        v29 = j & v27;
        if (((*(_QWORD *)(v14 + (((j & v27) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v27)) & 1) == 0)
          break;
        v30 = swift_retain();
        v31 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v30, v20);
        swift_release();
        if ((v31 & 1) != 0)
        {
          result = swift_release();
          v9 = v26;
          goto LABEL_44;
        }
      }
LABEL_47:
      swift_release();
      goto LABEL_48;
    }
    result = swift_release();
LABEL_44:
    v12 = v33;
    v13 = v34;
    if (v33)
      goto LABEL_19;
LABEL_20:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v16 >= v32)
      goto LABEL_46;
    v17 = *(_QWORD *)(v9 + 8 * v16);
    v18 = v13 + 1;
    if (!v17)
    {
      v18 = v13 + 2;
      if (v13 + 2 >= v32)
        goto LABEL_46;
      v17 = *(_QWORD *)(v9 + 8 * v18);
      if (!v17)
      {
        v18 = v13 + 3;
        if (v13 + 3 >= v32)
          goto LABEL_46;
        v17 = *(_QWORD *)(v9 + 8 * v18);
        if (!v17)
        {
          v18 = v13 + 4;
          if (v13 + 4 >= v32)
            goto LABEL_46;
          v17 = *(_QWORD *)(v9 + 8 * v18);
          if (!v17)
            break;
        }
      }
    }
LABEL_35:
    v33 = (v17 - 1) & v17;
    v34 = v18;
  }
  v19 = v13 + 5;
  if (v13 + 5 >= v32)
    goto LABEL_46;
  v17 = *(_QWORD *)(v9 + 8 * v19);
  if (v17)
  {
    v18 = v13 + 5;
    goto LABEL_35;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v32)
      goto LABEL_46;
    v17 = *(_QWORD *)(v9 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_35;
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_23483F808(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;

  v3 = result;
  v4 = a2 & 0xC000000000000001;
  if ((result & 0xC000000000000001) != 0)
  {
    if (result < 0)
      v5 = result;
    else
      v5 = result & 0xFFFFFFFFFFFFFF8;
    if (!v4)
    {
      v7 = sub_2348402DC(v5, a2);
      return v7 & 1;
    }
    return sub_23486FE18();
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = sub_2348402DC(v6, v3);
    return v7 & 1;
  }
  if (result == a2)
    goto LABEL_67;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    goto LABEL_69;
  v8 = 0;
  v9 = result + 56;
  v10 = 1 << *(_BYTE *)(result + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(result + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v43 = a2 + 56;
  v38 = v13;
  v39 = result + 56;
  if (v12)
    goto LABEL_19;
LABEL_21:
  v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_72;
  }
  if (v17 >= v13)
  {
LABEL_67:
    v7 = 1;
    return v7 & 1;
  }
  v18 = *(_QWORD *)(v9 + 8 * v17);
  ++v8;
  if (!v18)
  {
    v8 = v17 + 1;
    if (v17 + 1 >= v13)
      goto LABEL_67;
    v18 = *(_QWORD *)(v9 + 8 * v8);
    if (!v18)
    {
      v8 = v17 + 2;
      if (v17 + 2 >= v13)
        goto LABEL_67;
      v18 = *(_QWORD *)(v9 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 3;
        if (v17 + 3 >= v13)
          goto LABEL_67;
        v18 = *(_QWORD *)(v9 + 8 * v8);
        if (!v18)
        {
          v19 = v17 + 4;
          if (v19 < v13)
          {
            v18 = *(_QWORD *)(v9 + 8 * v19);
            if (v18)
            {
              v8 = v19;
              goto LABEL_36;
            }
            while (1)
            {
              v8 = v19 + 1;
              if (__OFADD__(v19, 1))
                break;
              if (v8 >= v13)
                goto LABEL_67;
              v18 = *(_QWORD *)(v9 + 8 * v8);
              ++v19;
              if (v18)
                goto LABEL_36;
            }
LABEL_72:
            __break(1u);
            return result;
          }
          goto LABEL_67;
        }
      }
    }
  }
LABEL_36:
  v15 = (v18 - 1) & v18;
  for (i = __clz(__rbit64(v18)) + (v8 << 6); ; i = v14 | (v8 << 6))
  {
    v20 = *(_QWORD **)(*(_QWORD *)(v3 + 48) + 8 * i);
    sub_234870484();
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23486F7AC();
    swift_bridgeObjectRelease();
    v21 = sub_2348704B4();
    v22 = -1 << *(_BYTE *)(a2 + 32);
    v23 = v21 & ~v22;
    if (((*(_QWORD *)(v43 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      break;
    v40 = v15;
    v41 = v8;
    v24 = ~v22;
    v25 = *(_QWORD *)(a2 + 48);
    v42 = v20 + 6;
    swift_beginAccess();
    swift_beginAccess();
    while (1)
    {
      v26 = *(_QWORD **)(v25 + 8 * v23);
      swift_beginAccess();
      v27 = v26[2] == v20[2] && v26[3] == v20[3];
      if (v27 || (sub_2348702E0() & 1) != 0)
      {
        swift_beginAccess();
        v28 = v26[6];
        v29 = *v42;
        v30 = *(_QWORD *)(v28 + 16);
        if (v30 == *(_QWORD *)(*v42 + 16))
        {
          if (v30)
            v31 = v28 == v29;
          else
            v31 = 1;
          if (!v31)
          {
            v32 = (unsigned __int8 *)(v28 + 68);
            v33 = (unsigned __int8 *)(v29 + 68);
            while (*(v32 - 4) == *(v33 - 4))
            {
              if (((*(v32 - 2) ^ *(v33 - 2)) & 1) != 0)
                break;
              if (((*v32 ^ *v33) & 1) != 0)
                break;
              if (((*(v32 - 3) ^ *(v33 - 3)) & 1) != 0)
                break;
              if (((*(v32 - 1) ^ *(v33 - 1)) & 1) != 0)
                break;
              v34 = *(v32 - 36);
              v35 = *(v33 - 36);
              if (((v34 ^ v35) & 1) != 0)
                break;
              if ((v34 & v35) == 1)
              {
                v36 = *(_QWORD *)(v32 - 12);
                v37 = *(_QWORD *)(v33 - 12);
                if (v36)
                {
                  if (!v37
                    || (*(_QWORD *)(v32 - 20) != *(_QWORD *)(v33 - 20) || v36 != v37) && (sub_2348702E0() & 1) == 0)
                  {
                    goto LABEL_40;
                  }
                }
                else if (v37)
                {
                  goto LABEL_40;
                }
              }
              v32 += 40;
              v33 += 40;
              if (!--v30)
                goto LABEL_39;
            }
            goto LABEL_40;
          }
LABEL_39:
          swift_beginAccess();
          if (v26[7] == v20[7])
            break;
        }
      }
LABEL_40:
      v23 = (v23 + 1) & v24;
      if (((*(_QWORD *)(v43 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
        goto LABEL_68;
    }
    result = swift_release();
    v13 = v38;
    v9 = v39;
    v12 = v40;
    v8 = v41;
    if (!v40)
      goto LABEL_21;
LABEL_19:
    v14 = __clz(__rbit64(v12));
    v15 = (v12 - 1) & v12;
  }
LABEL_68:
  swift_release();
LABEL_69:
  v7 = 0;
  return v7 & 1;
}

uint64_t sub_23483FC58(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
      return sub_23486FE18();
    v8 = sub_2348402DC(v5, a2);
  }
  else if (v4)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    v8 = sub_2348402DC(v7, a1);
  }
  else if (a1 == a2)
  {
LABEL_61:
    v8 = 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    {
      v9 = 0;
      v10 = a1 + 56;
      v11 = 1 << *(_BYTE *)(a1 + 32);
      if (v11 < 64)
        v12 = ~(-1 << v11);
      else
        v12 = -1;
      v13 = v12 & *(_QWORD *)(a1 + 56);
      v37 = (unint64_t)(v11 + 63) >> 6;
      v14 = a2 + 56;
      if (!v13)
        goto LABEL_20;
LABEL_19:
      v38 = v9;
      v39 = (v13 - 1) & v13;
      for (i = __clz(__rbit64(v13)) | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v18 << 6))
      {
        v20 = *(_QWORD **)(*(_QWORD *)(a1 + 48) + 8 * i);
        sub_234870484();
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_bridgeObjectRelease();
        v21 = sub_2348704B4();
        v22 = -1 << *(_BYTE *)(a2 + 32);
        v23 = v21 & ~v22;
        if (((*(_QWORD *)(v14 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          goto LABEL_62;
        v24 = swift_retain();
        v25 = _s9SwiftData6SchemaC12RelationshipC2eeoiySbAE_AEtFZ_0(v24, v20);
        swift_release();
        if (!v25)
          break;
        v9 = v38;
        swift_release();
        v13 = v39;
        if (v39)
          goto LABEL_19;
LABEL_20:
        v16 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_66;
        }
        if (v16 >= v37)
          goto LABEL_61;
        v17 = *(_QWORD *)(v10 + 8 * v16);
        v18 = v9 + 1;
        if (!v17)
        {
          v18 = v9 + 2;
          if (v9 + 2 >= v37)
            goto LABEL_61;
          v17 = *(_QWORD *)(v10 + 8 * v18);
          if (!v17)
          {
            v18 = v9 + 3;
            if (v9 + 3 >= v37)
              goto LABEL_61;
            v17 = *(_QWORD *)(v10 + 8 * v18);
            if (!v17)
            {
              v18 = v9 + 4;
              if (v9 + 4 >= v37)
                goto LABEL_61;
              v17 = *(_QWORD *)(v10 + 8 * v18);
              if (!v17)
              {
                v19 = v9 + 5;
                if (v9 + 5 >= v37)
                  goto LABEL_61;
                v17 = *(_QWORD *)(v10 + 8 * v19);
                if (!v17)
                {
                  while (1)
                  {
                    v18 = v19 + 1;
                    if (__OFADD__(v19, 1))
                      break;
                    if (v18 >= v37)
                      goto LABEL_61;
                    v17 = *(_QWORD *)(v10 + 8 * v18);
                    ++v19;
                    if (v17)
                      goto LABEL_35;
                  }
LABEL_66:
                  __break(1u);
                  JUMPOUT(0x2348402BCLL);
                }
                v18 = v9 + 5;
              }
            }
          }
        }
LABEL_35:
        v38 = v18;
        v39 = (v17 - 1) & v17;
      }
      v26 = ~v22;
      v27 = (v23 + 1) & ~v22;
      if (((*(_QWORD *)(v14 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
      {
        v28 = v20 + 7;
        swift_beginAccess();
        swift_beginAccess();
        swift_beginAccess();
        swift_beginAccess();
        swift_beginAccess();
        do
        {
          v29 = *(_QWORD **)(*(_QWORD *)(a2 + 48) + 8 * v27);
          swift_beginAccess();
          v30 = v29[2] == v20[2] && v29[3] == v20[3];
          if (v30 || (sub_2348702E0() & 1) != 0)
          {
            swift_beginAccess();
            v31 = v29[7];
            v32 = *v28;
            v33 = *(_QWORD *)(v31 + 16);
            if (v33 == *(_QWORD *)(*v28 + 16))
            {
              if (v33)
                v34 = v31 == v32;
              else
                v34 = 1;
              if (v34)
              {
LABEL_56:
                swift_beginAccess();
                if (v29[8] == v20[8])
                {
                  if ((swift_beginAccess(), v29[9] == v20[9]) && v29[10] == v20[10] || (sub_2348702E0() & 1) != 0)
                  {
                    swift_beginAccess();
                    __asm { BR              X10 }
                  }
                }
              }
              else
              {
                v35 = (unsigned __int8 *)(v31 + 32);
                v36 = (unsigned __int8 *)(v32 + 32);
                while (*v35 == *v36)
                {
                  ++v35;
                  ++v36;
                  if (!--v33)
                    goto LABEL_56;
                }
              }
            }
          }
          v27 = (v27 + 1) & v26;
        }
        while (((*(_QWORD *)(v14 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0);
      }
LABEL_62:
      swift_release();
    }
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_2348402DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  char v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23486FDF4();
  if (v3 != result)
    return 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v9 &= v9 - 1;
LABEL_6:
    swift_retain();
    v11 = sub_23486FE30();
    result = swift_release();
    if ((v11 & 1) == 0)
      return 0;
  }
  v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v12 >= v10)
    return 1;
  v13 = *(_QWORD *)(v6 + 8 * v12);
  ++v5;
  if (v13)
    goto LABEL_19;
  v5 = v12 + 1;
  if (v12 + 1 >= v10)
    return 1;
  v13 = *(_QWORD *)(v6 + 8 * v5);
  if (v13)
  {
LABEL_19:
    v9 = (v13 - 1) & v13;
    goto LABEL_6;
  }
  v14 = v12 + 2;
  if (v14 >= v10)
    return 1;
  v13 = *(_QWORD *)(v6 + 8 * v14);
  if (v13)
  {
    v5 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v10)
      return 1;
    v13 = *(_QWORD *)(v6 + 8 * v5);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_234840434(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v27 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = 16 * v16;
    v21 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v23 = *v21;
    v22 = v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(a4 + 56) + v20);
    v25 = *v24;
    v26 = v24[1];
    *v11 = v23;
    v11[1] = v22;
    v11[2] = v25;
    v11[3] = v26;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_234840654(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_234840850(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_234840888(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (unint64_t *)&qword_2542575D0, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
}

uint64_t sub_23484086C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_234840888(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Attribute, &qword_254258898, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
}

uint64_t sub_234840888(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  int64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;

  v7 = a4;
  v9 = a2;
  v30 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_23486FDC4();
    a5(0);
    sub_2348436EC(a6, 255, a5, a7);
    result = sub_23486FA88();
    v7 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    v16 = v38;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v17 = 0;
    goto LABEL_38;
  }
  v15 = 0;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  v13 = a4 + 56;
  v14 = ~v25;
  v26 = -v25;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  else
    v27 = -1;
  v16 = v27 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v17 = 0;
LABEL_38:
    v28 = v30;
LABEL_41:
    *v28 = v7;
    v28[1] = v13;
    v28[2] = v14;
    v28[3] = v15;
    v28[4] = v16;
    return v17;
  }
  if (a3 < 0)
    goto LABEL_48;
  v17 = 0;
  v31 = (unint64_t)(v14 + 64) >> 6;
  v29 = v14;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_23486FE24())
        goto LABEL_40;
      a5(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v20 = v33;
      result = swift_unknownObjectRelease();
      if (!v33)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v15 << 6);
      goto LABEL_7;
    }
    v21 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v21 >= v31)
    {
      v16 = 0;
      goto LABEL_40;
    }
    v22 = *(_QWORD *)(v13 + 8 * v21);
    if (v22)
      goto LABEL_23;
    v23 = v15 + 2;
    if (v15 + 2 >= v31)
    {
      v16 = 0;
      ++v15;
      goto LABEL_40;
    }
    v22 = *(_QWORD *)(v13 + 8 * v23);
    if (!v22)
    {
      if (v15 + 3 >= v31)
        goto LABEL_44;
      v22 = *(_QWORD *)(v13 + 8 * (v15 + 3));
      if (v22)
      {
        v21 = v15 + 3;
        goto LABEL_23;
      }
      v23 = v15 + 4;
      if (v15 + 4 >= v31)
      {
        v16 = 0;
        v15 += 3;
        goto LABEL_40;
      }
      v22 = *(_QWORD *)(v13 + 8 * v23);
      if (!v22)
      {
        v21 = v15 + 5;
        if (v15 + 5 >= v31)
        {
LABEL_44:
          v16 = 0;
          v15 = v23;
          goto LABEL_40;
        }
        v22 = *(_QWORD *)(v13 + 8 * v21);
        if (!v22)
        {
          v24 = v15 + 6;
          while (v31 != v24)
          {
            v22 = *(_QWORD *)(v13 + 8 * v24++);
            if (v22)
            {
              v21 = v24 - 1;
              goto LABEL_23;
            }
          }
          v16 = 0;
          v15 = v31 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v21 = v23;
LABEL_23:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v21 << 6);
    v15 = v21;
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v19);
    result = swift_retain();
    if (!v20)
      goto LABEL_40;
LABEL_8:
    ++v17;
    *v9++ = v20;
    if (v17 == a3)
    {
      v17 = a3;
LABEL_40:
      v14 = v29;
      v28 = v30;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_234840B7C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for PersistentIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v30 - v14;
  v35 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 24);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_2347EB29C(*(_QWORD *)(v35 + 48) + v29 * v25, (uint64_t)v12);
    sub_2348107C0((uint64_t)v12, (uint64_t)v15);
    result = sub_2348107C0((uint64_t)v15, a2);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v17 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v17 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v17 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v17 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_234840E04(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23487001C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23487001C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2348436AC(&qword_256189AF0, &qword_256189AE8, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256189AE8);
          v12 = sub_234838DD0(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23486FD70();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_234870064();
  __break(1u);
  return result;
}

uint64_t _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_2348702E0() & 1) != 0))
  {
    swift_beginAccess();
    v8 = a1[4];
    swift_beginAccess();
    v9 = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_23483F4D4(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      swift_beginAccess();
      v11 = a1[7];
      swift_beginAccess();
      v12 = a2[7];
      if (v11)
      {
        if (!v12)
          goto LABEL_14;
        swift_retain();
        v13 = swift_retain();
        v14 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v13, v12);
        swift_release();
        swift_release();
        if ((v14 & 1) == 0)
          goto LABEL_14;
      }
      else if (v12)
      {
        goto LABEL_14;
      }
      swift_beginAccess();
      v15 = a1[10];
      swift_beginAccess();
      v16 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = sub_23483F808(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        swift_beginAccess();
        v18 = a1[11];
        swift_beginAccess();
        v19 = a2[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v7 = sub_23483FC58(v18, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v7 & 1;
      }
    }
LABEL_14:
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_234841240(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_23486FA70();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_23479F068(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_2348412D4(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23487001C();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2561893D0);
      result = sub_23486FE9C();
      v3 = result;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_23487001C();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = v3 + 56;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    while (1)
    {
      while (1)
      {
        result = MEMORY[0x234945A1C](v7, v1);
        v8 = __OFADD__(v7++, 1);
        if (v8)
        {
          __break(1u);
          goto LABEL_35;
        }
        v9 = (_QWORD *)result;
        sub_234870484();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_23486F7AC();
        swift_bridgeObjectRelease();
        result = sub_2348704B4();
        v10 = -1 << *(_BYTE *)(v3 + 32);
        v11 = result & ~v10;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
        v14 = 1 << v11;
        if (((1 << v11) & v13) != 0)
          break;
LABEL_19:
        *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v9;
        v20 = *(_QWORD *)(v3 + 16);
        v8 = __OFADD__(v20, 1);
        v21 = v20 + 1;
        if (v8)
          goto LABEL_36;
        *(_QWORD *)(v3 + 16) = v21;
        if (v7 == v4)
          return v3;
      }
      v15 = (_QWORD *)swift_retain();
      v16 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v15, v9);
      result = swift_release();
      if ((v16 & 1) == 0)
      {
        v17 = ~v10;
        do
        {
          v11 = (v11 + 1) & v17;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            goto LABEL_19;
          v18 = (_QWORD *)swift_retain();
          v19 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v18, v9);
          result = swift_release();
        }
        while ((v19 & 1) == 0);
      }
      swift_unknownObjectRelease();
      if (v7 == v4)
        return v3;
    }
  }
  v22 = 0;
  v37 = v1 + 32;
  v23 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v22 != v23)
  {
    v24 = *(_QWORD **)(v37 + 8 * v22);
    sub_234870484();
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23486F7AC();
    swift_bridgeObjectRelease();
    result = sub_2348704B4();
    v25 = -1 << *(_BYTE *)(v3 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    v28 = *(_QWORD *)(v6 + 8 * (v26 >> 6));
    v29 = 1 << v26;
    if (((1 << v26) & v28) != 0)
    {
      v30 = (_QWORD *)swift_retain();
      v31 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v30, v24);
      result = swift_release();
      if ((v31 & 1) != 0)
      {
LABEL_23:
        result = swift_release();
        goto LABEL_24;
      }
      v32 = ~v25;
      while (1)
      {
        v26 = (v26 + 1) & v32;
        v27 = v26 >> 6;
        v28 = *(_QWORD *)(v6 + 8 * (v26 >> 6));
        v29 = 1 << v26;
        if ((v28 & (1 << v26)) == 0)
          break;
        v33 = (_QWORD *)swift_retain();
        v34 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v33, v24);
        result = swift_release();
        if ((v34 & 1) != 0)
          goto LABEL_23;
      }
    }
    *(_QWORD *)(v6 + 8 * v27) = v29 | v28;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v26) = v24;
    v35 = *(_QWORD *)(v3 + 16);
    v8 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v8)
      goto LABEL_37;
    *(_QWORD *)(v3 + 16) = v36;
LABEL_24:
    if (++v22 == v4)
      return v3;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_234841680(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23487001C();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258810);
      result = sub_23486FE9C();
      v3 = result;
      if (!v2)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (!v2)
  {
LABEL_4:
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v3;
    goto LABEL_9;
  }
LABEL_8:
  swift_bridgeObjectRetain();
  v4 = sub_23487001C();
  result = swift_bridgeObjectRelease();
  if (!v4)
    return v3;
LABEL_9:
  v6 = v3 + 56;
  v59 = v4;
  v60 = v3;
  if ((v1 & 0xC000000000000001) == 0)
  {
    v32 = 0;
    v56 = v1 + 32;
    v58 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    do
    {
      if (v32 == v58)
        goto LABEL_86;
      v33 = *(_QWORD **)(v56 + 8 * v32);
      sub_234870484();
      swift_beginAccess();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_23486F7AC();
      swift_bridgeObjectRelease();
      result = sub_2348704B4();
      v34 = -1 << *(_BYTE *)(v3 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      v37 = *(_QWORD *)(v6 + 8 * (v35 >> 6));
      v38 = 1 << v35;
      if (((1 << v35) & v37) != 0)
      {
        v62 = v32;
        v39 = ~v34;
        v40 = v33 + 6;
        v41 = *(_QWORD *)(v3 + 48);
        swift_beginAccess();
        swift_beginAccess();
        while (1)
        {
          v42 = *(_QWORD **)(v41 + 8 * v35);
          swift_beginAccess();
          v43 = v42[2] == v33[2] && v42[3] == v33[3];
          if (v43 || (result = sub_2348702E0(), (result & 1) != 0))
          {
            result = swift_beginAccess();
            v44 = v42[6];
            v45 = *v40;
            v46 = *(_QWORD *)(v44 + 16);
            if (v46 == *(_QWORD *)(*v40 + 16))
            {
              if (v46)
                v47 = v44 == v45;
              else
                v47 = 1;
              if (v47)
              {
LABEL_53:
                result = swift_beginAccess();
                if (v42[7] == v33[7])
                {
                  result = swift_release();
                  v4 = v59;
                  v3 = v60;
                  v32 = v62;
                  goto LABEL_49;
                }
              }
              else
              {
                v48 = (unsigned __int8 *)(v44 + 68);
                v49 = (unsigned __int8 *)(v45 + 68);
                while (*(v48 - 4) == *(v49 - 4))
                {
                  if (((*(v48 - 2) ^ *(v49 - 2)) & 1) != 0)
                    break;
                  if (((*v48 ^ *v49) & 1) != 0)
                    break;
                  if (((*(v48 - 3) ^ *(v49 - 3)) & 1) != 0)
                    break;
                  if (((*(v48 - 1) ^ *(v49 - 1)) & 1) != 0)
                    break;
                  v50 = *(v48 - 36);
                  v51 = *(v49 - 36);
                  if (((v50 ^ v51) & 1) != 0)
                    break;
                  if ((v50 & v51) == 1)
                  {
                    v52 = *(_QWORD *)(v48 - 12);
                    v53 = *(_QWORD *)(v49 - 12);
                    if (v52)
                    {
                      if (!v53)
                        break;
                      result = *(_QWORD *)(v48 - 20);
                      if (result != *(_QWORD *)(v49 - 20) || v52 != v53)
                      {
                        result = sub_2348702E0();
                        if ((result & 1) == 0)
                          break;
                      }
                    }
                    else if (v53)
                    {
                      break;
                    }
                  }
                  v48 += 40;
                  v49 += 40;
                  if (!--v46)
                    goto LABEL_53;
                }
              }
            }
          }
          v35 = (v35 + 1) & v39;
          v36 = v35 >> 6;
          v37 = *(_QWORD *)(v6 + 8 * (v35 >> 6));
          v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0)
          {
            v4 = v59;
            v3 = v60;
            v32 = v62;
            break;
          }
        }
      }
      *(_QWORD *)(v6 + 8 * v36) = v38 | v37;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v35) = v33;
      v54 = *(_QWORD *)(v3 + 16);
      v8 = __OFADD__(v54, 1);
      v55 = v54 + 1;
      if (v8)
        goto LABEL_87;
      *(_QWORD *)(v3 + 16) = v55;
LABEL_49:
      ++v32;
    }
    while (v32 != v4);
    return v3;
  }
  v7 = 0;
  v57 = v1;
  while (1)
  {
    result = MEMORY[0x234945A1C](v7, v1);
    v8 = __OFADD__(v7++, 1);
    if (v8)
      break;
    v9 = (_QWORD *)result;
    sub_234870484();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23486F7AC();
    swift_bridgeObjectRelease();
    result = sub_2348704B4();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v61 = v7;
      v15 = ~v10;
      v16 = v9 + 6;
      v17 = *(_QWORD *)(v3 + 48);
      swift_beginAccess();
      swift_beginAccess();
      while (1)
      {
        v18 = *(_QWORD **)(v17 + 8 * v11);
        swift_beginAccess();
        v19 = v18[2] == v9[2] && v18[3] == v9[3];
        if (v19 || (result = sub_2348702E0(), (result & 1) != 0))
        {
          result = swift_beginAccess();
          v20 = v18[6];
          v21 = *v16;
          v22 = *(_QWORD *)(v20 + 16);
          if (v22 == *(_QWORD *)(*v16 + 16))
          {
            if (v22)
              v23 = v20 == v21;
            else
              v23 = 1;
            if (!v23)
            {
              v24 = (unsigned __int8 *)(v20 + 68);
              v25 = (unsigned __int8 *)(v21 + 68);
              while (*(v24 - 4) == *(v25 - 4))
              {
                if (((*(v24 - 2) ^ *(v25 - 2)) & 1) != 0)
                  break;
                if (((*v24 ^ *v25) & 1) != 0)
                  break;
                if (((*(v24 - 3) ^ *(v25 - 3)) & 1) != 0)
                  break;
                if (((*(v24 - 1) ^ *(v25 - 1)) & 1) != 0)
                  break;
                v26 = *(v24 - 36);
                v27 = *(v25 - 36);
                if (((v26 ^ v27) & 1) != 0)
                  break;
                if ((v26 & v27) == 1)
                {
                  v28 = *(_QWORD *)(v24 - 12);
                  v29 = *(_QWORD *)(v25 - 12);
                  if (v28)
                  {
                    if (!v29)
                      goto LABEL_16;
                    result = *(_QWORD *)(v24 - 20);
                    if (result != *(_QWORD *)(v25 - 20) || v28 != v29)
                    {
                      result = sub_2348702E0();
                      if ((result & 1) == 0)
                        goto LABEL_16;
                    }
                  }
                  else if (v29)
                  {
                    goto LABEL_16;
                  }
                }
                v24 += 40;
                v25 += 40;
                if (!--v22)
                  goto LABEL_15;
              }
              goto LABEL_16;
            }
LABEL_15:
            result = swift_beginAccess();
            if (v18[7] == v9[7])
              break;
          }
        }
LABEL_16:
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
        v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0)
        {
          v4 = v59;
          v3 = v60;
          v1 = v57;
          v7 = v61;
          goto LABEL_44;
        }
      }
      swift_unknownObjectRelease();
      v4 = v59;
      v3 = v60;
      v1 = v57;
      v7 = v61;
      if (v61 == v59)
        return v3;
    }
    else
    {
LABEL_44:
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v9;
      v30 = *(_QWORD *)(v3 + 16);
      v8 = __OFADD__(v30, 1);
      v31 = v30 + 1;
      if (v8)
        goto LABEL_85;
      *(_QWORD *)(v3 + 16) = v31;
      if (v7 == v4)
        return v3;
    }
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

uint64_t sub_234841CE8(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23487001C();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_254257610);
      v3 = sub_23486FE9C();
      if (!v2)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (!v2)
  {
LABEL_4:
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v3;
LABEL_9:
    v6 = 0;
    v7 = v3 + 56;
    v32 = v1;
    v33 = v1 & 0xC000000000000001;
    v29 = v1 + 32;
    v30 = v1 & 0xFFFFFFFFFFFFFF8;
    v31 = v4;
    while (1)
    {
      if (v33)
      {
        v8 = (_QWORD *)MEMORY[0x234945A1C](v6, v1);
        v9 = __OFADD__(v6++, 1);
        if (v9)
          goto LABEL_41;
      }
      else
      {
        if (v6 >= *(_QWORD *)(v30 + 16))
          goto LABEL_43;
        v8 = *(_QWORD **)(v29 + 8 * v6);
        swift_retain();
        v9 = __OFADD__(v6++, 1);
        if (v9)
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          JUMPOUT(0x234842288);
        }
      }
      sub_234870484();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_23486F7AC();
      swift_bridgeObjectRelease();
      v10 = sub_2348704B4();
      v11 = -1 << *(_BYTE *)(v3 + 32);
      v12 = v10 & ~v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v7 + 8 * (v12 >> 6));
      v15 = 1 << v12;
      if (((1 << v12) & v14) != 0)
      {
        v34 = v6;
        v16 = ~v11;
        v17 = v8 + 7;
        swift_beginAccess();
        swift_beginAccess();
        swift_beginAccess();
        swift_beginAccess();
        swift_beginAccess();
        do
        {
          v18 = *(_QWORD **)(*(_QWORD *)(v3 + 48) + 8 * v12);
          swift_beginAccess();
          v19 = v18[2] == v8[2] && v18[3] == v8[3];
          if (v19 || (sub_2348702E0() & 1) != 0)
          {
            swift_beginAccess();
            v20 = v18[7];
            v21 = *v17;
            v22 = *(_QWORD *)(v20 + 16);
            if (v22 == *(_QWORD *)(*v17 + 16))
            {
              if (v22)
                v23 = v20 == v21;
              else
                v23 = 1;
              if (v23)
              {
LABEL_32:
                swift_beginAccess();
                if (v18[8] == v8[8])
                {
                  if ((swift_beginAccess(), v18[9] == v8[9]) && v18[10] == v8[10] || (sub_2348702E0() & 1) != 0)
                  {
                    swift_beginAccess();
                    __asm { BR              X10 }
                  }
                }
              }
              else
              {
                v24 = (unsigned __int8 *)(v20 + 32);
                v25 = (unsigned __int8 *)(v21 + 32);
                while (*v24 == *v25)
                {
                  ++v24;
                  ++v25;
                  if (!--v22)
                    goto LABEL_32;
                }
              }
            }
          }
          v12 = (v12 + 1) & v16;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v7 + 8 * (v12 >> 6));
          v15 = 1 << v12;
        }
        while ((v14 & (1 << v12)) != 0);
        v4 = v31;
        v1 = v32;
        v6 = v34;
      }
      *(_QWORD *)(v7 + 8 * v13) = v15 | v14;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12) = v8;
      v26 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v26, 1);
      v27 = v26 + 1;
      if (v9)
        goto LABEL_42;
      *(_QWORD *)(v3 + 16) = v27;
      if (v6 == v4)
        return v3;
    }
  }
LABEL_8:
  swift_bridgeObjectRetain();
  v4 = sub_23487001C();
  swift_bridgeObjectRelease();
  if (v4)
    goto LABEL_9;
  return v3;
}

uint64_t sub_2348422A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_234843660();
  result = sub_23486FA70();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_unknownObjectRetain();
      sub_2347A0750(&v7, v5, v6);
      swift_unknownObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_23484233C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  char v33;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  BOOL v45;
  char v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v2 = type metadata accessor for PersistentIdentifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v52 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v57 = (uint64_t)&v52 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v52 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  sub_2348436EC(&qword_254258050, 255, v15, (uint64_t)&protocol conformance descriptor for PersistentIdentifier);
  v59 = v2;
  v16 = sub_23486FA70();
  v53 = v14;
  if (!v14)
    return v16;
  v17 = 0;
  v52 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v18 = *(_QWORD *)(v3 + 72);
  v58 = v13;
  while (1)
  {
    v56 = v17;
    sub_2347EB29C(v52 + v18 * v17, (uint64_t)v13);
    sub_234870484();
    v19 = sub_23486F440();
    v20 = sub_2348436EC((unint64_t *)&qword_254258718, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    swift_bridgeObjectRetain();
    v54 = v20;
    v55 = v19;
    sub_23486F6B0();
    v21 = sub_2348704B4();
    v22 = -1 << *(_BYTE *)(v16 + 32);
    v23 = v21 & ~v22;
    if (((*(_QWORD *)(v16 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
    {
      v24 = ~v22;
      v25 = *(int *)(v59 + 20);
      do
      {
        sub_2347EB29C(*(_QWORD *)(v16 + 48) + v23 * v18, (uint64_t)v6);
        v26 = *(_QWORD *)&v6[*(int *)(v59 + 20)];
        v27 = *(_QWORD *)&v58[v25];
        v28 = *(_QWORD *)(v26 + 24);
        v29 = *(_QWORD *)(v27 + 24);
        if (v28)
        {
          if (!v29
            || (*(_QWORD *)(v26 + 16) == *(_QWORD *)(v27 + 16) ? (v30 = v28 == v29) : (v30 = 0),
                !v30 && (sub_2348702E0() & 1) == 0))
          {
LABEL_8:
            sub_2347EB0B0((uint64_t)v6);
            goto LABEL_9;
          }
        }
        else if (v29)
        {
          goto LABEL_8;
        }
        v31 = *(_QWORD *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v27 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
           && *(_QWORD *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v27 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
        if (!v31 && (sub_2348702E0() & 1) == 0)
          goto LABEL_8;
        if (*(_QWORD *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v27 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
          && *(_QWORD *)(v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v27 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
        {
          sub_2347EB0B0((uint64_t)v6);
          goto LABEL_4;
        }
        v33 = sub_2348702E0();
        sub_2347EB0B0((uint64_t)v6);
        if ((v33 & 1) != 0)
          goto LABEL_4;
LABEL_9:
        v23 = (v23 + 1) & v24;
      }
      while (((*(_QWORD *)(v16 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2347EB29C((uint64_t)v58, v57);
    v60 = v16;
    if (*(_QWORD *)(v16 + 24) > *(_QWORD *)(v16 + 16))
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_234808C2C();
      goto LABEL_57;
    }
    if (isUniquelyReferenced_nonNull_native)
      sub_2347A2634();
    else
      sub_2347A56E0();
    v35 = v60;
    sub_234870484();
    sub_23486F6B0();
    v36 = sub_2348704B4();
    v37 = -1 << *(_BYTE *)(v35 + 32);
    v23 = v36 & ~v37;
    if (((*(_QWORD *)(v35 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
    {
      v38 = ~v37;
      v39 = *(int *)(v59 + 20);
      do
      {
        sub_2347EB29C(*(_QWORD *)(v35 + 48) + v23 * v18, (uint64_t)v9);
        v40 = *(_QWORD *)&v9[*(int *)(v59 + 20)];
        v41 = *(_QWORD *)(v57 + v39);
        v42 = *(_QWORD *)(v40 + 24);
        v43 = *(_QWORD *)(v41 + 24);
        if (v42)
        {
          if (!v43
            || (*(_QWORD *)(v40 + 16) == *(_QWORD *)(v41 + 16) ? (v44 = v42 == v43) : (v44 = 0),
                !v44 && (sub_2348702E0() & 1) == 0))
          {
LABEL_37:
            sub_2347EB0B0((uint64_t)v9);
            goto LABEL_38;
          }
        }
        else if (v43)
        {
          goto LABEL_37;
        }
        v45 = *(_QWORD *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v41 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
           && *(_QWORD *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v41 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
        if (!v45 && (sub_2348702E0() & 1) == 0)
          goto LABEL_37;
        if (*(_QWORD *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v41 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
          && *(_QWORD *)(v40 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v41 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
        {
          goto LABEL_61;
        }
        v47 = sub_2348702E0();
        sub_2347EB0B0((uint64_t)v9);
        if ((v47 & 1) != 0)
          goto LABEL_62;
LABEL_38:
        v23 = (v23 + 1) & v38;
      }
      while (((*(_QWORD *)(v35 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0);
    }
LABEL_57:
    v16 = v60;
    *(_QWORD *)(v60 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v23;
    sub_2348107C0(v57, *(_QWORD *)(v16 + 48) + v23 * v18);
    v48 = *(_QWORD *)(v16 + 16);
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      break;
    *(_QWORD *)(v16 + 16) = v50;
LABEL_4:
    swift_bridgeObjectRelease();
    v17 = v56 + 1;
    v13 = v58;
    sub_2347EB0B0((uint64_t)v58);
    if (v17 == v53)
      return v16;
  }
  __break(1u);
LABEL_61:
  sub_2347EB0B0((uint64_t)v9);
LABEL_62:
  result = sub_234870418();
  __break(1u);
  return result;
}

uint64_t sub_234842868(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23487001C();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for Schema.Entity();
  sub_2348436EC(&qword_256189A58, v3, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Entity, (uint64_t)&protocol conformance descriptor for Schema.Entity);
  result = sub_23486FA70();
  v5 = result;
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23487001C();
    result = swift_bridgeObjectRelease();
    if (!v6)
      return v5;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      return v5;
  }
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (_QWORD *)MEMORY[0x234945A1C](i, a1);
      }
      else
      {
        v8 = *(_QWORD **)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_23479FC64(&v9, v8);
      swift_release();
    }
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_2348429C0()
{
  unint64_t result;

  result = qword_256189A68;
  if (!qword_256189A68)
  {
    result = MEMORY[0x2349465EC](&unk_23487BCAC, &_s6EntityC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189A68);
  }
  return result;
}

unint64_t sub_234842A04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256189A78;
  if (!qword_256189A78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189A70);
    v3 = sub_2348436EC(&qword_256189970, v2, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Entity, (uint64_t)&protocol conformance descriptor for Schema.Entity);
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE1720], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256189A78);
  }
  return result;
}

unint64_t sub_234842A80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256189A88;
  if (!qword_256189A88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189A80);
    v2 = sub_2348436EC(&qword_2542588A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE1720], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256189A88);
  }
  return result;
}

unint64_t sub_234842B00()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256189A98;
  if (!qword_256189A98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189A90);
    v2 = sub_2348436EC(&qword_2542575E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE1720], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256189A98);
  }
  return result;
}

unint64_t sub_234842B80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256189AA8;
  if (!qword_256189AA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189A70);
    v3 = sub_2348436EC(&qword_256189990, v2, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Entity, (uint64_t)&protocol conformance descriptor for Schema.Entity);
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE1700], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256189AA8);
  }
  return result;
}

unint64_t sub_234842BFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256189AB0;
  if (!qword_256189AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189A80);
    v2 = sub_2348436EC(&qword_254258890, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE1700], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256189AB0);
  }
  return result;
}

unint64_t sub_234842C7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256189AB8;
  if (!qword_256189AB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189A90);
    v2 = sub_2348436EC(&qword_2542575C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE1700], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256189AB8);
  }
  return result;
}

uint64_t sub_234842CFC(uint64_t a1, uint64_t a2)
{
  return sub_2348436EC(&qword_256189AC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Entity, (uint64_t)&protocol conformance descriptor for Schema.Entity);
}

uint64_t sub_234842D28@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_retain();
}

uint64_t sub_234842D74@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_234842DC0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for Schema.Entity()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Schema.Entity.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of Schema.Entity.__allocating_init(_:subentities:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of Schema.Entity.__allocating_init(_:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of Schema.Entity.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t _s6EntityC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6EntityC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_234842F24 + 4 * byte_23487BA32[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_234842F58 + 4 * byte_23487BA2D[v4]))();
}

uint64_t sub_234842F58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_234842F60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x234842F68);
  return result;
}

uint64_t sub_234842F74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x234842F7CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_234842F80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_234842F88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_234842F94(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_234842FA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s6EntityC10CodingKeysOMa()
{
  return &_s6EntityC10CodingKeysON;
}

unint64_t sub_234842FBC()
{
  unint64_t result;

  result = qword_256189AC8;
  if (!qword_256189AC8)
  {
    result = MEMORY[0x2349465EC](&unk_23487BC84, &_s6EntityC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189AC8);
  }
  return result;
}

unint64_t sub_234843004()
{
  unint64_t result;

  result = qword_256189AD0;
  if (!qword_256189AD0)
  {
    result = MEMORY[0x2349465EC](&unk_23487BBF4, &_s6EntityC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189AD0);
  }
  return result;
}

unint64_t sub_23484304C()
{
  unint64_t result;

  result = qword_256189AD8;
  if (!qword_256189AD8)
  {
    result = MEMORY[0x2349465EC](&unk_23487BC1C, &_s6EntityC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189AD8);
  }
  return result;
}

uint64_t sub_234843090(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469746E65627573 && a2 == 0xEB00000000736569 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E657265707573 && a2 == 0xEF656D614E797469 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_234843308(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23487001C();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256189AE0);
      v3 = sub_23486FE9C();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_23487001C();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v39 = v1;
    while (1)
    {
      v8 = MEMORY[0x234945A1C](v7, v1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_23486FCA4();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_2347DDC54();
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_23486FCB0();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v1 = v39;
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_23486FCB0();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v39;
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v41)
        return;
    }
  }
  v24 = 0;
  v40 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v1 + 32 + 8 * v24);
    v26 = sub_23486FCA4();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_2347DDC54();
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_23486FCB0();

      if ((v33 & 1) != 0)
        goto LABEL_24;
      v34 = ~v27;
      v28 = (v28 + 1) & v34;
      v29 = v28 >> 6;
      v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
      v31 = 1 << v28;
      if ((v30 & (1 << v28)) != 0)
      {
        while (1)
        {
          v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
          v36 = sub_23486FCB0();

          if ((v36 & 1) != 0)
            break;
          v28 = (v28 + 1) & v34;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
          v31 = 1 << v28;
          if ((v30 & (1 << v28)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v4 = v41;
        goto LABEL_25;
      }
LABEL_32:
      v4 = v41;
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v4)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t sub_234843660()
{
  unint64_t result;

  result = qword_2542574A0;
  if (!qword_2542574A0)
  {
    result = MEMORY[0x2349465EC](&unk_23487A418, &type metadata for ModelContext.AnyPersistentObject);
    atomic_store(result, (unint64_t *)&qword_2542574A0);
  }
  return result;
}

uint64_t sub_2348436A4()
{
  return swift_release();
}

uint64_t sub_2348436AC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2349465EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2348436EC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2349465EC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_234843754(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = a1;
  if (swift_conformsToProtocol2())
    v2 = a1;
  else
    v2 = 0;
  while (v2)
  {
    sub_2347E85B4(v2, &v5);
    v3 = v5;
    if (swift_conformsToProtocol2())
      v2 = v3;
    else
      v2 = 0;
  }
  if (swift_dynamicCastMetatype())
    return 1;
  if (swift_dynamicCastMetatype())
    return 1;
  sub_23486F488();
  if (swift_dynamicCastMetatype())
    return 1;
  sub_23486F4AC();
  if (swift_dynamicCastMetatype())
    return 1;
  sub_23486F440();
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype())
  {
    return 1;
  }
  type metadata accessor for Decimal(0);
  return swift_dynamicCastMetatype() != 0;
}

uint64_t sub_234843968@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  swift_beginAccess();
  v8 = *(_QWORD *)(a3 + 48);
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
    goto LABEL_8;
  v10 = (uint64_t *)(v8 + 56);
  while (*((_BYTE *)v10 - 24) != 1)
  {
    v10 += 5;
    if (!--v9)
      goto LABEL_8;
  }
  v11 = *v10;
  if (*v10)
  {
    v12 = *(v10 - 1);
    *a4 = 0u;
    a4[1] = 0u;
    swift_bridgeObjectRetain();
    sub_2347D96C4(a1, a2);
    swift_retain();
    sub_234850FDC(v12, v11, a1, a2, a3, a4);
    swift_release();
    sub_2347C6460(a1, a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_234843AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = swift_beginAccess();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
    goto LABEL_8;
  v6 = (uint64_t *)(v4 + 56);
  while (*((_BYTE *)v6 - 24) != 1)
  {
    v6 += 5;
    if (!--v5)
      goto LABEL_8;
  }
  v7 = *v6;
  if (*v6)
  {
    v8 = *(v6 - 1);
    MEMORY[0x24BDAC7A8](v3);
    swift_bridgeObjectRetain();
    sub_234851354(v8, v7, (void (*)(void))sub_234853740);
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
LABEL_8:
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t Schema.Relationship.isToOneRelationship.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 168);
}

BOOL SchemaProperty.isOptional.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(void))(a2 + 80))();
  if (swift_conformsToProtocol2())
    v3 = v2;
  else
    v3 = 0;
  return v3 != 0;
}

void sub_234843CB0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_234843D00(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_234843D5C + 4 * byte_23487BD14[a2]))(0x7966696C6C756ELL);
}

uint64_t sub_234843D5C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7966696C6C756ELL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_2348702E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_234843DFC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_234843E48(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_234843EC8 + 4 * byte_23487BD1D[a2]))(0x6164696C61766E69);
}

uint64_t sub_234843EC8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6164696C61766E69 && v1 == 0xEE006C6C41646574)
    v2 = 1;
  else
    v2 = sub_2348702E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t Schema.Attribute.__allocating_init(name:originalName:options:valueType:defaultValue:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;

  v17 = swift_allocObject();
  Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t Schema.CompositeAttribute.__allocating_init(name:originalName:options:valueType:defaultValue:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;

  v17 = swift_allocObject();
  Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t Schema.Relationship.isUnique.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = (unsigned __int8 *)(v1 + 32);
  v4 = v2 - 1;
  do
  {
    result = *v3;
    if ((result & 1) != 0)
      break;
    v6 = v4--;
    ++v3;
  }
  while (v6);
  return result;
}

void sub_234844140()
{
  swift_bridgeObjectRetain();
  type metadata accessor for Schema.Index.Types();
}

void sub_234844AD0()
{
  swift_bridgeObjectRetain();
  type metadata accessor for Schema.Index.Types();
}

uint64_t sub_234844F44()
{
  return 0x492E616D65686353;
}

uint64_t sub_234844F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_23486FF2C();
  v3 = sub_23486F98C();
  v4 = swift_bridgeObjectRetain();
  if (!MEMORY[0x234945494](v4, v3))
    goto LABEL_23;
  v5 = 0;
  v18 = v1 + 32;
  v16 = v3;
  v17 = v1;
  while (1)
  {
    v6 = sub_23486F944();
    sub_23486F908();
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(v18 + 8 * v5);
      swift_bridgeObjectRetain();
      v8 = __OFADD__(v5++, 1);
      if (v8)
        goto LABEL_22;
    }
    else
    {
      v7 = sub_23486FEFC();
      v8 = __OFADD__(v5++, 1);
      if (v8)
      {
LABEL_22:
        __break(1u);
LABEL_23:
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    if (MEMORY[0x234945494](v7, v2))
      break;
LABEL_3:
    swift_bridgeObjectRelease();
    if (v5 == MEMORY[0x234945494](v17, v16))
      goto LABEL_23;
  }
  v9 = 4;
  while (1)
  {
    v10 = v9 - 4;
    v11 = sub_23486F944();
    sub_23486F908();
    if ((v11 & 1) == 0)
      break;
    swift_retain();
    v12 = v9 - 3;
    if (__OFADD__(v10, 1))
      goto LABEL_24;
LABEL_11:
    v13 = sub_23486FD4C();
    if (swift_conformsToProtocol2())
      v14 = v13;
    else
      v14 = 0;
    if (v14 && !swift_dynamicCastMetatype())
      goto LABEL_25;
    swift_release();
    ++v9;
    if (v12 == MEMORY[0x234945494](v7, v2))
      goto LABEL_3;
  }
  sub_23486FEFC();
  v12 = v9 - 3;
  if (!__OFADD__(v10, 1))
    goto LABEL_11;
LABEL_24:
  __break(1u);
LABEL_25:
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_234845238()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  uint64_t v8;
  uint64_t result;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0[2];
  v31 = *(_QWORD *)(*v0 + 80);
  v32 = *v0;
  v2 = sub_23486FF2C();
  v3 = sub_23486F98C();
  v4 = swift_bridgeObjectRetain();
  if (MEMORY[0x234945494](v4, v3))
  {
    v5 = 0;
    v28 = v1 + 32;
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v26 = v3;
    v27 = v1;
    while (1)
    {
      v7 = sub_23486F944();
      sub_23486F908();
      if ((v7 & 1) != 0)
      {
        v8 = *(_QWORD *)(v28 + 8 * v5);
        result = swift_bridgeObjectRetain();
        v10 = __OFADD__(v5, 1);
        v11 = v5 + 1;
        if (v10)
          goto LABEL_31;
      }
      else
      {
        result = sub_23486FEFC();
        v8 = result;
        v10 = __OFADD__(v5, 1);
        v11 = v5 + 1;
        if (v10)
        {
LABEL_31:
          __break(1u);
          return result;
        }
      }
      v29 = v11;
      v30 = v6;
      if (MEMORY[0x234945494](v8, v2))
      {
        v12 = 4;
        v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
        while (1)
        {
          v14 = v12 - 4;
          v15 = sub_23486F944();
          sub_23486F908();
          if ((v15 & 1) != 0)
          {
            v16 = *(_QWORD *)(v8 + 8 * v12);
            result = swift_retain();
            v17 = v12 - 3;
            if (__OFADD__(v14, 1))
              goto LABEL_30;
          }
          else
          {
            result = sub_23486FEFC();
            v16 = result;
            v17 = v12 - 3;
            if (__OFADD__(v14, 1))
            {
LABEL_30:
              __break(1u);
              goto LABEL_31;
            }
          }
          v18 = sub_2347DFE10(v16, v31, *(_QWORD *)(v32 + 88));
          v20 = v19;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v13 = sub_23479E084(0, v13[2] + 1, 1, v13);
          v22 = v13[2];
          v21 = v13[3];
          if (v22 >= v21 >> 1)
            v13 = sub_23479E084((_QWORD *)(v21 > 1), v22 + 1, 1, v13);
          v13[2] = v22 + 1;
          v23 = &v13[2 * v22];
          v23[4] = v18;
          v23[5] = v20;
          swift_release();
          ++v12;
          if (v17 == MEMORY[0x234945494](v8, v2))
            goto LABEL_19;
        }
      }
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_19:
      swift_bridgeObjectRelease();
      v6 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_23479DF78(0, v30[2] + 1, 1, v30);
      v5 = v29;
      v25 = v6[2];
      v24 = v6[3];
      if (v25 >= v24 >> 1)
        v6 = sub_23479DF78((_QWORD *)(v24 > 1), v25 + 1, 1, v6);
      v6[2] = v25 + 1;
      v6[v25 + 4] = v13;
      if (v29 == MEMORY[0x234945494](v27, v26))
        goto LABEL_29;
    }
  }
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_29:
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

uint64_t sub_234845510()
{
  return 0x552E616D65686353;
}

uint64_t sub_234845534()
{
  return 0;
}

uint64_t SchemaProperty.isAttribute.getter()
{
  return 0;
}

uint64_t sub_234845544()
{
  return 0;
}

uint64_t SchemaProperty.isRelationship.getter()
{
  return 0;
}

uint64_t sub_234845554()
{
  return 0;
}

uint64_t SchemaProperty.isTransient.getter()
{
  return 0;
}

uint64_t sub_234845568(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2348455CC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1;
}

uint64_t sub_234845608(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23484566C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_2;
}

uint64_t sub_2348456A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_234845704()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_234845738(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23484577C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_0;
}

uint64_t sub_2348457B8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 56);
}

uint64_t sub_2348457E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_234845824())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_1;
}

uint64_t sub_234845860(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[32];

  sub_2347C5508(a1, (uint64_t)v5);
  v3 = *a2 + 64;
  swift_beginAccess();
  sub_23480FADC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_2348458BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_2347C5508(v1 + 64, a1);
}

uint64_t sub_234845904(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  sub_23480FADC(a1, v1 + 64);
  return swift_endAccess();
}

uint64_t (*sub_234845954())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_3;
}

uint64_t sub_234845990()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t sub_2348459C0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 96) = a1;
  return result;
}

uint64_t (*sub_2348459FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_8;
}

uint64_t sub_234845A38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 104) = v3;
  *(_QWORD *)(v4 + 112) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_234845A94()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_234845ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_234845B2C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_4;
}

void static Schema.Attribute.Option.unique.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  *(_DWORD *)(a1 + 33) = 0;
  *(_BYTE *)(a1 + 37) = 0;
}

uint64_t static Schema.Attribute.Option.transformable(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542574D0);
  result = sub_23486F77C();
  *(_BYTE *)a2 = 1;
  *(_QWORD *)(a2 + 8) = a1;
  *(_QWORD *)(a2 + 16) = result;
  *(_QWORD *)(a2 + 24) = v5;
  *(_DWORD *)(a2 + 32) = 0;
  *(_WORD *)(a2 + 36) = 0;
  return result;
}

uint64_t static Schema.Attribute.Option.transformable(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = 1;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_DWORD *)(a3 + 32) = 0;
  *(_WORD *)(a3 + 36) = 0;
  return swift_bridgeObjectRetain();
}

void static Schema.Attribute.Option.externalStorage.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 32) = 256;
  *(_DWORD *)(a1 + 34) = 0;
}

double static Schema.Attribute.Option.allowsCloudEncryption.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 32) = 0;
  *(_QWORD *)&result = 0x100000001;
  *(_DWORD *)(a1 + 34) = 1;
  return result;
}

void static Schema.Attribute.Option.preserveValueOnDeletion.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 31) = 0;
  *(_WORD *)(a1 + 35) = 1;
  *(_BYTE *)(a1 + 37) = 0;
}

void static Schema.Attribute.Option.ephemeral.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 29) = 0;
  *(_BYTE *)(a1 + 37) = 1;
}

void static Schema.Attribute.Option.spotlight.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 36) = 1;
}

uint64_t Schema.Attribute.__allocating_init(_:originalName:hashModifier:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v10 = swift_allocObject();
  v11 = v10;
  *(_QWORD *)(v10 + 104) = 0;
  v12 = (_QWORD *)(v10 + 104);
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  v13 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 120) = v13;
  if (a3)
    v14 = a2;
  else
    v14 = 0;
  if (a3)
    v15 = a3;
  else
    v15 = 0xE000000000000000;
  *(_QWORD *)(v10 + 32) = v14;
  *(_QWORD *)(v10 + 40) = v15;
  *(_QWORD *)(v10 + 48) = a1;
  swift_beginAccess();
  *v12 = a4;
  *(_QWORD *)(v11 + 112) = a5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0xE000000000000000;
  *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE4AD8] + 8;
  *(_BYTE *)(v11 + 96) = 0;
  return v11;
}

uint64_t Schema.Attribute.init(_:originalName:hashModifier:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_QWORD *)(v5 + 104) = 0;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  v8 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v5 + 120) = v8;
  if (a3)
    v9 = a2;
  else
    v9 = 0;
  if (a3)
    v10 = a3;
  else
    v10 = 0xE000000000000000;
  *(_QWORD *)(v5 + 32) = v9;
  *(_QWORD *)(v5 + 40) = v10;
  *(_QWORD *)(v5 + 48) = a1;
  swift_beginAccess();
  *(_QWORD *)(v5 + 104) = a4;
  *(_QWORD *)(v5 + 112) = a5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0xE000000000000000;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE4AD8] + 8;
  *(_BYTE *)(v5 + 96) = 0;
  return v5;
}

uint64_t Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;

  *(_OWORD *)(v9 + 64) = 0u;
  *(_OWORD *)(v9 + 80) = 0u;
  *(_QWORD *)(v9 + 104) = 0;
  v13 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v9 + 112) = 0;
  *(_QWORD *)(v9 + 120) = v13;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  if (a4)
    v14 = a3;
  else
    v14 = 0;
  v15 = 0xE000000000000000;
  if (a4)
    v15 = a4;
  *(_QWORD *)(v9 + 32) = v14;
  *(_QWORD *)(v9 + 40) = v15;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 56) = a6;
  swift_beginAccess();
  sub_23484845C(a7, v9 + 64);
  swift_endAccess();
  swift_beginAccess();
  *(_QWORD *)(v9 + 104) = a8;
  *(_QWORD *)(v9 + 112) = a9;
  swift_bridgeObjectRelease();
  if (swift_conformsToProtocol2())
    v16 = a6;
  else
    v16 = 0;
  v17 = v16 != 0;
  sub_2348484A4(a7);
  *(_BYTE *)(v9 + 96) = v17;
  return v9;
}

uint64_t sub_234845F20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_234845F48 + 4 * byte_23487BD22[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_234845F48()
{
  return 0x6C616E696769726FLL;
}

uint64_t sub_234845F68()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_234845F80()
{
  return 0x70795465756C6176;
}

uint64_t sub_234845FA4()
{
  return 0x69646F4D68736168;
}

uint64_t sub_234845FC4()
{
  return 0x6E6F6974704F7369;
}

uint64_t sub_234845FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2348508D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_234846004()
{
  return 0;
}

void sub_234846010(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23484601C()
{
  sub_2348484E4();
  return sub_234870544();
}

uint64_t sub_234846044()
{
  sub_2348484E4();
  return sub_234870550();
}

uint64_t Schema.Attribute.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Schema.Attribute.init(from:)(a1);
  return v2;
}

uint64_t Schema.Attribute.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189AF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v3;
  *(_OWORD *)(v3 + 64) = 0u;
  v9 = v3 + 64;
  *(_QWORD *)(v9 + 40) = 0;
  *(_OWORD *)(v9 + 16) = 0u;
  v10 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v9 + 48) = 0;
  *(_QWORD *)(v9 + 56) = v10;
  v11 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, v11);
  sub_2348484E4();
  sub_2348704FC();
  if (v2)
  {
    v14 = (uint64_t)v26;
    v17 = v27;
    sub_2348484A4(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Schema.Attribute();
    swift_deallocPartialClassInstance();
    v15 = v14;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1Tm_6(v15);
    return v17;
  }
  v12 = v6;
  LOBYTE(v28) = 0;
  v13 = sub_234870160();
  v17 = v27;
  *(_QWORD *)(v27 + 16) = v13;
  *(_QWORD *)(v17 + 24) = v18;
  LOBYTE(v28) = 1;
  *(_QWORD *)(v17 + 32) = sub_234870160();
  *(_QWORD *)(v17 + 40) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189B08);
  v29 = 2;
  sub_23484858C(&qword_256189B10, &qword_256189B08, (uint64_t (*)(void))sub_234848548, MEMORY[0x24BEE12D0]);
  sub_234870184();
  *(_QWORD *)(v17 + 48) = v28;
  LOBYTE(v28) = 3;
  sub_234870160();
  v25 = v5;
  v20 = sub_23486FEC0();
  result = swift_bridgeObjectRelease();
  if (v20)
  {
    *(_QWORD *)(v17 + 56) = v20;
    LOBYTE(v28) = 4;
    v21 = v25;
    v22 = sub_2348700AC();
    v24 = v23;
    swift_beginAccess();
    *(_QWORD *)(v17 + 104) = v22;
    *(_QWORD *)(v17 + 112) = v24;
    swift_bridgeObjectRelease();
    v29 = 5;
    LOBYTE(v22) = sub_23487016C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v21);
    *(_BYTE *)(v17 + 96) = v22 & 1;
    v15 = (uint64_t)v26;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_234846418(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189B20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_2348484E4();
  sub_234870508();
  swift_beginAccess();
  v16 = 0;
  swift_bridgeObjectRetain();
  sub_2348701C0();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v15 = 1;
    swift_bridgeObjectRetain();
    sub_2348701C0();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v14 = *(_QWORD *)(v3 + 48);
    LOBYTE(v12) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189B08);
    sub_23484858C(&qword_256189B28, &qword_256189B08, (uint64_t (*)(void))sub_2348485F0, MEMORY[0x24BEE12A0]);
    sub_234870208();
    swift_beginAccess();
    v12 = sub_23486FF98();
    v13 = v10;
    LOBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256188748);
    sub_234851B68(&qword_256189B38, &qword_256188748, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    sub_234870208();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v11 = *(_OWORD *)(v3 + 104);
    v17 = 4;
    sub_234870208();
    swift_beginAccess();
    v17 = 5;
    sub_2348701CC();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_234846764()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2348467C8()
{
  return 1;
}

uint64_t sub_2348467D0()
{
  return 0;
}

uint64_t sub_2348467D8()
{
  return 0;
}

uint64_t sub_2348467E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = (unsigned __int8 *)(v1 + 64);
  v4 = v2 - 1;
  do
  {
    result = *v3;
    if ((result & 1) != 0)
      break;
    v6 = v4--;
    v3 += 40;
  }
  while (v6);
  return result;
}

uint64_t sub_234846840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[3];

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  v10[0] = v1;
  if (swift_conformsToProtocol2())
    v2 = v1;
  else
    v2 = 0;
  while (v2)
  {
    sub_2347E85B4(v2, v10);
    v3 = v10[0];
    if (swift_conformsToProtocol2())
      v2 = v3;
    else
      v2 = 0;
  }
  result = swift_dynamicCastMetatype();
  if (result)
  {
    swift_beginAccess();
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = (unsigned __int8 *)(v5 + 65);
      v8 = v6 - 1;
      do
      {
        result = *v7;
        if ((result & 1) != 0)
          break;
        v9 = v8--;
        v7 += 40;
      }
      while (v9);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_234846934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = (unsigned __int8 *)(v1 + 32);
  v4 = v2 - 1;
  do
  {
    result = *v3;
    if ((result & 1) != 0)
      break;
    v6 = v4--;
    v3 += 40;
  }
  while (v6);
  return result;
}

uint64_t sub_234846994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)&v6 = 0;
  *((_QWORD *)&v6 + 1) = 0xE000000000000000;
  sub_23486FEA8();
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_23486F7DC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  MEMORY[0x234945404](v1, &type metadata for Schema.Attribute.Option);
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  sub_2347C5508(v0 + 64, (uint64_t)&v4);
  if (v5)
  {
    sub_234797294(&v4, &v6);
  }
  else
  {
    v7 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v6 = 7104878;
    *((_QWORD *)&v6 + 1) = 0xE300000000000000;
    sub_2348484A4((uint64_t)&v4);
  }
  sub_23486FF74();
  __swift_destroy_boxed_opaque_existential_1Tm_6((uint64_t)&v6);
  sub_23486F7DC();
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)&v4 = *(_QWORD *)(v0 + 104);
  *((_QWORD *)&v4 + 1) = v2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256188748);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t Schema.Attribute.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2348484A4(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Schema.Attribute.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2348484A4(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_234846C94()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

uint64_t (*sub_234846D08())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_5;
}

uint64_t (*sub_234846D50())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_6;
}

uint64_t sub_234846D90()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(_QWORD *)(v1 + 56);
}

uint64_t sub_234846DCC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 56) = a1;
  return result;
}

uint64_t (*sub_234846E0C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_7;
}

uint64_t sub_234846E4C()
{
  return 1;
}

uint64_t sub_234846E54()
{
  return 0;
}

uint64_t sub_234846E5C()
{
  return 0;
}

uint64_t sub_234846E64()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 96);
}

uint64_t sub_234846EA0()
{
  return sub_2348467E0() & 1;
}

uint64_t sub_234846EC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 432))();
}

uint64_t sub_234846EEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 360))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_234846F18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 368))();
}

uint64_t sub_234846F40()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

uint64_t sub_234846FB0()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_234847018()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

BOOL sub_234847084(_QWORD **a1, _QWORD **a2)
{
  return _s9SwiftData6SchemaC9AttributeC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t Schema.CompositeAttribute.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.CompositeAttribute.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 128) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.CompositeAttribute.properties.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_9;
}

uint64_t sub_23484714C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_234847174 + 4 * byte_23487BD28[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_234847174()
{
  return 0x6C616E696769726FLL;
}

uint64_t sub_234847194()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_2348471AC()
{
  return 0x70795465756C6176;
}

uint64_t sub_2348471D0()
{
  return 0x69747265706F7270;
}

uint64_t sub_2348471F0()
{
  return 0x6E6F6974704F7369;
}

uint64_t sub_23484720C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_234850614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_234847230()
{
  return 0;
}

void sub_23484723C(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_234847248()
{
  sub_23484FA1C();
  return sub_234870544();
}

uint64_t sub_234847270()
{
  sub_23484FA1C();
  return sub_234870550();
}

uint64_t Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int128 *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t *v111;
  uint64_t v112;
  _QWORD *v113;
  __int128 v114;
  __int128 v115;

  *(_QWORD *)(v9 + 128) = MEMORY[0x24BEE4AF8];
  v17 = (_QWORD *)(v9 + 128);
  sub_2347C5508(a7, (uint64_t)&v114);
  swift_bridgeObjectRetain();
  Schema.Attribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(a1, a2, a3, a4, a5, a6, (uint64_t)&v114, a8, a9);
  *(_QWORD *)&v114 = a6;
  if (swift_conformsToProtocol2())
    v18 = a6;
  else
    v18 = 0;
  if (v18)
  {
    do
    {
      sub_2347E85B4(v18, (uint64_t *)&v114);
      v19 = (unint64_t *)v114;
      if (swift_conformsToProtocol2())
        v18 = (uint64_t)v19;
      else
        v18 = 0;
    }
    while (v18);
  }
  else
  {
    v19 = (unint64_t *)a6;
  }
  v20 = *v19;
  v112 = v9;
  if (*v19 > 0x7FF)
    goto LABEL_56;
  if (v20 - 513 >= 2)
  {
    if (v20 == 512)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      if (sub_23486F5B4())
      {
        v31 = 0;
        while (v31 < sub_23486F5B4())
        {
          v32 = sub_23486F5A8();
          *(_QWORD *)&v114 = v32;
          if (swift_conformsToProtocol2())
            v33 = v32;
          else
            v33 = 0;
          if (v33)
          {
            v34 = v33;
            do
            {
              sub_2347E85B4(v34, (uint64_t *)&v114);
              v35 = v114;
              if (swift_conformsToProtocol2())
                v34 = v35;
              else
                v34 = 0;
            }
            while (v34);
          }
          else
          {
            v35 = v32;
          }
          if (sub_234843754(v35) || (swift_conformsToProtocol2() ? (v36 = v35) : (v36 = 0), v36))
          {
            v37 = sub_23486F59C();
            v39 = v38;
            type metadata accessor for Schema.Attribute();
            v40 = swift_allocObject();
            *(_OWORD *)(v40 + 64) = 0u;
            *(_OWORD *)(v40 + 80) = 0u;
            *(_QWORD *)(v40 + 104) = 0;
            *(_QWORD *)(v40 + 112) = 0;
            *(_QWORD *)(v40 + 120) = MEMORY[0x24BEE4B00];
            *(_QWORD *)(v40 + 16) = v37;
            *(_QWORD *)(v40 + 24) = v39;
            *(_BYTE *)(v40 + 96) = v33 != 0;
            *(_QWORD *)(v40 + 32) = 0;
            *(_QWORD *)(v40 + 40) = 0xE000000000000000;
            *(_QWORD *)(v40 + 56) = v32;
            *(_QWORD *)(v40 + 48) = MEMORY[0x24BEE4AF8];
          }
          else
          {
            v42 = sub_23486F59C();
            v44 = v43;
            v114 = 0u;
            v115 = 0u;
            swift_allocObject();
            Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(v42, v44, 0, 0, MEMORY[0x24BEE4AF8], v32, &v114, 0, 0);
          }
          swift_beginAccess();
          v41 = swift_retain();
          MEMORY[0x2349453E0](v41);
          if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23486F914();
          sub_23486F950();
          sub_23486F8FC();
          swift_endAccess();
          swift_release();
          if (++v31 == sub_23486F5B4())
            goto LABEL_75;
        }
        goto LABEL_136;
      }
      goto LABEL_75;
    }
LABEL_56:
    swift_retain();
    swift_bridgeObjectRelease();
    v45 = *v19;
    v46 = sub_23486F554();
    if (v45 > 0x7FF)
    {
      if (v46 - 2048 >= 0xFFFFFFFFFFFFF801)
        goto LABEL_79;
    }
    else if (v46 >= 0x800)
    {
      if (v45)
        goto LABEL_79;
    }
    else if (v45 != v46)
    {
      goto LABEL_79;
    }
    if (sub_23486F5B4())
    {
      v47 = 0;
      while (v47 < sub_23486F5B4())
      {
        v48 = sub_23486F5A8();
        v49 = sub_23486F59C();
        v51 = v50;
        if (!sub_23486F7B8())
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)&v114 = 95;
          *((_QWORD *)&v114 + 1) = 0xE100000000000000;
          sub_2348702B0();
          sub_23486F7DC();
          swift_bridgeObjectRelease();
          v51 = *((_QWORD *)&v114 + 1);
          v49 = v114;
        }
        if (sub_234843754(v48))
        {
          type metadata accessor for Schema.Attribute();
          v52 = swift_allocObject();
          *(_OWORD *)(v52 + 64) = 0u;
          *(_OWORD *)(v52 + 80) = 0u;
          *(_QWORD *)(v52 + 104) = 0;
          *(_QWORD *)(v52 + 112) = 0;
          *(_QWORD *)(v52 + 120) = MEMORY[0x24BEE4B00];
          *(_QWORD *)(v52 + 16) = v49;
          *(_QWORD *)(v52 + 24) = v51;
          *(_QWORD *)(v52 + 56) = v48;
          if (swift_conformsToProtocol2())
            v53 = v48;
          else
            v53 = 0;
          *(_BYTE *)(v52 + 96) = v53 != 0;
          *(_QWORD *)(v52 + 32) = 0;
          *(_QWORD *)(v52 + 40) = 0xE000000000000000;
          *(_QWORD *)(v52 + 48) = MEMORY[0x24BEE4AF8];
          swift_beginAccess();
          *(_BYTE *)(v52 + 96) = 1;
        }
        else
        {
          v114 = 0u;
          v115 = 0u;
          v54 = swift_allocObject();
          Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(v49, v51, 0, 0, MEMORY[0x24BEE4AF8], v48, &v114, 0, 0);
          swift_beginAccess();
          *(_BYTE *)(v54 + 96) = 1;
          swift_beginAccess();
          v55 = swift_bridgeObjectRetain();
          sub_23484879C(v55);
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        v56 = swift_retain();
        MEMORY[0x2349453E0](v56);
        if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23486F914();
        ++v47;
        sub_23486F950();
        sub_23486F8FC();
        swift_endAccess();
        swift_release();
        if (v47 == sub_23486F5B4())
          goto LABEL_75;
      }
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      *(_QWORD *)&v114 = 0;
      *((_QWORD *)&v114 + 1) = 0xE000000000000000;
      sub_23486FEA8();
      sub_23486F7DC();
      sub_23486F560();
      sub_23486F7DC();
      swift_bridgeObjectRelease();
      while (1)
      {
        sub_234870004();
        __break(1u);
LABEL_79:
        *(_QWORD *)&v114 = 0;
        *((_QWORD *)&v114 + 1) = 0xE000000000000000;
        sub_23486FEA8();
        sub_23486F7DC();
        sub_23487055C();
        sub_23486F7DC();
        swift_bridgeObjectRelease();
      }
    }
LABEL_75:
    sub_2348484A4(a7);
    v28 = v112;
    goto LABEL_76;
  }
  swift_retain();
  v21 = 0;
  if (v20 > 0x7FF)
    goto LABEL_24;
LABEL_21:
  if (v20 - 513 >= 2)
  {
LABEL_24:
    while (v21)
    {
LABEL_15:
      if (v20 - 513 > 1)
      {
        v23 = 0;
      }
      else
      {
        swift_getKeyPath();
        v22 = sub_23486FD58();
        swift_release();
        v23 = (*(_DWORD *)(*(unint64_t *)((char *)v19 + v22) + 20) & 0xFFFFFF)
            + (unint64_t)*(unsigned int *)(*(unint64_t *)((char *)v19 + v22) + 24);
      }
      if (v21 >= v23)
        goto LABEL_134;
      swift_getKeyPath();
      v24 = sub_23486FD58();
      swift_release();
      v25 = *(__int128 **)((char *)v19 + v24);
      swift_getKeyPath();
      sub_23486FD58();
      v26 = *((_DWORD *)v25 + 4);
      v114 = *v25;
      LODWORD(v115) = v26;
      swift_getAtKeyPath();
      swift_release();
      if ((*(_BYTE *)sub_23486F548() & 1) != 0)
        goto LABEL_137;
      ++v21;
      v20 = *v19;
      if (*v19 <= 0x7FF)
        goto LABEL_21;
    }
  }
  else
  {
    swift_getKeyPath();
    v27 = sub_23486FD58();
    swift_release();
    if (v21 != (*(_DWORD *)(*(unint64_t *)((char *)v19 + v27) + 20) & 0xFFFFFF)
              + (unint64_t)*(unsigned int *)(*(unint64_t *)((char *)v19 + v27) + 24))
    {
      v20 = *v19;
      goto LABEL_15;
    }
  }
  *((_QWORD *)&v115 + 1) = MEMORY[0x24BEE1328];
  LOBYTE(v114) = 1;
  v28 = v9;
  v29 = v9 + 120;
  swift_beginAccess();
  swift_retain();
  sub_2347C69F4((uint64_t)&v114, 0x657079546D756E45, 0xE800000000000000);
  swift_endAccess();
  swift_release();
  if (swift_conformsToProtocol2())
    v30 = (uint64_t)v19;
  else
    v30 = 0;
  if (v30)
  {
    sub_234848634(v30, a1, a2, v112);
    swift_bridgeObjectRelease();
    swift_release();
    sub_2348484A4(a7);
    return v28;
  }
  v111 = (uint64_t *)v29;
  swift_bridgeObjectRelease();
  v58 = 0;
  v59 = MEMORY[0x24BEE4B00];
  v60 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v63 = *v19;
    if (*v19 > 0x7FF || v63 - 513 >= 2)
      break;
    swift_getKeyPath();
    v64 = sub_23486FD58();
    swift_release();
    if (v58 == (*(_DWORD *)(*(unint64_t *)((char *)v19 + v64) + 20) & 0xFFFFFF)
              + (unint64_t)*(unsigned int *)(*(unint64_t *)((char *)v19 + v64) + 24))
      goto LABEL_132;
    v63 = *v19;
LABEL_91:
    if (v63 - 513 > 1)
    {
      v66 = 0;
    }
    else
    {
      swift_getKeyPath();
      v65 = sub_23486FD58();
      swift_release();
      v66 = (*(_DWORD *)(*(unint64_t *)((char *)v19 + v65) + 20) & 0xFFFFFF)
          + (unint64_t)*(unsigned int *)(*(unint64_t *)((char *)v19 + v65) + 24);
    }
    if (v58 >= v66)
      goto LABEL_135;
    v67 = (unint64_t *)sub_23486F56C();
    if (v67)
    {
      v68 = (uint64_t)v67;
      v69 = *v67;
      v70 = sub_23486F554();
      if (v69 >= 0x800)
      {
        if (v70 - 2048 < 0xFFFFFFFFFFFFF801)
          goto LABEL_109;
      }
      else if (v70 >= 0x800)
      {
        if (!v69)
        {
LABEL_109:
          v83 = sub_23486F578();
          v85 = v84;
          v114 = 0u;
          v115 = 0u;
          v86 = swift_allocObject();
          v87 = v85;
          v60 = MEMORY[0x24BEE4AF8];
          Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(v83, v87, 0, 0, MEMORY[0x24BEE4AF8], v68, &v114, 0, 0);
          swift_beginAccess();
          *(_BYTE *)(v86 + 96) = 1;
          swift_beginAccess();
          v88 = swift_retain();
          MEMORY[0x2349453E0](v88);
          if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23486F914();
          sub_23486F950();
          sub_23486F8FC();
          swift_endAccess();
          goto LABEL_84;
        }
      }
      else if (v69 == v70)
      {
        goto LABEL_109;
      }
      v89 = sub_23486F578();
      v91 = v90;
      v92 = swift_allocObject();
      v93 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v92 + 128) = MEMORY[0x24BEE4AF8];
      *(_OWORD *)(v92 + 64) = 0u;
      *(_OWORD *)(v92 + 80) = 0u;
      *(_QWORD *)(v92 + 104) = 0;
      *(_QWORD *)(v92 + 112) = 0;
      *(_QWORD *)(v92 + 120) = MEMORY[0x24BEE4B00];
      *(_QWORD *)(v92 + 16) = v89;
      *(_QWORD *)(v92 + 24) = v91;
      *(_QWORD *)(v92 + 56) = v68;
      if (swift_conformsToProtocol2())
        v94 = v68;
      else
        v94 = 0;
      v95 = v94 != 0;
      *(_BYTE *)(v92 + 96) = v94 != 0;
      *(_QWORD *)(v92 + 32) = 0;
      *(_QWORD *)(v92 + 40) = 0xE000000000000000;
      *(_QWORD *)(v92 + 48) = v93;
      swift_beginAccess();
      *(_BYTE *)(v92 + 96) = 1;
      if (sub_234843754(v68))
      {
        type metadata accessor for Schema.Attribute();
        v96 = swift_allocObject();
        *(_OWORD *)(v96 + 64) = 0u;
        *(_OWORD *)(v96 + 80) = 0u;
        *(_QWORD *)(v96 + 104) = 0;
        *(_QWORD *)(v96 + 112) = 0;
        *(_QWORD *)(v96 + 120) = MEMORY[0x24BEE4B00];
        *(_QWORD *)(v96 + 16) = 12383;
        *(_QWORD *)(v96 + 24) = 0xE200000000000000;
        *(_QWORD *)(v96 + 32) = 0;
        *(_BYTE *)(v96 + 96) = v95;
        v97 = (_BYTE *)(v96 + 96);
        *(_QWORD *)(v96 + 40) = 0xE000000000000000;
        *(_QWORD *)(v96 + 56) = v68;
        v60 = MEMORY[0x24BEE4AF8];
        *(_QWORD *)(v96 + 48) = MEMORY[0x24BEE4AF8];
        swift_beginAccess();
        *v97 = 1;
      }
      else
      {
        v114 = 0u;
        v115 = 0u;
        v98 = swift_allocObject();
        v60 = MEMORY[0x24BEE4AF8];
        Schema.CompositeAttribute.init(name:originalName:options:valueType:defaultValue:hashModifier:)(12383, 0xE200000000000000, 0, 0, MEMORY[0x24BEE4AF8], v68, &v114, 0, 0);
        swift_beginAccess();
        *(_BYTE *)(v98 + 96) = 1;
        swift_beginAccess();
        v99 = swift_bridgeObjectRetain();
        sub_23484879C(v99);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v100 = swift_retain();
      MEMORY[0x2349453E0](v100);
      if (*(_QWORD *)((*(_QWORD *)(v92 + 128) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v92 + 128) & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        sub_23486F914();
      sub_23486F950();
      sub_23486F8FC();
      swift_endAccess();
      swift_beginAccess();
      v101 = swift_retain();
      MEMORY[0x2349453E0](v101);
      if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23486F914();
      sub_23486F950();
      sub_23486F8FC();
      swift_endAccess();
      swift_release();
      swift_release();
      v28 = v112;
    }
    else
    {
      v71 = sub_23486F578();
      v73 = v72;
      type metadata accessor for Schema.Attribute();
      v74 = swift_allocObject();
      v75 = v59;
      v76 = v74;
      *(_OWORD *)(v74 + 64) = 0u;
      *(_OWORD *)(v74 + 80) = 0u;
      *(_QWORD *)(v74 + 104) = 0;
      *(_QWORD *)(v74 + 112) = 0;
      *(_QWORD *)(v74 + 120) = v75;
      *(_QWORD *)(v74 + 16) = v71;
      *(_QWORD *)(v74 + 24) = v73;
      v77 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v74 + 56) = MEMORY[0x24BEE0D00];
      if (swift_conformsToProtocol2())
        v78 = v77;
      else
        v78 = 0;
      *(_BYTE *)(v76 + 96) = v78 != 0;
      *(_QWORD *)(v76 + 32) = 0;
      *(_QWORD *)(v76 + 40) = 0xE000000000000000;
      *(_QWORD *)(v76 + 48) = v60;
      swift_beginAccess();
      *(_BYTE *)(v76 + 96) = 1;
      swift_beginAccess();
      v79 = swift_retain();
      MEMORY[0x2349453E0](v79);
      if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23486F914();
      sub_23486F950();
      sub_23486F8FC();
      swift_endAccess();
      v80 = *v111;
      if (!*(_QWORD *)(*v111 + 16))
      {
        v114 = 0u;
        v115 = 0u;
LABEL_82:
        sub_2348484A4((uint64_t)&v114);
LABEL_83:
        __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
        v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_234877ED0;
        swift_retain();
        *(_QWORD *)(v61 + 32) = sub_23486F578();
        *(_QWORD *)(v61 + 40) = v62;
        *((_QWORD *)&v115 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_254258650);
        *(_QWORD *)&v114 = v61;
        swift_beginAccess();
        sub_2347C69F4((uint64_t)&v114, 1836412517, 0xE400000000000000);
        swift_endAccess();
        swift_release();
LABEL_84:
        swift_release();
        goto LABEL_85;
      }
      swift_bridgeObjectRetain();
      v81 = sub_2347CD9BC(1836412517, 0xE400000000000000);
      if ((v82 & 1) != 0)
      {
        sub_234785C80(*(_QWORD *)(v80 + 56) + 32 * v81, (uint64_t)&v114);
      }
      else
      {
        v114 = 0u;
        v115 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v115 + 1))
        goto LABEL_82;
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258650);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_83;
      v103 = v113;
      v104 = sub_23486F578();
      v106 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v103 = sub_23479E084(0, v113[2] + 1, 1, v113);
      v108 = v103[2];
      v107 = v103[3];
      if (v108 >= v107 >> 1)
        v103 = sub_23479E084((_QWORD *)(v107 > 1), v108 + 1, 1, v103);
      v103[2] = v108 + 1;
      v109 = &v103[2 * v108];
      v109[4] = v104;
      v109[5] = v106;
      *((_QWORD *)&v115 + 1) = v102;
      *(_QWORD *)&v114 = v103;
      swift_beginAccess();
      v28 = v112;
      swift_retain();
      sub_2347C69F4((uint64_t)&v114, 1836412517, 0xE400000000000000);
      swift_endAccess();
      swift_release();
      swift_release();
      v60 = MEMORY[0x24BEE4AF8];
    }
LABEL_85:
    ++v58;
    v59 = MEMORY[0x24BEE4B00];
  }
  if (v58)
    goto LABEL_91;
LABEL_132:
  sub_2348484A4(a7);
LABEL_76:
  swift_release();
  return v28;
}

uint64_t sub_23484845C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2348484A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2348484E4()
{
  unint64_t result;

  result = qword_256189B00;
  if (!qword_256189B00)
  {
    result = MEMORY[0x2349465EC](&unk_23487CD9C, &_s9AttributeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189B00);
  }
  return result;
}

uint64_t type metadata accessor for Schema.Attribute()
{
  return objc_opt_self();
}

unint64_t sub_234848548()
{
  unint64_t result;

  result = qword_256189B18;
  if (!qword_256189B18)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Attribute.Option, &type metadata for Schema.Attribute.Option);
    atomic_store(result, (unint64_t *)&qword_256189B18);
  }
  return result;
}

uint64_t sub_23484858C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x2349465EC](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2348485F0()
{
  unint64_t result;

  result = qword_256189B30;
  if (!qword_256189B30)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Attribute.Option, &type metadata for Schema.Attribute.Option);
    atomic_store(result, (unint64_t *)&qword_256189B30);
  }
  return result;
}

uint64_t sub_234848634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for Schema.Attribute();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 64) = 0u;
  *(_OWORD *)(v8 + 80) = 0u;
  *(_QWORD *)(v8 + 104) = 0;
  *(_QWORD *)(v8 + 112) = 0;
  *(_QWORD *)(v8 + 120) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 56) = AssociatedTypeWitness;
  if (swift_conformsToProtocol2())
    v9 = AssociatedTypeWitness;
  else
    v9 = 0;
  *(_BYTE *)(v8 + 96) = v9 != 0;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = 0xE000000000000000;
  *(_QWORD *)(v8 + 48) = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  *(_BYTE *)(v8 + 96) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v10 = swift_retain();
  MEMORY[0x2349453E0](v10);
  if (*(_QWORD *)((*(_QWORD *)(a4 + 128) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a4 + 128) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_23486F914();
  sub_23486F950();
  sub_23486F8FC();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_23484879C(unint64_t a1)
{
  return sub_2348487A8(a1, (void (*)(uint64_t))sub_23484879C);
}

uint64_t sub_2348487A8(unint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_23487001C();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = 0;
      do
      {
        v7 = MEMORY[0x234945A1C](v6, a1);
        type metadata accessor for Schema.CompositeAttribute();
        if (swift_dynamicCastClass())
        {
          swift_beginAccess();
          v8 = swift_bridgeObjectRetain();
          a2(v8);
          swift_bridgeObjectRelease();
        }
        ++v6;
        swift_beginAccess();
        *(_BYTE *)(v7 + 96) = 1;
        swift_unknownObjectRelease();
      }
      while (v4 != v6);
    }
    else
    {
      type metadata accessor for Schema.CompositeAttribute();
      v9 = 0;
      do
      {
        v10 = *(_QWORD *)(a1 + 8 * v9 + 32);
        if (swift_dynamicCastClass())
        {
          swift_beginAccess();
          swift_retain();
          v11 = swift_bridgeObjectRetain();
          a2(v11);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain();
        }
        ++v9;
        swift_beginAccess();
        *(_BYTE *)(v10 + 96) = 1;
        swift_release();
      }
      while (v4 != v9);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Schema.CompositeAttribute.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Schema.CompositeAttribute.init(from:)(a1);
  return v2;
}

uint64_t Schema.CompositeAttribute.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[7];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189B40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 128) = MEMORY[0x24BEE4AF8];
  sub_23484F9D8((uint64_t)a1, (uint64_t)v13);
  Schema.Attribute.init(from:)(v13);
  if (!v2)
  {
    v9 = a1[3];
    v12 = a1[4];
    __swift_project_boxed_opaque_existential_1Tm_3(a1, v9);
    sub_23484FA1C();
    swift_retain();
    sub_2348704FC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189B50);
    LOBYTE(v13[0]) = 4;
    sub_23484FA60(&qword_256189B58, &qword_2542588A8, (uint64_t)&protocol conformance descriptor for Schema.Attribute, MEMORY[0x24BEE12D0]);
    sub_234870184();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    v11 = v13[6];
    swift_beginAccess();
    *(_QWORD *)(v3 + 128) = v11;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1Tm_6((uint64_t)a1);
  return v3;
}

uint64_t Schema.CompositeAttribute.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v10;
  _BYTE v11[8];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189B60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_23484FA1C();
  sub_234870508();
  swift_beginAccess();
  v18 = 0;
  swift_bridgeObjectRetain();
  sub_2348701C0();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v17 = 1;
    swift_bridgeObjectRetain();
    sub_2348701C0();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v16 = *(_QWORD *)(v3 + 48);
    v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189B08);
    sub_23484858C(&qword_256189B28, &qword_256189B08, (uint64_t (*)(void))sub_2348485F0, MEMORY[0x24BEE12A0]);
    sub_234870208();
    swift_beginAccess();
    v15 = 5;
    sub_2348701CC();
    swift_beginAccess();
    v13 = sub_23486FF98();
    v14 = v10;
    LOBYTE(v12) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256188748);
    sub_234851B68(&qword_256189B38, &qword_256188748, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    sub_234870208();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v12 = *(_QWORD *)(v3 + 128);
    v11[7] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189B50);
    sub_23484FA60(&qword_256189B68, &qword_254258890, (uint64_t)&protocol conformance descriptor for Schema.Attribute, MEMORY[0x24BEE12A0]);
    sub_234870208();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t Schema.CompositeAttribute.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258958);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_234879D80;
  *(_QWORD *)&v15 = 0;
  *((_QWORD *)&v15 + 1) = 0xE000000000000000;
  sub_23486FEA8();
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_23486F7DC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  MEMORY[0x234945404](v2, &type metadata for Schema.Attribute.Option);
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  sub_2347C5508(v0 + 64, (uint64_t)&v13);
  if (v14)
  {
    sub_234797294(&v13, &v15);
  }
  else
  {
    v16 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v15 = 7104878;
    *((_QWORD *)&v15 + 1) = 0xE300000000000000;
    sub_2348484A4((uint64_t)&v13);
  }
  sub_23486FF74();
  __swift_destroy_boxed_opaque_existential_1Tm_6((uint64_t)&v15);
  v3 = v18;
  *(_QWORD *)(v1 + 32) = v17;
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = 0xD000000000000011;
  *(_QWORD *)(v1 + 56) = 0x8000000234875ED0;
  swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 128);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258650);
    sub_234784FB4();
    v12 = sub_23486F6BC();
    swift_bridgeObjectRelease();
    return v12;
  }
  swift_bridgeObjectRetain();
  result = sub_23487001C();
  v5 = result;
  if (!result)
    goto LABEL_16;
LABEL_6:
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x234945A1C](v7, v4);
      }
      else
      {
        v8 = *(_QWORD *)(v4 + 8 * v7 + 32);
        swift_retain();
      }
      *(_QWORD *)&v13 = 0;
      *((_QWORD *)&v13 + 1) = 0xE000000000000000;
      sub_23486F7DC();
      v17 = v8;
      type metadata accessor for Schema.Attribute();
      sub_23486FF74();
      v9 = v13;
      v11 = *(_QWORD *)(v1 + 16);
      v10 = *(_QWORD *)(v1 + 24);
      if (v11 >= v10 >> 1)
        v1 = (uint64_t)sub_23479E084((_QWORD *)(v10 > 1), v11 + 1, 1, (_QWORD *)v1);
      ++v7;
      *(_QWORD *)(v1 + 16) = v11 + 1;
      *(_OWORD *)(v1 + 16 * v11 + 32) = v9;
      swift_release();
    }
    while (v5 != v7);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void Schema.CompositeAttribute.__allocating_init(_:originalName:hashModifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void Schema.CompositeAttribute.init(_:originalName:hashModifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23484936C()
{
  return swift_bridgeObjectRelease();
}

uint64_t Schema.CompositeAttribute.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2348484A4(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Schema.CompositeAttribute.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2348484A4(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_234849418()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_234849464(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_10;
}

uint64_t sub_2348494F4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_234849540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.originalName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_14;
}

uint64_t Schema.Relationship.keypath.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t Schema.Relationship.keypath.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*Schema.Relationship.keypath.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_11;
}

uint64_t Schema.Relationship.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Relationship.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_12;
}

uint64_t Schema.Relationship.valueType.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 64);
}

uint64_t Schema.Relationship.valueType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*Schema.Relationship.valueType.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_13;
}

uint64_t Schema.Relationship.destination.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Relationship.destination.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.destination.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_15;
}

uint64_t Schema.Relationship.deleteRule.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 88);
  return result;
}

uint64_t Schema.Relationship.deleteRule.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 88) = v2;
  return result;
}

uint64_t (*Schema.Relationship.deleteRule.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess_1;
}

uint64_t Schema.Relationship.inverseName.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Relationship.inverseName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.inverseName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_16;
}

uint64_t Schema.Relationship.inverseKeyPath.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t Schema.Relationship.inverseKeyPath.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t (*Schema.Relationship.inverseKeyPath.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_17;
}

uint64_t Schema.Relationship.minimumModelCount.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 120);
}

uint64_t Schema.Relationship.minimumModelCount.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v2 + 120) = a1;
  *(_BYTE *)(v2 + 128) = a2 & 1;
  return result;
}

uint64_t (*Schema.Relationship.minimumModelCount.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_18;
}

uint64_t Schema.Relationship.maximumModelCount.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 136);
}

uint64_t Schema.Relationship.maximumModelCount.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v2 + 136) = a1;
  *(_BYTE *)(v2 + 144) = a2 & 1;
  return result;
}

uint64_t (*Schema.Relationship.maximumModelCount.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_19;
}

uint64_t Schema.Relationship.hashModifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Schema.Relationship.hashModifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 160) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Relationship.hashModifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_20;
}

uint64_t Schema.Relationship.DeleteRule.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2348700A0();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t Schema.Relationship.DeleteRule.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_234849DD0 + 4 * byte_23487BD2E[*v0]))(0x6E6F697463416F6ELL, 0xE800000000000000);
}

uint64_t sub_234849DD0()
{
  return 0x7966696C6C756ELL;
}

uint64_t sub_234849DE8()
{
  return 0x65646163736163;
}

uint64_t sub_234849E00()
{
  return 2037278052;
}

void sub_234849E10(char *a1)
{
  sub_234843CB0(*a1);
}

void sub_234849E1C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_234870484();
  __asm { BR              X9 }
}

uint64_t sub_234849E68()
{
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

void sub_234849ED0()
{
  __asm { BR              X10 }
}

uint64_t sub_234849F0C()
{
  sub_23486F7AC();
  return swift_bridgeObjectRelease();
}

void sub_234849F60()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_234870484();
  __asm { BR              X9 }
}

uint64_t sub_234849FA8()
{
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

uint64_t sub_23484A010@<X0>(char *a1@<X8>)
{
  return Schema.Relationship.DeleteRule.init(rawValue:)(a1);
}

uint64_t sub_23484A01C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23484A04C + 4 * byte_23487BD3E[*v0]))();
}

void sub_23484A04C(_QWORD *a1@<X8>)
{
  *a1 = 0x7966696C6C756ELL;
  a1[1] = 0xE700000000000000;
}

void sub_23484A068(_QWORD *a1@<X8>)
{
  *a1 = 0x65646163736163;
  a1[1] = 0xE700000000000000;
}

void sub_23484A084(_QWORD *a1@<X8>)
{
  *a1 = 2037278052;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_23484A098()
{
  sub_23485376C();
  return sub_23486F8C0();
}

uint64_t sub_23484A0F4()
{
  sub_23485376C();
  return sub_23486F8B4();
}

void static Schema.Relationship.Option.unique.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Schema.Relationship.Option.debugDescription.getter()
{
  _BYTE *v0;

  if (*v0 == 1)
    sub_23486F7DC();
  return 0;
}

uint64_t Schema.Relationship.Option.hash(into:)()
{
  return sub_23487049C();
}

BOOL static Schema.Relationship.Option.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23484A1E4()
{
  return 1;
}

uint64_t sub_23484A1F0()
{
  return sub_234870490();
}

uint64_t sub_23484A218()
{
  return 0x7571696E5573695FLL;
}

uint64_t sub_23484A234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7571696E5573695FLL && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2348702E0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23484A2D4()
{
  return 0;
}

void sub_23484A2E0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23484A2EC()
{
  sub_23484FAE4();
  return sub_234870544();
}

uint64_t sub_23484A314()
{
  sub_23484FAE4();
  return sub_234870550();
}

uint64_t Schema.Relationship.Option.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189B70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_23484FAE4();
  sub_234870508();
  sub_2348701CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Schema.Relationship.Option.hashValue.getter()
{
  sub_234870484();
  sub_23487049C();
  return sub_2348704B4();
}

uint64_t Schema.Relationship.Option.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189B80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_23484FAE4();
  sub_2348704FC();
  if (!v2)
  {
    v9 = sub_23487016C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm_6((uint64_t)a1);
}

uint64_t sub_23484A570@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return Schema.Relationship.Option.init(from:)(a1, a2);
}

uint64_t sub_23484A584(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189B70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_23484FAE4();
  sub_234870508();
  sub_2348701CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23484A66C()
{
  sub_234870484();
  sub_23487049C();
  return sub_2348704B4();
}

uint64_t sub_23484A6B0()
{
  return sub_23487049C();
}

uint64_t sub_23484A6D8()
{
  sub_234870484();
  sub_23487049C();
  return sub_2348704B4();
}

uint64_t sub_23484A718()
{
  _BYTE *v0;

  if (*v0 == 1)
    sub_23486F7DC();
  return 0;
}

BOOL sub_23484A770(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Schema.Relationship.__allocating_init(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v15;
  char v16;
  uint64_t v17;

  v15 = a4 & 1;
  v16 = a6 & 1;
  swift_allocObject();
  v17 = sub_234851698(a1, a2, a3, v15, a5, v16, a7, a8, a9, a10, a11);
  swift_release();
  return v17;
}

uint64_t Schema.Relationship.init(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  v11 = sub_234851698(a1, a2, a3, a4 & 1, a5, a6 & 1, a7, a8, a9, a10, a11);
  swift_release();
  return v11;
}

uint64_t sub_23484A884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v5 + 48) = 0;
  *(_BYTE *)(v5 + 88) = 1;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_BYTE *)(v5 + 128) = 1;
  *(_QWORD *)(v5 + 136) = 0;
  *(_BYTE *)(v5 + 144) = 1;
  *(_QWORD *)(v5 + 152) = 0;
  *(_QWORD *)(v5 + 160) = 0;
  *(_WORD *)(v5 + 168) = 0;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  if (a5)
  {
    swift_beginAccess();
    v7 = *(_QWORD *)(a5 + 32);
    v8 = *(_QWORD *)(a5 + 40);
  }
  else
  {
    v8 = a2;
    v7 = a1;
  }
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = v8;
  swift_beginAccess();
  *(_QWORD *)(v5 + 48) = a4;
  swift_retain();
  swift_release();
  *(_QWORD *)(v5 + 64) = a3;
  if (a5)
  {
    swift_beginAccess();
    *(_QWORD *)(v5 + 56) = *(_QWORD *)(a5 + 56);
    swift_beginAccess();
    v9 = *(_BYTE *)(a5 + 88);
    swift_beginAccess();
    *(_BYTE *)(v5 + 88) = v9;
    swift_beginAccess();
    v10 = *(_QWORD *)(a5 + 112);
    if (v10)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v11 = swift_retain();
      v12 = sub_2347DFD1C(v11);
      v14 = v13;
      v15 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0)
        v15 = v12 & 0xFFFFFFFFFFFFLL;
      if (v15)
      {
        v16 = v12;
        swift_beginAccess();
        *(_QWORD *)(v5 + 112) = v10;
        swift_release();
        swift_beginAccess();
        *(_QWORD *)(v5 + 96) = v16;
        *(_QWORD *)(v5 + 104) = v14;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_256189240 != -1)
          swift_once();
        v17 = dyld_program_sdk_at_least();
        swift_release();
        if (v17)
        {
          swift_beginAccess();
          *(_QWORD *)(v5 + 112) = 0;
          swift_release();
          swift_beginAccess();
          *(_QWORD *)(v5 + 96) = 0;
          *(_QWORD *)(v5 + 104) = 0;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v5 + 169) = 1;
        }
      }
    }
    else
    {
      if ((*(_BYTE *)(a5 + 169) & 1) != 0)
        *(_BYTE *)(v5 + 169) = 1;
      swift_retain();
      swift_bridgeObjectRetain();
    }
    swift_beginAccess();
    v18 = *(_QWORD *)(a5 + 120);
    v19 = *(_BYTE *)(a5 + 128);
    swift_beginAccess();
    *(_QWORD *)(v5 + 120) = v18;
    *(_BYTE *)(v5 + 128) = v19;
    swift_beginAccess();
    v20 = *(_QWORD *)(a5 + 136);
    v21 = *(_BYTE *)(a5 + 144);
    swift_beginAccess();
    *(_QWORD *)(v5 + 136) = v20;
    *(_BYTE *)(v5 + 144) = v21;
    swift_beginAccess();
    v23 = *(_QWORD *)(a5 + 152);
    v22 = *(_QWORD *)(a5 + 160);
    swift_bridgeObjectRetain();
    swift_release();
    swift_beginAccess();
    *(_QWORD *)(v5 + 152) = v23;
    *(_QWORD *)(v5 + 160) = v22;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE4AF8];
    swift_beginAccess();
    *(_BYTE *)(v5 + 88) = 1;
  }
  sub_23484FB28(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258970);
  v24 = sub_23486F77C();
  v26 = v25;
  swift_release();
  swift_release();
  *(_QWORD *)(v5 + 72) = v24;
  *(_QWORD *)(v5 + 80) = v26;
  *(_BYTE *)(v5 + 168) = sub_23484FD44(a3);
  return v5;
}

uint64_t sub_23484AC68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23484AC94 + 4 * byte_23487BD42[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_23484AC94()
{
  return 0x6C616E696769726FLL;
}

uint64_t sub_23484ACB4()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_23484ACCC()
{
  return 0x70795465756C6176;
}

uint64_t sub_23484ACF0()
{
  return 0x74616E6974736564;
}

uint64_t sub_23484AD10()
{
  return 0x75526574656C6564;
}

uint64_t sub_23484AD2C()
{
  return 0x4E65737265766E69;
}

unint64_t sub_23484AD4C()
{
  return 0xD000000000000011;
}

uint64_t sub_23484AD74()
{
  return 0x69646F4D68736168;
}

BOOL sub_23484AD94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23484ADAC()
{
  return sub_234870490();
}

uint64_t sub_23484ADD8()
{
  unsigned __int8 *v0;

  return sub_23484AC68(*v0);
}

uint64_t sub_23484ADE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_234850194(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23484AE04()
{
  return 0;
}

void sub_23484AE10(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_23484AE1C()
{
  sub_234851838();
  return sub_234870544();
}

uint64_t sub_23484AE44()
{
  sub_234851838();
  return sub_234870550();
}

uint64_t Schema.Relationship.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Schema.Relationship.init(from:)(a1);
  return v2;
}

uint64_t Schema.Relationship.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;

  v2 = v1;
  v39 = *v2;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189B88);
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v2;
  v2[17] = 0;
  v7 = v2 + 17;
  *(v7 - 11) = 0;
  *((_BYTE *)v7 - 48) = 1;
  *(_OWORD *)(v7 - 5) = 0u;
  *(_OWORD *)(v7 - 3) = 0u;
  *((_BYTE *)v7 - 8) = 1;
  *((_BYTE *)v7 + 8) = 1;
  v7[2] = 0;
  v7[3] = 0;
  *((_WORD *)v7 + 16) = 0;
  v8 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, v8);
  sub_234851838();
  v9 = v40;
  sub_2348704FC();
  if (v9)
  {
    v10 = v48;
    swift_release();
    v15 = (uint64_t)v41;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    v16 = v15;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1Tm_6(v16);
    return (uint64_t)v10;
  }
  v40 = v7 - 5;
  v36 = v7 + 2;
  v37 = v4;
  LOBYTE(v46) = 0;
  v11 = v38;
  v12 = sub_234870160();
  v13 = v48;
  v48[2] = v12;
  v13[3] = v14;
  LOBYTE(v46) = 1;
  v13[4] = sub_234870160();
  v13[5] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189B98);
  v45 = 2;
  sub_23484858C(&qword_256189BA0, &qword_256189B98, (uint64_t (*)(void))sub_23485187C, MEMORY[0x24BEE12D0]);
  sub_234870184();
  v13[7] = v46;
  LOBYTE(v46) = 3;
  v19 = sub_234870160();
  v35 = 0;
  v34 = v19;
  v20 = sub_23486FEC0();
  if (v20)
  {
    v21 = v20;
    swift_bridgeObjectRelease();
    v13[8] = v21;
    LOBYTE(v46) = 5;
    sub_2348518C0();
    sub_234870184();
    v34 = (uint64_t)(v13 + 8);
    LOBYTE(v21) = v45;
    swift_beginAccess();
    *((_BYTE *)v7 - 48) = v21;
    v45 = 4;
    v13[9] = sub_234870160();
    v13[10] = v22;
    v45 = 6;
    v23 = sub_2348700AC();
    v25 = v24;
    swift_beginAccess();
    v13[12] = v23;
    v13[13] = v25;
    swift_bridgeObjectRelease();
    v44 = 9;
    v26 = sub_2348700AC();
    v28 = v27;
    swift_beginAccess();
    v13[19] = v26;
    v13[20] = v28;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *((_BYTE *)v13 + 168) = sub_23484FD44(v13[8]);
    v43 = 7;
    v29 = sub_2348700DC();
    LOBYTE(v28) = v30;
    swift_beginAccess();
    v13[15] = v29;
    *((_BYTE *)v13 + 128) = v28 & 1;
    v42 = 8;
    v31 = sub_2348700DC();
    LOBYTE(v28) = v32;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v11);
    swift_beginAccess();
    v10 = v48;
    v48[17] = v31;
    *((_BYTE *)v10 + 144) = v28 & 1;
    v16 = (uint64_t)v41;
    goto LABEL_4;
  }
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  v46 = 0xD000000000000021;
  v47 = 0x8000000234875F40;
  sub_23486F7DC();
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t Schema.Relationship.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v13[16];
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189BB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_234851838();
  sub_234870508();
  swift_beginAccess();
  v26 = 0;
  swift_bridgeObjectRetain();
  sub_2348701C0();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v25 = 1;
    swift_bridgeObjectRetain();
    sub_2348701C0();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v24 = *(_QWORD *)(v3 + 56);
    LOBYTE(v22) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189B98);
    sub_23484858C(&qword_256189BC0, &qword_256189B98, (uint64_t (*)(void))sub_234851904, MEMORY[0x24BEE12A0]);
    sub_234870208();
    swift_beginAccess();
    sub_23486FF98();
    if (v10)
    {
      LOBYTE(v22) = 3;
      sub_2348701C0();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v21 = *(_BYTE *)(v3 + 88);
      v20 = 5;
      sub_234851948();
      sub_234870208();
      swift_beginAccess();
      v20 = 4;
      swift_bridgeObjectRetain();
      sub_2348701C0();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v19 = 6;
      swift_bridgeObjectRetain();
      sub_2348701B4();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v11 = *(_BYTE *)(v3 + 128);
      v17 = *(_QWORD *)(v3 + 120);
      v18 = v11;
      LOBYTE(v15) = 7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256189BD8);
      sub_234851B68(&qword_256189BE0, &qword_256189BD8, MEMORY[0x24BEE1770], MEMORY[0x24BEE4AA8]);
      sub_234870208();
      swift_beginAccess();
      v12 = *(_BYTE *)(v3 + 144);
      v15 = *(_QWORD *)(v3 + 136);
      v16 = v12;
      LOBYTE(v14) = 8;
      sub_234870208();
      swift_beginAccess();
      v14 = *(_OWORD *)(v3 + 152);
      v13[15] = 9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256188748);
      sub_234851B68(&qword_256189B38, &qword_256188748, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
      sub_234870208();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      v22 = 0;
      v23 = 0xE000000000000000;
      sub_23486FEA8();
      swift_bridgeObjectRelease();
      v22 = 0xD00000000000001FLL;
      v23 = 0x8000000234875F70;
      swift_getMetatypeMetadata();
      sub_23487055C();
      sub_23486F7DC();
      swift_bridgeObjectRelease();
      result = sub_234870004();
      __break(1u);
    }
  }
  return result;
}

uint64_t Schema.Relationship.isAttribute.getter()
{
  return 0;
}

uint64_t Schema.Relationship.isTransient.getter()
{
  return 0;
}

uint64_t Schema.Relationship.hash(into:)()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Relationship.debugDescription.getter()
{
  uint64_t v0;

  sub_23486FEA8();
  sub_23486F7DC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x234945404](v0, &type metadata for Schema.Relationship.Option);
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189BE8);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Schema.Relationship.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Schema.Relationship.__deallocating_deinit()
{
  Schema.Relationship.deinit();
  return swift_deallocClassInstance();
}

uint64_t Schema.Relationship.hashValue.getter()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

uint64_t sub_23484BE7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23484BECC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23484BF20())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_21;
}

uint64_t sub_23484BF64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23484BFB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23484C008())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_22;
}

uint64_t sub_23484C048()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(_QWORD *)(v1 + 64);
}

uint64_t sub_23484C084(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 64) = a1;
  return result;
}

uint64_t (*sub_23484C0C4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1_23;
}

uint64_t sub_23484C104()
{
  return 0;
}

uint64_t sub_23484C10C()
{
  return 0;
}

uint64_t sub_23484C114()
{
  return 0;
}

BOOL sub_23484C11C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 64);
  if (swift_conformsToProtocol2())
    v3 = v2;
  else
    v3 = 0;
  return v3 != 0;
}

uint64_t sub_23484C178()
{
  return Schema.Relationship.isUnique.getter() & 1;
}

uint64_t sub_23484C19C()
{
  return Schema.Relationship.debugDescription.getter();
}

uint64_t sub_23484C1BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = Schema.Relationship.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_23484C210(_QWORD *a1)
{
  return Schema.Relationship.encode(to:)(a1);
}

uint64_t sub_23484C230()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

uint64_t sub_23484C2A0()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23484C308()
{
  sub_234870484();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  swift_bridgeObjectRelease();
  return sub_2348704B4();
}

BOOL sub_23484C374(uint64_t *a1, _QWORD **a2)
{
  return _s9SwiftData6SchemaC12RelationshipC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t Schema.Index.name.getter()
{
  return 0x492E616D65686353;
}

uint64_t Schema.Index.name.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Index.name.modify(uint64_t a1))()
{
  strcpy((char *)a1, "Schema.Index");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  return sub_2348537E8;
}

uint64_t Schema.Index.originalName.getter()
{
  return 0x492E616D65686353;
}

uint64_t Schema.Index.originalName.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Index.originalName.modify(uint64_t a1))()
{
  strcpy((char *)a1, "Schema.Index");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  return sub_23484C430;
}

uint64_t sub_23484C430()
{
  return swift_bridgeObjectRelease();
}

void Schema.Index.valueType.getter()
{
  sub_23485012C();
}

void Schema.Index.valueType.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *v3 = v5;
  v3[1] = v5;
  v3[2] = v4;
  v3[3] = v4;
  type metadata accessor for Schema.Index.Types();
}

void (*sub_23484C488())(void **a1)
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = sub_23486F98C();
  return sub_23484C4B4;
}

void sub_23484C4B4(void **a1)
{
  free(*a1);
}

uint64_t Schema.Index.isUnique.getter()
{
  return 0;
}

void static Schema.Index.== infix(_:_:)()
{
  sub_234844AD0();
}

unint64_t sub_23484C524(unint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = result;
  v5 = result >> 62;
  if (!(result >> 62))
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_34:
    swift_bridgeObjectRetain();
    v22 = sub_23487001C();
    result = swift_bridgeObjectRelease();
    if (v6 == v22)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_23487001C();
  result = swift_bridgeObjectRelease();
  v7 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_34;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = v4 & 0xFFFFFFFFFFFFFF8;
  v9 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v4 < 0)
    v8 = v4;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    result = MEMORY[0x234945A1C](0, v4);
    v12 = (_QWORD *)result;
    v13 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
      goto LABEL_18;
LABEL_41:
    v14 = (_QWORD *)MEMORY[0x234945A1C](0, a2);
LABEL_20:
    v15 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v12, v14);
    swift_release();
    swift_release();
    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v20 = i - 4;
        if (v2)
        {
          v21 = (_QWORD *)MEMORY[0x234945A1C](i - 4, v4);
          if (v13)
            goto LABEL_22;
        }
        else
        {
          if (v20 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_38:
            __break(1u);
            goto LABEL_39;
          }
          v21 = *(_QWORD **)(v4 + 8 * i);
          swift_retain();
          if (v13)
          {
LABEL_22:
            v18 = (_QWORD *)MEMORY[0x234945A1C](i - 4, a2);
            goto LABEL_23;
          }
        }
        if (v20 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v18 = *(_QWORD **)(a2 + 8 * i);
        swift_retain();
LABEL_23:
        v19 = _s9SwiftData6SchemaC6EntityC2eeoiySbAE_AEtFZ_0(v21, v18);
        swift_release();
        swift_release();
        if ((v19 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  v2 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_40;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  v12 = *(_QWORD **)(v4 + 32);
  result = swift_retain();
  v13 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
    goto LABEL_41;
LABEL_18:
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD **)(a2 + 32);
    swift_retain();
    goto LABEL_20;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_23484C7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *i;
  uint64_t result;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a1 + 68);
  for (i = (unsigned __int8 *)(a2 + 68); ; i += 40)
  {
    result = 0;
    if (*(v3 - 4) != *(i - 4))
      break;
    if (((*(v3 - 2) ^ *(i - 2)) & 1) != 0)
      break;
    if (((*v3 ^ *i) & 1) != 0)
      break;
    if (((*(v3 - 3) ^ *(i - 3)) & 1) != 0)
      break;
    if (((*(v3 - 1) ^ *(i - 1)) & 1) != 0)
      break;
    v6 = *(v3 - 36);
    v7 = *(i - 36);
    if (((v6 ^ v7) & 1) != 0)
      break;
    if ((v6 & v7) == 1)
    {
      v8 = *(_QWORD *)(v3 - 12);
      v9 = *(_QWORD *)(i - 12);
      if (v8)
      {
        if (!v9 || (*(_QWORD *)(v3 - 20) != *(_QWORD *)(i - 20) || v8 != v9) && (sub_2348702E0() & 1) == 0)
          return 0;
      }
      else if (v9)
      {
        return 0;
      }
    }
    v3 += 40;
    if (!--v2)
      return 1;
  }
  return result;
}

uint64_t sub_23484C8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 32;
    v4 = a2 + 32;
    v5 = *(_QWORD **)(a1 + 32);
    v6 = *(_QWORD **)(a2 + 32);
    v7 = v5[2];
    if (v7 == v6[2])
    {
      v8 = 1;
      while (1)
      {
        if (v7 && v5 != v6)
        {
          v9 = v5[4] == v6[4] && v5[5] == v6[5];
          if (!v9 && (sub_2348702E0() & 1) == 0)
            return 0;
          if (v7 != 1)
          {
            if ((v5[6] != v6[6] || v5[7] != v6[7]) && (sub_2348702E0() & 1) == 0)
              return 0;
            v10 = v7 - 2;
            if (v10)
              break;
          }
        }
LABEL_18:
        if (v8 == v2)
          return 1;
        result = 0;
        v12 = 8 * v8++;
        v5 = *(_QWORD **)(v3 + v12);
        v6 = *(_QWORD **)(v4 + v12);
        v7 = v5[2];
        if (v7 != v6[2])
          return result;
      }
      v13 = v6 + 9;
      v14 = v5 + 9;
      while (1)
      {
        v15 = *(v14 - 1) == *(v13 - 1) && *v14 == *v13;
        if (!v15 && (sub_2348702E0() & 1) == 0)
          break;
        v13 += 2;
        v14 += 2;
        if (!--v10)
          goto LABEL_18;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_23484CA04(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_2348702E0(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_2348702E0() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_23484CAC8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = a1 + 5;
  v6 = a2 + 5;
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

void Schema.Index.hash(into:)()
{
  sub_234844AD0();
}

uint64_t Schema.Index.indices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Schema.Index.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t Schema.Index.init(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void Schema.Index.__allocating_init(_:)()
{
  swift_allocObject();
  sub_23485198C();
}

void Schema.Index.init(_:)()
{
  sub_23485198C();
}

void Schema.Index.debugDescription.getter()
{
  sub_23486FEA8();
  sub_23486F7DC();
  type metadata accessor for Schema.Index.Types();
}

uint64_t sub_23484CCA4()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_23486F98C();
  MEMORY[0x2349465EC](MEMORY[0x24BEE12F8], v0);
  sub_2348702C8();
  return v2;
}

uint64_t static Schema.Index.CodingKeys.== infix(_:_:)()
{
  return 1;
}

uint64_t Schema.Index.CodingKeys.hash(into:)()
{
  return sub_234870490();
}

uint64_t Schema.Index.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73656369646E69 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2348702E0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void Schema.Index.CodingKeys.init(intValue:)(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Schema.Index.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t Schema.Index.CodingKeys.stringValue.getter()
{
  return 0x73656369646E69;
}

uint64_t sub_23484CDE4()
{
  return 1;
}

uint64_t sub_23484CDF4()
{
  return 0x73656369646E69;
}

uint64_t sub_23484CE10()
{
  return 0;
}

uint64_t sub_23484CE20(uint64_t a1)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Index<A>.CodingKeys, a1);
  return sub_234870544();
}

uint64_t sub_23484CE54(uint64_t a1)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Index<A>.CodingKeys, a1);
  return sub_234870550();
}

uint64_t Schema.Index.encode(to:)(_QWORD *a1)
{
  return sub_23484DCA4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for Schema.Index.CodingKeys, (uint64_t)&protocol conformance descriptor for Schema.Index<A>.CodingKeys, (uint64_t (*)(uint64_t))sub_234844AD0);
}

uint64_t Schema.Index.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  Schema.Index.init(from:)(a1, v3, v4, v5);
  return v2;
}

uint64_t Schema.Index.init(from:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for Schema.Index.CodingKeys(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Index<A>.CodingKeys, v6);
  v8 = sub_23487019C();
  MEMORY[0x24BDAC7A8](v8);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_2348704FC();
  if (!v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189BF0);
    sub_234851AE0(&qword_256189C08, &qword_256189C10, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_234870184();
    sub_23484D0CC();
  }
  swift_deallocPartialClassInstance();
  __swift_destroy_boxed_opaque_existential_1Tm_6((uint64_t)a1);
  return v4;
}

void sub_23484D0CC()
{
  type metadata accessor for Schema.Index.Types();
}

uint64_t Schema.Index.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

void Schema.Index.hashValue.getter()
{
  sub_234870484();
  sub_234844AD0();
}

uint64_t sub_23484D518()
{
  return 0x492E616D65686353;
}

uint64_t sub_23484D538()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23484D540(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Index.name.modify((uint64_t)v2);
  return sub_23484D57C;
}

uint64_t sub_23484D580()
{
  return 0x492E616D65686353;
}

uint64_t sub_23484D5A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23484D5A8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Index.originalName.modify((uint64_t)v2);
  return sub_23484D5E4;
}

void sub_23484D5E8()
{
  sub_23485012C();
}

void sub_23484D5F8(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  Schema.Index.valueType.modify(v2);
}

uint64_t (*sub_23484D624(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_23484D640;
}

uint64_t sub_23484D644()
{
  return 0;
}

uint64_t sub_23484D64C()
{
  return 0;
}

uint64_t sub_23484D654()
{
  return 0;
}

uint64_t sub_23484D660()
{
  return 0;
}

void sub_23484D668()
{
  Schema.Index.debugDescription.getter();
}

void sub_23484D688()
{
  Schema.Index.hashValue.getter();
}

void sub_23484D6A8()
{
  Schema.Index.hash(into:)();
}

uint64_t sub_23484D6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23484E524(a1, a2, a3, (void (*)(_BYTE *))Schema.Index.hash(into:));
}

uint64_t sub_23484D6D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = Schema.Index.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23484D6FC(_QWORD *a1)
{
  return Schema.Index.encode(to:)(a1);
}

void sub_23484D71C()
{
  static Schema.Index.== infix(_:_:)();
}

uint64_t Schema.Unique.name.getter()
{
  return 0x552E616D65686353;
}

uint64_t Schema.Unique.name.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Unique.name.modify(uint64_t a1))()
{
  strcpy((char *)a1, "Schema.Unique");
  *(_WORD *)(a1 + 14) = -4864;
  return sub_2348537EC;
}

uint64_t Schema.Unique.originalName.getter()
{
  return 0x552E616D65686353;
}

uint64_t Schema.Unique.originalName.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*Schema.Unique.originalName.modify(uint64_t a1))()
{
  strcpy((char *)a1, "Schema.Unique");
  *(_WORD *)(a1 + 14) = -4864;
  return sub_2348537F0;
}

uint64_t Schema.Unique.valueType.getter()
{
  return sub_234850164();
}

uint64_t (*Schema.Unique.valueType.modify(uint64_t *a1))()
{
  *a1 = sub_234850164();
  return nullsub_38;
}

uint64_t Schema.Unique.isUnique.getter()
{
  return 1;
}

uint64_t static Schema.Unique.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v2;

  sub_23486FF2C();
  v0 = sub_23486F98C();
  v2 = MEMORY[0x24BEE2100];
  MEMORY[0x2349465EC](MEMORY[0x24BEE12C0], v0, &v2);
  return sub_23486F9A4() & 1;
}

uint64_t Schema.Unique.hash(into:)()
{
  uint64_t v0;
  uint64_t v2;

  sub_23486FF2C();
  v0 = sub_23486F98C();
  v2 = MEMORY[0x24BEE20F8];
  swift_bridgeObjectRetain();
  MEMORY[0x2349465EC](MEMORY[0x24BEE12A8], v0, &v2);
  sub_23486F998();
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Unique.debugDescription.getter()
{
  uint64_t v0;

  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486FF2C();
  sub_23486F98C();
  v0 = sub_23486F98C();
  MEMORY[0x2349465EC](MEMORY[0x24BEE12F8], v0);
  sub_2348702C8();
  return 0;
}

uint64_t static Schema.Unique.CodingKeys.== infix(_:_:)()
{
  return 1;
}

uint64_t Schema.Unique.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x69617274736E6F63 && a2 == 0xEB0000000073746ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2348702E0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t _s9SwiftData6SchemaC5IndexC10CodingKeysO9hashValueSivg_0()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t Schema.Unique.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t Schema.Unique.CodingKeys.stringValue.getter()
{
  return 0x69617274736E6F63;
}

uint64_t sub_23484DB50()
{
  return 1;
}

uint64_t sub_23484DB5C()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23484DBA0()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23484DBDC()
{
  return 0x69617274736E6F63;
}

uint64_t sub_23484DC00()
{
  return 0;
}

uint64_t sub_23484DC10(uint64_t a1)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Unique<A>.CodingKeys, a1);
  return sub_234870544();
}

uint64_t sub_23484DC44(uint64_t a1)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Unique<A>.CodingKeys, a1);
  return sub_234870550();
}

uint64_t Schema.Unique.encode(to:)(_QWORD *a1)
{
  return sub_23484DCA4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for Schema.Unique.CodingKeys, (uint64_t)&protocol conformance descriptor for Schema.Unique<A>.CodingKeys, (uint64_t (*)(uint64_t))sub_234845238);
}

uint64_t sub_23484DCA4(_QWORD *a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[4];

  v7 = v4;
  v9 = a2(255, *(_QWORD *)(*(_QWORD *)v7 + 80), *(_QWORD *)(*(_QWORD *)v7 + 88));
  MEMORY[0x2349465EC](a3, v9);
  v10 = sub_234870280();
  v15[0] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v15 - v11;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  v13 = sub_234870508();
  v15[3] = a4(v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256189BF0);
  sub_234851AE0(&qword_256189BF8, &qword_256189C00, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_234870208();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v15[0] + 8))(v12, v10);
}

uint64_t Schema.Unique.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  Schema.Unique.init(from:)(a1, v3, v4, v5);
  return v2;
}

uint64_t Schema.Unique.init(from:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[4];

  v5 = v4;
  v7 = type metadata accessor for Schema.Unique.CodingKeys(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Unique<A>.CodingKeys, v7);
  v15[0] = sub_23487019C();
  v8 = *(_QWORD *)(v15[0] - 8);
  MEMORY[0x24BDAC7A8](v15[0]);
  v10 = (char *)v15 - v9;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  v11 = v15[1];
  sub_2348704FC();
  if (v11)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256189BF0);
    sub_234851AE0(&qword_256189C08, &qword_256189C10, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    v12 = v15[0];
    sub_234870184();
    v14 = sub_23484E018(v15[3]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v12);
    *(_QWORD *)(v5 + 16) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1Tm_6((uint64_t)a1);
  return v5;
}

uint64_t sub_23484E018(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 80);
  sub_23486FF2C();
  sub_23486F98C();
  result = sub_23486F614();
  v14 = result;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v6 = *(_QWORD *)(a1 + 32);
    v12 = a1 + 32;
    if (*(_QWORD *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      v7 = 1;
      while (1)
      {
        swift_bridgeObjectRetain();
        sub_23486F614();
        v8 = *(_QWORD *)(v6 + 16);
        if (v8)
        {
          v9 = (uint64_t *)(v6 + 40);
          do
          {
            v10 = *(v9 - 1);
            v11 = *v9;
            swift_bridgeObjectRetain();
            sub_2347DF3D8(v10, v11, v4, *(_QWORD *)(v2 + 88));
            swift_bridgeObjectRelease();
            swift_dynamicCastClassUnconditional();
            sub_23486F974();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRelease();
        sub_23486F98C();
        sub_23486F974();
        if (v7 == v13)
          break;
        v6 = *(_QWORD *)(v12 + 8 * v7++);
        if (!*(_QWORD *)(v6 + 16))
          goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      return v14;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_13:
      swift_bridgeObjectRetain();
      result = sub_234870004();
      __break(1u);
    }
  }
  return result;
}

uint64_t _s9SwiftData6SchemaC5IndexCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t Schema.Unique.hashValue.getter()
{
  sub_234870484();
  Schema.Unique.hash(into:)();
  return sub_2348704B4();
}

uint64_t sub_23484E270(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23484E2A8 + 4 * byte_23487BD4C[a1]))(0xD000000000000010, 0x80000002348761E0);
}

uint64_t sub_23484E2A8(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_23484E2F8()
{
  return 0x6F7473626D6F745FLL;
}

uint64_t sub_23484E314()
{
  return 0x67696C746F70735FLL;
}

uint64_t sub_23484E334()
{
  return 0x552E616D65686353;
}

uint64_t sub_23484E358()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23484E360(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Unique.name.modify((uint64_t)v2);
  return sub_23484E39C;
}

uint64_t sub_23484E3A0()
{
  return 0x552E616D65686353;
}

uint64_t sub_23484E3C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23484E3CC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Schema.Unique.originalName.modify((uint64_t)v2);
  return sub_23484E408;
}

uint64_t sub_23484E40C()
{
  return sub_234850164();
}

uint64_t (*sub_23484E41C(uint64_t **a1))()
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)Schema.Unique.valueType.modify(v2);
  return sub_23484E464;
}

void sub_23484E468(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_23484E494()
{
  return 0;
}

uint64_t sub_23484E49C()
{
  return 0;
}

uint64_t sub_23484E4A4()
{
  return 0;
}

uint64_t sub_23484E4B0()
{
  return 1;
}

uint64_t sub_23484E4B8()
{
  return Schema.Unique.debugDescription.getter();
}

uint64_t sub_23484E4D8()
{
  return Schema.Unique.hashValue.getter();
}

uint64_t sub_23484E4F8()
{
  return Schema.Unique.hash(into:)();
}

uint64_t sub_23484E518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23484E524(a1, a2, a3, (void (*)(_BYTE *))Schema.Unique.hash(into:));
}

uint64_t sub_23484E524(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_234870484();
  a4(v6);
  return sub_2348704B4();
}

uint64_t sub_23484E564@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = Schema.Unique.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23484E58C(_QWORD *a1)
{
  return Schema.Unique.encode(to:)(a1);
}

uint64_t sub_23484E5AC()
{
  return static Schema.Unique.== infix(_:_:)();
}

uint64_t sub_23484E5BC()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23484E604()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_23484E644()
{
  unsigned __int8 *v0;

  return sub_23484E270(*v0);
}

uint64_t sub_23484E64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_234850BA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23484E670()
{
  return 0;
}

void sub_23484E67C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23484E688()
{
  sub_234851BD0();
  return sub_234870544();
}

uint64_t sub_23484E6B0()
{
  sub_234851BD0();
  return sub_234870550();
}

uint64_t Schema.Attribute.Option.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189C18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_234851BD0();
  sub_2348704FC();
  if (!v2)
  {
    v30 = 0;
    v9 = sub_23487016C();
    v29 = 1;
    v10 = sub_2348700AC();
    v13 = v12;
    v23 = v10;
    v28 = 2;
    swift_bridgeObjectRetain();
    v22 = sub_23487016C();
    v27 = 3;
    v21 = sub_23487016C();
    v26 = 4;
    v20 = sub_23487016C();
    v25 = 5;
    v19 = sub_23487016C();
    v24 = 6;
    v14 = sub_23487016C();
    v21 &= 1u;
    v22 &= 1u;
    v20 &= 1u;
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16 = v19 & 1;
    v15(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    v17 = v23;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = v17;
    *(_QWORD *)(a2 + 24) = v13;
    *(_BYTE *)(a2 + 32) = v22;
    *(_BYTE *)(a2 + 33) = v21;
    *(_BYTE *)(a2 + 34) = v20;
    *(_BYTE *)(a2 + 35) = v16;
    *(_BYTE *)(a2 + 36) = v14 & 1;
    *(_BYTE *)(a2 + 37) = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm_6((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Attribute.Option.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[4];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189C28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v8;
  v15 = *(unsigned __int8 *)(v1 + 32);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 33);
  v10[2] = *(unsigned __int8 *)(v1 + 34);
  v10[3] = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 35);
  v10[0] = *(unsigned __int8 *)(v1 + 36);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1Tm_3(a1, a1[3]);
  sub_234851BD0();
  sub_234870508();
  LOBYTE(v13) = 0;
  sub_2348701CC();
  if (!v2)
  {
    v13 = v12;
    v14 = v11;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256188748);
    sub_234851B68(&qword_256189B38, &qword_256188748, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    sub_234870208();
    LOBYTE(v13) = 2;
    sub_2348701CC();
    LOBYTE(v13) = 3;
    sub_2348701CC();
    LOBYTE(v13) = 4;
    sub_2348701CC();
    LOBYTE(v13) = 5;
    sub_2348701CC();
    LOBYTE(v13) = 6;
    sub_2348701CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23484EBDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Schema.Attribute.Option.init(from:)(a1, a2);
}

uint64_t sub_23484EBF0(_QWORD *a1)
{
  return Schema.Attribute.Option.encode(to:)(a1);
}

uint64_t Schema.Attribute.Option.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23487049C();
  sub_23487049C();
  sub_23487049C();
  sub_23487049C();
  sub_23487049C();
  sub_23487049C();
  if (!v1)
    return sub_23487049C();
  sub_23487049C();
  swift_bridgeObjectRetain();
  sub_23486F7AC();
  return swift_bridgeObjectRelease();
}

uint64_t Schema.Attribute.Option.hashValue.getter()
{
  sub_234870484();
  Schema.Attribute.Option.hash(into:)();
  return sub_2348704B4();
}

uint64_t sub_23484ED58()
{
  sub_234870484();
  Schema.Attribute.Option.hash(into:)();
  return sub_2348704B4();
}

uint64_t sub_23484EDE4()
{
  sub_234870484();
  Schema.Attribute.Option.hash(into:)();
  return sub_2348704B4();
}

uint64_t Schema.Attribute.Option.debugDescription.getter()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  v1 = *v0;
  v2 = v0[33];
  v3 = v0[34];
  v4 = v0[35];
  v5 = v0[36];
  v6 = v0[37];
  if (v0[32] == 1)
    sub_23486F7DC();
  if (v2)
    sub_23486F7DC();
  if (v1)
  {
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256188748);
    sub_23486F77C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    if (!v3)
    {
LABEL_7:
      if (!v4)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  else if (!v3)
  {
    goto LABEL_7;
  }
  sub_23486F7DC();
  if (v4)
LABEL_8:
    sub_23486F7DC();
LABEL_9:
  if (v5)
    sub_23486F7DC();
  if (v6)
    sub_23486F7DC();
  return 0;
}

uint64_t sub_23484F04C(void *a1, char a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  id v14;
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  __swift_project_boxed_opaque_existential_1Tm_3(a3, a3[3]);
  v8 = sub_2348702D4();
  if ((a2 & 1) != 0)
    v9 = objc_msgSend(a1, sel_reverseTransformedValue_, v8);
  else
    v9 = objc_msgSend(a1, sel_transformedValue_, v8);
  v10 = v9;
  swift_unknownObjectRelease();
  if (v10)
  {
    sub_23486FD34();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_2347DDBC8((uint64_t)v15, (uint64_t)v16);
  if (v17)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v11 = *a4;
      v12 = a4[1];
      *(_OWORD *)a4 = v15[0];
      return sub_2347D9708(v11, v12);
    }
  }
  else
  {
    sub_2348484A4((uint64_t)v16);
  }
  sub_234785C80((uint64_t)a3, (uint64_t)v16);
  *(_QWORD *)&v15[0] = 0;
  *((_QWORD *)&v15[0] + 1) = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486FF74();
  sub_23486F7DC();
  sub_23486F7DC();
  sub_23486F7DC();
  v14 = objc_msgSend(a1, sel_description);
  sub_23486F770();

  sub_23486F7DC();
  swift_bridgeObjectRelease();
  result = sub_234870004();
  __break(1u);
  return result;
}

_OWORD *sub_23484F290(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6)
{
  void *v10;
  id v11;
  id v12;
  _OWORD *result;
  id v14;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;
  _OWORD v18[2];

  v10 = (void *)sub_23486F464();
  if ((a2 & 1) != 0)
    v11 = objc_msgSend(a1, sel_transformedValue_, v10);
  else
    v11 = objc_msgSend(a1, sel_reverseTransformedValue_, v10);
  v12 = v11;

  if (v12)
  {
    sub_23486FD34();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_2347DDBC8((uint64_t)v15, (uint64_t)&v16);
  if (v17)
  {
    sub_234797294(&v16, v18);
    sub_2348484A4((uint64_t)a6);
    return sub_234797294(v18, a6);
  }
  else
  {
    sub_2348484A4((uint64_t)&v16);
    *(_QWORD *)&v18[0] = 0;
    *((_QWORD *)&v18[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    v14 = objc_msgSend(a1, sel_description);
    sub_23486F770();

    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    sub_23486F458();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    *(_QWORD *)&v16 = a5;
    type metadata accessor for Schema.Attribute();
    sub_23486FF74();
    result = (_OWORD *)sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_23484F4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_234870490();
  if (v3)
  {
    v5 = 0;
    v6 = a2 + 32;
    do
    {
      v7 = *(_QWORD *)(v6 + 8 * v5);
      result = sub_234870490();
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain();
        v9 = v7 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_23486F7AC();
          swift_bridgeObjectRelease();
          v9 += 16;
          --v8;
        }
        while (v8);
        result = swift_bridgeObjectRelease();
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return result;
}

BOOL _s9SwiftData6SchemaC12RelationshipC2eeoiySbAE_AEtFZ_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != a2[2] || v5 != a2[3])
  {
    v7 = sub_2348702E0();
    result = 0;
    if ((v7 & 1) == 0)
      return result;
  }
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  v10 = a2[7];
  v11 = *(_QWORD *)(v9 + 16);
  if (v11 != *(_QWORD *)(v10 + 16))
    return 0;
  if (v11 && v9 != v10)
  {
    v13 = (_BYTE *)(v9 + 32);
    v14 = (_BYTE *)(v10 + 32);
    v15 = v11 - 1;
    do
    {
      v16 = v15;
      v17 = *v13 ^ *v14;
      if ((v17 & 1) != 0)
        break;
      --v15;
      ++v14;
      ++v13;
    }
    while (v16);
    if ((v17 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  if (v18 != a2[8])
    return 0;
  swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  if (v19 != a2[9] || v20 != a2[10])
  {
    v21 = sub_2348702E0();
    result = 0;
    if ((v21 & 1) == 0)
      return result;
  }
  swift_beginAccess();
  v22 = *(_BYTE *)(a1 + 88);
  swift_beginAccess();
  sub_234843CB0(v22);
  if ((v23 & 1) == 0)
    return 0;
  swift_beginAccess();
  v25 = *(_QWORD *)(a1 + 96);
  v24 = *(_QWORD *)(a1 + 104);
  swift_beginAccess();
  v26 = a2[13];
  if (!v24)
    return !v26;
  if (!v26)
    return 0;
  if (v25 == a2[12] && v24 == v26)
    return 1;
  v27 = sub_2348702E0();
  result = 0;
  if ((v27 & 1) != 0)
    return 1;
  return result;
}

BOOL _s9SwiftData6SchemaC9AttributeC6OptionV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  _BOOL8 result;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  result = 0;
  if (a1[32] != a2[32])
    return result;
  if (((a1[34] ^ a2[34]) & 1) != 0)
    return result;
  if (((a1[36] ^ a2[36]) & 1) != 0)
    return result;
  if (((a1[33] ^ a2[33]) & 1) != 0)
    return result;
  if (((a1[35] ^ a2[35]) & 1) != 0)
    return result;
  v4 = *a1;
  v5 = *a2;
  if (((v4 ^ v5) & 1) != 0)
    return result;
  if ((v4 & v5) != 1)
    return 1;
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a2 + 3);
  if (!v6)
    return !v7;
  if (!v7)
    return 0;
  if (*((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2) && v6 == v7)
    return 1;
  v8 = sub_2348702E0();
  result = 0;
  if ((v8 & 1) != 0)
    return 1;
  return result;
}

BOOL _s9SwiftData6SchemaC9AttributeC2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = sub_2348702E0(), result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    v9 = a1[6];
    swift_beginAccess();
    if ((sub_23484C7A8(v9, a2[6]) & 1) != 0)
    {
      swift_beginAccess();
      v10 = a1[7];
      swift_beginAccess();
      return v10 == a2[7];
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm_6(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23484F9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_23484FA1C()
{
  unint64_t result;

  result = qword_256189B48;
  if (!qword_256189B48)
  {
    result = MEMORY[0x2349465EC](&unk_23487CD4C, &_s18CompositeAttributeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189B48);
  }
  return result;
}

uint64_t sub_23484FA60(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189B50);
    v10 = sub_234851E0C(a2, type metadata accessor for Schema.Attribute, a3);
    result = MEMORY[0x2349465EC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23484FAE4()
{
  unint64_t result;

  result = qword_256189B78;
  if (!qword_256189B78)
  {
    result = MEMORY[0x2349465EC](&unk_23487CCFC, &_s12RelationshipC6OptionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189B78);
  }
  return result;
}

uint64_t sub_23484FB28(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;

  v1 = (uint64_t *)a1;
  v14 = (uint64_t *)a1;
  if (swift_conformsToProtocol2())
    v2 = (uint64_t)v1;
  else
    v2 = 0;
  while (v2)
  {
    sub_2347E85B4(v2, (uint64_t *)&v14);
    v1 = v14;
    if (swift_conformsToProtocol2())
      v2 = (uint64_t)v1;
    else
      v2 = 0;
  }
  swift_conformsToProtocol2();
  v3 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542580B0);
  v4 = *v1;
  if ((unint64_t)*v1 > 0x7FF || ((unint64_t)(v4 - 512) >= 3 ? (v5 = v4 == 0) : (v5 = 1), v5))
    v13 = sub_23486F524();
  else
    v13 = 0;
  v6 = *v3;
  if ((unint64_t)*v3 <= 0x7FF && (unint64_t)(v6 - 512) >= 3 && v6 != 0)
  {
    if (!v13)
      goto LABEL_25;
LABEL_32:
    if (swift_conformsToProtocol2())
      result = (uint64_t)v1;
    else
      result = 0;
    if (result)
      return result;
LABEL_40:
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    v14 = (uint64_t *)0xD00000000000001ELL;
    v15 = 0x8000000234876460;
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
LABEL_41:
    result = sub_234870004();
    __break(1u);
    return result;
  }
  v8 = sub_23486F524();
  if (!v13)
  {
    if (!v8)
      goto LABEL_25;
    goto LABEL_32;
  }
  if (!v8 || v8 != v13)
    goto LABEL_32;
LABEL_25:
  v9 = (uint64_t *)sub_23486F584();
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  v11 = *v9;
  if (swift_conformsToProtocol2())
    result = v11;
  else
    result = 0;
  if (!result)
    goto LABEL_41;
  return result;
}

BOOL sub_23484FD44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = a1;
  v5 = a1;
  if (swift_conformsToProtocol2())
    v2 = v1;
  else
    v2 = 0;
  while (v2)
  {
    sub_2347E85B4(v2, &v5);
    v1 = v5;
    if (swift_conformsToProtocol2())
      v2 = v1;
    else
      v2 = 0;
  }
  swift_conformsToProtocol2();
  if (swift_conformsToProtocol2())
    v3 = v1;
  else
    v3 = 0;
  return v3 != 0;
}

uint64_t *sub_23484FDEC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v1 = (uint64_t *)a1;
  v14 = (uint64_t *)a1;
  if (swift_conformsToProtocol2())
    v2 = (uint64_t)v1;
  else
    v2 = 0;
  while (v2)
  {
    sub_2347E85B4(v2, (uint64_t *)&v14);
    v1 = v14;
    if (swift_conformsToProtocol2())
      v2 = (uint64_t)v1;
    else
      v2 = 0;
  }
  swift_conformsToProtocol2();
  v3 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542580B0);
  v4 = *v1;
  if ((unint64_t)*v1 > 0x7FF || ((unint64_t)(v4 - 512) >= 3 ? (v5 = v4 == 0) : (v5 = 1), v5))
    v9 = sub_23486F524();
  else
    v9 = 0;
  v6 = *v3;
  if ((unint64_t)*v3 <= 0x7FF && (unint64_t)(v6 - 512) >= 3 && v6 != 0)
  {
    if (!v9)
      goto LABEL_29;
    return 0;
  }
  v8 = sub_23486F524();
  if (v9)
  {
    if (!v8 || v8 != v9)
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
LABEL_29:
  result = (uint64_t *)sub_23486F584();
  if (v11 >= 1)
  {
    v12 = *result;
    if (swift_conformsToProtocol2())
      v13 = v12;
    else
      v13 = 0;
    return (uint64_t *)(v13 != 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_23484FF40(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (a1 == 0xD000000000000024 && a2 == 0x8000000234876260
    || (sub_2348702E0() & 1) != 0
    || a1 == 0xD000000000000027 && a2 == 0x8000000234876290
    || (sub_2348702E0() & 1) != 0
    || a1 == 0xD000000000000022 && a2 == 0x80000002348762C0
    || (sub_2348702E0() & 1) != 0)
  {
    goto LABEL_10;
  }
  if (sub_23486F770() == a1 && v6 == a2)
    goto LABEL_14;
  v7 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    if (sub_23486F770() == a1 && v8 == a2)
      goto LABEL_14;
    v9 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      if (sub_23486F770() != a1 || v10 != a2)
      {
        v4 = sub_2348702E0();
        goto LABEL_15;
      }
LABEL_14:
      v4 = 1;
LABEL_15:
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
  }
LABEL_10:
  v4 = 1;
  return v4 & 1;
}

void sub_23485012C()
{
  type metadata accessor for Schema.Index.Types();
}

uint64_t sub_23485014C()
{
  return sub_23486F98C();
}

uint64_t sub_234850164()
{
  sub_23486FF2C();
  sub_23486F98C();
  return sub_23486F98C();
}

uint64_t sub_234850194(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEC000000656D614ELL || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70795465756C6176 && a2 == 0xED0000656D614E65 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x75526574656C6564 && a2 == 0xEA0000000000656CLL || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4E65737265766E69 && a2 == 0xEB00000000656D61 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000234876180 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002348761A0 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x69646F4D68736168 && a2 == 0xEC00000072656966)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_234850614(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEC000000656D614ELL || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70795465756C6176 && a2 == 0xED0000656D614E65 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974704F7369 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2348508D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEC000000656D614ELL || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70795465756C6176 && a2 == 0xED0000656D614E65 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69646F4D68736168 && a2 == 0xEC00000072656966 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6974704F7369 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_234850BA0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002348761E0 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000234876200 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7571696E5573695FLL && a2 == 0xE900000000000065 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000234876220 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000234876240 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F7473626D6F745FLL && a2 == 0xEA0000000000656ELL || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x67696C746F70735FLL && a2 == 0xEA00000000007468)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_234850E74(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_23479E084(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_234870064();
  __break(1u);
  return result;
}

void sub_234850FDC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, _OWORD *a6)
{
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v17;
  char v18;
  uint64_t v19;
  char v21;
  char v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;
  char v27;
  void *v28;
  id v29;

  if (a1 == 0xD000000000000024 && a2 == 0x8000000234876260)
  {
    v12 = (uint64_t *)MEMORY[0x24BDD1210];
LABEL_4:
    v13 = *v12;
    goto LABEL_27;
  }
  v14 = sub_2348702E0();
  v13 = *MEMORY[0x24BDD1210];
  if ((v14 & 1) != 0)
    goto LABEL_27;
  if (sub_23486F770() == a1 && v15 == a2)
    goto LABEL_26;
  v17 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_27;
  if (a1 == 0xD000000000000027 && a2 == 0x8000000234876290)
  {
    v12 = (uint64_t *)MEMORY[0x24BDD0E90];
    goto LABEL_4;
  }
  v18 = sub_2348702E0();
  v13 = *MEMORY[0x24BDD0E90];
  if ((v18 & 1) != 0)
    goto LABEL_27;
  if (sub_23486F770() == a1 && v19 == a2)
    goto LABEL_26;
  v21 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_27;
  if (a1 == 0xD000000000000022 && a2 == 0x80000002348762C0)
  {
    v12 = (uint64_t *)MEMORY[0x24BDD1388];
    goto LABEL_4;
  }
  v22 = sub_2348702E0();
  v13 = *MEMORY[0x24BDD1388];
  if ((v22 & 1) != 0)
    goto LABEL_27;
  if (sub_23486F770() == a1 && v23 == a2)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v27 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
  {
LABEL_27:
    v24 = objc_msgSend((id)objc_opt_self(), sel_valueTransformerForName_, v13);
    if (v24)
    {
      v25 = v24;
      goto LABEL_29;
    }
    goto LABEL_35;
  }
  v28 = (void *)sub_23486F74C();
  v25 = objc_msgSend((id)objc_opt_self(), sel_valueTransformerForName_, v28);

  if (v25)
  {
    objc_opt_self();
    if (!swift_dynamicCastObjCClass())
    {
      v26 = 0;
      goto LABEL_30;
    }
LABEL_29:
    v26 = 1;
LABEL_30:
    v29 = v25;
    sub_23484F290(v29, v26, a3, a4, a5, a6);

    return;
  }
LABEL_35:
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_2347C6460(a3, a4);
  swift_release();
  sub_234870004();
  __break(1u);
}

void sub_234851354(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v11;
  char v12;
  uint64_t v13;
  char v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  char v20;
  void *v21;
  id v22;

  if (a1 == 0xD000000000000024 && a2 == 0x8000000234876260)
  {
    v6 = (uint64_t *)MEMORY[0x24BDD1210];
LABEL_4:
    v7 = *v6;
    goto LABEL_27;
  }
  v8 = sub_2348702E0();
  v7 = *MEMORY[0x24BDD1210];
  if ((v8 & 1) != 0)
    goto LABEL_27;
  if (sub_23486F770() == a1 && v9 == a2)
    goto LABEL_26;
  v11 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    goto LABEL_27;
  if (a1 == 0xD000000000000027 && a2 == 0x8000000234876290)
  {
    v6 = (uint64_t *)MEMORY[0x24BDD0E90];
    goto LABEL_4;
  }
  v12 = sub_2348702E0();
  v7 = *MEMORY[0x24BDD0E90];
  if ((v12 & 1) != 0)
    goto LABEL_27;
  if (sub_23486F770() == a1 && v13 == a2)
    goto LABEL_26;
  v15 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    goto LABEL_27;
  if (a1 == 0xD000000000000022 && a2 == 0x80000002348762C0)
  {
    v6 = (uint64_t *)MEMORY[0x24BDD1388];
    goto LABEL_4;
  }
  v16 = sub_2348702E0();
  v7 = *MEMORY[0x24BDD1388];
  if ((v16 & 1) != 0)
    goto LABEL_27;
  if (sub_23486F770() == a1 && v17 == a2)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v20 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
LABEL_27:
    v18 = objc_msgSend((id)objc_opt_self(), sel_valueTransformerForName_, v7);
    if (v18)
    {
      v19 = v18;
LABEL_29:
      v22 = v19;
      a3();

      return;
    }
    goto LABEL_33;
  }
  v21 = (void *)sub_23486F74C();
  v19 = objc_msgSend((id)objc_opt_self(), sel_valueTransformerForName_, v21);

  if (v19)
  {
    objc_opt_self();
    swift_dynamicCastObjCClass();
    goto LABEL_29;
  }
LABEL_33:
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

uint64_t sub_234851698(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v12 = v11;
  v17 = *a2;
  *(_BYTE *)(v11 + 88) = 1;
  v18 = v11 + 88;
  *(_QWORD *)(v18 - 40) = 0;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_BYTE *)(v18 + 40) = 1;
  *(_QWORD *)(v18 + 48) = 0;
  *(_BYTE *)(v18 + 56) = 1;
  *(_QWORD *)(v18 + 64) = 0;
  *(_QWORD *)(v18 + 72) = 0;
  *(_WORD *)(v18 + 80) = 0;
  swift_beginAccess();
  *(_BYTE *)v18 = v17;
  *(_QWORD *)(v18 - 32) = a1;
  if (a9)
  {
    swift_beginAccess();
    *(_QWORD *)(v12 + 112) = a9;
    swift_retain();
    swift_release();
  }
  if (a8)
    v19 = a7;
  else
    v19 = 0;
  if (a8)
    v20 = a8;
  else
    v20 = 0xE000000000000000;
  *(_QWORD *)(v12 + 32) = v19;
  *(_QWORD *)(v12 + 40) = v20;
  swift_beginAccess();
  *(_QWORD *)(v12 + 120) = a3;
  *(_BYTE *)(v12 + 128) = a4 & 1;
  swift_beginAccess();
  *(_QWORD *)(v12 + 136) = a5;
  *(_BYTE *)(v12 + 144) = a6 & 1;
  swift_beginAccess();
  *(_QWORD *)(v12 + 152) = a10;
  *(_QWORD *)(v12 + 160) = a11;
  swift_bridgeObjectRelease();
  v21 = MEMORY[0x24BEE4AD8];
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0xE000000000000000;
  *(_QWORD *)(v12 + 64) = v21 + 8;
  *(_QWORD *)(v12 + 72) = 0;
  *(_QWORD *)(v12 + 80) = 0xE000000000000000;
  return v12;
}

unint64_t sub_234851838()
{
  unint64_t result;

  result = qword_256189B90;
  if (!qword_256189B90)
  {
    result = MEMORY[0x2349465EC](&unk_23487CCAC, &_s12RelationshipC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189B90);
  }
  return result;
}

unint64_t sub_23485187C()
{
  unint64_t result;

  result = qword_256189BA8;
  if (!qword_256189BA8)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Relationship.Option, &type metadata for Schema.Relationship.Option);
    atomic_store(result, (unint64_t *)&qword_256189BA8);
  }
  return result;
}

unint64_t sub_2348518C0()
{
  unint64_t result;

  result = qword_256189BB0;
  if (!qword_256189BB0)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Relationship.DeleteRule, &type metadata for Schema.Relationship.DeleteRule);
    atomic_store(result, (unint64_t *)&qword_256189BB0);
  }
  return result;
}

unint64_t sub_234851904()
{
  unint64_t result;

  result = qword_256189BC8;
  if (!qword_256189BC8)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Relationship.Option, &type metadata for Schema.Relationship.Option);
    atomic_store(result, (unint64_t *)&qword_256189BC8);
  }
  return result;
}

unint64_t sub_234851948()
{
  unint64_t result;

  result = qword_256189BD0;
  if (!qword_256189BD0)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Relationship.DeleteRule, &type metadata for Schema.Relationship.DeleteRule);
    atomic_store(result, (unint64_t *)&qword_256189BD0);
  }
  return result;
}

void sub_23485198C()
{
  type metadata accessor for Schema.Index.Types();
}

void type metadata accessor for Schema.Index.Types()
{
  JUMPOUT(0x234946568);
}

uint64_t type metadata accessor for Schema.Index.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Schema.Index.CodingKeys);
}

uint64_t sub_234851AE0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256189BF0);
    v10 = sub_234851B68(a2, &qword_254258650, a3, a4);
    result = MEMORY[0x2349465EC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_234851B68(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x2349465EC](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Schema.Unique.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Schema.Unique.CodingKeys);
}

unint64_t sub_234851BD0()
{
  unint64_t result;

  result = qword_256189C20;
  if (!qword_256189C20)
  {
    result = MEMORY[0x2349465EC](&unk_23487CC5C, &_s9AttributeC6OptionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189C20);
  }
  return result;
}

uint64_t sub_234851C14(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_234851E0C(&qword_2542588A8, type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
  a1[2] = sub_234851E0C(&qword_254258890, type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
  result = sub_234851E0C(&qword_254258898, type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
  a1[3] = result;
  return result;
}

uint64_t sub_234851C8C()
{
  return sub_234851E0C(&qword_2542588A0, type metadata accessor for Schema.Attribute, (uint64_t)&protocol conformance descriptor for Schema.Attribute);
}

unint64_t sub_234851CBC()
{
  unint64_t result;

  result = qword_256189C30;
  if (!qword_256189C30)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Relationship.DeleteRule, &type metadata for Schema.Relationship.DeleteRule);
    atomic_store(result, (unint64_t *)&qword_256189C30);
  }
  return result;
}

unint64_t sub_234851D04()
{
  unint64_t result;

  result = qword_256189C38;
  if (!qword_256189C38)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Relationship.Option, &type metadata for Schema.Relationship.Option);
    atomic_store(result, (unint64_t *)&qword_256189C38);
  }
  return result;
}

uint64_t sub_234851D48(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_234851E0C(&qword_2542575E0, type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
  a1[2] = sub_234851E0C(&qword_2542575C8, type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
  result = sub_234851E0C((unint64_t *)&qword_2542575D0, type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for Schema.Relationship()
{
  return objc_opt_self();
}

uint64_t sub_234851DE0()
{
  return sub_234851E0C(&qword_2542575D8, type metadata accessor for Schema.Relationship, (uint64_t)&protocol conformance descriptor for Schema.Relationship);
}

uint64_t sub_234851E0C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = MEMORY[0x2349465EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_234851E48()
{
  JUMPOUT(0x2349465ECLL);
}

void sub_234851E58()
{
  JUMPOUT(0x2349465ECLL);
}

void sub_234851E68()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_234851E78(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_234851EF0(a1, a2, a3, (uint64_t)&protocol conformance descriptor for Schema.Index<A>, (uint64_t)&protocol conformance descriptor for Schema.Index<A>, (uint64_t)&protocol conformance descriptor for Schema.Index<A>);
}

void sub_234851E94()
{
  JUMPOUT(0x2349465ECLL);
}

void sub_234851EA4()
{
  JUMPOUT(0x2349465ECLL);
}

void sub_234851EB4()
{
  JUMPOUT(0x2349465ECLL);
}

void sub_234851EC4()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_234851ED4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_234851EF0(a1, a2, a3, (uint64_t)&protocol conformance descriptor for Schema.Unique<A>, (uint64_t)&protocol conformance descriptor for Schema.Unique<A>, (uint64_t)&protocol conformance descriptor for Schema.Unique<A>);
}

uint64_t sub_234851EF0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  a1[1] = MEMORY[0x2349465EC](a4);
  a1[2] = MEMORY[0x2349465EC](a5, a2);
  result = MEMORY[0x2349465EC](a6, a2);
  a1[3] = result;
  return result;
}

void sub_234851F4C()
{
  JUMPOUT(0x2349465ECLL);
}

unint64_t sub_234851F60()
{
  unint64_t result;

  result = qword_256189C40[0];
  if (!qword_256189C40[0])
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Attribute.Option, &type metadata for Schema.Attribute.Option);
    atomic_store(result, qword_256189C40);
  }
  return result;
}

uint64_t sub_234851FA4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_234851FF0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23485203C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_234852088@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return result;
}

uint64_t sub_2348520CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 56) = v2;
  return result;
}

uint64_t sub_23485210C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 64;
  swift_beginAccess();
  return sub_2347C5508(v3, a2);
}

uint64_t sub_23485215C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 96);
  return result;
}

uint64_t sub_2348521A0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_2348521E0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 112);
  *a2 = *(_QWORD *)(v3 + 104);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_23485222C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "Schema.Index");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_234852254()
{
  return 16;
}

__n128 sub_234852260(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_234852270()
{
  return 16;
}

__n128 sub_23485227C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_234852288()
{
  sub_23485012C();
}

uint64_t sub_2348522A4(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_2348522B8()
{
  return 16;
}

__n128 sub_2348522C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_2348522D0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "Schema.Unique");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_2348522FC()
{
  return 16;
}

__n128 sub_234852308(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_234852318()
{
  return 16;
}

__n128 sub_234852324(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_234852330@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_234850164();
  *a1 = result;
  return result;
}

uint64_t sub_234852360()
{
  return 16;
}

__n128 sub_23485236C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of SchemaProperty.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SchemaProperty.name.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of SchemaProperty.name.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SchemaProperty.originalName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SchemaProperty.originalName.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of SchemaProperty.originalName.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SchemaProperty.valueType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SchemaProperty.valueType.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of SchemaProperty.valueType.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of SchemaProperty.isAttribute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of SchemaProperty.isRelationship.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of SchemaProperty.isTransient.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of SchemaProperty.isOptional.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of SchemaProperty.isUnique.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t method lookup function for Schema.Attribute()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Schema.Attribute.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of Schema.Attribute.name.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Schema.Attribute.name.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of Schema.Attribute.originalName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of Schema.Attribute.originalName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of Schema.Attribute.originalName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of Schema.Attribute.options.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Schema.Attribute.options.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of Schema.Attribute.options.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of Schema.Attribute.valueType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of Schema.Attribute.valueType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of Schema.Attribute.valueType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of Schema.Attribute.defaultValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of Schema.Attribute.defaultValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of Schema.Attribute.defaultValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of Schema.Attribute.isOptional.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of Schema.Attribute.isOptional.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of Schema.Attribute.isOptional.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of Schema.Attribute.hashModifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of Schema.Attribute.hashModifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of Schema.Attribute.hashModifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of Schema.Attribute.__allocating_init(_:originalName:hashModifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of Schema.Attribute.__allocating_init(name:originalName:options:valueType:defaultValue:hashModifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t dispatch thunk of Schema.Attribute.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t dispatch thunk of Schema.Attribute.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of Schema.Attribute.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of Schema.Attribute.isAttribute.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of Schema.Attribute.isRelationship.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of Schema.Attribute.isTransient.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of Schema.Attribute.isUnique.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of Schema.Attribute.isTransformable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of Schema.Attribute.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of Schema.Attribute.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t _s9AttributeC6OptionVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s9AttributeC6OptionVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s9AttributeC6OptionVwcp(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9AttributeC6OptionVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  return a1;
}

__n128 __swift_memcpy38_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 30) = *(_QWORD *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s9AttributeC6OptionVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  return a1;
}

uint64_t _s9AttributeC6OptionVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 38))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s9AttributeC6OptionVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 38) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 38) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Schema.Attribute.Option()
{
  return &type metadata for Schema.Attribute.Option;
}

uint64_t type metadata accessor for Schema.CompositeAttribute()
{
  return objc_opt_self();
}

uint64_t method lookup function for Schema.CompositeAttribute()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for Schema.Relationship()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Schema.Relationship.__allocating_init(_:deleteRule:minimumModelCount:maximumModelCount:originalName:inverse:hashModifier:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v6 + 192))(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of Schema.Relationship.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t _s12RelationshipC10DeleteRuleOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12RelationshipC10DeleteRuleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_234852948 + 4 * byte_23487BD58[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23485297C + 4 * byte_23487BD53[v4]))();
}

uint64_t sub_23485297C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_234852984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23485298CLL);
  return result;
}

uint64_t sub_234852998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2348529A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2348529A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2348529AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Schema.Relationship.DeleteRule()
{
  return &type metadata for Schema.Relationship.DeleteRule;
}

uint64_t _s12RelationshipC6OptionVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12RelationshipC6OptionVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_234852AB8 + 4 * byte_23487BD62[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_234852AEC + 4 * byte_23487BD5D[v4]))();
}

uint64_t sub_234852AEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_234852AF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x234852AFCLL);
  return result;
}

uint64_t sub_234852B08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x234852B10);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_234852B14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_234852B1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Schema.Relationship.Option()
{
  return &type metadata for Schema.Relationship.Option;
}

uint64_t type metadata accessor for Schema.Index(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Schema.Index);
}

uint64_t method lookup function for Schema.Index()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Schema.Index.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Schema.Index.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_234852B80()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_234852B88(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_234852BBC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_234852BC4(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_234852C18(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_234852C50(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_234852C98(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_234852CDC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_234852CE8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

uint64_t sub_234852CF4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_234852D04()
{
  return 0;
}

uint64_t sub_234852D1C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Schema.Unique(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Schema.Unique);
}

uint64_t method lookup function for Schema.Unique()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Schema.Unique.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_234852D90()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_234852DA0()
{
  return 0;
}

uint64_t _s9AttributeC6OptionV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9AttributeC6OptionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_234852E8C + 4 * byte_23487BD6C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_234852EC0 + 4 * byte_23487BD67[v4]))();
}

uint64_t sub_234852EC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_234852EC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x234852ED0);
  return result;
}

uint64_t sub_234852EDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x234852EE4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_234852EE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_234852EF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9AttributeC6OptionV10CodingKeysOMa()
{
  return &_s9AttributeC6OptionV10CodingKeysON;
}

uint64_t _s12RelationshipC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12RelationshipC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_234852FEC + 4 * byte_23487BD76[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_234853020 + 4 * byte_23487BD71[v4]))();
}

uint64_t sub_234853020(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_234853028(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x234853030);
  return result;
}

uint64_t sub_23485303C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x234853044);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_234853048(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_234853050(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23485305C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_234853068(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s12RelationshipC10CodingKeysOMa()
{
  return &_s12RelationshipC10CodingKeysON;
}

uint64_t sub_234853084(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_2348530D8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_234853118 + 4 * byte_23487BD7B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_234853138 + 4 * byte_23487BD80[v4]))();
}

_BYTE *sub_234853118(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_234853138(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_234853140(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_234853148(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_234853150(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_234853158(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_234853164()
{
  return 0;
}

ValueMetadata *_s12RelationshipC6OptionV10CodingKeysOMa()
{
  return &_s12RelationshipC6OptionV10CodingKeysON;
}

ValueMetadata *_s18CompositeAttributeC10CodingKeysOMa()
{
  return &_s18CompositeAttributeC10CodingKeysON;
}

uint64_t _s18CompositeAttributeC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s18CompositeAttributeC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_234853284 + 4 * byte_23487BD8A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2348532B8 + 4 * byte_23487BD85[v4]))();
}

uint64_t sub_2348532B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2348532C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2348532C8);
  return result;
}

uint64_t sub_2348532D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2348532DCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2348532E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2348532E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9AttributeC10CodingKeysOMa()
{
  return &_s9AttributeC10CodingKeysON;
}

unint64_t sub_23485330C()
{
  unint64_t result;

  result = qword_256189D48;
  if (!qword_256189D48)
  {
    result = MEMORY[0x2349465EC](&unk_23487C954, &_s9AttributeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D48);
  }
  return result;
}

unint64_t sub_234853354()
{
  unint64_t result;

  result = qword_256189D50;
  if (!qword_256189D50)
  {
    result = MEMORY[0x2349465EC](&unk_23487CA0C, &_s18CompositeAttributeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D50);
  }
  return result;
}

unint64_t sub_23485339C()
{
  unint64_t result;

  result = qword_256189D58;
  if (!qword_256189D58)
  {
    result = MEMORY[0x2349465EC](&unk_23487CAC4, &_s12RelationshipC6OptionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D58);
  }
  return result;
}

unint64_t sub_2348533E4()
{
  unint64_t result;

  result = qword_256189D60;
  if (!qword_256189D60)
  {
    result = MEMORY[0x2349465EC](&unk_23487CB7C, &_s12RelationshipC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D60);
  }
  return result;
}

unint64_t sub_23485342C()
{
  unint64_t result;

  result = qword_256189D68;
  if (!qword_256189D68)
  {
    result = MEMORY[0x2349465EC](&unk_23487CC34, &_s9AttributeC6OptionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D68);
  }
  return result;
}

unint64_t sub_234853474()
{
  unint64_t result;

  result = qword_256189D70;
  if (!qword_256189D70)
  {
    result = MEMORY[0x2349465EC](&unk_23487CBA4, &_s9AttributeC6OptionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D70);
  }
  return result;
}

unint64_t sub_2348534BC()
{
  unint64_t result;

  result = qword_256189D78;
  if (!qword_256189D78)
  {
    result = MEMORY[0x2349465EC](&unk_23487CBCC, &_s9AttributeC6OptionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D78);
  }
  return result;
}

unint64_t sub_234853504()
{
  unint64_t result;

  result = qword_256189D80;
  if (!qword_256189D80)
  {
    result = MEMORY[0x2349465EC](&unk_23487CAEC, &_s12RelationshipC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D80);
  }
  return result;
}

unint64_t sub_23485354C()
{
  unint64_t result;

  result = qword_256189D88;
  if (!qword_256189D88)
  {
    result = MEMORY[0x2349465EC](&unk_23487CB14, &_s12RelationshipC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D88);
  }
  return result;
}

unint64_t sub_234853594()
{
  unint64_t result;

  result = qword_256189D90;
  if (!qword_256189D90)
  {
    result = MEMORY[0x2349465EC](&unk_23487CA34, &_s12RelationshipC6OptionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D90);
  }
  return result;
}

unint64_t sub_2348535DC()
{
  unint64_t result;

  result = qword_256189D98;
  if (!qword_256189D98)
  {
    result = MEMORY[0x2349465EC](&unk_23487CA5C, &_s12RelationshipC6OptionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189D98);
  }
  return result;
}

unint64_t sub_234853624()
{
  unint64_t result;

  result = qword_256189DA0;
  if (!qword_256189DA0)
  {
    result = MEMORY[0x2349465EC](&unk_23487C97C, &_s18CompositeAttributeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189DA0);
  }
  return result;
}

unint64_t sub_23485366C()
{
  unint64_t result;

  result = qword_256189DA8;
  if (!qword_256189DA8)
  {
    result = MEMORY[0x2349465EC](&unk_23487C9A4, &_s18CompositeAttributeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189DA8);
  }
  return result;
}

unint64_t sub_2348536B4()
{
  unint64_t result;

  result = qword_256189DB0;
  if (!qword_256189DB0)
  {
    result = MEMORY[0x2349465EC](&unk_23487C8C4, &_s9AttributeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189DB0);
  }
  return result;
}

unint64_t sub_2348536FC()
{
  unint64_t result;

  result = qword_256189DB8;
  if (!qword_256189DB8)
  {
    result = MEMORY[0x2349465EC](&unk_23487C8EC, &_s9AttributeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256189DB8);
  }
  return result;
}

uint64_t sub_234853740(void *a1, char a2)
{
  uint64_t v2;

  return sub_23484F04C(a1, a2, *(_QWORD **)(v2 + 16), *(uint64_t **)(v2 + 24));
}

_QWORD *__swift_project_boxed_opaque_existential_1Tm_3(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23485376C()
{
  unint64_t result;

  result = qword_256189DC0;
  if (!qword_256189DC0)
  {
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Relationship.DeleteRule, &type metadata for Schema.Relationship.DeleteRule);
    atomic_store(result, (unint64_t *)&qword_256189DC0);
  }
  return result;
}

uint64_t sub_234853888()
{
  uint64_t result;

  result = getSDSystemVersionSDK_Spring2024();
  qword_2561914E8 = result;
  return result;
}

uint64_t sub_2348538A8()
{
  uint64_t result;

  result = getSDSystemVersionSDK_Fall2024();
  qword_2561914F0 = result;
  return result;
}

uint64_t sub_2348538C8()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B068 = result;
  return result;
}

uint64_t sub_2348538FC()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B060 = result;
  return result;
}

uint64_t sub_234853930()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B098 = result;
  return result;
}

uint64_t sub_234853964()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B0A0 = result;
  return result;
}

uint64_t sub_234853998()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B0A8 = result;
  return result;
}

uint64_t sub_2348539CC()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B088 = result;
  return result;
}

uint64_t sub_234853A00()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B070 = result;
  return result;
}

uint64_t sub_234853A34()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B078 = result;
  return result;
}

uint64_t sub_234853A68()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B090 = result;
  return result;
}

uint64_t sub_234853A9C()
{
  uint64_t result;

  result = sub_23486F74C();
  qword_25425B080 = result;
  return result;
}

uint64_t sub_234853AD0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LifecycleNotifications()
{
  return objc_opt_self();
}

uint64_t sub_234853B00()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258118);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23487CDF0;
  if (qword_254258098 != -1)
    swift_once();
  v1 = (void *)qword_25425B068;
  *(_QWORD *)(v0 + 32) = qword_25425B068;
  v2 = qword_254258090;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v4 = (void *)qword_25425B0A0;
  *(_QWORD *)(v0 + 40) = qword_25425B0A0;
  v5 = qword_254258078;
  v6 = v4;
  if (v5 != -1)
    swift_once();
  v7 = (void *)qword_25425B088;
  *(_QWORD *)(v0 + 48) = qword_25425B088;
  v8 = qword_254258068;
  v9 = v7;
  if (v8 != -1)
    swift_once();
  v10 = (void *)qword_25425B078;
  *(_QWORD *)(v0 + 56) = qword_25425B078;
  v11 = qword_254258070;
  v12 = v10;
  if (v11 != -1)
    swift_once();
  v13 = (void *)qword_25425B080;
  *(_QWORD *)(v0 + 64) = qword_25425B080;
  v14 = v13;
  return v0;
}

uint64_t sub_234853C5C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258118);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23487CDF0;
  if (qword_2542580A8 != -1)
    swift_once();
  v1 = (void *)qword_25425B060;
  *(_QWORD *)(v0 + 32) = qword_25425B060;
  v2 = qword_2542580A0;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v4 = (void *)qword_25425B0A8;
  *(_QWORD *)(v0 + 40) = qword_25425B0A8;
  v5 = qword_254258088;
  v6 = v4;
  if (v5 != -1)
    swift_once();
  v7 = (void *)qword_25425B098;
  *(_QWORD *)(v0 + 48) = qword_25425B098;
  v8 = qword_254258060;
  v9 = v7;
  if (v8 != -1)
    swift_once();
  v10 = (void *)qword_25425B070;
  *(_QWORD *)(v0 + 56) = qword_25425B070;
  v11 = qword_254258080;
  v12 = v10;
  if (v11 != -1)
    swift_once();
  v13 = (void *)qword_25425B090;
  *(_QWORD *)(v0 + 64) = qword_25425B090;
  v14 = v13;
  return v0;
}

uint64_t PersistentIdentifier.entityName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20))
                 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for PersistentIdentifier(uint64_t a1)
{
  return sub_2348560C4(a1, (uint64_t *)&unk_254258A90);
}

uint64_t PersistentIdentifier.hash(into:)()
{
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23486F6B0();
}

uint64_t PersistentIdentifier.storeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20)) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PersistentIdentifier.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_234838D04(v1, a1);
}

uint64_t sub_234853EB8()
{
  return 1;
}

uint64_t sub_234853EC4()
{
  return sub_234870490();
}

uint64_t sub_234853EEC()
{
  return 0x6E656D656C706D69;
}

uint64_t sub_234853F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656D656C706D69 && a2 == 0xEE006E6F69746174)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2348702E0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_234853FC8()
{
  return 0;
}

void sub_234853FD4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_234853FE0()
{
  sub_23485606C();
  return sub_234870544();
}

uint64_t sub_234854008()
{
  sub_23485606C();
  return sub_234870550();
}

uint64_t PersistentIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189DC8);
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23485606C();
  sub_2348704FC();
  if (!v2)
  {
    v10 = v15;
    type metadata accessor for PersistentIdentifierImplementation(0);
    sub_2348560F8(&qword_256189DD8, type metadata accessor for PersistentIdentifierImplementation, (uint64_t)&unk_23487D2BC);
    sub_234870184();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v4);
    v11 = v17;
    *(_QWORD *)&v9[*(int *)(v7 + 20)] = v17;
    v12 = v11 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
    v13 = sub_23486F440();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v12, v13);
    sub_2348107C0((uint64_t)v9, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t static PersistentIdentifier.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(int *)(type metadata accessor for PersistentIdentifier(0) + 20);
  return sub_234856138(*(_QWORD *)(a1 + v4), *(_QWORD *)(a2 + v4));
}

uint64_t PersistentIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189DE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23485606C();
  sub_234870508();
  v9[1] = *(_QWORD *)(v2 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20));
  type metadata accessor for PersistentIdentifierImplementation(0);
  sub_2348560F8(&qword_256189DE8, type metadata accessor for PersistentIdentifierImplementation, (uint64_t)&unk_23487D294);
  sub_234870208();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PersistentIdentifier.ID.hash(into:)()
{
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23486F6B0();
}

uint64_t PersistentIdentifier.ID.hashValue.getter()
{
  sub_234870484();
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  return sub_2348704B4();
}

uint64_t sub_234854414()
{
  sub_234870484();
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  return sub_2348704B4();
}

uint64_t sub_234854480()
{
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23486F6B0();
}

uint64_t sub_2348544D8()
{
  sub_234870484();
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  return sub_2348704B4();
}

void static PersistentIdentifier.identifier<A>(for:entityName:primaryKey:)()
{
  type metadata accessor for GenericPersistentIdentifierImplementation();
}

void sub_2348545A0()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2348566C4();
}

uint64_t sub_2348545D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + *(int *)(type metadata accessor for PersistentIdentifier(0) + 20)) = a1;
  v3 = a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  v4 = sub_23486F440();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v1, v3, v4);
}

uint64_t PersistentIdentifier.hashValue.getter()
{
  sub_234870484();
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  return sub_2348704B4();
}

uint64_t sub_23485469C()
{
  sub_234870484();
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  return sub_2348704B4();
}

uint64_t sub_234854708()
{
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23486F6B0();
}

uint64_t sub_234854760()
{
  sub_234870484();
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  return sub_2348704B4();
}

uint64_t sub_2348547C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_234838D04(v1, a1);
}

uint64_t sub_2348547D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_234856138(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20)));
}

BOOL sub_2348547E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_234856138(*(_QWORD *)(a2 + *(int *)(a3 + 20)), *(_QWORD *)(a1 + *(int *)(a3 + 20))) & 1) == 0;
}

BOOL sub_234854814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_234856138(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20))) & 1) == 0;
}

uint64_t sub_23485483C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_234856138(*(_QWORD *)(a2 + *(int *)(a3 + 20)), *(_QWORD *)(a1 + *(int *)(a3 + 20)));
}

uint64_t sub_234854850@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PersistentIdentifier.init(from:)(a1, a2);
}

uint64_t sub_234854864(_QWORD *a1)
{
  return PersistentIdentifier.encode(to:)(a1);
}

uint64_t sub_234854878(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;

  v2 = v1;
  v4 = sub_23486F440();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_persistentStore);
  v9 = v8;
  if (!v8)
    goto LABEL_5;
  v10 = objc_msgSend(v8, sel_identifier);

  if (!v10)
  {
    v9 = 0;
LABEL_5:
    v12 = 0;
    goto LABEL_6;
  }
  v9 = (void *)sub_23486F770();
  v12 = v11;

LABEL_6:
  *(_QWORD *)(v2 + 16) = v9;
  *(_QWORD *)(v2 + 24) = v12;
  *(_BYTE *)(v2 + 32) = objc_msgSend(a1, sel_isTemporaryID);
  v13 = objc_msgSend(a1, sel_URIRepresentation);
  sub_23486F410();

  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation, v7, v4);
  v14 = objc_msgSend(a1, sel_URIRepresentation);
  sub_23486F410();

  v15 = sub_23486F3D4();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey);
  *v18 = v15;
  v18[1] = v17;
  v19 = objc_msgSend(a1, sel_entityName);
  v20 = sub_23486F770();
  v22 = v21;

  v23 = (uint64_t *)(v2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  *v23 = v20;
  v23[1] = v22;
  return v2;
}

uint64_t sub_234854A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258828);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23486F4AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 32) = 1;
  sub_23486F4A0();
  v9 = sub_23486F494();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey);
  *v12 = v9;
  v12[1] = v11;
  v13 = sub_23481063C();
  v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  *v14 = v13;
  v14[1] = v15;
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  strcpy((char *)v19, "x-swiftdata://");
  HIBYTE(v19[1]) = -18;
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F428();
  swift_bridgeObjectRelease();
  v16 = sub_23486F440();
  v17 = *(_QWORD *)(v16 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v4, 1, v16);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation, v4, v16);
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0;
    return v1;
  }
  return result;
}

uint64_t sub_234854C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  unint64_t v23;

  v7 = v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258828);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v17 = (_QWORD *)(v6 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey);
  *v17 = a3;
  v17[1] = a4;
  *(_BYTE *)(v6 + 32) = 0;
  v18 = (_QWORD *)(v6 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
  *v18 = a5;
  v18[1] = a6;
  v22 = 0;
  v23 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  v22 = 0xD000000000000017;
  v23 = 0x8000000234876830;
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F428();
  swift_bridgeObjectRelease();
  v19 = sub_23486F440();
  v20 = *(_QWORD *)(v19 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v7 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation, v16, v19);
    return v7;
  }
  return result;
}

BOOL sub_234854E18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_234854E2C()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_234854E70()
{
  return sub_234870490();
}

uint64_t sub_234854E98()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_234854ED8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_234854F14 + 4 * byte_23487CE20[*v0]))(0x65644965726F7473, 0xEF7265696669746ELL);
}

uint64_t sub_234854F14()
{
  return 0x726F706D65547369;
}

uint64_t sub_234854F34()
{
  return 0x4B7972616D697270;
}

uint64_t sub_234854F50()
{
  return 0x614E797469746E65;
}

unint64_t sub_234854F6C()
{
  return 0xD000000000000011;
}

uint64_t sub_234854F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2348563C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_234854FAC()
{
  return 0;
}

void sub_234854FB8(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_234854FC4()
{
  sub_2348570EC();
  return sub_234870544();
}

uint64_t sub_234854FEC()
{
  sub_2348570EC();
  return sub_234870550();
}

uint64_t sub_234855014(uint64_t a1)
{
  return sub_234855A14(a1, (void (*)(uint64_t))sub_234855030);
}

uint64_t sub_234855030(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v3 = sub_23486F440();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189EA0);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_2348570EC();
  sub_2348704FC();
  if (v1)
  {
    v12 = (uint64_t)v25;
    v14 = v26;
    type metadata accessor for PersistentIdentifierImplementation(0);
    swift_deallocPartialClassInstance();
    v22 = v12;
  }
  else
  {
    v23 = v4;
    v31 = 0;
    v11 = sub_2348700AC();
    v14 = v26;
    *(_QWORD *)(v26 + 16) = v11;
    *(_QWORD *)(v14 + 24) = v15;
    v30 = 1;
    *(_BYTE *)(v14 + 32) = sub_23487016C() & 1;
    v29 = 2;
    v16 = sub_234870160();
    v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey);
    *v17 = v16;
    v17[1] = v18;
    v28 = 3;
    v19 = sub_234870160();
    v20 = (uint64_t *)(v14 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName);
    *v20 = v19;
    v20[1] = v21;
    v27 = 4;
    sub_2348560F8(&qword_256189EB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_234870184();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v14 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation, v6, v3);
    v22 = (uint64_t)v25;
  }
  __swift_destroy_boxed_opaque_existential_1(v22);
  return v14;
}

uint64_t sub_234855348(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256189EB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2348570EC();
  sub_234870508();
  v8[15] = 0;
  sub_2348701B4();
  if (!v1)
  {
    v8[14] = 1;
    sub_2348701CC();
    v8[13] = 2;
    sub_2348701C0();
    v8[12] = 3;
    sub_2348701C0();
    v8[11] = 4;
    sub_23486F440();
    sub_2348560F8(qword_256189EC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_234870208();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_234855528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  v2 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2348555A8()
{
  sub_234870484();
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  return sub_2348704B4();
}

uint64_t sub_234855624()
{
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23486F6B0();
}

uint64_t sub_234855690()
{
  sub_234870484();
  sub_23486F440();
  sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23486F6B0();
  return sub_2348704B4();
}

uint64_t sub_234855708@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  v4 = sub_23486F440();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_234855750(uint64_t *a1, uint64_t *a2)
{
  return sub_2348562F0(*a1, *a2);
}

uint64_t sub_23485575C(uint64_t *a1, uint64_t *a2)
{
  return sub_234856138(*a1, *a2);
}

uint64_t sub_234855774@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 160))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_2348557A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 168))();
}

uint64_t sub_2348557C8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6972506465707974 && a2 == 0xEF79654B7972616DLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2348702E0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_234855870()
{
  return 1;
}

uint64_t sub_23485587C()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_2348558C0()
{
  sub_234870484();
  sub_234870490();
  return sub_2348704B4();
}

uint64_t sub_2348558FC()
{
  return 0x6972506465707974;
}

uint64_t sub_234855920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;

  result = sub_2348557C8(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_23485594C()
{
  return 0;
}

uint64_t sub_234855958@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2348574A4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_234855990(uint64_t a1)
{
  MEMORY[0x2349465EC](&unk_23487D508, a1);
  return sub_234870544();
}

uint64_t sub_2348559C4(uint64_t a1)
{
  MEMORY[0x2349465EC](&unk_23487D508, a1);
  return sub_234870550();
}

uint64_t sub_2348559F8(uint64_t a1)
{
  return sub_234855A14(a1, (void (*)(uint64_t))sub_234855A64);
}

uint64_t sub_234855A14(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void sub_234855A64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[16];

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v10[1] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10[2] = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v4[24];
  v6 = v4[25];
  v8 = v4[26];
  v7 = v4[27];
  v9 = v4[28];
  v10[10] = v2;
  v10[11] = v5;
  v10[5] = v6;
  v10[6] = v5;
  v10[12] = v6;
  v10[13] = v8;
  v10[7] = v8;
  v10[3] = v9;
  v10[4] = v7;
  v10[14] = v7;
  v10[15] = v9;
  type metadata accessor for GenericPersistentIdentifierImplementation.CodingKeys();
}

uint64_t sub_234855AF8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  MEMORY[0x2349465EC](&unk_23487D508, a1);
  v4 = sub_23487019C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - v6;
  v8 = v2[3];
  *(_QWORD *)(v3 - 72) = v2;
  v9 = v2;
  v10 = *(_QWORD *)(v3 - 144);
  __swift_project_boxed_opaque_existential_1(v9, v8);
  swift_retain();
  v11 = *(_QWORD *)(v3 - 136);
  sub_2348704FC();
  if (v11)
  {
    v12 = *(_QWORD *)(v3 - 152);
    swift_release();
    v16 = *(_QWORD *)(v3 - 168);
    v15 = *(_QWORD *)(v3 - 160);
    v18 = *(_QWORD *)(v3 - 184);
    v17 = *(_QWORD *)(v3 - 176);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 72));
    *(_QWORD *)(v3 - 128) = v1;
    *(_QWORD *)(v3 - 120) = v15;
    *(_QWORD *)(v3 - 112) = v16;
    *(_QWORD *)(v3 - 104) = v12;
    *(_QWORD *)(v3 - 96) = v17;
    *(_QWORD *)(v3 - 88) = v18;
    type metadata accessor for GenericPersistentIdentifierImplementation();
  }
  *(_QWORD *)(v3 - 136) = v5;
  v13 = *(_QWORD *)(v3 - 200);
  v14 = *(_QWORD *)(v3 - 192);
  sub_234870184();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v10 + *(_QWORD *)(*(_QWORD *)v10 + 232), v14, v1);
  swift_release();
  v20 = *(_QWORD *)(v3 - 72);
  sub_23484F9D8(v20, v3 - 128);
  sub_234855030((_QWORD *)(v3 - 128));
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v7, v4);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return v10;
}

void sub_234855CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v13 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2;
  v5 = *(_QWORD *)(v4 + 208);
  v10 = *(_OWORD *)(v4 + 192);
  v11 = v5;
  v7 = *(_OWORD *)(v4 + 216);
  v12 = v7;
  type metadata accessor for GenericPersistentIdentifierImplementation.CodingKeys();
}

uint64_t sub_234855D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x2349465EC](&unk_23487D508, a1);
  v6 = sub_234870280();
  *(_QWORD *)(v5 - 144) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - v8;
  result = sub_234855348(v4);
  if (!v3)
  {
    *(_QWORD *)(v5 - 168) = v7;
    v11 = v4[3];
    *(_QWORD *)(v5 - 176) = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v11);
    v12 = *(_QWORD *)(v5 - 72);
    sub_234870508();
    v13 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 232);
    v14 = *(_QWORD *)(v5 - 136);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, v13, v1);
    v15 = *(_QWORD *)(v5 - 144);
    sub_234870208();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v1);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 168) + 8))(v9, v15);
  }
  return result;
}

uint64_t sub_234855E90()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 184) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 232));
}

uint64_t *sub_234855EAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_bridgeObjectRelease();
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  v3 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 184) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 232));
  return v0;
}

uint64_t sub_234855F48()
{
  sub_234855EAC();
  return swift_deallocClassInstance();
}

uint64_t _s9SwiftData20PersistentIdentifierV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t result;
  BOOL v12;
  char v13;

  v4 = *(int *)(type metadata accessor for PersistentIdentifier(0) + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a2 + v4);
  v7 = *(_QWORD *)(v5 + 24);
  v8 = *(_QWORD *)(v6 + 24);
  if (v7)
  {
    if (v8)
    {
      if (*(_QWORD *)(v5 + 16) != *(_QWORD *)(v6 + 16) || v7 != v8)
      {
        v10 = sub_2348702E0();
        result = 0;
        if ((v10 & 1) == 0)
          return result;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v8)
    return 0;
LABEL_11:
  v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(v6 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
     && *(_QWORD *)(v5 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(v6 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
  if (v12 || (v13 = sub_2348702E0(), result = 0, (v13 & 1) != 0))
  {
    if (*(_QWORD *)(v5 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(v6 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(v5 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(v6 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      return 1;
    }
    else
    {
      return sub_2348702E0();
    }
  }
  return result;
}

uint64_t type metadata accessor for PersistentIdentifier.ID(uint64_t a1)
{
  return sub_2348560C4(a1, (uint64_t *)&unk_254258A80);
}

unint64_t sub_23485606C()
{
  unint64_t result;

  result = qword_256189DD0;
  if (!qword_256189DD0)
  {
    result = MEMORY[0x2349465EC](&unk_23487D2E4, &type metadata for PersistentIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189DD0);
  }
  return result;
}

uint64_t type metadata accessor for PersistentIdentifierImplementation(uint64_t a1)
{
  return sub_2348560C4(a1, (uint64_t *)&unk_2542576F0);
}

uint64_t sub_2348560C4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2348560F8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2349465EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_234856138(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  if (v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = 0;
  if (v4)
    v7 = v4;
  else
    v7 = 0xE000000000000000;
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (v8)
    v10 = *(_QWORD *)(a2 + 16);
  else
    v10 = 0;
  if (v8)
    v11 = *(_QWORD *)(a2 + 24);
  else
    v11 = 0xE000000000000000;
  if (v6 == v10 && v7 == v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    if (v4)
      goto LABEL_19;
LABEL_25:
    if (v8)
      return 0;
    goto LABEL_26;
  }
  v13 = 1;
  v14 = sub_2348702E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    return v13;
  if (!v4)
    goto LABEL_25;
LABEL_19:
  if (!v8)
    return 0;
  if (v5 == v9 && v4 == v8 || (v13 = 0, (sub_2348702E0() & 1) != 0))
  {
LABEL_26:
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) != *(_QWORD *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
      || *(_QWORD *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) != *(_QWORD *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8))
    {
      v13 = 1;
      if ((sub_2348702E0() & 1) != 0)
        return v13;
      v13 = 0;
      if ((sub_2348702E0() & 1) == 0)
        return v13;
    }
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) != *(_QWORD *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      || *(_QWORD *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) != *(_QWORD *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      v13 = 1;
      if ((sub_2348702E0() & 1) != 0)
        return v13;
    }
    return 0;
  }
  return v13;
}

void type metadata accessor for GenericPersistentIdentifierImplementation()
{
  JUMPOUT(0x234946568);
}

uint64_t sub_2348562F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t result;
  BOOL v9;
  char v10;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v5)
    {
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v4 != v5)
      {
        v7 = sub_2348702E0();
        result = 0;
        if ((v7 & 1) == 0)
          return result;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v5)
    return 0;
LABEL_11:
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName) == *(_QWORD *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName)
    && *(_QWORD *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8) == *(_QWORD *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_entityName + 8);
  if (v9 || (v10 = sub_2348702E0(), result = 0, (v10 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey) == *(_QWORD *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey)
      && *(_QWORD *)(a1 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8) == *(_QWORD *)(a2 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_primaryKey + 8))
    {
      return 1;
    }
    else
    {
      return sub_2348702E0();
    }
  }
  return result;
}

uint64_t sub_2348563C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65644965726F7473 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F706D65547369 && a2 == 0xEB00000000797261 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4B7972616D697270 && a2 == 0xEA00000000007965 || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E797469746E65 && a2 == 0xEA0000000000656DLL || (sub_2348702E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000234876850)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2348702E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_234856634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 184) - 8) + 16))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 232), a5, *(_QWORD *)(*(_QWORD *)v5 + 184));
  v10 = sub_2348702B0();
  return sub_234854C50(a1, a2, v10, v11, a3, a4);
}

void sub_2348566C4()
{
  type metadata accessor for GenericPersistentIdentifierImplementation();
}

uint64_t sub_234856710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_allocObject();
  return sub_234856634(v4, v3, v2, v1, v0);
}

uint64_t sub_234856750()
{
  return sub_2348560F8(&qword_256189DF0, type metadata accessor for PersistentIdentifier.ID, (uint64_t)&protocol conformance descriptor for PersistentIdentifier.ID);
}

uint64_t sub_23485677C()
{
  return sub_2348560F8(&qword_254258058, type metadata accessor for PersistentIdentifier, (uint64_t)&protocol conformance descriptor for PersistentIdentifier);
}

uint64_t sub_2348567A8()
{
  return sub_2348560F8(qword_256189DF8, type metadata accessor for PersistentIdentifier.ID, (uint64_t)&protocol conformance descriptor for PersistentIdentifier.ID);
}

uint64_t sub_2348567D4()
{
  return sub_2348560F8(&qword_254258058, type metadata accessor for PersistentIdentifier, (uint64_t)&protocol conformance descriptor for PersistentIdentifier);
}

uint64_t *initializeBufferWithCopyOfBuffer for PersistentIdentifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23486F440();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for PersistentIdentifier(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for PersistentIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PersistentIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for PersistentIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PersistentIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersistentIdentifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_234856A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for PersistentIdentifier.ID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PersistentIdentifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_234856AEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for PersistentIdentifier.ID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_234856B64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23486F440();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23486F440();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for PersistentIdentifier.ID(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23486F440();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PersistentIdentifier.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersistentIdentifier.ID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_234856D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23486F440();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PersistentIdentifier.ID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_234856DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23486F440();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_234856DEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23486F440();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_234856E54()
{
  return type metadata accessor for PersistentIdentifierImplementation(0);
}

uint64_t sub_234856E5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23486F440();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_234856EEC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_234856F64()
{
  return 0;
}

ValueMetadata *type metadata accessor for PersistentIdentifier.CodingKeys()
{
  return &type metadata for PersistentIdentifier.CodingKeys;
}

unint64_t sub_234856F88()
{
  unint64_t result;

  result = qword_256189E80;
  if (!qword_256189E80)
  {
    result = MEMORY[0x2349465EC](&unk_23487D184, &type metadata for PersistentIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189E80);
  }
  return result;
}

uint64_t sub_234856FCC()
{
  return sub_2348560F8(&qword_256189E88, type metadata accessor for PersistentIdentifierImplementation, (uint64_t)&unk_23487D1F4);
}

uint64_t sub_234856FF8()
{
  return sub_2348560F8((unint64_t *)&qword_254258718, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
}

uint64_t sub_234857024()
{
  return sub_2348560F8(&qword_256189E88, type metadata accessor for PersistentIdentifierImplementation, (uint64_t)&unk_23487D1F4);
}

unint64_t sub_234857054()
{
  unint64_t result;

  result = qword_256189E90;
  if (!qword_256189E90)
  {
    result = MEMORY[0x2349465EC](&unk_23487D0F4, &type metadata for PersistentIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189E90);
  }
  return result;
}

unint64_t sub_23485709C()
{
  unint64_t result;

  result = qword_256189E98;
  if (!qword_256189E98)
  {
    result = MEMORY[0x2349465EC](&unk_23487D11C, &type metadata for PersistentIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189E98);
  }
  return result;
}

void type metadata accessor for GenericPersistentIdentifierImplementation.CodingKeys()
{
  JUMPOUT(0x234946568);
}

unint64_t sub_2348570EC()
{
  unint64_t result;

  result = qword_256189EA8;
  if (!qword_256189EA8)
  {
    result = MEMORY[0x2349465EC](&unk_23487D4B8, &type metadata for PersistentIdentifierImplementation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189EA8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PersistentIdentifierImplementation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PersistentIdentifierImplementation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23485720C + 4 * byte_23487CE2A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_234857240 + 4 * byte_23487CE25[v4]))();
}

uint64_t sub_234857240(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_234857248(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x234857250);
  return result;
}

uint64_t sub_23485725C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x234857264);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_234857268(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_234857270(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23485727C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_234857288(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PersistentIdentifierImplementation.CodingKeys()
{
  return &type metadata for PersistentIdentifierImplementation.CodingKeys;
}

uint64_t sub_2348572A0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t _s9SwiftData20PersistentIdentifierV10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s9SwiftData20PersistentIdentifierV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_234857340 + 4 * byte_23487CE2F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_234857360 + 4 * byte_23487CE34[v4]))();
}

_BYTE *sub_234857340(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_234857360(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_234857368(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_234857370(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_234857378(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_234857380(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23485738C()
{
  return 0;
}

void sub_23485739C()
{
  JUMPOUT(0x2349465ECLL);
}

unint64_t sub_2348573B0()
{
  unint64_t result;

  result = qword_256189F48;
  if (!qword_256189F48)
  {
    result = MEMORY[0x2349465EC](&unk_23487D490, &type metadata for PersistentIdentifierImplementation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189F48);
  }
  return result;
}

unint64_t sub_2348573F8()
{
  unint64_t result;

  result = qword_256189F50;
  if (!qword_256189F50)
  {
    result = MEMORY[0x2349465EC](&unk_23487D400, &type metadata for PersistentIdentifierImplementation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189F50);
  }
  return result;
}

unint64_t sub_234857440()
{
  unint64_t result;

  result = qword_256189F58;
  if (!qword_256189F58)
  {
    result = MEMORY[0x2349465EC](&unk_23487D428, &type metadata for PersistentIdentifierImplementation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256189F58);
  }
  return result;
}

void sub_234857484()
{
  JUMPOUT(0x2349465ECLL);
}

void sub_234857494()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_2348574A4()
{
  return 1;
}

uint64_t sub_2348574B0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_2348702E0();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2348702E0() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_234857574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = sub_23486F770();
  v5 = v4;
  if (v3 == sub_23486F770() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v8 = sub_2348702E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = 5;
  while (1)
  {
    v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
      break;
    v12 = sub_23486F770();
    v14 = v13;
    if (v12 == sub_23486F770() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v17 = sub_2348702E0();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_7;
    ++v10;
    if (v11 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_2348576C8()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  _QWORD v20[8];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB6B0]), sel_init);
  v25 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(v0 + 64);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
    v7 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v7)
      goto LABEL_15;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  result = sub_23487001C();
  v3 = result;
  if (!result)
    goto LABEL_12;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
      MEMORY[0x234945A1C](i, v2);
    else
      swift_retain();
    sub_234857A00(v1, (uint64_t)&v25);
    swift_release();
  }
  swift_bridgeObjectRelease();
  v6 = v25;
  v7 = *(_QWORD *)(v25 + 16);
  if (v7)
  {
LABEL_13:
    v8 = v6 + 32;
    do
    {
      sub_23485D320(v8, (uint64_t)&v21);
      v9 = v23;
      v10 = v24;
      __swift_project_boxed_opaque_existential_0Tm_0(&v21, v23);
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v10 + 8))(v1, v0, v9, v10);
      __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)&v21);
      v8 += 40;
      --v7;
    }
    while (v7);
  }
LABEL_15:
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v0 + 56);
  v21 = *(_OWORD *)(v0 + 40);
  v22 = v11;
  v12 = Schema.Version.description.getter();
  v14 = v13;
  v15 = objc_msgSend(v1, sel_versionIdentifiers);
  v16 = sub_23486FA58();

  v20[6] = v14;
  v20[7] = v16;
  v20[5] = v12;
  sub_23486FE6C();
  sub_23485BE48((uint64_t)&v21, (uint64_t)v20);
  sub_23486FE60();
  sub_234797260((uint64_t)&v21);
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_23486FA4C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setVersionIdentifiers_, v17);

  v18 = objc_msgSend(v1, sel_entities);
  if (!v18)
  {
    sub_23485D618(0, &qword_2542588E8);
    sub_23486F8E4();
    v18 = (id)sub_23486F8D8();
    swift_bridgeObjectRelease();
  }
  v19 = (void *)sub_23486F74C();
  objc_msgSend(v1, sel_setEntities_forConfiguration_, v18, v19);

  return (uint64_t)v1;
}

void sub_234857A00(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  id v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  void *v109;
  id v110;
  id v111;
  void *v112;
  id v113;
  uint64_t v114;
  _QWORD *v115;
  int64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  unint64_t v122;
  id v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  _QWORD v136[3];
  uint64_t v137;
  uint64_t v138;
  _QWORD v139[3];
  uint64_t v140;
  uint64_t v141;

  v3 = sub_234859288(a1, v2);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  v123 = v3;
  v115 = (_QWORD *)v2;
  if (v5)
  {
    v7 = v4 + 32;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    while (1)
    {
      sub_23485D320(v7, (uint64_t)v139);
      sub_23485D320((uint64_t)v139, (uint64_t)&v127);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258870);
      if (!swift_dynamicCast())
        goto LABEL_105;
      sub_23485D288(&v124, (uint64_t)v136);
      v8 = objc_msgSend(v3, sel_propertiesByName);
      sub_23485D618(0, &qword_2542588F0);
      v9 = sub_23486F62C();

      v10 = v140;
      v11 = v141;
      __swift_project_boxed_opaque_existential_0Tm_0(v139, v140);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
      if (*(_QWORD *)(v9 + 16))
      {
        v14 = sub_2347CD9BC(v12, v13);
        if ((v15 & 1) != 0)
        {
          v16 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_opt_self();
          v17 = swift_dynamicCastObjCClass();
          if (v17)
          {
            v18 = (void *)v17;
            v19 = v137;
            v20 = v138;
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v136, v137);
            v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 8);
            v16 = v16;
            v22 = v21(a2, v19, v20);
            if (!v22)
              goto LABEL_112;
            v23 = (void *)v22;
            objc_opt_self();
            v24 = (void *)swift_dynamicCastObjCClass();
            v3 = v123;
            if (!v24)
            {

              goto LABEL_112;
            }
            sub_2348594A8(v24, v18);

          }
          goto LABEL_4;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23485D320((uint64_t)v136, (uint64_t)&v127);
      type metadata accessor for Schema.CompositeAttribute();
      if (!swift_dynamicCast())
      {
        v36 = v137;
        v37 = v138;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v136, v137);
        v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 8))(a2, v36, v37);
        if (!v38)
          goto LABEL_112;
        v39 = v38;
        if (objc_msgSend(v38, sel_isIndexedBySpotlight))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256189A40);
          v40 = swift_allocObject();
          *(_OWORD *)(v40 + 16) = xmmword_234877ED0;
          v41 = objc_msgSend(v3, sel_name);
          if (!v41)
            goto LABEL_104;
          v42 = v41;
          v43 = v3;
          sub_23485D618(0, &qword_256189A10);
          v44 = sub_23486F770();
          v46 = v45;

          *(_QWORD *)(v40 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v40 + 64) = sub_23485D36C();
          *(_QWORD *)(v40 + 32) = v44;
          *(_QWORD *)(v40 + 40) = v46;
          v47 = (void *)sub_23486FB9C();
          objc_msgSend(v43, sel_setCoreSpotlightDisplayNameExpression_, v47);

          v3 = v43;
          v6 = MEMORY[0x24BEE4AF8];
        }
        v48 = v39;
        v49 = objc_msgSend(v3, sel_properties);
        v50 = sub_23486F8E4();

        *(_QWORD *)&v127 = v50;
        MEMORY[0x2349453E0]();
        if (*(_QWORD *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23486F914();
        sub_23486F950();
        sub_23486F8FC();
        v51 = (void *)sub_23486F8D8();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setProperties_, v51);

        goto LABEL_4;
      }
      v25 = v124;
      v26 = sub_234859CE4();
      if (!v26)
        goto LABEL_112;
      v27 = v26;
      swift_beginAccess();
      sub_2347C5508(v25 + 64, (uint64_t)&v127);
      if (!v129)
        break;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542575F8);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v125 = 0u;
        v126 = 0u;
        v124 = 0u;
        goto LABEL_27;
      }
      if (!*((_QWORD *)&v125 + 1))
        goto LABEL_27;
      sub_2347C65A8(&v124, &v127);
      v29 = v115[2];
      v28 = v115[3];
      v30 = type metadata accessor for CompositeEncoder();
      v31 = (_QWORD *)swift_allocObject();
      v31[4] = v6;
      swift_bridgeObjectRetain();
      v32 = v27;
      v33 = v6;
      v34 = v32;
      v31[5] = sub_2347EB5E8(v33);
      v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
      v31[2] = v29;
      v31[3] = v28;
      v31[6] = v34;
      v31[7] = v35;
      __swift_project_boxed_opaque_existential_0Tm_0(&v127, v129);
      *((_QWORD *)&v125 + 1) = v30;
      *(_QWORD *)&v126 = sub_23485D3B0(qword_256188640, (uint64_t (*)(uint64_t))type metadata accessor for CompositeEncoder, (uint64_t)&unk_2348796C4);
      *(_QWORD *)&v124 = v31;
      swift_retain();
      sub_23486F698();
      __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)&v124);
      objc_msgSend(v34, sel_setDefaultValue_, v31[7]);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)&v127);
      v6 = MEMORY[0x24BEE4AF8];
LABEL_28:
      v52 = v27;
      v3 = v123;
      v53 = objc_msgSend(v123, sel_properties);
      v54 = sub_23486F8E4();

      *(_QWORD *)&v127 = v54;
      MEMORY[0x2349453E0]();
      if (*(_QWORD *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23486F914();
      sub_23486F950();
      sub_23486F8FC();
      v55 = (void *)sub_23486F8D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v123, sel_setProperties_, v55);

      swift_release();
LABEL_4:
      __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)v136);
      __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)v139);
      v7 += 40;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    sub_23485D2E4((uint64_t)&v127, &qword_254258968);
    v124 = 0u;
    v125 = 0u;
    v126 = 0u;
LABEL_27:
    sub_23485D2E4((uint64_t)&v124, &qword_254257708);
    goto LABEL_28;
  }
LABEL_32:
  swift_beginAccess();
  v56 = v115[4];
  if ((v56 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23486FDC4();
    sub_23485D3B0(&qword_256189A58, (uint64_t (*)(uint64_t))type metadata accessor for Schema.Entity, (uint64_t)&protocol conformance descriptor for Schema.Entity);
    sub_23486FA88();
    v117 = *((_QWORD *)&v127 + 1);
    v56 = v127;
    v57 = v128;
    v58 = v129;
    v59 = v130;
  }
  else
  {
    v60 = -1 << *(_BYTE *)(v56 + 32);
    v117 = v56 + 56;
    v57 = ~v60;
    v61 = -v60;
    if (v61 < 64)
      v62 = ~(-1 << v61);
    else
      v62 = -1;
    v59 = v62 & *(_QWORD *)(v56 + 56);
    swift_bridgeObjectRetain();
    v58 = 0;
  }
  v116 = (unint64_t)(v57 + 64) >> 6;
  if ((v56 & 0x8000000000000000) == 0)
    goto LABEL_42;
LABEL_39:
  v63 = sub_23486FE24();
  if (v63)
  {
    v136[0] = v63;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v64 = v139[0];
    swift_unknownObjectRelease();
    v65 = v58;
    v66 = v59;
    if (v64)
    {
      while (1)
      {
        sub_234857A00(a1, a2);
        v70 = objc_msgSend(a1, sel_entitiesByName);
        sub_23485D618(0, &qword_2542588E8);
        v71 = sub_23486F62C();

        swift_beginAccess();
        if (!*(_QWORD *)(v71 + 16))
          goto LABEL_107;
        v72 = *(_QWORD *)(v64 + 24);
        v73 = *(_QWORD *)(v64 + 16);
        swift_bridgeObjectRetain();
        v74 = sub_2347CD9BC(v73, v72);
        if ((v75 & 1) == 0)
          break;
        v76 = *(id *)(*(_QWORD *)(v71 + 56) + 8 * v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v77 = v76;
        v78 = objc_msgSend(v123, sel_subentities);
        v79 = sub_23486F8E4();

        v139[0] = v79;
        MEMORY[0x2349453E0]();
        if (*(_QWORD *)((v139[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v139[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23486F914();
        sub_23486F950();
        sub_23486F8FC();
        v80 = (void *)sub_23486F8D8();
        swift_bridgeObjectRelease();
        objc_msgSend(v123, sel_setSubentities_, v80);

        swift_release();
        v58 = v65;
        v59 = v66;
        if (v56 < 0)
          goto LABEL_39;
LABEL_42:
        if (v59)
        {
          v66 = (v59 - 1) & v59;
          v67 = __clz(__rbit64(v59)) | (v58 << 6);
          v65 = v58;
        }
        else
        {
          v65 = v58 + 1;
          if (__OFADD__(v58, 1))
            goto LABEL_101;
          if (v65 >= v116)
            goto LABEL_66;
          v68 = *(_QWORD *)(v117 + 8 * v65);
          if (!v68)
          {
            v69 = v58 + 2;
            if (v58 + 2 >= v116)
              goto LABEL_66;
            v68 = *(_QWORD *)(v117 + 8 * v69);
            if (v68)
              goto LABEL_51;
            v69 = v58 + 3;
            if (v58 + 3 >= v116)
              goto LABEL_66;
            v68 = *(_QWORD *)(v117 + 8 * v69);
            if (v68)
            {
LABEL_51:
              v65 = v69;
            }
            else
            {
              v65 = v58 + 4;
              if (v58 + 4 >= v116)
                goto LABEL_66;
              v68 = *(_QWORD *)(v117 + 8 * v65);
              if (!v68)
              {
                v81 = v58 + 5;
                do
                {
                  if (v116 == v81)
                    goto LABEL_66;
                  v68 = *(_QWORD *)(v117 + 8 * v81++);
                }
                while (!v68);
                v65 = v81 - 1;
              }
            }
          }
          v66 = (v68 - 1) & v68;
          v67 = __clz(__rbit64(v68)) + (v65 << 6);
        }
        v64 = *(_QWORD *)(*(_QWORD *)(v56 + 48) + 8 * v67);
        swift_retain();
        if (!v64)
          goto LABEL_66;
      }
      swift_bridgeObjectRelease();
LABEL_107:
      swift_bridgeObjectRelease();
      v139[0] = 0;
      v139[1] = 0xE000000000000000;
      sub_23486FEA8();
      sub_23486F7DC();
      v136[0] = v64;
      sub_23486FF74();
      sub_23486F7DC();
      v113 = objc_msgSend(v123, sel_description);
      sub_23486F770();

      sub_23486F7DC();
      swift_bridgeObjectRelease();
      goto LABEL_108;
    }
  }
LABEL_66:
  sub_23485D364();
  swift_beginAccess();
  v82 = swift_bridgeObjectRetain();
  sub_2347ECA38(v82);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542588D8);
  v83 = (void *)sub_23486F8D8();
  swift_bridgeObjectRelease();
  v84 = v123;
  objc_msgSend(v123, sel_setUniquenessConstraints_, v83);

  swift_beginAccess();
  v85 = v115[21];
  v86 = MEMORY[0x24BEE4AF8];
  v120 = *(_QWORD *)(v85 + 16);
  if (v120)
  {
    v135 = MEMORY[0x24BEE4AF8];
    v118 = v85 + 32;
    swift_bridgeObjectRetain();
    v87 = 0;
    v114 = v85;
    while (v87 < *(_QWORD *)(v85 + 16))
    {
      v88 = *(uint64_t **)(v118 + 8 * v87);
      v133 = 0xD000000000000010;
      v134 = 0x8000000234876AD0;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v89 = v88[2];
        if (!v89)
          goto LABEL_100;
      }
      else
      {
        v88 = sub_23486BE4C(v88);
        v89 = v88[2];
        if (!v89)
          goto LABEL_100;
      }
      v90 = v89 - 1;
      v92 = v88[4];
      v91 = v88[5];
      memmove(v88 + 4, v88 + 6, 16 * (v89 - 1));
      v88[2] = v90;
      v93 = v92 == 0x656572742D72 && v91 == 0xE600000000000000;
      v122 = v87;
      if (v93 || (sub_2348702E0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_23486F7DC();
        v94 = 1;
      }
      else
      {
        v95 = v92 == 0x7972616E6962 && v91 == 0xE600000000000000;
        if (!v95 && (sub_2348702E0() & 1) == 0)
        {
          v131 = 0;
          v132 = 0xE000000000000000;
          sub_23486FEA8();
          swift_bridgeObjectRelease();
          v131 = 0xD000000000000014;
          v132 = 0x8000000234876AF0;
          sub_23486F7DC();
          while (1)
          {
LABEL_108:
            sub_234870004();
            __break(1u);
LABEL_112:
            *(_QWORD *)&v127 = 0;
            *((_QWORD *)&v127 + 1) = 0xE000000000000000;
            sub_23486FEA8();
            sub_23486F7DC();
            sub_23486FF74();
          }
        }
        swift_bridgeObjectRelease();
        sub_23486F7DC();
        v94 = 0;
      }
      v131 = v86;
      v96 = v88[2];
      if (v96)
      {
        swift_bridgeObjectRetain();
        v97 = v88 + 5;
        do
        {
          v98 = *(v97 - 1);
          v99 = *v97;
          swift_bridgeObjectRetain();
          v100 = objc_msgSend(v84, sel_propertiesByName);
          sub_23485D618(0, &qword_2542588F0);
          v101 = sub_23486F62C();

          if (!*(_QWORD *)(v101 + 16))
            goto LABEL_103;
          swift_bridgeObjectRetain();
          v102 = sub_2347CD9BC(v98, v99);
          if ((v103 & 1) == 0)
            goto LABEL_102;
          v104 = *(id *)(*(_QWORD *)(v101 + 56) + 8 * v102);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v105 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB670]), sel_initWithProperty_collationType_, v104, v94);

          v106 = v105;
          MEMORY[0x2349453E0]();
          if (*(_QWORD *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23486F914();
          v97 += 2;
          sub_23486F950();
          sub_23486F8FC();
          sub_23486F7DC();
          swift_bridgeObjectRelease();

          --v96;
          v84 = v123;
        }
        while (v96);
        swift_bridgeObjectRelease_n();
        v86 = MEMORY[0x24BEE4AF8];
        v85 = v114;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v107 = objc_allocWithZone(MEMORY[0x24BDBB668]);
      v108 = (void *)sub_23486F74C();
      swift_bridgeObjectRelease();
      sub_23485D618(0, &qword_2542575B8);
      v109 = (void *)sub_23486F8D8();
      swift_bridgeObjectRelease();
      v110 = objc_msgSend(v107, sel_initWithName_elements_, v108, v109);

      v111 = v110;
      MEMORY[0x2349453E0]();
      if (*(_QWORD *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23486F914();
      v87 = v122 + 1;
      sub_23486F950();
      sub_23486F8FC();

      if (v122 + 1 == v120)
      {
        swift_bridgeObjectRelease();
        sub_23485D618(0, &qword_2542575B0);
        v112 = (void *)sub_23486F8D8();
        swift_bridgeObjectRelease();
        objc_msgSend(v84, sel_setIndexes_, v112);

        goto LABEL_98;
      }
    }
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    *(_QWORD *)&v126 = 0;
    v124 = 0u;
    v125 = 0u;
    sub_23485D2E4((uint64_t)&v124, &qword_256189F60);
    *(_QWORD *)&v127 = 0;
    *((_QWORD *)&v127 + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486FF74();
    goto LABEL_108;
  }
LABEL_98:

}

double Schema._coreDataMakeManagedObjectModel()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = sub_2348576C8();
  if (v2)
  {
    v3 = v2;
    *(_QWORD *)(a1 + 24) = sub_23485D618(0, &qword_256189340);
    *(_QWORD *)a1 = v3;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_234858DD0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD v22[4];

  v2 = v1;
  v4 = sub_23486F5D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254258818 != -1)
    swift_once();
  objc_msgSend((id)qword_254258888, sel_lock);
  if (qword_254258880 != -1)
    swift_once();
  swift_beginAccess();
  v8 = qword_254258878;
  v9 = (_QWORD *)swift_retain();
  v10 = sub_23481ECAC(v9, v8);
  swift_release();
  swift_endAccess();
  if (v10)
    goto LABEL_8;
  v11 = sub_2348576C8();
  if (v11)
  {
    v12 = (void *)v11;
    swift_beginAccess();
    swift_retain();
    v10 = v12;
    sub_234825F8C((uint64_t)v10, v2);
    swift_endAccess();
    swift_release();
LABEL_8:
    objc_msgSend((id)qword_254258888, sel_unlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258438);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_23487B380;
    *(_QWORD *)(v13 + 32) = a1;
    *(_QWORD *)(v13 + 40) = v10;
    v22[1] = v13;
    sub_23486F8FC();
    sub_23485D618(0, &qword_256189340);
    v14 = a1;
    v15 = v10;
    v16 = (void *)sub_23486F8D8();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend((id)objc_opt_self(), sel_modelByMergingModels_, v16);

    return v17;
  }
  objc_msgSend((id)qword_254258888, sel_unlock);
  sub_23486F5CC();
  v19 = sub_23486F5C0();
  v20 = sub_23486FBC0();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_234780000, v19, v20, "Failed to create an NSManagedObjectModel for this Schema mergedWith another NSManagedObjectModel", v21, 2u);
    MEMORY[0x2349466D0](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

double Schema._coreDataManagedObjectModel(mergedWith:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  id v4;
  id v5;
  double result;
  void *v7;
  _BYTE v8[32];

  sub_234785C80(a1, (uint64_t)v8);
  v3 = sub_23485D618(0, &qword_256189340);
  if (swift_dynamicCast())
  {
    v4 = sub_234858DD0(v7);
    if (v4)
    {
      v5 = v4;
      *(_QWORD *)(a2 + 24) = v3;

      *(_QWORD *)a2 = v5;
      return result;
    }

  }
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

double static Schema._coreDataMakeManagedObjectModel(_:)@<D0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  double result;

  v2 = sub_23485CD50();
  if (v2)
  {
    v3 = v2;
    *(_QWORD *)(a1 + 24) = sub_23485D618(0, &qword_256189340);
    *(_QWORD *)a1 = v3;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double static Schema._coreDataManagedObjectModel(for:mergedWith:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  id v6;
  id v7;
  double result;
  void *v9;
  _BYTE v10[32];

  sub_234785C80(a2, (uint64_t)v10);
  v5 = sub_23485D618(0, &qword_256189340);
  if (swift_dynamicCast())
  {
    v6 = sub_23485CECC(a1, v9);
    if (v6)
    {
      v7 = v6;
      *(_QWORD *)(a3 + 24) = v5;

      *(_QWORD *)a3 = v7;
      return result;
    }

  }
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

id sub_234859288(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;

  v4 = objc_msgSend(a1, sel_entitiesByName);
  sub_23485D618(0, &qword_2542588E8);
  v5 = sub_23486F62C();

  swift_beginAccess();
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    v8 = sub_2347CD9BC(v7, v6);
    if ((v9 & 1) != 0)
    {
      v10 = *(id *)(*(_QWORD *)(v5 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB658]), sel_init);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_23486F74C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setName_, v13);

  v14 = v12;
  v15 = objc_msgSend(a1, sel_entities);
  v16 = sub_23486F8E4();

  MEMORY[0x2349453E0]();
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23486F914();
  sub_23486F950();
  sub_23486F8FC();
  v17 = (void *)sub_23486F8D8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setEntities_, v17);

  return v14;
}

void sub_2348594A8(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  BOOL v13;
  unint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  id v46;
  unint64_t v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  unint64_t v74;
  id v76;
  char v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  id v81;
  id v82;
  unint64_t v83;
  id v84;
  id v85;
  uint64_t v86;

  v3 = objc_msgSend(a2, sel_elements);
  sub_23485D618(0, &qword_254258430);
  v4 = sub_23486F8E4();

  v86 = v4;
  v73 = a2;
  v5 = objc_msgSend(a2, sel_elements);
  v6 = sub_23486F8E4();

  v69 = v6;
  if (v6 >> 62)
    goto LABEL_40;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
LABEL_3:
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v71 = v7;
    while (1)
    {
      v81 = v9;
      while (1)
      {
        if ((v69 & 0xC000000000000001) != 0)
        {
          v11 = (id)MEMORY[0x234945A1C](v10, v69);
        }
        else
        {
          if (v10 >= *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_39;
          v11 = *(id *)(v69 + 32 + 8 * v10);
        }
        v12 = v11;
        v13 = __OFADD__(v10, 1);
        v14 = v10 + 1;
        if (v13)
          goto LABEL_38;
        v15 = objc_msgSend(a1, sel_elements);
        v16 = sub_23486F8E4();

        v79 = v14;
        v77 = v8;
        if (v16 >> 62)
        {
          swift_bridgeObjectRetain();
          v17 = sub_23487001C();
          swift_bridgeObjectRelease();
          if (v17)
          {
LABEL_13:
            v83 = v16 & 0xC000000000000001;
            v18 = 4;
            do
            {
              v19 = v18 - 4;
              if (v83)
              {
                v20 = (id)MEMORY[0x234945A1C](v18 - 4, v16);
                v21 = v18 - 3;
                if (__OFADD__(v19, 1))
                  goto LABEL_37;
              }
              else
              {
                v20 = *(id *)(v16 + 8 * v18);
                v21 = v18 - 3;
                if (__OFADD__(v19, 1))
                {
LABEL_37:
                  __break(1u);
LABEL_38:
                  __break(1u);
LABEL_39:
                  __break(1u);
LABEL_40:
                  swift_bridgeObjectRetain();
                  v7 = sub_23487001C();
                  swift_bridgeObjectRelease();
                  if (!v7)
                    goto LABEL_41;
                  goto LABEL_3;
                }
              }
              v22 = v16;
              v23 = v17;
              v84 = v20;
              v24 = objc_msgSend(v20, sel_name);
              v25 = sub_23486F770();
              v27 = v26;

              v28 = v12;
              v29 = objc_msgSend(v12, sel_name);
              v30 = sub_23486F770();
              v32 = v31;

              v33 = v25 == v30 && v27 == v32;
              if (v33)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_32:
                v12 = v28;
                swift_bridgeObjectRelease();

                v81 = v84;
                goto LABEL_33;
              }
              v34 = sub_2348702E0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v34 & 1) != 0)
                goto LABEL_32;

              ++v18;
              v17 = v23;
              v33 = v21 == v23;
              v12 = v28;
              v16 = v22;
            }
            while (!v33);
          }
        }
        else
        {
          v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v17)
            goto LABEL_13;
        }
        swift_bridgeObjectRelease();
        if ((v77 & 1) != 0)
          break;

        v8 = 0;
        v10 = v79;
        v9 = v81;
        if (v79 == v71)
          goto LABEL_42;
      }
LABEL_33:
      v10 = v79;
      objc_opt_self();
      v35 = swift_dynamicCastObjCClass();
      if (v35)
      {
        v36 = v35;
        if (!v81 || (objc_opt_self(), (v37 = swift_dynamicCastObjCClass()) == 0))
        {
          v66 = v12;
          sub_23486FEA8();
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(qword_256189F70);
          sub_23486F77C();
          sub_23486F7DC();
          swift_bridgeObjectRelease();
          sub_23486F7DC();
          v67 = objc_msgSend(v66, sel_description);
          sub_23486F770();

          sub_23486F7DC();
          swift_bridgeObjectRelease();
          sub_234870004();
          __break(1u);
          return;
        }
        v38 = v37;
        v39 = v12;
        v40 = v81;
        sub_2348594A8(v38, v36);

      }
      v8 = 1;
      v9 = v81;
      if (v79 == v71)
        goto LABEL_42;
    }
  }
LABEL_41:
  v9 = 0;
LABEL_42:
  v82 = v9;
  swift_bridgeObjectRelease();
  v41 = objc_msgSend(a1, sel_elements);
  v42 = sub_23486F8E4();

  if (v42 >> 62)
    goto LABEL_77;
  v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v43)
  {
    v44 = 0;
    v45 = 0;
    v74 = v42;
    v76 = (id)(v42 & 0xC000000000000001);
    v68 = v42 + 32;
    v70 = v42 & 0xFFFFFFFFFFFFFF8;
    v72 = v43;
    while (1)
    {
      if (v76)
      {
        v46 = (id)MEMORY[0x234945A1C](v45, v42);
      }
      else
      {
        if (v45 >= *(_QWORD *)(v70 + 16))
          goto LABEL_76;
        v46 = *(id *)(v68 + 8 * v45);
      }
      v85 = v46;
      v13 = __OFADD__(v45, 1);
      v47 = v45 + 1;
      if (v13)
        break;
      v78 = v44;
      v48 = objc_msgSend(v73, sel_elements);
      v49 = sub_23486F8E4();

      v80 = v47;
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        v50 = sub_23487001C();
        swift_bridgeObjectRelease();
        if (v50)
        {
LABEL_55:
          v42 = 4;
          while (1)
          {
            v51 = (v49 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x234945A1C](v42 - 4, v49)
                : *(id *)(v49 + 8 * v42);
            v52 = v51;
            v53 = v42 - 3;
            if (__OFADD__(v42 - 4, 1))
              break;
            v54 = objc_msgSend(v51, sel_name);
            v55 = sub_23486F770();
            v57 = v56;

            v58 = objc_msgSend(v85, sel_name);
            v59 = sub_23486F770();
            v61 = v60;

            if (v55 == v59 && v57 == v61)
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              v85 = v52;
LABEL_46:
              swift_bridgeObjectRelease();
              goto LABEL_47;
            }
            v63 = sub_2348702E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if ((v63 & 1) != 0)
              goto LABEL_46;
            ++v42;
            if (v53 == v50)
              goto LABEL_66;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v50)
          goto LABEL_55;
      }
LABEL_66:
      swift_bridgeObjectRelease();
      if ((v78 & 1) != 0)
      {
LABEL_47:
        v42 = v74;
        v45 = v80;

        v44 = 1;
        if (v80 == v72)
          goto LABEL_78;
      }
      else
      {
        v64 = v85;
        MEMORY[0x2349453E0]();
        if (*(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23486F914();
        sub_23486F950();
        sub_23486F8FC();

        v44 = 0;
        v45 = v80;
        v42 = v74;
        if (v80 == v72)
          goto LABEL_78;
      }
    }
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    swift_bridgeObjectRetain();
    v43 = sub_23487001C();
    swift_bridgeObjectRelease();
  }
LABEL_78:
  swift_bridgeObjectRelease();
  v65 = (void *)sub_23486F8D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v73, sel_setElements_, v65);

}

id sub_234859CE4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  char v52;
  void *v53;
  void *v54;
  uint64_t v56;
  _OWORD v57[2];
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;

  swift_beginAccess();
  if (sub_23486F788() == 0x7470697263736564 && v1 == 0xEB000000006E6F69)
    goto LABEL_80;
  v3 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
    goto LABEL_79;
  v62 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 128);
  v56 = v0;
  if (v4 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain_n();
    v5 = sub_23487001C();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_8;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_8:
      swift_beginAccess();
      v6 = 4;
      do
      {
        v7 = v6 - 4;
        if ((v4 & 0xC000000000000001) != 0)
        {
          v8 = (void *)MEMORY[0x234945A1C](v6 - 4, v4);
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_22;
        }
        else
        {
          v8 = *(void **)(v4 + 8 * v6);
          swift_retain();
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        v10 = objc_msgSend(v8, sel_propertyDescription);
        if (!v10)
          goto LABEL_78;
        v11 = v10;
        objc_opt_self();
        v12 = (void *)swift_dynamicCastObjCClass();
        if (!v12)
        {

LABEL_78:
          *(_QWORD *)&v60 = 0;
          *((_QWORD *)&v60 + 1) = 0xE000000000000000;
          sub_23486FEA8();
          sub_23486F7DC();
          *(_QWORD *)&v58 = v8;
          type metadata accessor for Schema.Attribute();
          sub_23486FF74();
          while (1)
          {
LABEL_79:
            sub_234870004();
            __break(1u);
LABEL_80:
            swift_bridgeObjectRelease();
          }
        }
        v13 = v5;
        if (*(_BYTE *)(v56 + 96) == 1)
          objc_msgSend(v12, sel_setOptional_, 1);
        v14 = v11;
        MEMORY[0x2349453E0]();
        if (*(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23486F914();
        sub_23486F950();
        sub_23486F8FC();
        swift_release();

        ++v6;
        v5 = v13;
      }
      while (v9 != v13);
    }
  }
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB640]), sel_init);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_23486F74C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setName_, v16);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v17 = sub_23486F7B8();
  swift_bridgeObjectRelease();
  if (v17 >= 1)
  {
    v18 = v15;
    swift_bridgeObjectRetain();
    v19 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setRenamingIdentifier_, v19);

  }
  swift_beginAccess();
  if (*(_QWORD *)(v56 + 112))
  {
    swift_bridgeObjectRetain();
    v20 = sub_23486F7B8();
    swift_bridgeObjectRelease();
    if (v20 >= 1)
    {
      if (*(_QWORD *)(v56 + 112))
      {
        v21 = v15;
        swift_bridgeObjectRetain();
        v22 = (void *)sub_23486F74C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v23 = v15;
        v22 = 0;
      }
      objc_msgSend(v15, sel_setVersionHashModifier_, v22);

    }
  }
  swift_beginAccess();
  objc_msgSend(v15, sel_setOptional_, *(unsigned __int8 *)(v56 + 96));
  v24 = (uint64_t *)(v56 + 48);
  swift_beginAccess();
  v25 = *(_QWORD *)(v56 + 48);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v27 = 67;
    v28 = *(_QWORD *)(v25 + 16);
    while ((*(_BYTE *)(v25 + v27) & 1) == 0)
    {
      v27 += 40;
      if (!--v28)
        goto LABEL_38;
    }
    objc_msgSend(v15, sel_setPreservesValueInHistoryOnDeletion_, 1);
    v25 = *v24;
    v26 = *(_QWORD *)(*v24 + 16);
    if (!v26)
      goto LABEL_48;
LABEL_38:
    v29 = 68;
    v30 = v26;
    while ((*(_BYTE *)(v25 + v29) & 1) == 0)
    {
      v29 += 40;
      if (!--v30)
        goto LABEL_43;
    }
    objc_msgSend(v15, sel_setIndexedBySpotlight_, 1);
    v25 = *v24;
    v26 = *(_QWORD *)(*v24 + 16);
    if (!v26)
      goto LABEL_48;
LABEL_43:
    v31 = (_BYTE *)(v25 + 66);
    while ((*v31 & 1) == 0)
    {
      v31 += 40;
      if (!--v26)
        goto LABEL_48;
    }
    objc_msgSend(v15, sel_setAllowsCloudEncryption_, 1);
  }
LABEL_48:
  v32 = (uint64_t *)(v56 + 120);
  swift_beginAccess();
  v33 = *(_QWORD *)(v56 + 120);
  if (!*(_QWORD *)(v33 + 16))
  {
    v60 = 0u;
    v61 = 0u;
LABEL_58:
    sub_23485D2E4((uint64_t)&v60, &qword_254258968);
    goto LABEL_59;
  }
  swift_bridgeObjectRetain();
  v34 = sub_2347CD9BC(1836412517, 0xE400000000000000);
  if ((v35 & 1) != 0)
  {
    sub_234785C80(*(_QWORD *)(v33 + 56) + 32 * v34, (uint64_t)&v60);
  }
  else
  {
    v60 = 0u;
    v61 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v61 + 1))
    goto LABEL_58;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258650);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v37 = v15;
    v38 = objc_msgSend(v37, sel_userInfo);
    if (v38)
    {
      v39 = v38;
      v40 = sub_23486F62C();

      *((_QWORD *)&v58 + 1) = 0xE400000000000000;
      sub_23486FE6C();
      v59 = v36;
      sub_234797294(&v58, v57);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_23480659C(v57, (uint64_t)&v60, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_234797260((uint64_t)&v60);
      if (v40)
      {
        v42 = (void *)sub_23486F620();
        swift_bridgeObjectRelease();
      }
      else
      {
        v42 = 0;
      }
      objc_msgSend(v37, sel_setUserInfo_, v42);

    }
    else
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v37, sel_setUserInfo_, 0);
      swift_bridgeObjectRelease();

    }
  }
LABEL_59:
  v43 = *v32;
  if (!*(_QWORD *)(*v32 + 16))
  {
    v60 = 0u;
    v61 = 0u;
LABEL_69:
    sub_23485D2E4((uint64_t)&v60, &qword_254258968);
    goto LABEL_70;
  }
  swift_bridgeObjectRetain();
  v44 = sub_2347CD9BC(0x657079546D756E45, 0xE800000000000000);
  if ((v45 & 1) != 0)
  {
    sub_234785C80(*(_QWORD *)(v43 + 56) + 32 * v44, (uint64_t)&v60);
  }
  else
  {
    v60 = 0u;
    v61 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v61 + 1))
    goto LABEL_69;
  v46 = MEMORY[0x24BEE1328];
  if ((swift_dynamicCast() & 1) != 0)
  {
    v47 = v58;
    v48 = v15;
    v49 = objc_msgSend(v48, sel_userInfo);
    if (v49)
    {
      v50 = v49;
      v51 = sub_23486F62C();

      *(_QWORD *)&v58 = 0x657079546D756E45;
      *((_QWORD *)&v58 + 1) = 0xE800000000000000;
      sub_23486FE6C();
      v59 = v46;
      LOBYTE(v58) = v47;
      sub_234797294(&v58, v57);
      v52 = swift_isUniquelyReferenced_nonNull_native();
      sub_23480659C(v57, (uint64_t)&v60, v52);
      swift_bridgeObjectRelease();
      sub_234797260((uint64_t)&v60);
      if (v51)
      {
        v53 = (void *)sub_23486F620();
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = 0;
      }
      objc_msgSend(v48, sel_setUserInfo_, v53);

    }
    else
    {
      objc_msgSend(v48, sel_setUserInfo_, 0);
      swift_bridgeObjectRelease();

    }
  }
LABEL_70:
  sub_23485D618(0, &qword_254258430);
  v54 = (void *)sub_23486F8D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setElements_, v54);

  return v15;
}

id sub_23485A6F8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  char v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  void *ObjCClassFromMetadata;
  void *v44;
  void *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  id v55;
  _BYTE v56[24];
  unint64_t ObjCClassMetadata;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61[9];

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5E0]), sel_init);
  v61[0] = 0;
  swift_beginAccess();
  if (sub_23486F788() == 0x7470697263736564 && v3 == 0xEB000000006E6F69)
    goto LABEL_82;
  v5 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    goto LABEL_81;
  v6 = v2;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_23486F74C();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setName_, v7);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v8 = sub_23486F7B8();
  swift_bridgeObjectRelease();
  if (v8 >= 1)
  {
    v9 = v6;
    swift_bridgeObjectRetain();
    v10 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setRenamingIdentifier_, v10);

  }
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 112))
  {
    swift_bridgeObjectRetain();
    v11 = sub_23486F7B8();
    swift_bridgeObjectRelease();
    if (v11 >= 1)
    {
      if (*(_QWORD *)(v1 + 112))
      {
        v12 = v6;
        swift_bridgeObjectRetain();
        v13 = (void *)sub_23486F74C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = v6;
        v13 = 0;
      }
      objc_msgSend(v6, sel_setVersionHashModifier_, v13);

    }
  }
  swift_beginAccess();
  objc_msgSend(v6, sel_setOptional_, *(unsigned __int8 *)(v1 + 96));
  swift_beginAccess();
  v15 = *(_QWORD *)(v1 + 56);
  ObjCClassMetadata = v15;
  if (swift_conformsToProtocol2())
    v16 = v15;
  else
    v16 = 0;
  while (v16)
  {
    sub_2347E85B4(v16, (uint64_t *)&ObjCClassMetadata);
    v15 = ObjCClassMetadata;
    if (swift_conformsToProtocol2())
      v16 = v15;
    else
      v16 = 0;
  }
  v17 = v1 + 48;
  swift_beginAccess();
  v18 = *(_QWORD *)(v1 + 48);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v20 = (_BYTE *)(v18 + 32);
    while ((*v20 & 1) == 0)
    {
      v20 += 40;
      if (!--v19)
        goto LABEL_26;
    }
    objc_msgSend(v6, sel_setAttributeType_, 1800);
    v22 = *(_QWORD *)(*(_QWORD *)v17 + 16);
    if (!v22)
      goto LABEL_80;
    v23 = (uint64_t *)(*(_QWORD *)v17 + 56);
    while (*((_BYTE *)v23 - 24) != 1)
    {
      v23 += 5;
      if (!--v22)
        goto LABEL_80;
    }
    v24 = *v23;
    if (*v23)
    {
      v25 = *(v23 - 1);
      swift_bridgeObjectRetain();
      if ((sub_23484FF40(v25, v24) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      v36 = (void *)sub_23486F74C();
      v37 = (void *)objc_opt_self();
      v38 = objc_msgSend(v37, sel_valueTransformerNames);
      type metadata accessor for NSValueTransformerName(0);
      v39 = sub_23486F8E4();

      LOBYTE(v38) = sub_234857574((uint64_t)v36, v39);
      swift_bridgeObjectRelease();
      if ((v38 & 1) != 0)
      {
        v40 = objc_msgSend(v37, sel_valueTransformerForName_, v36);
        if (v40)
        {
          v41 = v40;
          v59 = sub_23485D618(0, &qword_2542574C8);
          ObjCClassMetadata = (unint64_t)v41;
          __swift_project_boxed_opaque_existential_0Tm_0(&ObjCClassMetadata, v59);
          swift_getDynamicType();
          v42 = v41;
          __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)&ObjCClassMetadata);
          if (swift_dynamicCastMetatype())
          {
            ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
            if ((objc_msgSend(ObjCClassFromMetadata, sel_allowsReverseTransformation) & 1) != 0)
            {
              objc_msgSend(ObjCClassFromMetadata, sel_transformedValueClass);
              ObjCClassMetadata = swift_getObjCClassMetadata();
              __swift_instantiateConcreteTypeFromMangledName(&qword_2542574E0);
              sub_23486F77C();
              v44 = (void *)sub_23486F74C();
              swift_bridgeObjectRelease();
              objc_msgSend(v6, sel_setValueTransformerName_, v44);

              v45 = (void *)sub_23486F74C();
              swift_bridgeObjectRelease();
              objc_msgSend(v6, sel_setAttributeValueClassName_, v45);

              goto LABEL_45;
            }
            ObjCClassMetadata = 0;
            v58 = 0xE000000000000000;
            sub_23486FEA8();
            sub_23486F7DC();
            sub_23486F7DC();
            sub_23486F7DC();
          }
          else
          {
            ObjCClassMetadata = 0;
            v58 = 0xE000000000000000;
            sub_23486FEA8();
            swift_bridgeObjectRelease();
            ObjCClassMetadata = 0xD00000000000001ELL;
            v58 = 0x80000002348769C0;
            v55 = objc_msgSend(v42, sel_description);
            sub_23486F770();

            sub_23486F7DC();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          ObjCClassMetadata = 0;
          v58 = 0xE000000000000000;
          sub_23486FEA8();
          sub_23486F7DC();
          v60 = (uint64_t)v36;
          sub_23486FF74();
        }
      }
      else
      {
        ObjCClassMetadata = 0;
        v58 = 0xE000000000000000;
        sub_23486FEA8();
        sub_23486F7DC();
        sub_23486F7DC();
      }
    }
    else
    {
LABEL_80:
      ObjCClassMetadata = 0;
      v58 = 0xE000000000000000;
      sub_23486FEA8();
      sub_23486F7DC();
      v60 = v1;
      type metadata accessor for Schema.Attribute();
      sub_23486FF74();
      sub_23486F7DC();
    }
    while (1)
    {
LABEL_81:
      sub_234870004();
      __break(1u);
LABEL_82:
      swift_bridgeObjectRelease();
    }
  }
LABEL_26:
  v21 = sub_23485C768();
  if (v21)
  {
    objc_msgSend(v6, sel_setAttributeType_, v21);
  }
  else
  {
    v26 = swift_conformsToProtocol2();
    if (v26)
      v27 = v26;
    else
      v27 = 0;
    if (v26)
      v28 = v15;
    else
      v28 = 0;
    if (v28)
      sub_23485B354(v28, v1, v6, v28, v27, v61, v28);
  }
  if (!objc_msgSend(v6, sel_attributeType))
  {
    ObjCClassMetadata = 0;
    v58 = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    ObjCClassMetadata = 0xD00000000000002ELL;
    v58 = 0x80000002348768F0;
    v60 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258970);
    sub_23486F77C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    goto LABEL_81;
  }
LABEL_45:
  v29 = *(_QWORD *)v17;
  v30 = *(_QWORD *)(*(_QWORD *)v17 + 16);
  if (v30)
  {
    v31 = 67;
    v32 = *(_QWORD *)(*(_QWORD *)v17 + 16);
    while (*(_BYTE *)(v29 + v31) != 1)
    {
      v31 += 40;
      if (!--v32)
        goto LABEL_51;
    }
    objc_msgSend(v6, sel_setPreservesValueInHistoryOnDeletion_, 1);
    v29 = *(_QWORD *)v17;
    v30 = *(_QWORD *)(*(_QWORD *)v17 + 16);
    if (!v30)
      goto LABEL_66;
LABEL_51:
    v33 = 68;
    v34 = v30;
    while ((*(_BYTE *)(v29 + v33) & 1) == 0)
    {
      v33 += 40;
      if (!--v34)
        goto LABEL_56;
    }
    objc_msgSend(v6, sel_setIndexedBySpotlight_, 1);
    v29 = *(_QWORD *)v17;
    v30 = *(_QWORD *)(*(_QWORD *)v17 + 16);
    if (!v30)
      goto LABEL_66;
LABEL_56:
    v35 = (_BYTE *)(v29 + 66);
    while (*v35 != 1)
    {
      v35 += 40;
      if (!--v30)
        goto LABEL_66;
    }
    objc_msgSend(v6, sel_setAllowsCloudEncryption_, 1);
  }
LABEL_66:
  if ((sub_234846840() & 1) != 0)
    objc_msgSend(v6, sel_setAllowsExternalBinaryDataStorage_, 1);
  v46 = *(_QWORD *)(*(_QWORD *)v17 + 16);
  if (v46)
  {
    v47 = (_BYTE *)(*(_QWORD *)v17 + 69);
    while ((*v47 & 1) == 0)
    {
      v47 += 40;
      if (!--v46)
        goto LABEL_74;
    }
    objc_msgSend(v6, sel_setTransient_, 1);
  }
LABEL_74:
  swift_beginAccess();
  if ((v61[0] & 1) == 0)
  {
    swift_beginAccess();
    sub_2347C5508(v1 + 64, (uint64_t)&ObjCClassMetadata);
    v48 = v59;
    if (v59)
    {
      v49 = __swift_project_boxed_opaque_existential_0Tm_0(&ObjCClassMetadata, v59);
      v50 = *(_QWORD *)(v48 - 8);
      MEMORY[0x24BDAC7A8](v49);
      v52 = &v56[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *))(v50 + 16))(v52);
      v53 = sub_2348702D4();
      (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v52, v48);
      __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)&ObjCClassMetadata);
    }
    else
    {
      v53 = 0;
    }
    objc_msgSend(v6, sel_setDefaultValue_, v53);
    swift_unknownObjectRelease();
  }
  return v6;
}

void sub_23485B354(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, _BYTE *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  _BYTE *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[3];
  __int128 v36;
  uint64_t v37;

  v32 = a6;
  v33 = a2;
  v11 = sub_23486FCBC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  v34 = *(_QWORD *)(a7 - 8);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v32 - v19;
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || (sub_23486F488(), swift_dynamicCastMetatype())
    || (type metadata accessor for Decimal(0), swift_dynamicCastMetatype())
    || swift_dynamicCastMetatype()
    || (sub_23486F4AC(), swift_dynamicCastMetatype())
    || (sub_23486F440(), swift_dynamicCastMetatype())
    || swift_dynamicCastMetatype())
  {
    objc_msgSend(a3, sel_setAttributeType_, 1800, v32);
    sub_23486F770();
    v21 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_setValueTransformerName_, v21);

    *(_QWORD *)&v36 = a4;
    *((_QWORD *)&v36 + 1) = a5;
    __swift_instantiateConcreteTypeFromMangledName(qword_256188770);
    sub_23486F77C();
    v22 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_setAttributeValueClassName_, v22);

  }
  else
  {
    v23 = v32;
    swift_beginAccess();
    *v23 = 1;
    objc_msgSend(a3, sel_setAttributeType_, 1000);
    v24 = v33 + 64;
    swift_beginAccess();
    sub_2347C5508(v24, (uint64_t)&v36);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
    v25 = swift_dynamicCast();
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
    if ((v25 & 1) != 0)
    {
      v26(v15, 0, 1, a7);
      v27 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v20, v15, a7);
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v18, v20, a7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542575F8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_2347C65A8(v35, &v36);
        __swift_project_boxed_opaque_existential_0Tm_0(&v36, v37);
        sub_23486F038();
        swift_allocObject();
        sub_23486F02C();
        v28 = sub_23486F020();
        v30 = v29;
        swift_release();
        *(_QWORD *)&v35[0] = v28;
        *((_QWORD *)&v35[0] + 1) = v30;
        v31 = sub_2348702D4();
        sub_23485D220((uint64_t)v35);
        objc_msgSend(a3, sel_setDefaultValue_, v31, v32);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v20, a7);
        __swift_destroy_boxed_opaque_existential_0Tm_0((uint64_t)&v36);
      }
      else
      {
        memset(v35, 0, sizeof(v35));
        (*(void (**)(char *, uint64_t))(v34 + 8))(v20, a7);
        sub_23485D2E4((uint64_t)v35, &qword_254257708);
      }
    }
    else
    {
      v26(v15, 1, 1, a7);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
  }
}

id sub_23485B8F0()
{
  return sub_23485A6F8();
}

uint64_t sub_23485B944(_QWORD **a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  char v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t result;
  __int128 v30;
  ValueMetadata *v31;
  _UNKNOWN **v32;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB760]), sel_init);
  swift_beginAccess();
  if (sub_23486F788() == 0x7470697263736564 && v4 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v6 = sub_2348702E0();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
LABEL_31:
    result = sub_234870004();
    __break(1u);
    return result;
  }
  v7 = v3;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_23486F74C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setName_, v8);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v9 = sub_23486F7B8();
  swift_bridgeObjectRelease();
  if (v9 >= 1)
  {
    v10 = v7;
    swift_bridgeObjectRetain();
    v11 = (void *)sub_23486F74C();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setRenamingIdentifier_, v11);

  }
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 160))
  {
    swift_bridgeObjectRetain();
    v12 = sub_23486F7B8();
    swift_bridgeObjectRelease();
    if (v12 >= 1)
    {
      if (*(_QWORD *)(v1 + 160))
      {
        v13 = v7;
        swift_bridgeObjectRetain();
        v14 = (void *)sub_23486F74C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = v7;
        v14 = 0;
      }
      objc_msgSend(v7, sel_setVersionHashModifier_, v14);

    }
  }
  swift_beginAccess();
  objc_msgSend(v7, sel_setDeleteRule_, *(unsigned __int8 *)(v1 + 88));
  swift_beginAccess();
  v16 = *(_QWORD *)(v1 + 64);
  if (swift_conformsToProtocol2())
    v17 = v16;
  else
    v17 = 0;
  objc_msgSend(v7, sel_setOptional_, v17 != 0);
  if (sub_23484FD44(*(_QWORD *)(v1 + 64)))
  {
    objc_msgSend(v7, sel_setMinCount_, 0);
    v18 = 1;
  }
  else
  {
    swift_beginAccess();
    if (*(_BYTE *)(v1 + 128))
      v19 = 0;
    else
      v19 = *(_QWORD *)(v1 + 120);
    objc_msgSend(v7, sel_setMinCount_, v19);
    swift_beginAccess();
    if (*(_BYTE *)(v1 + 144))
      v18 = 0;
    else
      v18 = *(_QWORD *)(v1 + 136);
  }
  objc_msgSend(v7, sel_setMaxCount_, v18);
  swift_beginAccess();
  v21 = *(_QWORD *)(v1 + 72);
  v20 = *(_QWORD *)(v1 + 80);
  swift_beginAccess();
  v23 = *(_QWORD *)(v1 + 96);
  v22 = *(_QWORD *)(v1 + 104);
  v24 = *a1;
  swift_bridgeObjectRetain();
  v25 = v7;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_23479E1A4(0, v24[2] + 1, 1, v24);
  v27 = v24[2];
  v26 = v24[3];
  if (v27 >= v26 >> 1)
    v24 = sub_23479E1A4((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
  v31 = &type metadata for PendingRelationshipLink;
  v32 = &off_2505FD148;
  v28 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v30 = v28;
  v28[2] = v25;
  v28[3] = v21;
  v28[4] = v20;
  v28[5] = v23;
  v28[6] = v22;
  v24[2] = v27 + 1;
  sub_23485D288(&v30, (uint64_t)&v24[5 * v27 + 4]);
  *a1 = v24;
  return (uint64_t)v25;
}

uint64_t sub_23485BDF0(_QWORD **a1)
{
  return sub_23485B944(a1);
}

void sub_23485BE10(void *a1)
{
  sub_23485C970(a1);
}

uint64_t sub_23485BE48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  __int128 v13;
  uint64_t v15;
  _BYTE v16[40];

  v3 = v2;
  v6 = *v2;
  swift_bridgeObjectRetain();
  v7 = sub_23486FE48();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    while (1)
    {
      sub_234797134(*(_QWORD *)(v6 + 48) + 40 * v9, (uint64_t)v16);
      v11 = MEMORY[0x234945968](v16, a2);
      sub_234797260((uint64_t)v16);
      if ((v11 & 1) != 0)
        break;
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_234797260(a2);
    sub_234797134(*(_QWORD *)(*v3 + 48) + 40 * v9, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_234797134(a2, (uint64_t)v16);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_23485BFC0((uint64_t)v16, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v15;
    swift_bridgeObjectRelease();
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_23485BFC0(uint64_t result, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  int64_t v73;
  unint64_t v74;
  int64_t i;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  int64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v4 = v3;
  v5 = a3;
  v6 = result;
  v7 = *(_QWORD *)v4;
  if (*(_QWORD *)(*(_QWORD *)v4 + 24) > *(_QWORD *)(*(_QWORD *)v4 + 16))
  {
    if ((a3 & 1) != 0)
      goto LABEL_87;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258908);
    v9 = sub_23486FE78();
    v5 = v9;
    if (*(_QWORD *)(v7 + 16))
    {
      v10 = (void *)(v9 + 56);
      v11 = v7 + 56;
      v12 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
      if (v5 != v7 || (unint64_t)v10 >= v11 + 8 * v12)
        memmove(v10, (const void *)(v7 + 56), 8 * v12);
      v13 = 0;
      *(_QWORD *)(v5 + 16) = *(_QWORD *)(v7 + 16);
      v14 = 1 << *(_BYTE *)(v7 + 32);
      v15 = -1;
      if (v14 < 64)
        v15 = ~(-1 << v14);
      v16 = v15 & *(_QWORD *)(v7 + 56);
      v17 = (unint64_t)(v14 + 63) >> 6;
      while (1)
      {
        if (v16)
        {
LABEL_90:
          v67 = __clz(__rbit64(v16));
          v16 &= v16 - 1;
          v68 = v67 | (v13 << 6);
        }
        else
        {
          v73 = v13 + 1;
          if (__OFADD__(v13, 1))
            goto LABEL_114;
          if (v73 >= v17)
            break;
          v74 = *(_QWORD *)(v11 + 8 * v73);
          ++v13;
          if (!v74)
          {
            v13 = v73 + 1;
            if (v73 + 1 >= v17)
              break;
            v74 = *(_QWORD *)(v11 + 8 * v13);
            if (!v74)
            {
              v13 = v73 + 2;
              if (v73 + 2 >= v17)
                break;
              v74 = *(_QWORD *)(v11 + 8 * v13);
              if (!v74)
              {
                v13 = v73 + 3;
                if (v73 + 3 >= v17)
                  break;
                v74 = *(_QWORD *)(v11 + 8 * v13);
                if (!v74)
                {
                  v13 = v73 + 4;
                  if (v73 + 4 >= v17)
                    break;
                  v74 = *(_QWORD *)(v11 + 8 * v13);
                  for (i = v73 + 4; !v74; ++i)
                  {
                    v13 = i + 1;
                    if (__OFADD__(i, 1))
                      goto LABEL_115;
                    if (v13 >= v17)
                      goto LABEL_111;
                    v74 = *(_QWORD *)(v11 + 8 * v13);
                  }
                }
              }
            }
          }
          v16 = (v74 - 1) & v74;
          v68 = __clz(__rbit64(v74)) + (v13 << 6);
        }
        v69 = 40 * v68;
        sub_234797134(*(_QWORD *)(v7 + 48) + 40 * v68, (uint64_t)&v80);
        v70 = *(_QWORD *)(v5 + 48) + v69;
        v71 = v80;
        v72 = v81;
        *(_QWORD *)(v70 + 32) = v82;
        *(_OWORD *)v70 = v71;
        *(_OWORD *)(v70 + 16) = v72;
      }
    }
LABEL_111:
    while (1)
    {
      result = swift_release();
      *(_QWORD *)v4 = v5;
LABEL_87:
      v61 = *(_QWORD *)v4;
      *(_QWORD *)(*(_QWORD *)v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      v62 = *(_QWORD *)(v61 + 48) + 40 * a2;
      v63 = *(_OWORD *)(v6 + 16);
      *(_OWORD *)v62 = *(_OWORD *)v6;
      *(_OWORD *)(v62 + 16) = v63;
      *(_QWORD *)(v62 + 32) = *(_QWORD *)(v6 + 32);
      v64 = *(_QWORD *)(v61 + 16);
      v65 = __OFADD__(v64, 1);
      v66 = v64 + 1;
      if (!v65)
        break;
LABEL_110:
      __break(1u);
    }
    *(_QWORD *)(v61 + 16) = v66;
    return result;
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258908);
  if ((v5 & 1) == 0)
  {
    v5 = v18;
    v38 = sub_23486FE84();
    v11 = v38;
    if (*(_QWORD *)(v7 + 16))
    {
      v77 = v4;
      v79 = v6;
      v39 = 1 << *(_BYTE *)(v7 + 32);
      v16 = v7 + 56;
      if (v39 < 64)
        v40 = ~(-1 << v39);
      else
        v40 = -1;
      a2 = v40 & *(_QWORD *)(v7 + 56);
      v6 = (unint64_t)(v39 + 63) >> 6;
      v4 = v38 + 56;
      swift_retain();
      v17 = 0;
      v13 = 40;
      while (1)
      {
        if (a2)
        {
          v45 = __clz(__rbit64(a2));
          a2 &= a2 - 1;
          v46 = v45 | (v17 << 6);
        }
        else
        {
          v47 = v17 + 1;
          if (__OFADD__(v17, 1))
            goto LABEL_109;
          if (v47 >= v6)
            goto LABEL_79;
          v48 = *(_QWORD *)(v16 + 8 * v47);
          ++v17;
          if (!v48)
          {
            v17 = v47 + 1;
            if (v47 + 1 >= v6)
              goto LABEL_79;
            v48 = *(_QWORD *)(v16 + 8 * v17);
            if (!v48)
            {
              v17 = v47 + 2;
              if (v47 + 2 >= v6)
                goto LABEL_79;
              v48 = *(_QWORD *)(v16 + 8 * v17);
              if (!v48)
              {
                v17 = v47 + 3;
                if (v47 + 3 >= v6)
                  goto LABEL_79;
                v48 = *(_QWORD *)(v16 + 8 * v17);
                if (!v48)
                {
                  v17 = v47 + 4;
                  if (v47 + 4 >= v6)
                    goto LABEL_79;
                  v48 = *(_QWORD *)(v16 + 8 * v17);
                  v49 = v47 + 4;
                  if (!v48)
                  {
                    while (1)
                    {
                      v17 = v49 + 1;
                      if (__OFADD__(v49, 1))
                        goto LABEL_113;
                      if (v17 >= v6)
                        break;
                      v48 = *(_QWORD *)(v16 + 8 * v17);
                      ++v49;
                      if (v48)
                        goto LABEL_67;
                    }
LABEL_79:
                    swift_release_n();
                    v4 = v77;
                    v6 = v79;
LABEL_83:
                    *(_QWORD *)v4 = v11;
                    v5 = v6;
                    result = sub_23486FE48();
                    v59 = -1 << *(_BYTE *)(v11 + 32);
                    a2 = result & ~v59;
                    if (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
                      goto LABEL_87;
                    v60 = ~v59;
                    while (1)
                    {
                      sub_234797134(*(_QWORD *)(v11 + 48) + 40 * a2, (uint64_t)&v80);
                      v5 = MEMORY[0x234945968](&v80, v6);
                      result = sub_234797260((uint64_t)&v80);
                      if ((v5 & 1) != 0)
                        goto LABEL_116;
                      a2 = (a2 + 1) & v60;
                      if (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
                        goto LABEL_87;
                    }
                  }
                }
              }
            }
          }
LABEL_67:
          a2 = (v48 - 1) & v48;
          v46 = __clz(__rbit64(v48)) + (v17 << 6);
        }
        sub_234797134(*(_QWORD *)(v7 + 48) + 40 * v46, (uint64_t)&v80);
        v5 = (uint64_t)&v80;
        v50 = sub_23486FE48();
        v51 = -1 << *(_BYTE *)(v11 + 32);
        v52 = v50 & ~v51;
        v53 = v52 >> 6;
        if (((-1 << v52) & ~*(_QWORD *)(v4 + 8 * (v52 >> 6))) != 0)
        {
          v41 = __clz(__rbit64((-1 << v52) & ~*(_QWORD *)(v4 + 8 * (v52 >> 6)))) | v52 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v54 = 0;
          v55 = (unint64_t)(63 - v51) >> 6;
          do
          {
            if (++v53 == v55 && (v54 & 1) != 0)
              goto LABEL_89;
            v56 = v53 == v55;
            if (v53 == v55)
              v53 = 0;
            v54 |= v56;
            v57 = *(_QWORD *)(v4 + 8 * v53);
          }
          while (v57 == -1);
          v41 = __clz(__rbit64(~v57)) + (v53 << 6);
        }
        *(_QWORD *)(v4 + ((v41 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v41;
        v42 = *(_QWORD *)(v11 + 48) + 40 * v41;
        v43 = v80;
        v44 = v81;
        *(_QWORD *)(v42 + 32) = v82;
        *(_OWORD *)v42 = v43;
        *(_OWORD *)(v42 + 16) = v44;
        ++*(_QWORD *)(v11 + 16);
      }
    }
LABEL_82:
    swift_release();
    goto LABEL_83;
  }
  v5 = v18;
  v19 = sub_23486FE84();
  v11 = v19;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_82;
  v76 = v4;
  v78 = v6;
  v20 = 1 << *(_BYTE *)(v7 + 32);
  a2 = v7 + 56;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v16 = v21 & *(_QWORD *)(v7 + 56);
  v6 = (unint64_t)(v20 + 63) >> 6;
  v4 = v19 + 56;
  swift_retain();
  v17 = 0;
  v13 = 40;
  while (v16)
  {
    v24 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v25 = v24 | (v17 << 6);
LABEL_35:
    v29 = *(_QWORD *)(v7 + 48) + 40 * v25;
    v80 = *(_OWORD *)v29;
    v81 = *(_OWORD *)(v29 + 16);
    v82 = *(_QWORD *)(v29 + 32);
    v5 = (uint64_t)&v80;
    v30 = sub_23486FE48();
    v31 = -1 << *(_BYTE *)(v11 + 32);
    v32 = v30 & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v4 + 8 * (v32 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v4 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_17;
    }
    v34 = 0;
    v35 = (unint64_t)(63 - v31) >> 6;
    do
    {
      if (++v33 == v35 && (v34 & 1) != 0)
      {
        __break(1u);
LABEL_89:
        __break(1u);
        goto LABEL_90;
      }
      v36 = v33 == v35;
      if (v33 == v35)
        v33 = 0;
      v34 |= v36;
      v37 = *(_QWORD *)(v4 + 8 * v33);
    }
    while (v37 == -1);
    v22 = __clz(__rbit64(~v37)) + (v33 << 6);
LABEL_17:
    *(_QWORD *)(v4 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = *(_QWORD *)(v11 + 48) + 40 * v22;
    *(_OWORD *)v23 = v80;
    *(_OWORD *)(v23 + 16) = v81;
    *(_QWORD *)(v23 + 32) = v82;
    ++*(_QWORD *)(v11 + 16);
  }
  v26 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  if (v26 >= v6)
    goto LABEL_77;
  v27 = *(_QWORD *)(a2 + 8 * v26);
  ++v17;
  if (v27)
    goto LABEL_34;
  v17 = v26 + 1;
  if (v26 + 1 >= v6)
    goto LABEL_77;
  v27 = *(_QWORD *)(a2 + 8 * v17);
  if (v27)
    goto LABEL_34;
  v17 = v26 + 2;
  if (v26 + 2 >= v6)
    goto LABEL_77;
  v27 = *(_QWORD *)(a2 + 8 * v17);
  if (v27)
    goto LABEL_34;
  v17 = v26 + 3;
  if (v26 + 3 >= v6)
    goto LABEL_77;
  v27 = *(_QWORD *)(a2 + 8 * v17);
  if (v27)
  {
LABEL_34:
    v16 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v17 << 6);
    goto LABEL_35;
  }
  v17 = v26 + 4;
  if (v26 + 4 >= v6)
  {
LABEL_77:
    swift_release();
    v58 = 1 << *(_BYTE *)(v7 + 32);
    v4 = v76;
    v6 = v78;
    if (v58 >= 64)
      bzero((void *)(v7 + 56), ((unint64_t)(v58 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *(_QWORD *)a2 = -1 << v58;
    *(_QWORD *)(v7 + 16) = 0;
    goto LABEL_82;
  }
  v27 = *(_QWORD *)(a2 + 8 * v17);
  v28 = v26 + 4;
  if (v27)
    goto LABEL_34;
  while (1)
  {
    v17 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v17 >= v6)
      goto LABEL_77;
    v27 = *(_QWORD *)(a2 + 8 * v17);
    ++v28;
    if (v27)
      goto LABEL_34;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  result = sub_234870418();
  __break(1u);
  return result;
}

uint64_t sub_23485C768()
{
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype())
  {
    return 100;
  }
  if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    return 200;
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype())
  {
    return 300;
  }
  if (swift_dynamicCastMetatype())
    return 700;
  if (swift_dynamicCastMetatype())
    return 800;
  if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
    return 600;
  sub_23486F488();
  if (swift_dynamicCastMetatype())
    return 900;
  type metadata accessor for Decimal(0);
  if (swift_dynamicCastMetatype())
    return 400;
  if (swift_dynamicCastMetatype())
    return 500;
  sub_23486F4AC();
  if (swift_dynamicCastMetatype())
    return 1100;
  sub_23486F440();
  if (swift_dynamicCastMetatype())
    return 1200;
  if (swift_dynamicCastMetatype())
    return 1000;
  return 0;
}

void sub_23485C970(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v2 = v1;
  v3 = objc_msgSend(a1, sel_entitiesByName);
  sub_23485D618(0, &qword_2542588E8);
  v4 = sub_23486F62C();

  v6 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_9;
  swift_bridgeObjectRetain();
  v7 = sub_2347CD9BC(v6, v5);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
    sub_23486FEA8();
    sub_23486F7DC();
    swift_bridgeObjectRetain();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    v19 = *(id *)v2;
    v20 = objc_msgSend(v19, sel_description);
    sub_23486F770();

    sub_23486F7DC();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v21 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = *(id *)v2;
  objc_msgSend(*(id *)v2, sel_setDestinationEntity_, v21);
  v10 = v21;
  v11 = *(_QWORD *)(v2 + 32);
  if (!v11)
  {
LABEL_7:

    return;
  }
  v12 = *(_QWORD *)(v2 + 24);
  v13 = objc_msgSend(v21, sel_relationshipsByName);
  sub_23485D618(0, &qword_254257608);
  v14 = sub_23486F62C();

  if (*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_2347CD9BC(v12, v11);
    if ((v16 & 1) != 0)
    {
      v17 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v17;
      objc_msgSend(v9, sel_setInverseRelationship_, v18);

      v10 = v21;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486FF74();
  sub_23486F7DC();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_23486F7DC();
  sub_23486F7DC();
LABEL_12:
  sub_234870004();
  __break(1u);
}

void *sub_23485CD50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  _QWORD v6[3];

  v6[0] = 1;
  type metadata accessor for Schema();
  v6[1] = 0;
  v6[2] = 0;
  swift_allocObject();
  v0 = swift_bridgeObjectRetain();
  v1 = (_QWORD *)Schema.init(_:version:)(v0, (uint64_t)v6);
  if (qword_254258818 != -1)
    swift_once();
  objc_msgSend((id)qword_254258888, sel_lock);
  if (qword_254258880 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_254258878;
  v3 = (_QWORD *)swift_retain();
  v4 = sub_23481ECAC(v3, v2);
  swift_release();
  swift_endAccess();
  if (!v4)
  {
    v4 = (void *)sub_2348576C8();
    if (v4)
    {
      swift_beginAccess();
      swift_retain();
      sub_234825F8C((uint64_t)v4, v1);
      swift_endAccess();
      swift_release();
    }
  }
  objc_msgSend((id)qword_254258888, sel_unlock);
  swift_release();
  return v4;
}

id sub_23485CECC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD v24[3];

  v3 = sub_23486F5D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = 1;
  type metadata accessor for Schema();
  v24[1] = 0;
  v24[2] = 0;
  swift_allocObject();
  v7 = swift_bridgeObjectRetain();
  v8 = (_QWORD *)Schema.init(_:version:)(v7, (uint64_t)v24);
  if (qword_254258818 != -1)
    swift_once();
  objc_msgSend((id)qword_254258888, sel_lock);
  if (qword_254258880 != -1)
    swift_once();
  swift_beginAccess();
  v9 = qword_254258878;
  v10 = (_QWORD *)swift_retain();
  v11 = sub_23481ECAC(v10, v9);
  swift_release();
  swift_endAccess();
  if (v11)
    goto LABEL_8;
  v12 = sub_2348576C8();
  if (v12)
  {
    v13 = (void *)v12;
    swift_beginAccess();
    swift_retain();
    v11 = v13;
    sub_234825F8C((uint64_t)v11, v8);
    swift_endAccess();
    swift_release();
LABEL_8:
    objc_msgSend((id)qword_254258888, sel_unlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258438);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_23487B380;
    *(_QWORD *)(v14 + 32) = a2;
    *(_QWORD *)(v14 + 40) = v11;
    v24[0] = v14;
    sub_23486F8FC();
    sub_23485D618(0, &qword_256189340);
    v15 = a2;
    v16 = v11;
    v17 = (void *)sub_23486F8D8();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend((id)objc_opt_self(), sel_modelByMergingModels_, v17);
    swift_release();

    return v18;
  }
  objc_msgSend((id)qword_254258888, sel_unlock);
  sub_23486F5CC();
  v20 = sub_23486F5C0();
  v21 = sub_23486FBC0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_234780000, v20, v21, "Failed to create an NSManagedObjectModel for entityTypes mergedWith another NSManagedObjectModel", v22, 2u);
    MEMORY[0x2349466D0](v22, -1, -1);
  }

  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return 0;
}

uint64_t sub_23485D220(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t sub_23485D254()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23485D288(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_0Tm_0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23485D2E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23485D320(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23485D364()
{
  return swift_release();
}

unint64_t sub_23485D36C()
{
  unint64_t result;

  result = qword_256189F68;
  if (!qword_256189F68)
  {
    result = MEMORY[0x2349465EC](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256189F68);
  }
  return result;
}

uint64_t sub_23485D3B0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2349465EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PendingRelationshipLink(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for PendingRelationshipLink(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PendingRelationshipLink(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(_QWORD *)(a2 + 32);
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PendingRelationshipLink(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PendingRelationshipLink(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingRelationshipLink(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingRelationshipLink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingRelationshipLink()
{
  return &type metadata for PendingRelationshipLink;
}

uint64_t sub_23485D618(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23485D654()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23485D6B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v4 = a3 + result;
  if (__OFADD__(a3, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = __OFADD__(v4, a4);
  v6 = v4 + a4;
  if (v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (!a4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a4 != -1 || v6 != 0x8000000000000000)
    return sub_23486F9C8();
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_23485D6FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23485D730()
{
  sub_23485D6FC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InstanceCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InstanceCache);
}

uint64_t sub_23485D75C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23485D764()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23486FCBC();
  if (v1 <= 0x3F)
  {
    result = sub_23486FCBC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23485D804(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  unsigned int v13;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84))
    v8 = *(_QWORD *)(v7 + 64);
  else
    v8 = *(_QWORD *)(v7 + 64) + 1;
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((((((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    v17 = ~v10;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v7 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v18 = (const void *)(((unint64_t)a2 + v11) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v17), v18, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, v18, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v11) & v17, 0, 1, v5);
    }
    v19 = (_QWORD *)(((((unint64_t)a1 + v11) & v17) + v12 + 7) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v18 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v23 = *v24;
    *(_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_23485D9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v5 + 64) + a1;
  if (!*(_DWORD *)(v5 + 84))
    ++v8;
  v9 = (v8 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v7 + 8))(v9, v6);
  return result;
}

void *sub_23485DAAC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  int v18;
  size_t v19;
  size_t v20;
  size_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (void *)(((unint64_t)a1 + v15) & ~v14);
  v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
    if (v18)
      v20 = v19;
    else
      v20 = v19 + 1;
    memcpy(v16, v17, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v16, v17, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
  }
  if (v18)
    v21 = v19;
  else
    v21 = v19 + 1;
  v22 = (_QWORD *)(((unint64_t)v16 + v21 + 7) & 0xFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  *(_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void *sub_23485DC44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(a1, a2, v11);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v12 = *(_QWORD *)(v7 + 64);
  else
    v12 = *(_QWORD *)(v7 + 64) + 1;
  v13 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  v17 = (void *)(((unint64_t)a1 + v16) & ~v15);
  v18 = (void *)(((unint64_t)a2 + v16) & ~v15);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19(v17, 1, v13);
  v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v17, v18, v13);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v17, v18, v22);
LABEL_22:
  if (*(_DWORD *)(v14 + 84))
    v23 = *(_QWORD *)(v14 + 64);
  else
    v23 = *(_QWORD *)(v14 + 64) + 1;
  v24 = (_QWORD *)(((unint64_t)v17 + v23 + 7) & 0xFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  *(_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void *sub_23485DE68(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  int v18;
  size_t v19;
  size_t v20;
  size_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (void *)(((unint64_t)a1 + v15) & ~v14);
  v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
    if (v18)
      v20 = v19;
    else
      v20 = v19 + 1;
    memcpy(v16, v17, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v16, v17, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
  }
  if (v18)
    v21 = v19;
  else
    v21 = v19 + 1;
  v22 = (_QWORD *)(((unint64_t)v16 + v21 + 7) & 0xFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  *(_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void *sub_23485E000(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(a1, a2, v11);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v12 = *(_QWORD *)(v7 + 64);
  else
    v12 = *(_QWORD *)(v7 + 64) + 1;
  v13 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  v17 = (void *)(((unint64_t)a1 + v16) & ~v15);
  v18 = (void *)(((unint64_t)a2 + v16) & ~v15);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19(v17, 1, v13);
  v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v17, v18, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v17, v18, v13);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v17, v18, v22);
LABEL_22:
  if (*(_DWORD *)(v14 + 84))
    v23 = *(_QWORD *)(v14 + 64);
  else
    v23 = *(_QWORD *)(v14 + 64) + 1;
  v24 = (_QWORD *)(((unint64_t)v17 + v23 + 7) & 0xFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  *(_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23485E224(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = v9;
  if (v5)
    v11 = *(_QWORD *)(v4 + 64);
  else
    v11 = *(_QWORD *)(v4 + 64) + 1;
  if (v8)
    v12 = 7;
  else
    v12 = 8;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = v11 + v13;
  if (v10 < a2)
  {
    if (((((((((((v12 + *(_QWORD *)(v7 + 64) + (v14 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v10 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    __asm { BR              X6 }
  }
  if (!v10)
    return 0;
  if (v6 >= v9)
    v18 = (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 48))(a1, *(unsigned int *)(v4 + 84));
  else
    v18 = (*(uint64_t (**)(uint64_t))(v7 + 48))((v14 + a1) & ~v13);
  if (v18 >= 2)
    return v18 - 1;
  else
    return 0;
}

void sub_23485E3A8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= v9)
    v13 = v9;
  else
    v13 = v12;
  v14 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v14;
  v15 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v15;
  if (v13 < a3)
  {
    v16 = a3 - v13;
    if ((((((((((_DWORD)v15 + (((_DWORD)v14 + *(unsigned __int8 *)(v10 + 80)) & ~*(unsigned __int8 *)(v10 + 80)) + 7) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v17 = v16 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v6 = v18;
    else
      v6 = 0;
  }
  if (a2 > v13)
  {
    if ((((((((((_DWORD)v15 + (((_DWORD)v14 + *(unsigned __int8 *)(v10 + 80)) & ~*(unsigned __int8 *)(v10 + 80)) + 7) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v19 = ~v13 + a2;
      bzero(a1, ((((((((v15 + ((v14 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

void sub_23485E4EC(unsigned int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, size_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void *v23;
  int v24;
  int v25;

  v21[v22] = 0;
  if (a1)
  {
    if (v17 >= v16)
    {
      if (v17 >= a1)
      {
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v21, a1 + 1, v14, a3);
      }
      else if ((_DWORD)a4)
      {
        if (a4 <= 3)
          v25 = a4;
        else
          v25 = 4;
        bzero(v21, a4);
        __asm { BR              X10 }
      }
    }
    else
    {
      v23 = (void *)((unint64_t)&v21[v20] & v15);
      if (v16 >= a1)
      {
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v23, a1 + 1, a2, v12);
      }
      else if ((_DWORD)v13)
      {
        if (v13 <= 3)
          v24 = v13;
        else
          v24 = 4;
        bzero(v23, v13);
        __asm { BR              X10 }
      }
    }
  }
}

void sub_23485E62C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_23485E634()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

uint64_t type metadata accessor for InstanceCache.Slot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InstanceCache.Slot);
}

uint64_t sub_23485E66C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23485E674(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23485E6B8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23485E6D8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

uint64_t type metadata accessor for InstanceCache.DoublyLinkedList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InstanceCache.DoublyLinkedList);
}

uint64_t sub_23485E714()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23485E71C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23485E750()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23485E758(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_23485E7AC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_23485E7E8(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23485E830(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for RingBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RingBuffer);
}

void sub_23485E87C()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_23485E88C(uint64_t a1)
{
  MEMORY[0x234945470]();
  return a1;
}

uint64_t sub_23485E8B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_23485E88C(a1);
  *a2 = result;
  a2[1] = 0;
  a2[2] = v4;
  return result;
}

uint64_t sub_23485E8E4()
{
  return sub_23486FAB8();
}

uint64_t sub_23485E8F4()
{
  return sub_23486FAD0();
}

uint64_t sub_23485E900()
{
  MEMORY[0x2349465EC](&unk_23487D920);
  return sub_23486FAAC();
}

_QWORD *sub_23485E950(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23485ECE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE1880]);
}

uint64_t sub_23485E95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2349465EC](&unk_23487D920, a3);
  return sub_23486FAB8();
}

uint64_t sub_23485E9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x2349465EC](&unk_23487D920, a4);
  return sub_23486FA94();
}

uint64_t sub_23485EA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2349465EC](&unk_23487D920, a3);
  return sub_23486FAD0();
}

void sub_23485EA78(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_23485EA80(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

void (*sub_23485EA8C(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v3;
  _QWORD *v7;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_23485EB1C(v7, *a2, *v3, v3[1], v3[2], *(_QWORD *)(a3 + 16));
  return sub_23485EAF0;
}

void sub_23485EAF0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_23485EB1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(_QWORD *a1)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a6 - 8);
  *a1 = a6;
  a1[1] = v10;
  a1[2] = malloc(*(_QWORD *)(v10 + 64));
  sub_23485D6B4(a2, a3, a4, a5);
  return sub_23485EBA4;
}

void sub_23485EBA4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_23485EBD8(uint64_t a1)
{
  MEMORY[0x2349465EC](&unk_23487D920, a1);
  return sub_23486FAC4();
}

uint64_t sub_23485EC28()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void sub_23485EC30(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_23485EC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23485F038(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE1B68], MEMORY[0x24BEE07E0]);
}

uint64_t sub_23485EC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23485F038(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE08B8], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07F0]);
}

uint64_t sub_23485EC8C()
{
  MEMORY[0x2349465EC](&unk_23487D920);
  return sub_23486FAA0();
}

_QWORD *sub_23485ECDC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23485ECE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE1878]);
}

_QWORD *sub_23485ECE8(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x2349465EC](&unk_23487D920);
  result = a4(&v9, a1, a2, v7, MEMORY[0x24BEE17A8]);
  *a1 = v9;
  return result;
}

__n128 sub_23485ED4C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;

  *(_QWORD *)a1 = *(_QWORD *)v1;
  result = *(__n128 *)(v1 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_QWORD *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_23485ED64(uint64_t a1)
{
  MEMORY[0x2349465EC](&unk_23487D7E0, a1);
  return sub_23486FB00();
}

uint64_t sub_23485ED98()
{
  return 2;
}

uint64_t sub_23485EDA0(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x2349465EC](&unk_23487D7E0, a1);
  v1 = sub_23485F1E4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23485EDF0()
{
  return sub_23486F86C();
}

void sub_23485EE10()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_23485EE20()
{
  return MEMORY[0x24BEE1780];
}

uint64_t sub_23485EE2C()
{
  return sub_23485EF54(&qword_25618A178, MEMORY[0x24BEE1BD8]);
}

unint64_t sub_23485EE50()
{
  unint64_t result;

  result = qword_25618A188;
  if (!qword_25618A188)
  {
    result = MEMORY[0x2349465EC](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25618A188);
  }
  return result;
}

void sub_23485EE94()
{
  JUMPOUT(0x2349465ECLL);
}

void sub_23485EEA4()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_23485EEB4()
{
  return sub_23485EF54(&qword_25618A190, MEMORY[0x24BEE1BA8]);
}

uint64_t sub_23485EED8(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2349465EC](&unk_23487D8C0);
  return MEMORY[0x2349465EC](MEMORY[0x24BEE4218], a1, &v3);
}

void sub_23485EF20()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_23485EF30()
{
  return sub_23485EF54(&qword_25618A198, MEMORY[0x24BEE1BD0]);
}

uint64_t sub_23485EF54(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25618A180);
    v6 = sub_23485EE50();
    v7[0] = MEMORY[0x24BEE17A8];
    v7[1] = v6;
    result = MEMORY[0x2349465EC](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23485EFC0(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2349465EC](&unk_23487D920);
  return MEMORY[0x2349465EC](MEMORY[0x24BEE4230], a1, &v3);
}

uint64_t sub_23485F008(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_23485F010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23485F038(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE08B8], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07F0]);
}

uint64_t sub_23485F024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23485F038(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE1B68], MEMORY[0x24BEE07E0]);
}

uint64_t sub_23485F038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t, uint64_t);

  v23 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v22 - v17;
  v19 = sub_23486F6C8();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_23485F1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_23486FB60();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  v11 = sub_23486F6C8();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v8, a2, v4);
  if ((v11 & 1) == 0)
  {
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
    goto LABEL_5;
  }
  v13 = sub_23486F6C8();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_23485F388()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PersistentIdentifier(319);
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23485F404(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_23485F880(a1);
  return v2;
}

BOOL sub_23485F440(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23485F454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v7;

  v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 8);
  sub_234870484();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  sub_23486F440();
  sub_234818FBC();
  sub_23486F6B0();
  sub_2347EB0B0((uint64_t)v3);
  return sub_2348704B4();
}

uint64_t sub_23485F510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v7;

  v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  sub_23486F440();
  sub_234818FBC();
  sub_23486F6B0();
  return sub_2347EB0B0((uint64_t)v3);
}

uint64_t sub_23485F5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v7;

  v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 8);
  sub_234870484();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  sub_23486F440();
  sub_234818FBC();
  sub_23486F6B0();
  sub_2347EB0B0((uint64_t)v3);
  return sub_2348704B4();
}

unint64_t sub_23485F688()
{
  swift_getObjectType();
  sub_2348702B0();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

unint64_t sub_23485F6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23486F644();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
  MEMORY[0x234945434](v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t sub_23485F86C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2347EB29C(v1 + qword_25618A1A0, a1);
}

uint64_t sub_23485F880(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  _OWORD v21[2];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v4 + 80);
  v9 = *(_QWORD *)(v4 + 88);
  type metadata accessor for KnownKeysDictionary();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_2348609C8(v8, v9);
  memset(v21, 0, sizeof(v21));
  v11 = *(_QWORD *)(sub_234810804(v8, v9) + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 24) = sub_23486288C((uint64_t)v21, v11);
  v12 = sub_2347A67D0();
  if (v12)
  {
    v13 = v12;
    swift_beginAccess();
    v14 = *(_QWORD *)(v13 + 64);
    swift_beginAccess();
    v15 = *(_QWORD *)(v13 + 72);
    v20 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23483A478(v15);
    v16 = *(_QWORD *)(v20 + 16);
    if (v16)
    {
      v19 = v7;
      v17 = (_QWORD *)(v20 + 32);
      swift_bridgeObjectRetain();
      do
      {
        sub_23485FB08(v17, v10, a1, v8, v9);
        v17 += 5;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease_n();
      v7 = v19;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v2[2] = v10;
    swift_retain();
    PersistentModel.persistentModelID.getter(v8, v9, (uint64_t)v7);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    sub_2348107C0((uint64_t)v7, (uint64_t)v2 + qword_25618A1A0);
    return (uint64_t)v2;
  }
  else
  {
    *(_QWORD *)&v21[0] = 0;
    *((_QWORD *)&v21[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23481063C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_23485FB08(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  sub_23482B000((uint64_t)a1, (uint64_t)&v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254258850);
  type metadata accessor for Schema.Attribute();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = v29;
    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
    v13 = v12;
    sub_2347E13EC(v8, a4, a5, (uint64_t)&v27);
    v14 = v11;
    v15 = v13;
LABEL_3:
    sub_234860094((uint64_t)&v27, v14, v15);
    return swift_release();
  }
  sub_23482B000((uint64_t)a1, (uint64_t)&v27);
  type metadata accessor for Schema.Relationship();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v17 = (_QWORD *)v29;
    v18 = *(unsigned __int8 *)(v29 + 168);
    v19 = a1[3];
    v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
    v23 = v22;
    if (v18 == 1)
    {
      v24 = sub_2347E2268((uint64_t)v17, a4, a5);
      if (v24)
      {
        v25 = v24;
        *((_QWORD *)&v28 + 1) = swift_getObjectType();
        *(_QWORD *)&v27 = v25;
      }
      else
      {
        v27 = 0u;
        v28 = 0u;
      }
      v14 = v21;
      v15 = v23;
      goto LABEL_3;
    }
    v26 = sub_2347E2994(v17, a4, a5);
    *((_QWORD *)&v28 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2542574B8);
    *(_QWORD *)&v27 = v26;
    sub_234860094((uint64_t)&v27, v21, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_23485FCFC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_7;
  v8 = result;
  swift_bridgeObjectRetain();
  v9 = sub_2347CD9BC(v8, a2);
  if ((v10 & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
LABEL_7:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v9);
  swift_bridgeObjectRelease();
  result = swift_beginAccess();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    if (v11 < *(_QWORD *)(v12 + 16))
      return sub_2347C5508(v12 + 32 * v11 + 32, (uint64_t)a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_23485FDC4()
{
  uint64_t v0;

  swift_release();
  sub_2347EB0B0(v0 + qword_25618A1A0);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelSnapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ModelSnapshot);
}

BOOL sub_23485FE08(uint64_t *a1, uint64_t *a2)
{
  return sub_23485FE28(*a1, *a2);
}

BOOL sub_23485FE28(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

unint64_t sub_23485FE3C()
{
  return sub_23485F6F8();
}

unint64_t sub_23485FE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23486F644();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
  MEMORY[0x234945434](v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t sub_23485FFD0()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254258790);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_254257A88 = result;
  return result;
}

void sub_234860004()
{
  off_254257A78 = (_UNKNOWN *)MEMORY[0x24BEE4B00];
}

uint64_t sub_234860018()
{
  _QWORD v1[2];

  sub_23486F644();
  strcpy((char *)v1, "KnownKeysMap: ");
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_234860094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  char v8;
  unint64_t v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;

  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_10;
  v7 = sub_2347CD9BC(a2, a3);
  if ((v8 & 1) == 0)
    goto LABEL_10;
  v9 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(_QWORD **)(v4 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 + 24) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v9 & 0x8000000000000000) == 0)
      goto LABEL_5;
  }
  else
  {
    v10 = sub_23486BEDC(v10);
    *(_QWORD *)(v4 + 24) = v10;
    if ((v9 & 0x8000000000000000) == 0)
    {
LABEL_5:
      if (v9 < v10[2])
      {
        sub_23484845C(a1, (uint64_t)&v10[4 * v9 + 4]);
        swift_endAccess();
        return sub_2348484A4(a1);
      }
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_234860200()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KnownKeysDictionary()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for KnownKeysDictionary.KnownKeysMap()
{
  return &type metadata for KnownKeysDictionary.KnownKeysMap;
}

_OWORD *initializeBufferWithCopyOfBuffer for AnyModelSnapshot(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for AnyModelSnapshot()
{
  return swift_unknownObjectRelease();
}

_QWORD *assignWithCopy for AnyModelSnapshot(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *assignWithTake for AnyModelSnapshot(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  *a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyModelSnapshot(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyModelSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyModelSnapshot()
{
  return &type metadata for AnyModelSnapshot;
}

unint64_t sub_2348603A4()
{
  unint64_t result;

  result = qword_25618A228[0];
  if (!qword_25618A228[0])
  {
    result = MEMORY[0x2349465EC](&unk_23487DADC, &type metadata for AnyModelSnapshot);
    atomic_store(result, qword_25618A228);
  }
  return result;
}

unint64_t sub_2348603E8()
{
  return sub_23485FE5C();
}

uint64_t sub_234860408(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2349465EC](&unk_23487DB54);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_234860434(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v8 = a1[4];
  v7 = a1[5];
  v42 = a1[6];
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain();
  v11 = sub_2347CD9BC(v8, v7);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2347D8468();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v8;
    v21[1] = v7;
    *(_QWORD *)(v20[7] + 8 * v11) = v42;
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v26 = a1 + 9;
    while (1)
    {
      v28 = *(v26 - 2);
      v27 = *(v26 - 1);
      v29 = *v26;
      v30 = (_QWORD *)*a3;
      swift_bridgeObjectRetain();
      v31 = sub_2347CD9BC(v28, v27);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v23 = __OFADD__(v33, v34);
      v35 = v33 + v34;
      if (v23)
        break;
      v36 = v32;
      if (v30[3] < v35)
      {
        sub_2347D35A0(v35, 1);
        v31 = sub_2347CD9BC(v28, v27);
        if ((v36 & 1) != (v37 & 1))
          goto LABEL_25;
      }
      if ((v36 & 1) != 0)
        goto LABEL_10;
      v38 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      v39 = (uint64_t *)(v38[6] + 16 * v31);
      *v39 = v28;
      v39[1] = v27;
      *(_QWORD *)(v38[7] + 8 * v31) = v29;
      v40 = v38[2];
      v23 = __OFADD__(v40, 1);
      v41 = v40 + 1;
      if (v23)
        goto LABEL_24;
      v26 += 3;
      v38[2] = v41;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2347D35A0(v14, a2 & 1);
  v16 = sub_2347CD9BC(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258120);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_234870424();
  __break(1u);
LABEL_26:
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486FF74();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

uint64_t sub_2348607B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v15 = result;
  v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v4 = MEMORY[0x24BEE4AF8];
  if (!v3)
    return v4;
  v16 = MEMORY[0x24BEE4AF8];
  result = sub_23480781C(0, v3 & ~(v3 >> 63), 0);
  if (a2 >= v15 && (v3 & 0x8000000000000000) == 0)
  {
    v4 = v16;
    v7 = v15;
    if (*(_QWORD *)(a3 + 16) <= v15)
      v8 = v15;
    else
      v8 = *(_QWORD *)(a3 + 16);
    v9 = (uint64_t *)(a3 + 16 * v15 + 40);
    while (a2 != v7)
    {
      if (v15 < 0)
        goto LABEL_17;
      if (v8 == v7)
        goto LABEL_18;
      v11 = *(v9 - 1);
      v10 = *v9;
      v12 = *(_QWORD *)(v16 + 16);
      v13 = *(_QWORD *)(v16 + 24);
      result = swift_bridgeObjectRetain();
      if (v12 >= v13 >> 1)
        result = sub_23480781C(v13 > 1, v12 + 1, 1);
      *(_QWORD *)(v16 + 16) = v12 + 1;
      v14 = (_QWORD *)(v16 + 24 * v12);
      v14[4] = v11;
      v14[5] = v10;
      v14[6] = v7++;
      v9 += 2;
      if (a2 == v7)
        return v4;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_234860900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = sub_2348607B8(0, *(_QWORD *)(a1 + 16), a1);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254257DC8);
    v2 = sub_234870058();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v5 = v2;
  v3 = (_QWORD *)swift_bridgeObjectRetain();
  sub_234860434(v3, 1, &v5);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2348609C8(uint64_t a1, uint64_t a2)
{
  void *v4;
  os_unfair_lock_s *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  void *v23;
  _QWORD v24[12];

  if (qword_254257A90 != -1)
    swift_once();
  v4 = &unk_254257000;
  v5 = (os_unfair_lock_s *)(qword_254257A88 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  swift_release();
  if (qword_254257A80 != -1)
    swift_once();
  swift_beginAccess();
  v6 = off_254257A78;
  if (*((_QWORD *)off_254257A78 + 2) && (v7 = sub_2347CD944(a1, a2), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(v6[7] + 8 * v7);
    swift_endAccess();
    v10 = (os_unfair_lock_s *)qword_254257A88;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v11 = sub_234810804(a1, a2);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v22 = a2;
      v13 = v11 + 32;
      swift_bridgeObjectRetain();
      v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        sub_2347C63D0(v13, (uint64_t)v24);
        v16 = v24[0];
        v15 = v24[1];
        swift_bridgeObjectRetain();
        sub_2347C640C((uint64_t)v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_23479E084(0, v14[2] + 1, 1, v14);
        v18 = v14[2];
        v17 = v14[3];
        if (v18 >= v17 >> 1)
          v14 = sub_23479E084((_QWORD *)(v17 > 1), v18 + 1, 1, v14);
        v14[2] = v18 + 1;
        v19 = &v14[2 * v18];
        v19[4] = v16;
        v19[5] = v15;
        v13 += 96;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      v4 = &unk_254257000;
      a2 = v22;
    }
    else
    {
      swift_bridgeObjectRelease();
      v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v9 = sub_234860900((uint64_t)v14);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = off_254257A78;
    off_254257A78 = (_UNKNOWN *)0x8000000000000000;
    sub_234807088(v9, a1, a2, isUniquelyReferenced_nonNull_native);
    off_254257A78 = v23;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v10 = (os_unfair_lock_s *)*((_QWORD *)v4 + 337);
  }
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  return v9;
}

uint64_t sub_234860C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 - 8);
}

uint64_t sub_234860C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 - 16);
}

uint64_t dispatch thunk of BackingData.init(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BackingData.persistentModelID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BackingData.persistentModelID.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BackingData.persistentModelID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of BackingData.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BackingData.getValue<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of BackingData.getValue<A, B>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 88))();
}

uint64_t dispatch thunk of BackingData.getValue<A, B>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t dispatch thunk of BackingData.getTransformableValue<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of BackingData.setValue<A>(forKey:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 112))();
}

{
  return (*(uint64_t (**)(void))(a6 + 120))();
}

{
  return (*(uint64_t (**)(void))(a6 + 128))();
}

uint64_t dispatch thunk of BackingData.setValue<A, B>(forKey:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 136))();
}

uint64_t dispatch thunk of BackingData.setValue<A, B>(forKey:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 144))();
}

uint64_t dispatch thunk of BackingData.setTransformableValue<A>(forKey:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t sub_234860D0C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_234860D40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[3];

  v4 = v3;
  v56 = a2;
  v57 = a3;
  v6 = *v4;
  v7 = *a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257498);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257490);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v50 - v18;
  v20 = *(_QWORD *)(v6 + 240);
  v53 = *(_QWORD *)(v6 + 232);
  v54 = a1;
  v21 = sub_2347DFE10((uint64_t)a1, v53, v20);
  v22 = v4;
  v23 = v21;
  v25 = v24;
  if (*((_BYTE *)v22 + qword_25425B038) != 1)
  {
    v33 = v22[2];
    v34 = *(_QWORD *)(v33 + 16);
    v35 = *(_QWORD *)(v34 + 16);
    swift_retain();
    if (!v35)
      goto LABEL_27;
    v36 = sub_2347CD9BC(v23, v25);
    if ((v37 & 1) == 0)
      goto LABEL_27;
    v38 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v36);
    swift_beginAccess();
    if ((v38 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v39 = *(_QWORD *)(v33 + 24);
      if (v38 < *(_QWORD *)(v39 + 16))
      {
        sub_23486D634(v39 + 32 * v38 + 32, (uint64_t)&v59, &qword_254258968);
        swift_release();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v60 + 1))
        {
          sub_234797294(&v59, v61);
          v40 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v7 + 8);
          swift_dynamicCast();
          PersistentModel.persistentModelID.getter(v40, v56, v57);
          return swift_unknownObjectRelease();
        }
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v51 = v22;
  v52 = v6;
  v56 = v7;
  v26 = v22[2];
  v27 = *(_QWORD *)(v26 + 16);
  v28 = *(_QWORD *)(v27 + 16);
  swift_retain();
  if (v28)
  {
    v29 = sub_2347CD9BC(v23, v25);
    if ((v30 & 1) != 0)
    {
      v31 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v29);
      swift_beginAccess();
      if ((v31 & 0x8000000000000000) == 0)
      {
        v32 = *(_QWORD *)(v26 + 24);
        if (v31 < *(_QWORD *)(v32 + 16))
        {
          sub_23486D634(v32 + 32 * v31 + 32, (uint64_t)v61, &qword_254258968);
          goto LABEL_14;
        }
        goto LABEL_26;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      v59 = 0u;
      v60 = 0u;
      swift_release();
      swift_bridgeObjectRelease();
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
  memset(v61, 0, 32);
LABEL_14:
  swift_bridgeObjectRelease();
  swift_release();
  sub_23486D634((uint64_t)v61, (uint64_t)&v59, &qword_254258968);
  if (!*((_QWORD *)&v60 + 1))
  {
    sub_23486D6D4((uint64_t)&v59, &qword_254258968);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_18:
    sub_23486D6D4((uint64_t)v12, &qword_254257498);
    sub_23486D634((uint64_t)v61, (uint64_t)&v59, &qword_254258968);
    if (*((_QWORD *)&v60 + 1))
    {
      v44 = type metadata accessor for PersistentIdentifier(0);
      v45 = (uint64_t)v55;
      v46 = swift_dynamicCast();
      v47 = *(_QWORD *)(v44 - 8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v45, v46 ^ 1u, 1, v44);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v44) != 1)
      {
        sub_23486D6D4((uint64_t)v61, &qword_254258968);
        v43 = v45;
        return sub_2348107C0(v43, v57);
      }
LABEL_30:
      sub_23486D6D4(v45, &qword_2542576E0);
      *(_QWORD *)&v59 = 0;
      *((_QWORD *)&v59 + 1) = 0xE000000000000000;
      sub_23486FEA8();
      sub_23486F7DC();
      v58 = v54;
      sub_234870520();
      sub_2348702BC();
      sub_23486F7DC();
      v49 = v51;
      v58 = (uint64_t *)v51[2];
      type metadata accessor for KnownKeysDictionary();
      sub_23486FF74();
      sub_23486F7DC();
      v58 = v49;
      sub_2348702BC();
      result = sub_234870004();
      __break(1u);
      return result;
    }
LABEL_29:
    sub_23486D6D4((uint64_t)&v59, &qword_254258968);
    v48 = type metadata accessor for PersistentIdentifier(0);
    v45 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v55, 1, 1, v48);
    goto LABEL_30;
  }
  v42 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, v42 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    goto LABEL_18;
  sub_23486D6D4((uint64_t)v61, &qword_254258968);
  sub_2348107C0((uint64_t)v12, (uint64_t)v19);
  sub_2348107C0((uint64_t)v19, (uint64_t)v17);
  swift_unknownObjectRelease();
  v43 = (uint64_t)v17;
  return sub_2348107C0(v43, v57);
}

uint64_t sub_234861318(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t result;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34[3];
  _QWORD *v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];

  v32 = a3;
  v5 = *v3;
  v6 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8);
  v30 = sub_23486FCBC();
  v29 = *(_QWORD *)(v30 - 8);
  v7 = MEMORY[0x24BDAC7A8](v30);
  v9 = (char *)&v29 - v8;
  v10 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v29 - v11;
  v14 = *(_QWORD *)(v5 + 232);
  v13 = *(_QWORD *)(v5 + 240);
  v31 = v5;
  v15 = sub_2347DFE10((uint64_t)a1, v14, v13);
  v17 = v16;
  v33 = v3;
  v18 = (_QWORD *)v3[2];
  v19 = v18[2];
  if (!*(_QWORD *)(v19 + 16))
  {
    swift_retain();
    goto LABEL_10;
  }
  v20 = v15;
  swift_retain();
  v21 = sub_2347CD9BC(v20, v17);
  if ((v22 & 1) == 0)
  {
LABEL_10:
    v36 = 0u;
    v37 = 0u;
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_11;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
  swift_beginAccess();
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v24 = v18[3];
  if (v23 >= *(_QWORD *)(v24 + 16))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v9, 1, 1, v6);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    sub_234785C80((uint64_t)v38, (uint64_t)&v36);
    *(_QWORD *)&v34[0] = 0;
    *((_QWORD *)&v34[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    v35 = a1;
    sub_234870520();
    sub_2348702BC();
    sub_23486F7DC();
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    sub_23486FF74();
    sub_23486F7DC();
    v35 = v18;
    sub_2348702BC();
    goto LABEL_23;
  }
  sub_23486D634(v24 + 32 * v23 + 32, (uint64_t)&v36, &qword_254258968);
  swift_bridgeObjectRelease();
  swift_release();
  if (!*((_QWORD *)&v37 + 1))
  {
LABEL_11:
    sub_23486D6D4((uint64_t)&v36, &qword_254258968);
    return MEMORY[0x24BEE4AF8];
  }
  sub_234797294(&v36, v38);
  v18 = v33;
  if (*((_BYTE *)v33 + qword_25425B038) != 1)
  {
    sub_234785C80((uint64_t)v38, (uint64_t)&v36);
    v28 = swift_dynamicCast();
    v24 = *(_QWORD *)(v10 + 56);
    if (v28)
    {
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v9, 0, 1, v6);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v6);
      v25 = sub_234861E44(1, v6, v32);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v6);
LABEL_17:
      v26 = (char *)v38;
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  sub_234785C80((uint64_t)v38, (uint64_t)&v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542575A0);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v38);
    v25 = *(_QWORD *)&v34[0];
    *(_QWORD *)&v36 = *(_QWORD *)&v34[0];
    sub_23486D678((__int128 *)((char *)v34 + 8), (uint64_t)&v36 + 8);
    *(_QWORD *)&v34[0] = v25;
    sub_23486D678((__int128 *)((char *)&v36 + 8), (uint64_t)v34 + 8);
    v26 = (char *)v34 + 8;
LABEL_18:
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v26);
    return v25;
  }
  memset(v34, 0, sizeof(v34));
  sub_23486D6D4((uint64_t)v34, &qword_2542575A8);
  sub_234785C80((uint64_t)v38, (uint64_t)&v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254257700);
  if (swift_dynamicCast())
  {
    v25 = *(_QWORD *)&v34[0];
    goto LABEL_17;
  }
  *(_QWORD *)&v36 = 0;
  *((_QWORD *)&v36 + 1) = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486F7DC();
  sub_23486F7DC();
  sub_23486FF74();
  sub_23486F7DC();
  *(_QWORD *)&v34[0] = v18;
  sub_2348702BC();
LABEL_23:
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_2348618A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];

  v4 = v3;
  v57 = a3;
  v6 = *v3;
  v7 = *a1;
  v53 = a2;
  v54 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PersistentIdentifier(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v51 = (uint64_t)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257498);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257490);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v50 = (uint64_t)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v49 - v19;
  v22 = *(_QWORD *)(v6 + 232);
  v21 = *(_QWORD *)(v6 + 240);
  v49[1] = v6;
  v49[0] = a1;
  v23 = sub_2347DFE10((uint64_t)a1, v22, v21);
  v25 = v24;
  v26 = v4;
  v27 = (_BYTE *)v4[2];
  v28 = *((_QWORD *)v27 + 2);
  if (!*(_QWORD *)(v28 + 16))
  {
    swift_retain();
    goto LABEL_10;
  }
  v29 = v23;
  swift_retain();
  v30 = sub_2347CD9BC(v29, v25);
  if ((v31 & 1) == 0)
  {
LABEL_10:
    v59 = 0u;
    v60 = 0u;
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_11;
  }
  v32 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v30);
  swift_beginAccess();
  if ((v32 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v33 = *((_QWORD *)v27 + 3);
  if (v32 >= *(_QWORD *)(v33 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_23486D634(v33 + 32 * v32 + 32, (uint64_t)&v59, &qword_254258968);
  swift_bridgeObjectRelease();
  swift_release();
  if (*((_QWORD *)&v60 + 1))
  {
    sub_234797294(&v59, v61);
    if (v26[qword_25425B038] != 1)
    {
      sub_234785C80((uint64_t)v61, (uint64_t)&v59);
      v43 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v54 + 8) + 16);
      swift_dynamicCast();
      v44 = v57;
      PersistentModel.persistentModelID.getter(v43, v53, v57);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v61);
      v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
      v40 = v44;
      goto LABEL_15;
    }
    v27 = v26;
    sub_234785C80((uint64_t)v61, (uint64_t)&v59);
    v34 = swift_dynamicCast();
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    if (v34)
    {
      v35(v14, 0, 1, v15);
      __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v61);
      sub_2348107C0((uint64_t)v14, (uint64_t)v20);
      v36 = v50;
      sub_2348107C0((uint64_t)v20, v50);
      swift_unknownObjectRelease();
      v37 = v36;
      v38 = v57;
      sub_2348107C0(v37, v57);
      v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
      v40 = v38;
LABEL_15:
      v41 = 0;
      return v39(v40, v41, 1, v56);
    }
    v35(v14, 1, 1, v15);
    sub_23486D6D4((uint64_t)v14, &qword_254257498);
    sub_234785C80((uint64_t)v61, (uint64_t)&v59);
    v29 = (uint64_t)v52;
    v15 = v56;
    v45 = swift_dynamicCast();
    v26 = *(_BYTE **)(v55 + 56);
    if (v45)
    {
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v26)(v29, 0, 1, v15);
      __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v61);
      v46 = v51;
      sub_2348107C0(v29, v51);
      v47 = v46;
      v48 = v57;
      sub_2348107C0(v47, v57);
      return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v26)(v48, 0, 1, v15);
    }
LABEL_20:
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v26)(v29, 1, 1, v15);
    sub_23486D6D4(v29, &qword_2542576E0);
    *(_QWORD *)&v59 = 0;
    *((_QWORD *)&v59 + 1) = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    v58 = (_BYTE *)v49[0];
    sub_234870520();
    sub_2348702BC();
    sub_23486F7DC();
    v58 = (_BYTE *)*((_QWORD *)v27 + 2);
    type metadata accessor for KnownKeysDictionary();
    sub_23486FF74();
    sub_23486F7DC();
    v58 = v27;
    sub_2348702BC();
    result = sub_234870004();
    __break(1u);
    return result;
  }
LABEL_11:
  sub_23486D6D4((uint64_t)&v59, &qword_254258968);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
  v40 = v57;
  v41 = 1;
  return v39(v40, v41, 1, v56);
}

unint64_t sub_234861E44(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  __int128 v35;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v38[4];

  v33 = a1;
  v5 = sub_23486F5D8();
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PersistentIdentifier(0);
  v28 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v29 = (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - v11;
  sub_234862978(a2, a3, (uint64_t *)&v35);
  if (!AssociatedTypeWitness)
    return MEMORY[0x24BEE4AF8];
  sub_23486D678(&v35, (uint64_t)v38);
  v13 = __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *))(v15 + 16))((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0Tm_0((uint64_t *)&v35);
  sub_23486F83C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v35, AssociatedTypeWitness);
  sub_23486FCE0();
  if (v34)
  {
    v16 = swift_getAssociatedTypeWitness();
    v17 = swift_getAssociatedConformanceWitness();
    v30 = MEMORY[0x24BEE4AF8];
    do
    {
      if ((v33 & 1) != 0
        || (PersistentModel.persistentModelID.getter(v16, v17, (uint64_t)v12),
            v18 = *(_BYTE *)(*(_QWORD *)&v12[*(int *)(v8 + 20)] + 32),
            sub_2347EB0B0((uint64_t)v12),
            (v18 & 1) == 0))
      {
        PersistentModel.persistentModelID.getter(v16, v17, v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v22 = v30;
        else
          v22 = sub_23479EAE4(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
        v24 = *(_QWORD *)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        if (v24 >= v23 >> 1)
          v22 = sub_23479EAE4(v23 > 1, v24 + 1, 1, v22);
        *(_QWORD *)(v22 + 16) = v24 + 1;
        v25 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        v30 = v22;
        sub_2348107C0(v29, v22 + v25 + *(_QWORD *)(v28 + 72) * v24);
        swift_unknownObjectRelease();
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v35, AssociatedTypeWitness);
      }
      else
      {
        sub_23486F5CC();
        v19 = sub_23486F5C0();
        v20 = sub_23486FBC0();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v21 = 0;
          _os_log_impl(&dword_234780000, v19, v20, "Illegal attempt to map a relationship containing temporary objects to its identifiers.", v21, 2u);
          MEMORY[0x2349466D0](v21, -1, -1);
        }

        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v35, AssociatedTypeWitness);
      }
      sub_23486FCE0();
    }
    while (v34);
  }
  else
  {
    v30 = MEMORY[0x24BEE4AF8];
  }
  __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)&v35);
  __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v38);
  return v30;
}

uint64_t sub_2348622A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_234862798(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_234869F74);
}

uint64_t sub_2348622AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_234865D54(a1, a2);
  return v4;
}

uint64_t sub_2348622F8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  char v14;
  uint64_t v15;

  v2 = v1;
  v4 = sub_23486F5D8();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = qword_25425B038;
  if ((a1 & 1) != 0)
  {
    if ((*(_BYTE *)(v2 + qword_25425B038) & 1) != 0)
      return result;
    v10 = *(_QWORD *)(v2 + qword_25425B028);
    if (!*(_QWORD *)(v10 + 16))
    {
      result = sub_234870004();
      __break(1u);
      return result;
    }
    if ((*(_DWORD *)(v10 + 24) & 0x3F) == 1)
    {
      sub_23486F5CC();
      v11 = sub_23486F5C0();
      v12 = sub_23486FBC0();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_234780000, v11, v12, "Mutated models cannot turn their relationships in to futures.", v13, 2u);
        MEMORY[0x2349466D0](v13, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    result = sub_234863860();
    v14 = 1;
  }
  else
  {
    if (!*(_BYTE *)(v2 + qword_25425B038))
      return result;
    result = sub_234864BB4();
    v14 = 0;
  }
  *(_BYTE *)(v2 + v9) = v14;
  return result;
}

uint64_t sub_2348624DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = swift_allocObject();
  sub_23486B45C(v3, a2);
  return v3;
}

uint64_t sub_234862518()
{
  return swift_allocObject();
}

uint64_t sub_234862528(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PersistentIdentifierImplementation(0);
  swift_allocObject();
  v5 = sub_234854A40();
  *(_QWORD *)&v4[*(int *)(v2 + 20)] = v5;
  v6 = v5 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  v7 = sub_23486F440();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, v6, v7);
  v8 = swift_allocObject();
  sub_234865D54(a1, (uint64_t)v4);
  return v8;
}

void sub_23486261C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v13[4];

  sub_234862978(a3, a4, (uint64_t *)&v10);
  if (AssociatedTypeWitness)
  {
    sub_23486D678(&v10, (uint64_t)v13);
    v5 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    MEMORY[0x24BDAC7A8](v5);
    (*(void (**)(char *))(v7 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_0Tm_0((uint64_t *)&v10);
    sub_23486F83C();
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v10, AssociatedTypeWitness);
      sub_23486FCE0();
      if (!v9)
        break;
      a1(v9);
      swift_unknownObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)&v10);
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v13);
  }
}

uint64_t sub_23486278C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_234862798(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23486957C);
}

uint64_t sub_234862798(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = swift_allocObject();
  a4(v7, a2, a3);
  return v7;
}

uint64_t sub_2348627EC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  _QWORD v4[4];

  (*(void (**)(_QWORD *__return_ptr))(a2 + 56))(v4);
  type metadata accessor for _ModelMetadata();
  if (swift_dynamicCast())
    return v3;
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_23486288C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_23486FFF8();
    __break(1u);
  }
  else
  {
    v2 = a2;
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
      v4 = sub_23486F938();
      *(_QWORD *)(v4 + 16) = v2;
      v5 = v4 + 32;
      do
      {
        sub_23486D634(a1, v5, &qword_254258968);
        v5 += 32;
        --v2;
      }
      while (v2);
    }
    else
    {
      v4 = MEMORY[0x24BEE4AF8];
    }
    sub_23486D6D4(a1, &qword_254258968);
    return v4;
  }
  return result;
}

double sub_234862978@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  double result;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32[2];

  v4 = v3;
  v31[1] = a2;
  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v31 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v31 - v15;
  v32[0] = v14;
  swift_getMetatypeMetadata();
  v17 = sub_2347DFC94((uint64_t)v32);
  v32[0] = a1;
  if (swift_conformsToProtocol2())
    v18 = a1;
  else
    v18 = 0;
  v19 = (uint64_t *)a1;
  while (v18)
  {
    sub_2347E85B4(v18, v32);
    v19 = (uint64_t *)v32[0];
    if (swift_conformsToProtocol2())
      v18 = (uint64_t)v19;
    else
      v18 = 0;
  }
  v20 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542580B0);
  v21 = *v19;
  if ((unint64_t)*v19 <= 0x7FF && (unint64_t)(v21 - 512) >= 3 && v21)
    v22 = 0;
  else
    v22 = sub_23486F524();
  v23 = *v20;
  if ((unint64_t)*v20 > 0x7FF || ((unint64_t)(v23 - 512) >= 3 ? (v24 = v23 == 0) : (v24 = 1), v24))
  {
    v25 = sub_23486F524();
    if (v22)
    {
      if (!v25 || v25 != v22)
        goto LABEL_27;
    }
    else if (v25)
    {
LABEL_27:
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v4, a1);
      v32[0] = 0;
      v32[1] = 0xE000000000000000;
      a3 = v32;
      sub_23486FEA8();
      sub_23486F7DC();
      sub_2348702BC();
      sub_234870004();
      __break(1u);
      goto LABEL_28;
    }
  }
  else if (v22)
  {
    goto LABEL_27;
  }
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if ((v17 & 1) == 0)
  {
    v26(v13, v4, a1);
    swift_getAssociatedTypeWitness();
    v30 = sub_23486F98C();
    a3[3] = v30;
    a3[4] = MEMORY[0x2349465EC](MEMORY[0x24BEE12C8], v30);
    swift_dynamicCast();
    return result;
  }
  v26(v16, v4, a1);
  swift_getAssociatedTypeWitness();
  v27 = sub_23486F98C();
  sub_23486FCBC();
  swift_dynamicCast();
  v28 = v32[0];
  if (v32[0])
  {
    a3[3] = v27;
    a3[4] = MEMORY[0x2349465EC](MEMORY[0x24BEE12C8], v27);
    *a3 = v28;
    return result;
  }
LABEL_28:
  a3[4] = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *((_OWORD *)a3 + 1) = 0u;
  return result;
}

uint64_t sub_234862CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for PersistentIdentifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_234862D08()
{
  sub_234870004();
  __break(1u);
}

void (*sub_234862D60())()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  v1 = malloc(*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64));
  v2 = type metadata accessor for PersistentIdentifier(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return sub_234862DC4;
}

void sub_234862DC4()
{
  sub_234870004();
  __break(1u);
}

void sub_234862E1C()
{
  sub_234870004();
  __break(1u);
}

uint64_t sub_234862E74()
{
  return swift_allocObject();
}

void sub_234862E84()
{
  sub_234870004();
  __break(1u);
}

void sub_234862EDC()
{
  sub_234870004();
  __break(1u);
}

void sub_234862F34()
{
  sub_234870004();
  __break(1u);
}

void sub_234862F8C()
{
  sub_234870004();
  __break(1u);
}

void sub_234862FE4()
{
  sub_234870004();
  __break(1u);
}

void sub_23486303C()
{
  sub_234870004();
  __break(1u);
}

void sub_234863094()
{
  sub_234870004();
  __break(1u);
}

void sub_2348630EC()
{
  sub_234870004();
  __break(1u);
}

void sub_234863144()
{
  sub_234870004();
  __break(1u);
}

void sub_23486319C()
{
  sub_234870004();
  __break(1u);
}

void sub_2348631F4()
{
  sub_234870004();
  __break(1u);
}

void sub_23486324C()
{
  sub_234870004();
  __break(1u);
}

uint64_t type metadata accessor for _InitialBackingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _InitialBackingData);
}

void sub_2348632B4()
{
  unint64_t v0;

  sub_234869478();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_23486333C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 128))();
  *a1 = result;
  return result;
}

uint64_t sub_234863364()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

uint64_t sub_23486338C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 104))();
}

void (*sub_2348633B4(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(_QWORD **)v1 + 112))();
  return sub_234863404;
}

void sub_234863404(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_234863430()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 120))();
}

uint64_t sub_234863458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)v3 + 136))(a1, a3);
}

uint64_t sub_234863484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)v3 + 152))(a1, a3);
}

uint64_t sub_2348634B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)v3 + 144))(a1, a3);
}

uint64_t sub_2348634DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(**(_QWORD **)v4 + 168))(a1, a3, a4);
}

uint64_t sub_23486350C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)v5 + 176))(a1, a3, a4, a5);
}

uint64_t sub_234863540()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 160))();
}

uint64_t sub_234863568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(**(_QWORD **)v4 + 184))(a1, a2, a4);
}

uint64_t sub_234863594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(**(_QWORD **)v4 + 200))(a1, a2, a4);
}

uint64_t sub_2348635C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(**(_QWORD **)v4 + 192))(a1, a2, a4);
}

uint64_t sub_2348635EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)v5 + 208))(a1, a2, a4, a5);
}

uint64_t sub_23486361C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)v6 + 216))(a1, a2, a4, a5, a6);
}

uint64_t sub_234863650()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 224))();
}

uint64_t sub_234863678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_2561914F8;
  swift_beginAccess();
  return sub_23486D634(v3, a1, &qword_2542576E0);
}

uint64_t sub_2348636D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_2561914F8;
  swift_beginAccess();
  sub_23486D220(a1, v3);
  return swift_endAccess();
}

void (*sub_234863728(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = v1 + qword_2561914F8;
  swift_beginAccess();
  sub_23486D634(v6, (uint64_t)v5, &qword_2542576E0);
  return sub_2348637D0;
}

void sub_2348637D0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_23486D634(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, &qword_2542576E0);
    sub_2348636D0((uint64_t)v3);
    sub_23486D6D4((uint64_t)v4, &qword_2542576E0);
  }
  else
  {
    sub_2348636D0(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_234863854@<X0>(_QWORD *a1@<X8>)
{
  return sub_234869EE4(&qword_25425B028, a1);
}

uint64_t sub_234863860()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  const char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t ObjectType;
  uint64_t v74;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t v76;
  unint64_t v77;
  char v78;
  unint64_t v79;
  _QWORD *v80;
  char v81;
  uint64_t v82;
  char *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  unint64_t v111;
  _QWORD *v112;
  char isUniquelyReferenced_nonNull_native;
  char *v114;
  __int128 v116;
  __int128 v117;
  unint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  int64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  char v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  char *v156;
  unint64_t v157;

  v1 = v0;
  v2 = *v0;
  v3 = type metadata accessor for PersistentIdentifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v119 = (uint64_t)&v116 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v131 = (char *)&v116 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v137 = (char *)&v116 - v12;
  v130 = sub_23486F5D8();
  v129 = *(_QWORD *)(v130 - 8);
  v13 = MEMORY[0x24BDAC7A8](v130);
  v15 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v123 = (char *)&v116 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v145 = (char *)&v116 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v116 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(v2 + 232);
  v26 = *(_QWORD *)(v2 + 240);
  v124 = v2;
  v141 = v25;
  v140 = v26;
  v126 = sub_2347A67D0();
  if (!v126)
    goto LABEL_100;
  v27 = (uint64_t)v1 + qword_2561914F8;
  swift_beginAccess();
  sub_23486D634(v27, (uint64_t)v24, &qword_2542576E0);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v139 = v3;
  LODWORD(v27) = v28(v24, 1, v3);
  sub_23486D6D4((uint64_t)v24, &qword_2542576E0);
  v29 = "Full Future BackingData cannot change the persistentModelID";
  v146 = v4;
  v142 = v7;
  v125 = v15;
  if ((_DWORD)v27 == 1)
  {
    sub_23486F5CC();
    swift_retain_n();
    v30 = sub_23486F5C0();
    v31 = sub_23486FBC0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v153 = v33;
      *(_DWORD *)v32 = 136315138;
      *(_QWORD *)&v151 = v1;
      swift_retain();
      v34 = sub_23486F77C();
      *(_QWORD *)&v151 = sub_23478470C(v34, v35, &v153);
      sub_23486FCEC();
      swift_release_n();
      swift_bridgeObjectRelease();
      v36 = v31;
      v29 = "Full Future BackingData cannot change the persistentModelID";
      _os_log_impl(&dword_234780000, v30, v36, "This backing data has no persistent identifier? %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2349466D0](v33, -1, -1);
      MEMORY[0x2349466D0](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v129 + 8))(v21, v130);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v129 + 8))(v21, v130);
      v29 = "Full Future BackingData cannot change the persistentModelID";
    }
  }
  v152 = 0;
  v37 = *(_QWORD *)(*(_QWORD *)((char *)v1 + qword_25425B028) + 16);
  if (v37)
  {
    v152 = *(_BYTE *)(v37 + 48);
  }
  else
  {
    sub_23486F5CC();
    v38 = sub_23486F5C0();
    v39 = sub_23486FBC0();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_234780000, v38, v39, "Illegal attempt to flip relationships to IDs when not bound to a context.", v40, 2u);
      MEMORY[0x2349466D0](v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v129 + 8))(v145, v130);
  }
  v41 = v126;
  swift_beginAccess();
  v42 = *(_QWORD *)(v41 + 88);
  v43 = (uint64_t)v137;
  if ((v42 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23486FDC4();
    type metadata accessor for Schema.Relationship();
    sub_23486D5EC();
    sub_23486FA88();
    v42 = v153;
    v136 = v154;
    v45 = v155;
    v46 = (int64_t)v156;
    v47 = v157;
  }
  else
  {
    v48 = -1 << *(_BYTE *)(v42 + 32);
    v49 = *(_QWORD *)(v42 + 56);
    v136 = v42 + 56;
    v50 = ~v48;
    v51 = -v48;
    if (v51 < 64)
      v52 = ~(-1 << v51);
    else
      v52 = -1;
    v47 = v52 & v49;
    swift_bridgeObjectRetain();
    v45 = v50;
    v46 = 0;
  }
  v133 = v42 & 0x7FFFFFFFFFFFFFFFLL;
  v120 = v45;
  v134 = (unint64_t)(v45 + 64) >> 6;
  v118 = &v148;
  v138 = MEMORY[0x24BEE4AD8] + 8;
  v122 = "iner-identifiers";
  v121 = 0x8000000234870F70;
  *(_QWORD *)&v44 = 136315394;
  v117 = v44;
  *(_QWORD *)&v44 = *((_QWORD *)v29 + 406);
  v116 = v44;
  v132 = MEMORY[0x24BEE4AD0] + 8;
  v135 = v42;
  if ((v42 & 0x8000000000000000) == 0)
    goto LABEL_23;
LABEL_18:
  v53 = sub_23486FE24();
  if (v53)
  {
    *(_QWORD *)&v149 = v53;
    type metadata accessor for Schema.Relationship();
    swift_unknownObjectRetain();
    v43 = (uint64_t)v137;
    swift_dynamicCast();
    v54 = v151;
    swift_unknownObjectRelease();
    v55 = v46;
    v56 = v47;
    if (v54)
    {
      while (1)
      {
        v144 = v56;
        v145 = (char *)v55;
        swift_beginAccess();
        v143 = v54;
        if (!*(_QWORD *)(v54 + 48))
          goto LABEL_95;
        v60 = swift_retain();
        v61 = sub_2347DFE10(v60, v141, v140);
        v63 = v62;
        swift_release();
        v64 = v1[2];
        v65 = *(_QWORD *)(v64 + 16);
        v66 = *(_QWORD *)(v65 + 16);
        swift_retain();
        v67 = (uint64_t)v142;
        if (!v66)
          goto LABEL_42;
        swift_bridgeObjectRetain();
        v68 = sub_2347CD9BC(v61, v63);
        if ((v69 & 1) == 0)
          break;
        v70 = *(_QWORD *)(*(_QWORD *)(v65 + 56) + 8 * v68);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if ((v70 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          swift_retain();
LABEL_98:
          v147 = 0;
          v148 = 0xE000000000000000;
          sub_23486FEA8();
          swift_bridgeObjectRelease();
          v147 = 0xD000000000000029;
          v148 = 0x8000000234876D90;
          sub_23486F7DC();
          swift_bridgeObjectRelease();
          while (1)
          {
            sub_234870004();
            __break(1u);
LABEL_100:
            v153 = 0;
            v154 = 0xE000000000000000;
            sub_23486FEA8();
            swift_bridgeObjectRelease();
            v153 = 0xD00000000000001ALL;
            v154 = 0x8000000234877230;
            sub_23487055C();
            sub_23486F7DC();
            swift_bridgeObjectRelease();
          }
        }
        v71 = *(_QWORD *)(v64 + 24);
        if (v70 >= *(_QWORD *)(v71 + 16))
          goto LABEL_91;
        sub_23486D634(v71 + 32 * v70 + 32, (uint64_t)&v149, &qword_254258968);
LABEL_43:
        swift_release();
        if (!*((_QWORD *)&v150 + 1))
        {
          swift_release();
          swift_bridgeObjectRelease();
          sub_23486D6D4((uint64_t)&v149, &qword_254258968);
LABEL_22:
          v46 = (int64_t)v145;
          v47 = v144;
          if (v42 < 0)
            goto LABEL_18;
          goto LABEL_23;
        }
        sub_234797294(&v149, &v151);
        sub_234785C80((uint64_t)&v151, (uint64_t)&v149);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
        if (!swift_dynamicCast())
        {
          sub_234785C80((uint64_t)&v151, (uint64_t)&v149);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542574B8);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v94 = v147;
            v95 = *(_QWORD *)(v147 + 16);
            if (v95)
            {
              v127 = v61;
              v128 = v63;
              v96 = v1;
              v147 = MEMORY[0x24BEE4AF8];
              sub_23480777C(0, v95, 0);
              v97 = 0;
              v98 = v147;
              do
              {
                v149 = *(_OWORD *)(v94 + 16 * v97 + 32);
                swift_unknownObjectRetain();
                sub_234868738((uint64_t *)&v149, &v152, v96, v67);
                swift_unknownObjectRelease();
                v147 = v98;
                v100 = *(_QWORD *)(v98 + 16);
                v99 = *(_QWORD *)(v98 + 24);
                if (v100 >= v99 >> 1)
                {
                  sub_23480777C(v99 > 1, v100 + 1, 1);
                  v98 = v147;
                }
                ++v97;
                *(_QWORD *)(v98 + 16) = v100 + 1;
                sub_2348107C0(v67, v98+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(_QWORD *)(v146 + 72) * v100);
              }
              while (v95 != v97);
              swift_bridgeObjectRelease();
              v1 = v96;
              v43 = (uint64_t)v137;
              v63 = v128;
              v61 = v127;
            }
            else
            {
              swift_bridgeObjectRelease();
              v98 = MEMORY[0x24BEE4AF8];
            }
            v107 = v1[2];
            *((_QWORD *)&v150 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_254257700);
            *(_QWORD *)&v149 = v98;
            v108 = *(_QWORD *)(v107 + 16);
            v42 = v135;
            if (!*(_QWORD *)(v108 + 16))
              goto LABEL_96;
            swift_bridgeObjectRetain();
            swift_retain();
            v109 = sub_2347CD9BC(v61, v63);
            if ((v110 & 1) == 0)
              goto LABEL_97;
            v111 = *(_QWORD *)(*(_QWORD *)(v108 + 56) + 8 * v109);
            swift_bridgeObjectRelease_n();
            swift_beginAccess();
            v112 = *(_QWORD **)(v107 + 24);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v107 + 24) = v112;
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              if ((v111 & 0x8000000000000000) != 0)
                goto LABEL_87;
            }
            else
            {
              v112 = sub_23486BEDC(v112);
              *(_QWORD *)(v107 + 24) = v112;
              if ((v111 & 0x8000000000000000) != 0)
              {
LABEL_87:
                __break(1u);
                goto LABEL_88;
              }
            }
            if (v111 >= v112[2])
              goto LABEL_94;
            sub_23484845C((uint64_t)&v149, (uint64_t)&v112[4 * v111 + 4]);
            swift_endAccess();
            sub_23486D6D4((uint64_t)&v149, &qword_254258968);
            swift_release();
            swift_release();
          }
          else
          {
            swift_release();
            swift_bridgeObjectRelease();
          }
          __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)&v151);
          goto LABEL_22;
        }
        v72 = v148;
        ObjectType = swift_getObjectType();
        PersistentModel.persistentModelID.getter(ObjectType, v72, v43);
        v74 = v1[2];
        *((_QWORD *)&v150 + 1) = v139;
        boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0((uint64_t *)&v149);
        sub_2347EB29C(v43, (uint64_t)boxed_opaque_existential_0Tm_0);
        v76 = *(_QWORD *)(v74 + 16);
        if (!*(_QWORD *)(v76 + 16))
          goto LABEL_96;
        swift_bridgeObjectRetain();
        swift_retain();
        v77 = sub_2347CD9BC(v61, v63);
        if ((v78 & 1) == 0)
        {
LABEL_97:
          swift_bridgeObjectRelease();
          goto LABEL_98;
        }
        v79 = *(_QWORD *)(*(_QWORD *)(v76 + 56) + 8 * v77);
        swift_bridgeObjectRelease_n();
        swift_beginAccess();
        v80 = *(_QWORD **)(v74 + 24);
        v81 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v74 + 24) = v80;
        if ((v81 & 1) == 0)
        {
          v80 = sub_23486BEDC(v80);
          *(_QWORD *)(v74 + 24) = v80;
        }
        v82 = (uint64_t)v131;
        if ((v79 & 0x8000000000000000) != 0)
          goto LABEL_90;
        if (v79 >= v80[2])
          goto LABEL_92;
        sub_23484845C((uint64_t)&v149, (uint64_t)&v80[4 * v79 + 4]);
        swift_endAccess();
        sub_23486D6D4((uint64_t)&v149, &qword_254258968);
        swift_release();
        if ((*(_BYTE *)(*(_QWORD *)(v43 + *(int *)(v139 + 20)) + 32) & 1) != 0)
        {
          if ((v152 & 1) != 0)
          {
            v83 = v125;
            sub_23486F5CC();
            sub_2347EB29C(v43, v82);
            swift_retain_n();
            v84 = sub_23486F5C0();
            v85 = sub_23486FBC0();
            if (os_log_type_enabled(v84, v85))
            {
              v86 = v82;
              v87 = swift_slowAlloc();
              v128 = swift_slowAlloc();
              *(_QWORD *)&v149 = v128;
              *(_DWORD *)v87 = v117;
              sub_2347EB29C(v86, v119);
              v88 = sub_23486F77C();
              v147 = sub_23478470C(v88, v89, (uint64_t *)&v149);
              sub_23486FCEC();
              swift_bridgeObjectRelease();
              v90 = v86;
              v43 = (uint64_t)v137;
              sub_2347EB0B0(v90);
              *(_WORD *)(v87 + 12) = 2080;
              v147 = (uint64_t)v1;
              swift_retain();
              v91 = sub_23486F77C();
              v147 = sub_23478470C(v91, v92, (uint64_t *)&v149);
              sub_23486FCEC();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_234780000, v84, v85, "Illegal attempt to flip a temporary object to a future %s: %s", (uint8_t *)v87, 0x16u);
              v93 = v128;
              swift_arrayDestroy();
              MEMORY[0x2349466D0](v93, -1, -1);
              MEMORY[0x2349466D0](v87, -1, -1);
              swift_release();
              swift_unknownObjectRelease();

              (*(void (**)(char *, uint64_t))(v129 + 8))(v125, v130);
              goto LABEL_78;
            }
            swift_release_n();
            swift_release();
            swift_unknownObjectRelease();

            sub_2347EB0B0(v82);
          }
          else
          {
            v83 = v123;
            sub_23486F5CC();
            swift_retain_n();
            v101 = sub_23486F5C0();
            v102 = sub_23486FBC0();
            if (os_log_type_enabled(v101, v102))
            {
              v103 = swift_slowAlloc();
              v104 = swift_slowAlloc();
              *(_QWORD *)&v149 = v104;
              *(_DWORD *)v103 = v116;
              v147 = (uint64_t)v1;
              swift_retain();
              v105 = sub_23486F77C();
              *(_QWORD *)(v103 + 4) = sub_23478470C(v105, v106, (uint64_t *)&v149);
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_234780000, v101, v102, "This backing data has retained a temporary object ID beyond the mutations to the context %s", (uint8_t *)v103, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2349466D0](v104, -1, -1);
              MEMORY[0x2349466D0](v103, -1, -1);
            }
            else
            {
              swift_release_n();
            }
            swift_release();
            swift_unknownObjectRelease();

          }
          (*(void (**)(char *, uint64_t))(v129 + 8))(v83, v130);
        }
        else
        {
          swift_release();
          swift_unknownObjectRelease();
        }
LABEL_78:
        sub_2347EB0B0(v43);
        __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)&v151);
        v46 = (int64_t)v145;
        v47 = v144;
        v42 = v135;
        if (v135 < 0)
          goto LABEL_18;
LABEL_23:
        if (v47)
        {
          v56 = (v47 - 1) & v47;
          v57 = __clz(__rbit64(v47)) | (v46 << 6);
          v55 = v46;
        }
        else
        {
          v55 = v46 + 1;
          if (__OFADD__(v46, 1))
            goto LABEL_93;
          if (v55 >= v134)
            goto LABEL_88;
          v58 = *(_QWORD *)(v136 + 8 * v55);
          if (!v58)
          {
            v59 = (char *)(v46 + 2);
            if (v46 + 2 >= v134)
              goto LABEL_88;
            v58 = *(_QWORD *)(v136 + 8 * (_QWORD)v59);
            if (v58)
              goto LABEL_32;
            v59 = (char *)(v46 + 3);
            if (v46 + 3 >= v134)
              goto LABEL_88;
            v58 = *(_QWORD *)(v136 + 8 * (_QWORD)v59);
            if (v58)
            {
LABEL_32:
              v55 = (int64_t)v59;
            }
            else
            {
              v55 = v46 + 4;
              if (v46 + 4 >= v134)
                goto LABEL_88;
              v58 = *(_QWORD *)(v136 + 8 * v55);
              if (!v58)
              {
                v114 = (char *)(v46 + 5);
                do
                {
                  if ((char *)v134 == v114)
                    goto LABEL_88;
                  v58 = *(_QWORD *)(v136 + 8 * (_QWORD)v114++);
                }
                while (!v58);
                v55 = (int64_t)(v114 - 1);
              }
            }
          }
          v56 = (v58 - 1) & v58;
          v57 = __clz(__rbit64(v58)) + (v55 << 6);
        }
        v54 = *(_QWORD *)(*(_QWORD *)(v42 + 48) + 8 * v57);
        swift_retain();
        if (!v54)
          goto LABEL_88;
      }
      swift_bridgeObjectRelease();
LABEL_42:
      v150 = 0u;
      v149 = 0u;
      goto LABEL_43;
    }
  }
LABEL_88:
  sub_2347D98FC();
  return swift_release();
}

uint64_t sub_234864BB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  __int128 *v78;
  uint64_t v79;
  int v80;
  void (*v81)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  BOOL v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  unint64_t v103;
  _QWORD *v104;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 *v116;
  char *v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  _QWORD v140[6];
  __int128 v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  _OWORD v145[2];
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;

  v1 = v0;
  v2 = *v0;
  v3 = type metadata accessor for PersistentIdentifier(0);
  v131 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v133 = (uint64_t)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257498);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257490);
  v127 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v118 = (uint64_t)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v117 = (char *)&v113 - v11;
  v12 = sub_23486F5D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v126 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v113 - v19;
  v21 = *(_QWORD *)(*(uint64_t *)((char *)v1 + qword_25425B028) + 16);
  if (!v21)
    goto LABEL_130;
  v129 = v7;
  v130 = v21;
  v132 = v3;
  v22 = *(_QWORD *)(v2 + 232);
  v23 = *(_QWORD *)(v2 + 240);
  swift_retain();
  v136 = v23;
  v137 = v22;
  v114 = sub_2347A67D0();
  if (!v114)
  {
    *(_QWORD *)&v143 = 0;
    *((_QWORD *)&v143 + 1) = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v143 = 0xD00000000000001ALL;
    *((_QWORD *)&v143 + 1) = 0x8000000234877230;
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    goto LABEL_130;
  }
  v24 = (uint64_t)v1 + qword_2561914F8;
  swift_beginAccess();
  sub_23486D634(v24, (uint64_t)v20, &qword_2542576E0);
  LODWORD(v24) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v131 + 48))(v20, 1, v132);
  sub_23486D6D4((uint64_t)v20, &qword_2542576E0);
  v119 = v1;
  v128 = v8;
  if ((_DWORD)v24 == 1)
  {
    sub_23486F5CC();
    swift_retain_n();
    v25 = sub_23486F5C0();
    v26 = sub_23486FBC0();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      *(_QWORD *)&v143 = v28;
      v139 = v12;
      *(_DWORD *)v27 = 136315138;
      v140[0] = v119;
      swift_retain();
      v29 = sub_23486F77C();
      v140[0] = sub_23478470C(v29, v30, (uint64_t *)&v143);
      v1 = v119;
      sub_23486FCEC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_234780000, v25, v26, "This backing data has no persistent identifier but is attempting to flip relationships? %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2349466D0](v28, -1, -1);
      MEMORY[0x2349466D0](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v139);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  v31 = v114;
  swift_beginAccess();
  v32 = *(_QWORD *)(v31 + 88);
  if ((v32 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23486FDC4();
    type metadata accessor for Schema.Relationship();
    sub_23486D5EC();
    sub_23486FA88();
    v32 = v146;
    v123 = v147;
    v33 = v148;
    v34 = v149;
    v35 = v150;
  }
  else
  {
    v36 = -1 << *(_BYTE *)(v32 + 32);
    v37 = *(_QWORD *)(v32 + 56);
    v123 = v32 + 56;
    v38 = ~v36;
    v39 = -v36;
    if (v39 < 64)
      v40 = ~(-1 << v39);
    else
      v40 = -1;
    v35 = v40 & v37;
    swift_bridgeObjectRetain();
    v33 = v38;
    v34 = 0;
  }
  v113 = v33;
  v121 = v32 & 0x7FFFFFFFFFFFFFFFLL;
  v122 = (unint64_t)(v33 + 64) >> 6;
  v115 = (uint64_t)&v143 + 8;
  v116 = (__int128 *)&v140[1];
  v124 = MEMORY[0x24BEE4AD8] + 8;
  v120 = MEMORY[0x24BEE4AD0] + 8;
  v125 = v32;
  while (1)
  {
    if (v32 < 0)
    {
      v44 = sub_23486FE24();
      if (!v44)
        goto LABEL_114;
      v140[0] = v44;
      type metadata accessor for Schema.Relationship();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v45 = v143;
      swift_unknownObjectRelease();
      v43 = v34;
      v41 = v35;
      if (!v45)
        goto LABEL_114;
    }
    else
    {
      if (v35)
      {
        v41 = (v35 - 1) & v35;
        v42 = __clz(__rbit64(v35)) | (v34 << 6);
        v43 = v34;
      }
      else
      {
        v46 = v34 + 1;
        if (__OFADD__(v34, 1))
          goto LABEL_120;
        if (v46 >= v122)
          goto LABEL_114;
        v47 = *(_QWORD *)(v123 + 8 * v46);
        v43 = v34 + 1;
        if (!v47)
        {
          v43 = v34 + 2;
          if (v34 + 2 >= v122)
            goto LABEL_114;
          v47 = *(_QWORD *)(v123 + 8 * v43);
          if (!v47)
          {
            v43 = v34 + 3;
            if (v34 + 3 >= v122)
              goto LABEL_114;
            v47 = *(_QWORD *)(v123 + 8 * v43);
            if (!v47)
            {
              v43 = v34 + 4;
              if (v34 + 4 >= v122)
                goto LABEL_114;
              v47 = *(_QWORD *)(v123 + 8 * v43);
              if (!v47)
              {
                v48 = v34 + 5;
                do
                {
                  if (v122 == v48)
                    goto LABEL_114;
                  v47 = *(_QWORD *)(v123 + 8 * v48++);
                }
                while (!v47);
                v43 = v48 - 1;
              }
            }
          }
        }
        v41 = (v47 - 1) & v47;
        v42 = __clz(__rbit64(v47)) + (v43 << 6);
      }
      v45 = *(_QWORD *)(*(_QWORD *)(v32 + 48) + 8 * v42);
      swift_retain();
      if (!v45)
        goto LABEL_114;
    }
    v138 = v41;
    v139 = v43;
    swift_beginAccess();
    if (!*(_QWORD *)(v45 + 48))
      goto LABEL_121;
    v49 = swift_retain();
    v50 = sub_2347DFE10(v49, v137, v136);
    v52 = v51;
    swift_release();
    v53 = v1[2];
    v54 = *(_QWORD *)(v53 + 16);
    v55 = *(_QWORD *)(v54 + 16);
    swift_retain();
    if (!v55)
      goto LABEL_44;
    swift_bridgeObjectRetain();
    v56 = sub_2347CD9BC(v50, v52);
    if ((v57 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_44:
      v143 = 0u;
      v144 = 0u;
      goto LABEL_45;
    }
    v58 = *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v56);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if ((v58 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_130;
    }
    v59 = *(_QWORD *)(v53 + 24);
    if (v58 >= *(_QWORD *)(v59 + 16))
      goto LABEL_117;
    sub_23486D634(v59 + 32 * v58 + 32, (uint64_t)&v143, &qword_254258968);
LABEL_45:
    swift_release();
    if (!*((_QWORD *)&v144 + 1))
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_23486D6D4((uint64_t)&v143, &qword_254258968);
      goto LABEL_15;
    }
    v134 = v50;
    v60 = v1;
    sub_234797294(&v143, v145);
    sub_234785C80((uint64_t)v145, (uint64_t)&v143);
    v62 = v128;
    v61 = (uint64_t)v129;
    v63 = swift_dynamicCast();
    v135 = v52;
    if ((v63 & 1) != 0)
    {
      v64 = (uint64_t)v117;
      v65 = &v117[*(int *)(v62 + 48)];
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v127 + 56))(v61, 0, 1, v62);
      v66 = v61;
      v67 = (uint64_t *)(v61 + *(int *)(v62 + 48));
      sub_2348107C0(v66, v64);
      v69 = *v67;
      v68 = v67[1];
      *(_QWORD *)v65 = v69;
      *((_QWORD *)v65 + 1) = v68;
      v70 = *(int *)(v62 + 48);
      v71 = v118;
      v72 = (_QWORD *)(v118 + v70);
      sub_2347EB29C(v64, v118);
      *v72 = v69;
      v72[1] = v68;
      v73 = v132;
      *((_QWORD *)&v144 + 1) = v132;
      boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0((uint64_t *)&v143);
      sub_2348107C0(v71, (uint64_t)boxed_opaque_existential_0Tm_0);
      sub_23486D6D4(v64, &qword_254257490);
      __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v145);
      sub_234797294(&v143, v145);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v61, 1, 1, v62);
      sub_23486D6D4(v61, &qword_254257498);
      v73 = v132;
    }
    v75 = (uint64_t)v126;
    sub_234785C80((uint64_t)v145, (uint64_t)&v141);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542575A0);
    v76 = v60;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v77 = v140[0];
      *(_QWORD *)&v143 = v140[0];
      v79 = v115;
      v78 = v116;
      sub_23486D678(v116, v115);
      v140[0] = v77;
      sub_23486D690(v79, (uint64_t)v78);
      v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257700);
      *(_QWORD *)&v141 = v77;
      swift_bridgeObjectRetain();
      sub_23486D6D4((uint64_t)&v143, &qword_2542575A0);
      __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v145);
      sub_234797294(&v141, v145);
      __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v78);
    }
    else
    {
      memset(v140, 0, sizeof(v140));
      sub_23486D6D4((uint64_t)v140, &qword_2542575A8);
    }
    v32 = v125;
    sub_234785C80((uint64_t)v145, (uint64_t)&v143);
    v80 = swift_dynamicCast();
    v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
    if (!v80)
    {
      v81(v75, 1, 1, v73);
      sub_23486D6D4(v75, &qword_2542576E0);
      sub_234785C80((uint64_t)v145, (uint64_t)&v143);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254257700);
      if (swift_dynamicCast())
      {
        v85 = v140[0];
        swift_beginAccess();
        v86 = *(uint64_t **)(v45 + 64);
        *(_QWORD *)&v143 = v86;
        if (swift_conformsToProtocol2())
          v87 = (uint64_t)v86;
        else
          v87 = 0;
        v88 = v134;
        while (v87)
        {
          sub_2347E85B4(v87, (uint64_t *)&v143);
          v86 = (uint64_t *)v143;
          if (swift_conformsToProtocol2())
            v87 = (uint64_t)v86;
          else
            v87 = 0;
        }
        v89 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542580B0);
        v90 = *v86;
        v91 = v135;
        if ((unint64_t)*v86 > 0x7FF || ((unint64_t)(v90 - 512) >= 3 ? (v92 = v90 == 0) : (v92 = 1), v92))
          v106 = sub_23486F524();
        else
          v106 = 0;
        v93 = *v89;
        if ((unint64_t)*v89 > 0x7FF || ((unint64_t)(v93 - 512) >= 3 ? (v94 = v93 == 0) : (v94 = 1), v94))
        {
          v95 = sub_23486F524();
          if (v106)
          {
            v1 = v119;
            if (!v95 || v95 != v106)
              goto LABEL_130;
          }
          else
          {
            v1 = v119;
            if (v95)
              goto LABEL_130;
          }
        }
        else
        {
          v1 = v119;
          if (v106)
            goto LABEL_130;
        }
        sub_23486F584();
        if (v107 < 0)
          goto LABEL_116;
        if (!v107)
        {
          *(_QWORD *)&v143 = 0;
          *((_QWORD *)&v143 + 1) = 0xE000000000000000;
          sub_23486FEA8();
          swift_bridgeObjectRelease();
          *(_QWORD *)&v143 = 0xD00000000000001BLL;
          *((_QWORD *)&v143 + 1) = 0x8000000234873200;
          sub_23487055C();
          sub_23486F7DC();
          swift_bridgeObjectRelease();
          sub_23486F7DC();
          v140[0] = *(_QWORD *)(v45 + 48);
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256189BE8);
          sub_23486F77C();
          sub_23486F7DC();
          swift_bridgeObjectRelease();
          goto LABEL_130;
        }
        v108 = (uint64_t *)sub_23486F584();
        if (v109 < 1)
          goto LABEL_118;
        v110 = *v108;
        if (swift_conformsToProtocol2())
          v111 = v110;
        else
          v111 = 0;
        if (!v111)
        {
          *(_QWORD *)&v143 = 0;
          *((_QWORD *)&v143 + 1) = 0xE000000000000000;
          sub_23486FEA8();
          sub_23486F7DC();
          sub_23487055C();
          sub_23486F7DC();
          swift_bridgeObjectRelease();
          sub_23486F7DC();
          v140[0] = v45;
          type metadata accessor for Schema.Relationship();
          sub_23486FF74();
          goto LABEL_130;
        }
        sub_234868F5C(v111, v88, v91, v130, v85, v1, v111);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_111;
      }
      *(_QWORD *)&v143 = 0;
      *((_QWORD *)&v143 + 1) = 0xE000000000000000;
      sub_23486FEA8();
      sub_23486F7DC();
      sub_23486FF74();
      while (1)
      {
LABEL_130:
        sub_234870004();
        __break(1u);
      }
    }
    v1 = v76;
    v81(v75, 0, 1, v73);
    sub_2348107C0(v75, v133);
    swift_beginAccess();
    v82 = *(_QWORD *)(v45 + 64);
    *(_QWORD *)&v143 = v82;
    if (swift_conformsToProtocol2())
      v83 = v82;
    else
      v83 = 0;
    if (v83)
    {
      v84 = v134;
      do
      {
        sub_2347E85B4(v83, (uint64_t *)&v143);
        v82 = v143;
        if (swift_conformsToProtocol2())
          v83 = v82;
        else
          v83 = 0;
      }
      while (v83);
    }
    else
    {
      v84 = v134;
    }
    if (swift_conformsToProtocol2())
      v96 = v82;
    else
      v96 = 0;
    v97 = v135;
    if (!v96)
    {
      *(_QWORD *)&v143 = 0;
      *((_QWORD *)&v143 + 1) = 0xE000000000000000;
      sub_23486FEA8();
      sub_23486F7DC();
      v140[0] = v45;
      type metadata accessor for Schema.Relationship();
      sub_23486FF74();
      goto LABEL_130;
    }
    v98 = sub_234868C3C(v96, v133, v84, v135, v130, v137, v96);
    v99 = v1[2];
    *((_QWORD *)&v144 + 1) = swift_getObjectType();
    *(_QWORD *)&v143 = v98;
    v100 = *(_QWORD *)(v99 + 16);
    if (!*(_QWORD *)(v100 + 16))
    {
      swift_retain();
      swift_unknownObjectRetain();
LABEL_127:
      v140[0] = 0;
      v140[1] = 0xE000000000000000;
      sub_23486FEA8();
      swift_bridgeObjectRelease();
      v140[0] = 0xD000000000000029;
      v140[1] = 0x8000000234876D90;
      sub_23486F7DC();
      swift_bridgeObjectRelease();
      goto LABEL_130;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    v101 = sub_2347CD9BC(v84, v97);
    if ((v102 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_127;
    }
    v103 = *(_QWORD *)(*(_QWORD *)(v100 + 56) + 8 * v101);
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    v104 = *(_QWORD **)(v99 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v99 + 24) = v104;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v103 & 0x8000000000000000) != 0)
        break;
      goto LABEL_98;
    }
    v104 = sub_23486BEDC(v104);
    *(_QWORD *)(v99 + 24) = v104;
    if ((v103 & 0x8000000000000000) != 0)
      break;
LABEL_98:
    if (v103 >= v104[2])
      goto LABEL_119;
    sub_23484845C((uint64_t)&v143, (uint64_t)&v104[4 * v103 + 4]);
    swift_endAccess();
    sub_23486D6D4((uint64_t)&v143, &qword_254258968);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    sub_2347EB0B0(v133);
LABEL_111:
    __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v145);
LABEL_15:
    v35 = v138;
    v34 = v139;
  }
  __break(1u);
LABEL_114:
  sub_2347D98FC();
  swift_release();
  return swift_release();
}

_QWORD *sub_234865D54(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v19[2];

  v3 = v2;
  v6 = *v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)v3 + qword_2561914F8;
  v11 = type metadata accessor for PersistentIdentifier(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v13 = qword_25425B028;
  type metadata accessor for _ModelMetadata();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_OWORD *)(v14 + 48) = 0u;
  *(_OWORD *)(v14 + 64) = 0u;
  *(_QWORD *)((char *)v3 + v13) = v14;
  *(_BYTE *)(v14 + 80) = 1;
  *((_BYTE *)v3 + qword_25425B038) = 0;
  v15 = *(_QWORD *)(v6 + 240);
  type metadata accessor for KnownKeysDictionary();
  v16 = swift_allocObject();
  swift_retain();
  *(_QWORD *)(v16 + 16) = sub_2348609C8(a1, v15);
  memset(v19, 0, sizeof(v19));
  v17 = *(_QWORD *)(sub_234810804(*(_QWORD *)(v6 + 232), v15) + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 24) = sub_23486288C((uint64_t)v19, v17);
  v3[2] = v16;
  sub_2348107C0(a2, (uint64_t)v9);
  v12((uint64_t)v9, 0, 1, v11);
  swift_beginAccess();
  sub_23486D220((uint64_t)v9, v10);
  swift_endAccess();
  swift_release();
  return v3;
}

uint64_t sub_234865F08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  _OWORD v15[2];

  v3 = *v1;
  v4 = v1[2];
  v5 = *(_QWORD *)(*v1 + 232);
  v6 = *(_QWORD *)(v3 + 240);
  swift_retain();
  v7 = sub_2347DFE10(a1, v5, v6);
  v9 = *(_QWORD *)(v4 + 16);
  if (!*(_QWORD *)(v9 + 16) || (v10 = sub_2347CD9BC(v7, v8), (v11 & 1) == 0))
  {
    memset(v15, 0, sizeof(v15));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  result = swift_beginAccess();
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = *(_QWORD *)(v4 + 24);
    if (v12 < *(_QWORD *)(v14 + 16))
    {
      sub_23486D634(v14 + 32 * v12 + 32, (uint64_t)v15, &qword_254258968);
LABEL_7:
      swift_release();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
      return swift_dynamicCast();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_234866024(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  __int128 *v40;
  int v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;

  v3 = v2;
  v60 = a2;
  v5 = *v3;
  v64 = *a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v58 - v10;
  v11 = type metadata accessor for PersistentIdentifier(0);
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v59 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257498);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257490);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v58 - v21;
  v65 = sub_2347DFE10((uint64_t)a1, *(_QWORD *)(v5 + 232), *(_QWORD *)(v5 + 240));
  v24 = v23;
  if (*((_BYTE *)v3 + qword_25425B038) != 1)
  {
    v9 = (char *)v3[2];
    v32 = *((_QWORD *)v9 + 2);
    v33 = *(_QWORD *)(v32 + 16);
    swift_retain();
    if (v33 && (v34 = sub_2347CD9BC(v65, v24), (v35 & 1) != 0))
    {
      v36 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v34);
      swift_beginAccess();
      if ((v36 & 0x8000000000000000) != 0)
        goto LABEL_35;
      v37 = *((_QWORD *)v9 + 3);
      if (v36 >= *(_QWORD *)(v37 + 16))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      sub_23486D634(v37 + 32 * v36 + 32, (uint64_t)&v71, &qword_254258968);
      swift_release();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v72 + 1))
      {
        if (swift_dynamicCast())
          return v66;
        else
          return 0;
      }
    }
    else
    {
      v71 = 0u;
      v72 = 0u;
      swift_release();
      swift_bridgeObjectRelease();
    }
    v39 = &qword_254258968;
    v40 = &v71;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)((char *)v3 + qword_25425B028);
  if (*(_QWORD *)(v25 + 16))
  {
    v9 = (char *)v3[2];
    v26 = *((_QWORD *)v9 + 2);
    v27 = *(_QWORD *)(v26 + 16);
    v58 = *(_QWORD *)(v25 + 16);
    swift_retain();
    swift_retain();
    if (v27)
    {
      swift_bridgeObjectRetain();
      v28 = sub_2347CD9BC(v65, v24);
      if ((v29 & 1) != 0)
      {
        v30 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v28);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if ((v30 & 0x8000000000000000) == 0)
        {
          v31 = *((_QWORD *)v9 + 3);
          if (v30 < *(_QWORD *)(v31 + 16))
          {
            sub_23486D634(v31 + 32 * v30 + 32, (uint64_t)&v71, &qword_254258968);
LABEL_20:
            swift_release();
            sub_23486D634((uint64_t)&v71, (uint64_t)&v68, &qword_254258968);
            if (v70)
            {
              v41 = swift_dynamicCast();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, v41 ^ 1u, 1, v16);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
              {
                swift_bridgeObjectRelease();
                v42 = *(int *)(v16 + 48);
                swift_release();
                v43 = (uint64_t *)&v22[v42];
                sub_23486D6D4((uint64_t)&v71, &qword_254258968);
                v44 = (uint64_t *)&v15[*(int *)(v16 + 48)];
                sub_2348107C0((uint64_t)v15, (uint64_t)v22);
                v46 = *v44;
                v45 = v44[1];
                *v43 = v46;
                v43[1] = v45;
                v47 = (uint64_t *)&v20[*(int *)(v16 + 48)];
                sub_2348107C0((uint64_t)v22, (uint64_t)v20);
                *v47 = v46;
                v47[1] = v45;
                v68 = v46;
                v69 = v45;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
                if (swift_dynamicCast())
                  v38 = v67;
                else
                  v38 = 0;
                sub_2347EB0B0((uint64_t)v20);
                return v38;
              }
            }
            else
            {
              sub_23486D6D4((uint64_t)&v68, &qword_254258968);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
            }
            sub_23486D6D4((uint64_t)v15, &qword_254257498);
            sub_23486D634((uint64_t)&v71, (uint64_t)&v68, &qword_254258968);
            if (v70)
            {
              v49 = v62;
              v48 = (uint64_t)v63;
              v50 = swift_dynamicCast();
              v51 = v61;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v48, v50 ^ 1u, 1, v49);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v48, 1, v49) != 1)
              {
                v52 = v59;
                sub_2348107C0(v48, v59);
                v68 = sub_2347F0C44(v52);
                v69 = v53;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
                swift_dynamicCast();
                v38 = v67;
                v70 = v16;
                v54 = __swift_allocate_boxed_opaque_existential_0Tm_0(&v68);
                v55 = (uint64_t *)((char *)v54 + *(int *)(v16 + 48));
                sub_2347EB29C(v52, (uint64_t)v54);
                v56 = v60;
                *v55 = v38;
                v55[1] = v56;
                swift_retain();
                swift_unknownObjectRetain();
                sub_234860094((uint64_t)&v68, v65, v24);
                swift_release();
                swift_release();
                sub_2347EB0B0(v52);
                sub_23486D6D4((uint64_t)&v71, &qword_254258968);
                return v38;
              }
            }
            else
            {
              sub_23486D6D4((uint64_t)&v68, &qword_254258968);
              v48 = (uint64_t)v63;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v63, 1, 1, v62);
            }
            swift_release();
            swift_bridgeObjectRelease();
            sub_23486D6D4((uint64_t)&v71, &qword_254258968);
            v39 = &qword_2542576E0;
            v40 = (__int128 *)v48;
LABEL_32:
            sub_23486D6D4((uint64_t)v40, v39);
            return 0;
          }
          goto LABEL_36;
        }
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
    }
    v71 = 0u;
    v72 = 0u;
    goto LABEL_20;
  }
LABEL_38:
  *(_QWORD *)&v71 = 0;
  *((_QWORD *)&v71 + 1) = 0xE000000000000000;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v71 = 0xD000000000000017;
  *((_QWORD *)&v71 + 1) = 0x80000002348772D0;
  sub_234863678((uint64_t)v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_234866748(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *boxed_opaque_existential_0Tm_0;
  _QWORD *v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  _OWORD v68[3];

  v3 = v2;
  v5 = *v3;
  v6 = *a1;
  v62 = a2;
  v63 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v57 - v11;
  v13 = type metadata accessor for PersistentIdentifier(0);
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v61 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257498);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257490);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v58 = (uint64_t)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v57 - v22;
  v64 = sub_2347DFE10((uint64_t)a1, *(_QWORD *)(v5 + 232), *(_QWORD *)(v5 + 240));
  v25 = v24;
  if (*((_BYTE *)v3 + qword_25425B038) != 1)
  {
    v32 = v3[2];
    v33 = *(_QWORD *)(v32 + 16);
    v34 = *(_QWORD *)(v33 + 16);
    swift_retain();
    if (!v34)
      goto LABEL_28;
    v35 = sub_2347CD9BC(v64, v25);
    if ((v36 & 1) == 0)
      goto LABEL_28;
    v37 = *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * v35);
    swift_beginAccess();
    if ((v37 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v38 = *(_QWORD *)(v32 + 24);
      if (v37 < *(_QWORD *)(v38 + 16))
      {
        sub_23486D634(v38 + 32 * v37 + 32, (uint64_t)&v66, &qword_254258968);
        swift_release();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v67 + 1))
        {
          sub_234797294(&v66, v68);
          swift_dynamicCast();
          return v65;
        }
        goto LABEL_29;
      }
    }
    __break(1u);
    goto LABEL_26;
  }
  if (!*(_QWORD *)(*(_QWORD *)((char *)v3 + qword_25425B028) + 16))
  {
LABEL_30:
    *(_QWORD *)&v68[0] = 0;
    *((_QWORD *)&v68[0] + 1) = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v68[0] = 0xD000000000000017;
    *((_QWORD *)&v68[0] + 1) = 0x80000002348772D0;
    sub_234863678((uint64_t)v10);
    sub_23486F77C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v26 = v3[2];
  v27 = *(_QWORD *)(v26 + 16);
  v10 = *(char **)(v27 + 16);
  v57 = *(_QWORD *)(*(_QWORD *)((char *)v3 + qword_25425B028) + 16);
  swift_retain();
  swift_retain();
  if (!v10)
  {
LABEL_15:
    memset(v68, 0, 32);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v28 = sub_2347CD9BC(v64, v25);
  if ((v29 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v30 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v28);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((v30 & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v31 = *(_QWORD *)(v26 + 24);
  if (v30 >= *(_QWORD *)(v31 + 16))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    v66 = 0u;
    v67 = 0u;
    swift_release();
    swift_bridgeObjectRelease();
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_23486D634(v31 + 32 * v30 + 32, (uint64_t)v68, &qword_254258968);
LABEL_16:
  swift_release();
  sub_23486D634((uint64_t)v68, (uint64_t)&v66, &qword_254258968);
  if (*((_QWORD *)&v67 + 1))
  {
    v40 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, v40 ^ 1u, 1, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      swift_bridgeObjectRelease();
      v41 = *(int *)(v18 + 48);
      swift_release();
      v42 = &v23[v41];
      sub_23486D6D4((uint64_t)v68, &qword_254258968);
      v43 = &v17[*(int *)(v18 + 48)];
      sub_2348107C0((uint64_t)v17, (uint64_t)v23);
      v45 = *(_QWORD *)v43;
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = v45;
      *((_QWORD *)v42 + 1) = v44;
      v46 = v58;
      v47 = (_QWORD *)(v58 + *(int *)(v18 + 48));
      sub_2348107C0((uint64_t)v23, v58);
      *v47 = v45;
      v47[1] = v44;
      *(_QWORD *)&v66 = v45;
      *((_QWORD *)&v66 + 1) = v44;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
      swift_dynamicCast();
      v39 = v65;
      sub_2347EB0B0(v46);
      return v39;
    }
  }
  else
  {
    sub_23486D6D4((uint64_t)&v66, &qword_254258968);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  sub_23486D6D4((uint64_t)v17, &qword_254257498);
  sub_23486D634((uint64_t)v68, (uint64_t)&v66, &qword_254258968);
  if (*((_QWORD *)&v67 + 1))
  {
    v48 = v60;
    v49 = swift_dynamicCast();
    v50 = v59;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v12, v49 ^ 1u, 1, v48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v12, 1, v48) != 1)
    {
      v51 = v61;
      sub_2348107C0((uint64_t)v12, v61);
      *(_QWORD *)&v66 = sub_2347F0C44(v51);
      *((_QWORD *)&v66 + 1) = v52;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
      swift_dynamicCast();
      v39 = v65;
      *((_QWORD *)&v67 + 1) = v18;
      boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0((uint64_t *)&v66);
      v54 = (uint64_t *)((char *)boxed_opaque_existential_0Tm_0 + *(int *)(v18 + 48));
      sub_2347EB29C(v51, (uint64_t)boxed_opaque_existential_0Tm_0);
      v55 = v62;
      *v54 = v39;
      v54[1] = v55;
      swift_retain();
      swift_unknownObjectRetain();
      sub_234860094((uint64_t)&v66, v64, v25);
      swift_release();
      swift_release();
      sub_2347EB0B0(v51);
      sub_23486D6D4((uint64_t)v68, &qword_254258968);
      return v39;
    }
  }
  else
  {
    sub_23486D6D4((uint64_t)&v66, &qword_254258968);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v12, 1, 1, v60);
  }
  sub_23486D6D4((uint64_t)v12, &qword_2542576E0);
LABEL_33:
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_234866E6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  _OWORD v15[2];

  v3 = *v1;
  v4 = v1[2];
  v5 = *(_QWORD *)(*v1 + 232);
  v6 = *(_QWORD *)(v3 + 240);
  swift_retain();
  v7 = sub_2347DFE10(a1, v5, v6);
  v9 = *(_QWORD *)(v4 + 16);
  if (!*(_QWORD *)(v9 + 16) || (v10 = sub_2347CD9BC(v7, v8), (v11 & 1) == 0))
  {
    memset(v15, 0, sizeof(v15));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  result = swift_beginAccess();
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = *(_QWORD *)(v4 + 24);
    if (v12 < *(_QWORD *)(v14 + 16))
    {
      sub_23486D634(v14 + 32 * v12 + 32, (uint64_t)v15, &qword_254258968);
LABEL_7:
      swift_release();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
      return swift_dynamicCast();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_234866F88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[3];

  v4 = v3;
  v39 = a2;
  v7 = *v4;
  v8 = *a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (unint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v8 + 8);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)&v38 - v15;
  v17 = sub_2347DFE10((uint64_t)a1, *(_QWORD *)(v7 + 232), *(_QWORD *)(v7 + 240));
  v19 = v18;
  if (*((_BYTE *)v4 + qword_25425B038) != 1)
    goto LABEL_22;
  v38 = a3;
  v20 = *(_QWORD *)(*(_QWORD *)((char *)v4 + qword_25425B028) + 16);
  if (!v20)
  {
LABEL_37:
    *(_QWORD *)&v45 = 0;
    *((_QWORD *)&v45 + 1) = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v45 = 0xD000000000000017;
    *((_QWORD *)&v45 + 1) = 0x80000002348772D0;
    sub_234863678(v12);
    sub_23486F77C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    result = sub_234870004();
    __break(1u);
    return result;
  }
  v21 = v4[2];
  v22 = *(_QWORD *)(v21 + 16);
  v23 = *(_QWORD *)(v22 + 16);
  swift_retain();
  swift_retain();
  if (!v23)
    goto LABEL_9;
  swift_bridgeObjectRetain();
  v24 = sub_2347CD9BC(v17, v19);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    memset(v47, 0, 32);
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v24);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v21 + 24);
  if (v12 >= *(_QWORD *)(v26 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  sub_23486D634(v26 + 32 * v12 + 32, (uint64_t)v47, &qword_254258968);
LABEL_10:
  swift_release();
  sub_23486D634((uint64_t)v47, (uint64_t)v40, &qword_254258968);
  if (!v41)
  {
    sub_23486D6D4((uint64_t)v40, &qword_254258968);
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542575A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v43 = 0u;
    v44 = 0u;
    v42 = 0u;
    goto LABEL_16;
  }
  if (!(_QWORD)v42)
  {
LABEL_16:
    sub_23486D6D4((uint64_t)&v42, &qword_2542575A8);
    sub_23486D634((uint64_t)v47, (uint64_t)&v45, &qword_254258968);
    if (*((_QWORD *)&v46 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254257700);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v28 = v42;
        v29 = v39;
        sub_234867534(v42, v20, v13);
        *((_QWORD *)&v46 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2542575A0);
        v30 = (_QWORD *)swift_allocObject();
        *(_QWORD *)&v45 = v30;
        v30[2] = v28;
        v30[6] = v13;
        v30[7] = v29;
        boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v30 + 3);
        (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 16))(boxed_opaque_existential_0Tm_0, v16, v13);
        swift_retain();
        sub_234860094((uint64_t)&v45, v17, v19);
        swift_release();
        swift_release();
        sub_23486D6D4((uint64_t)v47, &qword_254258968);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v38, v16, v13);
      }
      swift_release();
    }
    else
    {
      swift_release();
      sub_23486D6D4((uint64_t)&v45, &qword_254258968);
    }
    sub_23486D6D4((uint64_t)v47, &qword_254258968);
LABEL_22:
    v33 = v4[2];
    v34 = *(_QWORD *)(v33 + 16);
    if (*(_QWORD *)(v34 + 16))
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v35 = sub_2347CD9BC(v17, v19);
      if ((v36 & 1) != 0)
      {
        v12 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if ((v12 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          v37 = *(_QWORD *)(v33 + 24);
          if (v12 < *(_QWORD *)(v37 + 16))
          {
            sub_23486D634(v37 + 32 * v12 + 32, (uint64_t)&v45, &qword_254258968);
LABEL_30:
            swift_release();
            swift_bridgeObjectRelease();
            __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
            return swift_dynamicCast();
          }
        }
        __break(1u);
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v45 = 0u;
    v46 = 0u;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_23486D6D4((uint64_t)v47, &qword_254258968);
  v27 = v42;
  *(_QWORD *)&v45 = v42;
  sub_23486D678((__int128 *)((char *)&v42 + 8), (uint64_t)&v45 + 8);
  *(_QWORD *)&v42 = v27;
  sub_23486D678((__int128 *)((char *)&v45 + 8), (uint64_t)&v42 + 8);
  swift_bridgeObjectRelease();
  sub_23486D678((__int128 *)((char *)&v42 + 8), (uint64_t)v40);
  __swift_instantiateConcreteTypeFromMangledName(qword_254257518);
  return swift_dynamicCast();
}

uint64_t sub_234867534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;

  v22 = (uint64_t *)a3;
  if (swift_conformsToProtocol2())
    v6 = a3;
  else
    v6 = 0;
  v7 = (uint64_t *)a3;
  while (v6)
  {
    sub_2347E85B4(v6, (uint64_t *)&v22);
    v7 = v22;
    if (swift_conformsToProtocol2())
      v6 = (uint64_t)v7;
    else
      v6 = 0;
  }
  v8 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542580B0);
  v9 = *v7;
  if ((unint64_t)*v7 > 0x7FF || ((unint64_t)(v9 - 512) >= 3 ? (v10 = v9 == 0) : (v10 = 1), v10))
    v21 = sub_23486F524();
  else
    v21 = 0;
  v11 = *v8;
  if ((unint64_t)*v8 > 0x7FF || ((unint64_t)(v11 - 512) >= 3 ? (v12 = v11 == 0) : (v12 = 1), v12))
  {
    v13 = sub_23486F524();
    if (v21)
    {
      if (!v13 || v13 != v21)
        goto LABEL_41;
    }
    else if (v13)
    {
      goto LABEL_41;
    }
  }
  else if (v21)
  {
    goto LABEL_41;
  }
  sub_23486F584();
  if (v14 < 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (!v14)
  {
LABEL_39:
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)0xD00000000000001BLL;
    v23 = 0x8000000234873200;
    sub_23487055C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    sub_23486F7DC();
    swift_getMetatypeMetadata();
    sub_23486F77C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  v15 = (uint64_t *)sub_23486F584();
  if (v16 < 1)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v17 = *v15;
  if (swift_conformsToProtocol2())
    v18 = v17;
  else
    v18 = 0;
  if (v18)
  {
    sub_234868644(v18, a2, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
    v19 = sub_23486FF68();
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542574B8);
    return swift_dynamicCast();
  }
  v22 = 0;
  v23 = 0xE000000000000000;
  sub_23486FEA8();
  swift_bridgeObjectRelease();
  v22 = (uint64_t *)0xD000000000000028;
  v23 = 0x80000002348772F0;
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
LABEL_41:
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_2348678A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[3];

  v4 = v3;
  v39 = a2;
  v7 = *v4;
  v8 = *a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (unint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v8 + 8);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)&v38 - v15;
  v17 = sub_2347DFE10((uint64_t)a1, *(_QWORD *)(v7 + 232), *(_QWORD *)(v7 + 240));
  v19 = v18;
  if (*((_BYTE *)v4 + qword_25425B038) != 1)
    goto LABEL_22;
  v38 = a3;
  v20 = *(_QWORD *)(*(_QWORD *)((char *)v4 + qword_25425B028) + 16);
  if (!v20)
  {
LABEL_37:
    *(_QWORD *)&v45 = 0;
    *((_QWORD *)&v45 + 1) = 0xE000000000000000;
    sub_23486FEA8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v45 = 0xD000000000000017;
    *((_QWORD *)&v45 + 1) = 0x80000002348772D0;
    sub_234863678(v12);
    sub_23486F77C();
    sub_23486F7DC();
    swift_bridgeObjectRelease();
    result = sub_234870004();
    __break(1u);
    return result;
  }
  v21 = v4[2];
  v22 = *(_QWORD *)(v21 + 16);
  v23 = *(_QWORD *)(v22 + 16);
  swift_retain();
  swift_retain();
  if (!v23)
    goto LABEL_9;
  swift_bridgeObjectRetain();
  v24 = sub_2347CD9BC(v17, v19);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    memset(v47, 0, 32);
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v24);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v21 + 24);
  if (v12 >= *(_QWORD *)(v26 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  sub_23486D634(v26 + 32 * v12 + 32, (uint64_t)v47, &qword_254258968);
LABEL_10:
  swift_release();
  sub_23486D634((uint64_t)v47, (uint64_t)v40, &qword_254258968);
  if (!v41)
  {
    sub_23486D6D4((uint64_t)v40, &qword_254258968);
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542575A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v43 = 0u;
    v44 = 0u;
    v42 = 0u;
    goto LABEL_16;
  }
  if (!(_QWORD)v42)
  {
LABEL_16:
    sub_23486D6D4((uint64_t)&v42, &qword_2542575A8);
    sub_23486D634((uint64_t)v47, (uint64_t)&v45, &qword_254258968);
    if (*((_QWORD *)&v46 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254257700);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v28 = v42;
        v29 = v39;
        sub_234867534(v42, v20, v13);
        *((_QWORD *)&v46 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2542575A0);
        v30 = (_QWORD *)swift_allocObject();
        *(_QWORD *)&v45 = v30;
        v30[2] = v28;
        v30[6] = v13;
        v30[7] = v29;
        boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v30 + 3);
        (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 16))(boxed_opaque_existential_0Tm_0, v16, v13);
        swift_retain();
        sub_234860094((uint64_t)&v45, v17, v19);
        swift_release();
        swift_release();
        sub_23486D6D4((uint64_t)v47, &qword_254258968);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v38, v16, v13);
      }
      swift_release();
    }
    else
    {
      swift_release();
      sub_23486D6D4((uint64_t)&v45, &qword_254258968);
    }
    sub_23486D6D4((uint64_t)v47, &qword_254258968);
LABEL_22:
    v33 = v4[2];
    v34 = *(_QWORD *)(v33 + 16);
    if (*(_QWORD *)(v34 + 16))
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v35 = sub_2347CD9BC(v17, v19);
      if ((v36 & 1) != 0)
      {
        v12 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if ((v12 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          v37 = *(_QWORD *)(v33 + 24);
          if (v12 < *(_QWORD *)(v37 + 16))
          {
            sub_23486D634(v37 + 32 * v12 + 32, (uint64_t)&v45, &qword_254258968);
LABEL_30:
            swift_release();
            swift_bridgeObjectRelease();
            __swift_instantiateConcreteTypeFromMangledName(&qword_254258968);
            return swift_dynamicCast();
          }
        }
        __break(1u);
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v45 = 0u;
    v46 = 0u;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_23486D6D4((uint64_t)v47, &qword_254258968);
  v27 = v42;
  *(_QWORD *)&v45 = v42;
  sub_23486D678((__int128 *)((char *)&v42 + 8), (uint64_t)&v45 + 8);
  *(_QWORD *)&v42 = v27;
  sub_23486D678((__int128 *)((char *)&v45 + 8), (uint64_t)&v42 + 8);
  swift_bridgeObjectRelease();
  sub_23486D678((__int128 *)((char *)&v42 + 8), (uint64_t)v40);
  __swift_instantiateConcreteTypeFromMangledName(qword_254257518);
  return swift_dynamicCast();
}

uint64_t sub_234867E54(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t v15[3];
  uint64_t v16;

  v5 = *v2;
  v6 = *a1;
  v7 = *(_QWORD *)(*v2 + 232);
  v8 = *(_QWORD *)(v5 + 240);
  swift_retain();
  v9 = sub_2347DFE10((uint64_t)a1, v7, v8);
  v11 = v10;
  v16 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v6 + 8);
  v12 = v16;
  boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_0Tm_0, a2, v12);
  sub_234860094((uint64_t)v15, v9, v11);
  return swift_release();
}

uint64_t sub_234867F0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_0Tm_0;
  __int128 v17;
  __int128 v18;

  v7 = *v3;
  v8 = *a1;
  v9 = *((unsigned __int8 *)v3 + qword_25425B038);
  v10 = *(_QWORD *)(*v3 + 232);
  v11 = *(_QWORD *)(v7 + 240);
  swift_retain();
  v12 = sub_2347DFE10((uint64_t)a1, v10, v11);
  v14 = v13;
  if (v9 == 1)
  {
    if (a2)
    {
      *((_QWORD *)&v18 + 1) = type metadata accessor for PersistentIdentifier(0);
      boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0((uint64_t *)&v17);
      PersistentModel.persistentModelID.getter(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v8 + 8) + 16), a3, (uint64_t)boxed_opaque_existential_0Tm_0);
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
  }
  else
  {
    if (a2)
    {
      *((_QWORD *)&v18 + 1) = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v8 + 8) + 16);
      *(_QWORD *)&v17 = a2;
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    swift_unknownObjectRetain();
  }
  sub_234860094((uint64_t)&v17, v12, v14);
  return swift_release();
}

uint64_t sub_23486803C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t v17[3];
  uint64_t v18;

  v7 = *v3;
  v8 = *a1;
  v9 = *((unsigned __int8 *)v3 + qword_25425B038);
  v10 = *(_QWORD *)(*v3 + 232);
  v11 = *(_QWORD *)(v7 + 240);
  swift_retain();
  v12 = sub_2347DFE10((uint64_t)a1, v10, v11);
  v14 = v13;
  if (v9 == 1)
  {
    v18 = type metadata accessor for PersistentIdentifier(0);
    boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v17);
    PersistentModel.persistentModelID.getter(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v8 + 8), a3, (uint64_t)boxed_opaque_existential_0Tm_0);
  }
  else
  {
    v18 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v8 + 8);
    v17[0] = a2;
    swift_unknownObjectRetain();
  }
  sub_234860094((uint64_t)v17, v12, v14);
  return swift_release();
}

uint64_t sub_234868144(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t v15[3];
  uint64_t v16;

  v5 = *v2;
  v6 = *a1;
  v7 = *(_QWORD *)(*v2 + 232);
  v8 = *(_QWORD *)(v5 + 240);
  swift_retain();
  v9 = sub_2347DFE10((uint64_t)a1, v7, v8);
  v11 = v10;
  v16 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v6 + 8);
  v12 = v16;
  boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_0Tm_0, a2, v12);
  sub_234860094((uint64_t)v15, v9, v11);
  return swift_release();
}

uint64_t sub_2348681FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33[3];
  uint64_t v34;

  v7 = *v4;
  v8 = *a1;
  if (*((_BYTE *)v4 + qword_25425B038) != 1)
  {
    v20 = *(_QWORD *)(v7 + 232);
    v21 = *(_QWORD *)(v7 + 240);
    swift_retain();
    v22 = sub_2347DFE10((uint64_t)a1, v20, v21);
    v24 = v23;
    v34 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v8 + 8);
    v25 = v34;
    boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v33);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(boxed_opaque_existential_0Tm_0, a2, v25);
    v18 = v22;
    v19 = v24;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v8 + 8);
  sub_234862978(v10, a4, v33);
  if (!v34)
  {
    v12 = *(_QWORD *)(v7 + 232);
    v13 = *(_QWORD *)(v7 + 240);
    goto LABEL_7;
  }
  v11 = __swift_project_boxed_opaque_existential_1(v33, v34);
  MEMORY[0x24BDAC7A8](v11);
  v12 = *(_QWORD *)(v7 + 232);
  v13 = *(_QWORD *)(v7 + 240);
  sub_23486F878();
  __swift_destroy_boxed_opaque_existential_0Tm_1((uint64_t)v33);
  if (!v32)
  {
LABEL_7:
    swift_retain();
    v27 = sub_2347DFE10((uint64_t)a1, v12, v13);
    v29 = v28;
    v30 = sub_234861E44(0, v10, a4);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257700);
    v33[0] = v30;
    v18 = v27;
    v19 = v29;
    goto LABEL_8;
  }
  swift_unknownObjectRelease();
  sub_2348622F8(0);
  swift_retain();
  v14 = sub_2347DFE10((uint64_t)a1, v12, v13);
  v16 = v15;
  v34 = v10;
  v17 = __swift_allocate_boxed_opaque_existential_0Tm_0(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v17, a2, v10);
  v18 = v14;
  v19 = v16;
LABEL_8:
  sub_234860094((uint64_t)v33, v18, v19);
  return swift_release();
}

uint64_t sub_234868464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v11;

  v5 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  PersistentModel.persistentModelID.getter(a4, AssociatedConformanceWitness, (uint64_t)v7);
  v9 = *(unsigned __int8 *)(*(_QWORD *)&v7[*(int *)(v5 + 20)] + 32);
  sub_2347EB0B0((uint64_t)v7);
  return v9;
}

uint64_t sub_234868534(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_0Tm_0;
  uint64_t v21[3];
  uint64_t v22;

  v9 = *v5;
  v10 = *a1;
  v11 = *((unsigned __int8 *)v5 + qword_25425B038);
  v12 = *(_QWORD *)(*v5 + 232);
  v13 = *(_QWORD *)(v9 + 240);
  swift_retain();
  v14 = sub_2347DFE10((uint64_t)a1, v12, v13);
  v16 = v15;
  if (v11 == 1)
  {
    v17 = sub_234861E44(0, *(_QWORD *)(*MEMORY[0x24BEE46A8] + v10 + 8), a5);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257700);
    v21[0] = v17;
  }
  else
  {
    v22 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v10 + 8);
    v18 = v22;
    boxed_opaque_existential_0Tm_0 = __swift_allocate_boxed_opaque_existential_0Tm_0(v21);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(boxed_opaque_existential_0Tm_0, a2, v18);
  }
  sub_234860094((uint64_t)v21, v14, v16);
  return swift_release();
}

uint64_t sub_234868644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_23486F614();
  v9 = result;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8);
    v7 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_2347F0C44(v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
      swift_dynamicCast();
      sub_23486F98C();
      sub_23486F974();
      v7 += v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_234868738@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  int v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE v40[12];
  int v41;
  os_log_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a4;
  v47 = *a3;
  v48 = a3;
  v6 = sub_23486F5D8();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v40[-v10];
  v12 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v40[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *a1;
  v16 = a1[1];
  ObjectType = swift_getObjectType();
  PersistentModel.persistentModelID.getter(ObjectType, v16, (uint64_t)v14);
  v18 = *(unsigned __int8 *)(*(_QWORD *)&v14[*(int *)(v12 + 20)] + 32);
  sub_2347EB0B0((uint64_t)v14);
  if (v18 == 1)
  {
    v45 = v15;
    v46 = ObjectType;
    if ((*a2 & 1) != 0)
    {
      v19 = v9;
      sub_23486F5CC();
      v20 = (uint64_t)v48;
      swift_retain_n();
      swift_unknownObjectRetain_n();
      v21 = sub_23486F5C0();
      v22 = sub_23486FBC0();
      v23 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        v24 = swift_slowAlloc();
        v44 = v19;
        v42 = v21;
        v25 = v24;
        v43 = swift_slowAlloc();
        v53 = v43;
        *(_DWORD *)v25 = 136315394;
        v41 = v23;
        ObjectType = v46;
        PersistentModel.persistentModelID.getter(v46, v16, (uint64_t)v14);
        v26 = sub_23486F77C();
        v52 = sub_23478470C(v26, v27, &v53);
        sub_23486FCEC();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 12) = 2080;
        v52 = v20;
        swift_retain();
        v28 = sub_23486F77C();
        v52 = sub_23478470C(v28, v29, &v53);
        sub_23486FCEC();
        swift_release_n();
        swift_bridgeObjectRelease();
        v30 = v42;
        _os_log_impl(&dword_234780000, v42, (os_log_type_t)v41, "Illegal attempt to flip a temporary object to a future %s: %s", (uint8_t *)v25, 0x16u);
        v31 = v43;
        swift_arrayDestroy();
        MEMORY[0x2349466D0](v31, -1, -1);
        MEMORY[0x2349466D0](v25, -1, -1);

        (*(void (**)(uint8_t *, uint64_t))(v49 + 8))(v44, v50);
      }
      else
      {

        swift_release_n();
        swift_unknownObjectRelease_n();
        (*(void (**)(uint8_t *, uint64_t))(v49 + 8))(v19, v50);
        ObjectType = v46;
      }
    }
    else
    {
      sub_23486F5CC();
      v32 = (uint64_t)v48;
      swift_retain_n();
      v33 = sub_23486F5C0();
      v34 = sub_23486FBC0();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        v53 = v36;
        *(_DWORD *)v35 = 136315138;
        v44 = v35 + 4;
        v52 = v32;
        swift_retain();
        v37 = sub_23486F77C();
        v52 = sub_23478470C(v37, v38, &v53);
        sub_23486FCEC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_234780000, v33, v34, "This backing data has retained a temporary object ID beyond the mutations to the context %s", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2349466D0](v36, -1, -1);
        MEMORY[0x2349466D0](v35, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v11, v50);
      ObjectType = v46;
    }
  }
  return PersistentModel.persistentModelID.getter(ObjectType, v16, v51);
}

uint64_t sub_234868C3C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[3];
  int v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];

  v36 = a3;
  v11 = type metadata accessor for PersistentIdentifier(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v32 - v15;
  v17 = sub_23486F5D8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(a2 + *(int *)(v11 + 20)) + 32) == 1)
  {
    v34 = v19;
    sub_23486F5CC();
    sub_2347EB29C(a2, (uint64_t)v16);
    swift_bridgeObjectRetain_n();
    v22 = sub_23486F5C0();
    v23 = sub_23486FBC0();
    v35 = v22;
    v33 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v32[2] = a7;
      v25 = v24;
      v32[0] = swift_slowAlloc();
      v38[0] = v32[0];
      *(_DWORD *)v25 = 136315394;
      v32[1] = a5;
      sub_2347EB29C((uint64_t)v16, (uint64_t)v14);
      v26 = sub_23486F77C();
      v37 = sub_23478470C(v26, v27, v38);
      sub_23486FCEC();
      swift_bridgeObjectRelease();
      sub_2347EB0B0((uint64_t)v16);
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v37 = sub_23478470C(v36, a4, v38);
      sub_23486FCEC();
      swift_bridgeObjectRelease_n();
      v28 = v35;
      _os_log_impl(&dword_234780000, v35, (os_log_type_t)v33, "%%@ is attempting to flip a captured a temporary persistentIdentifier for %s on %s", (uint8_t *)v25, 0x16u);
      v29 = v32[0];
      swift_arrayDestroy();
      MEMORY[0x2349466D0](v29, -1, -1);
      MEMORY[0x2349466D0](v25, -1, -1);

    }
    else
    {
      sub_2347EB0B0((uint64_t)v16);

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v34);
  }
  v38[0] = sub_2347F0C44(a2);
  v38[1] = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
  swift_dynamicCast();
  return v37;
}

uint64_t sub_234868F5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v23[4];
  uint64_t v24;

  v12 = *a6;
  v13 = sub_23486F614();
  v24 = v13;
  v14 = *(_QWORD *)(a5 + 16);
  if (v14)
  {
    v15 = *(_QWORD *)(type metadata accessor for PersistentIdentifier(0) - 8);
    v16 = a5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v22 = a2;
    v17 = *(_QWORD *)(v15 + 72);
    v18 = a4;
    v19 = *(_QWORD *)(v12 + 232);
    swift_bridgeObjectRetain();
    do
    {
      v23[0] = sub_2348690C0(a7, v16, v22, a3, v18, v19, a7, a7);
      sub_23486F98C();
      sub_23486F974();
      v16 += v17;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    v20 = v24;
    a2 = v22;
  }
  else
  {
    v20 = v13;
  }
  v23[3] = sub_23486F98C();
  v23[0] = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_234860094((uint64_t)v23, a2, a3);
  return swift_release();
}

uint64_t sub_2348690C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[3];
  int v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[2];

  v37 = a3;
  v12 = type metadata accessor for PersistentIdentifier(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v33 - v16;
  v18 = sub_23486F5D8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(a2 + *(int *)(v12 + 20)) + 32) == 1)
  {
    v35 = v20;
    sub_23486F5CC();
    sub_2347EB29C(a2, (uint64_t)v17);
    swift_bridgeObjectRetain_n();
    v23 = sub_23486F5C0();
    v24 = sub_23486FBC0();
    v36 = v23;
    v34 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v33[2] = a8;
      v26 = v25;
      v33[0] = swift_slowAlloc();
      v39[0] = v33[0];
      *(_DWORD *)v26 = 136315394;
      v33[1] = a5;
      sub_2347EB29C((uint64_t)v17, (uint64_t)v15);
      v27 = sub_23486F77C();
      v38 = sub_23478470C(v27, v28, v39);
      sub_23486FCEC();
      swift_bridgeObjectRelease();
      sub_2347EB0B0((uint64_t)v17);
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v38 = sub_23478470C(v37, a4, v39);
      sub_23486FCEC();
      swift_bridgeObjectRelease_n();
      v29 = v36;
      _os_log_impl(&dword_234780000, v36, (os_log_type_t)v34, "%%@ is attempting to flip a captured a temporary persistentIdentifier for %s on %s", (uint8_t *)v26, 0x16u);
      v30 = v33[0];
      swift_arrayDestroy();
      MEMORY[0x2349466D0](v30, -1, -1);
      MEMORY[0x2349466D0](v26, -1, -1);

    }
    else
    {
      sub_2347EB0B0((uint64_t)v17);

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v35);
  }
  v39[0] = sub_2347F0C44(a2);
  v39[1] = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
  swift_dynamicCast();
  return v38;
}

uint64_t sub_2348693E0()
{
  uint64_t v0;

  swift_release();
  sub_23486D6D4(v0 + qword_2561914F8, &qword_2542576E0);
  return swift_release();
}

uint64_t sub_23486941C()
{
  uint64_t v0;

  swift_release();
  sub_23486D6D4(v0 + qword_2561914F8, &qword_2542576E0);
  swift_release();
  return v0;
}

uint64_t sub_234869460()
{
  return sub_23486AAF0((void (*)(void))sub_23486941C);
}

uint64_t type metadata accessor for _KKMDBackingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _KKMDBackingData);
}

void sub_234869478()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542576E8)
  {
    type metadata accessor for PersistentIdentifier(255);
    v0 = sub_23486FCBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542576E8);
  }
}

void sub_2348694D4()
{
  sub_23486FEA8();
  sub_23487055C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

uint64_t sub_23486957C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3 + qword_25425B000;
  v10 = type metadata accessor for PersistentIdentifier(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  sub_2347EB29C(a2, (uint64_t)v8);
  v11((uint64_t)v8, 0, 1, v10);
  swift_beginAccess();
  sub_23486D220((uint64_t)v8, v9);
  swift_endAccess();
  v14 = type metadata accessor for _ModelMetadata();
  *(_QWORD *)&v13 = a3;
  sub_2347EB0B0(a2);
  sub_234797294(&v13, (_OWORD *)(v3 + qword_25425B008));
  return v3;
}

uint64_t sub_2348696A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + qword_25425B000;
  swift_beginAccess();
  sub_23486D634(v6, (uint64_t)v5, &qword_2542576E0);
  v7 = type metadata accessor for PersistentIdentifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return sub_2348107C0((uint64_t)v5, a1);
  sub_23486D6D4((uint64_t)v5, &qword_2542576E0);
  result = sub_234870004();
  __break(1u);
  return result;
}

void sub_2348697D0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_2348698CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_2348699C8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_234869AC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

uint64_t sub_234869BC0()
{
  return sub_23486BB18(&qword_25425B000, &qword_25425B008);
}

uint64_t type metadata accessor for _DestroyedBackingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _DestroyedBackingData);
}

uint64_t sub_234869BE4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PersistentIdentifier(319);
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_234869C60()
{
  sub_2348694D4();
}

uint64_t sub_234869C6C@<X0>(uint64_t a1@<X8>)
{
  return sub_23486BB88(&qword_25425B000, a1);
}

uint64_t sub_234869C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23486BBEC(a1, a2, a3, &qword_25425B000);
}

uint64_t (*sub_234869C84())()
{
  swift_beginAccess();
  return j__swift_endAccess_2;
}

uint64_t sub_234869CD0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_234785C80(*v1 + qword_25425B008, a1);
}

void sub_234869CE8()
{
  sub_2348697D0();
}

void sub_234869CFC()
{
  sub_23486C018();
}

void sub_234869D28()
{
  sub_23486C018();
}

void sub_234869D54()
{
  sub_2348698CC();
}

void sub_234869D68()
{
  sub_2348699C8();
}

void sub_234869D7C()
{
  sub_234869AC4();
}

void sub_234869D90()
{
  sub_23486CD1C();
}

void sub_234869DBC()
{
  sub_23486CD1C();
}

void sub_234869DE8()
{
  sub_23486CD1C();
}

void sub_234869E14()
{
  sub_23486C324();
}

void sub_234869E40()
{
  sub_23486D124();
}

void sub_234869E70()
{
  sub_23486C91C();
}

uint64_t sub_234869E94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_2347EB29C(v1 + qword_25425B048, a1);
  v3 = type metadata accessor for PersistentIdentifier(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);
}

uint64_t sub_234869EE4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + *a1);
  a2[3] = type metadata accessor for _ModelMetadata();
  *a2 = v4;
  return swift_retain();
}

void sub_234869F1C()
{
  sub_234870004();
  __break(1u);
}

uint64_t sub_234869F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  NSObject *v24;
  uint8_t *v25;
  uint64_t v26;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v3;
  v7 = type metadata accessor for PersistentIdentifier(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  v13 = sub_23486F5D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = qword_25425B050;
  type metadata accessor for _ModelMetadata();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 48) = 0u;
  *(_OWORD *)(v18 + 64) = 0u;
  *(_QWORD *)(v4 + v17) = v18;
  *(_BYTE *)(v18 + 80) = 1;
  if (*(_BYTE *)(*(_QWORD *)(a2 + *(int *)(v7 + 20)) + 32) == 1)
  {
    v33 = v14;
    sub_23486F5CC();
    sub_2347EB29C(a2, (uint64_t)v12);
    v19 = sub_23486F5C0();
    v20 = sub_23486FBC0();
    v32 = v19;
    v31 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v35 = v29;
      v30 = v13;
      v28 = v21;
      *(_DWORD *)v21 = 136315138;
      sub_2347EB29C((uint64_t)v12, (uint64_t)v10);
      v22 = sub_23486F77C();
      v34 = sub_23478470C(v22, v23, &v35);
      sub_23486FCEC();
      swift_bridgeObjectRelease();
      sub_2347EB0B0((uint64_t)v12);
      v24 = v32;
      v25 = v28;
      _os_log_impl(&dword_234780000, v32, (os_log_type_t)v31, "Illegal attempt to create a full future for a temporary identifier. These won't be resolvable after the temporary object is deallocated: %s", v28, 0xCu);
      v26 = v29;
      swift_arrayDestroy();
      MEMORY[0x2349466D0](v26, -1, -1);
      MEMORY[0x2349466D0](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v30);
    }
    else
    {
      sub_2347EB0B0((uint64_t)v12);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v13);
    }
  }
  sub_2348107C0(a2, v4 + qword_25425B048);
  *(_QWORD *)(v4 + qword_25425B040) = a3;
  *(_QWORD *)(*(_QWORD *)(v4 + v17) + 16) = a3;
  swift_retain();
  swift_release();
  return v4;
}

void sub_23486A280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

void sub_23486A488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

void sub_23486A690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

void sub_23486A898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

uint64_t sub_23486AAA0()
{
  uint64_t v0;

  sub_2347EB0B0(v0 + qword_25425B048);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_23486AAE4()
{
  return sub_23486AAF0((void (*)(void))sub_23486AAA0);
}

uint64_t sub_23486AAF0(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _FullFutureBackingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _FullFutureBackingData);
}

uint64_t sub_23486AB24()
{
  return swift_initClassMetadata2();
}

void sub_23486AB58()
{
  sub_234869F1C();
}

uint64_t sub_23486AB64@<X0>(uint64_t a1@<X8>)
{
  return sub_234869E94(a1);
}

void sub_23486AB84()
{
  sub_234870004();
  __break(1u);
}

void (*sub_23486ABDC())()
{
  uint64_t v0;
  void *v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  v1 = malloc(*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64));
  sub_234869E94((uint64_t)v1);
  return sub_23486AC28;
}

void sub_23486AC28()
{
  sub_234870004();
  __break(1u);
}

uint64_t sub_23486AC80@<X0>(_QWORD *a1@<X8>)
{
  return sub_234869EE4(&qword_25425B050, a1);
}

void sub_23486ACA8()
{
  sub_23486A280();
}

void sub_23486ACBC()
{
  sub_23486C118();
}

void sub_23486ACE8()
{
  sub_23486C118();
}

void sub_23486AD14()
{
  sub_23486A690();
}

void sub_23486AD28()
{
  sub_23486A898();
}

void sub_23486AD3C()
{
  sub_23486A488();
}

void sub_23486AD50()
{
  sub_23486CE1C();
}

void sub_23486AD7C()
{
  sub_23486CE1C();
}

void sub_23486ADA8()
{
  sub_23486CE1C();
}

void sub_23486ADD4()
{
  sub_23486C420();
}

void sub_23486AE00()
{
  sub_23486D268();
}

void sub_23486AE30()
{
  sub_23486CA18();
}

void sub_23486AE54()
{
  sub_23486FEA8();
  sub_234870520();
  sub_2348702BC();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

void sub_23486AF1C()
{
  sub_23486FEA8();
  sub_234870520();
  sub_2348702BC();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

void sub_23486AFE4()
{
  sub_23486FEA8();
  sub_234870520();
  sub_2348702BC();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

void sub_23486B0AC()
{
  sub_23486FEA8();
  sub_234870520();
  sub_2348702BC();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

void sub_23486B174()
{
  sub_23486FEA8();
  sub_234870520();
  sub_2348702BC();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

void sub_23486B23C()
{
  sub_23486FEA8();
  sub_234870520();
  sub_2348702BC();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

uint64_t sub_23486B31C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _NullBackingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _NullBackingData);
}

void sub_23486B340()
{
  unint64_t v0;

  sub_234869478();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

void sub_23486B3B4()
{
  sub_23486FEA8();
  sub_23487055C();
  swift_bridgeObjectRelease();
  sub_23486F7DC();
  sub_234870004();
  __break(1u);
}

uint64_t sub_23486B45C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2 + qword_256191500;
  v8 = type metadata accessor for PersistentIdentifier(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  sub_2347EB29C(a2, (uint64_t)v6);
  v9((uint64_t)v6, 0, 1, v8);
  swift_beginAccess();
  sub_23486D220((uint64_t)v6, v7);
  swift_endAccess();
  v10 = type metadata accessor for _ModelMetadata();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(_BYTE *)(v11 + 80) = 1;
  v14 = v10;
  *(_QWORD *)&v13 = v11;
  sub_2347EB0B0(a2);
  sub_234797294(&v13, (_OWORD *)(v2 + qword_256191508));
  return v2;
}

uint64_t sub_23486B5A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2 + qword_256191500;
  swift_beginAccess();
  sub_23486D634(v7, (uint64_t)v6, &qword_2542576E0);
  v8 = type metadata accessor for PersistentIdentifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_2348107C0((uint64_t)v6, a1);
  sub_23486D6D4((uint64_t)v6, &qword_2542576E0);
  v10[1] = 0;
  v10[2] = 0xE000000000000000;
  sub_23486FEA8();
  v10[0] = v2;
  sub_2348702BC();
  sub_23486F7DC();
  result = sub_234870004();
  __break(1u);
  return result;
}

void sub_23486B714()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486B810()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486B90C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486BA08()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

uint64_t sub_23486BB04()
{
  return sub_23486BB18(&qword_256191500, &qword_256191508);
}

uint64_t sub_23486BB18(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  sub_23486D6D4(v2 + *a1, &qword_2542576E0);
  __swift_destroy_boxed_opaque_existential_0Tm_1(v2 + *a2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _InvalidFutureBackingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _InvalidFutureBackingData);
}

void sub_23486BB70()
{
  sub_23486B3B4();
}

uint64_t sub_23486BB7C@<X0>(uint64_t a1@<X8>)
{
  return sub_23486BB88(&qword_256191500, a1);
}

uint64_t sub_23486BB88@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;

  v4 = *v2 + *a1;
  swift_beginAccess();
  return sub_23486D634(v4, a2, &qword_2542576E0);
}

uint64_t sub_23486BBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23486BBEC(a1, a2, a3, &qword_256191500);
}

uint64_t sub_23486BBEC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;

  v6 = *v4 + *a4;
  swift_beginAccess();
  sub_23486D220(a1, v6);
  return swift_endAccess();
}

uint64_t (*sub_23486BC44())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_2;
}

uint64_t sub_23486BC8C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_234785C80(*v1 + qword_256191508, a1);
}

void sub_23486BCA4()
{
  sub_23486B714();
}

void sub_23486BCB8()
{
  sub_23486BF18();
}

void sub_23486BCE4()
{
  sub_23486BF18();
}

void sub_23486BD10()
{
  sub_23486B810();
}

void sub_23486BD24()
{
  sub_23486B90C();
}

void sub_23486BD38()
{
  sub_23486BA08();
}

void sub_23486BD4C()
{
  sub_23486D028();
}

void sub_23486BD74()
{
  sub_23486C820();
}

void sub_23486BD9C()
{
  sub_23486C724();
}

void sub_23486BDC4()
{
  sub_23486C628();
}

void sub_23486BDF0()
{
  sub_23486D470();
}

void sub_23486BE20()
{
  sub_23486CC20();
}

uint64_t sub_23486BE44(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

_QWORD *sub_23486BE4C(_QWORD *a1)
{
  return sub_23479E084(0, a1[2], 0, a1);
}

void sub_23486BE60(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23487001C();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x234945A28);
}

_QWORD *sub_23486BEC8(unint64_t a1)
{
  return sub_23479E894(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_23486BEDC(_QWORD *a1)
{
  return sub_23479E9D8(0, a1[2], 0, a1);
}

_QWORD *sub_23486BEF0(_QWORD *a1)
{
  return sub_23479EAF8(0, a1[2], 0, a1);
}

_QWORD *sub_23486BF04(_QWORD *a1)
{
  return sub_23479EF28(0, a1[2], 0, a1);
}

void sub_23486BF18()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486C018()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486C118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

void sub_23486C324()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486C420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

void sub_23486C628()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486C724()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486C820()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486C91C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486CA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

void sub_23486CC20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486CD1C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486CE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

void sub_23486D028()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

void sub_23486D124()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348696A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

uint64_t sub_23486D220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542576E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_23486D268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25618A450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23486FEA8();
  v15 = v13;
  v16 = v14;
  sub_23486F7DC();
  sub_2347EB29C(v0 + qword_25425B048, (uint64_t)v6);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v6);
  sub_23486F7DC();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + qword_25425B050) + 16);
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC9SwiftData12ModelContext_editingState;
    swift_beginAccess();
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
    v11 = 0;
  }
  else
  {
    v9 = sub_23486F4AC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v3, v11, 1, v9);
  sub_23486F77C();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
  sub_234870004();
  __break(1u);
}

void sub_23486D470()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[2];

  v0 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_23486B5A0((uint64_t)v2);
  sub_23486FF74();
  sub_2347EB0B0((uint64_t)v2);
  sub_234870004();
  __break(1u);
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0Tm_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23486D5C8(uint64_t a1)
{
  uint64_t *v1;

  return sub_234868464(a1, v1[2], v1[3], v1[4]) & 1;
}

unint64_t sub_23486D5EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542575D0;
  if (!qword_2542575D0)
  {
    v1 = type metadata accessor for Schema.Relationship();
    result = MEMORY[0x2349465EC](&protocol conformance descriptor for Schema.Relationship, v1);
    atomic_store(result, (unint64_t *)&qword_2542575D0);
  }
  return result;
}

uint64_t sub_23486D634(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23486D678(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23486D690(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23486D6D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23486D710()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_23486D750()
{
  type metadata accessor for PersistentIdentifier(255);
  swift_getTupleTypeMetadata2();
  sub_23486F92C();
  sub_23486EF7C(&qword_254258050, type metadata accessor for PersistentIdentifier, (uint64_t)&protocol conformance descriptor for PersistentIdentifier);
  return sub_23486F650();
}

uint64_t sub_23486D7D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FetchResultsCollection.startIndex.getter()
{
  return 0;
}

uint64_t FetchResultsCollection.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

unint64_t FetchResultsCollection.subscript.getter(unint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *v2;
    if (*(_QWORD *)(*v2 + 16) > result)
    {
      v5 = v2[1];
      sub_23486D8A0(v3 + 40 * result + 32, (uint64_t)v8);
      v6 = v9;
      v7 = v10;
      __swift_project_boxed_opaque_existential_1(v8, v9);
      (*(void (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 8))(*(_QWORD *)(a2 + 16), v5, *(_QWORD *)(a2 + 16), v6, v7);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23486D8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_23486D8E4()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_23486D8F4()
{
  return sub_23486DBB0(&qword_25618A198, MEMORY[0x24BEE1BD0]);
}

uint64_t sub_23486D918(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>);
  return MEMORY[0x2349465EC](MEMORY[0x24BEE4230], a1, &v3);
}

uint64_t sub_23486D960()
{
  return sub_23486FAB8();
}

uint64_t sub_23486D970()
{
  return sub_23486FAD0();
}

void sub_23486D97C()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_23486D98C()
{
  return sub_23486DBB0(&qword_25618A190, MEMORY[0x24BEE1BA8]);
}

uint64_t sub_23486D9B0(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>);
  return MEMORY[0x2349465EC](MEMORY[0x24BEE4218], a1, &v3);
}

uint64_t sub_23486D9F8()
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>);
  return sub_23486FAAC();
}

_QWORD *sub_23486DA48(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23486DE4C(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE1880]);
}

uint64_t sub_23486DA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>, a3);
  return sub_23486FAB8();
}

uint64_t sub_23486DAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>, a4);
  return sub_23486FA94();
}

uint64_t sub_23486DB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>, a3);
  return sub_23486FAD0();
}

void sub_23486DB70()
{
  JUMPOUT(0x2349465ECLL);
}

uint64_t sub_23486DB80()
{
  return MEMORY[0x24BEE1780];
}

uint64_t sub_23486DB8C()
{
  return sub_23486DBB0(&qword_25618A178, MEMORY[0x24BEE1BD8]);
}

uint64_t sub_23486DBB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25618A180);
    v6 = sub_23485EE50();
    v7[0] = MEMORY[0x24BEE17A8];
    v7[1] = v6;
    result = MEMORY[0x2349465EC](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23486DC1C()
{
  JUMPOUT(0x2349465ECLL);
}

void sub_23486DC2C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23486DC34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FetchResultsCollection.endIndex.getter();
  *a1 = result;
  return result;
}

void (*sub_23486DC58(_QWORD *a1, unint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_23486DCE0(v6, *a2, a3);
  return sub_23486DCB4;
}

void sub_23486DCB4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_23486DCE0(_QWORD *a1, unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = malloc(*(_QWORD *)(v6 + 64));
  FetchResultsCollection.subscript.getter(a2, a3);
  return sub_23486DD4C;
}

void sub_23486DD4C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_23486DD80(uint64_t a1)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>, a1);
  return sub_23486FAC4();
}

void sub_23486DDD4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_23486DDF0()
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>);
  return sub_23486FAA0();
}

_QWORD *sub_23486DE40(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23486DE4C(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE1878]);
}

_QWORD *sub_23486DE4C(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>);
  result = a4(&v9, a1, a2, v7, MEMORY[0x24BEE17A8]);
  *a1 = v9;
  return result;
}

void sub_23486DEB0()
{
  JUMPOUT(0x2349465ECLL);
}

__n128 sub_23486DEC0@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_23486DED0(uint64_t a1)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>, a1);
  return sub_23486FB00();
}

uint64_t sub_23486DF04()
{
  return 2;
}

uint64_t sub_23486DF0C(uint64_t a1)
{
  MEMORY[0x2349465EC](&protocol conformance descriptor for FetchResultsCollection<A>, a1);
  return sub_23486FB0C();
}

uint64_t sub_23486DF44()
{
  return sub_23486F86C();
}

uint64_t sub_23486DF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[2];

  v1 = type metadata accessor for PersistentIdentifier(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_dynamicCastMetatype())
  {
    sub_23486EEFC(v0, (uint64_t)v3, type metadata accessor for PersistentIdentifier);
    return swift_dynamicCast();
  }
  else
  {
    v5[0] = 0;
    v5[1] = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486F7DC();
    sub_23486F7DC();
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_23486E0D4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23486E0E0()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_23486E10C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_23486E140(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_23486E19C(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_23486E1D8(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23486E220(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FetchResultsCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchResultsCollection);
}

uint64_t sub_23486E268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = swift_conformsToProtocol2();
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = a1;
  else
    v6 = 0;
  if (v6)
  {
    sub_23486E3B8(v4, a2, v6, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542576D8);
    return swift_dynamicCast();
  }
  else
  {
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486F7DC();
    sub_23486F7DC();
    result = sub_234870004();
    __break(1u);
  }
  return result;
}

uint64_t sub_23486E3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  char isEscapingClosureAtFileLocation;
  uint64_t v14;
  uint64_t result;
  _QWORD aBlock[6];
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v8 = MEMORY[0x23494676C](v4);
  if (!v8)
    goto LABEL_6;
  v9 = (void *)v8;
  v19 = 0;
  sub_234796C74(v4, (uint64_t)&v17);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  sub_23486EE38((uint64_t)&v17, (uint64_t)(v10 + 4));
  v10[7] = a2;
  v10[8] = &v19;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23486EE70;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_23486EE90;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2347976C8;
  aBlock[3] = &block_descriptor_4;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v12);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_234796C74(v4, (uint64_t)aBlock);
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_23486FEA8();
    sub_23486F7DC();
    sub_23486FF74();
    goto LABEL_8;
  }
  v14 = v19;
  if (v19)
  {
    swift_unknownObjectRetain();

    swift_release();
    swift_unknownObjectRelease();
    return v14;
  }
  sub_234796C74(v4, (uint64_t)aBlock);
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_23486FEA8();
  sub_23486F7DC();
  sub_2348702B0();
  sub_23486F7DC();
  swift_bridgeObjectRelease();
LABEL_8:
  result = sub_234870004();
  __break(1u);
  return result;
}

uint64_t sub_23486E680(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v49[3];
  char *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  unint64_t v61;

  v57 = a2;
  v58 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254257A70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DefaultSnapshot(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PersistentIdentifier(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v55 = v11;
  v56 = (char *)v49 - v19;
  v21 = *(_QWORD *)(a1 + 8);
  v20 = *(_QWORD *)(a1 + 16);
  v54 = v12;
  if ((v21 & 0xC000000000000001) == 0)
  {
    if ((v20 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v20 < *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v22 = *(id *)(v21 + 8 * v20 + 32);
      goto LABEL_5;
    }
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x23486EC08);
  }
  v22 = (id)MEMORY[0x234945A1C](v20);
LABEL_5:
  v23 = v22;
  v24 = objc_msgSend(v22, sel_objectID);
  type metadata accessor for PersistentIdentifierImplementation(0);
  swift_allocObject();
  v25 = v24;
  v26 = sub_234854878(v25);
  v27 = (uint64_t)v56;
  *(_QWORD *)&v56[*(int *)(v15 + 20)] = v26;
  v28 = v26 + OBJC_IVAR____TtC9SwiftData34PersistentIdentifierImplementation_URIRepresentation;
  v29 = sub_23486F440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);

  v30 = a4;
  v31 = sub_2347F1D0C(v27);
  if (!v31)
  {
    v50 = v10;
    v53 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254258380);
    v33 = (_QWORD *)swift_allocObject();
    v34 = MEMORY[0x24BEE4B00];
    v33[2] = MEMORY[0x24BEE4B00];
    v33[3] = v34;
    v33[4] = 0;
    v35 = __swift_instantiateConcreteTypeFromMangledName(qword_254257B20);
    v36 = (uint64_t)v14;
    v37 = (_QWORD *)swift_allocObject();
    v38 = MEMORY[0x24BEE4AF8];
    v37[2] = MEMORY[0x24BEE4AF8];
    v39 = v23;
    swift_retain();
    v37[3] = sub_2347EB5E8(v38);
    v37[4] = v39;
    v49[2] = v39;
    v52 = v33;
    v37[5] = v33;
    v60 = v35;
    v61 = sub_23486EEB0();
    v59[0] = v37;
    v51 = v37;
    swift_retain();
    DefaultSnapshot.init(from:)(v59, v36);
    v49[1] = 0;
    v40 = v55;
    v41 = v36 + *(int *)(v55 + 20);
    sub_23486EEFC(v41, (uint64_t)v18, type metadata accessor for PersistentIdentifier);
    v42 = v36;
    v43 = (uint64_t)v50;
    sub_23486EEFC(v42, (uint64_t)v50, type metadata accessor for DefaultSnapshot);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v43, 0, 1, v40);
    swift_beginAccess();
    sub_2347C6D04(v43, (uint64_t)v18);
    swift_endAccess();
    swift_beginAccess();
    v44 = (void *)sub_2347CEFAC(v41);
    swift_endAccess();

    v45 = v58;
    type metadata accessor for _KKMDBackingData(0, v30, v58, v46);
    sub_23486EEFC(v41, (uint64_t)v18, type metadata accessor for PersistentIdentifier);
    sub_2348622AC(v30, (uint64_t)v18);
    v47 = sub_23486EF7C(&qword_2542582C8, type metadata accessor for DefaultSnapshot, (uint64_t)&protocol conformance descriptor for DefaultSnapshot);
    v59[0] = v30;
    v59[1] = v40;
    v59[2] = v45;
    v60 = v47;
    type metadata accessor for BackingDataEncoder();
  }
  v32 = v31;
  sub_23486EF40(v27, type metadata accessor for PersistentIdentifier);

  *a3 = v32;
  return swift_unknownObjectRelease();
}

uint64_t initializeBufferWithCopyOfBuffer for CoreDataFetchResultsCollectionElement(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CoreDataFetchResultsCollectionElement()
{
  swift_unknownObjectWeakDestroy();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreDataFetchResultsCollectionElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectWeakCopyInit();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreDataFetchResultsCollectionElement(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for CoreDataFetchResultsCollectionElement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;

  v3 = swift_unknownObjectWeakTakeInit();
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(v3 + 8) = result;
  return result;
}

uint64_t assignWithTake for CoreDataFetchResultsCollectionElement(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDataFetchResultsCollectionElement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDataFetchResultsCollectionElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDataFetchResultsCollectionElement()
{
  return &type metadata for CoreDataFetchResultsCollectionElement;
}

uint64_t sub_23486EE04()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23486EE38(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_23486EE70()
{
  uint64_t v0;

  return sub_23486E680(v0 + 32, *(_QWORD *)(v0 + 56), *(uint64_t **)(v0 + 64), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23486EE80()
{
  return swift_deallocObject();
}

uint64_t sub_23486EE90()
{
  uint64_t v0;

  return sub_2347976A8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

unint64_t sub_23486EEB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254257B18;
  if (!qword_254257B18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254257B20);
    result = MEMORY[0x2349465EC](&unk_234879184, v1);
    atomic_store(result, (unint64_t *)&qword_254257B18);
  }
  return result;
}

uint64_t sub_23486EEFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23486EF40(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23486EF7C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2349465EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23486EFCC()
{
  return MEMORY[0x24BDCAF00]();
}

uint64_t sub_23486EFD8()
{
  return MEMORY[0x24BDCAF08]();
}

uint64_t sub_23486EFE4()
{
  return MEMORY[0x24BDCAF10]();
}

uint64_t sub_23486EFF0()
{
  return MEMORY[0x24BDCAF28]();
}

uint64_t sub_23486EFFC()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23486F008()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23486F014()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23486F020()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23486F02C()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23486F038()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23486F044()
{
  return MEMORY[0x24BDCB630]();
}

uint64_t sub_23486F050()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23486F05C()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_23486F068()
{
  return MEMORY[0x24BDCB918]();
}

uint64_t sub_23486F074()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_23486F080()
{
  return MEMORY[0x24BDCBEA0]();
}

uint64_t sub_23486F08C()
{
  return MEMORY[0x24BDCBEA8]();
}

uint64_t sub_23486F098()
{
  return MEMORY[0x24BDCBEB0]();
}

uint64_t sub_23486F0A4()
{
  return MEMORY[0x24BDCBEB8]();
}

uint64_t sub_23486F0B0()
{
  return MEMORY[0x24BDCBEC0]();
}

uint64_t sub_23486F0BC()
{
  return MEMORY[0x24BDCBF10]();
}

uint64_t sub_23486F0C8()
{
  return MEMORY[0x24BDCC6E8]();
}

uint64_t sub_23486F0D4()
{
  return MEMORY[0x24BDCC6F0]();
}

uint64_t sub_23486F0E0()
{
  return MEMORY[0x24BDCCA00]();
}

uint64_t sub_23486F0EC()
{
  return MEMORY[0x24BDCCC68]();
}

uint64_t sub_23486F0F8()
{
  return MEMORY[0x24BDCCC70]();
}

uint64_t sub_23486F104()
{
  return MEMORY[0x24BDCCC88]();
}

uint64_t sub_23486F110()
{
  return MEMORY[0x24BDCCC90]();
}

uint64_t sub_23486F11C()
{
  return MEMORY[0x24BDCCC98]();
}

uint64_t sub_23486F128()
{
  return MEMORY[0x24BDCCCB0]();
}

uint64_t sub_23486F134()
{
  return MEMORY[0x24BDCCCC0]();
}

uint64_t sub_23486F140()
{
  return MEMORY[0x24BDCCCC8]();
}

uint64_t sub_23486F14C()
{
  return MEMORY[0x24BDCCD00]();
}

uint64_t sub_23486F158()
{
  return MEMORY[0x24BDCCD18]();
}

uint64_t sub_23486F164()
{
  return MEMORY[0x24BDCCD38]();
}

uint64_t sub_23486F170()
{
  return MEMORY[0x24BDCCD40]();
}

uint64_t sub_23486F17C()
{
  return MEMORY[0x24BDCCD58]();
}

uint64_t sub_23486F188()
{
  return MEMORY[0x24BDCCD60]();
}

uint64_t sub_23486F194()
{
  return MEMORY[0x24BDCCD68]();
}

uint64_t sub_23486F1A0()
{
  return MEMORY[0x24BDCCDE0]();
}

uint64_t sub_23486F1AC()
{
  return MEMORY[0x24BDCCDE8]();
}

uint64_t sub_23486F1B8()
{
  return MEMORY[0x24BDCCE08]();
}

uint64_t sub_23486F1C4()
{
  return MEMORY[0x24BDCCE10]();
}

uint64_t sub_23486F1D0()
{
  return MEMORY[0x24BDCCE18]();
}

uint64_t sub_23486F1DC()
{
  return MEMORY[0x24BDCCE30]();
}

uint64_t sub_23486F1E8()
{
  return MEMORY[0x24BDCCE70]();
}

uint64_t sub_23486F1F4()
{
  return MEMORY[0x24BDCCE78]();
}

uint64_t sub_23486F200()
{
  return MEMORY[0x24BDCCE80]();
}

uint64_t sub_23486F20C()
{
  return MEMORY[0x24BDCCED8]();
}

uint64_t sub_23486F218()
{
  return MEMORY[0x24BDCCEE0]();
}

uint64_t sub_23486F224()
{
  return MEMORY[0x24BDCCF40]();
}

uint64_t sub_23486F230()
{
  return MEMORY[0x24BDCCF68]();
}

uint64_t sub_23486F23C()
{
  return MEMORY[0x24BDCCF70]();
}

uint64_t sub_23486F248()
{
  return MEMORY[0x24BDCCF78]();
}

uint64_t sub_23486F254()
{
  return MEMORY[0x24BDCCF90]();
}

uint64_t sub_23486F260()
{
  return MEMORY[0x24BDCCF98]();
}

uint64_t sub_23486F26C()
{
  return MEMORY[0x24BDCCFA0]();
}

uint64_t sub_23486F278()
{
  return MEMORY[0x24BDCCFD8]();
}

uint64_t sub_23486F284()
{
  return MEMORY[0x24BDCCFE0]();
}

uint64_t sub_23486F290()
{
  return MEMORY[0x24BDCCFE8]();
}

uint64_t sub_23486F29C()
{
  return MEMORY[0x24BDCD040]();
}

uint64_t sub_23486F2A8()
{
  return MEMORY[0x24BDCD048]();
}

uint64_t sub_23486F2B4()
{
  return MEMORY[0x24BDCD0D8]();
}

uint64_t sub_23486F2C0()
{
  return MEMORY[0x24BDCD0F8]();
}

uint64_t sub_23486F2CC()
{
  return MEMORY[0x24BDCD100]();
}

uint64_t sub_23486F2D8()
{
  return MEMORY[0x24BDCD110]();
}

uint64_t sub_23486F2E4()
{
  return MEMORY[0x24BDCD138]();
}

uint64_t sub_23486F2F0()
{
  return MEMORY[0x24BDCD140]();
}

uint64_t sub_23486F2FC()
{
  return MEMORY[0x24BDCD148]();
}

uint64_t sub_23486F308()
{
  return MEMORY[0x24BDCD160]();
}

uint64_t sub_23486F314()
{
  return MEMORY[0x24BDCD188]();
}

uint64_t sub_23486F320()
{
  return MEMORY[0x24BDCD190]();
}

uint64_t sub_23486F32C()
{
  return MEMORY[0x24BDCD1A0]();
}

uint64_t sub_23486F338()
{
  return MEMORY[0x24BDCD1A8]();
}

uint64_t sub_23486F344()
{
  return MEMORY[0x24BDCD1C8]();
}

uint64_t sub_23486F350()
{
  return MEMORY[0x24BDCD208]();
}

uint64_t sub_23486F35C()
{
  return MEMORY[0x24BDCD218]();
}

uint64_t sub_23486F368()
{
  return MEMORY[0x24BDCD238]();
}

uint64_t sub_23486F374()
{
  return MEMORY[0x24BDCD240]();
}

uint64_t sub_23486F380()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23486F38C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23486F398()
{
  return MEMORY[0x24BDCD508]();
}

uint64_t sub_23486F3A4()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_23486F3B0()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_23486F3BC()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_23486F3C8()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_23486F3D4()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_23486F3E0()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23486F3EC()
{
  return MEMORY[0x24BDCD8E8]();
}

uint64_t sub_23486F3F8()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_23486F404()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_23486F410()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23486F41C()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_23486F428()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_23486F434()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_23486F440()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23486F44C()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_23486F458()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_23486F464()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23486F470()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_23486F47C()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23486F488()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23486F494()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23486F4A0()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23486F4AC()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23486F4B8()
{
  return MEMORY[0x24BDCF6C0]();
}

uint64_t sub_23486F4C4()
{
  return MEMORY[0x24BDCF6C8]();
}

uint64_t sub_23486F4D0()
{
  return MEMORY[0x24BDCF6D0]();
}

uint64_t sub_23486F4DC()
{
  return MEMORY[0x24BDCF6D8]();
}

uint64_t sub_23486F4E8()
{
  return MEMORY[0x24BDCF6E8]();
}

uint64_t sub_23486F4F4()
{
  return MEMORY[0x24BDCF710]();
}

uint64_t sub_23486F500()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_23486F50C()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_23486F518()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_23486F524()
{
  return MEMORY[0x24BE80F38]();
}

uint64_t sub_23486F530()
{
  return MEMORY[0x24BE80F70]();
}

uint64_t sub_23486F53C()
{
  return MEMORY[0x24BE80F80]();
}

uint64_t sub_23486F548()
{
  return MEMORY[0x24BE80FC0]();
}

uint64_t sub_23486F554()
{
  return MEMORY[0x24BE81068]();
}

uint64_t sub_23486F560()
{
  return MEMORY[0x24BE7D010]();
}

uint64_t sub_23486F56C()
{
  return MEMORY[0x24BE7D018]();
}

uint64_t sub_23486F578()
{
  return MEMORY[0x24BE7D020]();
}

uint64_t sub_23486F584()
{
  return MEMORY[0x24BE7D028]();
}

uint64_t sub_23486F590()
{
  return MEMORY[0x24BE7D030]();
}

uint64_t sub_23486F59C()
{
  return MEMORY[0x24BE7D038]();
}

uint64_t sub_23486F5A8()
{
  return MEMORY[0x24BE7D040]();
}

uint64_t sub_23486F5B4()
{
  return MEMORY[0x24BE7D048]();
}

uint64_t sub_23486F5C0()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23486F5CC()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23486F5D8()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23486F5E4()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23486F5F0()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23486F5FC()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23486F608()
{
  return MEMORY[0x24BEE01A8]();
}

uint64_t sub_23486F614()
{
  return MEMORY[0x24BEE01B8]();
}

uint64_t sub_23486F620()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23486F62C()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23486F638()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23486F644()
{
  return MEMORY[0x24BEE02A8]();
}

uint64_t sub_23486F650()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_23486F65C()
{
  return MEMORY[0x24BEE0300]();
}

uint64_t sub_23486F668()
{
  return MEMORY[0x24BEE0398]();
}

uint64_t sub_23486F674()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_23486F680()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_23486F68C()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_23486F698()
{
  return MEMORY[0x24BEE0500]();
}

uint64_t sub_23486F6A4()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23486F6B0()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23486F6BC()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23486F6C8()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_23486F6D4()
{
  return MEMORY[0x24BEE07F8]();
}

uint64_t sub_23486F6E0()
{
  return MEMORY[0x24BEE0800]();
}

uint64_t sub_23486F6EC()
{
  return MEMORY[0x24BEE0808]();
}

uint64_t sub_23486F6F8()
{
  return MEMORY[0x24BEE0878]();
}

uint64_t sub_23486F704()
{
  return MEMORY[0x24BEE08B8]();
}

uint64_t sub_23486F710()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23486F71C()
{
  return MEMORY[0x24BDCF9A0]();
}

uint64_t sub_23486F728()
{
  return MEMORY[0x24BDCF9B0]();
}

uint64_t sub_23486F734()
{
  return MEMORY[0x24BDCF9B8]();
}

uint64_t sub_23486F740()
{
  return MEMORY[0x24BDCF9C8]();
}

uint64_t sub_23486F74C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23486F758()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23486F764()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23486F770()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23486F77C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23486F788()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_23486F794()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_23486F7A0()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23486F7AC()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23486F7B8()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23486F7C4()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_23486F7D0()
{
  return MEMORY[0x24BEE0B88]();
}

uint64_t sub_23486F7DC()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23486F7E8()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_23486F7F4()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23486F800()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_23486F80C()
{
  return MEMORY[0x24BEE0CD0]();
}

uint64_t sub_23486F818()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_23486F824()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23486F830()
{
  return MEMORY[0x24BDCFB58]();
}

uint64_t sub_23486F83C()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23486F848()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_23486F854()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_23486F860()
{
  return MEMORY[0x24BEE0E50]();
}

uint64_t sub_23486F86C()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_23486F878()
{
  return MEMORY[0x24BEE0E98]();
}

uint64_t sub_23486F884()
{
  return MEMORY[0x24BEE0EC0]();
}

uint64_t sub_23486F890()
{
  return MEMORY[0x24BEE0EE0]();
}

uint64_t sub_23486F89C()
{
  return MEMORY[0x24BEE0EE8]();
}

uint64_t sub_23486F8A8()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t sub_23486F8B4()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23486F8C0()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23486F8CC()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23486F8D8()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23486F8E4()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23486F8F0()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23486F8FC()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23486F908()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_23486F914()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23486F920()
{
  return MEMORY[0x24BEE1168]();
}

uint64_t sub_23486F92C()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_23486F938()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23486F944()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_23486F950()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23486F95C()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_23486F968()
{
  return MEMORY[0x24BEE11F0]();
}

uint64_t sub_23486F974()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_23486F980()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_23486F98C()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_23486F998()
{
  return MEMORY[0x24BEE1268]();
}

uint64_t sub_23486F9A4()
{
  return MEMORY[0x24BEE1278]();
}

uint64_t sub_23486F9B0()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_23486F9BC()
{
  return MEMORY[0x24BEE1290]();
}

uint64_t sub_23486F9C8()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t sub_23486F9D4()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_23486F9E0()
{
  return MEMORY[0x24BEE6850]();
}

uint64_t sub_23486F9EC()
{
  return MEMORY[0x24BEE6858]();
}

uint64_t sub_23486F9F8()
{
  return MEMORY[0x24BEE6918]();
}

uint64_t sub_23486FA04()
{
  return MEMORY[0x24BEE6B78]();
}

uint64_t sub_23486FA10()
{
  return MEMORY[0x24BEE6B80]();
}

uint64_t sub_23486FA1C()
{
  return MEMORY[0x24BEE6B90]();
}

uint64_t sub_23486FA28()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_23486FA34()
{
  return MEMORY[0x24BEE1478]();
}

uint64_t sub_23486FA40()
{
  return MEMORY[0x24BDCFC80]();
}

uint64_t sub_23486FA4C()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_23486FA58()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_23486FA64()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_23486FA70()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23486FA7C()
{
  return MEMORY[0x24BEE1608]();
}

uint64_t sub_23486FA88()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_23486FA94()
{
  return MEMORY[0x24BEE1870]();
}

uint64_t sub_23486FAA0()
{
  return MEMORY[0x24BEE1878]();
}

uint64_t sub_23486FAAC()
{
  return MEMORY[0x24BEE1880]();
}

uint64_t sub_23486FAB8()
{
  return MEMORY[0x24BEE1888]();
}

uint64_t sub_23486FAC4()
{
  return MEMORY[0x24BEE1890]();
}

uint64_t sub_23486FAD0()
{
  return MEMORY[0x24BEE1898]();
}

uint64_t sub_23486FADC()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_23486FAE8()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_23486FAF4()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_23486FB00()
{
  return MEMORY[0x24BEE1950]();
}

uint64_t sub_23486FB0C()
{
  return MEMORY[0x24BEE1970]();
}

uint64_t sub_23486FB18()
{
  return MEMORY[0x24BEE1978]();
}

uint64_t sub_23486FB24()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_23486FB30()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_23486FB3C()
{
  return MEMORY[0x24BEE1A18]();
}

uint64_t sub_23486FB48()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_23486FB54()
{
  return MEMORY[0x24BEE1B28]();
}

uint64_t sub_23486FB60()
{
  return MEMORY[0x24BEE1B68]();
}

uint64_t sub_23486FB6C()
{
  return MEMORY[0x24BDCFDE8]();
}

uint64_t sub_23486FB78()
{
  return MEMORY[0x24BDCFDF0]();
}

uint64_t sub_23486FB84()
{
  return MEMORY[0x24BDCFDF8]();
}

uint64_t sub_23486FB90()
{
  return MEMORY[0x24BDCFE00]();
}

uint64_t sub_23486FB9C()
{
  return MEMORY[0x24BDCFE30]();
}

uint64_t sub_23486FBA8()
{
  return MEMORY[0x24BDCFF58]();
}

uint64_t sub_23486FBB4()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23486FBC0()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23486FBCC()
{
  return MEMORY[0x24BDBB328]();
}

uint64_t sub_23486FBD8()
{
  return MEMORY[0x24BDBB330]();
}

uint64_t sub_23486FBE4()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_23486FBF0()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_23486FBFC()
{
  return MEMORY[0x24BDBB348]();
}

uint64_t sub_23486FC08()
{
  return MEMORY[0x24BDBB350]();
}

uint64_t sub_23486FC14()
{
  return MEMORY[0x24BDBB358]();
}

uint64_t sub_23486FC20()
{
  return MEMORY[0x24BDBB360]();
}

uint64_t sub_23486FC2C()
{
  return MEMORY[0x24BDBB380]();
}

uint64_t sub_23486FC38()
{
  return MEMORY[0x24BDBB388]();
}

uint64_t sub_23486FC44()
{
  return MEMORY[0x24BDBB390]();
}

uint64_t sub_23486FC50()
{
  return MEMORY[0x24BDBB3B0]();
}

uint64_t sub_23486FC5C()
{
  return MEMORY[0x24BDBB3B8]();
}

uint64_t sub_23486FC68()
{
  return MEMORY[0x24BDBB3C0]();
}

uint64_t sub_23486FC74()
{
  return MEMORY[0x24BDBB3C8]();
}

uint64_t sub_23486FC80()
{
  return MEMORY[0x24BDD00F0]();
}

uint64_t sub_23486FC8C()
{
  return MEMORY[0x24BDD0158]();
}

uint64_t sub_23486FC98()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_23486FCA4()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_23486FCB0()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_23486FCBC()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23486FCC8()
{
  return MEMORY[0x24BEE1DC0]();
}

uint64_t sub_23486FCD4()
{
  return MEMORY[0x24BEE1E60]();
}

uint64_t sub_23486FCE0()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23486FCEC()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23486FCF8()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23486FD04()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_23486FD10()
{
  return MEMORY[0x24BDD0518]();
}

uint64_t sub_23486FD1C()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_23486FD28()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_23486FD34()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23486FD40()
{
  return MEMORY[0x24BEE20C0]();
}

uint64_t sub_23486FD4C()
{
  return MEMORY[0x24BEE20C8]();
}

uint64_t sub_23486FD58()
{
  return MEMORY[0x24BEE20D0]();
}

uint64_t sub_23486FD64()
{
  return MEMORY[0x24BEE20D8]();
}

uint64_t sub_23486FD70()
{
  return MEMORY[0x24BEE20E8]();
}

uint64_t sub_23486FD7C()
{
  return MEMORY[0x24BEE2150]();
}

uint64_t sub_23486FD88()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23486FD94()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23486FDA0()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23486FDAC()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23486FDB8()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_23486FDC4()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_23486FDD0()
{
  return MEMORY[0x24BEE2308]();
}

uint64_t sub_23486FDDC()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_23486FDE8()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_23486FDF4()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_23486FE00()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_23486FE0C()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_23486FE18()
{
  return MEMORY[0x24BEE2350]();
}

uint64_t sub_23486FE24()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_23486FE30()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_23486FE3C()
{
  return MEMORY[0x24BEE2370]();
}

uint64_t sub_23486FE48()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23486FE54()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_23486FE60()
{
  return MEMORY[0x24BEE23B0]();
}

uint64_t sub_23486FE6C()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23486FE78()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23486FE84()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23486FE90()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_23486FE9C()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23486FEA8()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23486FEB4()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23486FEC0()
{
  return MEMORY[0x24BEE2528]();
}

uint64_t sub_23486FECC()
{
  return MEMORY[0x24BEE2568]();
}

uint64_t sub_23486FED8()
{
  return MEMORY[0x24BEE2628]();
}

uint64_t sub_23486FEE4()
{
  return MEMORY[0x24BEE2630]();
}

uint64_t sub_23486FEF0()
{
  return MEMORY[0x24BEE2648]();
}

uint64_t sub_23486FEFC()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_23486FF08()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23486FF14()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23486FF20()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23486FF2C()
{
  return MEMORY[0x24BEE2868]();
}

uint64_t sub_23486FF38()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_23486FF44()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_23486FF50()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_23486FF5C()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_23486FF68()
{
  return MEMORY[0x24BEE2BD8]();
}

uint64_t sub_23486FF74()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23486FF80()
{
  return MEMORY[0x24BEE2C38]();
}

uint64_t sub_23486FF8C()
{
  return MEMORY[0x24BEE2C58]();
}

uint64_t sub_23486FF98()
{
  return MEMORY[0x24BEE2CA8]();
}

uint64_t sub_23486FFA4()
{
  return MEMORY[0x24BEE2CC8]();
}

uint64_t sub_23486FFB0()
{
  return MEMORY[0x24BEE2E20]();
}

uint64_t sub_23486FFBC()
{
  return MEMORY[0x24BEE2E38]();
}

uint64_t sub_23486FFC8()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_23486FFD4()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_23486FFE0()
{
  return MEMORY[0x24BEE2F08]();
}

uint64_t sub_23486FFEC()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_23486FFF8()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_234870004()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_234870010()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_23487001C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_234870028()
{
  return MEMORY[0x24BEE3070]();
}

uint64_t sub_234870034()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_234870040()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23487004C()
{
  return MEMORY[0x24BEE3090]();
}

uint64_t sub_234870058()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_234870064()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_234870070()
{
  return MEMORY[0x24BEE30B8]();
}

uint64_t sub_23487007C()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_234870088()
{
  return MEMORY[0x24BEE3210]();
}

uint64_t sub_234870094()
{
  return MEMORY[0x24BEE3280]();
}

uint64_t sub_2348700A0()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2348700AC()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2348700B8()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_2348700C4()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_2348700D0()
{
  return MEMORY[0x24BEE32F0]();
}

uint64_t sub_2348700DC()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_2348700E8()
{
  return MEMORY[0x24BEE3300]();
}

uint64_t sub_2348700F4()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_234870100()
{
  return MEMORY[0x24BEE3310]();
}

uint64_t sub_23487010C()
{
  return MEMORY[0x24BEE3318]();
}

uint64_t sub_234870118()
{
  return MEMORY[0x24BEE3320]();
}

uint64_t sub_234870124()
{
  return MEMORY[0x24BEE3328]();
}

uint64_t sub_234870130()
{
  return MEMORY[0x24BEE3330]();
}

uint64_t sub_23487013C()
{
  return MEMORY[0x24BEE3338]();
}

uint64_t sub_234870148()
{
  return MEMORY[0x24BEE3340]();
}

uint64_t sub_234870154()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_234870160()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23487016C()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_234870178()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_234870184()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_234870190()
{
  return MEMORY[0x24BEE33D8]();
}

uint64_t sub_23487019C()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_2348701A8()
{
  return MEMORY[0x24BEE33F0]();
}

uint64_t sub_2348701B4()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2348701C0()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2348701CC()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2348701D8()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_2348701E4()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_2348701F0()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_2348701FC()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_234870208()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_234870214()
{
  return MEMORY[0x24BEE34D8]();
}

uint64_t sub_234870220()
{
  return MEMORY[0x24BEE34E0]();
}

uint64_t sub_23487022C()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_234870238()
{
  return MEMORY[0x24BEE34F0]();
}

uint64_t sub_234870244()
{
  return MEMORY[0x24BEE34F8]();
}

uint64_t sub_234870250()
{
  return MEMORY[0x24BEE3500]();
}

uint64_t sub_23487025C()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_234870268()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_234870274()
{
  return MEMORY[0x24BEE3518]();
}

uint64_t sub_234870280()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_23487028C()
{
  return MEMORY[0x24BEE3530]();
}

uint64_t sub_234870298()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_2348702A4()
{
  return MEMORY[0x24BEE3550]();
}

uint64_t sub_2348702B0()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2348702BC()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_2348702C8()
{
  return MEMORY[0x24BEE3938]();
}

uint64_t sub_2348702D4()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_2348702E0()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2348702EC()
{
  return MEMORY[0x24BEE3A40]();
}

uint64_t sub_2348702F8()
{
  return MEMORY[0x24BEE3AD0]();
}

uint64_t sub_234870304()
{
  return MEMORY[0x24BEE3AD8]();
}

uint64_t sub_234870310()
{
  return MEMORY[0x24BEE3B70]();
}

uint64_t sub_23487031C()
{
  return MEMORY[0x24BEE3B78]();
}

uint64_t sub_234870328()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_234870334()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_234870340()
{
  return MEMORY[0x24BEE3BE8]();
}

uint64_t sub_23487034C()
{
  return MEMORY[0x24BEE3BF0]();
}

uint64_t sub_234870358()
{
  return MEMORY[0x24BEE3BF8]();
}

uint64_t sub_234870364()
{
  return MEMORY[0x24BEE3C08]();
}

uint64_t sub_234870370()
{
  return MEMORY[0x24BEE3C10]();
}

uint64_t sub_23487037C()
{
  return MEMORY[0x24BEE3C18]();
}

uint64_t sub_234870388()
{
  return MEMORY[0x24BEE3C38]();
}

uint64_t sub_234870394()
{
  return MEMORY[0x24BEE3C60]();
}

uint64_t sub_2348703A0()
{
  return MEMORY[0x24BEE3C70]();
}

uint64_t sub_2348703AC()
{
  return MEMORY[0x24BEE3C78]();
}

uint64_t sub_2348703B8()
{
  return MEMORY[0x24BEE3C80]();
}

uint64_t sub_2348703C4()
{
  return MEMORY[0x24BEE3C88]();
}

uint64_t sub_2348703D0()
{
  return MEMORY[0x24BEE3CB0]();
}

uint64_t sub_2348703DC()
{
  return MEMORY[0x24BEE3D08]();
}

uint64_t sub_2348703E8()
{
  return MEMORY[0x24BEE3D38]();
}

uint64_t sub_2348703F4()
{
  return MEMORY[0x24BEE3D90]();
}

uint64_t sub_234870400()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_23487040C()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_234870418()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_234870424()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_234870430()
{
  return MEMORY[0x24BEE3EE8]();
}

uint64_t sub_23487043C()
{
  return MEMORY[0x24BEE3EF0]();
}

uint64_t sub_234870448()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_234870454()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_234870460()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23487046C()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_234870478()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_234870484()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_234870490()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23487049C()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2348704A8()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2348704B4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2348704C0()
{
  return MEMORY[0x24BEE4358]();
}

uint64_t sub_2348704CC()
{
  return MEMORY[0x24BEE4398]();
}

uint64_t sub_2348704D8()
{
  return MEMORY[0x24BEE43B0]();
}

uint64_t sub_2348704E4()
{
  return MEMORY[0x24BEE43D0]();
}

uint64_t sub_2348704F0()
{
  return MEMORY[0x24BEE43D8]();
}

uint64_t sub_2348704FC()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_234870508()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_234870514()
{
  return MEMORY[0x24BE7D050]();
}

uint64_t sub_234870520()
{
  return MEMORY[0x24BEE4698]();
}

uint64_t sub_23487052C()
{
  return MEMORY[0x24BEE49E8]();
}

uint64_t sub_234870538()
{
  return MEMORY[0x24BEE49F0]();
}

uint64_t sub_234870544()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_234870550()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_23487055C()
{
  return MEMORY[0x24BEE4A98]();
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC2C0](rl, observer, mode);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x24BDBC2F8]();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x24BDBC300]();
}

CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context)
{
  return (CFRunLoopObserverRef)MEMORY[0x24BDBC320](allocator, activities, repeats, order, callout, context);
}

void CFRunLoopObserverInvalidate(CFRunLoopObserverRef observer)
{
  MEMORY[0x24BDBC330](observer);
}

void CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC340](rl, observer, mode);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _CFRunLoopCurrentIsMain()
{
  return MEMORY[0x24BDBD0A0]();
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return (void *)MEMORY[0x24BDADDB0](key);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

void *__cdecl dispatch_queue_get_specific(dispatch_queue_t queue, const void *key)
{
  return (void *)MEMORY[0x24BDADEF0](queue, key);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
  MEMORY[0x24BDADF00](queue, key, context, destructor);
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x24BDAE148]();
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x24BDAE6E8]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x24BEDD088](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t pthread_key_init_np()
{
  return MEMORY[0x24BDAF898]();
}

int pthread_main_np(void)
{
  return MEMORY[0x24BDAF8B0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x24BEE4C48]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x24BEE4C68]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return MEMORY[0x24BEE4D30]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x24BEE4E80]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_job_run()
{
  return MEMORY[0x24BEE7208]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x24BEE4FB8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x24BEE4FC0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x24BEE4FE0]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x24BEE4FE8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x24BEE5018]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x24BEE5020]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x24BEE5040]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x24BEE5048]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x24BDB0660](xarray);
}

const char *__cdecl xpc_array_get_string(xpc_object_t xarray, size_t index)
{
  return (const char *)MEMORY[0x24BDB0688](xarray, index);
}

