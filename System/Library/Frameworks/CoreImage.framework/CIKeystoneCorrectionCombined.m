@implementation CIKeystoneCorrectionCombined

- (void)computeRotation
{
  CIVector *v3;
  double v4;
  double v5;
  CIVector *v6;
  double v7;
  double v8;
  CIVector *v9;
  double v10;
  double v11;
  CIVector *v12;
  double v13;
  double v14;
  float v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  int32x4_t v19;
  int32x4_t v20;
  int32x4_t v21;
  int32x4_t v22;
  CIVector *v23;
  double v24;
  double v25;
  CIVector *v26;
  double v27;
  double v28;
  CIVector *v29;
  double v30;
  double v31;
  CIVector *v32;
  double v33;
  double v34;
  float v35;
  float32x4_t v36;
  float32x4_t v37;
  int32x4_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int32x4_t v41;
  CIVector *v42;
  double v43;
  double v44;
  CIVector *v45;
  double v46;
  double v47;
  CIVector *v48;
  double v49;
  double v50;
  CIVector *v51;
  double v52;
  CI::Perspective *v53;
  float32x4_t v54;
  float32x4_t v55;
  int32x4_t v56;
  double v57;
  float v58;
  int32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  float v62;
  float v63;
  float v64;
  float v65;
  float v66;
  float v67;
  float v68;
  float v69;
  float v70;
  float v71;
  float v72;
  float v73;
  float v74;
  float v75;
  float v76;
  float v77;
  float v78;
  float v79;
  float v80;
  float v81;
  float v82;

  v3 = -[CIKeystoneCorrection inputBottomLeft](self, "inputBottomLeft");
  -[CIVector X](v3, "X");
  *(float *)&v4 = v4;
  v80 = *(float *)&v4;
  -[CIVector Y](v3, "Y");
  *(float *)&v5 = v5;
  v77 = *(float *)&v5;
  v6 = -[CIKeystoneCorrection inputTopLeft](self, "inputTopLeft");
  -[CIVector X](v6, "X");
  *(float *)&v7 = v7;
  v74 = *(float *)&v7;
  -[CIVector Y](v6, "Y");
  *(float *)&v8 = v8;
  v71 = *(float *)&v8;
  v9 = -[CIKeystoneCorrection inputBottomRight](self, "inputBottomRight");
  -[CIVector X](v9, "X");
  *(float *)&v10 = v10;
  v68 = *(float *)&v10;
  -[CIVector Y](v9, "Y");
  *(float *)&v11 = v11;
  v65 = *(float *)&v11;
  v12 = -[CIKeystoneCorrection inputTopRight](self, "inputTopRight");
  -[CIVector X](v12, "X");
  *(float *)&v13 = v13;
  v62 = *(float *)&v13;
  -[CIVector Y](v12, "Y");
  v15 = v14;
  v16 = *(float32x4_t *)self->super._anon_80;
  v17 = *(float32x4_t *)&self->super._anon_80[16];
  v18 = *(float32x4_t *)&self->super._anon_80[32];
  v19 = (int32x4_t)vaddq_f32(v18, vmlaq_n_f32(vmulq_n_f32(v16, v80), v17, v77));
  v20 = (int32x4_t)vaddq_f32(v18, vmlaq_n_f32(vmulq_n_f32(v16, v74), v17, v71));
  v21 = (int32x4_t)vaddq_f32(v18, vmlaq_n_f32(vmulq_n_f32(v16, v68), v17, v65));
  v22 = (int32x4_t)vaddq_f32(v18, vmlaq_n_f32(vmulq_n_f32(v16, v62), v17, v15));
  self->super.pitch = CI::Perspective::keystoneV(COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v19.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v19, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v20.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v20, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v21.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v21, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v22.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v22, 2))));
  v23 = -[CIKeystoneCorrection inputTopLeft](self, "inputTopLeft");
  -[CIVector X](v23, "X");
  *(float *)&v24 = v24;
  v81 = *(float *)&v24;
  -[CIVector Y](v23, "Y");
  *(float *)&v25 = v25;
  v78 = *(float *)&v25;
  v26 = -[CIKeystoneCorrection inputTopRight](self, "inputTopRight");
  -[CIVector X](v26, "X");
  *(float *)&v27 = v27;
  v75 = *(float *)&v27;
  -[CIVector Y](v26, "Y");
  *(float *)&v28 = v28;
  v72 = *(float *)&v28;
  v29 = -[CIKeystoneCorrection inputBottomLeft](self, "inputBottomLeft");
  -[CIVector X](v29, "X");
  *(float *)&v30 = v30;
  v69 = *(float *)&v30;
  -[CIVector Y](v29, "Y");
  *(float *)&v31 = v31;
  v66 = *(float *)&v31;
  v32 = -[CIKeystoneCorrection inputBottomRight](self, "inputBottomRight");
  -[CIVector X](v32, "X");
  *(float *)&v33 = v33;
  v63 = *(float *)&v33;
  -[CIVector Y](v32, "Y");
  v35 = v34;
  v36 = *(float32x4_t *)&self->super._anon_80[16];
  v37 = *(float32x4_t *)&self->super._anon_80[32];
  v38 = (int32x4_t)vaddq_f32(v37, vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)self->super._anon_80, v81), v36, v78));
  v39 = (int32x4_t)vaddq_f32(v37, vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)self->super._anon_80, v75), v36, v72));
  v40 = (int32x4_t)vaddq_f32(v37, vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)self->super._anon_80, v69), v36, v66));
  v41 = (int32x4_t)vaddq_f32(v37, vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)self->super._anon_80, v63), v36, v35));
  self->super.yaw = CI::Perspective::keystoneH(COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v38.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v38, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v39.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v39, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v40.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v40, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v41.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v41, 2))));
  v42 = -[CIKeystoneCorrection inputBottomLeft](self, "inputBottomLeft");
  -[CIVector X](v42, "X");
  *(float *)&v43 = v43;
  v82 = *(float *)&v43;
  -[CIVector Y](v42, "Y");
  *(float *)&v44 = v44;
  v79 = *(float *)&v44;
  v45 = -[CIKeystoneCorrection inputTopLeft](self, "inputTopLeft");
  -[CIVector X](v45, "X");
  *(float *)&v46 = v46;
  v76 = *(float *)&v46;
  -[CIVector Y](v45, "Y");
  *(float *)&v47 = v47;
  v73 = *(float *)&v47;
  v48 = -[CIKeystoneCorrection inputBottomRight](self, "inputBottomRight");
  -[CIVector X](v48, "X");
  *(float *)&v49 = v49;
  v70 = *(float *)&v49;
  -[CIVector Y](v48, "Y");
  *(float *)&v50 = v50;
  v67 = *(float *)&v50;
  v51 = -[CIKeystoneCorrection inputTopRight](self, "inputTopRight");
  -[CIVector X](v51, "X");
  *(float *)&v52 = v52;
  v64 = *(float *)&v52;
  v53 = (CI::Perspective *)-[CIVector Y](v51, "Y");
  v54 = *(float32x4_t *)&self->super._anon_80[16];
  v55 = *(float32x4_t *)&self->super._anon_80[32];
  v56 = (int32x4_t)vaddq_f32(v55, vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)self->super._anon_80, v82), v54, v79));
  v58 = v57;
  v59 = (int32x4_t)vaddq_f32(v55, vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)self->super._anon_80, v76), v54, v73));
  v60 = (int32x4_t)vaddq_f32(v55, vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)self->super._anon_80, v70), v54, v67));
  v61 = (int32x4_t)vaddq_f32(v55, vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)self->super._anon_80, v64), v54, v58));
  self->super.roll = CI::Perspective::horizonV(v53, COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v56.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v56, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v59.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v59, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v60.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v60, 2))), COERCE_DOUBLE(vdiv_f32(*(float32x2_t *)v61.i8, (float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v61, 2))), self->super.pitch, self->super.yaw);
}

@end
