@implementation CIMattingSolverInternal

+ (id)customAttributes
{
  _QWORD v3[2];
  _QWORD v4[2];
  _QWORD v5[6];
  _QWORD v6[6];
  _QWORD v7[6];
  _QWORD v8[6];
  _QWORD v9[6];
  _QWORD v10[6];
  _QWORD v11[6];
  _QWORD v12[6];
  _QWORD v13[6];
  _QWORD v14[6];
  _QWORD v15[6];
  _QWORD v16[6];
  _QWORD v17[6];
  _QWORD v18[6];
  _QWORD v19[4];
  _QWORD v20[11];
  _QWORD v21[13];

  v21[11] = *MEMORY[0x1E0C80C00];
  v20[0] = CFSTR("CIAttributeFilterCategories");
  v19[0] = CFSTR("CICategoryColorAdjustment");
  v19[1] = CFSTR("CICategoryStillImage");
  v19[2] = CFSTR("CICategoryBuiltIn");
  v19[3] = CFSTR("CICategoryApplePrivate");
  v21[0] = objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v19, 4);
  v21[1] = CFSTR("12");
  v20[1] = CFSTR("CIAttributeFilterAvailable_iOS");
  v20[2] = CFSTR("CIAttributeFilterAvailable_Mac");
  v21[2] = CFSTR("10.14");
  v20[3] = CFSTR("inputRadius");
  v17[0] = CFSTR("CIAttributeSliderMin");
  v17[1] = CFSTR("CIAttributeSliderMax");
  v18[0] = &unk_1E2F1BB18;
  v18[1] = &unk_1E2F1BB30;
  v17[2] = CFSTR("CIAttributeMin");
  v17[3] = CFSTR("CIAttributeMax");
  v18[2] = &unk_1E2F1BB18;
  v18[3] = &unk_1E2F1BB30;
  v17[4] = CFSTR("CIAttributeDefault");
  v17[5] = CFSTR("CIAttributeType");
  v18[4] = &unk_1E2F1BB48;
  v18[5] = CFSTR("CIAttributeTypeInteger");
  v21[3] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, v17, 6);
  v20[4] = CFSTR("inputSubsampling");
  v15[0] = CFSTR("CIAttributeSliderMin");
  v15[1] = CFSTR("CIAttributeSliderMax");
  v16[0] = &unk_1E2F1BB18;
  v16[1] = &unk_1E2F1BB30;
  v15[2] = CFSTR("CIAttributeMin");
  v15[3] = CFSTR("CIAttributeMax");
  v16[2] = &unk_1E2F1BB18;
  v16[3] = &unk_1E2F1BB30;
  v15[4] = CFSTR("CIAttributeDefault");
  v15[5] = CFSTR("CIAttributeType");
  v16[4] = &unk_1E2F1BB60;
  v16[5] = CFSTR("CIAttributeTypeScalar");
  v21[4] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 6);
  v20[5] = CFSTR("inputNumIterations");
  v13[0] = CFSTR("CIAttributeSliderMin");
  v13[1] = CFSTR("CIAttributeSliderMax");
  v14[0] = &unk_1E2F1BB78;
  v14[1] = &unk_1E2F1BB90;
  v13[2] = CFSTR("CIAttributeMin");
  v13[3] = CFSTR("CIAttributeMax");
  v14[2] = &unk_1E2F1BB78;
  v14[3] = &unk_1E2F1BB90;
  v13[4] = CFSTR("CIAttributeDefault");
  v13[5] = CFSTR("CIAttributeType");
  v14[4] = &unk_1E2F1BB60;
  v14[5] = CFSTR("CIAttributeTypeInteger");
  v21[5] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 6);
  v20[6] = CFSTR("inputEPS");
  v11[0] = CFSTR("CIAttributeSliderMin");
  v11[1] = CFSTR("CIAttributeSliderMax");
  v12[0] = &unk_1E2F1A2B0;
  v12[1] = &unk_1E2F1A2C0;
  v12[2] = &unk_1E2F1A2B0;
  v12[3] = &unk_1E2F1A2C0;
  v11[2] = CFSTR("CIAttributeMin");
  v11[3] = CFSTR("CIAttributeMax");
  v11[4] = CFSTR("CIAttributeDefault");
  v11[5] = CFSTR("CIAttributeType");
  v12[4] = &unk_1E2F1A2D0;
  v12[5] = CFSTR("CIAttributeTypeScalar");
  v21[6] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 6);
  v20[7] = CFSTR("inputFGThresholdValue");
  v9[0] = CFSTR("CIAttributeSliderMin");
  v9[1] = CFSTR("CIAttributeSliderMax");
  v10[0] = &unk_1E2F1A2B0;
  v10[1] = &unk_1E2F1A2E0;
  v9[2] = CFSTR("CIAttributeMin");
  v9[3] = CFSTR("CIAttributeMax");
  v10[2] = &unk_1E2F1A2B0;
  v10[3] = &unk_1E2F1A2E0;
  v9[4] = CFSTR("CIAttributeDefault");
  v9[5] = CFSTR("CIAttributeType");
  v10[4] = &unk_1E2F1A2F0;
  v10[5] = CFSTR("CIAttributeTypeScalar");
  v21[7] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v10, v9, 6);
  v20[8] = CFSTR("inputBGThresholdValue");
  v7[0] = CFSTR("CIAttributeSliderMin");
  v7[1] = CFSTR("CIAttributeSliderMax");
  v8[0] = &unk_1E2F1A2B0;
  v8[1] = &unk_1E2F1A2E0;
  v7[2] = CFSTR("CIAttributeMin");
  v7[3] = CFSTR("CIAttributeMax");
  v8[2] = &unk_1E2F1A2B0;
  v8[3] = &unk_1E2F1A2E0;
  v7[4] = CFSTR("CIAttributeDefault");
  v7[5] = CFSTR("CIAttributeType");
  v8[4] = &unk_1E2F1A300;
  v8[5] = CFSTR("CIAttributeTypeScalar");
  v21[8] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, v7, 6);
  v20[9] = CFSTR("inputErosionKernelSize");
  v5[0] = CFSTR("CIAttributeSliderMin");
  v5[1] = CFSTR("CIAttributeSliderMax");
  v6[0] = &unk_1E2F1BB78;
  v6[1] = &unk_1E2F1BB30;
  v5[2] = CFSTR("CIAttributeMin");
  v5[3] = CFSTR("CIAttributeMax");
  v6[2] = &unk_1E2F1BB78;
  v6[3] = &unk_1E2F1BB30;
  v5[4] = CFSTR("CIAttributeDefault");
  v5[5] = CFSTR("CIAttributeType");
  v6[4] = &unk_1E2F1BB18;
  v6[5] = CFSTR("CIAttributeTypeScalar");
  v21[9] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, v5, 6);
  v20[10] = CFSTR("inputUseDepthFilter");
  v3[0] = CFSTR("CIAttributeDefault");
  v3[1] = CFSTR("CIAttributeType");
  v4[0] = &unk_1E2F1BB18;
  v4[1] = CFSTR("CIAttributeTypeBoolean");
  v21[10] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v4, v3, 2);
  return (id)objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 11);
}

- (id)outputImage
{
  CIImage *inputMainImage;
  void *v4;
  uint64_t v5;
  CIImage *v6;
  uint64_t v7;
  NSNumber *inputRadius;
  NSNumber *inputSubsampling;
  NSNumber *inputEPS;
  NSNumber *inputNumIterations;
  NSNumber *inputFGThresholdValue;
  NSNumber *inputBGThresholdValue;
  NSNumber *inputErosionKernelSize;
  NSNumber *inputUseDepthFilter;
  double v16;
  double v17;
  double v18;
  double v19;
  CIImage *v20;
  uint64_t v22;
  _QWORD v23[10];
  _QWORD v24[10];
  _QWORD v25[3];
  _QWORD v26[3];
  _QWORD v27[4];

  v27[3] = *MEMORY[0x1E0C80C00];
  inputMainImage = self->inputMainImage;
  if (-[CIImage colorSpace](inputMainImage, "colorSpace")
    && CGColorSpaceGetModel(-[CIImage colorSpace](inputMainImage, "colorSpace")) == kCGColorSpaceModelRGB)
  {
    inputMainImage = -[CIImage imageByColorMatchingWorkingSpaceToColorSpace:](inputMainImage, "imageByColorMatchingWorkingSpaceToColorSpace:", -[CIImage colorSpace](inputMainImage, "colorSpace"));
  }
  v27[0] = self->inputPredicateImage;
  v27[1] = inputMainImage;
  v27[2] = self->inputImage;
  v4 = (void *)objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v27, 3);
  objc_msgSend((id)objc_msgSend(v4, "objectAtIndexedSubscript:", 0), "extent");
  v26[0] = +[CIVector vectorWithCGRect:](CIVector, "vectorWithCGRect:");
  objc_msgSend((id)objc_msgSend(v4, "objectAtIndexedSubscript:", 1), "extent");
  v26[1] = +[CIVector vectorWithCGRect:](CIVector, "vectorWithCGRect:");
  objc_msgSend((id)objc_msgSend(v4, "objectAtIndexedSubscript:", 2), "extent");
  v26[2] = +[CIVector vectorWithCGRect:](CIVector, "vectorWithCGRect:");
  v5 = objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 3);
  v6 = -[CIImage imageByClampingToExtent](self->inputImage, "imageByClampingToExtent");
  v25[0] = self->inputPredicateImage;
  v25[1] = inputMainImage;
  v25[2] = v6;
  v7 = objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v25, 3);
  v22 = 0;
  -[CIImage extent](self->inputPredicateImage, "extent");
  inputRadius = self->inputRadius;
  v23[0] = CFSTR("inputRadius");
  v23[1] = CFSTR("inputSubsampling");
  inputSubsampling = self->inputSubsampling;
  v24[0] = inputRadius;
  v24[1] = inputSubsampling;
  inputEPS = self->inputEPS;
  v23[2] = CFSTR("inputEPS");
  v23[3] = CFSTR("inputNumIterations");
  inputNumIterations = self->inputNumIterations;
  v24[2] = inputEPS;
  v24[3] = inputNumIterations;
  inputFGThresholdValue = self->inputFGThresholdValue;
  v23[4] = CFSTR("fgThresholdValue");
  v23[5] = CFSTR("bgThresholdValue");
  inputBGThresholdValue = self->inputBGThresholdValue;
  v24[4] = inputFGThresholdValue;
  v24[5] = inputBGThresholdValue;
  inputErosionKernelSize = self->inputErosionKernelSize;
  v23[6] = CFSTR("erosionKernelSize");
  v23[7] = CFSTR("useDepthFilter");
  inputUseDepthFilter = self->inputUseDepthFilter;
  v24[6] = inputErosionKernelSize;
  v24[7] = inputUseDepthFilter;
  v23[8] = CFSTR("resolutionMode");
  v23[9] = CFSTR("imageExtents");
  v24[8] = &unk_1E2F1BB48;
  v24[9] = v5;
  v20 = +[CIImageProcessorKernel applyWithExtent:inputs:arguments:error:](CIMattingRGBDProcessor, "applyWithExtent:inputs:arguments:error:", v7, objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, v23, 10), &v22, v16, v17, v18, v19);
  if (v22)
    NSLog(CFSTR("Error = %@"), v22);
  return v20;
}

@end
