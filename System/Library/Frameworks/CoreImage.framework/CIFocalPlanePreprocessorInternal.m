@implementation CIFocalPlanePreprocessorInternal

+ (id)customAttributes
{
  _QWORD v3[6];
  _QWORD v4[6];
  _QWORD v5[6];
  _QWORD v6[6];
  _QWORD v7[6];
  _QWORD v8[6];
  _QWORD v9[6];
  _QWORD v10[6];
  _QWORD v11[6];
  _QWORD v12[6];
  _QWORD v13[6];
  _QWORD v14[6];
  _QWORD v15[6];
  _QWORD v16[6];
  _QWORD v17[3];
  _QWORD v18[3];
  _QWORD v19[4];
  _QWORD v20[11];
  _QWORD v21[13];

  v21[11] = *MEMORY[0x1E0C80C00];
  v20[0] = CFSTR("CIAttributeFilterCategories");
  v19[0] = CFSTR("CICategoryColorAdjustment");
  v19[1] = CFSTR("CICategoryStillImage");
  v19[2] = CFSTR("CICategoryBuiltIn");
  v19[3] = CFSTR("CICategoryApplePrivate");
  v21[0] = objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v19, 4);
  v21[1] = CFSTR("12");
  v20[1] = CFSTR("CIAttributeFilterAvailable_iOS");
  v20[2] = CFSTR("CIAttributeFilterAvailable_Mac");
  v21[2] = CFSTR("10.14");
  v20[3] = CFSTR("inputFocusRect");
  v18[0] = CFSTR("CIAttributeTypeRectangle");
  v17[0] = CFSTR("CIAttributeType");
  v17[1] = CFSTR("CIAttributeDefault");
  v18[1] = +[CIVector vectorWithX:Y:Z:W:](CIVector, "vectorWithX:Y:Z:W:", 0.45, 0.45, 0.1, 0.1);
  v17[2] = CFSTR("CIAttributeIdentity");
  v18[2] = +[CIVector vectorWithCGRect:](CIVector, "vectorWithCGRect:", *MEMORY[0x1E0C9D5E0], *(double *)(MEMORY[0x1E0C9D5E0] + 8), *(double *)(MEMORY[0x1E0C9D5E0] + 16), *(double *)(MEMORY[0x1E0C9D5E0] + 24));
  v21[3] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, v17, 3);
  v20[4] = CFSTR("inputZeroShiftPercentile");
  v15[0] = CFSTR("CIAttributeSliderMin");
  v15[1] = CFSTR("CIAttributeSliderMax");
  v16[0] = &unk_1E2F1B950;
  v16[1] = &unk_1E2F1B968;
  v15[2] = CFSTR("CIAttributeMin");
  v15[3] = CFSTR("CIAttributeMax");
  v16[2] = &unk_1E2F1B950;
  v16[3] = &unk_1E2F1B968;
  v15[4] = CFSTR("CIAttributeDefault");
  v15[5] = CFSTR("CIAttributeType");
  v16[4] = &unk_1E2F19C20;
  v16[5] = CFSTR("CIAttributeTypeScalar");
  v21[4] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 6);
  v20[5] = CFSTR("inputAlphaThreshold");
  v13[0] = CFSTR("CIAttributeSliderMin");
  v13[1] = CFSTR("CIAttributeSliderMax");
  v14[0] = &unk_1E2F19C30;
  v14[1] = &unk_1E2F1B968;
  v13[2] = CFSTR("CIAttributeMin");
  v13[3] = CFSTR("CIAttributeMax");
  v14[2] = &unk_1E2F19C30;
  v14[3] = &unk_1E2F1B968;
  v13[4] = CFSTR("CIAttributeDefault");
  v13[5] = CFSTR("CIAttributeType");
  v14[4] = &unk_1E2F1B950;
  v14[5] = CFSTR("CIAttributeTypeScalar");
  v21[5] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 6);
  v20[6] = CFSTR("inputAmplitude");
  v11[0] = CFSTR("CIAttributeSliderMin");
  v11[1] = CFSTR("CIAttributeSliderMax");
  v12[0] = &unk_1E2F19C30;
  v12[1] = &unk_1E2F1B968;
  v11[2] = CFSTR("CIAttributeMin");
  v11[3] = CFSTR("CIAttributeMax");
  v12[2] = &unk_1E2F19C30;
  v12[3] = &unk_1E2F1B968;
  v11[4] = CFSTR("CIAttributeDefault");
  v11[5] = CFSTR("CIAttributeType");
  v12[4] = &unk_1E2F1B950;
  v12[5] = CFSTR("CIAttributeTypeScalar");
  v21[6] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 6);
  v20[7] = CFSTR("inputExponent");
  v9[0] = CFSTR("CIAttributeSliderMin");
  v9[1] = CFSTR("CIAttributeSliderMax");
  v10[0] = &unk_1E2F19C30;
  v10[1] = &unk_1E2F1B968;
  v9[2] = CFSTR("CIAttributeMin");
  v9[3] = CFSTR("CIAttributeMax");
  v10[2] = &unk_1E2F19C30;
  v10[3] = &unk_1E2F1B968;
  v9[4] = CFSTR("CIAttributeDefault");
  v9[5] = CFSTR("CIAttributeType");
  v10[4] = &unk_1E2F1B968;
  v10[5] = CFSTR("CIAttributeTypeScalar");
  v21[7] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v10, v9, 6);
  v20[8] = CFSTR("inputGamma");
  v7[0] = CFSTR("CIAttributeSliderMin");
  v7[1] = CFSTR("CIAttributeSliderMax");
  v8[0] = &unk_1E2F19C30;
  v8[1] = &unk_1E2F1B968;
  v7[2] = CFSTR("CIAttributeMin");
  v7[3] = CFSTR("CIAttributeMax");
  v8[2] = &unk_1E2F19C30;
  v8[3] = &unk_1E2F1B968;
  v7[4] = CFSTR("CIAttributeDefault");
  v7[5] = CFSTR("CIAttributeType");
  v8[4] = &unk_1E2F1B968;
  v8[5] = CFSTR("CIAttributeTypeScalar");
  v21[8] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, v7, 6);
  v20[9] = CFSTR("inputMinFactor");
  v5[0] = CFSTR("CIAttributeSliderMin");
  v5[1] = CFSTR("CIAttributeSliderMax");
  v6[0] = &unk_1E2F19C30;
  v6[1] = &unk_1E2F19C40;
  v5[2] = CFSTR("CIAttributeMin");
  v5[3] = CFSTR("CIAttributeMax");
  v6[2] = &unk_1E2F19C30;
  v6[3] = &unk_1E2F19C40;
  v5[4] = CFSTR("CIAttributeDefault");
  v5[5] = CFSTR("CIAttributeType");
  v6[4] = &unk_1E2F1B950;
  v6[5] = CFSTR("CIAttributeTypeScalar");
  v21[9] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, v5, 6);
  v20[10] = CFSTR("inputMaxFactor");
  v3[0] = CFSTR("CIAttributeSliderMin");
  v3[1] = CFSTR("CIAttributeSliderMax");
  v4[0] = &unk_1E2F19C30;
  v4[1] = &unk_1E2F19C40;
  v3[2] = CFSTR("CIAttributeMin");
  v3[3] = CFSTR("CIAttributeMax");
  v4[2] = &unk_1E2F19C30;
  v4[3] = &unk_1E2F19C40;
  v3[4] = CFSTR("CIAttributeDefault");
  v3[5] = CFSTR("CIAttributeType");
  v4[4] = &unk_1E2F1B968;
  v4[5] = CFSTR("CIAttributeTypeScalar");
  v21[10] = objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v4, v3, 6);
  return (id)objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 11);
}

- (id)outputImage
{
  CIImage *inputImage;
  double v4;
  double v5;
  double v6;
  float v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CIVector *v13;
  CIImage *inputMatteImage;
  void *v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  NSNumber *inputZeroShiftPercentile;
  NSNumber *inputAlphaThreshold;
  NSNumber *inputAmplitude;
  NSNumber *inputExponent;
  NSNumber *inputGamma;
  NSNumber *inputMinFactor;
  NSNumber *inputMaxFactor;
  uint64_t v34;
  _QWORD v35[9];
  _QWORD v36[9];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[3];

  v39[2] = *MEMORY[0x1E0C80C00];
  inputImage = self->inputImage;
  if (!inputImage)
    return +[CIImage emptyImage](CIImage, "emptyImage");
  if (self->inputMatteImage)
  {
    v34 = 0;
    -[CIVector Y](self->inputFocusRect, "Y");
    v5 = v4;
    -[CIVector W](self->inputFocusRect, "W");
    v7 = 1.0 - (v5 + v6);
    -[CIVector X](self->inputFocusRect, "X");
    v9 = v8;
    -[CIVector Z](self->inputFocusRect, "Z");
    v11 = v10;
    -[CIVector W](self->inputFocusRect, "W");
    v13 = +[CIVector vectorWithX:Y:Z:W:](CIVector, "vectorWithX:Y:Z:W:", v9, v7, v11, v12);
    inputMatteImage = self->inputMatteImage;
    v39[0] = self->inputImage;
    v39[1] = inputMatteImage;
    v15 = (void *)objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v39, 2);
    objc_msgSend((id)objc_msgSend(v15, "objectAtIndexedSubscript:", 0), "extent");
    v38[0] = +[CIVector vectorWithCGRect:](CIVector, "vectorWithCGRect:");
    objc_msgSend((id)objc_msgSend(v15, "objectAtIndexedSubscript:", 1), "extent");
    v38[1] = +[CIVector vectorWithCGRect:](CIVector, "vectorWithCGRect:");
    v16 = objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v38, 2);
    -[CIImage extent](self->inputImage, "extent");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v37[0] = -[CIImage imageByClampingToExtent](self->inputImage, "imageByClampingToExtent");
    v37[1] = -[CIImage imageByClampingToExtent](self->inputMatteImage, "imageByClampingToExtent");
    v25 = objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v37, 2);
    v35[0] = CFSTR("inputFocusRect");
    v35[1] = CFSTR("inputZeroShiftPercentile");
    inputZeroShiftPercentile = self->inputZeroShiftPercentile;
    v36[0] = v13;
    v36[1] = inputZeroShiftPercentile;
    inputAlphaThreshold = self->inputAlphaThreshold;
    v35[2] = CFSTR("inputAlphaThreshold");
    v35[3] = CFSTR("inputAmplitude");
    inputAmplitude = self->inputAmplitude;
    v36[2] = inputAlphaThreshold;
    v36[3] = inputAmplitude;
    inputExponent = self->inputExponent;
    v35[4] = CFSTR("inputExponent");
    v35[5] = CFSTR("inputGamma");
    inputGamma = self->inputGamma;
    v36[4] = inputExponent;
    v36[5] = inputGamma;
    inputMinFactor = self->inputMinFactor;
    v35[6] = CFSTR("inputMinFactor");
    v35[7] = CFSTR("inputMaxFactor");
    inputMaxFactor = self->inputMaxFactor;
    v36[6] = inputMinFactor;
    v36[7] = inputMaxFactor;
    v35[8] = CFSTR("imageExtents");
    v36[8] = v16;
    inputImage = +[CIImageProcessorKernel applyWithExtent:inputs:arguments:error:](CIFocalPlaneProcessor, "applyWithExtent:inputs:arguments:error:", v25, objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v36, v35, 9), &v34, v18, v20, v22, v24);
    if (v34)
      NSLog(CFSTR("Error = %@"), v34);
  }
  return inputImage;
}

@end
