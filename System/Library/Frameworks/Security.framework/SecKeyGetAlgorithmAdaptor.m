@implementation SecKeyGetAlgorithmAdaptor

CFDictionaryRef __SecKeyGetAlgorithmAdaptor_block_invoke()
{
  const __CFAllocator *v0;
  const CFDictionaryKeyCallBacks *v1;
  CFDictionaryRef result;
  void *v3;
  void *v4[2];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  void *v9[2];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[16];
  _OWORD v15[16];
  _OWORD v16[15];
  CFTypeRef (*v17)(uint64_t, const __CFData *, void *, __CFString **);
  _OWORD v18[15];
  const __CFString *v19;
  void *v20[46];
  void *keys[46];
  void *values[47];
  const void *__dst[48];

  __dst[47] = *(const void **)MEMORY[0x1E0C80C00];
  memcpy(__dst, &off_1E1FD7760, 0x178uLL);
  memcpy(values, off_1E1FD78D8, sizeof(values));
  v0 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v1 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E0C9B390];
  SecKeyGetAlgorithmAdaptor_adaptors[0] = (uint64_t)CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], __dst, (const void **)values, 47, MEMORY[0x1E0C9B390], 0);
  memcpy(keys, &off_1E1FD7A50, sizeof(keys));
  memcpy(v20, &off_1E1FD7BC0, sizeof(v20));
  qword_1ECD35898 = (uint64_t)CFDictionaryCreate(v0, (const void **)keys, (const void **)v20, 46, v1, 0);
  v18[12] = xmmword_1E1FD7DF0;
  v18[13] = *(_OWORD *)&off_1E1FD7E00;
  v18[14] = xmmword_1E1FD7E10;
  v19 = CFSTR("algid:encrypt:ECIES:ECDHC:KDFX963:SHA512:AESGCM-KDFIV");
  v18[8] = xmmword_1E1FD7DB0;
  v18[9] = *(_OWORD *)&off_1E1FD7DC0;
  v18[10] = xmmword_1E1FD7DD0;
  v18[11] = *(_OWORD *)&off_1E1FD7DE0;
  v18[4] = xmmword_1E1FD7D70;
  v18[5] = *(_OWORD *)&off_1E1FD7D80;
  v18[6] = xmmword_1E1FD7D90;
  v18[7] = *(_OWORD *)&off_1E1FD7DA0;
  v18[0] = xmmword_1E1FD7D30;
  v18[1] = *(_OWORD *)&off_1E1FD7D40;
  v18[2] = xmmword_1E1FD7D50;
  v18[3] = *(_OWORD *)&off_1E1FD7D60;
  v16[12] = xmmword_1E1FD7EE8;
  v16[13] = *(_OWORD *)&off_1E1FD7EF8;
  v16[14] = xmmword_1E1FD7F08;
  v17 = SecKeyAlgorithmAdaptorCopyResult_Encrypt_ECIESCofactorVariableIVX963SHA512;
  v16[8] = xmmword_1E1FD7EA8;
  v16[9] = *(_OWORD *)&off_1E1FD7EB8;
  v16[10] = xmmword_1E1FD7EC8;
  v16[11] = *(_OWORD *)&off_1E1FD7ED8;
  v16[4] = xmmword_1E1FD7E68;
  v16[5] = *(_OWORD *)&off_1E1FD7E78;
  v16[6] = xmmword_1E1FD7E88;
  v16[7] = *(_OWORD *)&off_1E1FD7E98;
  v16[0] = xmmword_1E1FD7E28;
  v16[1] = *(_OWORD *)&off_1E1FD7E38;
  v16[2] = xmmword_1E1FD7E48;
  v16[3] = *(_OWORD *)&off_1E1FD7E58;
  qword_1ECD358A0 = (uint64_t)CFDictionaryCreate(v0, (const void **)v18, (const void **)v16, 31, v1, 0);
  v15[12] = xmmword_1E1FD7FE0;
  v15[13] = *(_OWORD *)&off_1E1FD7FF0;
  v15[14] = xmmword_1E1FD8000;
  v15[15] = *(_OWORD *)&off_1E1FD8010;
  v15[8] = xmmword_1E1FD7FA0;
  v15[9] = *(_OWORD *)&off_1E1FD7FB0;
  v15[10] = xmmword_1E1FD7FC0;
  v15[11] = *(_OWORD *)&off_1E1FD7FD0;
  v15[4] = xmmword_1E1FD7F60;
  v15[5] = *(_OWORD *)&off_1E1FD7F70;
  v15[6] = xmmword_1E1FD7F80;
  v15[7] = *(_OWORD *)&off_1E1FD7F90;
  v15[0] = xmmword_1E1FD7F20;
  v15[1] = *(_OWORD *)&off_1E1FD7F30;
  v15[2] = xmmword_1E1FD7F40;
  v15[3] = *(_OWORD *)&off_1E1FD7F50;
  v14[12] = xmmword_1E1FD80E0;
  v14[13] = *(_OWORD *)&off_1E1FD80F0;
  v14[14] = xmmword_1E1FD8100;
  v14[15] = *(_OWORD *)&off_1E1FD8110;
  v14[8] = xmmword_1E1FD80A0;
  v14[9] = *(_OWORD *)&off_1E1FD80B0;
  v14[10] = xmmword_1E1FD80C0;
  v14[11] = *(_OWORD *)&off_1E1FD80D0;
  v14[4] = xmmword_1E1FD8060;
  v14[5] = *(_OWORD *)&off_1E1FD8070;
  v14[6] = xmmword_1E1FD8080;
  v14[7] = *(_OWORD *)&off_1E1FD8090;
  v14[0] = xmmword_1E1FD8020;
  v14[1] = *(_OWORD *)&off_1E1FD8030;
  v14[2] = xmmword_1E1FD8040;
  v14[3] = *(_OWORD *)&off_1E1FD8050;
  qword_1ECD358A8 = (uint64_t)CFDictionaryCreate(v0, (const void **)v15, (const void **)v14, 32, v1, 0);
  v12 = *(_OWORD *)&off_1E1FD8150;
  v13 = xmmword_1E1FD8160;
  v10 = *(_OWORD *)&off_1E1FD8130;
  v11 = xmmword_1E1FD8140;
  v6 = xmmword_1E1FD8190;
  v7 = *(_OWORD *)&off_1E1FD81A0;
  v8 = xmmword_1E1FD81B0;
  *(_OWORD *)v9 = xmmword_1E1FD8120;
  *(_OWORD *)v4 = xmmword_1E1FD8170;
  v5 = *(_OWORD *)&off_1E1FD8180;
  qword_1ECD358B0 = (uint64_t)CFDictionaryCreate(v0, (const void **)v9, (const void **)v4, 10, v1, 0);
  qword_1ECD358B8 = (uint64_t)CFDictionaryCreate(v0, (const void **)&v3, (const void **)&v3, 0, v1, 0);
  result = CFDictionaryCreate(v0, (const void **)&v3, (const void **)&v3, 0, v1, 0);
  qword_1ECD358C0 = (uint64_t)result;
  return result;
}

@end
