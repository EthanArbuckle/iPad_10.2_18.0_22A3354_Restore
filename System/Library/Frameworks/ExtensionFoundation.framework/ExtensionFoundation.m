ValueMetadata *type metadata accessor for AppExtensionProcess()
{
  return &type metadata for AppExtensionProcess;
}

uint64_t sub_190C27C0C()
{
  unsigned __int8 *v0;

  return sub_190C27C14(*v0);
}

uint64_t sub_190C27C14(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_190C27C4C + 4 * byte_190CAE510[a1]))(0xD000000000000012, 0x8000000190CB4DA0);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_190C27DD8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

Swift::Void __swiftcall AppExtensionProcess.invalidateLaunchAssertion()()
{
  id *v0;

  objc_msgSend(*v0, sel_invalidateLaunchAssertion);
}

uint64_t sub_190C27E30()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for AppExtensionXPCConfiguration()
{
  return &type metadata for AppExtensionXPCConfiguration;
}

NSXPCConnection __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _AppExtensionProcess.makeXPCConnection()()
{
  void **v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v6[0] = 0;
  v2 = objc_msgSend(v1, sel_newXPCConnectionWithError_, v6);
  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_190CA83EC();

    swift_willThrow();
  }
  return (NSXPCConnection)v2;
}

uint64_t sub_190C27F70(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  sub_190C45AB0(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_190C30128(i, (uint64_t)v11);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190C45AB0(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_190C45AB0(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_190C280F4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  unsigned int v19;
  unsigned int *v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  int64_t v50;
  audit_token_t atoken;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE20A340);
  v48 = a2;
  v6 = sub_190CA8B0C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v43 = v3;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v45 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v44 = (unint64_t)(v8 + 63) >> 6;
    v47 = v6 + 64;
    result = swift_retain();
    v12 = 0;
    v46 = v5;
    while (1)
    {
      if (v10)
      {
        v49 = (v10 - 1) & v10;
        v50 = v12;
        v21 = __clz(__rbit64(v10)) | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v44)
          goto LABEL_33;
        v23 = v45[v22];
        v24 = v12 + 1;
        if (!v23)
        {
          v24 = v12 + 2;
          if (v12 + 2 >= v44)
            goto LABEL_33;
          v23 = v45[v24];
          if (!v23)
          {
            v25 = v12 + 3;
            if (v12 + 3 >= v44)
            {
LABEL_33:
              swift_release();
              v3 = v43;
              if ((v48 & 1) != 0)
              {
                v42 = 1 << *(_BYTE *)(v5 + 32);
                if (v42 >= 64)
                  bzero(v45, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v42;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v45[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v24 >= v44)
                  goto LABEL_33;
                v23 = v45[v24];
                ++v25;
                if (v23)
                  goto LABEL_30;
              }
            }
            v24 = v12 + 3;
          }
        }
LABEL_30:
        v49 = (v23 - 1) & v23;
        v50 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v30 = *(_QWORD *)(v5 + 56);
      v31 = (unsigned int *)(*(_QWORD *)(v5 + 48) + 32 * v21);
      v33 = *v31;
      v32 = v31[1];
      v35 = v31[2];
      v34 = v31[3];
      v36 = v31[4];
      v37 = v31[5];
      v39 = v31[6];
      v38 = v31[7];
      v40 = *(void **)(v30 + 8 * v21);
      if ((v48 & 1) == 0)
        v41 = v40;
      sub_190CA8C50();
      atoken.val[0] = v33;
      atoken.val[1] = v32;
      atoken.val[2] = v35;
      atoken.val[3] = v34;
      atoken.val[4] = v36;
      atoken.val[5] = v37;
      atoken.val[6] = v39;
      atoken.val[7] = v38;
      audit_token_to_pid(&atoken);
      sub_190CA8C74();
      atoken.val[0] = v33;
      atoken.val[1] = v32;
      atoken.val[2] = v35;
      atoken.val[3] = v34;
      atoken.val[4] = v36;
      atoken.val[5] = v37;
      atoken.val[6] = v39;
      atoken.val[7] = v38;
      audit_token_to_pidversion(&atoken);
      sub_190CA8C74();
      v13 = sub_190CA8C80();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = v13 & ~v14;
      v16 = v15 >> 6;
      result = v47;
      if (((-1 << v15) & ~*(_QWORD *)(v47 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v47 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        v18 = v40;
        v19 = v33;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v14) >> 6;
        v18 = v40;
        v19 = v33;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v16 == v27;
          if (v16 == v27)
            v16 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v47 + 8 * v16);
        }
        while (v29 == -1);
        v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(_QWORD *)(v47 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v20 = (unsigned int *)(*(_QWORD *)(v7 + 48) + 32 * v17);
      *v20 = v19;
      v20[1] = v32;
      v20[2] = v35;
      v20[3] = v34;
      v20[4] = v36;
      v20[5] = v37;
      v20[6] = v39;
      v20[7] = v38;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v18;
      ++*(_QWORD *)(v7 + 16);
      v5 = v46;
      v10 = v49;
      v12 = v50;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void _EXExtensionProcessMannger.processDidInvalidate(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  os_unfair_lock_s *v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration);
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessMannger_processExtensionMapLock) + 16);
  os_unfair_lock_lock(v3);
  v4 = *(void **)(v1 + OBJC_IVAR____EXExtensionProcessMannger_processExtensionMap);
  type metadata accessor for _EXLaunchConfiguration(0);
  if (objc_msgSend(v2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    objc_msgSend(v4, sel_removeObjectForKey_, v2);
    os_unfair_lock_unlock(v3);
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

void sub_190C28678()
{
  unint64_t v0;

  sub_190CA0548(319, &qword_1EE20AC70, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_190C28778()
{
  unint64_t v0;

  sub_190CA0548(319, &qword_1EE20AC70, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

id sub_190C287F0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXExtensionProcessMannger()), sel_init);
  qword_1ECD99318 = (uint64_t)result;
  return result;
}

void sub_190C2881C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_190C28890()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  __swift_allocate_value_buffer(v3, qword_1EE20C410);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE20C410);
  if (qword_1EE20B848 != -1)
    swift_once();
  v5 = qword_1EE20C070 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
  v6 = sub_190CA84E8();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v2, v5, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  return sub_190CA0594((uint64_t)v2, v4);
}

__int128 *sub_190C289A8()
{
  __int128 *result;
  __int128 v1;

  result = (__int128 *)objc_msgSend((id)objc_opt_self(), sel_auditTokenForCurrentProcess);
  if (result)
  {
    v1 = result[1];
    xmmword_1EE20DF30 = *result;
    *(_OWORD *)&dword_1EE20DF40 = v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190C28A3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_190CA8518();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_190CA850C();
}

uint64_t sub_190C28AF8(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

id sub_190C28B34()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id result;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE20B840 != -1)
    swift_once();
  v3 = sub_190CA84E8();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE20C050);
  v5 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v2, v4, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v3);
  v6 = objc_allocWithZone((Class)type metadata accessor for _EXExtensionInstanceIdentifier());
  result = _EXExtensionInstanceIdentifier.init(instanceIdentifier:)((uint64_t)v2);
  qword_1EE20C070 = (uint64_t)result;
  return result;
}

uint64_t sub_190C28C20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190CA84E8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_190C28C8C()
{
  unint64_t v0;

  sub_190C793BC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_190C28ED4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_190CA84E8();
  __swift_allocate_value_buffer(v3, qword_1EE20C050);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE20C050);
  sub_190CA8494();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for _EXExtensionProcessMannger()
{
  return objc_opt_self();
}

uint64_t sub_190C28FD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ADE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C2913C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190C315A4(a1, a2);
}

uint64_t sub_190C291C4(void *a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;

  objc_msgSend(a1, sel_auditToken);
  v3 = v25;
  v4 = HIDWORD(v25);
  v5 = v26;
  v6 = v27;
  v7 = v29;
  v24 = v30;
  v22 = v28;
  v23 = v31;
  if (qword_1ECD98D00 != -1)
    swift_once();
  v8 = sub_190CA8518();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ECD98D28);
  v9 = sub_190CA8500();
  v10 = sub_190CA87DC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v21 = a2;
    v12 = swift_slowAlloc();
    v25 = v12;
    v13 = v3 | (v4 << 32);
    v14 = v5 | (v6 << 32);
    *(_DWORD *)v11 = 136315138;
    v15 = v22 | (v7 << 32);
    v16 = v24 | (v23 << 32);
    v17 = sub_190CA07D4(v13, v14, v15, v16);
    sub_190C30058(v17, v18, &v25);
    sub_190CA88F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v9, v10, "Releasing launch assertion for audit token '%s'.", v11, 0xCu);
    swift_arrayDestroy();
    v19 = v12;
    a2 = v21;
    MEMORY[0x19401889C](v19, -1, -1);
    MEMORY[0x19401889C](v11, -1, -1);

  }
  else
  {

    v13 = v25 | ((unint64_t)HIDWORD(v25) << 32);
    v14 = v26 | ((unint64_t)v27 << 32);
    v15 = v28 | ((unint64_t)v29 << 32);
    v16 = v30 | ((unint64_t)v31 << 32);
  }
  sub_190C2E3C8(v13, v14, v15, v16);
  return a2();
}

void sub_190C293EC(void *a1, id a2, void (*a3)(id *))
{
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  char v13;

  if (a1)
  {
    v4 = a1;
    objc_opt_self();
    v12 = (id)swift_dynamicCastObjCClassUnconditional();
    v13 = 0;
    v5 = v12;
LABEL_3:
    v6 = v5;
    a3(&v12);

    return;
  }
  if (a2)
  {
    v12 = a2;
    v7 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A2A0);
    sub_190C2B30C(0, &qword_1EE20A2B0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v12 = v11;
      v13 = 1;
      v5 = v11;
      goto LABEL_3;
    }
  }
  sub_190CA85F0();
  v8 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v9 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithDomain_code_userInfo_, v9, 2, 0);

  v12 = v10;
  v13 = 1;
  a3(&v12);

}

unint64_t sub_190C29560()
{
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  sub_190CA84E8();
  sub_190C3946C();
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  return 0xD000000000000021;
}

void *sub_190C2960C(char a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  void *v5;
  void *v6;
  void *v7;
  id v9;
  os_unfair_lock_s *v10;

  if (objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration]+ OBJC_IVAR____EXLaunchConfiguration__extensionIdentity), sel_requiresLibXPCConnection))
  {
    v5 = (void *)objc_opt_self();
    v6 = (void *)sub_190CA85D8();
    objc_msgSend(v5, sel__EX_errorWithCode_description_, 6, v6);

    swift_willThrow();
  }
  else
  {
    v7 = (void *)sub_190C2C680();
    if (!v2)
    {
      v9 = v7;
      v3 = v9;
      if ((a1 & 1) != 0)
        objc_setAssociatedObject(v9, "_EX_extensionProcess", v1, (void *)0x301);
      v10 = (os_unfair_lock_s *)(*(_QWORD *)&v1[OBJC_IVAR____EXExtensionProcessHandle_xpcConnectionLock] + 16);
      os_unfair_lock_lock(v10);
      objc_msgSend(*(id *)&v1[OBJC_IVAR____EXExtensionProcessHandle_xpcConnections], sel_addObject_, v3);
      os_unfair_lock_unlock(v10);

    }
  }
  return v3;
}

void sub_190C297C0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id *v4;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  char *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  void *v22;
  id v23;
  id *v24;
  os_unfair_lock_s *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  _QWORD *v30;

  v4 = (id *)(a3 + 16);
  if (a2)
  {
    if (qword_1ECD98D00 != -1)
      swift_once();
    v6 = sub_190CA8518();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ECD98D28);
    v7 = a2;
    v8 = sub_190CA8500();
    v9 = sub_190CA87E8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v30 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138543362;
      v11 = v7;
      sub_190CA88F0();
      *v30 = a2;

      _os_log_impl(&dword_190C25000, v8, v9, "Launch failed with error: %{public}@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v30, -1, -1);
      MEMORY[0x19401889C](v10, -1, -1);

    }
    else
    {

    }
    swift_beginAccess();
    v28 = *v4;
    *v4 = a2;
    v15 = v7;
  }
  else if (a1)
  {
    v14 = a1;
    v23 = sub_190C34E00();
    v24 = (id *)(a4 + 16);
    v25 = (os_unfair_lock_s *)(*(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock] + 16);
    os_unfair_lock_lock(v25);
    v26 = *(void **)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertion];
    *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertion] = v23;
    v27 = v23;

    *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount] = 1;
    os_unfair_lock_unlock(v25);

    swift_beginAccess();
    v28 = *v24;
    *v24 = a1;
  }
  else
  {
    if (qword_1ECD98D00 != -1)
      swift_once();
    v16 = sub_190CA8518();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ECD98D28);
    v17 = sub_190CA8500();
    v18 = sub_190CA87E8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138543362;
      sub_190CA88F0();
      *v20 = 0;
      _os_log_impl(&dword_190C25000, v17, v18, "Launch failed with error: %{public}@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v20, -1, -1);
      MEMORY[0x19401889C](v19, -1, -1);
    }

    swift_beginAccess();
    if (*v4)
    {
      v21 = *v4;
      v22 = (void *)sub_190CA83E0();

    }
    else
    {
      v22 = 0;
    }
    v29 = objc_msgSend((id)objc_opt_self(), sel__EX_errorWithCode_underlyingError_, 2, v22);

    swift_beginAccess();
    v28 = *v4;
    *v4 = v29;
  }

}

void sub_190C29D94(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  id v8;

  if (qword_1ECD98D00 != -1)
    swift_once();
  v2 = sub_190CA8518();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ECD98D28);
  v8 = a1;
  v3 = sub_190CA8500();
  v4 = sub_190CA87DC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = v8;
    sub_190CA88F0();
    *v6 = v8;

    _os_log_impl(&dword_190C25000, v3, v4, "Launch assertions released for extension: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v6, -1, -1);
    MEMORY[0x19401889C](v5, -1, -1);

  }
  else
  {

  }
}

uint64_t AppExtensionProcess.Configuration._instanceIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 24);
  return sub_190C29FF4(a1, v3);
}

uint64_t AppExtensionProcess.Configuration._requireInvalidation.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppExtensionProcess.Configuration(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t sub_190C29FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_190C2A0E4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = v0;
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity), sel_bundleIdentifier);
  sub_190CA85F0();

  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  v3 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C50);
  sub_190CA8620();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  return 0x4449656C646E7562;
}

uint64_t sub_190C2A200()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_190CA8818();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v0);
  v2 = sub_190CA856C();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_190CA8824();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C2F8F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  sub_190CA8560();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_190C3A458((unint64_t *)&qword_1ECD98DF0, v1, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC8);
  sub_190C3A3D4((unint64_t *)&qword_1ECD98DE0, &qword_1ECD98DC8);
  sub_190CA8914();
  result = sub_190CA8848();
  qword_1EE20AE38 = result;
  return result;
}

uint64_t sub_190C2A3B4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_190C2A3E0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_didFinishLaunching);
}

uint64_t sub_190C2A468()
{
  uint64_t result;

  sub_190C2A4C4();
  result = sub_190CA88CC();
  qword_1ECD99010 = result;
  return result;
}

unint64_t sub_190C2A4C4()
{
  unint64_t result;

  result = qword_1ECD99020;
  if (!qword_1ECD99020)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECD99020);
  }
  return result;
}

id _EXExtensionProcess.__deallocating_deinit()
{
  char *v0;
  char *v1;
  os_unfair_lock_s *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v1 = *(char **)&v0[OBJC_IVAR____EXExtensionProcess__observer];
  v2 = (os_unfair_lock_s *)(*(_QWORD *)&v1[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandlerLock]
                          + 16);
  v3 = v1;
  os_unfair_lock_lock(v2);
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler];
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler
                    + 8];
  if (!v5)
    goto LABEL_4;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  sub_190C2FA88(v5);
  sub_190C2FC70((uint64_t)sub_190C45C08);
  os_unfair_lock_unlock(v2);

  v3 = &v0[OBJC_IVAR____EXExtensionProcess_configuration];
  swift_beginAccess();
  if ((*(_BYTE *)(*(_QWORD *)v3 + OBJC_IVAR____EXHostConfiguration_requireInvalidation) & 1) != 0)
  {
    sub_190CA8ADC();
    __break(1u);
LABEL_4:
    sub_190C2FA88(0);
    sub_190C2FC70(0);
    os_unfair_lock_unlock(v2);

  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for _EXExtensionProcess();
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

unint64_t sub_190C2A730()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = v0;
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  v2 = *(id *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration);
  v3 = objc_msgSend(v2, sel_description);
  sub_190CA85F0();

  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), "pid");
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

id sub_190C2A858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v4 = sub_190CA8554();
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190CA856C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(), sel_currentConnection);
  if (result)
  {
    v12 = result;
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
    v13 = (void *)sub_190CA8830();
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v12;
    v14[3] = a1;
    v14[4] = a2;
    aBlock[4] = sub_190C45C74;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190C2A3B4;
    aBlock[3] = &block_descriptor_9;
    v15 = _Block_copy(aBlock);
    v16 = v12;
    swift_retain();
    swift_release();
    sub_190CA8560();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_190C3A458((unint64_t *)&qword_1ECD98C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C40);
    sub_190C2F930();
    sub_190CA8914();
    MEMORY[0x1940176A8](0, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t initializeWithCopy for _AppExtensionProcess.Configuration(uint64_t a1, __int128 *a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  __int128 v17;
  char *v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  void *__dst;

  v17 = *a2;
  *(_OWORD *)a1 = *a2;
  v4 = (void *)*((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = (void *)*((_QWORD *)a2 + 8);
  v8 = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(int *)(a3 + 52);
  v18 = (char *)a2 + v9;
  __dst = (void *)(a1 + v9);
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  v10 = sub_190CA8548();
  v11 = *(_QWORD *)(v10 - 8);
  v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v12 = (id)v17;
  swift_retain();
  v13 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v7;
  swift_bridgeObjectRetain();
  if (v19(v18, 1, v10))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v11 + 16))(__dst, v18, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  return a1;
}

uint64_t AppExtensionProcess.init(configuration:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[16] = a1;
  v2[17] = a2;
  type metadata accessor for AppExtensionProcess.Configuration(0);
  v2[18] = swift_task_alloc();
  return swift_task_switch();
}

void static _AppExtensionProcess.make(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD aBlock[7];

  v6 = type metadata accessor for _AppExtensionProcess.Configuration(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _EXHostConfiguration();
  sub_190C39AA0(a1, (uint64_t)v8, type metadata accessor for _AppExtensionProcess.Configuration);
  v9 = (void *)sub_190C2BE44((uint64_t)v8);
  sub_190C2B30C(0, &qword_1EE20AE18);
  if (objc_msgSend(v9, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    v10 = (void *)objc_opt_self();
    objc_opt_self();
    v11 = swift_dynamicCastObjCClassUnconditional();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a2;
    *(_QWORD *)(v12 + 24) = a3;
    aBlock[4] = sub_190C45D4C;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190C2881C;
    aBlock[3] = &block_descriptor_4_1;
    v13 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_extensionProcessWithConfiguration_completionHandler_, v11, v13);
    _Block_release(v13);

  }
  else
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();

    swift_unexpectedError();
    __break(1u);
  }
}

void sub_190C2AFC0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration);
  v4 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle);
  v6 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_mainEndpoint);
  v8 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  v9 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_sessionEndpoint);
  v10 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  v11 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_libXPCEndpoint);
  v12 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  sub_190C2B30C(0, (unint64_t *)&unk_1EE20ADC8);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_190CA86B0();
  swift_bridgeObjectRelease();
  v14 = (id)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

}

uint64_t sub_190C2B30C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t destroy for _AppExtensionProcess.Configuration(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 52);
  v5 = sub_190CA8548();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_190C2B51C(uint64_t a1)
{
  void *v1;
  char v2;
  void *v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_190C3CB84(a1, (uint64_t)v5, &qword_1ECD98D20);
  if (!v6)
  {
    sub_190C38990((uint64_t)v5, &qword_1ECD98D20);
    goto LABEL_6;
  }
  type metadata accessor for _EXExtensionInstanceIdentifier();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    v2 = 0;
    return v2 & 1;
  }
  if (v4 == v1)
  {

    v2 = 1;
  }
  else
  {
    v2 = sub_190CA84AC();

  }
  return v2 & 1;
}

void sub_190C2B5D8(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_190C2B728(a2, a3, a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7];

        *(_QWORD *)(v23 + 8 * v16) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_190C83E98();
      goto LABEL_7;
    }
    sub_190C280F4(v19, a6 & 1);
    v24 = sub_190C2B728(a2, a3, a4, a5);
    if ((v20 & 1) == (v25 & 1))
    {
      v16 = v24;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_190C45A4C(v16, a2, a3, a4, a5, a1, v22);
      return;
    }
  }
  sub_190CA8BFC();
  __break(1u);
}

unint64_t sub_190C2B728(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  audit_token_t atoken;

  v8 = HIDWORD(a1);
  v9 = HIDWORD(a2);
  v10 = HIDWORD(a3);
  v11 = HIDWORD(a4);
  sub_190CA8C50();
  atoken.val[0] = a1;
  atoken.val[1] = v8;
  atoken.val[2] = a2;
  atoken.val[3] = v9;
  atoken.val[4] = a3;
  atoken.val[5] = v10;
  atoken.val[6] = a4;
  atoken.val[7] = v11;
  audit_token_to_pid(&atoken);
  sub_190CA8C74();
  atoken.val[0] = a1;
  atoken.val[1] = v8;
  atoken.val[2] = a2;
  atoken.val[3] = v9;
  atoken.val[4] = a3;
  atoken.val[5] = v10;
  atoken.val[6] = a4;
  atoken.val[7] = v11;
  audit_token_to_pidversion(&atoken);
  sub_190CA8C74();
  v12 = sub_190CA8C80();
  return sub_190C2B800(a1, a2, a3, a4, v12);
}

unint64_t sub_190C2B800(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  pid_t v22;
  int v23;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unint64_t v36;
  unsigned int v37;
  audit_token_t atoken;

  v6 = -1 << *(_BYTE *)(v5 + 32);
  v7 = a5 & ~v6;
  if (((*(_QWORD *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = a2;
    v9 = HIDWORD(a1);
    v26 = a3;
    v27 = a4;
    v25 = ~v6;
    v36 = HIDWORD(a1);
    v37 = a2;
    v10 = a1;
    v11 = HIDWORD(a2);
    v12 = HIDWORD(a3);
    v13 = HIDWORD(a4);
    do
    {
      v14 = (unsigned int *)(*(_QWORD *)(v29 + 48) + 32 * v7);
      v15 = *v14;
      v16 = v14[1];
      v17 = v14[2];
      v18 = v14[3];
      v19 = v14[4];
      v20 = v14[5];
      v21 = v14[6];
      LODWORD(v14) = v14[7];
      v34 = v16;
      v35 = v15;
      atoken.val[0] = v15;
      atoken.val[1] = v16;
      v32 = v18;
      v33 = v17;
      atoken.val[2] = v17;
      atoken.val[3] = v18;
      atoken.val[4] = v19;
      atoken.val[5] = v20;
      v30 = v14;
      v31 = v21;
      atoken.val[6] = v21;
      atoken.val[7] = v14;
      v22 = audit_token_to_pid(&atoken);
      atoken.val[0] = v10;
      atoken.val[1] = v9;
      atoken.val[2] = v8;
      atoken.val[3] = v11;
      atoken.val[4] = v26;
      atoken.val[5] = v12;
      atoken.val[6] = v27;
      atoken.val[7] = v13;
      if (v22 == audit_token_to_pid(&atoken))
      {
        atoken.val[0] = v35;
        atoken.val[1] = v34;
        atoken.val[2] = v33;
        atoken.val[3] = v32;
        atoken.val[4] = v19;
        atoken.val[5] = v20;
        atoken.val[6] = v31;
        atoken.val[7] = v30;
        v23 = audit_token_to_pidversion(&atoken);
        atoken.val[0] = v10;
        atoken.val[1] = v36;
        atoken.val[2] = v37;
        atoken.val[3] = v11;
        atoken.val[4] = v26;
        atoken.val[5] = v12;
        atoken.val[6] = v27;
        atoken.val[7] = v13;
        if (v23 == audit_token_to_pidversion(&atoken))
          break;
      }
      v7 = (v7 + 1) & v25;
      LODWORD(v9) = v36;
      v8 = v37;
    }
    while (((*(_QWORD *)(v28 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_190C2B9A8()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD **)(v0 + 128);
  sub_190C2BA04(*(_QWORD *)(v0 + 136), type metadata accessor for AppExtensionProcess.Configuration);
  v3 = *(_QWORD *)(v0 + 120);

  *v2 = v3;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190C2BA04(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_190C2BA40(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  void *v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v20;
  void *v21;
  id v22;
  void *v23;
  __int128 v24;
  void *v25;
  __int128 aBlock;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  v3 = (id *)(v2 + 16);
  v4 = sub_190C2C148();
  v29 = sub_190C7DC40;
  v30 = v2;
  v5 = MEMORY[0x1E0C809B0];
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v27 = sub_190C79838;
  v28 = &block_descriptor_14;
  v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v7 = objc_msgSend(v4, sel_synchronousRemoteObjectProxyWithErrorHandler_, v6);
  _Block_release(v6);

  sub_190CA8908();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ACD0);
  if (swift_dynamicCast())
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v2;
    *(_QWORD *)(v9 + 24) = v8;
    v29 = sub_190C45CDC;
    v30 = v9;
    *(_QWORD *)&aBlock = v5;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v27 = sub_190C45C80;
    v28 = &block_descriptor_23;
    v10 = _Block_copy(&aBlock);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v25, sel_prepareWithLaunchConfiguration_reply_, a1, v10);
    _Block_release(v10);
    swift_beginAccess();
    v11 = *(char **)(v8 + 16);
    if (v11)
    {
      v12 = *(void **)&v11[OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle];
      v13 = v11;
      objc_msgSend(v12, sel_auditToken);
      v24 = aBlock;
      v14 = v27;
      v15 = v28;
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v13;
      v29 = sub_190C45CD4;
      v30 = v16;
      *(_QWORD *)&aBlock = v5;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v27 = sub_190C2A3B4;
      v28 = &block_descriptor_29;
      v17 = _Block_copy(&aBlock);
      v18 = v13;
      swift_release();
      aBlock = v24;
      v27 = v14;
      v28 = v15;
      objc_msgSend(v25, sel_invalidateLaunchAssertionsForExtensionAuditToken_reply_, &aBlock, v17);
      _Block_release(v17);
      swift_release();
      swift_unknownObjectRelease_n();
      swift_release();
      return (uint64_t)v18;
    }
    swift_beginAccess();
    if (*v3)
    {
      v22 = *v3;
      v23 = (void *)sub_190CA83E0();

    }
    else
    {
      v23 = 0;
    }
    objc_msgSend((id)objc_opt_self(), sel__EX_errorWithCode_underlyingError_, 2, v23);

    swift_willThrow();
    swift_release();
    swift_unknownObjectRelease_n();
  }
  else
  {
    swift_beginAccess();
    if (*v3)
    {
      v20 = *v3;
      v21 = (void *)sub_190CA83E0();

    }
    else
    {
      v21 = 0;
    }
    objc_msgSend((id)objc_opt_self(), sel__EX_errorWithCode_underlyingError_, 2, v21);

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_190C2BE44(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(id *)a1;
  objc_opt_self();
  v7 = (void *)swift_dynamicCastObjCClassUnconditional();
  v8 = objc_allocWithZone(v1);
  v9 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
  v10 = (char *)sub_190C39EB8(v7, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v11 = *(_QWORD *)(a1 + 16);
  v12 = &v10[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  v13 = *(_QWORD *)&v10[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  *(_QWORD *)v12 = *(_QWORD *)(a1 + 8);
  *((_QWORD *)v12 + 1) = v11;
  v14 = v10;
  swift_retain();
  sub_190C2FC70(v13);
  v15 = *(void **)(a1 + 24);
  if (!v15)
    goto LABEL_4;
  type metadata accessor for _EXExtensionInstanceIdentifier();
  if (objc_msgSend(v15, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    v16 = swift_dynamicCastClassUnconditional();
    v17 = *(void **)&v14[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = v16;

LABEL_4:
    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(a1 + 56);
    v19 = &v14[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
    *(_QWORD *)v19 = *(_QWORD *)(a1 + 48);
    *((_QWORD *)v19 + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = *(_QWORD *)(a1 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = *(void **)(a1 + 64);
    v21 = *(void **)&v14[OBJC_IVAR____EXHostConfiguration_launchPersona];
    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_launchPersona] = v20;
    v22 = v20;

    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_assertionAttributes] = *(_QWORD *)(a1 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = *(_BYTE *)(a1 + 80);
    v23 = type metadata accessor for _AppExtensionProcess.Configuration(0);
    sub_190C3CB84(a1 + *(int *)(v23 + 52), (uint64_t)v5, &qword_1ECD98D60);
    sub_190C2BA04(a1, type metadata accessor for _AppExtensionProcess.Configuration);
    v24 = (uint64_t)&v14[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
    swift_beginAccess();
    sub_190C683B0((uint64_t)v5, v24);
    swift_endAccess();

    return (uint64_t)v14;
  }
  v26 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_190C2C148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____EXServiceClient_connectionLock) + 16);
  os_unfair_lock_lock(v5);
  v6 = OBJC_IVAR____EXServiceClient__launchConnection;
  v7 = *(void **)(v1 + OBJC_IVAR____EXServiceClient__launchConnection);
  if (v7)
  {
    v8 = v7;
    os_unfair_lock_unlock(v5);
    return v8;
  }
  v10 = sub_190CA84E8();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v4, 1, 1, v10);
  v12 = (void *)sub_190CA85D8();
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) != 1)
  {
    v13 = (void *)sub_190CA84A0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  v14 = (void *)sub_190CA85D8();
  v15 = objc_msgSend((id)objc_opt_self(), sel_endpointForServiceName_oneshot_service_instance_, v12, v13, v14, 0);

  if (!v15)
  {
    if (qword_1EE20ADE8 != -1)
      swift_once();
    v26 = sub_190CA8518();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE20AE20);
    v27 = sub_190CA8500();
    v28 = sub_190CA87F4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      aBlock = v30;
      *(_DWORD *)v29 = 136446466;
      v38 = sub_190C30058(0xD00000000000001DLL, 0x8000000190CB5330, &aBlock);
      sub_190CA88F0();
      *(_WORD *)(v29 + 12) = 2082;
      v38 = sub_190C30058(0x68636E75614CLL, 0xE600000000000000, &aBlock);
      sub_190CA88F0();
      swift_arrayDestroy();
      MEMORY[0x19401889C](v30, -1, -1);
      MEMORY[0x19401889C](v29, -1, -1);
    }

    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3B38]), sel_init);
    goto LABEL_14;
  }
  v16 = (void *)objc_opt_self();
  v36 = nullsub_1;
  v37 = 0;
  v17 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v33 = 1107296256;
  v34 = sub_190C28AF8;
  v35 = &block_descriptor_82;
  v18 = _Block_copy(&aBlock);
  swift_release();
  v19 = objc_msgSend(v16, sel_NSXPCConnectionWithEndpoint_configurator_, v15, v18);
  _Block_release(v18);
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (qword_1EE20ADB8 != -1)
LABEL_16:
    swift_once();
  objc_msgSend(v19, sel_setRemoteObjectInterface_, qword_1EE20DF50[0]);
  v20 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v36 = sub_190C7E76C;
  v37 = v20;
  aBlock = v17;
  v33 = 1107296256;
  v34 = sub_190C2A3B4;
  v35 = &block_descriptor_88;
  v21 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v19, sel_setInterruptionHandler_, v21);
  _Block_release(v21);
  v22 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v36 = sub_190C7E78C;
  v37 = v22;
  aBlock = v17;
  v33 = 1107296256;
  v34 = sub_190C2A3B4;
  v35 = &block_descriptor_92;
  v23 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v19, sel_setInvalidationHandler_, v23);
  _Block_release(v23);
  v24 = *(void **)(v1 + v6);
  *(_QWORD *)(v1 + v6) = v19;
  v25 = v19;

  objc_msgSend(v25, sel_activate);
LABEL_14:
  os_unfair_lock_unlock(v5);
  return v25;
}

uint64_t sub_190C2C680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t result;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t aBlock;
  unint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  void *v47;
  uint64_t (*v48)();
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration);
  v6 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity), sel_serviceName);
  v43 = sub_190CA85F0();
  v8 = v7;

  if (qword_1EE20ADE8 != -1)
    swift_once();
  v9 = sub_190CA8518();
  v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE20AE20);
  swift_bridgeObjectRetain_n();
  v11 = sub_190CA8500();
  v12 = sub_190CA87DC();
  v13 = os_log_type_enabled(v11, v12);
  v42 = v10;
  if (v13)
  {
    v40 = v1;
    v14 = swift_slowAlloc();
    v41 = v4;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    aBlock = v16;
    *(_DWORD *)v15 = 136446210;
    swift_bridgeObjectRetain();
    v50 = sub_190C30058(v43, v8, &aBlock);
    v1 = v40;
    sub_190CA88F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_190C25000, v11, v12, "Creating connection for extension withidentifier: '%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v16, -1, -1);
    v17 = v15;
    v4 = v41;
    MEMORY[0x19401889C](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_mainEndpoint);
  if (v18 && (v19 = *(void **)(v18 + OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint)) != 0)
  {
    v20 = v19;
    v21 = v43;
  }
  else
  {
    v22 = *(_QWORD *)(v5 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
    v21 = v43;
    if (v22)
    {
      v23 = v22 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
      v24 = sub_190CA84E8();
      v25 = *(_QWORD *)(v24 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v4, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v4, 0, 1, v24);
    }
    else
    {
      v24 = sub_190CA84E8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v4, 1, 1, v24);
    }
    swift_bridgeObjectRetain();
    v26 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    sub_190CA84E8();
    v27 = *(_QWORD *)(v24 - 8);
    v28 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v24) != 1)
    {
      v28 = (void *)sub_190CA84A0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v24);
    }
    v29 = (void *)sub_190CA85D8();
    v20 = objc_msgSend((id)objc_opt_self(), sel_endpointForServiceName_oneshot_service_instance_, v26, v28, v29, 0);

    if (!v20)
    {
      v19 = 0;
      goto LABEL_20;
    }
    v19 = v20;
  }
  v30 = v20;
  v31 = (void *)objc_opt_self();
  v48 = sub_190C45ACC;
  v49 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v45 = 1107296256;
  v46 = sub_190C28AF8;
  v47 = &block_descriptor_4_0;
  v32 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v31, sel_NSXPCConnectionWithEndpoint_configurator_, v30, v32);
  _Block_release(v32);

  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    if (v20)
    {
      swift_bridgeObjectRelease();

      return (uint64_t)v20;
    }
LABEL_20:
    swift_bridgeObjectRetain_n();
    v34 = sub_190CA8500();
    v35 = sub_190CA87E8();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      aBlock = v37;
      *(_DWORD *)v36 = 136315138;
      v20 = v36 + 12;
      swift_bridgeObjectRetain();
      v50 = sub_190C30058(v21, v8, &aBlock);
      sub_190CA88F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_190C25000, v34, v35, "Failed to create connection for extension: '%s'", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v37, -1, -1);
      MEMORY[0x19401889C](v36, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v38 = (void *)objc_opt_self();
    aBlock = 0;
    v45 = 0xE000000000000000;
    sub_190CA89D4();
    swift_bridgeObjectRelease();
    aBlock = 0xD000000000000026;
    v45 = 0x8000000190CB6320;
    sub_190CA8644();
    swift_bridgeObjectRelease();
    v39 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v38, sel__EX_errorWithCode_description_, 6, v39);

    swift_willThrow();
    return (uint64_t)v20;
  }
  __break(1u);
  return result;
}

void sub_190C2CDEC(void *a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  id v16;
  id v17;
  _QWORD *v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  char *v24;
  void *v25;
  id v26;
  NSObject *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  char *v38;
  void *v39;
  void (**v40)(_QWORD, _QWORD, _QWORD);
  _QWORD *v41;
  unint64_t aBlock;
  unint64_t v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;

  v4 = objc_msgSend((id)objc_opt_self(), sel_currentConnection);
  if (!v4)
  {
    _Block_release(a2);
    __break(1u);
    return;
  }
  v5 = v4;
  if (qword_1ECD98D00 != -1)
    swift_once();
  v6 = sub_190CA8518();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ECD98D28);
  v7 = a1;
  v8 = v5;
  v9 = v7;
  v10 = v8;
  v11 = sub_190CA8500();
  v12 = sub_190CA87DC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v40 = a2;
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138543618;
    v39 = v5;
    v15 = v10;
    v16 = v9;
    sub_190CA88F0();
    *v14 = v9;

    *(_WORD *)(v13 + 12) = 2114;
    aBlock = (unint64_t)v10;
    v17 = v10;
    sub_190CA88F0();
    v14[1] = v39;

    v10 = v15;
    _os_log_impl(&dword_190C25000, v11, v12, "Preparing extension %{public}@ for host: %{public}@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    v18 = v14;
    a2 = v40;
    MEMORY[0x19401889C](v18, -1, -1);
    MEMORY[0x19401889C](v13, -1, -1);

  }
  else
  {

  }
  objc_msgSend(v10, sel_auditToken, v39);
  v19 = (char *)(id)sub_190C33620((char *)v9, aBlock, v43, (unint64_t)v44, (unint64_t)v45);
  v20 = sub_190CA8500();
  v21 = sub_190CA87DC();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v41 = (_QWORD *)swift_slowAlloc();
    aBlock = (unint64_t)v19;
    *(_DWORD *)v22 = 138543362;
    v23 = v10;
    v24 = v19;
    sub_190CA88F0();
    *v41 = v19;

    v10 = v23;
    _os_log_impl(&dword_190C25000, v20, v21, "launched extension process: %{public}@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v41, -1, -1);
    MEMORY[0x19401889C](v22, -1, -1);

  }
  else
  {

  }
  ((void (**)(_QWORD, char *, _QWORD))a2)[2](a2, v19, 0);
  v25 = *(void **)&v19[OBJC_IVAR____EXExtensionProcessHandle_assertion];
  if (v25)
  {
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
    v26 = v25;
    v27 = sub_190CA8830();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v19;
    v28[3] = v10;
    v28[4] = v26;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = sub_190C70548;
    *(_QWORD *)(v29 + 24) = v28;
    v46 = sub_190C45C08;
    v47 = v29;
    aBlock = MEMORY[0x1E0C809B0];
    v43 = 1107296256;
    v44 = sub_190C45C38;
    v45 = &block_descriptor_18;
    v30 = _Block_copy(&aBlock);
    v31 = v10;
    v19 = v19;
    v32 = v26;
    swift_retain();
    swift_release();
    dispatch_sync(v27, v30);

    _Block_release(v30);
    LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v30 & 1) == 0)
      return;
    __break(1u);
  }
  v33 = v19;
  v34 = sub_190CA8500();
  v35 = sub_190CA87E8();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v36 = 138412290;
    aBlock = (unint64_t)v33;
    v38 = v33;
    sub_190CA88F0();
    *v37 = v19;

    _os_log_impl(&dword_190C25000, v34, v35, "No assertion taken during launch of %@", v36, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v37, -1, -1);
    MEMORY[0x19401889C](v36, -1, -1);

  }
  else
  {

  }
}

id sub_190C2D560()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v1 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  swift_bridgeObjectRetain();
  v2 = sub_190C80754();
  v3 = v2;
  if (v0)
  {

LABEL_4:
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(v4, sel__EX_parameterError);
    swift_willThrow();
    sub_190CA89D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v6 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel__EX_errorWithCode_description_, 5, v6, 0x6F69736E65747845, 0xEB0000000060206ELL);

    swift_willThrow();
    return v3;
  }
  if (!v2)
    goto LABEL_4;
  return v3;
}

id AppExtensionProcess._makeLibXPCConnection()()
{
  return sub_190C2D808((SEL *)&selRef_makeLibXPCConnectionWithError_);
}

id sub_190C2D808(SEL *a1)
{
  void **v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *v1;
  v7[0] = 0;
  v3 = objc_msgSend(v2, *a1, v7);
  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    sub_190CA83EC();

    swift_willThrow();
  }
  return v3;
}

xpc_connection_t sub_190C2D94C()
{
  char *v0;
  char *v1;
  _xpc_endpoint_s *v2;
  xpc_connection_t result;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  char *v10;
  void *v11;
  void *v12;

  if (!objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration]+ OBJC_IVAR____EXLaunchConfiguration__extensionIdentity), sel_requiresLibXPCConnection))
  {
LABEL_13:
    v11 = (void *)objc_opt_self();
    v12 = (void *)sub_190CA85D8();
    objc_msgSend(v11, sel__EX_errorWithCode_description_, 6, v12);

    return (xpc_connection_t)swift_willThrow();
  }
  v1 = *(char **)&v0[OBJC_IVAR____EXExtensionProcessHandle_libXPCEndpoint];
  if (!v1
    || (v2 = *(_xpc_endpoint_s **)&v1[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint]) == 0
    || (result = xpc_connection_create_from_endpoint(v2)) == 0)
  {
    if (qword_1EE20ADE8 != -1)
      swift_once();
    v4 = sub_190CA8518();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EE20AE20);
    v5 = v0;
    v6 = sub_190CA8500();
    v7 = sub_190CA87E8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      if (v1)
        v10 = v1;
      sub_190CA88F0();
      *v9 = v1;

      _os_log_impl(&dword_190C25000, v6, v7, "Failed to create connection for extension from endpoint %@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v9, -1, -1);
      MEMORY[0x19401889C](v8, -1, -1);

    }
    else
    {

    }
    goto LABEL_13;
  }
  return result;
}

void sub_190C2DC30(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t (*v49)();
  uint64_t v50;

  v2 = v1;
  v4 = objc_msgSend(a1, sel_remoteProcess);
  if (qword_1EE20ADE8 != -1)
    swift_once();
  v5 = sub_190CA8518();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE20AE20);
  v6 = v4;
  v7 = sub_190CA8500();
  v8 = sub_190CA87DC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 67109120;
    LODWORD(v45) = -[NSObject pid](v6, "pid");
    sub_190CA88F0();

    _os_log_impl(&dword_190C25000, v7, v8, "Received connection request from '%d'", v9, 8u);
    MEMORY[0x19401889C](v9, -1, -1);

  }
  else
  {

  }
  v10 = objc_msgSend(a1, sel_service, v45);
  v11 = sub_190CA85F0();
  v13 = v12;

  if (v11 == 0x7265766F63736944 && v13 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v14 = sub_190CA8BCC();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_10:
    if (qword_1EE20B7F0 != -1)
      goto LABEL_42;
    while (1)
    {
      v15 = &qword_1EE20E3D8;
LABEL_12:
      v16 = (id)*v15;
      v17 = v6;
      v6 = v16;
      v18 = sub_190CA8500();
      v19 = sub_190CA8800();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v20 = 67109120;
        LODWORD(v45) = -[NSObject pid](v17, "pid");
        sub_190CA88F0();

        _os_log_impl(&dword_190C25000, v18, v19, "Starting XPC listener for connection request from '%d'", v20, 8u);
        MEMORY[0x19401889C](v20, -1, -1);
      }
      else
      {

        v18 = v17;
      }

      v49 = nullsub_1;
      v50 = 0;
      v21 = MEMORY[0x1E0C809B0];
      v45 = MEMORY[0x1E0C809B0];
      v46 = 1107296256;
      v47 = sub_190C28AF8;
      v48 = &block_descriptor_37;
      v22 = _Block_copy(&v45);
      swift_release();
      v23 = objc_msgSend(a1, sel_extractNSXPCConnectionWithConfigurator_, v22);
      _Block_release(v22);
      if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
        break;
      __break(1u);
LABEL_42:
      swift_once();
    }
    objc_msgSend(v23, sel_setExportedInterface_, v6);
    objc_msgSend(v23, sel_setExportedObject_, v2);
    v24 = objc_msgSend(a1, sel_service);
    v25 = sub_190CA85F0();
    v27 = v26;

    if (v25 == 0x68636E75614CLL && v27 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = sub_190CA8BCC();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
LABEL_21:
        objc_msgSend(v23, sel_activate);

        goto LABEL_22;
      }
    }
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v23;
    v49 = sub_190C70640;
    v50 = v29;
    v45 = v21;
    v46 = 1107296256;
    v47 = sub_190C2A3B4;
    v48 = &block_descriptor_43;
    v30 = _Block_copy(&v45);
    v31 = v23;
    swift_release();
    objc_msgSend(v31, sel_setInvalidationHandler_, v30);
    _Block_release(v30);
    goto LABEL_21;
  }
  v32 = objc_msgSend(a1, sel_service);
  v33 = sub_190CA85F0();
  v35 = v34;

  if (v33 == 0x68636E75614CLL && v35 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    if (qword_1EE20ADB8 != -1)
      swift_once();
    v15 = qword_1EE20DF50;
    goto LABEL_12;
  }
  v36 = sub_190CA8BCC();
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
    goto LABEL_27;
  v37 = objc_msgSend(a1, sel_service);
  v38 = sub_190CA85F0();
  v40 = v39;

  if (v38 == 0x79786F7250434354 && v40 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_34:
    if (qword_1EE20B800 != -1)
      swift_once();
    v15 = &qword_1EE20E3E0;
    goto LABEL_12;
  }
  v41 = sub_190CA8BCC();
  swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
    goto LABEL_34;
  v6 = v6;
  v42 = sub_190CA8500();
  v43 = sub_190CA8800();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v44 = 67109120;
    LODWORD(v45) = -[NSObject pid](v6, "pid");
    sub_190CA88F0();

    _os_log_impl(&dword_190C25000, v42, v43, "No XPC interface available. XPC listener was *not* started for connection request from '%d'", v44, 8u);
    MEMORY[0x19401889C](v44, -1, -1);
  }
  else
  {

    v42 = v6;
  }

  objc_msgSend(a1, sel_invalidate);
LABEL_22:

}

uint64_t sub_190C2E374(SEL *a1)
{
  id *v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(*v1, *a1);
  v3 = sub_190CA85F0();

  return v3;
}

void sub_190C2E3C8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t, uint64_t);
  char v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v5 = v4;
  v24 = a3;
  v25 = a4;
  v23 = a2;
  v7 = sub_190CA8578();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  *v10 = sub_190CA8830();
  v11 = *MEMORY[0x1E0DEF740];
  v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104);
  v12(v10, v11, v7);
  v13 = sub_190CA8584();
  v14 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v22 = v5;
  v15 = sub_190C2E914();
  swift_bridgeObjectRetain();
  a1 = sub_190C2B728(a1, v23, v24, v25);
  v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v19 = 0;
    goto LABEL_6;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v26 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_10;
  while (1)
  {
    v19 = *(void **)(*(_QWORD *)(v15 + 56) + 8 * a1);
    sub_190C83970(a1, v15);
    swift_bridgeObjectRelease();
LABEL_6:
    *v10 = sub_190CA8830();
    v12(v10, v11, v7);
    a1 = sub_190CA8584();
    v14(v10, v7);
    if ((a1 & 1) != 0)
      break;
LABEL_9:
    __break(1u);
LABEL_10:
    sub_190C83E98();
    v15 = v26;
  }
  sub_190C2B30C(0, &qword_1EE20A318);
  sub_190C45CE4();
  v20 = (void *)sub_190CA8590();
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v22, "_EX_assertions", v20, (void *)0x301);

  objc_msgSend(v19, sel_invalidate);
}

void sub_190C2E5EC(void *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void (*v16)(_QWORD);
  char v17;
  void (*v18)(uint64_t *, uint64_t);
  unint64_t v19;
  uint64_t v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  void (*v23)(uint64_t *, uint64_t);
  void *v24;
  void (*v25)(uint64_t *, _QWORD, uint64_t);
  char v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  char v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  id v40;
  void (*v41)(_QWORD);
  unsigned int v42;
  uint64_t v43;

  v6 = v5;
  v40 = a1;
  v11 = sub_190CA8578();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  *v14 = sub_190CA8830();
  v16 = *(void (**)(_QWORD))(v12 + 104);
  v42 = *MEMORY[0x1E0DEF740];
  v41 = v16;
  v16(v14);
  v17 = sub_190CA8584();
  v18 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  v18(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v19 = a3;
  v20 = sub_190C2E914();
  swift_bridgeObjectRetain();
  v35 = a2;
  v36 = v19;
  v38 = a5;
  a5 = sub_190C2B728(a2, v19, a4, a5);
  LOBYTE(v19) = v21;
  swift_bridgeObjectRelease();
  v39 = v6;
  v37 = a4;
  if ((v19 & 1) == 0)
  {
    v23 = v18;
    v24 = 0;
    v6 = (void *)v15;
    goto LABEL_6;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43 = v20;
  v6 = (void *)v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_12;
  while (1)
  {
    v23 = v18;
    v24 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * a5);
    sub_190C83970(a5, v20);
    swift_bridgeObjectRelease();
LABEL_6:
    v25 = (void (*)(uint64_t *, _QWORD, uint64_t))v41;
    *v14 = sub_190CA8830();
    v25(v14, v42, v11);
    v26 = sub_190CA8584();
    v23(v14, v11);
    if ((v26 & 1) == 0)
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
    a5 = sub_190C2B30C(0, &qword_1EE20A318);
    v18 = (void (*)(uint64_t *, uint64_t))v6;
    v6 = (void *)sub_190C45CE4();
    v27 = (void *)sub_190CA8590();
    swift_bridgeObjectRelease();
    v28 = v39;
    objc_setAssociatedObject(v39, "_EX_assertions", v27, (void *)0x301);

    objc_msgSend(v24, sel_invalidate);
    v29 = v28;
    v30 = v40;
    v31 = sub_190C2E914();
    v32 = swift_isUniquelyReferenced_nonNull_native();
    v43 = v31;
    sub_190C2B5D8((uint64_t)v30, v35, v36, v37, v38, v32);
    swift_bridgeObjectRelease();
    *v14 = sub_190CA8830();
    v25(v14, v42, v11);
    LOBYTE(v31) = sub_190CA8584();
    v23(v14, v11);
    if ((v31 & 1) != 0)
      break;
LABEL_11:
    __break(1u);
LABEL_12:
    sub_190C83E98();
    v20 = v43;
  }
  v33 = (void *)sub_190CA8590();
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v29, "_EX_assertions", v33, (void *)0x301);

}

uint64_t sub_190C2E914()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  void *v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_190CA8578();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  *v5 = sub_190CA8830();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = sub_190CA8584();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (objc_getAssociatedObject(v1, "_EX_assertions"))
  {
    sub_190CA8908();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_190C2EAE8((uint64_t)v9, (uint64_t)v10);
  if (!v11)
  {
    sub_190C459C8((uint64_t)v10);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20A308);
  if ((swift_dynamicCast() & 1) == 0 || (result = v12) == 0)
  {
LABEL_10:
    v12 = MEMORY[0x1E0DEE9E0];
    sub_190C2B30C(0, &qword_1EE20A318);
    sub_190C45CE4();
    v8 = (void *)sub_190CA8590();
    objc_setAssociatedObject(v1, "_EX_assertions", v8, (void *)0x301);

    result = v12;
    if (v12)
      return result;
LABEL_13:
    __break(1u);
  }
  return result;
}

uint64_t sub_190C2EAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_190C2EB84(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  swift_bridgeObjectRetain();
  v3 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  swift_bridgeObjectRetain();
  v5 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  if (*(_QWORD *)(v1 + OBJC_IVAR____EXDomainAttribute_sourceEnvironment + 8))
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    v8 = (id)sub_190CA85D8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  }
}

ExtensionFoundation::AppExtensionIdentity __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppExtensionIdentity.init(serviceIdentifier:)(Swift::String serviceIdentifier)
{
  objc_class **v1;
  uint64_t v2;
  objc_class **v3;
  id v4;
  objc_class *v5;
  __int16 v6;
  NSString *v7;
  ExtensionFoundation::AppExtensionIdentity result;

  v3 = v1;
  v4 = objc_allocWithZone((Class)_EXExtensionIdentity);
  v5 = (objc_class *)sub_190C2ED9C();
  if (!v2)
  {
    objc_opt_self();
    v5 = (objc_class *)swift_dynamicCastObjCClassUnconditional();
    *v3 = v5;
  }
  result._inner._developerName = v7;
  result._inner.super.isa = v5;
  *(_WORD *)&result._inner._requiresUIKitSceneHosting = v6;
  return result;
}

id sub_190C2ED9C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithServiceIdentifier_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_190CA83EC();

    swift_willThrow();
  }
  return v2;
}

uint64_t _s19ExtensionFoundation03AppA7ProcessV11_auditTokenSo0E8_token_tavg_0()
{
  id *v0;
  uint64_t v2;

  objc_msgSend(*v0, sel_auditToken);
  return v2;
}

void sub_190C2EF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  os_unfair_lock_s *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  os_unfair_lock_s *v10;
  id v11;
  os_unfair_lock_s *v12;
  id v13;

  v1 = v0;
  v2 = OBJC_IVAR____EXExtensionProcess__observer;
  v3 = *(char **)(v0 + OBJC_IVAR____EXExtensionProcess__observer);
  v4 = (os_unfair_lock_s *)(*(_QWORD *)&v3[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandlerLock]
                          + 16);
  v5 = v3;
  os_unfair_lock_lock(v4);
  v6 = &v5[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler];
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  sub_190C2FC70(v7);
  os_unfair_lock_unlock(v4);

  v8 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcess__processHandle);
  v9 = *(void **)(v1 + v2);
  v10 = (os_unfair_lock_s *)(*(_QWORD *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_observersLock) + 16);
  v11 = v9;
  os_unfair_lock_lock(v10);
  objc_msgSend(*(id *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_observers), sel_removeObject_, v11);
  os_unfair_lock_unlock(v10);

  v12 = (os_unfair_lock_s *)(*(_QWORD *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_invalidationLock) + 16);
  os_unfair_lock_lock(v12);
  v13 = *(id *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_assertion);
  if (v13)
  {
    *(_QWORD *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_assertion) = 0;
    *(_QWORD *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount) = 0;
  }
  os_unfair_lock_unlock(v12);
  objc_msgSend(v13, sel_invalidate);
  sub_190C8A7D8();

}

uint64_t EXExtensionMain(uint64_t a1, uint64_t *a2)
{
  void *v4;
  char *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __objc2_class *v10;
  int v12;
  uint64_t v13;
  __int16 v14;
  char *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x194018140]();
  v5 = getenv("EXTENSION_KIT_EXTENSION_TYPE");
  _EXDefaultLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *a2;
    v12 = 136446466;
    v13 = v7;
    v14 = 2082;
    v15 = v5;
  }

  +[_EXRunningExtensionInfo notifyExtensionMainCalled](_EXRunningExtensionInfo, "notifyExtensionMainCalled");
  if (v5)
  {
    +[_EXRunningExtension sharedInstance](_EXRunningExtension, "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "startWithArguments:count:", a2, a1);

  }
  else
  {
    if (_os_feature_enabled_impl())
      v10 = EXPKService;
    else
      v10 = (__objc2_class *)MEMORY[0x1E0D7D438];
    v9 = -[__objc2_class _defaultRun:arguments:](v10, "_defaultRun:arguments:", a1, a2);
  }
  objc_autoreleasePoolPop(v4);
  return v9;
}

void sub_190C2F720()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v1 = sub_190CA8554();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190CA856C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_checkIn);
  objc_msgSend(v0, sel_willFinishLaunching);
  sub_190C2F8F4();
  v9 = (void *)sub_190CA8830();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_190C2A3E0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190C2A3B4;
  aBlock[3] = &block_descriptor_7;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  swift_release();
  sub_190CA8560();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_190C2F97C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C40);
  sub_190C2F930();
  sub_190CA8914();
  MEMORY[0x1940176A8](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  xpc_main((xpc_connection_handler_t)sub_190C2F9F8);
}

unint64_t sub_190C2F8F4()
{
  unint64_t result;

  result = qword_1ECD98E28;
  if (!qword_1ECD98E28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECD98E28);
  }
  return result;
}

unint64_t sub_190C2F930()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECD98C70;
  if (!qword_1ECD98C70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ECD98C40);
    result = MEMORY[0x1940187DC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ECD98C70);
  }
  return result;
}

unint64_t sub_190C2F97C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECD98C60;
  if (!qword_1ECD98C60)
  {
    v1 = sub_190CA8554();
    result = MEMORY[0x1940187DC](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ECD98C60);
  }
  return result;
}

uint64_t sub_190C2F9F8(uint64_t a1)
{
  void *ObjCClassFromMetadata;
  char *v3;
  void (*v4)(uint64_t);

  type metadata accessor for _EXRunningLibXPCServiceExtension();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_unknownObjectRetain();
  v3 = (char *)objc_msgSend(ObjCClassFromMetadata, sel_sharedInstance);
  v4 = *(void (**)(uint64_t))&v3[OBJC_IVAR____EXRunningLibXPCServiceExtension_connectionHandler];
  sub_190C2FA88((uint64_t)v4);

  if (v4)
  {
    v4(a1);
    sub_190C2FC70((uint64_t)v4);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_190C2FA88(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_190C2FAFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 8))();
}

uint64_t sub_190C2FB38()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

id sub_190C2FB58(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_handleConnection_, a1);
}

uint64_t sub_190C2FB6C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id (**v10)(uint64_t);
  uint64_t v11;

  type metadata accessor for _EXRunningLibXPCServiceExtension();
  v5 = (uint64_t (*)(uint64_t, uint64_t))objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entryPointFunction);
  if (!v5)
    return 1;
  v6 = v5(a2, a1);
  v7 = objc_msgSend(v2, sel_extension);
  objc_msgSend(v7, sel_setHasSwiftEntryPoint_, 1);

  v8 = objc_msgSend(v2, sel_extension);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  v10 = (id (**)(uint64_t))&v2[OBJC_IVAR____EXRunningLibXPCServiceExtension_connectionHandler];
  v11 = *(_QWORD *)&v2[OBJC_IVAR____EXRunningLibXPCServiceExtension_connectionHandler];
  *v10 = sub_190C2FB58;
  v10[1] = (id (*)(uint64_t))v9;
  sub_190C2FC70(v11);
  return v6;
}

uint64_t type metadata accessor for _EXRunningLibXPCServiceExtension()
{
  return objc_opt_self();
}

uint64_t sub_190C2FC70(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_190C2FC80(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char *a5, char a6)
{
  id v8;

  v8 = a3;
  sub_190C2FD10(v8, a5, a6);

  return 1;
}

void sub_190C2FD10(void *a1, char *a2, char a3)
{
  void *v3;
  void *v6;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  void *v29;
  char *format;
  uint64_t v31;

  v6 = v3;
  if (qword_1ECD98D00 != -1)
    swift_once();
  v8 = sub_190CA8518();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ECD98D28);
  v9 = a1;
  v10 = sub_190CA8500();
  v11 = sub_190CA8800();
  if (os_log_type_enabled(v10, v11))
  {
    format = a2;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v31 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = objc_msgSend(v9, sel_identity);
    v15 = v14;
    if (v14)
    {
      v16 = objc_msgSend(v14, sel_xpcServiceIdentifier, format);

      if (v16)
      {
        sub_190CA85F0();

      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98C18);
    v17 = sub_190CA8620();
    sub_190C30058(v17, v18, &v31);
    sub_190CA88F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v10, v11, format, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v13, -1, -1);
    MEMORY[0x19401889C](v12, -1, -1);

    v6 = v3;
  }
  else
  {

  }
  sub_190C3A6C0(v9, a3 & 1);
  v19 = v6;
  if (v6)
  {
    v20 = (void *)sub_190CA83E0();
    v21 = objc_msgSend(v20, sel_domain);
    v22 = sub_190CA85F0();
    v24 = v23;

    if (v22 == sub_190CA85F0() && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v26 = sub_190CA8BCC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        v27 = (void *)objc_opt_self();
        v28 = v20;
        v29 = (void *)sub_190CA83E0();

        objc_msgSend(v27, sel__EX_errorWithCode_underlyingError_, 2, v29);
        swift_willThrow();

        goto LABEL_16;
      }
    }
    swift_willThrow();
LABEL_16:

  }
}

uint64_t sub_190C30058(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_190C30164(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_190C30128((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_190C30128((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_190C30128(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_190C30164(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_190CA88FC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_190C9C9E0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_190CA8A1C();
  if (!v8)
  {
    sub_190CA8AD0();
    __break(1u);
LABEL_17:
    result = sub_190CA8B30();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_190C30AF4(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v2 = v1;
  v4 = &v2[OBJC_IVAR____EXDomainAttribute_sourceEnvironment];
  sub_190C2B30C(0, (unint64_t *)&unk_1EE20AEE0);
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = v2;
  v6 = (void *)sub_190CA8878();
  if (v6)
  {
    sub_190CA85E4();

    v7 = sub_190CA8878();
    if (v7)
    {
      v8 = (void *)v7;
LABEL_5:
      sub_190CA85E4();

    }
  }
  else
  {
    v8 = (void *)sub_190CA8878();
    if (v8)
      goto LABEL_5;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for _EXDomainAttribute();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_190C30D10(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  objc_class *v31;
  char *v32;
  uint64_t *v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  id v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  objc_super v59;

  v3 = sub_190CA8548();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  MEMORY[0x1E0C80A78](v7);
  v56 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
  v10 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  v11 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
  v12 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  if (*(_QWORD *)(v1 + OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName + 8))
  {
    swift_bridgeObjectRetain();
    v13 = sub_190CA85D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v14 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____EXLaunchConfiguration_preferredLanguages))
  {
    swift_bridgeObjectRetain();
    v15 = sub_190CA86B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v16 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);
  swift_unknownObjectRelease();

  swift_bridgeObjectRetain();
  v17 = (void *)sub_190CA8590();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v17, v18);

  v19 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration_launchPersona);
  v20 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v19, v20);

  v55 = v1;
  v21 = *(_QWORD *)(v1 + OBJC_IVAR____EXLaunchConfiguration_assertionAttributes);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_190CA8AF4();
    if (v22)
      goto LABEL_9;
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v22)
    goto LABEL_20;
LABEL_9:
  v58 = MEMORY[0x1E0DEE9D8];
  result = sub_190CA8A4C();
  if (v22 < 0)
  {
    __break(1u);
    return result;
  }
  v51 = v6;
  v52 = v4;
  v53 = a1;
  v54 = v3;
  v24 = 0;
  v57 = v21 & 0xC000000000000001;
  do
  {
    if (v57)
      v29 = (id)MEMORY[0x194017870](v24, v21);
    else
      v29 = *(id *)(v21 + 8 * v24 + 32);
    v30 = v29;
    v31 = (objc_class *)type metadata accessor for _EXDomainAttribute();
    v32 = (char *)objc_allocWithZone(v31);
    v33 = (uint64_t *)&v32[OBJC_IVAR____EXDomainAttribute_sourceEnvironment];
    *v33 = 0;
    v33[1] = 0;
    v34 = v32;
    v35 = objc_msgSend(v30, sel_domain);
    v36 = sub_190CA85F0();
    v38 = v37;

    v39 = (uint64_t *)&v34[OBJC_IVAR____EXDomainAttribute_domain];
    *v39 = v36;
    v39[1] = v38;
    v40 = objc_msgSend(v30, sel_name);
    v41 = sub_190CA85F0();
    v43 = v42;

    v44 = (uint64_t *)&v34[OBJC_IVAR____EXDomainAttribute_name];
    *v44 = v41;
    v44[1] = v43;
    v45 = objc_msgSend(v30, sel_sourceEnvironment);
    if (v45)
    {
      v25 = v45;
      v26 = sub_190CA85F0();
      v28 = v27;

    }
    else
    {
      v26 = 0;
      v28 = 0;
    }
    ++v24;
    *v33 = v26;
    v33[1] = v28;

    swift_bridgeObjectRelease();
    v59.receiver = v34;
    v59.super_class = v31;
    objc_msgSendSuper2(&v59, sel_init);

    sub_190CA8A28();
    sub_190CA8A58();
    sub_190CA8A64();
    sub_190CA8A34();
  }
  while (v22 != v24);
  swift_bridgeObjectRelease();
  a1 = v53;
  v3 = v54;
  v6 = v51;
  v4 = v52;
LABEL_21:
  type metadata accessor for _EXDomainAttribute();
  v46 = (void *)sub_190CA86B0();
  swift_bridgeObjectRelease();
  v47 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v46, v47);

  v48 = v55 + OBJC_IVAR____EXLaunchConfiguration_networkApplicationID;
  swift_beginAccess();
  v49 = v48;
  v50 = v56;
  sub_190C3CB84(v49, v56, &qword_1ECD98D60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v50, 1, v3))
    return sub_190C38990(v50, &qword_1ECD98D60);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v50, v3);
  sub_190C38990(v50, &qword_1ECD98D60);
  sub_190C68C54(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for _EXDomainAttribute()
{
  return objc_opt_self();
}

uint64_t sub_190C31590(_QWORD *a1)
{
  return sub_190C31980(a1);
}

uint64_t sub_190C315A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;

  v18 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  MEMORY[0x1E0C80A78](v3);
  v19 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A968);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s10AttachmentVMa(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_190C31BC4();
  v11 = (uint64_t)v21;
  sub_190CA8C98();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v21 = a1;
  LOBYTE(v23) = 0;
  v12 = v20;
  *v10 = sub_190CA8B54();
  v10[1] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AF40);
  v22 = 1;
  sub_190C31C08(&qword_1EE20A948, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_190CA8B60();
  v10[2] = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DA8);
  v22 = 2;
  sub_190C31C68(&qword_1EE20A940, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_190CA8B78();
  v10[3] = v23;
  LOBYTE(v23) = 3;
  v10[4] = sub_190CA8B6C();
  v10[5] = v14;
  sub_190CA8548();
  LOBYTE(v23) = 4;
  sub_190C3A458((unint64_t *)&unk_1EE20A9E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CCE820], MEMORY[0x1E0CCE838]);
  v15 = (uint64_t)v19;
  sub_190CA8B60();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  sub_190C45A08(v15, *(int *)(v8 + 32), &qword_1ECD98D60);
  sub_190C326B0(0, v18);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
  return sub_190C32484(0);
}

uint64_t sub_190C31980(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20AE80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_190C31BC4();
  sub_190CA8CA4();
  LOBYTE(v11) = 0;
  sub_190CA8B84();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 16);
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AF40);
    sub_190C31C08((unint64_t *)&unk_1EE20AE68, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_190CA8B90();
    v11 = *(_QWORD *)(v3 + 24);
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DA8);
    sub_190C31C68(&qword_1EE20AE60, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_190CA8BA8();
    LOBYTE(v11) = 3;
    sub_190CA8B9C();
    _s10AttachmentVMa(0);
    LOBYTE(v11) = 4;
    sub_190CA8548();
    sub_190C3A458(&qword_1EE20AF28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CCE820], MEMORY[0x1E0CCE830]);
    sub_190CA8B90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_190C31BC4()
{
  unint64_t result;

  result = qword_1EE20AEF0;
  if (!qword_1EE20AEF0)
  {
    result = MEMORY[0x1940187DC](&unk_190CAE6E4, &_s10AttachmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE20AEF0);
  }
  return result;
}

uint64_t sub_190C31C08(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE20AF40);
    v8 = a2;
    result = MEMORY[0x1940187DC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190C31C68(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECD98DA8);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1940187DC](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

id sub_190C31CC8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  id v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v2 = v1;
  v69 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20AEC0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190CA8434();
  v68 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v67 = (char *)&v65 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v66 = (char *)&v65 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v65 - v17;
  v19 = sub_190CA8344();
  MEMORY[0x1E0C80A78](v19);
  v20 = _s10AttachmentVMa(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t *)((char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
  if (objc_msgSend(*(id *)&v2[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity], sel_targetsSystemExtensionPoint))
  {
    v24 = v2;
    sub_190C325AC(v24, v22);
    sub_190CA8374();
    swift_allocObject();
    sub_190CA8368();
    sub_190CA8338();
    sub_190CA8350();
    sub_190C3A458(&qword_1EE20AE78, _s10AttachmentVMa, (uint64_t)&unk_190CAE5D0);
    v25 = sub_190CA835C();
    v27 = v26;
    swift_release();
    sub_190C32484((uint64_t)v22);
    v28 = objc_msgSend(*(id *)&v2[v23], sel_bundleIdentifier);
    if (!v28)
    {
      sub_190CA85F0();
      v28 = (id)sub_190CA85D8();
      swift_bridgeObjectRelease();
    }
    v29 = *(void **)&v24[OBJC_IVAR____EXLaunchConfiguration_launchPersona];
    if (v29 && (v30 = objc_msgSend(v29, sel_personaUniqueString)) != 0)
    {
      v31 = v30;
      sub_190CA85F0();

      v32 = (void *)sub_190CA85D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = 0;
    }
    v47 = *(_QWORD *)&v24[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
    if (v47)
    {
      v48 = v47 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
      v49 = sub_190CA84E8();
      v50 = *(_QWORD *)(v49 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v18, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v18, 0, 1, v49);
      v51 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v18, 1, v49) != 1)
      {
        v51 = (void *)sub_190CA84A0();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v49);
      }
    }
    else
    {
      v58 = sub_190CA84E8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v18, 1, 1, v58);
      v51 = 0;
    }
    v59 = (void *)objc_opt_self();
    v60 = (void *)sub_190CA8470();
    v61 = objc_msgSend(v59, sel_extensionIdentityForBundleIdentifier_persona_instanceUUID_hostIdentifier_validationToken_, v28, v32, v51, v69, v60);
    sub_190C32568(v25, v27);

    return v61;
  }
  v33 = objc_msgSend(*(id *)&v2[v23], sel_containingBundleRecord);
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v33, "URL");

    sub_190CA841C();
    v36 = v68;
    v37 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
    v37(v5, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v5, 1, v6) != 1)
    {
      v38 = v67;
      v37(v67, v5, v6);
      v39 = objc_msgSend(*(id *)&v2[v23], sel_bundleIdentifier);
      if (!v39)
      {
        sub_190CA85F0();
        v39 = (id)sub_190CA85D8();
        swift_bridgeObjectRelease();
      }
      v40 = (void *)sub_190CA8410();
      v41 = *(_QWORD *)&v2[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
      v42 = v66;
      if (v41)
      {
        v43 = v41 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
        v44 = sub_190CA84E8();
        v45 = *(_QWORD *)(v44 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        v46 = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v44) != 1)
        {
          v46 = (void *)sub_190CA84A0();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
        }
      }
      else
      {
        v63 = sub_190CA84E8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v42, 1, 1, v63);
        v46 = 0;
      }
      v61 = objc_msgSend((id)objc_opt_self(), sel_externalExtensionIdentityForExtensionKitIdentifier_bundledURL_hostIdentifier_UUID_, v39, v40, v69, v46);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v6);
      return v61;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v5, 1, 1, v6);
  }
  sub_190C38990((uint64_t)v5, (uint64_t *)&unk_1EE20AEC0);
  v52 = objc_msgSend(*(id *)&v2[v23], sel_bundleIdentifier);
  if (!v52)
  {
    sub_190CA85F0();
    v52 = (id)sub_190CA85D8();
    swift_bridgeObjectRelease();
  }
  v53 = *(_QWORD *)&v2[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
  if (v53)
  {
    v54 = v53 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
    v55 = sub_190CA84E8();
    v56 = *(_QWORD *)(v55 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v14, v54, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v14, 0, 1, v55);
    v57 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v14, 1, v55) != 1)
    {
      v57 = (void *)sub_190CA84A0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v55);
    }
  }
  else
  {
    v62 = sub_190CA84E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v14, 1, 1, v62);
    v57 = 0;
  }
  v61 = objc_msgSend((id)objc_opt_self(), sel_externalExtensionIdentityForExtensionKitIdentifier_hostIdentifier_UUID_, v52, v69, v57);

  return v61;
}

uint64_t sub_190C32484(uint64_t a1)
{
  uint64_t v2;

  v2 = _s10AttachmentVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s10AttachmentVMa(uint64_t a1)
{
  return sub_190C39BFC(a1, qword_1EE20AF10);
}

uint64_t sub_190C324D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_190CA8548();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_190C32568(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_190C325AC(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)&a1[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName + 8];
  *a2 = *(_QWORD *)&a1[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName];
  a2[1] = v4;
  v5 = *(_QWORD *)&a1[OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables];
  a2[2] = *(_QWORD *)&a1[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages];
  a2[3] = v5;
  v6 = *(void **)&a1[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v6, sel_bundleIdentifier);
  v8 = sub_190CA85F0();
  v10 = v9;

  a2[4] = v8;
  a2[5] = v10;
  v11 = (uint64_t)a2 + *(int *)(_s10AttachmentVMa(0) + 32);
  v12 = (uint64_t)&a1[OBJC_IVAR____EXLaunchConfiguration_networkApplicationID];
  swift_beginAccess();
  sub_190C3CB84(v12, v11, &qword_1ECD98D60);

}

uint64_t sub_190C326B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10AttachmentVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_190C326F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_190CA8548();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

void sub_190C327F0()
{
  uint64_t v0;

  sub_190C327FC(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_190C327FC(void (*a1)(void), uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  sub_190C32894(a3);
  v5 = v4;
  a1();

}

uint64_t sub_190C32880()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_190C32894(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  NSObject *v15;
  int v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  os_log_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  uint64_t v31;
  int v32;
  _QWORD *v33;
  uint64_t v34;
  os_log_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  v3 = sub_190CA8518();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _EXHostConfiguration();
  if (objc_msgSend(a1, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    v7 = a1;
    v8 = (void *)sub_190C354BC(v7);
    if (qword_1ECD98C30 != -1)
      swift_once();
    sub_190C32CE4(v8);
    if (!v1)
    {
      v28 = v9;
      v29 = objc_allocWithZone((Class)type metadata accessor for _EXExtensionProcess());
      v30 = v7;
      sub_190C357D4(v28, v30);

      return;
    }
    if (qword_1EE20ADE8 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE20AE20);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v10, v3);
    v11 = v7;
    v12 = v1;
    v13 = v11;
    v14 = v1;
    v15 = sub_190CA8500();
    v16 = sub_190CA87E8();
    if (!os_log_type_enabled(v15, (os_log_type_t)v16))
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      goto LABEL_12;
    }
    v32 = v16;
    v35 = v15;
    v36 = v4;
    v37 = v8;
    v17 = swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v39 = v34;
    *(_DWORD *)v17 = 136446466;
    v18 = *(void **)&v13[OBJC_IVAR____EXHostConfiguration__extensionIdentity];
    if (v18)
    {
      v19 = objc_msgSend(v18, sel_bundleIdentifier);
      v20 = sub_190CA85F0();
      v22 = v21;

      v38 = sub_190C30058(v20, v22, &v39);
      sub_190CA88F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2114;
      v23 = v1;
      v24 = _swift_stdlib_bridgeErrorToNSError();
      v38 = v24;
      sub_190CA88F0();
      v25 = v33;
      *v33 = v24;

      v26 = v35;
      _os_log_impl(&dword_190C25000, v35, (os_log_type_t)v32, "Failed to create extensionProcess for extension '%{public}s' error: %{public}@", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v25, -1, -1);
      v27 = v34;
      swift_arrayDestroy();
      MEMORY[0x19401889C](v27, -1, -1);
      MEMORY[0x19401889C](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v3);
      v8 = v37;
LABEL_12:
      swift_willThrow();

      return;
    }

    __break(1u);
  }
  objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t type metadata accessor for _EXExtensionProcess()
{
  return objc_opt_self();
}

void sub_190C32CE4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v5;
  void *v6;
  char **v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  char *v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  char *v29;
  os_unfair_lock_s *v30;
  void *v31;
  unsigned int v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  char *v38;
  uint8_t *v39;
  NSObject *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  NSObject *v44;
  NSObject *v45;
  uint64_t v46;
  NSObject *v47;
  NSObject *v48;
  os_log_type_t v49;
  void *v50;
  uint8_t *v51;
  _QWORD *v52;
  NSObject *v53;
  _QWORD *v54;
  os_unfair_lock_s *v55;
  _QWORD *v56;
  void *v57;
  void *v58;
  void *v59;
  char *v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void *v66;

  v3 = v2;
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessMannger_processExtensionMapLock) + 16);
  os_unfair_lock_lock(v5);
  v6 = *(void **)(v1 + OBJC_IVAR____EXExtensionProcessMannger_processExtensionMap);
  v7 = &selRef__UUID;
  v8 = objc_msgSend(v6, sel_objectForKey_, a1);
  v66 = v8;
  v9 = v8;
  os_unfair_lock_unlock(v5);
  v10 = &unk_1ECD98000;
  if (v9)
  {
    if (qword_1ECD98D00 != -1)
      swift_once();
    v11 = sub_190CA8518();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ECD98D28);
    v12 = v9;
    v13 = sub_190CA8500();
    v14 = sub_190CA8800();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138543362;
      v17 = v12;
      v10 = (_QWORD *)&unk_1ECD98000;
      sub_190CA88F0();
      *v16 = v8;

      _os_log_impl(&dword_190C25000, v13, v14, "Existing process %{public}@ is valid, returning it.", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v16, -1, -1);
      MEMORY[0x19401889C](v15, -1, -1);

    }
    else
    {

    }
    goto LABEL_32;
  }
  if (qword_1ECD98D00 != -1)
    swift_once();
  v18 = sub_190CA8518();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ECD98D28);
  v19 = a1;
  v20 = sub_190CA8500();
  v21 = sub_190CA8800();
  if (os_log_type_enabled(v20, v21))
  {
    v58 = v6;
    v22 = (uint8_t *)swift_slowAlloc();
    v56 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v22 = 138543362;
    v62 = (unint64_t)v19;
    v60 = v19;
    v23 = v19;
    v3 = v2;
    v7 = &selRef__UUID;
    sub_190CA88F0();
    *v56 = a1;

    v19 = v60;
    _os_log_impl(&dword_190C25000, v20, v21, "Launching process with config: %{public}@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v56, -1, -1);
    v24 = v22;
    v6 = v58;
    MEMORY[0x19401889C](v24, -1, -1);

  }
  else
  {

  }
  v25 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
  if (!objc_msgSend(*(id *)&v19[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity], sel_launchesViaExtensionKitService))
  {
    if (objc_msgSend(*(id *)&v19[v25], sel_requiresNetworkAttribution))
    {
      sub_190C68074(v19);
      if (v3)
        return;
    }
    objc_msgSend((id)objc_opt_self(), sel_auditTokenForCurrentProcess);
    v26 = (void *)sub_190C33620(v19, v62, v63, v64, v65);
    if (v3)
      return;
LABEL_20:
    v59 = v26;
    v27 = v26;
    os_unfair_lock_lock(v5);
    v28 = (char *)objc_msgSend(v6, v7[455], v19);
    v57 = v27;
    if (v28)
    {
      v29 = v28;
      v30 = (os_unfair_lock_s *)(*(_QWORD *)&v28[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock] + 16);
      os_unfair_lock_lock(v30);
      v31 = *(void **)&v29[OBJC_IVAR____EXExtensionProcessHandle_assertion];
      if (v31)
      {
        v32 = objc_msgSend(v31, sel_isValid);
        os_unfair_lock_unlock(v30);
        if (v32)
        {
          v33 = v29;
          v34 = sub_190CA8500();
          v35 = sub_190CA8800();
          if (os_log_type_enabled(v34, v35))
          {
            v55 = v5;
            v36 = (uint8_t *)swift_slowAlloc();
            v37 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v36 = 138543362;
            v38 = v33;
            sub_190CA88F0();
            *v37 = v29;

            _os_log_impl(&dword_190C25000, v34, v35, "New process was created in a race and is valid, returning existing process: %{public}@", v36, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
            swift_arrayDestroy();
            MEMORY[0x19401889C](v37, -1, -1);
            v39 = v36;
            v5 = v55;
            MEMORY[0x19401889C](v39, -1, -1);
          }
          else
          {

          }
          v10 = (_QWORD *)&unk_1ECD98000;

          v66 = v29;
LABEL_31:
          os_unfair_lock_unlock(v5);

LABEL_32:
          swift_beginAccess();
          if (!v66)
          {
            if (v10[416] != -1)
              swift_once();
            v46 = sub_190CA8518();
            __swift_project_value_buffer(v46, (uint64_t)qword_1ECD98D28);
            v47 = a1;
            v48 = sub_190CA8500();
            v49 = sub_190CA87F4();
            if (os_log_type_enabled(v48, v49))
            {
              v50 = a1;
              v51 = (uint8_t *)swift_slowAlloc();
              v52 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v51 = 138543362;
              v53 = v47;
              sub_190CA88F0();
              *v52 = v50;

              _os_log_impl(&dword_190C25000, v48, v49, "Process is nil with no error for launch configuration: %{public}@", v51, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
              swift_arrayDestroy();
              MEMORY[0x19401889C](v52, -1, -1);
              MEMORY[0x19401889C](v51, -1, -1);
            }
            else
            {

              v48 = v47;
            }

            objc_msgSend((id)objc_opt_self(), sel__EX_errorWithCode_underlyingError_, 2, 0);
            swift_willThrow();

          }
          return;
        }
      }
      else
      {
        os_unfair_lock_unlock(v30);
      }

    }
    v40 = v27;
    v41 = sub_190CA8500();
    v42 = sub_190CA8800();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v54 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v43 = 138543362;
      v61 = v19;
      v44 = v40;
      sub_190CA88F0();
      *v54 = v59;

      v19 = v61;
      _os_log_impl(&dword_190C25000, v41, v42, "Created new process %{public}@.", v43, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v54, -1, -1);
      MEMORY[0x19401889C](v43, -1, -1);
    }
    else
    {

      v41 = v40;
    }
    v10 = &unk_1ECD98000;

    swift_unknownObjectWeakAssign();
    objc_msgSend(v6, sel_setObject_forKey_, v40, v19);

    v66 = v59;
    v45 = v40;
    goto LABEL_31;
  }
  if (qword_1EE20ACC0 != -1)
    swift_once();
  v26 = (void *)sub_190C2BA40((uint64_t)v19);
  if (!v3)
    goto LABEL_20;
}

unint64_t sub_190C33620(char *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  pid_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  id v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  char *v34;
  uint8_t *v35;
  uint8_t *v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  id v70;
  unint64_t v71;
  id v72;
  os_unfair_lock_s *v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  _QWORD *v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  id v95;
  id v96;
  void *v97;
  unint64_t *v98;
  char *v99;
  int v100;
  uint64_t v101;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  id v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t type;
  unint64_t v112;
  void *v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  audit_token_t atoken;
  uint64_t v118;

  v118 = *MEMORY[0x1E0C80C00];
  v6 = HIDWORD(a2);
  v7 = HIDWORD(a3);
  v8 = HIDWORD(a4);
  v9 = HIDWORD(a5);
  v106 = HIDWORD(a3);
  v107 = HIDWORD(a2);
  v104 = HIDWORD(a5);
  v105 = HIDWORD(a4);
  if (qword_1EE20ACF8 != -1)
  {
    v80 = a2;
    v81 = a4;
    v82 = a3;
    swift_once();
    LODWORD(v9) = v104;
    LODWORD(v8) = v105;
    LODWORD(v7) = v106;
    LODWORD(v6) = v107;
    a2 = v80;
    a3 = v82;
    a4 = v81;
  }
  v110 = a2;
  type = a3;
  v112 = a4;
  v10 = xmmword_1EE20DF30;
  v11 = DWORD1(xmmword_1EE20DF30);
  v12 = DWORD2(xmmword_1EE20DF30);
  v13 = HIDWORD(xmmword_1EE20DF30);
  v15 = dword_1EE20DF40;
  v14 = unk_1EE20DF44;
  v17 = dword_1EE20DF48;
  v16 = unk_1EE20DF4C;
  atoken.val[0] = a2;
  atoken.val[1] = v6;
  atoken.val[2] = a3;
  atoken.val[3] = v7;
  atoken.val[4] = a4;
  atoken.val[5] = v8;
  atoken.val[6] = a5;
  atoken.val[7] = v9;
  v109 = a5;
  v18 = audit_token_to_pid(&atoken);
  atoken.val[0] = v10;
  atoken.val[1] = v11;
  atoken.val[2] = v12;
  atoken.val[3] = v13;
  atoken.val[4] = v15;
  atoken.val[5] = v14;
  atoken.val[6] = v17;
  atoken.val[7] = v16;
  if (v18 != audit_token_to_pid(&atoken))
  {
    v21 = sub_190C3686C(a1, v110, type, v112, v109);
    if (v108)
      return v10;
    v20 = v21;
LABEL_9:
    v22 = (void *)type metadata accessor for _EXLaunchConfiguration(0);
    *(_QWORD *)atoken.val = 0;
    if (!objc_msgSend(v22, sel_configureLaunchContext_error_, v20, &atoken))
    {
      v28 = *(id *)atoken.val;
      sub_190CA83EC();

      swift_willThrow();
      return v10;
    }
    v23 = *(id *)atoken.val;
    goto LABEL_11;
  }
  atoken.val[0] = v110;
  atoken.val[1] = v107;
  atoken.val[2] = type;
  atoken.val[3] = v106;
  atoken.val[4] = v112;
  atoken.val[5] = v105;
  atoken.val[6] = v109;
  atoken.val[7] = v104;
  v100 = audit_token_to_pidversion(&atoken);
  atoken.val[0] = v10;
  atoken.val[1] = v11;
  atoken.val[2] = v12;
  atoken.val[3] = v13;
  atoken.val[4] = v15;
  atoken.val[5] = v14;
  atoken.val[6] = v17;
  atoken.val[7] = v16;
  v10 = audit_token_to_pidversion(&atoken);
  v19 = sub_190C3686C(a1, v110, type, v112, v109);
  if (v108)
    return v10;
  v20 = v19;
  if (v100 != (_DWORD)v10)
    goto LABEL_9;
LABEL_11:
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87D18]), sel_initWithContext_, v20);
  v25 = objc_msgSend(v24, sel_executeRequest);
  v26 = a1;
  v27 = v25;
  v10 = (unint64_t)sub_190C3459C(v26, v27);
  v101 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
  v97 = v20;
  if ((objc_msgSend(*(id *)&v26[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity], sel_launchesViaExtensionKitService) & 1) != 0)
  {
    v93 = (char *)v10;
    v95 = v27;
    v96 = v24;
    v30 = MEMORY[0x1E0DEE9D8];
    v114 = MEMORY[0x1E0DEE9D8];
    if (qword_1EE20ADE8 != -1)
      swift_once();
    v31 = sub_190CA8518();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EE20AE20);
    v32 = sub_190CA8500();
    v33 = sub_190CA87DC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = v26;
      v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v35 = 67240192;
      atoken.val[0] = v110;
      atoken.val[1] = v107;
      atoken.val[2] = type;
      atoken.val[3] = v106;
      atoken.val[4] = v112;
      atoken.val[5] = v105;
      atoken.val[6] = v109;
      atoken.val[7] = v104;
      atoken.val[0] = audit_token_to_pid(&atoken);
      sub_190CA88F0();
      _os_log_impl(&dword_190C25000, v32, v33, "Adding extension service sandbox extension for host pid %{public}d", v35, 8u);
      v36 = v35;
      v26 = v34;
      MEMORY[0x19401889C](v36, -1, -1);
    }

    v99 = v26;
    v37 = objc_msgSend(*(id *)&v26[v101], sel_serviceName);
    sub_190CA85F0();

    v38 = objc_allocWithZone((Class)_EXSandboxExtension);
    v39 = (void *)sub_190CA85D8();
    v40 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    atoken.val[0] = v110;
    atoken.val[1] = v107;
    atoken.val[2] = type;
    atoken.val[3] = v106;
    atoken.val[4] = v112;
    atoken.val[5] = v105;
    atoken.val[6] = v109;
    atoken.val[7] = v104;
    v41 = objc_msgSend(v38, sel_initWithExtensionClass_machServiceName_process_, v39, v40, &atoken);

    v42 = v41;
    MEMORY[0x194017510]();
    if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_190CA86E0();
    sub_190CA86F8();
    sub_190CA86D4();

    v43 = objc_msgSend(v20, sel_extensionOverlay);
    if (v43)
    {
      v44 = v43;
      v45 = sub_190CA859C();

      if (*(_QWORD *)(v45 + 16) && (v46 = sub_190C359F0(0x6976726553435058, 0xEA00000000006563), (v47 & 1) != 0))
      {
        sub_190C30128(*(_QWORD *)(v45 + 56) + 32 * v46, (uint64_t)&v115);
      }
      else
      {
        v115 = 0u;
        v116 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v116 + 1))
      {
        sub_190C2B30C(0, &qword_1EE20A330);
        if ((swift_dynamicCast() & 1) != 0)
        {
          *(_QWORD *)&v115 = 0xD000000000000016;
          *((_QWORD *)&v115 + 1) = 0x8000000190CB4010;
          v48 = objc_msgSend(v113, sel___swift_objectForKeyedSubscript_, sub_190CA8BE4());
          swift_unknownObjectRelease();

          if (v48)
          {
            sub_190CA8908();
            swift_unknownObjectRelease();
          }
          else
          {
            v115 = 0u;
            v116 = 0u;
          }
          sub_190C45A08((uint64_t)&v115, (uint64_t)&atoken, &qword_1ECD98D20);
          if (*(_QWORD *)&atoken.val[6])
          {
            if ((swift_dynamicCast() & 1) != 0)
            {
              v76 = (void *)v115;
              v77 = objc_msgSend((id)v115, sel_allKeys);

              v78 = sub_190CA86BC();
              v79 = sub_190C27F70(v78);
              swift_bridgeObjectRelease();
              if (v79)
                v49 = v79;
              else
                v49 = v30;
              goto LABEL_35;
            }
LABEL_34:
            v49 = MEMORY[0x1E0DEE9D8];
LABEL_35:
            v92 = v49;
            v50 = *(_QWORD *)(v49 + 16);
            if (v50)
            {
              v51 = (unint64_t *)(v49 + 40);
              do
              {
                v103 = v50;
                v52 = *(v51 - 1);
                v53 = *v51;
                swift_bridgeObjectRetain_n();
                v54 = sub_190CA8500();
                v55 = sub_190CA87DC();
                if (os_log_type_enabled(v54, v55))
                {
                  v56 = swift_slowAlloc();
                  v98 = v51;
                  v57 = swift_slowAlloc();
                  *(_QWORD *)&v115 = v57;
                  *(_DWORD *)v56 = 136446466;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)(v56 + 4) = sub_190C30058(v52, v53, (uint64_t *)&v115);
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v56 + 12) = 1026;
                  v58 = v110;
                  v59 = type;
                  atoken.val[0] = v110;
                  atoken.val[1] = v107;
                  atoken.val[2] = type;
                  atoken.val[3] = v106;
                  v60 = v112;
                  atoken.val[4] = v112;
                  atoken.val[5] = v105;
                  atoken.val[6] = v109;
                  atoken.val[7] = v104;
                  *(_DWORD *)(v56 + 14) = audit_token_to_pid(&atoken);
                  _os_log_impl(&dword_190C25000, v54, v55, "Adding '%{public}s'subservice sandbox extension for host pid %{public}d", (uint8_t *)v56, 0x12u);
                  swift_arrayDestroy();
                  v61 = v57;
                  v51 = v98;
                  MEMORY[0x19401889C](v61, -1, -1);
                  MEMORY[0x19401889C](v56, -1, -1);

                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  v59 = type;
                  v60 = v112;
                  v58 = v110;
                }
                v62 = objc_msgSend(*(id *)&v99[v101], sel_bundleIdentifier, v92);
                v63 = sub_190CA85F0();
                v65 = v64;

                *(_QWORD *)atoken.val = v63;
                *(_QWORD *)&atoken.val[2] = v65;
                sub_190CA8644();
                sub_190CA8644();
                swift_bridgeObjectRelease();
                v66 = objc_allocWithZone((Class)_EXSandboxExtension);
                v67 = (void *)sub_190CA85D8();
                v68 = (void *)sub_190CA85D8();
                swift_bridgeObjectRelease();
                atoken.val[0] = v58;
                atoken.val[1] = v107;
                atoken.val[2] = v59;
                atoken.val[3] = v106;
                atoken.val[4] = v60;
                atoken.val[5] = v105;
                atoken.val[6] = v109;
                atoken.val[7] = v104;
                v69 = objc_msgSend(v66, sel_initWithExtensionClass_machServiceName_process_, v67, v68, &atoken);

                v70 = v69;
                MEMORY[0x194017510]();
                if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_190CA86E0();
                v51 += 2;
                sub_190CA86F8();
                sub_190CA86D4();

                v50 = v103 - 1;
              }
              while (v103 != 1);
            }
            swift_bridgeObjectRelease();
            v10 = (unint64_t)v93;
            *(_QWORD *)&v93[OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions] = v114;
            swift_bridgeObjectRelease();
            v24 = v96;
            v20 = v97;
            v27 = v95;
            v26 = v99;
            goto LABEL_44;
          }
LABEL_33:
          sub_190C38990((uint64_t)&atoken, &qword_1ECD98D20);
          goto LABEL_34;
        }
LABEL_32:
        memset(&atoken, 0, sizeof(atoken));
        goto LABEL_33;
      }
    }
    else
    {
      v115 = 0u;
      v116 = 0u;
    }
    sub_190C38990((uint64_t)&v115, &qword_1ECD98D20);
    goto LABEL_32;
  }
LABEL_44:
  v71 = *(_QWORD *)&v26[OBJC_IVAR____EXLaunchConfiguration_assertionAttributes];
  if (v71 >> 62)
  {
    swift_bridgeObjectRetain();
    v83 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
    if (v83 >= 1)
      goto LABEL_46;
  }
  else if (*(uint64_t *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_46:
    v72 = sub_190C34E00();
    v73 = (os_unfair_lock_s *)(*(_QWORD *)(v10 + OBJC_IVAR____EXExtensionProcessHandle_invalidationLock) + 16);
    os_unfair_lock_lock(v73);
    v74 = *(void **)(v10 + OBJC_IVAR____EXExtensionProcessHandle_assertion);
    *(_QWORD *)(v10 + OBJC_IVAR____EXExtensionProcessHandle_assertion) = v72;
    v75 = v72;

    *(_QWORD *)(v10 + OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount) = 1;
    os_unfair_lock_unlock(v73);

    return v10;
  }
  if (qword_1ECD98D00 != -1)
    swift_once();
  v84 = sub_190CA8518();
  __swift_project_value_buffer(v84, (uint64_t)qword_1ECD98D28);
  v85 = v26;
  v86 = sub_190CA8500();
  v87 = sub_190CA87E8();
  if (os_log_type_enabled(v86, v87))
  {
    v88 = (uint8_t *)swift_slowAlloc();
    v94 = v10;
    v89 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v88 = 138543362;
    *(_QWORD *)atoken.val = v85;
    v90 = v85;
    sub_190CA88F0();
    *v89 = v85;

    _os_log_impl(&dword_190C25000, v86, v87, "Assertion not taken, empty assertion attributes specified by launch configuration %{public}@.", v88, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    v91 = v89;
    v10 = v94;
    MEMORY[0x19401889C](v91, -1, -1);
    MEMORY[0x19401889C](v88, -1, -1);

  }
  else
  {

  }
  return v10;
}

void *sub_190C3459C(char *a1, id a2)
{
  id v2;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  unint64_t v51;
  objc_class *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  objc_class *v68;
  char *v69;
  uint64_t v70;
  uint64_t *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v78;
  void *v79;
  id v80;
  char *v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  objc_super v87;
  objc_super v88;
  objc_super v89;
  id v90;
  unint64_t v91;
  uint64_t v92;

  v2 = a2;
  v92 = *MEMORY[0x1E0C80C00];
  v4 = objc_msgSend(a2, sel_process);
  if (v4)
  {
    v86 = v4;
    v85 = objc_msgSend(v2, sel_assertion);
    v5 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
    v6 = *(id *)&a1[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity];
    v7 = objc_msgSend(v2, sel_managedEndpointByLaunchIdentifier);
    if (v7)
    {
      v8 = v7;
      v9 = a1;
      sub_190C2B30C(0, &qword_1EE20ACB0);
      v10 = sub_190CA859C();

      v11 = objc_msgSend(v6, sel_serviceName);
      v12 = sub_190CA85F0();
      v14 = v13;

      if (*(_QWORD *)(v10 + 16) && (v15 = sub_190C359F0(v12, v14), (v16 & 1) != 0))
      {
        v17 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v15);
        v18 = v17;
      }
      else
      {
        v17 = 0;
      }
      a1 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    if ((objc_msgSend(*(id *)&a1[v5], sel_launchesViaExtensionKitService) & 1) != 0)
    {
      v22 = 0;
      v23 = 0;
    }
    else
    {
      v79 = v17;
      v81 = a1;
      v24 = objc_msgSend(v6, sel_serviceName);
      sub_190CA85F0();

      v25 = v2;
      v26 = (void *)sub_190CA85D8();
      swift_bridgeObjectRelease();
      v27 = (void *)sub_190CA85D8();
      v90 = 0;
      v78 = (id)objc_opt_self();
      v28 = objc_msgSend(v78, sel_endpointOfLaunchIdentifier_fromLaunchResponse_withService_instance_error_, v26, v25, v27, 0, &v90);

      v29 = v90;
      if (v28)
      {

        v30 = objc_msgSend(v6, sel_serviceName);
        v31 = sub_190CA85F0();
        v33 = v32;

        v34 = (objc_class *)type metadata accessor for EXConnectionEndpoint();
        v35 = (char *)objc_allocWithZone(v34);
        v36 = OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint;
        *(_QWORD *)&v35[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint] = 0;
        v37 = (uint64_t *)&v35[OBJC_IVAR___EXConnectionEndpoint_identifier];
        *v37 = v31;
        v37[1] = v33;
        *(_QWORD *)&v35[OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint] = v28;
        *(_QWORD *)&v35[v36] = 0;
        v38 = v28;
        swift_unknownObjectRelease();
        v87.receiver = v35;
        v87.super_class = v34;
        v23 = objc_msgSendSuper2(&v87, sel_init);

      }
      else
      {
        v39 = v29;
        v40 = (void *)sub_190CA83EC();

        swift_willThrow();
        v23 = 0;
      }
      a1 = v81;
      if (objc_msgSend(v6, sel_presentsUserInterface))
      {
        v83 = v23;
        v41 = objc_msgSend(v6, sel_serviceName);
        sub_190CA85F0();

        v42 = v25;
        v43 = (void *)sub_190CA85D8();
        swift_bridgeObjectRelease();
        v44 = (void *)sub_190CA85D8();
        v90 = 0;
        v22 = objc_msgSend(v78, sel_endpointOfLaunchIdentifier_fromLaunchResponse_withService_instance_error_, v43, v42, v44, 0, &v90);

        v45 = v90;
        if (v22)
        {

          v46 = objc_msgSend(v6, sel_serviceName);
          v47 = (void *)sub_190CA85F0();
          v49 = v48;

          v90 = v47;
          v91 = v49;
          sub_190CA8644();
          v50 = v90;
          v51 = v91;
          v52 = (objc_class *)type metadata accessor for EXConnectionEndpoint();
          v53 = (char *)objc_allocWithZone(v52);
          v54 = OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint;
          *(_QWORD *)&v53[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint] = 0;
          v55 = &v53[OBJC_IVAR___EXConnectionEndpoint_identifier];
          *(_QWORD *)v55 = v50;
          *((_QWORD *)v55 + 1) = v51;
          *(_QWORD *)&v53[OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint] = v22;
          *(_QWORD *)&v53[v54] = 0;
          v56 = v22;
          swift_unknownObjectRelease();
          v88.receiver = v53;
          v88.super_class = v52;
          v22 = objc_msgSendSuper2(&v88, sel_init);

          a1 = v81;
        }
        else
        {
          v57 = v45;
          v58 = (void *)sub_190CA83EC();

          swift_willThrow();
        }
        v17 = v79;
        v23 = v83;
      }
      else
      {
        v22 = 0;
        v17 = v79;
      }
    }
    if ((objc_msgSend(v6, sel_requiresLibXPCConnection) & 1) != 0)
    {
      v82 = v22;
      v84 = v23;
      if (!v17 || (v59 = objc_msgSend(v17, sel_endpoint)) == 0)
      {
        v74 = (void *)objc_opt_self();
        v90 = 0;
        v91 = 0xE000000000000000;
        sub_190CA89D4();
        swift_bridgeObjectRelease();
        v90 = (id)0xD00000000000001FLL;
        v91 = 0x8000000190CB63D0;
        v75 = objc_msgSend(v86, sel_description);
        sub_190CA85F0();

        sub_190CA8644();
        swift_bridgeObjectRelease();
        v21 = (void *)v91;
        v76 = (void *)sub_190CA85D8();
        swift_bridgeObjectRelease();
        objc_msgSend(v74, sel__EX_errorWithCode_description_, 2, v76);

        swift_willThrow();
        return v21;
      }
      v60 = v59;
      v61 = v17;
      v62 = objc_msgSend(v6, sel_serviceName);
      v80 = v2;
      v63 = v6;
      v64 = sub_190CA85F0();
      v65 = a1;
      v67 = v66;

      v68 = (objc_class *)type metadata accessor for EXConnectionEndpoint();
      v69 = (char *)objc_allocWithZone(v68);
      v70 = OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint;
      *(_QWORD *)&v69[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint] = 0;
      v71 = (uint64_t *)&v69[OBJC_IVAR___EXConnectionEndpoint_identifier];
      *v71 = v64;
      v71[1] = v67;
      v6 = v63;
      v2 = v80;
      a1 = v65;
      *(_QWORD *)&v69[OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint] = 0;
      *(_QWORD *)&v69[v70] = v60;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      v89.receiver = v69;
      v89.super_class = v68;
      v72 = objc_msgSendSuper2(&v89, sel_init);
      swift_unknownObjectRelease();
      v22 = v82;
      v23 = v84;
    }
    else
    {
      v61 = v17;
      v72 = 0;
    }
    v73 = objc_allocWithZone((Class)type metadata accessor for _EXExtensionProcessHandle());
    v21 = sub_190C8B6D0(a1, v86, v23, v72, v22, v85);

  }
  else
  {
    v19 = objc_msgSend(v2, sel_error);
    if (v19)
    {
      v20 = v19;
      v21 = (void *)sub_190CA83E0();

    }
    else
    {
      v21 = 0;
    }
    objc_msgSend((id)objc_opt_self(), sel__EX_errorWithCode_underlyingError_, 2, v21);

    swift_willThrow();
  }
  return v21;
}

uint64_t type metadata accessor for _EXExtensionProcessHandle()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EXConnectionEndpoint()
{
  return objc_opt_self();
}

id sub_190C34E00()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t inited;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_0;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  char *v33;
  id v35;
  uint64_t v36;
  id aBlock;
  unint64_t v38;
  void (*v39)(uint64_t, void *, void *);
  void *v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;

  v1 = v0;
  v44 = *MEMORY[0x1E0C80C00];
  v2 = *(char **)&v0[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration];
  v3 = OBJC_IVAR____EXLaunchConfiguration_assertionAttributes;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____EXLaunchConfiguration_assertionAttributes];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
    if (v26 >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_190CA89D4();
    swift_bridgeObjectRelease();
    aBlock = (id)0xD000000000000019;
    v38 = 0x8000000190CB6350;
    v5 = *(void **)&v1[OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle];
    v43 = objc_msgSend(v5, "pid");
    sub_190CA8BB4();
    sub_190CA8644();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend((id)objc_opt_self(), sel_targetWithProcessIdentifier_, v5);
    if (*(_QWORD *)&v2[v3] >> 62)
    {
      sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
      swift_bridgeObjectRetain();
      v35 = v6;
      sub_190CA8AE8();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v7 = v6;
      sub_190CA8BD8();
      sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
    }
    swift_bridgeObjectRelease();
    v8 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
    v9 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
    v10 = (void *)sub_190CA86B0();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v8, sel_initWithExplanation_target_attributes_, v9, v6, v10);

    v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v41 = sub_190C8C3F8;
    v42 = v12;
    aBlock = (id)MEMORY[0x1E0C809B0];
    v38 = 1107296256;
    v39 = sub_190C8A764;
    v40 = &block_descriptor_7_0;
    v13 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v11, sel_setInvalidationHandler_, v13);
    _Block_release(v13);
    aBlock = 0;
    if (objc_msgSend(v11, sel_acquireWithError_, &aBlock))
    {
      v14 = aBlock;

    }
    else
    {
      v15 = aBlock;
      v16 = (void *)sub_190CA83EC();

      swift_willThrow();
      objc_msgSend(v11, sel_invalidate);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20A8C0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_190CADDB0;
      *(_QWORD *)(inited + 32) = sub_190CA85F0();
      *(_QWORD *)(inited + 40) = v18;
      aBlock = 0;
      v38 = 0xE000000000000000;
      sub_190CA89D4();
      swift_bridgeObjectRelease();
      aBlock = (id)0xD000000000000025;
      v38 = 0x8000000190CB63A0;
      v43 = objc_msgSend(v5, "pid");
      sub_190CA8BB4();
      sub_190CA8644();
      swift_bridgeObjectRelease();
      v19 = aBlock;
      v20 = v38;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 48) = v19;
      *(_QWORD *)(inited + 56) = v20;
      *(_QWORD *)(inited + 80) = sub_190CA85F0();
      *(_QWORD *)(inited + 88) = v21;
      swift_getErrorValue();
      *(_QWORD *)(inited + 120) = v36;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 96));
      (*(void (**)(uint64_t *))(*(_QWORD *)(v36 - 8) + 16))(boxed_opaque_existential_0);
      sub_190C8A280(inited);
      sub_190CA85F0();
      v23 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v24 = (void *)sub_190CA85D8();
      swift_bridgeObjectRelease();
      v25 = (void *)sub_190CA8590();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, 4, v25);

      swift_willThrow();
    }
    return v11;
  }
  if (qword_1ECD98D00 != -1)
    swift_once();
  v27 = sub_190CA8518();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ECD98D28);
  v28 = v1;
  v29 = sub_190CA8500();
  v30 = sub_190CA87E8();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v31 = 138543362;
    aBlock = v2;
    v33 = v2;
    sub_190CA88F0();
    *v32 = v2;

    _os_log_impl(&dword_190C25000, v29, v30, "Assertion not taken, empty assertion attributes specified by launch configuration %{public}@.", v31, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v32, -1, -1);
    MEMORY[0x19401889C](v31, -1, -1);

  }
  else
  {

  }
  return 0;
}

uint64_t sub_190C354BC(char *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  id v7;
  id v8;
  char *v9;
  void *v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  result = MEMORY[0x1E0C80A78](v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(void **)&a1[OBJC_IVAR____EXHostConfiguration__extensionIdentity];
  if (v6)
  {
    v7 = objc_allocWithZone((Class)type metadata accessor for _EXLaunchConfiguration(0));
    v8 = v6;
    v9 = (char *)sub_190C356E8(v8);

    v10 = *(void **)&a1[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
    v11 = *(void **)&v9[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
    *(_QWORD *)&v9[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier] = v10;
    v12 = v9;
    v13 = v10;

    *(_QWORD *)&v12[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages] = *(_QWORD *)&a1[OBJC_IVAR____EXHostConfiguration_preferredLanguages];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)&a1[OBJC_IVAR____EXHostConfiguration_sandboxProfileName + 8];
    v15 = &v12[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName];
    *(_QWORD *)v15 = *(_QWORD *)&a1[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
    *((_QWORD *)v15 + 1) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v12[OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables] = *(_QWORD *)&a1[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v16 = *(void **)&a1[OBJC_IVAR____EXHostConfiguration_launchPersona];
    v17 = *(void **)&v12[OBJC_IVAR____EXLaunchConfiguration_launchPersona];
    *(_QWORD *)&v12[OBJC_IVAR____EXLaunchConfiguration_launchPersona] = v16;
    v18 = v16;

    *(_QWORD *)&v12[OBJC_IVAR____EXLaunchConfiguration_assertionAttributes] = *(_QWORD *)&a1[OBJC_IVAR____EXHostConfiguration_assertionAttributes];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = (uint64_t)&a1[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
    swift_beginAccess();
    sub_190C3CB84(v19, (uint64_t)v5, &qword_1ECD98D60);

    v20 = (uint64_t)&v12[OBJC_IVAR____EXLaunchConfiguration_networkApplicationID];
    swift_beginAccess();
    sub_190C683B0((uint64_t)v5, v20);
    swift_endAccess();

    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_190C356E8(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages] = 0;
  v3 = &v1[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_launchPersona] = 0;
  v4 = OBJC_IVAR____EXLaunchConfiguration_assertionAttributes;
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_190C39FF0();
  v6 = &v5[OBJC_IVAR____EXLaunchConfiguration_networkApplicationID];
  v7 = sub_190CA8548();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v5[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity] = a1;
  v8 = a1;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for _EXLaunchConfiguration(0);
  return objc_msgSendSuper2(&v10, sel_init);
}

id sub_190C357D4(void *a1, char *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;
  objc_class *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char *v18;
  id v19;
  char *v20;
  os_unfair_lock_s *v21;
  id v22;
  char *v23;
  uint64_t v25;
  objc_super v26;
  objc_super v27;

  v25 = OBJC_IVAR____EXExtensionProcess__processHandle;
  *(_QWORD *)&v2[OBJC_IVAR____EXExtensionProcess__processHandle] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____EXExtensionProcess_configuration] = a2;
  v5 = *(_QWORD *)&a2[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  v6 = *(_QWORD *)&a2[OBJC_IVAR____EXHostConfiguration_interruptionHandler + 8];
  if (v5)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_190C70660;
  }
  else
  {
    v7 = 0;
    v8 = nullsub_1;
  }
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = (objc_class *)type metadata accessor for _EXExtensionProcess.ProcessObserver();
  v11 = (char *)objc_allocWithZone(v10);
  v12 = (uint64_t *)&v11[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler];
  *v12 = 0;
  v12[1] = 0;
  v13 = OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandlerLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DD0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(_QWORD *)&v11[v13] = v14;
  v15 = *v12;
  *v12 = (uint64_t)sub_190C45C08;
  v12[1] = v9;
  v16 = v2;
  v17 = a1;
  v18 = a2;
  sub_190C2FA88(v5);
  swift_retain();
  sub_190C2FC70(v15);
  v27.receiver = v11;
  v27.super_class = v10;
  v19 = objc_msgSendSuper2(&v27, sel_init);
  swift_release();
  *(_QWORD *)&v16[OBJC_IVAR____EXExtensionProcess__observer] = v19;
  v20 = *(char **)&v2[v25];
  v21 = (os_unfair_lock_s *)(*(_QWORD *)&v20[OBJC_IVAR____EXExtensionProcessHandle_observersLock] + 16);
  v22 = v19;
  v23 = v20;
  os_unfair_lock_lock(v21);
  objc_msgSend(*(id *)&v23[OBJC_IVAR____EXExtensionProcessHandle_observers], sel_addObject_, v22);
  os_unfair_lock_unlock(v21);

  v26.receiver = v16;
  v26.super_class = (Class)type metadata accessor for _EXExtensionProcess();
  return objc_msgSendSuper2(&v26, sel_init);
}

uint64_t type metadata accessor for _EXExtensionProcess.ProcessObserver()
{
  return objc_opt_self();
}

unint64_t sub_190C359F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190CA8C50();
  sub_190CA8638();
  v4 = sub_190CA8C80();
  return sub_190C35A54(a1, a2, v4);
}

unint64_t sub_190C35A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_190CA8BCC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_190CA8BCC() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_190C35B34(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A2A0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190C35BC0(uint64_t a1)
{
  void *v1;
  char v3;
  void *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_190C3CB84(a1, (uint64_t)v6, &qword_1ECD98D20);
  if (!v7)
  {
    sub_190C38990((uint64_t)v6, &qword_1ECD98D20);
    goto LABEL_6;
  }
  type metadata accessor for _EXLaunchConfiguration(0);
  if ((swift_dynamicCast() & 1) == 0 || (v5, v5 != v1))
  {
LABEL_6:
    sub_190C3CB84(a1, (uint64_t)v6, &qword_1ECD98D20);
    if (v7)
    {
      type metadata accessor for _EXLaunchConfiguration(0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v3 = sub_190C35CDC((uint64_t)v5);

        return v3 & 1;
      }
    }
    else
    {
      sub_190C38990((uint64_t)v6, &qword_1ECD98D20);
    }
    v3 = 0;
    return v3 & 1;
  }
  v3 = 1;
  return v3 & 1;
}

uint64_t type metadata accessor for _EXLaunchConfiguration(uint64_t a1)
{
  return sub_190C39BFC(a1, qword_1ECD98D48);
}

uint64_t sub_190C35CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  char v12;

  v2 = v1;
  sub_190C2B30C(0, (unint64_t *)&unk_1ECD98C20);
  v4 = *(void **)(a1 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
  v5 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
  v6 = v4;
  v7 = sub_190CA88A8();

  if ((v7 & 1) != 0)
  {
    v8 = *(void **)(v2 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
    v9 = *(void **)(a1 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
    if (v8)
    {
      if (v9)
      {
        type metadata accessor for _EXExtensionInstanceIdentifier();
        v10 = v9;
        v11 = v8;
        v12 = sub_190CA88A8();

        if ((v12 & 1) != 0)
          return 1;
      }
    }
    else if (!v9)
    {
      return 1;
    }
  }
  return 0;
}

id _EXLegacyLog()
{
  if (_EXLegacyLog_onceToken != -1)
    dispatch_once(&_EXLegacyLog_onceToken, &__block_literal_global_5);
  return (id)_EXLegacyLog_log;
}

void *sub_190C3686C(char *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  char *v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  void (**v36)(_QWORD, _QWORD, _QWORD);
  char *v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, void *);
  void *v40;
  void *v41;
  uint64_t v42;
  int v43;
  void (**v44)(_QWORD, _QWORD, _QWORD);
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, void *);
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  int v52;
  id v53;
  id v54;
  id v55;
  char *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  id v61;
  void *v62;
  void *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t inited;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  _BOOL8 v74;
  void *v75;
  uint64_t v76;
  void *v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  uint64_t v82;
  void *v83;
  void *v84;
  id v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, void *);
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (**v107)(_QWORD, _QWORD, _QWORD);
  char *v108;
  id v109;
  uint64_t v110;
  unint64_t v111;
  audit_token_t atoken;
  uint64_t v113;

  v5 = a5;
  v6 = a4;
  v7 = a3;
  v8 = a2;
  v10 = HIDWORD(a2);
  v11 = HIDWORD(a3);
  v113 = *MEMORY[0x1E0C80C00];
  v12 = HIDWORD(a4);
  v13 = HIDWORD(a5);
  v99 = sub_190CA8434();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v103 = (uint64_t)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_190CA84E8();
  v107 = *(void (***)(_QWORD, _QWORD, _QWORD))(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v102 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v97 = (uint64_t)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v100 = (char *)&v94 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v104 = (char *)&v94 - v22;
  MEMORY[0x1E0C80A78](v21);
  v110 = (uint64_t)&v94 - v23;
  v108 = a1;
  v101 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
  v109 = *(id *)&a1[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity];
  atoken.val[0] = v8;
  atoken.val[1] = v10;
  atoken.val[2] = v7;
  atoken.val[3] = v11;
  atoken.val[4] = v6;
  atoken.val[5] = v12;
  atoken.val[6] = v5;
  atoken.val[7] = v13;
  v24 = audit_token_to_pid(&atoken);
  v25 = (void *)objc_opt_self();
  v111 = 0;
  atoken.val[0] = v8;
  atoken.val[1] = v10;
  atoken.val[2] = v7;
  atoken.val[3] = v11;
  atoken.val[4] = v6;
  atoken.val[5] = v12;
  atoken.val[6] = v5;
  atoken.val[7] = v13;
  v26 = objc_msgSend(v25, sel_bundleRecordForAuditToken_error_, &atoken, &v111);
  if (v26)
  {
    v27 = (id)v111;
  }
  else
  {
    v28 = (id)v111;
    v29 = (void *)sub_190CA83EC();

    swift_willThrow();
    v105 = 0;
  }
  v30 = (char *)objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, v24);
  v31 = v109;
  v32 = v110;
  v33 = v108;
  v34 = v24;
  v35 = (void *)v106;
  v36 = v107;
  if (v30)
  {
    v37 = v30;
    v38 = *(_QWORD *)&v108[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
    if (v38)
    {
      v107[2](v110, v38 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v106);
      v39 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v36[7];
      v39(v32, 0, 1, v35);
    }
    else
    {
      v39 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v107[7];
      v39(v110, 1, 1, (void *)v106);
    }
    v42 = (uint64_t)v104;
    sub_190C389CC(v32, (uint64_t)v104);
    v95 = (uint64_t (*)(uint64_t, uint64_t, void *))v36[6];
    v43 = v95(v42, 1, v35);
    sub_190C38990(v42, (uint64_t *)&unk_1ECD98DB0);
    if (v43 == 1 && objc_msgSend(*(id *)&v33[v101], sel_requiresMultiInstance))
    {
      v44 = v107;
      if (qword_1EE20B848 != -1)
        swift_once();
      v45 = (char *)(id)qword_1EE20C070;
      v46 = v110;
      sub_190C38990(v110, (uint64_t *)&unk_1ECD98DB0);
      v47 = (void (*)(char *, char *, void *))v44[2];
      v48 = (uint64_t)v100;
      v47(v100, &v45[OBJC_IVAR____EXExtensionInstanceIdentifier_identifier], v35);

      v39(v48, 0, 1, v35);
      sub_190C45A08(v48, v46, (uint64_t *)&unk_1ECD98DB0);
      v33 = v108;
    }
    v49 = objc_msgSend(v33, sel_rbsProcessIdentityWithHost_, v37);
    v35 = v37;
    if (v49)
    {
      v50 = v49;
      v96 = v26;
      v104 = v37;
      v51 = objc_msgSend((id)objc_opt_self(), sel_contextWithIdentity_, v49);
      v52 = v34;
      objc_msgSend(v51, sel_setHostPid_, v34);
      *(_QWORD *)atoken.val = 0;
      *(_QWORD *)&atoken.val[2] = 0xE000000000000000;
      sub_190CA89D4();
      swift_bridgeObjectRelease();
      *(_QWORD *)atoken.val = 0xD000000000000014;
      *(_QWORD *)&atoken.val[2] = 0x8000000190CB40A0;
      v53 = v109;
      v54 = objc_msgSend(v109, sel_bundleIdentifier);
      sub_190CA85F0();

      sub_190CA8644();
      swift_bridgeObjectRelease();
      sub_190CA8644();
      v55 = objc_msgSend(v53, sel_UUID);
      v56 = v102;
      sub_190CA84B8();

      sub_190C3946C();
      v57 = v106;
      sub_190CA8BB4();
      sub_190CA8644();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v107[1])(v56, v57);
      sub_190CA8644();
      LODWORD(v111) = v52;
      v35 = v51;
      sub_190CA8BB4();
      sub_190CA8644();
      swift_bridgeObjectRelease();
      v58 = (void *)sub_190CA85D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v51, sel_setExplanation_, v58);

      v59 = v105;
      sub_190C390FC(v103);
      if (v59)
      {
        sub_190C38990(v110, (uint64_t *)&unk_1ECD98DB0);

      }
      else
      {
        v107 = (void (**)(_QWORD, _QWORD, _QWORD))v50;
        sub_190CA8428();
        v64 = (void *)sub_190CA85D8();
        swift_bridgeObjectRelease();
        objc_msgSend(v51, sel__setOverrideExecutablePath_, v64);

        v65 = *(_QWORD **)&v108[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages];
        if (v65 && v65[2])
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ADE0);
          v66 = swift_allocObject();
          *(_OWORD *)(v66 + 16) = xmmword_190CADDB0;
          *(_QWORD *)(v66 + 32) = 0x614C656C7070412DLL;
          *(_QWORD *)(v66 + 40) = 0xEF7365676175676ELL;
          *(_QWORD *)atoken.val = 8744;
          *(_QWORD *)&atoken.val[2] = 0xE200000000000000;
          v111 = (unint64_t)v65;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AF40);
          sub_190C68364();
          sub_190CA85C0();
          swift_bridgeObjectRelease();
          sub_190CA8644();
          swift_bridgeObjectRelease();
          sub_190CA8644();
          v67 = *(_QWORD *)&atoken.val[2];
          *(_QWORD *)(v66 + 48) = *(_QWORD *)atoken.val;
          *(_QWORD *)(v66 + 56) = v67;
        }
        else
        {
          v66 = MEMORY[0x1E0DEE9D8];
        }
        v68 = (void *)sub_190CA86B0();
        objc_msgSend(v51, sel_setArguments_, v68);

        v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ADE0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_190CADDC0;
        *(_QWORD *)(inited + 32) = sub_190CA8428();
        *(_QWORD *)(inited + 40) = v70;
        *(_QWORD *)atoken.val = inited;
        if (*(_QWORD *)(v66 + 16))
          sub_190C7F9FC(v66);
        else
          swift_bridgeObjectRelease();
        v71 = v110;
        if (*(_QWORD *)&v108[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName + 8])
        {
          swift_bridgeObjectRetain();
          v72 = (void *)sub_190CA85D8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v72 = 0;
        }
        v73 = v97;
        sub_190C389CC(v71, v97);
        v74 = v95(v73, 1, (void *)v106) != 1;
        sub_190C38990(v73, (uint64_t *)&unk_1ECD98DB0);
        sub_190C38E40(*(uint64_t *)atoken.val);
        swift_bridgeObjectRelease();
        v75 = (void *)sub_190CA86B0();
        swift_bridgeObjectRelease();
        v76 = swift_bridgeObjectRetain();
        sub_190C38A84(v76);
        swift_bridgeObjectRelease();
        v77 = (void *)sub_190CA8590();
        swift_bridgeObjectRelease();
        v78 = objc_msgSend(v53, sel_xpcOverlayDictionaryOverridingSandboxProfileName_multiInstance_arguments_additionalEnvironment_, v72, v74, v75, v77);

        sub_190CA859C();
        v79 = (void *)sub_190CA8590();
        swift_bridgeObjectRelease();
        objc_msgSend(v35, sel_setExtensionOverlay_, v79);

        if ((objc_msgSend(v53, sel_targetsSystemExtensionPoint) & 1) != 0)
        {
          v80 = 0;
          v81 = v96;
        }
        else
        {
          objc_msgSend(v53, sel_presentsUserInterface);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC0);
          v82 = swift_allocObject();
          *(_OWORD *)(v82 + 16) = xmmword_190CADDD0;
          v83 = (void *)sub_190CA85D8();
          v81 = v96;
          v84 = (void *)sub_190CA85D8();
          v85 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v83, v84);

          *(_QWORD *)(v82 + 32) = v85;
          v111 = v82;
          sub_190CA86D4();
          if (v111 >> 62)
          {
            sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
            swift_bridgeObjectRetain();
            sub_190CA8AE8();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_190CA8BD8();
            sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
          }
          swift_bridgeObjectRelease();
          sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
          v80 = (void *)sub_190CA86B0();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v35, sel_setAttributes_, v80);

        objc_msgSend(v35, sel__setAdditionalEnvironment_, 0);
        if ((objc_msgSend(v53, sel_launchesViaExtensionKitService) & 1) != 0)
        {
          v86 = v103;
          v87 = v104;
        }
        else
        {
          v88 = swift_initStackObject();
          *(_OWORD *)(v88 + 16) = xmmword_190CADDB0;
          v89 = objc_msgSend(v53, sel_serviceName);
          v90 = sub_190CA85F0();
          v92 = v91;

          *(_QWORD *)(v88 + 32) = v90;
          *(_QWORD *)(v88 + 40) = v92;
          *(_QWORD *)(v88 + 48) = 0xD000000000000026;
          *(_QWORD *)(v88 + 56) = 0x8000000190CB4100;
          sub_190C80C34(v88);
          swift_setDeallocating();
          swift_arrayDestroy();
          v93 = sub_190CA8758();
          swift_bridgeObjectRelease();
          objc_msgSend(v35, sel_setManagedEndpointLaunchIdentifiers_, v93);

          v53 = v81;
          v81 = v104;
          v87 = (id)v93;
          v86 = v103;
        }

        (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v86, v99);
        sub_190C38990(v110, (uint64_t *)&unk_1ECD98DB0);
      }
    }
    else
    {
      v60 = (void *)objc_opt_self();
      *(_QWORD *)atoken.val = 0;
      *(_QWORD *)&atoken.val[2] = 0xE000000000000000;
      sub_190CA89D4();
      swift_bridgeObjectRelease();
      *(_QWORD *)atoken.val = 0xD000000000000027;
      *(_QWORD *)&atoken.val[2] = 0x8000000190CB4070;
      v61 = objc_msgSend(v33, sel_description);
      sub_190CA85F0();

      sub_190CA8644();
      swift_bridgeObjectRelease();
      v62 = (void *)sub_190CA85D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v60, sel__EX_errorWithCode_description_, 2, v62);

      swift_willThrow();
      sub_190C38990(v110, (uint64_t *)&unk_1ECD98DB0);
    }
  }
  else
  {
    v40 = (void *)objc_opt_self();
    *(_QWORD *)atoken.val = 0;
    *(_QWORD *)&atoken.val[2] = 0xE000000000000000;
    sub_190CA89D4();
    sub_190CA8644();
    LODWORD(v111) = v34;
    sub_190CA8BB4();
    sub_190CA8644();
    swift_bridgeObjectRelease();
    v41 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel__EX_errorWithCode_description_, 2, v41);

    swift_willThrow();
  }
  return v35;
}

id _EXDefaultLog()
{
  if (_EXDefaultLog_onceToken != -1)
    dispatch_once(&_EXDefaultLog_onceToken, &__block_literal_global_9);
  return (id)_EXDefaultLog_log;
}

uint64_t sub_190C38990(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_190C389CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190C38A84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AEB8);
    v2 = sub_190CA8B24();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_190C38F64(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_190C38F64(v35, v36);
    sub_190C38F64(v36, &v32);
    result = sub_190CA8974();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_190C38F64(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_190C6D7B0();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_190C38E40(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_190C38F74(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190C38F74(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_190C38F74(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_190C38F64(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

_OWORD *sub_190C38F64(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_190C38F74(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_190C38F90(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_190C38F90(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20AE40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C390FC@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  void *v22;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20AEC0);
  v3 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v24 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v24 - v9;
  v11 = sub_190CA8434();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(v1, "url");
  sub_190CA841C();

  v16 = (void *)sub_190CA8410();
  v17 = objc_msgSend(v16, sel__EX_URLForBundleExecutable);

  if (v17)
  {
    sub_190CA841C();

    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, v18, 1, v11);
  sub_190C393D8((uint64_t)v8, (uint64_t)v10);
  sub_190C3CB84((uint64_t)v10, (uint64_t)v5, (uint64_t *)&unk_1EE20AEC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) == 1)
  {
    sub_190C38990((uint64_t)v5, (uint64_t *)&unk_1EE20AEC0);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v5, v11);
    if (sub_190CA8428() || v19 != 0xE000000000000000)
    {
      v20 = sub_190CA8BCC();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        sub_190C38990((uint64_t)v10, (uint64_t *)&unk_1EE20AEC0);
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  }
  v21 = (void *)objc_opt_self();
  v22 = (void *)sub_190CA85D8();
  objc_msgSend(v21, sel__EX_errorWithCode_description_, 2, v22);

  swift_willThrow();
  sub_190C38990((uint64_t)v10, (uint64_t *)&unk_1EE20AEC0);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_190C393D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20AEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_190C3946C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECD98BC0;
  if (!qword_1ECD98BC0)
  {
    v1 = sub_190CA84E8();
    result = MEMORY[0x1940187DC](MEMORY[0x1E0CB09F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ECD98BC0);
  }
  return result;
}

uint64_t AppExtensionProcess.Configuration.init(appExtensionIdentity:onInterruption:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v7 = *a1;
  v8 = (int *)type metadata accessor for AppExtensionProcess.Configuration(0);
  v9 = v8[6];
  if (qword_1EE20ACA0 != -1)
    swift_once();
  v10 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE20AC88);
  sub_190C39AA0(v11, (uint64_t)a4 + v9, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  *((_BYTE *)a4 + v8[7]) = 0;
  v12 = v8[8];
  result = sub_190C39FF0();
  *(_QWORD *)((char *)a4 + v12) = result;
  *a4 = v7;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t AppExtensionProcess.Configuration.init(appExtension:onInterruption:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v7 = *a1;
  v8 = (int *)type metadata accessor for AppExtensionProcess.Configuration(0);
  v9 = v8[6];
  if (qword_1EE20ACA0 != -1)
    swift_once();
  v10 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE20AC88);
  sub_190C39AA0(v11, (uint64_t)a4 + v9, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  *((_BYTE *)a4 + v8[7]) = 0;
  v12 = v8[8];
  result = sub_190C39FF0();
  *(_QWORD *)((char *)a4 + v12) = result;
  *a4 = v7;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_190C398BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v9;

  v1 = v0[17];
  v2 = v0[18];
  type metadata accessor for _EXHostConfiguration();
  sub_190C39AA0(v1, v2, type metadata accessor for AppExtensionProcess.Configuration);
  v3 = (void *)sub_190C39BF8(v2);
  v0[19] = v3;
  sub_190C2B30C(0, &qword_1EE20AE18);
  if (objc_msgSend(v3, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    v4 = (void *)objc_opt_self();
    objc_opt_self();
    v5 = swift_dynamicCastObjCClassUnconditional();
    v0[7] = v0 + 15;
    v0[2] = v0;
    v0[3] = sub_190C27E30;
    v6 = swift_continuation_init();
    v0[10] = MEMORY[0x1E0C809B0];
    v7 = v0 + 10;
    v7[1] = 0x40000000;
    v7[2] = sub_190C35B34;
    v7[3] = &block_descriptor_9;
    v7[4] = v6;
    objc_msgSend(v4, sel_extensionProcessWithConfiguration_completionHandler_, v5, v7);
    return swift_continuation_await();
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();

    return swift_unexpectedError();
  }
}

uint64_t type metadata accessor for _EXHostConfiguration()
{
  uint64_t result;

  result = qword_1ECD98CE8;
  if (!qword_1ECD98CE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190C39AA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t initializeWithCopy for AppExtensionProcess.Configuration(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;

  v6 = *((_QWORD *)a2 + 2);
  v17 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_190CA84E8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v13 = (id)v17;
  swift_retain();
  if (v12(v9, 1, v10))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190C39BFC(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for AppExtensionProcess.Configuration(uint64_t a1)
{
  return sub_190C39BFC(a1, (uint64_t *)&unk_1EE20AC78);
}

uint64_t type metadata accessor for AppExtensionProcess._InstanceIdentifier(uint64_t a1)
{
  return sub_190C39BFC(a1, (uint64_t *)&unk_1EE20ACD8);
}

uint64_t destroy for AppExtensionProcess.Configuration(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_190CA84E8();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

id _EXExtensionInstanceIdentifier.init(instanceIdentifier:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  objc_class *v15;
  id v16;
  objc_super v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190CA84E8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - v11;
  sub_190C3CB84(a1, (uint64_t)v5, (uint64_t *)&unk_1ECD98DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    v13 = v1;
    sub_190C38990((uint64_t)v5, (uint64_t *)&unk_1ECD98DB0);
    sub_190CA84DC();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v13[OBJC_IVAR____EXExtensionInstanceIdentifier_identifier], v10, v6);

  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v14(v12, v5, v6);
    v14(&v1[OBJC_IVAR____EXExtensionInstanceIdentifier_identifier], v12, v6);
  }
  v15 = (objc_class *)type metadata accessor for _EXExtensionInstanceIdentifier();
  v18.receiver = v1;
  v18.super_class = v15;
  v16 = objc_msgSendSuper2(&v18, sel_init);
  sub_190C38990(a1, (uint64_t *)&unk_1ECD98DB0);
  return v16;
}

uint64_t type metadata accessor for _EXExtensionInstanceIdentifier()
{
  uint64_t result;

  result = qword_1ECD98D08;
  if (!qword_1ECD98D08)
    return swift_getSingletonMetadata();
  return result;
}

id sub_190C39EB8(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  objc_super v18;

  v5 = OBJC_IVAR____EXHostConfiguration__extensionIdentity;
  *(_QWORD *)&v2[OBJC_IVAR____EXHostConfiguration__extensionIdentity] = 0;
  v6 = &v2[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = OBJC_IVAR____EXHostConfiguration_instanceIdentifier;
  *(_QWORD *)&v2[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = MEMORY[0x1E0DEE9E0];
  v8 = &v2[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____EXHostConfiguration_launchPersona] = 0;
  v9 = OBJC_IVAR____EXHostConfiguration_assertionAttributes;
  v10 = v2;
  *(_QWORD *)&v2[v9] = sub_190C39FF0();
  v10[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = 0;
  v11 = &v10[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
  v12 = sub_190CA8548();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = *(void **)&v2[v5];
  *(_QWORD *)&v2[v5] = a1;
  v14 = a1;

  v15 = *(void **)&v2[v7];
  *(_QWORD *)&v2[v7] = a2;
  v16 = a2;

  v18.receiver = v10;
  v18.super_class = (Class)type metadata accessor for _EXHostConfiguration();
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t sub_190C39FF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_190CAF150;
  v1 = (void *)sub_190CA85D8();
  v2 = (void *)sub_190CA85D8();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_attributeWithDomain_name_, v1, v2);

  *(_QWORD *)(v0 + 32) = v4;
  v5 = (void *)sub_190CA85D8();
  v6 = (void *)sub_190CA85D8();
  v7 = objc_msgSend(v3, sel_attributeWithDomain_name_, v5, v6);

  *(_QWORD *)(v0 + 40) = v7;
  sub_190CA86D4();
  return v0;
}

uint64_t _s19ExtensionFoundation19_EXExtensionProcessC09extensionD013configuration17completionHandleryAA20_EXHostConfigurationC_yACSg_So7NSErrorCSgtctFZ_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v6 = sub_190CA8554();
  v17[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190CA856C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE20AE50 != -1)
    swift_once();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a1;
  aBlock[4] = sub_190C327F0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190C2A3B4;
  aBlock[3] = &block_descriptor_5;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = a1;
  sub_190CA8560();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_190C3A458((unint64_t *)&qword_1ECD98C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C40);
  sub_190C3A3D4((unint64_t *)&qword_1ECD98C70, (uint64_t *)&unk_1ECD98C40);
  sub_190CA8914();
  MEMORY[0x1940176A8](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_190C3A3D4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1940187DC](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1940187D0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_190C3A458(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1940187DC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190C3A498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for _AppExtensionIdentity()
{
  return &type metadata for _AppExtensionIdentity;
}

ValueMetadata *type metadata accessor for AppExtensionIdentity()
{
  return &type metadata for AppExtensionIdentity;
}

uint64_t AppExtensionIdentity.extensionPointIdentifier.getter()
{
  return sub_190C2E374((SEL *)&selRef_extensionPointIdentifier);
}

uint64_t AppExtensionProcess._InstanceIdentifier.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_190CA84DC();
  v2 = sub_190CA84E8();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

Swift::Void __swiftcall AppExtensionProcess.invalidate()()
{
  id *v0;

  objc_msgSend(*v0, sel_invalidate);
}

BOOL _EXConfigureLaunchContext(uint64_t a1, uint64_t a2)
{
  return +[_EXLaunchConfiguration configureRBInfoOnLaunchContext:error:](_EXLaunchConfiguration, "configureRBInfoOnLaunchContext:error:", a1, a2);
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void sub_190C3A6C0(void *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  int *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t *v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t *v95;
  id v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  char v101;
  id v102;
  void *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(uint64_t, char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v110;
  id v111;
  void *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  id v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  void *v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  unsigned int v129;
  uint64_t v130;
  void *v131;
  void *v132;
  id v133;
  int *v134;
  void *v135;
  uint64_t v136;
  unsigned int v137;
  void *v138;
  id v139;
  int *v140;
  void *v141;
  id v142;
  id v143;
  void *v144;
  id v145;
  void *v146;
  void *v147;
  void *v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  char *v157;
  void *v158;
  uint64_t v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  char v165;
  void *v166;
  void *v167;
  uint64_t v168;
  char v169;
  id v170;
  id v171;
  void *v172;
  id v173;
  id v174;
  unsigned __int8 v175;
  void *v176;
  id v177;
  uint64_t v178;
  void *v179;
  id v180;
  id v181;
  id v182;
  _QWORD *v183;
  uint64_t inited;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  void *v189;
  _BOOL8 v190;
  void *v191;
  void *v192;
  uint64_t *v193;
  id v194;
  unsigned __int8 v195;
  char **v196;
  unint64_t v197;
  uint64_t v198;
  void *v199;
  void *v200;
  id v201;
  id v202;
  int *v203;
  const char *v204;
  id v205;
  void *v206;
  void *v207;
  uint64_t v208;
  void *v209;
  id v210;
  uint64_t *v211;
  void *v212;
  id v213;
  unsigned __int8 v214;
  uint64_t v215;
  int *v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  int *v223;
  id v224;
  void *v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  id v235;
  uint64_t *v236;
  uint64_t v237;
  void *v238;
  id v239;
  int *v240;
  id v241;
  int v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  id v253;
  id v254;
  audit_token_t v255;
  id v256;
  audit_token_t atoken;
  uint64_t v258;

  v242 = a2;
  v258 = *MEMORY[0x1E0C80C00];
  v244 = sub_190CA8434();
  v243 = *(_QWORD *)(v244 - 8);
  MEMORY[0x1E0C80A78](v244);
  v247 = (uint64_t)&v224 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = sub_190CA84E8();
  v249 = *(_QWORD *)(v251 - 8);
  MEMORY[0x1E0C80A78](v251);
  v245 = (char *)&v224 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v248 = (char *)&v224 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v246 = (char *)&v224 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v250 = (uint64_t)&v224 - v11;
  MEMORY[0x1E0C80A78](v10);
  v252 = (uint64_t)&v224 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v224 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190CA8548();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v224 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20A958);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v224 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)_s10AttachmentVMa(0);
  v24 = *((_QWORD *)v23 - 1);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v224 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v253;
  v28 = sub_190C3DEBC();
  if (v27)
    return;
  v241 = a1;
  v237 = v24;
  v239 = v22;
  v240 = v23;
  v232 = v15;
  v231 = v19;
  v233 = v17;
  v234 = v16;
  v236 = (uint64_t *)v26;
  v238 = 0;
  v29 = v28;
  v30 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, objc_msgSend(v28, "pid"));
  if (!v30)
  {
    v45 = (void *)objc_opt_self();
    *(_QWORD *)v255.val = 0;
    *(_QWORD *)&v255.val[2] = 0xE000000000000000;
    sub_190CA89D4();
    swift_bridgeObjectRelease();
    *(_QWORD *)v255.val = 0xD00000000000002BLL;
    *(_QWORD *)&v255.val[2] = 0x8000000190CB5530;
    atoken.val[0] = objc_msgSend(v29, "pid");
    sub_190CA8BB4();
    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v46 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v45, sel__EX_errorWithCode_description_, 2, v46);

    swift_willThrow();
LABEL_12:

    return;
  }
  v235 = v30;
  v253 = v29;
  objc_msgSend(v29, sel_auditToken);
  v31 = atoken.val[0];
  v32 = atoken.val[1];
  v34 = atoken.val[2];
  v33 = atoken.val[3];
  v36 = atoken.val[4];
  v35 = atoken.val[5];
  v37 = atoken.val[6];
  v38 = atoken.val[7];
  v255 = atoken;
  v39 = (void *)objc_opt_self();
  v254 = 0;
  atoken.val[0] = v31;
  atoken.val[1] = v32;
  atoken.val[2] = v34;
  atoken.val[3] = v33;
  atoken.val[4] = v36;
  atoken.val[5] = v35;
  atoken.val[6] = v37;
  atoken.val[7] = v38;
  v40 = objc_msgSend(v39, sel_bundleRecordForAuditToken_error_, &atoken, &v254);
  v41 = v254;
  if (v40)
  {
    v42 = v40;
    v43 = v241;
    v44 = v238;
  }
  else
  {
    v47 = v41;
    v48 = (void *)sub_190CA83EC();

    swift_willThrow();
    v42 = 0;
    v44 = 0;
    v43 = v241;
  }
  v49 = v240;
  v50 = v239;
  v51 = objc_msgSend(v43, sel_identity);
  v52 = v253;
  v29 = v235;
  if (!v51)
  {
    v62 = (void *)objc_opt_self();
    v63 = (void *)sub_190CA85D8();
    objc_msgSend(v62, sel__EX_errorWithCode_description_, 2, v63);

    swift_willThrow();
    goto LABEL_12;
  }
  v53 = v51;
  v54 = sub_190C2B30C(0, &qword_1ECD98BD0);
  v254 = (id)MEMORY[0x1E0DEE9D8];
  v55 = (uint64_t)v50;
  sub_190C3D678();
  if (!v44)
  {
    v239 = v53;
    v238 = v42;
    (*(void (**)(id, _QWORD, uint64_t, int *))(v237 + 56))(v50, 0, 1, v49);
    v64 = v236;
    sub_190C3D7C0(v55, (uint64_t)v236);
    v65 = v64[1];
    v237 = *v64;
    v66 = (_QWORD *)v64[2];
    v230 = v40;
    v229 = v54;
    if (v66)
    {
      v67 = v253;
      if (v66[2])
      {
        v68 = v29;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ADE0);
        v69 = swift_allocObject();
        *(_OWORD *)(v69 + 16) = xmmword_190CADDB0;
        *(_QWORD *)(v69 + 32) = 0x614C656C7070412DLL;
        *(_QWORD *)(v69 + 40) = 0xEF7365676175676ELL;
        *(_QWORD *)atoken.val = 8744;
        *(_QWORD *)&atoken.val[2] = 0xE200000000000000;
        v256 = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AF40);
        sub_190C81F74((unint64_t *)&qword_1EE20A2B8, &qword_1EE20AF40, MEMORY[0x1E0DEAF20]);
        sub_190CA85C0();
        swift_bridgeObjectRelease();
        sub_190CA8644();
        swift_bridgeObjectRelease();
        sub_190CA8644();
        v70 = *(_QWORD *)&atoken.val[2];
        *(_QWORD *)(v69 + 48) = *(_QWORD *)atoken.val;
        *(_QWORD *)(v69 + 56) = v70;
        v254 = (id)v69;
        goto LABEL_24;
      }
    }
    else
    {
      v67 = v253;
    }
    v68 = v29;
    swift_bridgeObjectRetain();
LABEL_24:
    v80 = swift_bridgeObjectRetain();
    v81 = sub_190C38A84(v80);
    swift_bridgeObjectRelease();
    objc_msgSend(v67, sel_auditToken);
    audit_token_to_euid(&atoken);
    v82 = sub_190C2D560();
    v227 = v81;
    v228 = v65;
    v226 = v82;
    v83 = objc_msgSend(v82, sel_bundleIdentifier);
    if (v83)
    {
      v84 = v83;
      v85 = sub_190CA85F0();
      v87 = v86;

      v88 = objc_msgSend(v239, sel_xpcServiceIdentifier);
      v61 = v68;
      if (v88)
      {
        v89 = v88;
        v90 = v68;
        v91 = sub_190CA85F0();
        v93 = v92;

        if (v85 == v91 && v87 == v93)
        {
          swift_bridgeObjectRelease_n();
          v61 = v90;
          goto LABEL_41;
        }
        v110 = sub_190CA8BCC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v61 = v90;
        if ((v110 & 1) != 0)
        {
LABEL_41:
          v111 = objc_msgSend(v239, sel_validationToken);
          if (v111)
          {
            v112 = v111;
            v113 = sub_190CA8488();
            v115 = v114;

          }
          else
          {
            v113 = 0;
            v115 = 0xF000000000000000;
          }
          v40 = v230;
          v123 = v226;
          v60 = sub_190C3D804(v226, v113, v115, (uint64_t)v61);
          v225 = 0;
          sub_190C3E0B8(v113, v115);
          v124 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, v123);
          v125 = (uint64_t)v232;
          sub_190C3CB84((uint64_t)v236 + v240[8], (uint64_t)v232, &qword_1ECD98D60);
          v126 = v233;
          v127 = v234;
          v128 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v233 + 48))(v125, 1, v234);
          v224 = v124;
          if (v128 == 1)
          {
            sub_190C38990(v125, &qword_1ECD98D60);
          }
          else
          {
            v156 = v60;
            v157 = v231;
            (*(void (**)(char *, uint64_t, uint64_t))(v126 + 32))(v231, v125, v127);
            v158 = v225;
            v159 = sub_190C691D0();
            if (v158)
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v126 + 8))(v157, v127);
              sub_190C32484((uint64_t)v236);

              swift_bridgeObjectRelease();
              return;
            }
            v225 = 0;
            sub_190C7F9FC(v159);
            (*(void (**)(char *, uint64_t))(v126 + 8))(v157, v127);
            v60 = v156;
            v124 = v224;
          }
          v160 = objc_msgSend(v226, sel_extensionPointRecord, v224);
          v161 = objc_msgSend(v160, sel__EX_parentAppRecord);

          if (v161)
          {
            if (v238)
            {
              v162 = v161;
              v163 = v124;
              v164 = v40;
              v165 = sub_190CA88A8();

              v124 = v163;
              if ((v165 & 1) == 0)
                goto LABEL_85;
LABEL_80:
              sub_190C32484((uint64_t)v236);

              if (!v124)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v166 = (void *)objc_opt_self();
                v167 = (void *)sub_190CA85D8();
                objc_msgSend(v166, sel__EX_errorWithCode_description_, 5, v167);

                swift_willThrow();
                goto LABEL_47;
              }
              goto LABEL_91;
            }

          }
          else if (!v238)
          {
            goto LABEL_80;
          }
LABEL_85:
          v170 = v239;
          if (!v124)
          {
LABEL_118:

            swift_bridgeObjectRelease();
            __break(1u);
            return;
          }
          v171 = v124;
          v172 = (void *)sub_190CA85D8();
          sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C08);
          v173 = objc_msgSend(v171, sel_entitlementNamed_ofClass_, v172, swift_getObjCClassFromMetadata());

          sub_190CA8908();
          swift_unknownObjectRelease();
          if ((swift_dynamicCast() & 1) == 0
            || (v174 = v256,
                v175 = objc_msgSend(v256, sel_BOOLValue),
                v174,
                (v175 & 1) == 0))
          {
            v176 = (void *)objc_opt_self();
            v177 = objc_msgSend(v171, sel_requiredHostEntitlements);
            v178 = sub_190CA859C();

            sub_190C6A878(v178);
            swift_bridgeObjectRelease();
            v179 = (void *)sub_190CA8590();
            swift_bridgeObjectRelease();
            *(_QWORD *)atoken.val = 0;
            LOBYTE(v177) = objc_msgSend(v176, sel_auditToken_hasRequiredEntitlements_error_, &v255, v179, &atoken);

            if ((v177 & 1) == 0)
            {
              v181 = *(id *)atoken.val;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_190CA83EC();

              swift_willThrow();
              swift_bridgeObjectRelease();
              sub_190C32484((uint64_t)v236);

              return;
            }
            v180 = *(id *)atoken.val;
          }
          sub_190C32484((uint64_t)v236);

          v40 = v230;
          v124 = v224;
LABEL_91:
          v95 = (uint64_t *)v124;
          v94 = (int *)v60;
          goto LABEL_30;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v61 = v68;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)atoken.val = 0;
    *(_QWORD *)&atoken.val[2] = 0xE000000000000000;
    sub_190CA89D4();
    sub_190CA8644();
    v142 = objc_msgSend(v226, sel_bundleIdentifier);
    v143 = v230;
    if (v142)
    {
      v144 = v142;
      sub_190CA85F0();

    }
    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v145 = objc_msgSend(v239, sel_xpcServiceIdentifier);
    if (v145)
    {
      v146 = v145;
      sub_190CA85F0();

    }
    v147 = (void *)objc_opt_self();
    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v148 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v147, sel__EX_errorWithCode_description_, 5, v148);

    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_190C32484((uint64_t)v236);
    return;
  }

  (*(void (**)(id, uint64_t, uint64_t, int *))(v237 + 56))(v50, 1, 1, v49);
  sub_190C38990((uint64_t)v50, (uint64_t *)&unk_1EE20A958);
  v56 = objc_msgSend(v53, sel_xpcServiceIdentifier);
  if (!v56)
  {
    swift_bridgeObjectRelease();
    v71 = (void *)objc_opt_self();
    *(_QWORD *)atoken.val = 0;
    *(_QWORD *)&atoken.val[2] = 0xE000000000000000;
    sub_190CA89D4();
    swift_bridgeObjectRelease();
    *(_QWORD *)atoken.val = 0xD000000000000022;
    *(_QWORD *)&atoken.val[2] = 0x8000000190CB5590;
    v72 = objc_msgSend(v53, sel_description);
    sub_190CA85F0();

    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v73 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v71, sel__EX_errorWithCode_description_, 5, v73);

    swift_willThrow();
    return;
  }
  v57 = v56;
  v239 = v53;
  sub_190CA85F0();

  v58 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  v59 = sub_190C80754();
  v60 = 0;
  v61 = v29;
  v74 = v59;
  v225 = 0;
  if (!v59)
  {

    __break(1u);
    goto LABEL_117;
  }
  v75 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, v59);
  if (!v75)
  {
LABEL_117:

    __break(1u);
    goto LABEL_118;
  }
  v76 = v75;
  if ((objc_msgSend(v75, sel_targetsSystemExtensionPoint) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v77 = (void *)objc_opt_self();
    *(_QWORD *)atoken.val = 0;
    *(_QWORD *)&atoken.val[2] = 0xE000000000000000;
    sub_190CA89D4();
    sub_190CA8644();
    v256 = v76;
    v78 = v76;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BF40);
    sub_190CA8620();
    sub_190CA8644();
    swift_bridgeObjectRelease();
    v79 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v77, sel__EX_errorWithCode_description_, 2, v79);

    swift_willThrow();
    return;
  }
  v229 = v54;
  v238 = v42;

  v94 = (int *)v239;
  v95 = v76;
  v237 = 0;
  v228 = 0;
  v227 = MEMORY[0x1E0DEE9E0];
LABEL_30:
  if (objc_msgSend(v95, sel_requiresHostToBeContainerApp))
  {
    v96 = objc_msgSend(v95, sel_containingBundleRecord);

    if (v96)
    {
      if (!v238)
        goto LABEL_46;
      v97 = objc_msgSend(v95, sel_containingBundleRecord);
      if (!v97
        || (v98 = v97,
            v99 = v40,
            v100 = v98,
            v101 = sub_190CA88A8(),
            v100,
            v100,
            v99,
            (v101 & 1) == 0))
      {
LABEL_46:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v120 = (void *)objc_opt_self();
        v121 = (void *)sub_190CA85D8();
        objc_msgSend(v120, sel__EX_errorWithCode_description_, 2, v121);

        swift_willThrow();
LABEL_47:
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  v102 = objc_msgSend(v94, sel_uuid);
  if (!v102)
  {
    v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v249 + 56);
    v109(v250, 1, 1, v251);
    goto LABEL_44;
  }
  v103 = v102;
  v240 = v94;
  v236 = v95;
  v104 = v245;
  sub_190CA84B8();

  v105 = v249;
  v106 = *(void (**)(uint64_t, char *, uint64_t))(v249 + 32);
  v107 = v250;
  v108 = v251;
  v106(v250, v104, v251);
  v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
  v109(v107, 0, 1, v108);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v107, 1, v108) == 1)
  {
    v95 = v236;
    v94 = v240;
LABEL_44:
    v116 = objc_msgSend(v241, sel_oneShotUUID);
    v117 = (uint64_t)v246;
    if (v116)
    {
      v118 = v116;
      sub_190CA84B8();

      v119 = 0;
    }
    else
    {
      v119 = 1;
    }
    v109(v117, v119, 1, v251);
    sub_190C45A08(v117, v252, (uint64_t *)&unk_1ECD98DB0);
    sub_190C38990(v250, (uint64_t *)&unk_1ECD98DB0);
    goto LABEL_54;
  }
  v122 = v252;
  v106(v252, (char *)v107, v108);
  v109(v122, 0, 1, v108);
  v95 = v236;
  v94 = v240;
LABEL_54:
  v129 = objc_msgSend(v95, sel_requiresLegacyInfrastructure);
  v130 = (uint64_t)v248;
  v131 = v225;
  if (v129)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v132 = (void *)objc_opt_self();
    *(_QWORD *)atoken.val = 0;
    *(_QWORD *)&atoken.val[2] = 0xE000000000000000;
    sub_190CA89D4();
    swift_bridgeObjectRelease();
    *(_QWORD *)atoken.val = 0x6F69736E65747845;
    *(_QWORD *)&atoken.val[2] = 0xEA0000000000206ELL;
    v133 = objc_msgSend(v95, sel_bundleIdentifier);
    sub_190CA85F0();
    v134 = v94;

    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v135 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v132, sel__EX_errorWithCode_description_, 10, v135);

    swift_willThrow();
    swift_bridgeObjectRelease();
    v136 = v252;
LABEL_59:
    sub_190C38990(v136, (uint64_t *)&unk_1ECD98DB0);

    return;
  }
  v137 = objc_msgSend(v95, sel_requiresMultiInstance);
  sub_190C3CB84(v252, v130, (uint64_t *)&unk_1ECD98DB0);
  if (v137 && (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v249 + 48))(v130, 1, v251) == 1)
  {
    sub_190C38990(v130, (uint64_t *)&unk_1ECD98DB0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v138 = (void *)objc_opt_self();
    *(_QWORD *)atoken.val = 0;
    *(_QWORD *)&atoken.val[2] = 0xE000000000000000;
    sub_190CA89D4();
    sub_190CA8644();
    v139 = objc_msgSend(v95, sel_extensionPointIdentifier);
    sub_190CA85F0();
    v140 = v94;

    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v141 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v138, sel__EX_errorWithCode_description_, 2, v141);

    swift_willThrow();
    swift_bridgeObjectRelease();
    v136 = v252;
    goto LABEL_59;
  }
  sub_190C38990(v130, (uint64_t *)&unk_1ECD98DB0);
  sub_190C390FC(v247);
  v238 = v131;
  if (v131)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190C38990(v252, (uint64_t *)&unk_1ECD98DB0);

  }
  else
  {
    v240 = v94;
    v149 = v228;
    if (v228)
    {
      swift_bridgeObjectRetain();
      v150 = objc_msgSend(v95, sel_sandboxProfileName);
      v151 = sub_190CA85F0();
      v153 = v152;

      v154 = v251;
      if (v237 == v151 && v149 == v153)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v155 = v149;
      }
      else
      {
        v168 = v237;
        v169 = sub_190CA8BCC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v169 & 1) != 0)
        {
          v155 = v149;
        }
        else
        {
          v182 = objc_msgSend(v95, sel_alternateSandboxProfileNames);
          v183 = (_QWORD *)sub_190CA86BC();

          LOBYTE(v182) = sub_190C80690(v168, v149, v183);
          swift_bridgeObjectRelease();
          if ((v182 & 1) != 0)
          {
            v155 = v228;
          }
          else
          {
            swift_bridgeObjectRelease();
            v237 = 0;
            v155 = 0;
          }
        }
      }
    }
    else
    {
      v155 = 0;
      v154 = v251;
    }
    v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ADE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190CADDC0;
    *(_QWORD *)(inited + 32) = sub_190CA8428();
    *(_QWORD *)(inited + 40) = v185;
    *(_QWORD *)atoken.val = inited;
    v186 = v249;
    if (*((_QWORD *)v254 + 2))
    {
      v187 = swift_bridgeObjectRetain();
      sub_190C7F9FC(v187);
    }
    v230 = v40;
    v228 = v155;
    v188 = v95;
    if (v155)
    {
      swift_bridgeObjectRetain();
      v189 = (void *)sub_190CA85D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v189 = 0;
    }
    v190 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v186 + 48))(v252, 1, v154) != 1;
    sub_190C38E40(*(uint64_t *)atoken.val);
    swift_bridgeObjectRelease();
    v191 = (void *)sub_190CA86B0();
    swift_bridgeObjectRelease();
    v192 = (void *)sub_190CA8590();
    swift_bridgeObjectRelease();
    v193 = v188;
    v194 = objc_msgSend(v188, sel_xpcOverlayDictionaryOverridingSandboxProfileName_multiInstance_arguments_additionalEnvironment_, v189, v190, v191, v192);

    sub_190CA859C();
    v195 = objc_msgSend(v193, sel_targetsSystemExtensionPoint);
    v196 = &selRef_proxyFactory;
    v236 = v193;
    if ((v195 & 1) != 0)
    {
      v197 = 0;
    }
    else
    {
      objc_msgSend(v193, sel_presentsUserInterface);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC0);
      v198 = swift_allocObject();
      *(_OWORD *)(v198 + 16) = xmmword_190CADDD0;
      v199 = (void *)sub_190CA85D8();
      v200 = (void *)sub_190CA85D8();
      v201 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v199, v200);

      *(_QWORD *)(v198 + 32) = v201;
      v256 = (id)v198;
      sub_190CA86D4();
      v197 = (unint64_t)v256;
      v196 = &selRef_proxyFactory;
    }
    v202 = v241;
    v203 = v240;
    objc_msgSend(v241, sel_setIdentity_, v240);
    v204 = v196[481];
    v205 = v253;
    objc_msgSend(v202, sel_setHostPid_, objc_msgSend(v253, v204));
    v206 = (void *)sub_190CA86B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v202, sel_setArguments_, v206);

    objc_msgSend(v202, sel__setAdditionalEnvironment_, 0);
    v207 = (void *)sub_190CA8590();
    swift_bridgeObjectRelease();
    objc_msgSend(v202, sel_setExtensionOverlay_, v207);

    v208 = v247;
    sub_190CA8428();
    v209 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v202, sel__setOverrideExecutablePath_, v209);

    v210 = v235;
    if ((v242 & 1) != 0)
    {

      v211 = v236;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v243 + 8))(v208, v244);
    }
    else
    {
      if (v197)
      {
        if (v197 >> 62)
        {
          sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
          swift_bridgeObjectRetain();
          sub_190CA8AE8();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_190CA8BD8();
          sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
        }
        swift_bridgeObjectRelease();
        sub_190C2B30C(0, (unint64_t *)&unk_1ECD98CD8);
        v212 = (void *)sub_190CA86B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        v212 = 0;
      }
      v213 = v241;
      objc_msgSend(v241, sel_setAttributes_, v212);

      v211 = v236;
      v214 = objc_msgSend(v236, sel_launchesViaExtensionKitService);
      v215 = v243;
      if ((v214 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))(v243 + 8))(v208, v244);

        v216 = v240;
        swift_bridgeObjectRelease();
      }
      else
      {
        v217 = swift_initStackObject();
        *(_OWORD *)(v217 + 16) = xmmword_190CADDB0;
        v218 = objc_msgSend(v211, sel_serviceName);
        v219 = sub_190CA85F0();
        v221 = v220;

        *(_QWORD *)(v217 + 32) = v219;
        *(_QWORD *)(v217 + 40) = v221;
        *(_QWORD *)(v217 + 48) = 0xD000000000000026;
        *(_QWORD *)(v217 + 56) = 0x8000000190CB4100;
        sub_190C80C34(v217);
        swift_setDeallocating();
        swift_arrayDestroy();
        v222 = (void *)sub_190CA8758();
        swift_bridgeObjectRelease();
        objc_msgSend(v213, sel_setManagedEndpointLaunchIdentifiers_, v222);

        v223 = v240;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v247, v244);
      }
    }
    sub_190C38990(v252, (uint64_t *)&unk_1ECD98DB0);

  }
}

uint64_t sub_190C3CB84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1940187C4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_2Tm(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_2Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

id _EXAuditTokenGetEntitlementValue(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = a2;
  v4 = v3;
  v5 = 0;
  if (a1 && v3)
  {
    v6 = (void *)MEMORY[0x194018140]();
    objc_msgSend(objc_retainAutorelease(v4), "UTF8String");
    v7 = (void *)xpc_copy_entitlement_for_token();
    v5 = (void *)_CFXPCCreateCFObjectFromXPCObject();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {

      v5 = 0;
    }

    objc_autoreleasePoolPop(v6);
  }

  return v5;
}

id _EXSignpostLog()
{
  if (_EXSignpostLog_onceToken != -1)
    dispatch_once(&_EXSignpostLog_onceToken, &__block_literal_global_9);
  return (id)_EXSignpostLog_log;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t _EXAuditTokenForCurrentProcess()
{
  if (_EXAuditTokenForCurrentProcess_once != -1)
    dispatch_once(&_EXAuditTokenForCurrentProcess_once, &__block_literal_global_6);
  return _EXAuditTokenForCurrentProcess_result;
}

uint64_t sub_190C3D66C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C3D678()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v7;
  void *v8;

  v1 = objc_msgSend(v0, sel_validationToken);
  if (v1)
  {
    v2 = v1;
    v3 = sub_190CA8488();
    v5 = v4;

    sub_190CA832C();
    swift_allocObject();
    sub_190CA8320();
    _s10AttachmentVMa(0);
    sub_190C3A458(&qword_1EE20A950, _s10AttachmentVMa, (uint64_t)&unk_190CAE5F8);
    sub_190CA8314();
    swift_release();
    return sub_190C32568(v3, v5);
  }
  else
  {
    v7 = (void *)objc_opt_self();
    v8 = (void *)sub_190CA85D8();
    objc_msgSend(v7, sel__EX_errorWithCode_description_, 5, v8);

    return swift_willThrow();
  }
}

uint64_t sub_190C3D7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10AttachmentVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_190C3D804(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  unsigned int v27;
  id v28;
  void *v29;
  id v30;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  id v72;

  v67 = a3;
  v63 = a2;
  v7 = sub_190CA84E8();
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  MEMORY[0x1E0C80A78](v7);
  v66 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v62 = (char *)v59 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20AEC0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_190CA8434();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v64 = (char *)v59 - v22;
  v23 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v23)
  {
    v42 = (void *)objc_opt_self();
    v43 = (id)sub_190CA85D8();
    v44 = objc_msgSend(v42, sel__EX_errorWithCode_description_, 5, v43);
    goto LABEL_14;
  }
  v24 = v23;
  v60 = a4;
  v61 = v4;
  v59[1] = sub_190CA85F0();
  v65 = v25;
  v26 = objc_msgSend(a1, sel_extensionPointRecord);
  v27 = objc_msgSend(v26, sel_extensionPointType);

  if (v27 == 2)
  {
    v28 = objc_msgSend(a1, sel_containingBundleRecord);
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend(v28, "URL");

      sub_190CA841C();
      v31 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v31(v16, v21, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
      {
        v31(v64, v16, v17);
        v32 = (id)sub_190CA8410();
        v33 = objc_msgSend(v72, sel_uuid);
        if (v33)
        {
          v34 = v33;
          v72 = v32;
          v35 = v66;
          sub_190CA84B8();

          v36 = v68;
          v37 = v69;
          v38 = v62;
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v62, v35, v69);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v38, 0, 1, v37);
          v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v38, 1, v37);
          v40 = v60;
          if (v39 == 1)
          {
            v41 = 0;
          }
          else
          {
            v41 = (void *)sub_190CA84A0();
            (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
          }
          v32 = v72;
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v62, 1, 1, v69);
          v41 = 0;
          v40 = v60;
        }
        v43 = objc_msgSend((id)objc_opt_self(), sel_extensionIdentityForPlugInKitIdentifier_bundledURL_hostIdentifier_UUID_, v24, v32, v40, v41);

        (*(void (**)(char *, uint64_t))(v18 + 8))(v64, v17);
        if (!v43)
          goto LABEL_26;
        goto LABEL_21;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    }

    swift_bridgeObjectRelease();
    sub_190C38990((uint64_t)v16, (uint64_t *)&unk_1EE20AEC0);
    v54 = (void *)objc_opt_self();
    v43 = (id)sub_190CA85D8();
    v44 = objc_msgSend(v54, sel__EX_errorWithCode_description_, 5, v43);
LABEL_14:
    v44;

LABEL_27:
    swift_willThrow();
    return v43;
  }
  v45 = v72;
  v46 = objc_msgSend(v72, sel_persona);
  v47 = objc_msgSend(v45, sel_uuid);
  if (v47)
  {
    v48 = v66;
    sub_190CA84B8();

    v49 = v68;
    v50 = v48;
    v51 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v12, v50, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v12, 0, 1, v51);
    v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v12, 1, v51);
    v53 = v60;
    if (v52 == 1)
    {
      v47 = 0;
    }
    else
    {
      v47 = (id)sub_190CA84A0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v51);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v12, 1, 1, v69);
    v53 = v60;
  }
  if (v67 >> 60 == 15)
    v55 = 0;
  else
    v55 = (void *)sub_190CA8470();
  v43 = objc_msgSend((id)objc_opt_self(), sel_extensionIdentityForBundleIdentifier_persona_instanceUUID_hostIdentifier_validationToken_, v24, v46, v47, v53, v55);

  if (!v43)
  {
LABEL_26:
    v56 = (void *)objc_opt_self();
    v70 = 0;
    v71 = 0xE000000000000000;
    sub_190CA89D4();
    sub_190CA8644();
    sub_190CA8644();
    swift_bridgeObjectRelease();
    v43 = (id)v71;
    v57 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v56, sel__EX_errorWithCode_description_, 5, v57);

    goto LABEL_27;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return v43;
}

id sub_190C3DEBC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v12;
  id v13[2];

  v2 = v0;
  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = objc_msgSend(v0, sel_identity);
  if (v3
    && (v1 = v3, v4 = objc_msgSend(v3, sel_hostIdentifier), v1, v4))
  {
    v5 = objc_msgSend(v2, sel_requestorHandle);
    v1 = v5;
    if (!v5)
    {
      v6 = (void *)objc_opt_self();
      v13[0] = 0;
      v1 = v4;
      v7 = objc_msgSend(v6, sel_handleForIdentifier_error_, v1, v13);
      if (!v7)
      {
        v12 = v13[0];
        sub_190CA83EC();

        swift_willThrow();
        return v1;
      }
      v8 = v7;
      v9 = v13[0];

      v1 = v8;
    }
    v10 = v5;

  }
  else
  {
    objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_190C3E0B8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_190C32568(a1, a2);
  return a1;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

id _EXExtensionGetGlobalStateQueue(uint64_t a1)
{
  return +[EXConcreteExtension globalStateQueueForExtension:](EXConcreteExtension, "globalStateQueueForExtension:", a1);
}

void _EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent()
{
  CFRunLoopRef Main;
  __CFRunLoop *v1;

  Main = CFRunLoopGetMain();
  if (!Main)
    _EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent_cold_1();
  v1 = Main;
  __EXExtensionPingLaunchdObserver = (uint64_t)CFRunLoopObserverCreate(0, 0xA0uLL, 0, 0, (CFRunLoopObserverCallBack)_EXExtensionPingLaunchdAfterEvent, 0);
  CFRunLoopAddObserver(v1, (CFRunLoopObserverRef)__EXExtensionPingLaunchdObserver, (CFRunLoopMode)*MEMORY[0x1E0C9B270]);
}

void EXConcreteExtensionTearDownRequestWithIdentifier(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  dispatch_time_t v18;
  NSObject *v19;
  id v20;
  id v21;
  _QWORD v22[4];
  id v23;
  id v24;
  id v25;
  id v26;
  uint8_t buf[4];
  id v28;
  __int16 v29;
  id v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  objc_msgSend(v5, "_extensionContextForUUID:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  _EXLegacyLog();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543874;
      v28 = v6;
      v29 = 2114;
      v30 = v5;
      v31 = 1024;
      LODWORD(v32) = objc_msgSend(v5, "_plugInProcessIdentifier");
      _os_log_impl(&dword_190C25000, v9, OS_LOG_TYPE_DEFAULT, "tearing down extension request %{public}@ to extension %{public}@ (last known pid %d)", buf, 0x1Cu);
    }

    objc_msgSend(v7, "internalImplementation");
    v9 = objc_claimAutoreleasedReturnValue();
    -[NSObject _processAssertion](v9, "_processAssertion");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject _setProcessAssertion:](v9, "_setProcessAssertion:", 0);
    -[NSObject _pkUUID](v9, "_pkUUID");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v11, "copy");

    -[NSObject invalidate](v9, "invalidate");
    objc_msgSend(v5, "_extensionContexts");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "removeObjectForKey:", v6);

    objc_msgSend(v5, "_extensionServiceConnections");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "objectForKeyedSubscript:", v6);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v15, "setInvalidationHandler:", 0);
    objc_msgSend(v15, "setInterruptionHandler:", 0);
    objc_msgSend(v15, "invalidate");
    objc_msgSend(v5, "_extensionServiceConnections");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "removeObjectForKey:", v6);

    _EXLegacyLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138543874;
      v28 = v6;
      v29 = 2114;
      v30 = v10;
      v31 = 2048;
      v32 = a3;
      _os_log_debug_impl(&dword_190C25000, v17, OS_LOG_TYPE_DEBUG, "Schedule request '%{public}@' assertion (%{public}@) cleanup after %llu seconds.", buf, 0x20u);
    }

    v18 = dispatch_time(0, 1000000000 * a3);
    +[EXConcreteExtension globalStateQueueForExtension:](EXConcreteExtension, "globalStateQueueForExtension:", v5);
    v19 = objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke;
    v22[3] = &unk_1E2CFCA48;
    v23 = v6;
    v24 = v10;
    v25 = v5;
    v26 = v12;
    v20 = v12;
    v21 = v10;
    dispatch_after(v18, v19, v22);

  }
  else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    EXConcreteExtensionTearDownRequestWithIdentifier_cold_1();
  }

}

void sub_190C3F438(void *a1)
{
  os_unfair_lock_s *v1;

  objc_begin_catch(a1);
  os_unfair_lock_unlock(v1);
  objc_exception_rethrow();
}

void sub_190C3F44C(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_190C3FEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t useAssertions()
{
  void *v1;
  uint64_t v2;

  if ((_os_feature_enabled_impl() & 1) != 0)
    return 1;
  +[_EXDefaults sharedInstance](_EXDefaults, "sharedInstance");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "platformShouldExhibitEmbeddedBehavior");

  return v2;
}

void safelyAccessPidForExtensionIdentiferDictionary(void *a1)
{
  void (**v1)(id, uint64_t);
  void (**v2)(id, uint64_t);
  void (**v3)(id, uint64_t);

  v1 = a1;
  if (safelyAccessPidForExtensionIdentiferDictionary_once != -1)
  {
    v3 = v1;
    dispatch_once(&safelyAccessPidForExtensionIdentiferDictionary_once, &__block_literal_global_370);
    v1 = v3;
    if (!v3)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v1)
  {
LABEL_3:
    v2 = v1;
    os_unfair_lock_lock((os_unfair_lock_t)&safelyAccessPidForExtensionIdentiferDictionary___lock);
    v2[2](v2, safelyAccessPidForExtensionIdentiferDictionary___extensionIDToProcessID);
    os_unfair_lock_unlock((os_unfair_lock_t)&safelyAccessPidForExtensionIdentiferDictionary___lock);
    v1 = v2;
  }
LABEL_4:

}

id _NSAcquireProcessAssertionForPIDWithOptions(uint64_t a1, char a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;

  v5 = a3;
  if ((int)a1 < 1)
    goto LABEL_10;
  if (useAssertions())
  {
    if ((a2 & 1) != 0)
      v6 = 15;
    else
      v6 = 7;
    v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CFE308]), "initWithPID:flags:reason:name:", a1, v6, 9, CFSTR("com.apple.extension.session"));
    objc_msgSend(v7, "setInvalidationHandler:", v5);
  }
  else
  {
    v7 = 0;
  }
  if ((objc_msgSend(v7, "acquire") & 1) == 0)
  {
    objc_msgSend(v7, "invalidate");

LABEL_10:
    v7 = 0;
  }

  return v7;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

id _EXRegistrationLog()
{
  if (_EXRegistrationLog_onceToken != -1)
    dispatch_once(&_EXRegistrationLog_onceToken, &__block_literal_global_7);
  return (id)_EXRegistrationLog_log;
}

id _sharedSafePluginQueue()
{
  if (_sharedSafePluginQueue_onceToken != -1)
    dispatch_once(&_sharedSafePluginQueue_onceToken, &__block_literal_global_353);
  return (id)_sharedSafePluginQueue_q;
}

void sub_190C412E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_190C42148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 240), 8);
  os_activity_scope_leave((os_activity_scope_state_t)(v27 - 120));
  _Unwind_Resume(a1);
}

void sub_190C43628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  os_unfair_lock_s *v24;

  if (a2)
  {
    objc_begin_catch(exception_object);
    os_unfair_lock_unlock(v24);
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_190C44360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t static AppExtension.main()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  objc_class *AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint8_t *v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t AssociatedConformanceWitness;
  id v40;
  id v41;
  id v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  Class v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[4];
  char *v56;

  v3 = v2;
  AssociatedTypeWitness = (objc_class *)swift_getAssociatedTypeWitness();
  v48 = *((_QWORD *)AssociatedTypeWitness - 1);
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v47 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v56 = (char *)&v43 - v10;
  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190CA87DC();
  if (qword_1ECD99018 != -1)
    swift_once();
  v15 = qword_1ECD99010;
  if (os_log_type_enabled((os_log_t)qword_1ECD99010, v14))
  {
    v46 = AssociatedTypeWitness;
    v16 = swift_slowAlloc();
    v44 = v2;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v45 = a2;
    v19 = (_QWORD *)v18;
    *(_DWORD *)v17 = 138412290;
    v43 = v17 + 4;
    v20 = v13;
    v21 = a1;
    v22 = v11;
    v23 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    *(_QWORD *)&v55[0] = v23;
    sub_190CA88F0();
    *v19 = v23;
    v11 = v22;
    a1 = v21;
    v13 = v20;
    AssociatedTypeWitness = v46;
    _os_log_impl(&dword_190C25000, v15, v14, "Launching non-UI extension %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    v24 = v19;
    a2 = v45;
    MEMORY[0x19401889C](v24, -1, -1);
    v25 = v17;
    v3 = v44;
    MEMORY[0x19401889C](v25, -1, -1);
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v26 = sub_190CA8998();
  sub_190C69F08(v26);
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v28 = *(void (**)(uint64_t, uint64_t))(a2 + 24);
    v28(a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98FE0);
    if ((swift_dynamicCast() & 1) == 0)
      memset(v55, 0, 48);
    sub_190C44BB0((uint64_t)v55, (uint64_t)&v49);
    if (v50)
    {
      sub_190C44B90(&v49, &v51);
      v29 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v30 = v52;
      v31 = v53;
      v32 = v54;
      v33 = v13;
      v34 = __swift_project_boxed_opaque_existential_2Tm(&v51, v52);
      v35 = objc_allocWithZone((Class)type metadata accessor for AppExtensionWrapper());
      v36 = sub_190C4492C((uint64_t)v34, v30, v31, v32);
      objc_msgSend(v29, sel_setExtension_, v36);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v33, a1);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v51);
    }
    else
    {
      sub_190C38990((uint64_t)&v49, &qword_1ECD98DF8);
      v37 = (uint64_t)AssociatedTypeWitness;
      v56 = (char *)objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v46 = (Class)type metadata accessor for AppExtensionWrapper();
      v38 = (uint64_t)v47;
      v28(a1, a2);
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v40 = objc_allocWithZone(v46);
      v41 = sub_190C6A068(v38, v37, AssociatedConformanceWitness);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v38, v37);
      v42 = v56;
      objc_msgSend(v56, sel_setExtension_, v41);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
    }
    return sub_190C38990((uint64_t)v55, &qword_1ECD98DF8);
  }
}

uint64_t type metadata accessor for AppExtensionWrapper()
{
  return objc_opt_self();
}

id sub_190C4492C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t (*v9)();
  uint64_t (**v10)();
  uint64_t (*v11)();
  uint64_t (*v12)();
  uint64_t (**v13)();
  uint64_t (*v14)();
  objc_super v16;

  v9 = sub_190C449BC(a1, a2, a3, a4);
  v10 = (uint64_t (**)())&v4[OBJC_IVAR____TtC19ExtensionFoundation19AppExtensionWrapper__accept];
  *v10 = v9;
  v10[1] = v11;
  v12 = sub_190C44A88(a1, a2, a3, a4);
  v13 = (uint64_t (**)())&v4[OBJC_IVAR____TtC19ExtensionFoundation19AppExtensionWrapper__handleConnection];
  *v13 = v12;
  v13[1] = v14;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for AppExtensionWrapper();
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t (*sub_190C449BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a2);
  return sub_190C6A17C;
}

uint64_t (*sub_190C44A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a2);
  return sub_190C2FAFC;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AppExtensionXPCConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_OWORD *sub_190C44B90(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t destroy for AppExtensionXPCConfiguration()
{
  return swift_release();
}

uint64_t sub_190C44BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

objc_class *EXGetExtensionClass()
{
  objc_class *v0;
  NSObject *v1;
  void *v2;
  int v4;
  const char *v5;
  __int16 v6;
  void *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = (objc_class *)objc_opt_class();
  _EXLegacyLog();
  v1 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    NSStringFromClass(v0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = 136446466;
    v5 = "Class EXGetExtensionClass(void)";
    v6 = 2114;
    v7 = v2;
    _os_log_impl(&dword_190C25000, v1, OS_LOG_TYPE_DEFAULT, "%{public}s returning %{public}@", (uint8_t *)&v4, 0x16u);

  }
  return v0;
}

objc_class *EXGetExtensionContextInternalClass()
{
  objc_class *v0;
  NSObject *v1;
  void *v2;
  int v4;
  const char *v5;
  __int16 v6;
  void *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = (objc_class *)objc_opt_class();
  _EXLegacyLog();
  v1 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    NSStringFromClass(v0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = 136446466;
    v5 = "Class EXGetExtensionContextInternalClass(void)";
    v6 = 2114;
    v7 = v2;
    _os_log_impl(&dword_190C25000, v1, OS_LOG_TYPE_DEFAULT, "%{public}s returning %{public}@", (uint8_t *)&v4, 0x16u);

  }
  return v0;
}

id _EXExtractRequiredHostEntitlements(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  id v10;
  const __CFString *v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v4, "hasPrefix:", CFSTR("com.apple.")))
  {
    objc_msgSend(v3, "_EX_dictionaryForKey:", CFSTR("EXRequiredHostEntitlements"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v5)
    {
      objc_msgSend(v3, "_EX_dictionaryForKey:", CFSTR("EXRequiredEntitlements"));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v5)
      {
        +[_EXDefaults sharedInstance](_EXDefaults, "sharedInstance");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = objc_msgSend(v6, "hostRequiresEntitlements");

        if (v7)
        {
          v10 = v4;
          v11 = CFSTR("com.apple.extensionkit.host.extension-point-identifiers");
          objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v10, 1);
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          v12[0] = v8;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, &v11, 1);
          v5 = (void *)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          v5 = (void *)MEMORY[0x1E0C9AA70];
        }
      }
    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

uint64_t _EXAuditTokenHasRequiredEntitlements(_OWORD *a1, void *a2, _QWORD *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  __int128 v18;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  audit_token_t atoken;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_msgSend(v5, "_EX_arrayForKey:", CFSTR("com.apple.extensionkit.host.extension-point-identifiers"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "firstObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v5, "count") == 1 && v7)
  {
    objc_opt_class();
    _EXAuditTokenGetEntitlementValue((uint64_t)a1, CFSTR("com.apple.extensionkit.host.extension-point-identifiers"));
    v8 = (id)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "containsObject:", v7);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v8 = v5;
    v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
    if (v10)
    {
      v11 = v10;
      v20 = a3;
      v12 = *(_QWORD *)v22;
      while (2)
      {
        for (i = 0; i != v11; ++i)
        {
          if (*(_QWORD *)v22 != v12)
            objc_enumerationMutation(v8);
          v14 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
          objc_msgSend(v8, "objectForKeyedSubscript:", v14);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          _EXAuditTokenGetEntitlementValue((uint64_t)a1, v14);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v16, "isEqual:", v15) & 1) == 0)
          {
            _EXDefaultLog();
            v17 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
              _EXAuditTokenHasRequiredEntitlements_cold_1((uint64_t)v14, (uint64_t)v16, v17);

            v9 = 0;
            goto LABEL_16;
          }

        }
        v11 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
        if (v11)
          continue;
        break;
      }
      v9 = 1;
LABEL_16:
      a3 = v20;
    }
    else
    {
      v9 = 1;
    }
  }

  if (a3 && (v9 & 1) == 0)
  {
    v18 = a1[1];
    *(_OWORD *)atoken.val = *a1;
    *(_OWORD *)&atoken.val[4] = v18;
    objc_msgSend(MEMORY[0x1E0CB35C8], "_EX_hostIsLackingRequiredEntitlementErrorWithHostPID:requiredEntitlements:", audit_token_to_pid(&atoken), v5);
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }

  return v9;
}

objc_class *EXGetExtensionContextVendorClass()
{
  objc_class *v0;
  NSObject *v1;
  void *v2;
  int v4;
  const char *v5;
  __int16 v6;
  void *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = (objc_class *)objc_opt_class();
  _EXLegacyLog();
  v1 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    NSStringFromClass(v0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = 136446466;
    v5 = "Class EXGetExtensionContextVendorClass(void)";
    v6 = 2114;
    v7 = v2;
    _os_log_impl(&dword_190C25000, v1, OS_LOG_TYPE_DEFAULT, "%{public}s returning %{public}@", (uint8_t *)&v4, 0x16u);

  }
  return v0;
}

uint64_t sub_190C459C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190C45A08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_190C45A4C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 32 * result);
  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  *(_QWORD *)(a7[7] + 8 * result) = a6;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

uint64_t sub_190C45AB0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_190C28FD4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

id sub_190C45AD4(void *a1)
{
  objc_msgSend(a1, sel_setActivateOnResume);
  return objc_msgSend(a1, sel_setFaultOnSuspend);
}

void sub_190C45B08(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

ValueMetadata *_s10AttachmentV10CodingKeysOMa()
{
  return &_s10AttachmentV10CodingKeysON;
}

unint64_t sub_190C45B64()
{
  unint64_t result;

  result = qword_1EE20AF00;
  if (!qword_1EE20AF00)
  {
    result = MEMORY[0x1940187DC](&unk_190CAE62C, &_s10AttachmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE20AF00);
  }
  return result;
}

unint64_t sub_190C45BA8()
{
  unint64_t result;

  result = qword_1EE20AEF8;
  if (!qword_1EE20AEF8)
  {
    result = MEMORY[0x1940187DC](&unk_190CAE654, &_s10AttachmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE20AEF8);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_190C45B08(a1, &qword_1ECD98DE8);
}

uint64_t sub_190C45C00()
{
  uint64_t v0;

  return sub_190C69554(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_190C45C08()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_190C45C28()
{
  uint64_t v0;

  return sub_190C45C30(*(_QWORD *)(v0 + 16));
}

uint64_t sub_190C45C30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_190C45C38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_190C45C58(uint64_t a1)
{
  return sub_190C28A3C(a1, qword_1ECD98D28);
}

uint64_t sub_190C45C74()
{
  uint64_t v0;

  return sub_190C291C4(*(void **)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

void sub_190C45CD4()
{
  uint64_t v0;

  sub_190C29D94(*(void **)(v0 + 16));
}

void sub_190C45CDC(void *a1, void *a2)
{
  uint64_t v2;

  sub_190C297C0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_190C45CE4()
{
  unint64_t result;

  result = qword_1EE20A320;
  if (!qword_1EE20A320)
  {
    result = MEMORY[0x1940187DC](&unk_190CAF3B0, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_1EE20A320);
  }
  return result;
}

ExtensionFoundation::_AppExtensionIdentity __swiftcall _AppExtensionIdentity.init(_:)(ExtensionFoundation::_AppExtensionIdentity result)
{
  Class *v1;

  *v1 = result._inner.super.isa;
  return result;
}

uint64_t _AppExtensionIdentity.bundleIdentifier.getter()
{
  return sub_190C2E374((SEL *)&selRef_bundleIdentifier);
}

ValueMetadata *type metadata accessor for _AppExtensionProcess()
{
  return &type metadata for _AppExtensionProcess;
}

void sub_190C45D4C(void *a1, void *a2)
{
  uint64_t v2;

  sub_190C293EC(a1, a2, *(void (**)(id *))(v2 + 16));
}

uint64_t type metadata accessor for _AppExtensionProcess.Configuration(uint64_t a1)
{
  return sub_190C39BFC(a1, (uint64_t *)&unk_1EE20A9D0);
}

uint64_t _AppExtensionProcess.Configuration.additionalEnvironmentVariables.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t _AppExtensionProcess.Configuration.sandboxProfileName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t _AppExtensionProcess.Configuration.preferredLanguages.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

void _AppExtensionProcess.Configuration.instanceIdentifier.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t _AppExtensionProcess.Configuration.init(appExtension:onInterruption:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v7 = *a1;
  *(_QWORD *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 40) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = 0;
  *(_QWORD *)(a4 + 72) = sub_190C39FF0();
  *(_BYTE *)(a4 + 80) = 0;
  v8 = a4 + *(int *)(type metadata accessor for _AppExtensionProcess.Configuration(0) + 52);
  v9 = sub_190CA8548();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)a4 = v7;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t AppExtensionXPCConfiguration.init(connectionHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

id get_EXRunningUIViewServiceExtensionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)get_EXRunningUIViewServiceExtensionClass_softClass;
  v7 = get_EXRunningUIViewServiceExtensionClass_softClass;
  if (!get_EXRunningUIViewServiceExtensionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __get_EXRunningUIViewServiceExtensionClass_block_invoke;
    v3[3] = &unk_1E2CFC480;
    v3[4] = &v4;
    __get_EXRunningUIViewServiceExtensionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_190C4654C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id get_EXRunningUIKitSceneHostedExtensionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)get_EXRunningUIKitSceneHostedExtensionClass_softClass;
  v7 = get_EXRunningUIKitSceneHostedExtensionClass_softClass;
  if (!get_EXRunningUIKitSceneHostedExtensionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __get_EXRunningUIKitSceneHostedExtensionClass_block_invoke;
    v3[3] = &unk_1E2CFC480;
    v3[4] = &v4;
    __get_EXRunningUIKitSceneHostedExtensionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_190C46604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id get_EXRunningUISceneExtensionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)get_EXRunningUISceneExtensionClass_softClass;
  v7 = get_EXRunningUISceneExtensionClass_softClass;
  if (!get_EXRunningUISceneExtensionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __get_EXRunningUISceneExtensionClass_block_invoke;
    v3[3] = &unk_1E2CFC480;
    v3[4] = &v4;
    __get_EXRunningUISceneExtensionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_190C466BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190C46F60(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void ExtensionKitLibrary()
{
  void *v0;

  if (!ExtensionKitLibraryCore_frameworkLibrary)
    ExtensionKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!ExtensionKitLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_10(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x1Cu);
}

void OUTLINED_FUNCTION_11(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x26u);
}

void _EXExtensionPingLaunchdAfterEvent()
{
  +[EXXPCUtil checkInWithLaunchd](EXXPCUtil, "checkInWithLaunchd");
  CFRelease((CFTypeRef)__EXExtensionPingLaunchdObserver);
  __EXExtensionPingLaunchdObserver = 0;
}

void sub_190C47AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void EXConcreteExtensionErrorCleanupHandler(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v3 = a1;
  v4 = a2;
  +[EXConcreteExtension globalStateQueueForExtension:](EXConcreteExtension, "globalStateQueueForExtension:", v3);
  v5 = objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __EXConcreteExtensionErrorCleanupHandler_block_invoke;
  v8[3] = &unk_1E2CFC638;
  v9 = v3;
  v10 = v4;
  v6 = v4;
  v7 = v3;
  dispatch_async(v5, v8);

}

void sub_190C48E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190C49060(_Unwind_Exception *exception_object, int a2)
{
  os_unfair_lock_s *v2;

  if (a2)
  {
    objc_begin_catch(exception_object);
    os_unfair_lock_unlock(v2);
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_190C49394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190C49AD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 64));
  _Unwind_Resume(a1);
}

id EXConcreteExtensionFilterItemsWithMCProfile(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[5];
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v19[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v15 = 0;
  v16 = &v15;
  v17 = 0x2050000000;
  v5 = (void *)getMCProfileConnectionClass_softClass;
  v18 = getMCProfileConnectionClass_softClass;
  if (!getMCProfileConnectionClass_softClass)
  {
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = __getMCProfileConnectionClass_block_invoke;
    v14[3] = &unk_1E2CFC480;
    v14[4] = &v15;
    __getMCProfileConnectionClass_block_invoke((uint64_t)v14);
    v5 = (void *)v16[3];
  }
  v6 = objc_retainAutorelease(v5);
  _Block_object_dispose(&v15, 8);
  objc_msgSend(v6, "sharedConnection");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "identifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v19, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "bundleIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "allowedAppBundleIDsForBidirectionalDataMovementAfterApplyingFilterToBundleIDs:localAppBundleID:localAccountIsManaged:", v9, v11, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v12, "count"))
  {

    v4 = 0;
  }

  return v4;
}

void sub_190C49C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void EXConcreteExtensionTearDownRequestCompletion(void *a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(_QWORD);
  id v7;
  NSObject *v8;
  double v9;
  _DWORD v10[2];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  v7 = a2;
  _EXLegacyLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v10[0] = 67109120;
    v10[1] = objc_msgSend(v5, "_plugInProcessIdentifier");
    _os_log_impl(&dword_190C25000, v8, OS_LOG_TYPE_DEFAULT, "in EXConcreteExtensionTearDownRequestCompletion for plugin pid %d", (uint8_t *)v10, 8u);
  }

  v6[2](v6);
  objc_msgSend(v5, "requestTeardownDelay");
  EXConcreteExtensionTearDownRequestWithIdentifier(v5, v7, (uint64_t)v9);

}

void sub_190C49F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_190C4A208(_Unwind_Exception *a1)
{
  uint64_t v1;

  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

_EXItemProviderSandboxedResource *EXConcreteExtensionGetSandboxedResourceForItemIfNeeded(void *a1, _OWORD *a2, uint64_t a3)
{
  id v5;
  _EXItemProviderSandboxedResource *v6;
  __int128 v7;
  _EXItemProviderSandboxedResource *v8;
  _OWORD v10[2];

  v5 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v5, "isFileURL"))
  {
    v6 = [_EXItemProviderSandboxedResource alloc];
    v7 = a2[1];
    v10[0] = *a2;
    v10[1] = v7;
    v8 = -[_EXItemProviderSandboxedResource initWithContentsOfURL:auditToken:error:](v6, "initWithContentsOfURL:auditToken:error:", v5, v10, a3);
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void EXConcreteExtensionCompleteItemLoading(void *a1, _OWORD *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, id, id);
  id v10;
  id v11;
  __int128 v12;
  id v13;
  void *v14;
  _OWORD v15[2];
  id v16;

  v7 = a1;
  v8 = a3;
  v9 = a4;
  if (v8)
  {
    v10 = 0;
    v11 = 0;
  }
  else
  {
    v16 = 0;
    v12 = a2[1];
    v15[0] = *a2;
    v15[1] = v12;
    EXConcreteExtensionGetSandboxedResourceForItemIfNeeded(v7, v15, (uint64_t)&v16);
    v10 = (id)objc_claimAutoreleasedReturnValue();
    v13 = v16;
    if (v13)
    {
      v14 = v13;

      v11 = v14;
      v7 = 0;
      v8 = v11;
    }
    else if (v10)
    {
      v10 = v10;

      v11 = 0;
      v8 = 0;
      v7 = v10;
    }
    else
    {
      v11 = 0;
      v8 = 0;
    }
  }
  v9[2](v9, v7, v8);

}

void sub_190C4B2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190C4B510(void *a1)
{
  os_unfair_lock_s *v1;

  objc_begin_catch(a1);
  os_unfair_lock_unlock(v1);
  objc_exception_rethrow();
}

void sub_190C4B524(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void EXConcreteExtensionDispatchSyncFromMainQueueToGlobalStateQueue(void *a1, void *a2)
{
  void (**v3)(_QWORD);
  NSObject *v4;
  id v5;

  v5 = a1;
  v3 = a2;
  if (dyld_program_sdk_at_least())
  {
    +[EXConcreteExtension globalStateQueueForExtension:](EXConcreteExtension, "globalStateQueueForExtension:", v5);
    v4 = objc_claimAutoreleasedReturnValue();
    dispatch_sync(v4, v3);

  }
  else
  {
    v3[2](v3);
  }

}

void ___sharedSafePluginQueue_block_invoke()
{
  dispatch_queue_t v0;
  void *v1;
  NSObject *v2;

  dispatch_get_global_queue(0, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  v0 = dispatch_queue_create_with_target_V2("safe plugin queue for NSExtension", 0, v2);
  v1 = (void *)_sharedSafePluginQueue_q;
  _sharedSafePluginQueue_q = (uint64_t)v0;

}

Class __getMCProfileConnectionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!ManagedConfigurationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("MCProfileConnection");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    __getMCProfileConnectionClass_block_invoke_cold_1();
    free(v3);
  }
  getMCProfileConnectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

CFMutableDictionaryRef __safelyAccessPidForExtensionIdentiferDictionary_block_invoke()
{
  CFMutableDictionaryRef result;

  result = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E0C9B390], 0);
  safelyAccessPidForExtensionIdentiferDictionary___extensionIDToProcessID = (uint64_t)result;
  return result;
}

void OUTLINED_FUNCTION_1_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0x1Cu);
}

void OUTLINED_FUNCTION_2_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_4_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_7_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_10_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_13(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_16(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 8u);
}

void OUTLINED_FUNCTION_17(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x20u);
}

void OUTLINED_FUNCTION_20(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, a5, 0x26u);
}

void sub_190C4D1E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

void sub_190C4D58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_190C4D690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_190C4D7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_190C4D8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void _NSExtensionContextCompleteItemLoading(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, id, id);
  id v10;
  void *v11;
  id object;

  object = a1;
  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (!v8)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v10 = v7;
      objc_msgSend(v10, "resourceURL");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = v10;
      if (v11)
      {
        objc_setAssociatedObject(object, v10, v10, (void *)0x301);
        v7 = v11;

      }
    }
  }
  v9[2](v9, v7, v8);

}

void sub_190C4E25C(_Unwind_Exception *a1)
{
  uint64_t v1;

  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_3_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

uint64_t EXExtensionIsSafeKeyPathForObject(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t IsSafeKeyPathForObject;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t IsSafeKeyPathForObjectsInCollection;
  const char *v14;
  Class Class;
  void *v16;

  v3 = a1;
  v4 = a2;
  if (!v4)
    goto LABEL_8;
  v5 = objc_msgSend(v3, "rangeOfString:", CFSTR("."));
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v8 = v5;
    v9 = v6;
    objc_msgSend(v3, "substringToIndex:", v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "substringFromIndex:", v8 + v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v10, "isEqualToString:", CFSTR("@count")))
    {
      if ((EXExtensionIsOfSafeCollectionClassForPredicates(v4) & 1) != 0
        || (objc_getClass("NSDictionary"), (objc_opt_isKindOfClass() & 1) != 0))
      {

LABEL_8:
        IsSafeKeyPathForObject = 1;
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    if ((objc_msgSend(v10, "isEqualToString:", CFSTR("@avg")) & 1) != 0
      || (objc_msgSend(v10, "isEqualToString:", CFSTR("@max")) & 1) != 0
      || (objc_msgSend(v10, "isEqualToString:", CFSTR("@min")) & 1) != 0
      || objc_msgSend(v10, "isEqualToString:", CFSTR("@sum")))
    {
      if (EXExtensionIsOfSafeCollectionClassForPredicates(v4))
      {
        v12 = &__block_literal_global_4;
LABEL_15:
        IsSafeKeyPathForObjectsInCollection = EXExtensionIsSafeKeyPathForObjectsInCollection(v11, v4, v12);
LABEL_16:
        IsSafeKeyPathForObject = IsSafeKeyPathForObjectsInCollection;
LABEL_30:

        goto LABEL_31;
      }
    }
    else
    {
      if ((objc_msgSend(v10, "isEqualToString:", CFSTR("@distinctUnionOfObjects")) & 1) == 0
        && !objc_msgSend(v10, "isEqualToString:", CFSTR("@unionOfObjects")))
      {
        if ((objc_msgSend(v10, "isEqualToString:", CFSTR("@distinctUnionOfArrays")) & 1) != 0
          || objc_msgSend(v10, "isEqualToString:", CFSTR("@unionOfArrays")))
        {
          v14 = "NSArray";
        }
        else
        {
          if (!objc_msgSend(v10, "isEqualToString:", CFSTR("@distinctUnionOfSets")))
          {
            if (EXExtensionIsSafeKeyForObject(v10, v4))
            {
              objc_msgSend(v4, "valueForKey:", v10);
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              IsSafeKeyPathForObject = EXExtensionIsSafeKeyPathForObject(v11, v16);

              goto LABEL_30;
            }
            goto LABEL_29;
          }
          v14 = "NSSet";
        }
        Class = objc_getClass(v14);
        IsSafeKeyPathForObjectsInCollection = EXExtensionIsSafeKeyPathForSubcollectionsOfClassOfCollection(v11, (uint64_t)Class, v4);
        goto LABEL_16;
      }
      if (EXExtensionIsOfSafeCollectionClassForPredicates(v4))
      {
        v12 = &__block_literal_global_18;
        goto LABEL_15;
      }
    }
LABEL_29:
    IsSafeKeyPathForObject = 0;
    goto LABEL_30;
  }
  IsSafeKeyPathForObject = EXExtensionIsSafeKeyForObject(v3, v4);
LABEL_31:

  return IsSafeKeyPathForObject;
}

uint64_t EXExtensionIsSafeKeyForObject(void *a1, void *a2)
{
  id v3;
  id v4;
  const __CFString *v5;
  char v6;
  char isKindOfClass;

  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "length"))
  {
    if (!v4)
    {
      v6 = 1;
      goto LABEL_14;
    }
    if (objc_msgSend(v3, "characterAtIndex:", 0) != 64)
    {
      objc_getClass("NSString");
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        objc_getClass("NSDictionary");
        isKindOfClass = objc_opt_isKindOfClass();
        goto LABEL_13;
      }
      v5 = CFSTR("length");
LABEL_11:
      isKindOfClass = objc_msgSend(v3, "isEqualToString:", v5);
LABEL_13:
      v6 = isKindOfClass;
      goto LABEL_14;
    }
    if ((EXExtensionIsOfSafeCollectionClassForPredicates(v4) & 1) != 0
      || (objc_getClass("NSDictionary"), (objc_opt_isKindOfClass() & 1) != 0))
    {
      v5 = CFSTR("@count");
      goto LABEL_11;
    }
  }
  v6 = 0;
LABEL_14:

  return v6 & 1;
}

uint64_t EXExtensionIsOfSafeCollectionClassForPredicates(void *a1)
{
  id v1;
  char isKindOfClass;

  v1 = a1;
  objc_getClass("NSArray");
  if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_getClass("NSSet"), (objc_opt_isKindOfClass() & 1) != 0))
  {
    isKindOfClass = 1;
  }
  else
  {
    objc_getClass("NSOrderedSet");
    isKindOfClass = objc_opt_isKindOfClass();
  }

  return isKindOfClass & 1;
}

uint64_t EXExtensionIsSafeKeyPathForObjectsInCollection(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t (**v7)(id, void *);
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  int v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v8 = v6;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v19;
    while (2)
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v19 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * i);
        if (EXExtensionIsSafeKeyPathForObject(v5, v13))
        {
          objc_msgSend(v13, "valueForKeyPath:", v5, (_QWORD)v18);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = v7[2](v7, v14);

          if (v15)
            continue;
        }
        v16 = 0;
        goto LABEL_13;
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      v16 = 1;
      if (v10)
        continue;
      break;
    }
  }
  else
  {
    v16 = 1;
  }
LABEL_13:

  return v16;
}

uint64_t EXExtensionIsSafeKeyPathForSubcollectionsOfClassOfCollection(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a1;
  v5 = a3;
  if (EXExtensionIsOfSafeCollectionClassForPredicates(v5))
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v6 = v5;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v15;
      while (2)
      {
        v10 = 0;
        do
        {
          if (*(_QWORD *)v15 != v9)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v10);
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            v12 = 0;
            goto LABEL_13;
          }
          EXExtensionIsSafeKeyPathForObjectsInCollection(v4, v11, &__block_literal_global_118);
          ++v10;
        }
        while (v8 != v10);
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        if (v8)
          continue;
        break;
      }
    }
    v12 = 1;
LABEL_13:

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

uint64_t EXExtensionIsPredicateSafeToExecuteWithObject(void *a1, void *a2)
{
  char *v3;
  id v4;
  NSObject *v5;
  uint64_t IsSafePredicateForObjectWithSubquerySubstitutions;
  NSObject *v7;
  int v9;
  const char *v10;
  __int16 v11;
  char *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_getClass("NSTruePredicate");
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    _EXLegacyLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v9 = 138412290;
      v10 = v3;
      _os_log_impl(&dword_190C25000, v5, OS_LOG_TYPE_DEFAULT, "Use of NSTruePredicate is forbidden: %@", (uint8_t *)&v9, 0xCu);
    }

  }
  IsSafePredicateForObjectWithSubquerySubstitutions = EXExtensionIsSafePredicateForObjectWithSubquerySubstitutions(v3, v4, MEMORY[0x1E0C9AA70]);
  if ((IsSafePredicateForObjectWithSubquerySubstitutions & 1) == 0)
  {
    _EXLegacyLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9 = 136315394;
      v10 = "EXExtensionIsPredicateSafeToExecuteWithObject";
      v11 = 2112;
      v12 = v3;
      _os_log_impl(&dword_190C25000, v7, OS_LOG_TYPE_DEFAULT, "%s: NSPredicate considered unsafe: %@", (uint8_t *)&v9, 0x16u);
    }

  }
  return IsSafePredicateForObjectWithSubquerySubstitutions;
}

uint64_t EXExtensionIsSafePredicateForObjectWithSubquerySubstitutions(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char IsSafeExpressionForObjectWithSubquerySubstitutions;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  NSObject *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint8_t v26[128];
  uint8_t buf[4];
  const char *v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_getClass("NSCompoundPredicate");
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v24 = 0u;
    v25 = 0u;
    v22 = 0u;
    v23 = 0u;
    objc_msgSend(v5, "subpredicates", 0);
    v8 = (id)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v23;
      while (2)
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v23 != v11)
            objc_enumerationMutation(v8);
          if (!EXExtensionIsSafePredicateForObjectWithSubquerySubstitutions(*(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * v12), v6, v7))
          {
            IsSafeExpressionForObjectWithSubquerySubstitutions = 0;
            goto LABEL_23;
          }
          ++v12;
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
        if (v10)
          continue;
        break;
      }
    }
    IsSafeExpressionForObjectWithSubquerySubstitutions = 1;
    goto LABEL_23;
  }
  objc_getClass("NSComparisonPredicate");
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v8 = v5;
    v14 = v6;
    v15 = v7;
    v16 = objc_msgSend(v8, "predicateOperatorType");
    v17 = v16;
    if (v16 > 98)
    {
      if ((unint64_t)(v16 - 99) < 2 || (unint64_t)(v16 - 1100) < 2 || v16 == 1000)
      {
LABEL_14:
        objc_msgSend(v8, "leftExpression");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        if (EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v18, v14, v15))
        {
          objc_msgSend(v8, "rightExpression");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          IsSafeExpressionForObjectWithSubquerySubstitutions = EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v19, v14, v15);

        }
        else
        {
          IsSafeExpressionForObjectWithSubquerySubstitutions = 0;
        }

LABEL_22:
LABEL_23:

        goto LABEL_24;
      }
    }
    else if ((unint64_t)v16 < 0xB)
    {
      goto LABEL_14;
    }
    _EXLegacyLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      v28 = "EXExtensionIsSafePredicateOperatorTypeForObjectWithSubquerySubstitutions";
      v29 = 2048;
      v30 = v17;
      _os_log_impl(&dword_190C25000, v21, OS_LOG_TYPE_DEFAULT, "%s: NSPredicateOperator considered unsafe: %ld", buf, 0x16u);
    }

    IsSafeExpressionForObjectWithSubquerySubstitutions = 0;
    goto LABEL_22;
  }
  objc_getClass("NSTruePredicate");
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    IsSafeExpressionForObjectWithSubquerySubstitutions = 1;
  }
  else
  {
    objc_getClass("NSFalsePredicate");
    IsSafeExpressionForObjectWithSubquerySubstitutions = objc_opt_isKindOfClass();
  }
LABEL_24:

  return IsSafeExpressionForObjectWithSubquerySubstitutions & 1;
}

id _EXPredicateWithString(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  objc_msgSend(v1, "rangeOfString:", CFSTR("%"));
  if (v2)
  {
    v3 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v3;
}

void sub_190C50F7C(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
  JUMPOUT(0x190C50F48);
}

id _EXExtensionMakeAndPredicate(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (!v3)
  {
    v8 = v4;
LABEL_6:
    v7 = v8;
    goto LABEL_7;
  }
  if (!v4)
  {
    v8 = v3;
    goto LABEL_6;
  }
  v10[0] = v3;
  v10[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  _EXExtensionMakeAndPredicateWithArray(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_7:
  return v7;
}

void sub_190C516C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 128), 8);
  _Unwind_Resume(a1);
}

id _EXExtensionMakeAndPredicateWithArray(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "count") < 2)
  {
    if (objc_msgSend(v1, "count") != 1)
    {
      v3 = 0;
      goto LABEL_7;
    }
    objc_msgSend(v1, "objectAtIndex:", 0);
    v2 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3528], "andPredicateWithSubpredicates:", v1);
    v2 = objc_claimAutoreleasedReturnValue();
  }
  v3 = (void *)v2;
LABEL_7:

  return v3;
}

void sub_190C51F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _EXExtensionItemsMatchHackishRepresentationOfSharedLocationExtensionItems(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  objc_msgSend(a1, "objectForKey:", CFSTR("extensionItems"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (_NSIsNSArray() && objc_msgSend(v1, "count") == 1)
  {
    objc_msgSend(v1, "firstObject");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if (_NSIsNSDictionary() && objc_msgSend(v2, "count") == 1)
    {
      objc_msgSend(v2, "objectForKey:", CFSTR("attachments"));
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      if (_NSIsNSArray()
        && (unint64_t)objc_msgSend(v3, "count") >= 3
        && (unint64_t)objc_msgSend(v3, "count") <= 3)
      {
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObject:", CFSTR("public.url"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObject:", CFSTR("public.plain-text"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObject:", CFSTR("com.apple.mapkit.map-item"));
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObject:forKey:", v13, CFSTR("registeredTypeIdentifiers"));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObject:forKey:", v12, CFSTR("registeredTypeIdentifiers"));
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObject:forKey:", v6, CFSTR("registeredTypeIdentifiers"));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v3);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", v8, v7, v9, 0);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v4 = objc_msgSend(v10, "isEqualToSet:", v11);

      }
      else
      {
        v4 = 0;
      }

    }
    else
    {
      v4 = 0;
    }

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id _EXExtensionPredicateForActivationRule(void *a1)
{
  id v1;
  NSObject *v2;
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _EXExtensionPredicateBuilder *v14;
  _OWORD v16[4];

  v1 = a1;
  objc_getClass("NSString");
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_getClass("NSDictionary");
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      _EXDefaultLog();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
        _EXExtensionPredicateForActivationRule_cold_2((uint64_t)v1, v2);

    }
  }
  objc_getClass("NSString");
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    _EXPredicateWithString(v1);
    v3 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = v1;
    if (_EXExtensionGenerateNSPredicateFromActivationDictionary_once[0] != -1)
      dispatch_once(_EXExtensionGenerateNSPredicateFromActivationDictionary_once, &__block_literal_global_154);
    _EXLegacyLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      _EXExtensionPredicateForActivationRule_cold_1((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11);

    objc_msgSend((id)_EXExtensionGenerateNSPredicateFromActivationDictionary_predicateCache, "objectForKey:", v4);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v12;
    if (v12)
    {
      v3 = v12;
    }
    else
    {
      memset(v16, 0, sizeof(v16));
      if (_EXExtensionGetActivationRules_onceToken[0] != -1)
        dispatch_once(_EXExtensionGetActivationRules_onceToken, &__block_literal_global_163);
      __copy_constructor_8_8_s0_s8_s16_s24_s32_s40_s48_s56(v16, (id *)&_EXExtensionGetActivationRules__activation_rules);
      if (+[EXConcreteExtension _shouldLogExtensionDiscovery](EXConcreteExtension, "_shouldLogExtensionDiscovery"))
      {
        NSLog(CFSTR("Generating predicate for predicate dictionary %@"), v4);
      }
      v14 = -[_EXExtensionPredicateBuilder initWithActivationRules:predicateDictionary:]([_EXExtensionPredicateBuilder alloc], "initWithActivationRules:predicateDictionary:", v16, v4);
      -[_EXExtensionPredicateBuilder makePredicate](v14, "makePredicate");
      v3 = (id)objc_claimAutoreleasedReturnValue();
      if (+[EXConcreteExtension _shouldLogExtensionDiscovery](EXConcreteExtension, "_shouldLogExtensionDiscovery"))
      {
        NSLog(CFSTR("Got predicate %@\n\n"), v3);
      }
      if (v3)
        objc_msgSend((id)_EXExtensionGenerateNSPredicateFromActivationDictionary_predicateCache, "setObject:forKey:", v3, v4);

      __destructor_8_s0_s8_s16_s24_s32_s40_s48_s56((id *)v16);
    }

  }
  return v3;
}

void sub_190C5244C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  __destructor_8_s0_s8_s16_s24_s32_s40_s48_s56((id *)va);
  _Unwind_Resume(a1);
}

uint64_t EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(void *a1, void *a2, void *a3)
{
  __CFString *v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  char v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  NSObject *v19;
  int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  char IsSafeExpressionForObjectWithSubquerySubstitutions;
  void *v35;
  char v36;
  NSObject *v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  int v48;
  const __CFString *v49;
  NSObject *log;
  NSObject *v51;
  void *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint8_t v57[128];
  uint8_t buf[4];
  const char *v59;
  __int16 v60;
  const __CFString *v61;
  __int16 v62;
  NSObject *v63;
  __int16 v64;
  NSObject *v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = 1;
  switch(-[__CFString expressionType](v5, "expressionType"))
  {
    case 0:
    case 1:
    case 2:
    case 10:
      goto LABEL_76;
    case 3:
    case 4:
      -[__CFString function](v5, "function");
      v9 = objc_claimAutoreleasedReturnValue();
      if ((-[NSObject isEqualToString:](v9, "isEqualToString:", CFSTR("valueForKey:")) & 1) != 0
        || -[NSObject isEqualToString:](v9, "isEqualToString:", CFSTR("valueForKeyPath:")))
      {
        -[__CFString arguments](v5, "arguments");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v12, "count") == 1)
        {
          objc_msgSend(v12, "firstObject");
          v13 = objc_claimAutoreleasedReturnValue();
          if (!EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v13, v6, v7))
          {
            _EXLegacyLog();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_5();
            v20 = 0;
            goto LABEL_69;
          }
          objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithDictionary:", v7);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject expressionValueWithObject:context:](v13, "expressionValueWithObject:context:", v6, v14);
          v15 = objc_claimAutoreleasedReturnValue();

          if (!_NSIsNSString())
          {
            _EXLegacyLog();
            v17 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_4((uint64_t)v15, v17);
            v20 = 0;
            goto LABEL_68;
          }
          -[__CFString operand](v5, "operand");
          v16 = objc_claimAutoreleasedReturnValue();
          v17 = v16;
          if (v16)
          {
            if (EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v16, v6, v7))
            {
              objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithDictionary:", v7);
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              -[NSObject expressionValueWithObject:context:](v17, "expressionValueWithObject:context:", v6, v18);
              v51 = objc_claimAutoreleasedReturnValue();

              if (-[NSObject isEqualToString:](v9, "isEqualToString:", CFSTR("valueForKeyPath:")))
              {
                v19 = v51;
                if ((EXExtensionIsSafeKeyPathForObject(v15, v51) & 1) != 0)
                {
LABEL_16:
                  v20 = 1;
LABEL_67:

LABEL_68:
LABEL_69:

                  goto LABEL_70;
                }
              }
              else
              {
                v19 = v51;
                if ((EXExtensionIsSafeKeyForObject(v15, v51) & 1) != 0)
                  goto LABEL_16;
              }
              _EXLegacyLog();
              log = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(log, OS_LOG_TYPE_DEBUG))
              {
                v48 = -[NSObject isEqualToString:](v9, "isEqualToString:", CFSTR("valueForKeyPath:"));
                v49 = &stru_1E2CFF9B8;
                *(_DWORD *)buf = 136315906;
                v59 = "EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions";
                v60 = 2112;
                if (v48)
                  v49 = CFSTR("path");
                v61 = v49;
                v62 = 2112;
                v63 = v15;
                v64 = 2112;
                v65 = v19;
                _os_log_debug_impl(&dword_190C25000, log, OS_LOG_TYPE_DEBUG, "%s: Key%@ \"%@\" not safe to evaluate with %@", buf, 0x2Au);
              }

            }
            else
            {
              _EXLegacyLog();
              v51 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v51, OS_LOG_TYPE_DEBUG))
                EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_3();
            }
          }
          else
          {
            _EXLegacyLog();
            v38 = objc_claimAutoreleasedReturnValue();
            v51 = v38;
            if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_2(v38, v39, v40, v41, v42, v43, v44, v45);
          }
          v20 = 0;
          goto LABEL_67;
        }
        _EXLegacyLog();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
LABEL_33:
          EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_6(v12, v13);
      }
      else
      {
        if ((-[NSObject isEqualToString:](v9, "isEqualToString:", CFSTR("from:subtract:")) & 1) == 0
          && !-[NSObject isEqualToString:](v9, "isEqualToString:", CFSTR("add:to:")))
        {
          _EXLegacyLog();
          v37 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG))
            EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_10();

          goto LABEL_19;
        }
        -[__CFString arguments](v5, "arguments");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v12, "count") == 2)
        {
          objc_msgSend(v12, "objectAtIndexedSubscript:", 0);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          IsSafeExpressionForObjectWithSubquerySubstitutions = EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v33, v6, v7);

          if ((IsSafeExpressionForObjectWithSubquerySubstitutions & 1) != 0)
          {
            v20 = 1;
            objc_msgSend(v12, "objectAtIndexedSubscript:", 1);
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            v36 = EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v35, v6, v7);

            if ((v36 & 1) != 0)
              goto LABEL_71;
            _EXLegacyLog();
            v13 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_7(v12, v13);
          }
          else
          {
            _EXLegacyLog();
            v13 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_8(v12, v13);
          }
          goto LABEL_34;
        }
        _EXLegacyLog();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
          goto LABEL_33;
      }
LABEL_34:
      v20 = 0;
LABEL_70:

LABEL_71:
      if (!v20)
        goto LABEL_73;
      goto LABEL_72;
    case 5:
    case 6:
    case 7:
      objc_getClass("NSSet");
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        objc_getClass("NSOrderedSet");
        if ((objc_opt_isKindOfClass() & 1) == 0)
          goto LABEL_73;
      }
      -[__CFString leftExpression](v5, "leftExpression");
      v9 = objc_claimAutoreleasedReturnValue();
      if ((EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v9, v6, v7) & 1) != 0)
      {
        -[__CFString rightExpression](v5, "rightExpression");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v10, v6, v7);

        if ((v11 & 1) != 0)
          goto LABEL_72;
      }
      else
      {
LABEL_19:

      }
      goto LABEL_73;
    case 11:
    case 12:
    case 14:
    case 15:
    case 19:
    case 20:
      goto LABEL_73;
    case 13:
      -[__CFString collection](v5, "collection");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      if ((EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v21, v6, v7) & 1) == 0)
        goto LABEL_52;
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithDictionary:", v7);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "expressionValueWithObject:context:", v6, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v23)
      {

        goto LABEL_72;
      }
      if ((EXExtensionIsOfSafeCollectionClassForPredicates(v23) & 1) != 0)
      {
        v52 = v21;
        v24 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithDictionary:", v7);
        v53 = 0u;
        v54 = 0u;
        v55 = 0u;
        v56 = 0u;
        v25 = v23;
        v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v53, v57, 16);
        if (!v26)
          goto LABEL_31;
        v27 = v26;
        v28 = *(_QWORD *)v54;
        while (1)
        {
          for (i = 0; i != v27; ++i)
          {
            if (*(_QWORD *)v54 != v28)
              objc_enumerationMutation(v25);
            v30 = *(_QWORD *)(*((_QWORD *)&v53 + 1) + 8 * i);
            -[__CFString variable](v5, "variable");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v24, "setObject:forKey:", v30, v31);

            -[__CFString predicate](v5, "predicate");
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            LODWORD(v31) = EXExtensionIsSafePredicateForObjectWithSubquerySubstitutions(v32, v6, v24);

            if (!(_DWORD)v31)
            {

              goto LABEL_73;
            }
          }
          v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v53, v57, 16);
          if (!v27)
          {
LABEL_31:

LABEL_72:
            v8 = 1;
            goto LABEL_76;
          }
        }
      }

LABEL_52:
LABEL_73:
      _EXLegacyLog();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        v59 = "EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions";
        v60 = 2112;
        v61 = v5;
        _os_log_impl(&dword_190C25000, v46, OS_LOG_TYPE_DEFAULT, "%s: Expression considered unsafe: %@", buf, 0x16u);
      }

      v8 = 0;
LABEL_76:

      return v8;
    default:
      _EXLegacyLog();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
        EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_1();
      goto LABEL_19;
  }
}

void __destructor_8_s0_s8_s16_s24_s32_s40_s48_s56(id *a1)
{

}

id __copy_constructor_8_8_s0_s8_s16_s24_s32_s40_s48_s56(_QWORD *a1, id *a2)
{
  id result;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  result = a2[7];
  a1[7] = result;
  return result;
}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_190C538C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_190C54568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_7_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x26u);
}

void OUTLINED_FUNCTION_8_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x30u);
}

void sub_190C556F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_4_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t _EXAuditTokenGetPID(_OWORD *a1)
{
  __int128 v1;
  audit_token_t v3;

  v1 = a1[1];
  *(_OWORD *)v3.val = *a1;
  *(_OWORD *)&v3.val[4] = v1;
  return audit_token_to_pid(&v3);
}

BOOL _EXAuditTokenEqual(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  pid_t v5;
  __int128 v6;
  __int128 v7;
  int v8;
  __int128 v9;
  audit_token_t v11;

  v4 = a1[1];
  *(_OWORD *)v11.val = *a1;
  *(_OWORD *)&v11.val[4] = v4;
  v5 = audit_token_to_pid(&v11);
  v6 = a2[1];
  *(_OWORD *)v11.val = *a2;
  *(_OWORD *)&v11.val[4] = v6;
  if (v5 != audit_token_to_pid(&v11))
    return 0;
  v7 = a1[1];
  *(_OWORD *)v11.val = *a1;
  *(_OWORD *)&v11.val[4] = v7;
  v8 = audit_token_to_pidversion(&v11);
  v9 = a2[1];
  *(_OWORD *)v11.val = *a2;
  *(_OWORD *)&v11.val[4] = v9;
  return v8 == audit_token_to_pidversion(&v11);
}

void _NSExtensionContextEmitNotifications(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD block[4];
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5;
  _EXExtensionGetGlobalStateQueue(0);
  v14 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___NSExtensionContextEmitNotifications_block_invoke;
  block[3] = &unk_1E2CFC7C8;
  v21 = v10;
  v22 = v9;
  v23 = v11;
  v24 = v12;
  v25 = v13;
  v15 = v13;
  v16 = v12;
  v17 = v11;
  v18 = v9;
  v19 = v10;
  dispatch_async(v14, block);

}

void sub_190C571E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getISIconClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!IconServicesLibraryCore_frameworkLibrary)
  {
    IconServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!IconServicesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_6:
      __getISIconClass_block_invoke_cold_1();
    }
  }
  result = objc_getClass("ISIcon");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    goto LABEL_6;
  getISIconClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t OUTLINED_FUNCTION_5_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 24) = a1;
  return objc_opt_class();
}

id _EXDiscoveryLog()
{
  if (_EXDiscoveryLog_onceToken != -1)
    dispatch_once(&_EXDiscoveryLog_onceToken, &__block_literal_global_3);
  return (id)_EXDiscoveryLog_log;
}

void __sdkDictionaryAdditions_block_invoke()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  const __CFString *v22;
  const __CFString *v23;
  const __CFString *v24;
  const __CFString *v25;
  const __CFString *v26;
  const __CFString *v27;
  const __CFString *v28;
  uint64_t v29;
  const __CFString *v30;
  uint64_t v31;
  const __CFString *v32;
  uint64_t v33;
  const __CFString *v34;
  uint64_t v35;
  const __CFString *v36;
  uint64_t v37;
  const __CFString *v38;
  const __CFString *v39;
  const __CFString *v40;
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[2];
  const __CFString *v44;
  uint64_t v45;
  const __CFString *v46;
  uint64_t v47;
  const __CFString *v48;
  uint64_t v49;
  const __CFString *v50;
  uint64_t v51;
  const __CFString *v52;
  uint64_t v53;
  const __CFString *v54;
  uint64_t v55;
  const __CFString *v56;
  uint64_t v57;
  const __CFString *v58;
  const __CFString *v59;
  _QWORD v60[19];
  _QWORD v61[21];

  v61[19] = *MEMORY[0x1E0C80C00];
  v58 = CFSTR("EXExtensionPointGroupExtensionPointIdentifier");
  v59 = CFSTR("com.apple.quicklook.preview");
  v60[0] = CFSTR("com.apple.quicklook.thumbnail");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v59, &v58, 1);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v61[0] = v21;
  v60[1] = CFSTR("com.apple.usernotifications.content-extension");
  v56 = CFSTR("EXSettingsEnablementUIHidden");
  v0 = MEMORY[0x1E0C9AAB0];
  v57 = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v57, &v56, 1);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v61[1] = v20;
  v60[2] = CFSTR("com.apple.fileprovider-actionsui");
  v54 = CFSTR("EXSettingsEnablementUIHidden");
  v55 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v55, &v54, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v61[2] = v19;
  v60[3] = CFSTR("com.apple.fskit.fsmodule");
  v52 = CFSTR("EXSettingsEnablementUIHidden");
  v53 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v53, &v52, 1);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v61[3] = v18;
  v60[4] = CFSTR("com.apple.FinderSync");
  v50 = CFSTR("EXSettingsEnablementUIHidden");
  v51 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v51, &v50, 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v61[4] = v17;
  v60[5] = CFSTR("com.apple.ctk-tokens");
  v48 = CFSTR("EXSettingsEnablementUIHidden");
  v49 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v49, &v48, 1);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v61[5] = v16;
  v60[6] = CFSTR("com.apple.AppSSO.idp-extension");
  v46 = CFSTR("EXSettingsEnablementUIHidden");
  v47 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v47, &v46, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v61[6] = v15;
  v60[7] = CFSTR("com.apple.appintents-extension");
  v44 = CFSTR("EXSettingsEnablementUIHidden");
  v45 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v45, &v44, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v61[7] = v14;
  v60[8] = CFSTR("com.apple.services");
  v42[0] = CFSTR("EXSettingsEnablementUIHidden");
  v42[1] = CFSTR("EXExtensionIconPersonality");
  v43[0] = v0;
  v43[1] = CFSTR("self");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v43, v42, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v61[8] = v13;
  v60[9] = CFSTR("com.apple.AudioUnit");
  v40 = CFSTR("EXSettingsEnablementUIHidden");
  v41 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v41, &v40, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v61[9] = v12;
  v60[10] = CFSTR("com.apple.AudioUnit-UI");
  v38 = CFSTR("EXExtensionPointGroupExtensionPointIdentifier");
  v39 = CFSTR("com.apple.AudioUnit");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v39, &v38, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v61[10] = v11;
  v60[11] = CFSTR("com.apple.usernotifications.service");
  v36 = CFSTR("EXSettingsEnablementUIHidden");
  v37 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v37, &v36, 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v61[11] = v1;
  v60[12] = CFSTR("com.apple.networkextension.packet-tunnel");
  v34 = CFSTR("EXSettingsEnablementUIHidden");
  v35 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v35, &v34, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v61[12] = v2;
  v60[13] = CFSTR("com.apple.app.non-ui-extension");
  v32 = CFSTR("EXSettingsEnablementUIHidden");
  v33 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v61[13] = v3;
  v60[14] = CFSTR("com.apple.app.non-ui-extension.multiple-instances");
  v30 = CFSTR("EXSettingsEnablementUIHidden");
  v31 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v61[14] = v4;
  v60[15] = CFSTR("com.apple.app.ui-extension.multiple-instances");
  v28 = CFSTR("EXSettingsEnablementUIHidden");
  v29 = v0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v61[15] = v5;
  v60[16] = CFSTR("com.apple.watchkit");
  v26 = CFSTR("EXExtensionIconPersonality");
  v27 = CFSTR("self");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v27, &v26, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v61[16] = v6;
  v60[17] = CFSTR("com.apple.message-payload-provider");
  v24 = CFSTR("EXExtensionIconPersonality");
  v25 = CFSTR("self");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v61[17] = v7;
  v60[18] = CFSTR("com.apple.ui-services");
  v22 = CFSTR("EXExtensionIconPersonality");
  v23 = CFSTR("self");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v61[18] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v61, v60, 19);
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = (void *)sdkDictionaryAdditions_sdkDictionaryAdditions;
  sdkDictionaryAdditions_sdkDictionaryAdditions = v9;

}

void OUTLINED_FUNCTION_4_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

void sub_190C64CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190C67620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id _EXExtensionProcessMannger.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionProcessMannger();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for _EXExtensionProcessMannger()
{
  return swift_lookUpClassMethod();
}

void type metadata accessor for _EXQueryResultType(uint64_t a1)
{
  sub_190C45B08(a1, &qword_1EE20B888);
}

uint64_t initializeBufferWithCopyOfBuffer for QueryController.Callbacks(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditToken(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AuditToken(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_190C45B08(a1, (unint64_t *)&unk_1EE20B890);
}

_QWORD *sub_190C67EBC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_190C67ECC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_190C67ED8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_190C67EE4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_190CA847C();
  *a2 = 0;
  return v3 & 1;
}

void sub_190C67F80(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_190C67F8C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_190C67FA0(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_QWORD *sub_190C67FB4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_190C67FC8(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_190C67FDC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_190C67FF0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = sub_190CA8470();
  result = sub_190C32568(v3, v4);
  *a2 = v5;
  return result;
}

uint64_t sub_190C68038@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_190CA8488();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_190C68060(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_190C68074(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  _QWORD v21[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - v7;
  v9 = sub_190CA8548();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190CA853C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_190C38990((uint64_t)v8, &qword_1ECD98D60);
    if (qword_1EE20ADE8 != -1)
      swift_once();
    v13 = sub_190CA8518();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EE20AE20);
    v14 = a1;
    v15 = sub_190CA8500();
    v16 = sub_190CA87E8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      v21[5] = v1;
      *(_DWORD *)v17 = 138543362;
      v21[1] = v14;
      v19 = v14;
      sub_190CA88F0();
      *v18 = v14;

      _os_log_impl(&dword_190C25000, v15, v16, "Failed to resolve host network app id to config: %{public}@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v18, -1, -1);
      MEMORY[0x19401889C](v17, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v12, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    v20 = (uint64_t)a1 + OBJC_IVAR____EXLaunchConfiguration_networkApplicationID;
    swift_beginAccess();
    sub_190C683B0((uint64_t)v6, v20);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

unint64_t sub_190C68364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE20A2B8;
  if (!qword_1EE20A2B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE20AF40);
    result = MEMORY[0x1940187DC](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE20A2B8);
  }
  return result;
}

uint64_t sub_190C683B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_190C6840C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  int v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  void *v14;
  os_log_type_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = sub_190CA8548();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v23 - v6;
  sub_190CA8530();
  v8 = nw_application_id_set_self();
  swift_unknownObjectRelease();
  if (v8)
  {
    v9 = sub_190CA87E8();
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD99020);
    v10 = sub_190CA88C0();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 67109120;
      LODWORD(v27) = v8;
      sub_190CA88F0();
      _os_log_impl(&dword_190C25000, v10, v11, "Could not apply network app ID: %{darwin.errno}d", v12, 8u);
      MEMORY[0x19401889C](v12, -1, -1);
    }

    sub_190CA85F0();
    v13 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v14 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 16, 0);

    swift_willThrow();
  }
  else
  {
    v15 = sub_190CA87D0();
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v16(v7, v0, v1);
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD99020);
    v17 = sub_190CA88C0();
    if (os_log_type_enabled(v17, v15))
    {
      v18 = swift_slowAlloc();
      v24 = v15;
      v19 = (uint8_t *)v18;
      v25 = swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v19 = 136315138;
      v23 = v19 + 4;
      v16(v5, (uint64_t)v7, v1);
      v20 = sub_190CA8620();
      v26 = sub_190C30058(v20, v21, &v27);
      sub_190CA88F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      _os_log_impl(&dword_190C25000, v17, (os_log_type_t)v24, "Set network app id to %s", v19, 0xCu);
      v22 = v25;
      swift_arrayDestroy();
      MEMORY[0x19401889C](v22, -1, -1);
      MEMORY[0x19401889C](v19, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
  }
}

uint64_t sub_190C68750(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A2D8);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_190C38990((uint64_t)v14, (uint64_t *)&unk_1EE20A2E0);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_190CA8A1C();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_190C69CD8(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_190CA8650();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_190C69D3C(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v14[0]);
    sub_190C69624();
    __asm { BR              X12 }
  }
  sub_190C6A2A8(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_2Tm(v17, v17[3]);
  sub_190CA83D4();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t sub_190C68C54(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;

  sub_190CA8374();
  swift_allocObject();
  sub_190CA8368();
  sub_190CA8548();
  sub_190C6A0DC(&qword_1EE20AF28, MEMORY[0x1E0CCE830]);
  v2 = sub_190CA835C();
  v4 = v3;
  swift_release();
  v5 = (void *)sub_190CA8470();
  v6 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  return sub_190C32568(v2, v4);
}

uint64_t sub_190C68ED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  sub_190C2B30C(0, &qword_1EE20ADB0);
  v2 = sub_190CA8878();
  if (v2)
  {
    v3 = (void *)v2;
    sub_190CA832C();
    swift_allocObject();
    sub_190CA8320();
    v4 = sub_190CA8548();
    v5 = v3;
    v6 = sub_190CA8488();
    v8 = v7;

    sub_190C6A0DC((unint64_t *)&unk_1EE20A9E0, MEMORY[0x1E0CCE838]);
    sub_190CA8314();

    sub_190C32568(v6, v8);
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
  else
  {
    v9 = sub_190CA8548();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_190C691D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_190CA8614();
  MEMORY[0x1E0C80A78](v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ADE0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190CADDB0;
  strcpy((char *)(v2 + 32), "-NetworkAppID");
  *(_WORD *)(v2 + 46) = -4864;
  sub_190CA8374();
  swift_allocObject();
  sub_190CA8368();
  sub_190CA8548();
  sub_190C6A0DC(&qword_1EE20AF28, MEMORY[0x1E0CCE830]);
  v3 = sub_190CA835C();
  v5 = v4;
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = 0;
    swift_release();
    return v2;
  }
  sub_190CA8608();
  result = sub_190CA85FC();
  if (v7)
  {
    v8 = result;
    v9 = v7;
    sub_190C32568(v3, v5);
    *(_QWORD *)(v2 + 48) = v8;
    *(_QWORD *)(v2 + 56) = v9;
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_190C6934C(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_190C6A210;
}

id sub_190C69490()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppExtensionWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190C69500(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_190C69510(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_190C69544(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_190C69554(uint64_t (*a1)(void))
{
  return a1();
}

void sub_190C69574(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_190CA88F0();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

void sub_190C69624()
{
  __asm { BR              X11 }
}

_QWORD *sub_190C69684@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_190C69914@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_190C69B20(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_190C69BE0((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_190C69C58((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_190C69988(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_190C699EC(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_190CA8398();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_190CA83BC();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_190CA83B0();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_190C69A98@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_190CA89E0();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_190C69B20(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_190C69BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_190CA83C8();
  swift_allocObject();
  result = sub_190CA838C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_190CA844C();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_190C69C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_190CA83C8();
  swift_allocObject();
  result = sub_190CA838C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

_BYTE *sub_190C69CD8(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_190C69B20(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_190C69BE0((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_190C69C58((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_190C69D3C(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_190CA83C8();
      swift_allocObject();
      sub_190CA83A4();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_190CA844C();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_190C69DD8(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = result;
  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    result = *(_QWORD *)(result + 32);
    if (result != 0x6B726F7774654E2DLL || *(_QWORD *)(v1 + 40) != 0xED00004449707041)
    {
      result = sub_190CA8BCC();
      if ((result & 1) == 0)
      {
        v6 = (_QWORD *)(v1 + 56);
        v7 = 1;
        while (v2 != v7)
        {
          v4 = v7;
          result = *(v6 - 1);
          if (result != 0x6B726F7774654E2DLL || *v6 != 0xED00004449707041)
          {
            result = sub_190CA8BCC();
            v7 = v4 + 1;
            v6 += 2;
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_8;
        }
        return 0;
      }
    }
  }
  v4 = 0;
LABEL_8:
  if (v4 >= (uint64_t)(v2 - 1))
    return 0;
  if (v4 + 1 < v2)
  {
    v5 = *(_QWORD *)(v1 + 16 * (v4 + 1) + 32);
    swift_bridgeObjectRetain();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_190C69F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = sub_190CA8548();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_190C69DD8(a1);
  if (v9)
  {
    v10 = result;
    v11 = v9;
    swift_bridgeObjectRetain();
    v12 = sub_190C68750(v10, v11);
    v14 = v13;
    sub_190CA832C();
    swift_allocObject();
    sub_190CA8320();
    sub_190C6A0DC((unint64_t *)&unk_1EE20A9E0, MEMORY[0x1E0CCE838]);
    sub_190CA8314();
    if (v2)
    {
      sub_190C32568(v12, v14);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      swift_release();
      sub_190C6840C();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_190C32568(v12, v14);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_190C6A068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t (*v4)();
  uint64_t (**v5)();
  uint64_t (*v6)();
  char *v7;
  objc_super v9;

  v4 = sub_190C6934C(a1, a2, a3);
  v5 = (uint64_t (**)())&v3[OBJC_IVAR____TtC19ExtensionFoundation19AppExtensionWrapper__accept];
  *v5 = v4;
  v5[1] = v6;
  v7 = &v3[OBJC_IVAR____TtC19ExtensionFoundation19AppExtensionWrapper__handleConnection];
  *(_QWORD *)v7 = nullsub_1;
  *((_QWORD *)v7 + 1) = 0;
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for AppExtensionWrapper();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t dispatch thunk of AppExtension.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AppExtension.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of LibXPCConnectionHandlerConfiguration.handleConnection(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_190C6A0DC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_190CA8548();
    result = MEMORY[0x1940187DC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_190C6A17C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 8))() & 1;
}

uint64_t sub_190C6A1B8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_190C6A210()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 8))() & 1;
}

_QWORD *sub_190C6A24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_190C69988((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_190C6A2C0, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_190C6A2A8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_190C6A2C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_190C69A98(a1, a2);
}

uint64_t sub_190C6A2DC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190C6A2E8()
{
  sub_190CA8C50();
  swift_bridgeObjectRetain();
  sub_190CA8638();
  swift_bridgeObjectRelease();
  return sub_190CA8C80();
}

uint64_t sub_190C6A340()
{
  swift_bridgeObjectRetain();
  sub_190CA8638();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190C6A384()
{
  sub_190CA8C50();
  swift_bridgeObjectRetain();
  sub_190CA8638();
  swift_bridgeObjectRelease();
  return sub_190CA8C80();
}

uint64_t sub_190C6A3D8(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_190CA8BCC();
}

id sub_190C6A408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  v8 = objc_msgSend(v4, sel_initWithIdentifier_platform_parentAppRecord_error_, v7, a3, a4, v12);

  if (v8)
  {
    v9 = v12[0];
  }
  else
  {
    v10 = v12[0];
    sub_190CA83EC();

    swift_willThrow();
  }
  return v8;
}

void sub_190C6A4E8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t active_platform;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  active_platform = dyld_get_active_platform();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForCurrentProcess);
  if (v6)
  {
    v7 = v6;
    objc_opt_self();
    v8 = (void *)swift_dynamicCastObjCClass();
    if (!v8)

  }
  else
  {
    v8 = 0;
  }
  objc_allocWithZone(MEMORY[0x1E0CA58E0]);
  v9 = v8;
  swift_bridgeObjectRetain();
  v10 = sub_190C6A408(a1, a2, active_platform, (uint64_t)v8);
  if (v2)
  {

  }
  else
  {
    v15 = v10;

    if (v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  v11 = objc_allocWithZone(MEMORY[0x1E0CA58E0]);
  v12 = sub_190C6A408(a1, a2, active_platform, 0);
  v15 = v12;
  if (!v12)
  {
    sub_190CA85F0();
    v13 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v14 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 13, 0);

    swift_willThrow();
    return;
  }
LABEL_12:
  v16 = v15;
  v17 = objc_msgSend(v16, sel_identifier);
  sub_190CA85F0();

}

_QWORD *initializeBufferWithCopyOfBuffer for _AppExtensionPoint(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for _AppExtensionPoint()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for _AppExtensionPoint(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for _AppExtensionPoint(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppExtensionPoint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _AppExtensionPoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _AppExtensionPoint()
{
  return &type metadata for _AppExtensionPoint;
}

uint64_t sub_190C6A820()
{
  return MEMORY[0x1E0DEA978];
}

unint64_t sub_190C6A830()
{
  unint64_t result;

  result = qword_1EE20BA40;
  if (!qword_1EE20BA40)
  {
    result = MEMORY[0x1940187DC](&unk_190CADF94, &type metadata for _AppExtensionPoint);
    atomic_store(result, (unint64_t *)&qword_1EE20BA40);
  }
  return result;
}

uint64_t sub_190C6A878(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AEB8);
    v2 = sub_190CA8B24();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_190C30128(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_190C38F64(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_190C38F64(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_190C38F64(v36, v37);
    sub_190C38F64(v37, &v33);
    result = sub_190CA8974();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_190C38F64(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_190C6D7B0();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_190C6AC3C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXDiscoveryController()), sel_init);
  qword_1ECD99310 = (uint64_t)result;
  return result;
}

char *sub_190C6ACA8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  uint64_t v16;
  objc_super v17;
  uint64_t v18;

  v16 = sub_190CA8824();
  v1 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_190CA8818();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_190CA856C();
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)&v0[OBJC_IVAR____EXDiscoveryController_activeQueries] = MEMORY[0x1E0DEE9E0];
  v6 = OBJC_IVAR____EXDiscoveryController_observer;
  v7 = objc_allocWithZone(MEMORY[0x1E0CA58E8]);
  v8 = v0;
  *(_QWORD *)&v0[v6] = objc_msgSend(v7, sel_init);
  v9 = &v8[OBJC_IVAR____EXDiscoveryController_settingsStoreToken];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  v10 = OBJC_IVAR____EXDiscoveryController_activeQueriesLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DD0);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(_QWORD *)&v8[v10] = v11;
  v12 = OBJC_IVAR____EXDiscoveryController_queryQueue;
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  sub_190CA8560();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_190C6DB08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC8);
  sub_190C6DB50();
  sub_190CA8914();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v16);
  *(_QWORD *)&v8[v12] = sub_190CA8848();

  v13 = (objc_class *)type metadata accessor for _EXDiscoveryController();
  v17.receiver = v8;
  v17.super_class = v13;
  v14 = (char *)objc_msgSendSuper2(&v17, sel_init);
  objc_msgSend(*(id *)&v14[OBJC_IVAR____EXDiscoveryController_observer], sel_setDelegate_, v14);
  return v14;
}

uint64_t sub_190C6AF34(void *a1, uint64_t a2, unint64_t a3, _OWORD *a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  const char *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t HasRequiredEntitlements;
  id v23;
  void *v24;
  id v25;
  id v26;
  char v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32[3];

  if ((sub_190CA868C() & 1) == 0)
  {
    v14 = objc_msgSend(a1, sel_parentAppRecord);
    if (v14)
      goto LABEL_14;
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v15 = sub_190CA8518();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ECD98BD8);
    swift_bridgeObjectRetain_n();
    v9 = sub_190CA8500();
    v10 = sub_190CA87DC();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v32[0] = v12;
      *(_DWORD *)v11 = 136446210;
      swift_bridgeObjectRetain();
      sub_190C30058(a2, a3, v32);
      sub_190CA88F0();
      swift_bridgeObjectRelease_n();
      v13 = "Extension point:  %{public}s has no parent app.";
      goto LABEL_11;
    }
LABEL_12:

    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  if (qword_1ECD98BF8 != -1)
    swift_once();
  v8 = sub_190CA8518();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ECD98BD8);
  swift_bridgeObjectRetain_n();
  v9 = sub_190CA8500();
  v10 = sub_190CA87DC();
  if (!os_log_type_enabled(v9, v10))
    goto LABEL_12;
  v11 = (uint8_t *)swift_slowAlloc();
  v12 = swift_slowAlloc();
  v32[0] = v12;
  *(_DWORD *)v11 = 136446210;
  swift_bridgeObjectRetain();
  sub_190C30058(a2, a3, v32);
  sub_190CA88F0();
  swift_bridgeObjectRelease_n();
  v13 = "Skipping host app record lookup for system extension point: %{public}s";
LABEL_11:
  _os_log_impl(&dword_190C25000, v9, v10, v13, v11, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x19401889C](v12, -1, -1);
  MEMORY[0x19401889C](v11, -1, -1);

LABEL_13:
  v14 = 0;
LABEL_14:
  v16 = objc_msgSend(a1, sel_SDKDictionary);
  v17 = (void *)sub_190CA85D8();
  v18 = _EXExtractRequiredHostEntitlements(v16, v17);

  v19 = sub_190CA859C();
  if (*(_QWORD *)(v19 + 16))
    goto LABEL_15;
  v23 = objc_msgSend(a1, sel__EX_parentAppRecord);
  if (v23)
  {
    v24 = v23;
    if (!v14)
    {

      goto LABEL_15;
    }
    sub_190C2B30C(0, &qword_1EE20BAE0);
    v25 = v14;
    v26 = v24;
    v27 = sub_190CA88A8();

    if ((v27 & 1) == 0)
    {
LABEL_15:
      sub_190C6A878(v19);
      swift_bridgeObjectRelease();
      v20 = sub_190CA8590();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      HasRequiredEntitlements = _EXAuditTokenHasRequiredEntitlements(a4, v20, 0);
      swift_endAccess();
      goto LABEL_16;
    }
  }
  else if (v14)
  {
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  if (qword_1ECD98BF8 != -1)
    swift_once();
  v28 = sub_190CA8518();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ECD98BD8);
  swift_bridgeObjectRetain_n();
  v20 = sub_190CA8500();
  v29 = sub_190CA87DC();
  if (!os_log_type_enabled(v20, v29))
  {

    swift_bridgeObjectRelease_n();
    return 1;
  }
  v30 = (uint8_t *)swift_slowAlloc();
  v31 = swift_slowAlloc();
  v32[0] = v31;
  *(_DWORD *)v30 = 136446210;
  swift_bridgeObjectRetain();
  sub_190C30058(a2, a3, v32);
  sub_190CA88F0();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_190C25000, v20, v29, "Extension point '%{public}s' is declared by the Host, allowing discovery.", v30, 0xCu);
  HasRequiredEntitlements = 1;
  swift_arrayDestroy();
  MEMORY[0x19401889C](v31, -1, -1);
  MEMORY[0x19401889C](v30, -1, -1);
LABEL_16:

  return HasRequiredEntitlements;
}

uint64_t sub_190C6B52C()
{
  return sub_190C6D164();
}

id sub_190C6B54C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id result;
  unint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  objc_super v13;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9E8];
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_190CA8AF4();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v2)
  {
    v3 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (char *)MEMORY[0x194017870](v3 - 4, a1);
      else
        v4 = (char *)*(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
      {
        __break(1u);
        goto LABEL_15;
      }
      v7 = (char *)sub_190C6B6BC(v4);
      result = *(id *)&v7[OBJC_IVAR____EXQueryResult_identities];
      if (!result)
        break;
      v9 = swift_bridgeObjectRetain();
      sub_190C7959C(v9);

      ++v3;
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        v10 = v14;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9E8];
LABEL_13:
    v11 = (objc_class *)type metadata accessor for _EXQueryResult();
    v12 = (char *)objc_allocWithZone(v11);
    *(_QWORD *)&v12[OBJC_IVAR____EXQueryResult_identities] = v10;
    *(_QWORD *)&v12[OBJC_IVAR____EXQueryResult_availablility] = 0;
    v13.receiver = v12;
    v13.super_class = v11;
    return objc_msgSendSuper2(&v13, sel_init);
  }
  return result;
}

id sub_190C6B6BC(char *a1)
{
  char *v1;
  void *v2;
  char **v4;
  id v5;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)();
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  char *v19;
  uint8_t *v20;
  objc_class *v21;
  char *v22;
  id v23;
  void *v24;
  uint64_t v25;
  char *v26;
  id v27;
  char *v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  objc_class *v40;
  char *v41;
  uint64_t v43;
  void (*v44)();
  id v45;
  uint64_t aBlock[7];
  char *v47;
  objc_super v48;
  objc_super v49;
  uint64_t v50;

  v2 = v1;
  v50 = MEMORY[0x1E0DEE9E8];
  v4 = &selRef__UUID;
  v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXExtensionAvailablility()), sel_init);
  if ((sub_190C6D314((uint64_t)a1) & 1) != 0)
  {
    v6 = *(NSObject **)&v1[OBJC_IVAR____EXDiscoveryController_queryQueue];
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = a1;
    v7[3] = v5;
    v7[4] = &v50;
    v8 = swift_allocObject();
    v9 = sub_190C6D83C;
    *(_QWORD *)(v8 + 16) = sub_190C6D83C;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = (uint64_t)sub_190C45C00;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_190C45C38;
    aBlock[3] = (uint64_t)&block_descriptor;
    v10 = _Block_copy(aBlock);
    v11 = a1;
    v12 = v5;
    swift_retain();
    swift_release();
    dispatch_sync(v6, v10);
    _Block_release(v10);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v6 & 1) == 0)
      goto LABEL_10;
    __break(1u);
  }
  if (qword_1ECD98BF8 != -1)
    swift_once();
  v13 = sub_190CA8518();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ECD98BD8);
  v14 = a1;
  v15 = sub_190CA8500();
  v16 = sub_190CA87E8();
  if (os_log_type_enabled(v15, v16))
  {
    v45 = v5;
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v17 = 138543362;
    aBlock[0] = (uint64_t)v14;
    v19 = v14;
    sub_190CA88F0();
    *v18 = v14;

    v4 = &selRef__UUID;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v18, -1, -1);
    v20 = v17;
    v5 = v45;
    MEMORY[0x19401889C](v20, -1, -1);

  }
  else
  {

  }
  v9 = 0;
LABEL_10:
  if (*(_QWORD *)&a1[OBJC_IVAR____EXQuery_resultType])
  {
    v21 = (objc_class *)type metadata accessor for _EXQueryResult();
    v22 = (char *)objc_allocWithZone(v21);
    *(_QWORD *)&v22[OBJC_IVAR____EXQueryResult_identities] = 0;
    *(_QWORD *)&v22[OBJC_IVAR____EXQueryResult_availablility] = v5;
    v49.receiver = v22;
    v49.super_class = v21;
    v23 = objc_msgSendSuper2(&v49, v4[340]);
  }
  else
  {
    v24 = v2;
    v44 = v9;
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v25 = sub_190CA8518();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ECD98BD8);
    v26 = a1;
    v27 = v24;
    v28 = v26;
    v29 = (char *)v27;
    v30 = sub_190CA8500();
    v31 = sub_190CA87DC();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      *(_DWORD *)v32 = 138543874;
      v47 = v29;
      aBlock[0] = v43;
      v34 = v29;
      sub_190CA88F0();
      *v33 = v29;

      *(_WORD *)(v32 + 12) = 2114;
      v47 = v28;
      v35 = v28;
      sub_190CA88F0();
      v33[1] = v28;

      *(_WORD *)(v32 + 22) = 2082;
      swift_beginAccess();
      sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      sub_190C6D7B8();
      swift_bridgeObjectRetain();
      v36 = sub_190CA8770();
      v38 = v37;
      swift_bridgeObjectRelease();
      aBlock[6] = sub_190C30058(v36, v38, aBlock);
      sub_190CA88F0();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v33, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v43, -1, -1);
      MEMORY[0x19401889C](v32, -1, -1);

    }
    else
    {

    }
    swift_beginAccess();
    v39 = v50;
    v40 = (objc_class *)type metadata accessor for _EXQueryResult();
    v41 = (char *)objc_allocWithZone(v40);
    *(_QWORD *)&v41[OBJC_IVAR____EXQueryResult_identities] = v39;
    *(_QWORD *)&v41[OBJC_IVAR____EXQueryResult_availablility] = 0;
    v48.receiver = v41;
    v48.super_class = v40;
    swift_bridgeObjectRetain();
    v23 = objc_msgSendSuper2(&v48, sel_init);

    v9 = v44;
  }
  swift_bridgeObjectRelease();
  sub_190C2FC70((uint64_t)v9);
  return v23;
}

void sub_190C6BD14(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v15 = MEMORY[0x1E0DEE9E8];
  v4 = (uint64_t)&a1[OBJC_IVAR____EXQuery_inner];
  swift_beginAccess();
  sub_190C6D76C(v4, (uint64_t)v12);
  v5 = v13;
  v6 = v14;
  __swift_project_boxed_opaque_existential_2Tm(v12, v13);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v12);
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_190C7959C(v15);
    return;
  }
  swift_bridgeObjectRetain();
  v8 = sub_190CA8AF4();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_10;
LABEL_3:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x194017870](i, v7);
      else
        v10 = *(id *)(v7 + 8 * i + 32);
      v11 = v10;
      sub_190C6BE84((uint64_t)v10, a1, (uint64_t *)&v15, a2);

    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_190C6BE84(uint64_t a1, _BYTE *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  id v14;
  id v15;
  uint64_t v16;
  char v17;
  void *v18;
  char *v19;
  uint64_t *v20;
  void *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  __int128 *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  int PID;
  int v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  void *v64;
  _BYTE *v65;
  id v66;
  _BYTE *v67;
  id v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  _QWORD *v72;
  _BYTE *v73;
  id v74;
  uint64_t v75;
  id v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  id v85;
  void *v86;
  id v87;
  char v88;
  char v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  NSObject *v94;
  NSObject *v95;
  os_log_type_t v96;
  _BOOL4 v97;
  uint8_t *v98;
  _QWORD *v99;
  NSObject *v100;
  _QWORD *v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  _QWORD *v105;
  NSObject *v106;
  _QWORD *v107;
  uint8_t *v108;
  char v109;
  NSObject *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  _QWORD *v114;
  NSObject *v115;
  uint64_t v116;
  void *v117;
  id v118;
  uint8_t *v119;
  _QWORD *v120;
  NSObject *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  char *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  char *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  unsigned int v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  __int128 v157;
  __int128 v158;
  unsigned __int8 v159;
  _OWORD v160[2];
  id v161;
  char v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;

  v143 = a4;
  v168 = *MEMORY[0x1E0C80C00];
  v7 = sub_190CA8404();
  v136 = *(_QWORD *)(v7 - 8);
  v137 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0x8000000000000000;
  if (!a2[OBJC_IVAR____EXQuery_includePostprocessing])
    v10 = 0;
  if (a2[OBJC_IVAR____EXQuery_allowsDuplicates])
    v11 = v10 | 0x10;
  else
    v11 = v10;
  v135 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithExtensionPointRecord_options_, a1, v11);
  sub_190CA87C4();
  v149 = OBJC_IVAR____EXQuery_excludeLockedApps;
  v12 = (uint64_t)&a2[OBJC_IVAR____EXQuery_inner];
  v148 = OBJC_IVAR____EXQuery_resultType;
  v132 = OBJC_IVAR____EXExtensionAvailablility_unelectedCount;
  v131 = OBJC_IVAR____EXExtensionAvailablility_disabledCount;
  v138 = OBJC_IVAR____EXExtensionAvailablility_enabledCount;
  v139 = OBJC_IVAR____EXQuery_predicate;
  swift_beginAccess();
  v144 = v12;
  swift_beginAccess();
  sub_190CA83F8();
  if (!v167)
  {
LABEL_93:
    (*(void (**)(char *, uint64_t))(v136 + 8))(v9, v137);

    return;
  }
  v134 = &v162;
  v141 = (char *)v160 + 8;
  v142 = (char *)v160 + 4;
  *(_QWORD *)&v13 = 138543362;
  v145 = v13;
  *(_QWORD *)&v13 = 67109376;
  v140 = v13;
  *(_QWORD *)&v13 = 138543618;
  v130 = v13;
  *(_QWORD *)&v13 = 136446210;
  v133 = v13;
  v155 = MEMORY[0x1E0DEE9B8] + 8;
  v146 = v9;
  v147 = a3;
  v153 = a2;
  while (1)
  {
    sub_190C38F64(&v166, &v163);
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98AF8);
    if ((swift_dynamicCast() & 1) == 0)
      break;
    v14 = (id)v157;
    if (!sub_190C74FE0((void *)v157))
      goto LABEL_8;
    v15 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, v14);
    v16 = *a3;
    swift_bridgeObjectRetain();
    v17 = sub_190C8CF48(v15, v16);
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      v18 = v15;
      v19 = v9;
      v20 = a3;
      v21 = v14;
      if (qword_1ECD98BF8 != -1)
        swift_once();
      v22 = sub_190CA8518();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ECD98BD8);
      v23 = v18;
      v24 = sub_190CA8500();
      v25 = sub_190CA87DC();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v27 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v26 = v145;
        *(_QWORD *)(v26 + 4) = v23;
        *v27 = v23;

        _os_log_impl(&dword_190C25000, v24, v25, "Extension has already been evaluated: %{public}@", (uint8_t *)v26, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v27, -1, -1);
        MEMORY[0x19401889C](v26, -1, -1);

      }
      else
      {

      }
      a3 = v20;
      v9 = v19;
      goto LABEL_9;
    }
    v28 = a2[v149];
    v156 = v14;
    if (v28 == 1 && objc_msgSend(v14, sel_appProtectionLocked))
    {
      if (qword_1ECD98BF8 != -1)
        swift_once();
      v29 = sub_190CA8518();
      __swift_project_value_buffer(v29, (uint64_t)qword_1ECD98BD8);
      v30 = v15;
      v31 = sub_190CA8500();
      v32 = sub_190CA87DC();
      if (!os_log_type_enabled(v31, v32))
      {

        v90 = v156;
LABEL_74:

        goto LABEL_9;
      }
      v33 = swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v33 = v145;
      *(_QWORD *)(v33 + 4) = v30;
      *v34 = v30;

      _os_log_impl(&dword_190C25000, v31, v32, "Skipping because extension is locked: %{public}@", (uint8_t *)v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v34, -1, -1);
      MEMORY[0x19401889C](v33, -1, -1);

      goto LABEL_9;
    }
    v152 = objc_msgSend(v15, sel_targetsSystemExtensionPoint, v130);
    v159 = 0;
    sub_190C6D76C(v144, (uint64_t)&v163);
    v35 = *((_QWORD *)&v164 + 1);
    v36 = v165;
    __swift_project_boxed_opaque_existential_2Tm(&v163, *((uint64_t *)&v164 + 1));
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 32))(v35, v36);
    v38 = v37;
    LODWORD(v35) = v39;
    LODWORD(v36) = v40;
    v42 = v41;
    v43 = HIDWORD(v37);
    v44 = HIDWORD(v39);
    v45 = HIDWORD(v40);
    v46 = HIDWORD(v41);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v163);
    *(_QWORD *)&v157 = __PAIR64__(v43, v38);
    *((_QWORD *)&v157 + 1) = __PAIR64__(v44, v35);
    *(_QWORD *)&v158 = __PAIR64__(v45, v36);
    *((_QWORD *)&v158 + 1) = __PAIR64__(v46, v42);
    v47 = (__int128 *)_EXAuditTokenForCurrentProcess();
    v48 = v47[1];
    v163 = *v47;
    v164 = v48;
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v49 = sub_190CA8518();
    v50 = __swift_project_value_buffer(v49, (uint64_t)qword_1ECD98BD8);
    v51 = sub_190CA8500();
    v52 = sub_190CA87DC();
    v53 = os_log_type_enabled(v51, v52);
    v154 = v50;
    if (v53)
    {
      v54 = swift_slowAlloc();
      *(_DWORD *)v54 = v140;
      swift_beginAccess();
      PID = _EXAuditTokenGetPID(&v163);
      swift_endAccess();
      LODWORD(v160[0]) = PID;
      sub_190CA88F0();
      *(_WORD *)(v54 + 8) = 1024;
      swift_beginAccess();
      v56 = _EXAuditTokenGetPID(&v157);
      swift_endAccess();
      LODWORD(v160[0]) = v56;
      sub_190CA88F0();
      _os_log_impl(&dword_190C25000, v51, v52, "Process %d discovering extensions for process %d", (uint8_t *)v54, 0xEu);
      MEMORY[0x19401889C](v54, -1, -1);
    }

    swift_beginAccess();
    v150 = v158;
    v151 = v157;
    v57 = (void *)objc_opt_self();
    v161 = 0;
    v160[0] = v151;
    v160[1] = v150;
    v58 = objc_msgSend(v57, sel_bundleRecordForAuditToken_error_, v160, &v161);
    v59 = v161;
    a2 = v153;
    if (v58)
    {
      v60 = v58;
      objc_opt_self();
      v61 = (void *)swift_dynamicCastObjCClass();
      v62 = v59;
      if (!v61)

      v76 = v61;
      v77 = sub_190CA8500();
      v78 = sub_190CA87DC();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)swift_slowAlloc();
        v80 = swift_slowAlloc();
        *(_QWORD *)&v160[0] = v80;
        *(_DWORD *)v79 = v133;
        *(_QWORD *)&v150 = v79 + 4;
        v161 = v61;
        v81 = v76;
        *(_QWORD *)&v151 = v15;
        v82 = v81;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BAE8);
        v83 = sub_190CA8620();
        v161 = (id)sub_190C30058(v83, v84, (uint64_t *)v160);
        sub_190CA88F0();

        v15 = (id)v151;
        a2 = v153;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_190C25000, v77, v78, "Resolved host app record: %{public}s", v79, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v80, -1, -1);
        MEMORY[0x19401889C](v79, -1, -1);

      }
      else
      {

      }
      v9 = v146;
      a3 = v147;
      v85 = objc_msgSend(v15, sel_containingBundleRecord);
      if (v85)
      {
        v86 = v85;
        if (v61)
        {
          sub_190C2B30C(0, &qword_1ECD98BD0);
          v76 = v76;
          v87 = v86;
          v88 = sub_190CA88A8();

          v86 = v76;
        }
        else
        {
          v88 = 0;
        }
        v14 = v156;

        v76 = v86;
LABEL_49:

      }
      else
      {
        if (v61)
        {
          v88 = 0;
          v14 = v156;
          goto LABEL_49;
        }
        v88 = 1;
        v14 = v156;
      }
      swift_beginAccess();
      v159 = v88 & 1;
      v89 = v152;
      if (!v152)
        goto LABEL_52;
      goto LABEL_51;
    }
    v63 = v161;
    v64 = (void *)sub_190CA83EC();

    swift_willThrow();
    v65 = a2;
    v66 = v64;
    v67 = v65;
    v68 = v64;
    v69 = sub_190CA8500();
    v70 = sub_190CA87DC();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = swift_slowAlloc();
      v72 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v71 = v130;
      *(_QWORD *)&v160[0] = v67;
      v73 = v67;
      *(_QWORD *)&v151 = v15;
      a2 = v153;
      sub_190CA88F0();
      *v72 = a2;

      *(_WORD *)(v71 + 12) = 2114;
      v74 = v64;
      v75 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v160[0] = v75;
      v15 = (id)v151;
      sub_190CA88F0();
      v72[1] = v75;

      _os_log_impl(&dword_190C25000, v69, v70, "Unable to resolve host app record for query: %{public}@ error: %{public}@", (uint8_t *)v71, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v72, -1, -1);
      MEMORY[0x19401889C](v71, -1, -1);

    }
    else
    {

    }
    v9 = v146;
    a3 = v147;
    v14 = v156;
    v89 = v152;
    if (!v152)
    {
LABEL_52:
      v92 = (unint64_t)objc_msgSend(v15, sel_enablementState);
      swift_beginAccess();
      if (v92 & 1 | ((v159 & 1) == 0) | (v92 >> 1) & 1)
        v93 = v92;
      else
        v93 = v92 | 2;
      if (*(_QWORD *)&a2[v148])
      {
LABEL_56:
        if ((v93 & 2) != 0)
        {
          v94 = v15;
          v102 = sub_190CA8500();
          v103 = sub_190CA87DC();
          if (os_log_type_enabled(v102, v103))
          {
            v104 = (uint8_t *)swift_slowAlloc();
            v105 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v104 = v145;
            *(_QWORD *)&v160[0] = v94;
            v106 = v94;
            v9 = v146;
            sub_190CA88F0();
            *v105 = v94;

            a2 = v153;
            _os_log_impl(&dword_190C25000, v102, v103, "Extension %{public}@ is enabled", v104, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
            swift_arrayDestroy();
            v107 = v105;
            a3 = v147;
            MEMORY[0x19401889C](v107, -1, -1);
            v108 = v104;
            v14 = v156;
            MEMORY[0x19401889C](v108, -1, -1);
          }
          else
          {

            v102 = v94;
          }

          v123 = v138;
          v124 = v143;
          v125 = *(_QWORD *)(v143 + v138);
          v126 = __OFADD__(v125, 1);
          v127 = v125 + 1;
          if (v126)
          {
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
          }
        }
        else
        {
          v94 = v15;
          v95 = sub_190CA8500();
          v96 = sub_190CA87DC();
          v97 = os_log_type_enabled(v95, v96);
          if ((v93 & 1) != 0)
          {
            if (v97)
            {
              v119 = (uint8_t *)swift_slowAlloc();
              v120 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v119 = v145;
              *(_QWORD *)&v160[0] = v94;
              v121 = v94;
              v9 = v146;
              sub_190CA88F0();
              *v120 = v94;

              a2 = v153;
              _os_log_impl(&dword_190C25000, v95, v96, "Extension %{public}@ is disabled", v119, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
              swift_arrayDestroy();
              v122 = v120;
              a3 = v147;
              MEMORY[0x19401889C](v122, -1, -1);
              MEMORY[0x19401889C](v119, -1, -1);
            }
            else
            {

              v95 = v94;
            }
            v14 = v156;

            v123 = v131;
            v124 = v143;
            v129 = *(_QWORD *)(v143 + v131);
            v126 = __OFADD__(v129, 1);
            v127 = v129 + 1;
            if (v126)
              goto LABEL_95;
          }
          else
          {
            if (v97)
            {
              v98 = (uint8_t *)swift_slowAlloc();
              v99 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v98 = v145;
              *(_QWORD *)&v160[0] = v94;
              v100 = v94;
              v9 = v146;
              sub_190CA88F0();
              *v99 = v94;

              a2 = v153;
              _os_log_impl(&dword_190C25000, v95, v96, "Extension %{public}@ is unelected", v98, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
              swift_arrayDestroy();
              v101 = v99;
              a3 = v147;
              MEMORY[0x19401889C](v101, -1, -1);
              MEMORY[0x19401889C](v98, -1, -1);
            }
            else
            {

              v95 = v94;
            }
            v14 = v156;

            v123 = v132;
            v124 = v143;
            v128 = *(_QWORD *)(v143 + v132);
            v126 = __OFADD__(v128, 1);
            v127 = v128 + 1;
            if (v126)
              goto LABEL_94;
          }
        }
        *(_QWORD *)(v124 + v123) = v127;

        goto LABEL_9;
      }
      goto LABEL_63;
    }
LABEL_51:
    v91 = *(_QWORD *)&a2[v148];
    if (v91 == 1)
      goto LABEL_52;
    v93 = 0;
    if (v91)
      goto LABEL_56;
LABEL_63:
    v109 = sub_190CA060C(v157, *((uint64_t *)&v157 + 1), v158, *((uint64_t *)&v158 + 1));
    if (v89 & 1 | (v93 >> 1) & 1)
    {
      if ((v109 & 1) == 0 && objc_msgSend(v15, sel_requiresHostToBeContainerApp))
      {
        swift_beginAccess();
        v152 = v159;
        v110 = v15;
        v111 = sub_190CA8500();
        v112 = sub_190CA87DC();
        if (os_log_type_enabled(v111, v112))
        {
          v113 = swift_slowAlloc();
          v114 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v113 = v130;
          *(_QWORD *)&v160[0] = v110;
          v115 = v110;
          v9 = v146;
          a3 = v147;
          sub_190CA88F0();
          *v114 = v110;

          a2 = v153;
          *(_WORD *)(v113 + 12) = 1024;
          LODWORD(v160[0]) = v159;
          sub_190CA88F0();
          _os_log_impl(&dword_190C25000, v111, v112, "Extension: %{public}@ must be contained in host app. hostIsContainer: %{BOOL}d", (uint8_t *)v113, 0x12u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
          swift_arrayDestroy();
          MEMORY[0x19401889C](v114, -1, -1);
          v116 = v113;
          v14 = v156;
          MEMORY[0x19401889C](v116, -1, -1);
        }
        else
        {

          v111 = v110;
        }

        if (!v152)
        {

          goto LABEL_8;
        }
      }
    }
    else if ((v109 & 1) == 0)
    {

LABEL_8:
      goto LABEL_9;
    }
    v117 = *(void **)&a2[v139];
    if (!v117 || (objc_msgSend(v117, sel_evaluateWithObject_, v15) & 1) != 0 || !*(_QWORD *)&a2[v139])
    {
      swift_beginAccess();
      v118 = v15;
      sub_190C8F5A0(&v161, v118);
      swift_endAccess();

      v90 = v161;
      goto LABEL_74;
    }

LABEL_9:
    sub_190CA83F8();
    if (!v167)
      goto LABEL_93;
  }
  sub_190CA8ADC();
  __break(1u);
}

id sub_190C6D168()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXDiscoveryController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _EXDiscoveryController()
{
  return objc_opt_self();
}

void (*sub_190C6D220(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_190C6D2A0(v6, a2, a3);
  return sub_190C6D274;
}

void sub_190C6D274(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_190C6D2A0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x194017870](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for _EXQuery.RecordQuery;
  }
  __break(1u);
  return result;
}

void destroy for _EXQuery.RecordQuery(id *a1)
{

}

uint64_t sub_190C6D314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  __int128 v39;
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v1 = a1 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_190C6D76C(v1, (uint64_t)v44);
  v2 = v45;
  v3 = v46;
  __swift_project_boxed_opaque_existential_2Tm(v44, v45);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = HIDWORD(v5);
  v12 = HIDWORD(v7);
  v13 = HIDWORD(v9);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v44);
  *(_QWORD *)&v39 = v4;
  *((_QWORD *)&v39 + 1) = __PAIR64__(v11, v6);
  v40 = v8;
  v41 = v12;
  v42 = v10;
  v43 = v13;
  sub_190C6D76C(v1, (uint64_t)v44);
  v14 = v45;
  v15 = v46;
  __swift_project_boxed_opaque_existential_2Tm(v44, v45);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  v18 = v17;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v44);
  if (!v18)
    return 1;
  if ((sub_190CA060C(v4, v6, v8, v10) & 1) != 0)
    goto LABEL_20;
  sub_190C6D76C(v1, (uint64_t)v44);
  v20 = v45;
  v21 = v46;
  __swift_project_boxed_opaque_existential_2Tm(v44, v45);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 64))(v20, v21);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v44);
  if (!(v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23)
    {
LABEL_7:
      if ((v22 & 0xC000000000000001) != 0)
      {
        v24 = (id)MEMORY[0x194017870](0, v22);
        goto LABEL_10;
      }
      if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v24 = *(id *)(v22 + 32);
LABEL_10:
        v25 = v24;
        v26 = sub_190C6AF34(v24, v16, v18, &v39);

        if ((v26 & 1) != 0)
        {
LABEL_19:
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          return 1;
        }
        v27 = 0;
        v28 = v23 - 1;
        while (v28 != v27)
        {
          v29 = v27 + 1;
          if ((v22 & 0xC000000000000001) != 0)
          {
            v30 = (id)MEMORY[0x194017870](v27 + 1, v22);
          }
          else
          {
            if (v29 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_22;
            v30 = *(id *)(v22 + 8 * v27 + 40);
          }
          v31 = v30;
          if (__OFADD__(v29, 1))
          {
            __break(1u);
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
          v32 = sub_190C6AF34(v30, v16, v18, &v39);

          ++v27;
          if ((v32 & 1) != 0)
            goto LABEL_19;
        }
        goto LABEL_25;
      }
      __break(1u);
LABEL_33:
      swift_once();
LABEL_27:
      v34 = sub_190CA8518();
      __swift_project_value_buffer(v34, (uint64_t)qword_1ECD98BD8);
      swift_bridgeObjectRetain();
      v35 = sub_190CA8500();
      v36 = sub_190CA87DC();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        v38 = swift_slowAlloc();
        v44[0] = v38;
        *(_DWORD *)v37 = 136446210;
        swift_bridgeObjectRetain();
        sub_190C30058(v16, v18, v44);
        sub_190CA88F0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_190C25000, v35, v36, "Failed to get LSExtensionPointRecord for extension point identifier '%{public}s'", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v38, -1, -1);
        MEMORY[0x19401889C](v37, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    if (qword_1ECD98BF8 == -1)
      goto LABEL_27;
    goto LABEL_33;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  v33 = sub_190CA8AF4();
  swift_bridgeObjectRelease();
  if (!v33)
    goto LABEL_26;
  swift_bridgeObjectRetain();
  v23 = sub_190CA8AF4();
  swift_bridgeObjectRelease();
  if (v23)
    goto LABEL_7;
LABEL_25:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_190C6D76C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_190C6D7B0()
{
  return swift_release();
}

unint64_t sub_190C6D7B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE20AB90;
  if (!qword_1EE20AB90)
  {
    v1 = sub_190C2B30C(255, (unint64_t *)&qword_1ECD98C80);
    result = MEMORY[0x1940187DC](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE20AB90);
  }
  return result;
}

uint64_t sub_190C6D810()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_190C6D83C()
{
  uint64_t v0;

  sub_190C6BD14(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_190C6D848()
{
  return swift_deallocObject();
}

void sub_190C6D858()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;

  v1 = (unint64_t *)(v0 + OBJC_IVAR____EXDiscoveryController_activeQueries);
  swift_beginAccess();
  v2 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    v18 = 0;
    v3 = 0;
    v4 = 0;
    v5 = sub_190CA8AA0() | 0x8000000000000000;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(v2 + 32);
    v3 = ~v6;
    v18 = v2 + 64;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v4 = v8 & *(_QWORD *)(v2 + 64);
    v5 = v2;
  }
  swift_bridgeObjectRetain();
  v9 = 0;
  v10 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v11 = (v4 - 1) & v4;
      v12 = __clz(__rbit64(v4)) | (v9 << 6);
      v13 = v9;
      goto LABEL_27;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v15 >= v10)
      goto LABEL_30;
    v16 = *(_QWORD *)(v18 + 8 * v15);
    v13 = v9 + 1;
    if (!v16)
    {
      v13 = v9 + 2;
      if (v9 + 2 >= v10)
        goto LABEL_30;
      v16 = *(_QWORD *)(v18 + 8 * v13);
      if (!v16)
      {
        v13 = v9 + 3;
        if (v9 + 3 >= v10)
          goto LABEL_30;
        v16 = *(_QWORD *)(v18 + 8 * v13);
        if (!v16)
        {
          v13 = v9 + 4;
          if (v9 + 4 >= v10)
            goto LABEL_30;
          v16 = *(_QWORD *)(v18 + 8 * v13);
          if (!v16)
          {
            v17 = v9 + 5;
            while (v10 != v17)
            {
              v16 = *(_QWORD *)(v18 + 8 * v17++);
              if (v16)
              {
                v13 = v17 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_190C6D7B0();
            return;
          }
        }
      }
    }
LABEL_26:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_27:
    v14 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v12);
    swift_retain();
    if (!v14)
      goto LABEL_30;
    while (1)
    {
      sub_190C8D7C4();
      swift_release();

      v9 = v13;
      v4 = v11;
      if ((v5 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_190CA8AC4())
      {
        type metadata accessor for _EXQuery();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v14 = v19;
        swift_unknownObjectRelease();
        type metadata accessor for _EXActiveQuery();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v13 = v9;
        v11 = v4;
        if (v19)
          continue;
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

unint64_t sub_190C6DB08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECD98DF0;
  if (!qword_1ECD98DF0)
  {
    v1 = sub_190CA8818();
    result = MEMORY[0x1940187DC](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ECD98DF0);
  }
  return result;
}

unint64_t sub_190C6DB50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECD98DE0;
  if (!qword_1ECD98DE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECD98DC8);
    result = MEMORY[0x1940187DC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ECD98DE0);
  }
  return result;
}

uint64_t sub_190C6DB9C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_190CA8578();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  *v5 = sub_190CA8830();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF738], v2);
  v6 = sub_190CA8584();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v8 = sub_190CA8830();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_190C70648;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_190C70660;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190C45C38;
  aBlock[3] = &block_descriptor_53;
  v11 = _Block_copy(aBlock);
  v12 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);

  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

void sub_190C6DD64(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  void *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v2 = sub_190CA8578();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_190C2E914();
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  *v5 = sub_190CA8830();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = sub_190CA8584();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
    goto LABEL_25;
  sub_190C2B30C(0, &qword_1EE20A318);
  sub_190C45CE4();
  v8 = (void *)sub_190CA8590();
  objc_setAssociatedObject(a1, "_EX_assertions", v8, (void *)0x301);

  v9 = 0;
  v10 = v6 + 64;
  v11 = 1 << *(_BYTE *)(v6 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v6 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v9 << 6);
      goto LABEL_6;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v17 >= v14)
      goto LABEL_22;
    v18 = *(_QWORD *)(v10 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_22;
      v18 = *(_QWORD *)(v10 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_22;
        v18 = *(_QWORD *)(v10 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_21:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_6:
    objc_msgSend(*(id *)(*(_QWORD *)(v6 + 56) + 8 * v16), sel_invalidate);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
  {
LABEL_22:
    swift_release();
    return;
  }
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_22;
    v18 = *(_QWORD *)(v10 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_190C6DFA0(uint64_t a1)
{
  sub_190C6DFF0(a1, (void **)&protocolRef__TtP19ExtensionFoundation27_EXDiscoveryServiceProtocol_, &qword_1EE20E3D8);
}

void sub_190C6DFB4(uint64_t a1)
{
  sub_190C6DFF0(a1, (void **)&protocolRef__TtP19ExtensionFoundation24_EXLaunchServiceProtocol_, qword_1EE20DF50);
}

void sub_190C6DFC8(uint64_t a1)
{
  sub_190C6DFF0(a1, (void **)&protocolRef__TtP19ExtensionFoundation19_EXTCCProxyProtocol_, &qword_1EE20E3E0);
}

void sub_190C6DFDC(uint64_t a1)
{
  sub_190C6DFF0(a1, (void **)&protocolRef__TtP19ExtensionFoundation23_EXQueryResultsProtocol_, &qword_1EE20E3E8);
}

void sub_190C6DFF0(uint64_t a1, void **a2, _QWORD *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  v4 = *a2;
  v5 = (void *)objc_opt_self();
  v6 = v4;
  v7 = objc_msgSend(v5, sel_interfaceWithProtocol_, v6);

  *a3 = v7;
}

id _EXService.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id _EXService.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXService();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for _EXService()
{
  return objc_opt_self();
}

id _EXService.__deallocating_deinit(uint64_t a1)
{
  return sub_190C6F2C8(a1, type metadata accessor for _EXService);
}

id sub_190C6E118()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Service()), sel_init);
  qword_1EE20DF10 = (uint64_t)result;
  return result;
}

id sub_190C6E144(void *a1)
{
  return sub_190C6E18C(a1);
}

id sub_190C6E158(void *a1)
{
  return sub_190C6E18C(a1);
}

id sub_190C6E174(void *a1)
{
  return sub_190C6E18C(a1);
}

id sub_190C6E18C(void *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_setDomain_, v2);

  v3 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_setService_, v3);

  if (qword_1EE20A300 != -1)
    swift_once();
  return objc_msgSend(a1, sel_setDelegate_, qword_1EE20DF10);
}

uint64_t sub_190C6E254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v0 = sub_190CA8554();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_190CA856C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C2B30C(0, &qword_1EE20A338);
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  v8 = (void *)sub_190CA8830();
  v9 = sub_190CA8854();

  swift_getObjectType();
  aBlock[4] = sub_190C6E408;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190C2A3B4;
  aBlock[3] = &block_descriptor_56;
  v10 = _Block_copy(aBlock);
  sub_190CA8560();
  sub_190C6E4CC();
  sub_190CA8860();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_190CA886C();
  return v9;
}

void sub_190C6E408()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1EE20ADE8 != -1)
    swift_once();
  v0 = sub_190CA8518();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE20AE20);
  v1 = sub_190CA8500();
  v2 = sub_190CA8800();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_190C25000, v1, v2, "Received SIGTERM, exiting.", v3, 2u);
    MEMORY[0x19401889C](v3, -1, -1);
  }

  exit(0);
}

uint64_t sub_190C6E4CC()
{
  sub_190CA8554();
  sub_190C3A458((unint64_t *)&qword_1ECD98C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C40);
  sub_190C2F930();
  return sub_190CA8914();
}

id sub_190C6E5F0(uint64_t a1)
{
  return sub_190C6F2C8(a1, type metadata accessor for Service);
}

uint64_t type metadata accessor for Service()
{
  return objc_opt_self();
}

uint64_t sub_190C6E654(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;

  if (qword_1EE20ADE8 != -1)
    swift_once();
  v2 = sub_190CA8518();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE20AE20);
  v3 = a1;
  v4 = sub_190CA8500();
  v5 = sub_190CA87DC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138543362;
    v8 = v3;
    sub_190CA88F0();
    *v7 = v3;

    _os_log_impl(&dword_190C25000, v4, v5, "Host XPC connection %{public}@ invalidated, invalidating associated assertions.", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v7, -1, -1);
    MEMORY[0x19401889C](v6, -1, -1);

  }
  else
  {

  }
  return sub_190C6DB9C();
}

void sub_190C6E864(uint64_t a1, uint64_t a2, void *a3, void *a4, const char *a5)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;

  if (qword_1ECD98BF8 != -1)
    swift_once();
  v10 = sub_190CA8518();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ECD98BD8);
  swift_retain();
  v11 = sub_190CA8500();
  v12 = sub_190CA87DC();
  if (os_log_type_enabled(v11, v12))
  {
    v19 = a3;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138543362;
    swift_beginAccess();
    v15 = MEMORY[0x194018968](a1 + 16);
    sub_190CA88F0();
    *v14 = v15;
    swift_release();
    _os_log_impl(&dword_190C25000, v11, v12, a5, v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v14, -1, -1);
    MEMORY[0x19401889C](v13, -1, -1);

    a3 = v19;
  }
  else
  {

    swift_release();
  }
  v16 = *(void **)(a2 + OBJC_IVAR____TtC19ExtensionFoundation7Service_discoveryController);
  type metadata accessor for _EXQuery();
  if (objc_msgSend(a4, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    v17 = a4;
    sub_190C85378(a3, v17, v16);

  }
  else
  {
    v18 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

void sub_190C6EB74(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), sel_auditToken);
  sub_190C2E5EC(a3, v4, v5, v6, v7);
}

void sub_190C6EC90(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t aBlock;
  uint64_t v14;
  void *v15;
  void *v16;
  void (*v17)(void *);
  uint64_t v18;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection);
  v17 = sub_190C6EE68;
  v18 = 0;
  v6 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v14 = 1107296256;
  v15 = sub_190C79838;
  v16 = &block_descriptor_0;
  v7 = _Block_copy(&aBlock);
  v8 = objc_msgSend(v5, sel_remoteObjectProxyWithErrorHandler_, v7);
  _Block_release(v7);
  sub_190CA8908();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20BC60);
  swift_dynamicCast();
  type metadata accessor for _EXQueryResultUpdate();
  if (objc_msgSend(a2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    v17 = (void (*)(void *))nullsub_1;
    v18 = 0;
    aBlock = v6;
    v14 = 1107296256;
    v15 = sub_190C2A3B4;
    v16 = &block_descriptor_3;
    v9 = _Block_copy(&aBlock);
    v10 = a2;
    objc_msgSend(v12, sel_query_resultDidUpdate_reply_, a1, v10, v9);
    _Block_release(v9);
    swift_unknownObjectRelease();

  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

void sub_190C6EE68(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  NSObject *oslog;
  uint64_t v10;

  if (qword_1ECD98BF8 != -1)
    swift_once();
  v2 = sub_190CA8518();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ECD98BD8);
  v3 = a1;
  v4 = a1;
  oslog = sub_190CA8500();
  v5 = sub_190CA87E8();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138543362;
    v8 = a1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    sub_190CA88F0();
    *v7 = v10;

    _os_log_impl(&dword_190C25000, oslog, v5, "-extensionsWithQuery: failed with error: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v7, -1, -1);
    MEMORY[0x19401889C](v6, -1, -1);
  }
  else
  {

  }
}

uint64_t sub_190C6F040(uint64_t a1)
{
  char *v1;
  id v2;
  char *v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_190C6F4D4(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_190C459C8((uint64_t)v5);
    return 0;
  }
  type metadata accessor for _EXConnectionActiveQueryObserver();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (v4 == v1)
  {

    return 1;
  }
  else
  {
    v2 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection], sel_isEqual_, *(_QWORD *)&v4[OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection]);

  }
  return (uint64_t)v2;
}

unint64_t sub_190C6F1BC()
{
  uint64_t v0;
  id v1;
  id v2;

  sub_190CA89D4();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection);
  v2 = objc_msgSend(v1, sel_description);
  sub_190CA85F0();

  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  return 0xD000000000000025;
}

id sub_190C6F2B8()
{
  return sub_190C6F2C8(0, type metadata accessor for _EXConnectionActiveQueryObserver);
}

id sub_190C6F2C8(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_190C6F358()
{
  return type metadata accessor for _EXConnectionActiveQueryObserver();
}

uint64_t type metadata accessor for _EXConnectionActiveQueryObserver()
{
  uint64_t result;

  result = qword_1EE20BBE0;
  if (!qword_1EE20BBE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190C6F39C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190CA84E8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_190C6F420()
{
  return sub_190C3A458(&qword_1EE20ABB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

uint64_t sub_190C6F450@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_id;
  v4 = sub_190CA84E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_190C6F498(uint64_t a1)
{
  uint64_t result;

  result = sub_190C3A458(&qword_1EE20BC58, (uint64_t (*)(uint64_t))type metadata accessor for _EXConnectionActiveQueryObserver, (uint64_t)&unk_190CAE128);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190C6F4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_190C6F728(char *a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  void (*v6)(_QWORD *, id, _QWORD);
  id v7;
  void *v8;
  void *v9;
  char **v10;
  id v11;
  uint64_t v12;
  char *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  _QWORD *v27;
  void *v28;
  id v29;
  id v30;

  v29 = objc_msgSend((id)objc_opt_self(), sel_currentConnection);
  if (!v29)
  {
    _Block_release(a3);
    __break(1u);
LABEL_12:
    _Block_release(a3);
    v26 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    return;
  }
  if ((sub_190C6D314((uint64_t)a1) & 1) != 0)
  {
    v5 = sub_190C6B6BC(a1);
    type metadata accessor for _EXQueryResult();
    if ((objc_msgSend(v5, sel_isKindOfClass_, swift_getObjCClassFromMetadata()) & 1) != 0)
    {
      v6 = (void (*)(_QWORD *, id, _QWORD))a3[2];
      v7 = v5;
      v6(a3, v7, 0);

      return;
    }
    goto LABEL_12;
  }
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_190CA85D8();
  v10 = &off_1E2D12000;
  v11 = objc_msgSend(v8, sel__EX_errorWithCode_description_, 16, v9);

  if (qword_1ECD98BF8 != -1)
    swift_once();
  v12 = sub_190CA8518();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ECD98BD8);
  v13 = a1;
  v14 = v29;
  v15 = sub_190CA8500();
  v16 = sub_190CA87DC();
  if (os_log_type_enabled(v15, v16))
  {
    v30 = v11;
    v17 = swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    v28 = v8;
    *(_DWORD *)v17 = 138543618;
    v18 = a3;
    v19 = v14;
    v20 = v13;
    v10 = &off_1E2D12000;
    sub_190CA88F0();
    *v27 = v13;

    v14 = v19;
    a3 = v18;
    *(_WORD *)(v17 + 12) = 1024;
    objc_msgSend(v14, sel_processIdentifier);
    sub_190CA88F0();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    v8 = v28;
    MEMORY[0x19401889C](v27, -1, -1);
    v21 = v17;
    v11 = v30;
    MEMORY[0x19401889C](v21, -1, -1);

  }
  else
  {

  }
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v13, sel_description);
  sub_190CA85F0();

  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  v23 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v8, v10[502], 16, v23);

  v25 = (void *)sub_190CA83E0();
  ((void (*)(_QWORD *, _QWORD, void *))a3[2])(a3, 0, v25);

}

id sub_190C6FBA0(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  uint64_t v5;
  id result;
  objc_super v7;
  unsigned int v8;
  char v9[16];

  v3 = v1;
  sub_190CA84DC();
  *(_QWORD *)&v3[OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection] = a1;
  v4 = a1;
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  strcpy(v9, "Active query: ");
  v9[15] = -18;
  sub_190CA84E8();
  sub_190C3A458((unint64_t *)&qword_1ECD98BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  v8 = objc_msgSend(v4, sel_processIdentifier);
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA862C();
  swift_bridgeObjectRelease();
  v5 = os_transaction_create();
  result = (id)swift_release();
  if (v5)
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_transaction] = v5;

    v7.receiver = v3;
    v7.super_class = (Class)type metadata accessor for _EXConnectionActiveQueryObserver();
    return objc_msgSendSuper2(&v7, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_190C6FD40(void *a1, uint64_t a2, char *a3, void (**a4)(_QWORD, _QWORD))
{
  id v8;
  void *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  char v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  void *v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  _QWORD *v46;
  unint64_t aBlock;
  unint64_t v48;
  uint64_t (*v49)(uint64_t);
  void *v50;
  void (*v51)();
  _QWORD *v52;

  v8 = objc_msgSend((id)objc_opt_self(), sel_currentConnection);
  if (!v8)
  {
    _Block_release(a4);
    __break(1u);
    goto LABEL_16;
  }
  v9 = v8;
  type metadata accessor for _EXQuery();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if ((objc_msgSend(a1, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) == 0)
  {
LABEL_16:
    _Block_release(a4);
    v43 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    goto LABEL_17;
  }
  v11 = a1;
  v12 = sub_190C6D314((uint64_t)v11);

  if ((v12 & 1) == 0)
  {
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v34 = sub_190CA8518();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ECD98BD8);
    v35 = v11;
    v31 = v9;
    v36 = sub_190CA8500();
    v37 = sub_190CA87DC();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v46 = (_QWORD *)swift_slowAlloc();
      HIDWORD(aBlock) = HIDWORD(v35);
      *(_DWORD *)v38 = 138543618;
      v39 = v35;
      sub_190CA88F0();
      *v46 = v35;

      *(_WORD *)(v38 + 12) = 1024;
      LODWORD(aBlock) = objc_msgSend(v31, sel_processIdentifier);
      sub_190CA88F0();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v46, -1, -1);
      MEMORY[0x19401889C](v38, -1, -1);

    }
    else
    {

    }
    v40 = (void *)objc_opt_self();
    sub_190CA89D4();
    swift_bridgeObjectRelease();
    aBlock = 0xD000000000000022;
    v48 = 0x8000000190CB47E0;
    v41 = objc_msgSend(v35, sel_description);
    sub_190CA85F0();

    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v42 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v40, sel__EX_errorWithCode_description_, 16, v42);

    v33 = sub_190CA83E0();
    v9 = (void *)v33;
    goto LABEL_14;
  }
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3B38]), sel_initWithListenerEndpoint_, a2);
  if (qword_1EE20B808 != -1)
    swift_once();
  objc_msgSend(v13, sel_setRemoteObjectInterface_, qword_1EE20E3E8, a4);
  v14 = objc_allocWithZone((Class)type metadata accessor for _EXConnectionActiveQueryObserver());
  v15 = v13;
  v16 = sub_190C6FBA0(v15);

  v17 = *(void **)&a3[OBJC_IVAR____TtC19ExtensionFoundation7Service_discoveryController];
  v18 = v16;
  if ((objc_msgSend(v11, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) != 0)
  {
    v19 = v11;
    sub_190C84044((uint64_t)v18, v19, v17);

    v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v20;
    v21[3] = a3;
    v21[4] = v18;
    v21[5] = v19;
    v51 = sub_190C7058C;
    v52 = v21;
    v22 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v48 = 1107296256;
    v49 = sub_190C2A3B4;
    v50 = &block_descriptor_27;
    v23 = _Block_copy(&aBlock);
    v24 = v19;
    v25 = v18;
    v26 = a3;
    swift_release();
    objc_msgSend(v15, sel_setInvalidationHandler_, v23);
    _Block_release(v23);
    v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v27;
    v28[3] = v26;
    v28[4] = v25;
    v28[5] = v24;
    v51 = sub_190C705F4;
    v52 = v28;
    aBlock = v22;
    v48 = 1107296256;
    v49 = sub_190C2A3B4;
    v50 = &block_descriptor_34;
    v29 = _Block_copy(&aBlock);
    v30 = v24;
    v31 = v25;
    v32 = v26;
    swift_release();
    objc_msgSend(v15, sel_setInterruptionHandler_, v29);
    _Block_release(v29);
    objc_msgSend(v15, sel_activate);
    v33 = 0;
    a4 = (void (**)(_QWORD, _QWORD))v45;
LABEL_14:
    a4[2](a4, v33);

    return;
  }
LABEL_17:
  _Block_release(v45);
  v44 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

void sub_190C703B0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void (*v5)(uint64_t, uint64_t, _QWORD);
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_190CA84A0();
  v11[0] = 0;
  LODWORD(v3) = objc_msgSend(v3, sel_photoServiceAuthorizationStatusWithExtensionUUID_error_, v4, v11);

  if ((_DWORD)v3)
  {
    v5 = *(void (**)(uint64_t, uint64_t, _QWORD))(a2 + 16);
    v6 = v11[0];
    v5(a2, 1, 0);
  }
  else
  {
    v7 = v11[0];
    v8 = (void *)sub_190CA83EC();

    swift_willThrow();
    v9 = (void *)sub_190CA83E0();
    v10 = (void *)sub_190CA83E0();
    (*(void (**)(uint64_t, _QWORD, void *))(a2 + 16))(a2, 0, v10);

  }
}

uint64_t sub_190C704C4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_190C704E8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C70514()
{
  id *v0;

  return swift_deallocObject();
}

void sub_190C70548()
{
  uint64_t v0;

  sub_190C6EB74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_190C70554()
{
  return swift_deallocObject();
}

uint64_t sub_190C70564()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_190C7058C()
{
  uint64_t v0;

  sub_190C6E864(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), "Connection invalidated: %{public}@");
}

uint64_t objectdestroy_23Tm()
{
  id *v0;

  swift_release();

  return swift_deallocObject();
}

void sub_190C705F4()
{
  uint64_t v0;

  sub_190C6E864(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), "Connection interupted: %{public}@");
}

uint64_t sub_190C7061C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_190C70640()
{
  uint64_t v0;

  return sub_190C6E654(*(void **)(v0 + 16));
}

void sub_190C70648()
{
  uint64_t v0;

  sub_190C6DD64(*(void **)(v0 + 16));
}

uint64_t sub_190C70650()
{
  return swift_deallocObject();
}

uint64_t sub_190C706BC(unint64_t a1, void (*a2)(uint64_t))
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v10;

  if (qword_1ECD98BA8 != -1)
    swift_once();
  v4 = (char *)sub_190C6B54C(a1);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____EXQueryResult_identities];
  swift_bridgeObjectRetain();

  if (v5)
    v6 = v5;
  else
    v6 = MEMORY[0x1E0DEE9E8];
  if (v5)
    v7 = 1;
  else
    v7 = (MEMORY[0x1E0DEE9D8] & 0xC000000000000000) == 0;
  if (!v7)
  {
    if (sub_190CA8AF4())
    {
      sub_190C80DD4(MEMORY[0x1E0DEE9D8]);
      v6 = v10;
    }
    else
    {
      v6 = MEMORY[0x1E0DEE9E8];
    }
  }
  v8 = sub_190C89904(v6);
  swift_bridgeObjectRelease();
  a2(v8);
  return swift_release();
}

uint64_t sub_190C707B8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + OBJC_IVAR____EXQueryResult_identities))
  {
    v3 = *(_QWORD *)(a1 + OBJC_IVAR____EXQueryResult_identities);
  }
  else if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_190CA8AF4())
  {
    sub_190C80DD4(MEMORY[0x1E0DEE9D8]);
    v3 = v6;
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRetain();
  v4 = sub_190C89904(v3);
  swift_bridgeObjectRelease();
  a2(v4);
  return swift_release();
}

id sub_190C70860(unint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  objc_class *Controller;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;
  uint64_t v25;
  uint64_t v26;

  v3 = sub_190CA8824();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190CA8818();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_190CA856C();
  MEMORY[0x1E0C80A78](v8);
  v9 = v1;
  sub_190CA84DC();
  v10 = &v9[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks];
  *(_QWORD *)v10 = 1;
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *((_QWORD *)v10 + 3) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v9[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__unelectedCount] = 0;
  v11 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DD0);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(_QWORD *)&v9[v11] = v12;
  v21 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_notificationQueue;
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  sub_190CA8560();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_190C3A458((unint64_t *)&qword_1ECD98DF0, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC8);
  sub_190C3A3D4((unint64_t *)&qword_1ECD98DE0, &qword_1ECD98DC8);
  sub_190CA8914();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v5, *MEMORY[0x1E0DEF8D0], v23);
  *(_QWORD *)&v9[v21] = sub_190CA8848();
  if (!(a1 >> 62))
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    *(_QWORD *)&v9[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__queries] = v18;

    Controller = (objc_class *)type metadata accessor for QueryController();
    v24.receiver = v9;
    v24.super_class = Controller;
    return objc_msgSendSuper2(&v24, sel_init);
  }
  swift_bridgeObjectRetain();
  v13 = sub_190CA8AF4();
  swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_11;
LABEL_3:
  v26 = MEMORY[0x1E0DEE9D8];
  result = (id)sub_190CA8A4C();
  if ((v13 & 0x8000000000000000) == 0)
  {
    v15 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v16 = (id)MEMORY[0x194017870](v15, a1);
      else
        v16 = *(id *)(a1 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      objc_msgSend(v16, sel_copy);
      sub_190CA8908();
      swift_unknownObjectRelease();
      type metadata accessor for _EXQuery();
      swift_dynamicCast();

      sub_190CA8A28();
      sub_190CA8A58();
      sub_190CA8A64();
      sub_190CA8A34();
    }
    while (v13 != v15);
    v18 = v26;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id sub_190C70C20()
{
  void *v0;
  objc_super v2;

  sub_190C714D8();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QueryController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190C70D38()
{
  return type metadata accessor for QueryController();
}

uint64_t type metadata accessor for QueryController()
{
  uint64_t result;

  result = qword_1EE20AC08;
  if (!qword_1EE20AC08)
    return swift_getSingletonMetadata();
  return result;
}

void sub_190C70D7C()
{
  unint64_t v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  os_unfair_lock_s *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[5];

  if (qword_1ECD98BF8 != -1)
LABEL_22:
    swift_once();
  v1 = sub_190CA8518();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ECD98BD8);
  v2 = (char *)(id)v0;
  v3 = sub_190CA8500();
  v4 = sub_190CA87DC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    *(_DWORD *)v5 = 136446210;
    v41[0] = v6;
    sub_190CA84E8();
    sub_190C3A458((unint64_t *)&qword_1ECD98BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v7 = sub_190CA8BB4();
    v40 = sub_190C30058(v7, v8, v41);
    sub_190CA88F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v3, v4, "Resuming Query observer: '%{public}s'", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v6, -1, -1);
    MEMORY[0x19401889C](v5, -1, -1);

  }
  else
  {

  }
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v10 = objc_msgSend(v9, sel_preferInProcessDiscovery);

  if (!v10)
  {
    if (qword_1EE20ACC0 != -1)
      swift_once();
    v20 = qword_1EE20DF28;
    v41[3] = type metadata accessor for QueryController();
    v41[4] = sub_190C3A458((unint64_t *)&unk_1EE20BC70, (uint64_t (*)(uint64_t))type metadata accessor for QueryController, (uint64_t)&unk_190CAE214);
    v41[0] = (uint64_t)v2;
    v21 = (os_unfair_lock_s *)(*(_QWORD *)(v20 + OBJC_IVAR____EXServiceClient_activeQueriesLock) + 16);
    v22 = v2;
    os_unfair_lock_lock(v21);
    sub_190C7CC7C(v23, v41, v20);
    os_unfair_lock_unlock(v21);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v41);

    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v22;
    v25 = v22;
    v26 = swift_bridgeObjectRetain();
    sub_190C7C28C(v26, (uint64_t)sub_190C73FA8, v24);
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  v0 = *(_QWORD *)&v2[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__queries];
  v39 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController__queries;
  v11 = (uint64_t)v2;
  if (!(v0 >> 62))
  {
    v12 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
      goto LABEL_8;
LABEL_24:
    swift_bridgeObjectRelease();
    if (qword_1ECD98BA8 != -1)
      swift_once();
    v27 = swift_bridgeObjectRetain();
    v28 = (char *)sub_190C6B54C(v27);
    swift_bridgeObjectRelease();
    v29 = *(_QWORD *)&v28[OBJC_IVAR____EXQueryResult_identities];
    swift_bridgeObjectRetain();

    if (v29)
      v30 = 1;
    else
      v30 = (MEMORY[0x1E0DEE9D8] & 0xC000000000000000) == 0;
    if (!v30)
    {
      if (sub_190CA8AF4())
        sub_190C80DD4(MEMORY[0x1E0DEE9D8]);
    }
    v31 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
    v32 = *(os_unfair_lock_s **)(v11 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock);
    swift_retain();
    os_unfair_lock_lock(v32 + 4);
    swift_release();
    v33 = *(os_unfair_lock_s **)(v11 + v31);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_unlock(v33 + 4);
    swift_release();
    v34 = objc_allocWithZone((Class)_EXQueryResultUpdate);
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    sub_190C6D7B8();
    v35 = (void *)sub_190CA8758();
    swift_bridgeObjectRelease();
    v36 = (void *)sub_190CA8758();
    swift_bridgeObjectRelease();
    v37 = objc_msgSend(v34, sel_initWithCurrentExtensions_updatedExtensions_, v35, v36);

    sub_190C71A94(v37);
    return;
  }
  swift_bridgeObjectRetain_n();
  v12 = sub_190CA8AF4();
  swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_24;
LABEL_8:
  type metadata accessor for _EXQuery();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = 4;
  while (1)
  {
    if ((v0 & 0xC000000000000001) != 0)
      v15 = (id)MEMORY[0x194017870](v14 - 4, v0);
    else
      v15 = *(id *)(v0 + 8 * v14);
    v16 = v15;
    v17 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (qword_1ECD98BA8 != -1)
      swift_once();
    v18 = (void *)qword_1ECD99310;
    if (!objc_msgSend(v16, sel_isKindOfClass_, ObjCClassFromMetadata, v39, v40))
      break;
    v19 = v16;
    sub_190C84094(v11, v19, v18);

    ++v14;
    if (v17 == v12)
      goto LABEL_24;
  }
  v38 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

void sub_190C713CC(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;

  if (!*(_QWORD *)(a1 + OBJC_IVAR____EXQueryResult_identities)
    && (MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0
    && sub_190CA8AF4())
  {
    sub_190C80DD4(MEMORY[0x1E0DEE9D8]);
  }
  v1 = objc_allocWithZone((Class)_EXQueryResultUpdate);
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
  sub_190C6D7B8();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_190CA8758();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithIdentities_, v2);

  sub_190C71A94(v3);
}

void sub_190C714D8()
{
  unint64_t v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  uint64_t ObjCClassFromMetadata;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *v19;
  os_unfair_lock_s *v20;
  char *v21;
  uint64_t v22;
  id v23;
  _QWORD v24[5];

  if (qword_1ECD98BF8 != -1)
LABEL_22:
    swift_once();
  v1 = sub_190CA8518();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ECD98BD8);
  v2 = (char *)(id)v0;
  v3 = sub_190CA8500();
  v4 = sub_190CA87DC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138543362;
    v24[0] = v2;
    v7 = v2;
    sub_190CA88F0();
    *v6 = v2;

    _os_log_impl(&dword_190C25000, v3, v4, "Suspending Query observer: '%{public}@'", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v6, -1, -1);
    MEMORY[0x19401889C](v5, -1, -1);

  }
  else
  {

  }
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v9 = objc_msgSend(v8, sel_preferInProcessDiscovery);

  if (!v9)
  {
    if (qword_1EE20ACC0 != -1)
      swift_once();
    v19 = (char *)qword_1EE20DF28;
    v24[3] = type metadata accessor for QueryController();
    v24[4] = sub_190C3A458((unint64_t *)&unk_1EE20BC70, (uint64_t (*)(uint64_t))type metadata accessor for QueryController, (uint64_t)&unk_190CAE214);
    v24[0] = v2;
    v20 = (os_unfair_lock_s *)(*(_QWORD *)&v19[OBJC_IVAR____EXServiceClient_activeQueriesLock] + 16);
    v21 = v2;
    os_unfair_lock_lock(v20);
    sub_190C7D0E4(v22, v24, v19);
    os_unfair_lock_unlock(v20);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v24);

    return;
  }
  v0 = *(_QWORD *)&v2[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__queries];
  if (!(v0 >> 62))
  {
    v10 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_8;
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain_n();
  v10 = sub_190CA8AF4();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_24;
LABEL_8:
  v11 = v2;
  type metadata accessor for _EXQuery();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = 4;
  while (1)
  {
    if ((v0 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x194017870](v13 - 4, v0);
    else
      v14 = *(id *)(v0 + 8 * v13);
    v15 = v14;
    v16 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (qword_1ECD98BA8 != -1)
      swift_once();
    v17 = (void *)qword_1ECD99310;
    if (!objc_msgSend(v15, sel_isKindOfClass_, ObjCClassFromMetadata))
      break;
    v18 = v15;
    sub_190C85394(v11, v18, v17);

    ++v13;
    if (v16 == v10)
      goto LABEL_24;
  }
  v23 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_190C718C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_190CA8824();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_190CA8818();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_190CA856C();
  MEMORY[0x1E0C80A78](v6);
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  sub_190CA8560();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_190C3A458((unint64_t *)&qword_1ECD98DF0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC8);
  sub_190C3A3D4((unint64_t *)&qword_1ECD98DE0, &qword_1ECD98DC8);
  sub_190CA8914();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_190CA8848();
  qword_1EE20A290 = result;
  return result;
}

uint64_t sub_190C71A94(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_unfair_lock_s *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  _QWORD *v70;
  id v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  os_unfair_lock_s *v77;
  _QWORD v78[3];
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t aBlock[9];

  v2 = v1;
  v4 = sub_190CA8554();
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  MEMORY[0x1E0C80A78](v4);
  v82 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190CA856C();
  v80 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  MEMORY[0x1E0C80A78](v6);
  v79 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_addedExtensions);
  v9 = sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
  v10 = sub_190C6D7B8();
  v11 = sub_190CA8764();

  v12 = objc_msgSend(a1, sel_removedUUIDs);
  v13 = sub_190CA84E8();
  v85 = sub_190C3A458(&qword_1EE20ABB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v86 = v13;
  v14 = sub_190CA8764();

  if (qword_1ECD98BF8 != -1)
    swift_once();
  v15 = sub_190CA8518();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ECD98BD8);
  swift_bridgeObjectRetain_n();
  v17 = sub_190CA8500();
  v18 = sub_190CA87DC();
  v19 = os_log_type_enabled(v17, v18);
  v78[2] = v9;
  v78[1] = v10;
  v87 = v16;
  v88 = v2;
  if (v19)
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    aBlock[0] = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    v22 = sub_190CA8770();
    v24 = v23;
    swift_bridgeObjectRelease();
    v89 = sub_190C30058(v22, v24, aBlock);
    sub_190CA88F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v17, v18, "Query results update: To add: '%{public}s'", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v21, -1, -1);
    MEMORY[0x19401889C](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  v25 = sub_190CA8500();
  v26 = sub_190CA87DC();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)v27 = 136446210;
    swift_bridgeObjectRetain();
    v29 = sub_190CA8770();
    v31 = v30;
    swift_bridgeObjectRelease();
    v89 = sub_190C30058(v29, v31, aBlock);
    sub_190CA88F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v25, v26, "Query results update: To remove UUIDs: '%{public}s'", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v28, -1, -1);
    MEMORY[0x19401889C](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v32 = v88;
  v33 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
  v34 = *(os_unfair_lock_s **)&v88[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock];
  swift_retain();
  os_unfair_lock_lock(v34 + 4);
  swift_release();
  v35 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions;
  v36 = *(void **)&v32[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions];
  swift_bridgeObjectRetain_n();
  v37 = swift_bridgeObjectRetain();
  sub_190C72514(v37, v36);
  swift_bridgeObjectRetain();
  v38 = swift_bridgeObjectRetain();
  v39 = sub_190C7363C(v38, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  aBlock[7] = v39;
  *(_QWORD *)&v32[v35] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v11 & 0xC000000000000001) != 0)
    v40 = sub_190CA8944();
  else
    v40 = *(_QWORD *)(v11 + 16);
  v86 = (uint64_t)v36;
  swift_bridgeObjectRelease();
  if (v40 < 1)
  {
    v41 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRelease();
    if (!v41)
    {
      v77 = *(os_unfair_lock_s **)&v32[v33];
      swift_retain();
      os_unfair_lock_unlock(v77 + 4);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v42 = *(os_unfair_lock_s **)&v32[v33];
  swift_retain();
  os_unfair_lock_unlock(v42 + 4);
  swift_release();
  v88 = v32;
  v43 = sub_190CA8500();
  v44 = sub_190CA87DC();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    *(_DWORD *)v45 = 136446210;
    aBlock[0] = v46;
    v85 = (uint64_t)(v45 + 4);
    v47 = v88;
    v48 = type metadata accessor for _EXQuery();
    v49 = swift_bridgeObjectRetain();
    v50 = MEMORY[0x194017534](v49, v48);
    v52 = v51;
    swift_bridgeObjectRelease();
    v89 = sub_190C30058(v50, v52, aBlock);
    sub_190CA88F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v43, v44, "Query results did change: %{public}s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v46, -1, -1);
    MEMORY[0x19401889C](v45, -1, -1);

  }
  else
  {

    v53 = v88;
  }
  swift_bridgeObjectRetain();
  v54 = sub_190CA8500();
  v55 = sub_190CA87DC();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    aBlock[0] = v57;
    *(_DWORD *)v56 = 136446466;
    swift_bridgeObjectRetain();
    v58 = sub_190CA8770();
    v60 = v59;
    swift_bridgeObjectRelease();
    v89 = sub_190C30058(v58, v60, aBlock);
    sub_190CA88F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2082;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v61 = sub_190CA8770();
    v63 = v62;
    swift_bridgeObjectRelease();
    v90 = sub_190C30058(v61, v63, aBlock);
    sub_190CA88F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v54, v55, "Update original results:\n%{public}s\nupdated results:\n%{public}s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v57, -1, -1);
    MEMORY[0x19401889C](v56, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v64 = &v88[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks];
  v65 = *(_QWORD *)&v88[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks];
  if (v65 != 1)
  {
    v67 = *((_QWORD *)v64 + 2);
    v66 = *((_QWORD *)v64 + 3);
    v68 = *((_QWORD *)v64 + 1);
    v69 = *(void **)&v88[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_notificationQueue];
    v70 = (_QWORD *)swift_allocObject();
    v70[2] = v65;
    v70[3] = v68;
    v70[4] = v67;
    v70[5] = v66;
    aBlock[4] = (uint64_t)sub_190C73F24;
    aBlock[5] = (uint64_t)v70;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_190C2A3B4;
    aBlock[3] = (uint64_t)&block_descriptor_9_0;
    v88 = (char *)_Block_copy(aBlock);
    sub_190C73F4C(v65, v68, v67);
    v71 = v69;
    sub_190C2FA88(v65);
    sub_190C2FA88(v67);
    v72 = v79;
    sub_190CA8560();
    v90 = MEMORY[0x1E0DEE9D8];
    sub_190C3A458((unint64_t *)&qword_1ECD98C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C40);
    sub_190C3A3D4((unint64_t *)&qword_1ECD98C70, (uint64_t *)&unk_1ECD98C40);
    v73 = v82;
    v74 = v84;
    sub_190CA8914();
    v75 = v88;
    MEMORY[0x1940176A8](0, v72, v73, v88);
    _Block_release(v75);

    sub_190C2FC70(v65);
    sub_190C2FC70(v67);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v73, v74);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v72, v81);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

void sub_190C72514(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  _QWORD *v17;
  id v18[7];

  v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_190CA8938();
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    sub_190C6D7B8();
    sub_190CA8788();
    v2 = (unint64_t)v18[2];
    v17 = v18[3];
    v3 = (uint64_t)v18[4];
    v4 = v18[5];
    v5 = (unint64_t)v18[6];
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = (_QWORD *)(a1 + 56);
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | ((_QWORD)v4 << 6);
      v12 = (char *)v4;
      goto LABEL_29;
    }
    v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_32;
    v15 = v17[v14];
    v12 = (char *)v4 + 1;
    if (!v15)
    {
      v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9)
        goto LABEL_32;
      v15 = v17[(_QWORD)v12];
      if (!v15)
      {
        v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9)
          goto LABEL_32;
        v15 = v17[(_QWORD)v12];
        if (!v15)
        {
          v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9)
            goto LABEL_32;
          v15 = v17[(_QWORD)v12];
          if (!v15)
          {
            v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9)
              goto LABEL_32;
            v15 = v17[(_QWORD)v12];
            if (!v15)
            {
              v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                v15 = v17[(_QWORD)v16++];
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_190C6D7B0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + ((_QWORD)v12 << 6);
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      sub_190C8F5A0(v18, v13);

      v4 = v12;
      v5 = v10;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_190CA895C())
      {
        sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v18[0];
        swift_unknownObjectRelease();
        v12 = (char *)v4;
        v10 = v5;
        if (v13)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

unint64_t sub_190C72858()
{
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  sub_190CA84E8();
  sub_190C3A458((unint64_t *)&qword_1ECD98BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  return 0xD000000000000012;
}

uint64_t sub_190C72948()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190CA84E8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *destroy for QueryController.Callbacks(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
    result = (_QWORD *)swift_release();
  if (v1[2])
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *initializeWithCopy for QueryController.Callbacks(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*a2)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[2];
  if (v5)
  {
    v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  return a1;
}

_QWORD *assignWithCopy for QueryController.Callbacks(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for QueryController.Callbacks(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryController.Callbacks(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryController.Callbacks(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryController.Callbacks()
{
  return &type metadata for QueryController.Callbacks;
}

void sub_190C72D04(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  sub_190C2B30C(0, &qword_1EE20AB98);
  if (objc_msgSend(a2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    objc_opt_self();
    v3 = (void *)swift_dynamicCastObjCClassUnconditional();
    v5 = a2;
    sub_190C71A94(v3);

  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

void sub_190C72DEC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  sub_190C2B30C(0, &qword_1EE20AB98);
  if (objc_msgSend(a2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    objc_opt_self();
    v3 = (void *)swift_dynamicCastObjCClassUnconditional();
    v5 = a2;
    sub_190C71A94(v3);

  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

uint64_t sub_190C72ED8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_190C72EEC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_id;
  v4 = sub_190CA84E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_190C72F34(uint64_t a1)
{
  uint64_t result;

  result = sub_190C3A458(&qword_1EE20BC68, (uint64_t (*)(uint64_t))type metadata accessor for QueryController, MEMORY[0x1E0DEFCF8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190C72F70(uint64_t a1)
{
  uint64_t result;

  result = sub_190C3A458(&qword_1EE20ABF0, (uint64_t (*)(uint64_t))type metadata accessor for QueryController, (uint64_t)&unk_190CAE1DC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_190C72FAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  char v37;
  void (*v38)(char *, uint64_t);
  BOOL v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  _QWORD *v44;
  _DWORD *v45;
  _QWORD *v46;
  os_log_type_t v47;
  _DWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  unint64_t *v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _DWORD *v59;
  unint64_t v60;
  int64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;

  v51 = a2;
  v53 = a1;
  v6 = sub_190CA84E8();
  v63 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v51 - v11;
  v56 = a3;
  v57 = 0;
  v13 = 0;
  v16 = *(_QWORD *)(a3 + 56);
  v15 = a3 + 56;
  v14 = v16;
  v17 = 1 << *(_BYTE *)(v15 - 24);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  v54 = v15;
  v55 = (unint64_t)(v17 + 63) >> 6;
  v62 = a4 + 56;
  *(_QWORD *)&v10 = 138543362;
  v52 = v10;
  v64 = a4;
  do
  {
    while (1)
    {
      if (v19)
      {
        v21 = __clz(__rbit64(v19));
        v22 = (v19 - 1) & v19;
        v23 = v21 | (v13 << 6);
      }
      else
      {
        v24 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_38;
        if (v24 >= v55)
        {
LABEL_37:
          v50 = v56;
          swift_retain();
          sub_190C9321C(v53, v51, v57, v50);
          return;
        }
        v25 = *(_QWORD *)(v54 + 8 * v24);
        ++v13;
        if (!v25)
        {
          v13 = v24 + 1;
          if (v24 + 1 >= v55)
            goto LABEL_37;
          v25 = *(_QWORD *)(v54 + 8 * v13);
          if (!v25)
          {
            v13 = v24 + 2;
            if (v24 + 2 >= v55)
              goto LABEL_37;
            v25 = *(_QWORD *)(v54 + 8 * v13);
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v55)
                goto LABEL_37;
              v25 = *(_QWORD *)(v54 + 8 * v26);
              if (!v25)
              {
                while (1)
                {
                  v13 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v13 >= v55)
                    goto LABEL_37;
                  v25 = *(_QWORD *)(v54 + 8 * v13);
                  ++v26;
                  if (v25)
                    goto LABEL_22;
                }
              }
              v13 = v26;
            }
          }
        }
LABEL_22:
        v22 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v13 << 6);
      }
      v27 = *(_QWORD *)(v56 + 48);
      v58 = v23;
      v28 = *(id *)(v27 + 8 * v23);
      v29 = objc_msgSend(v28, sel_UUID, v51);
      sub_190CA84B8();

      v30 = *(_QWORD *)(a4 + 16);
      v60 = v22;
      v61 = v13;
      v59 = v28;
      if (!v30)
        break;
      sub_190C3A458(&qword_1EE20ABB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      v31 = sub_190CA85A8();
      v32 = -1 << *(_BYTE *)(a4 + 32);
      v33 = v31 & ~v32;
      if (((*(_QWORD *)(v62 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
        break;
      v34 = ~v32;
      v35 = v63[9];
      v36 = (void (*)(char *, unint64_t, uint64_t))v63[2];
      while (1)
      {
        v36(v9, *(_QWORD *)(v64 + 48) + v35 * v33, v6);
        sub_190C3A458(&qword_1EE20ABB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v37 = sub_190CA85CC();
        v38 = (void (*)(char *, uint64_t))v63[1];
        v38(v9, v6);
        if ((v37 & 1) != 0)
          break;
        v33 = (v33 + 1) & v34;
        if (((*(_QWORD *)(v62 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
        {
          v38(v12, v6);
          goto LABEL_29;
        }
      }
      v38(v12, v6);
      if (qword_1ECD98BF8 != -1)
        swift_once();
      v40 = sub_190CA8518();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ECD98BD8);
      v41 = v59;
      v20 = sub_190CA8500();
      v42 = sub_190CA87DC();
      v43 = os_log_type_enabled(v20, v42);
      a4 = v64;
      v19 = v60;
      v13 = v61;
      if (v43)
      {
        v59 = (_DWORD *)swift_slowAlloc();
        v44 = (_QWORD *)swift_slowAlloc();
        v45 = v59;
        *v59 = v52;
        *(_QWORD *)(v45 + 1) = v41;
        *v44 = v41;
        v46 = v44;
        v47 = v42;
        v48 = v45;
        _os_log_impl(&dword_190C25000, v20, v47, "Query results: removing '%{public}@'", (uint8_t *)v45, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        v49 = v46;
        a4 = v64;
        MEMORY[0x19401889C](v49, -1, -1);
        MEMORY[0x19401889C](v48, -1, -1);
      }
      else
      {

        v20 = v41;
      }

    }
    ((void (*)(char *, uint64_t))v63[1])(v12, v6);
LABEL_29:

    *(unint64_t *)((char *)v53 + ((v58 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v58;
    v39 = __OFADD__(v57++, 1);
    a4 = v64;
    v19 = v60;
    v13 = v61;
  }
  while (!v39);
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_190C73478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_190C72FAC((_QWORD *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_190C72FAC((unint64_t *)v12, v7, a1, a2);
    v11 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x19401889C](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_190C7363C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  NSObject *v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  __int128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;

  v6 = sub_190CA84E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = MEMORY[0x1E0DEE9E8];
    v49 = MEMORY[0x1E0DEE9E8];
    swift_bridgeObjectRetain();
    v10 = sub_190CA8938();
    v11 = sub_190CA895C();
    if (v11)
    {
      v12 = v11;
      v42[1] = v3;
      v13 = sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      v46 = MEMORY[0x1E0DEE9B0] + 8;
      *(_QWORD *)&v14 = 138543362;
      v43 = v14;
      v44 = v9;
      v45 = v13;
      do
      {
        v47 = v12;
        swift_dynamicCast();
        v16 = v48;
        v17 = objc_msgSend(v48, sel_UUID);
        sub_190CA84B8();

        LOBYTE(v17) = sub_190C8D0A4((uint64_t)v9, a2);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        if ((v17 & 1) != 0)
        {
          if (qword_1ECD98BF8 != -1)
            swift_once();
          v18 = sub_190CA8518();
          __swift_project_value_buffer(v18, (uint64_t)qword_1ECD98BD8);
          v19 = v16;
          v15 = sub_190CA8500();
          v20 = sub_190CA87DC();
          if (os_log_type_enabled(v15, v20))
          {
            v21 = swift_slowAlloc();
            v22 = v10;
            v23 = v7;
            v24 = v6;
            v25 = a2;
            v26 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v21 = v43;
            *(_QWORD *)(v21 + 4) = v19;
            *v26 = v19;

            _os_log_impl(&dword_190C25000, v15, v20, "Query results: removing '%{public}@'", (uint8_t *)v21, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
            swift_arrayDestroy();
            v27 = v26;
            a2 = v25;
            v6 = v24;
            v7 = v23;
            v10 = v22;
            v9 = v44;
            MEMORY[0x19401889C](v27, -1, -1);
            MEMORY[0x19401889C](v21, -1, -1);
          }
          else
          {

            v15 = v19;
          }

        }
        else
        {
          v28 = v48;
          v29 = v49;
          v30 = *(_QWORD *)(v49 + 16);
          if (*(_QWORD *)(v49 + 24) <= v30)
          {
            sub_190C90588(v30 + 1);
            v29 = v49;
          }
          result = sub_190CA889C();
          v32 = v29 + 56;
          v33 = -1 << *(_BYTE *)(v29 + 32);
          v34 = result & ~v33;
          v35 = v34 >> 6;
          if (((-1 << v34) & ~*(_QWORD *)(v29 + 56 + 8 * (v34 >> 6))) != 0)
          {
            v36 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v29 + 56 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v37 = 0;
            v38 = (unint64_t)(63 - v33) >> 6;
            do
            {
              if (++v35 == v38 && (v37 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v39 = v35 == v38;
              if (v35 == v38)
                v35 = 0;
              v37 |= v39;
              v40 = *(_QWORD *)(v32 + 8 * v35);
            }
            while (v40 == -1);
            v36 = __clz(__rbit64(~v40)) + (v35 << 6);
          }
          *(_QWORD *)(v32 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
          *(_QWORD *)(*(_QWORD *)(v29 + 48) + 8 * v36) = v28;
          ++*(_QWORD *)(v29 + 16);
        }
        v12 = sub_190CA895C();
      }
      while (v12);
      v2 = v49;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v41 = sub_190C73478(a1, a2);
    if (!v3)
      return v41;
  }
  return v2;
}

uint64_t sub_190C73A44(unint64_t a1)
{
  id v2;
  unsigned int v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_preferInProcessDiscovery);

  if (v3)
  {
    if (qword_1ECD98BA8 != -1)
      swift_once();
    v4 = (char *)sub_190C6B54C(a1);
  }
  else
  {
    if (qword_1EE20ACC0 != -1)
      swift_once();
    v4 = (char *)sub_190C7C11C(a1);
  }
  v5 = v4;
  if (*(_QWORD *)&v4[OBJC_IVAR____EXQueryResult_identities])
  {
    v6 = *(_QWORD *)&v4[OBJC_IVAR____EXQueryResult_identities];
  }
  else if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_190CA8AF4())
  {
    sub_190C80DD4(MEMORY[0x1E0DEE9D8]);
    v6 = v9;
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRetain();
  v7 = sub_190C89904(v6);

  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_190C73B98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  unsigned int v14;
  _QWORD *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v6 = sub_190CA8554();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_190CA856C();
  v10 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v14 = objc_msgSend(v13, sel_preferInProcessDiscovery);

  if (v14)
  {
    v20 = v7;
    if (qword_1EE20A298 != -1)
      swift_once();
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a1;
    v15[3] = a2;
    v15[4] = a3;
    aBlock[4] = sub_190C73EDC;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190C2A3B4;
    aBlock[3] = &block_descriptor_1;
    v16 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_190CA8560();
    v22 = MEMORY[0x1E0DEE9D8];
    sub_190C3A458((unint64_t *)&qword_1ECD98C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C40);
    sub_190C3A3D4((unint64_t *)&qword_1ECD98C70, (uint64_t *)&unk_1ECD98C40);
    sub_190CA8914();
    MEMORY[0x1940176A8](0, v12, v9, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
    return swift_release();
  }
  else
  {
    if (qword_1EE20ACC0 != -1)
      swift_once();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a2;
    *(_QWORD *)(v18 + 24) = a3;
    swift_retain();
    sub_190C7C28C(a1, (uint64_t)sub_190C73EA8, v18);
    return swift_release();
  }
}

uint64_t sub_190C73E84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C73EA8(uint64_t a1)
{
  uint64_t v1;

  return sub_190C707B8(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_190C73EB0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C73EDC()
{
  uint64_t v0;

  return sub_190C706BC(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_190C73EE8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C73F24()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_190C73F4C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    sub_190C2FA88(result);
    return sub_190C2FA88(a3);
  }
  return result;
}

uint64_t sub_190C73F84()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_190C73FA8(uint64_t a1)
{
  sub_190C713CC(a1);
}

uint64_t sub_190C73FB0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    sub_190C2FC70(result);
    return sub_190C2FC70(a3);
  }
  return result;
}

uint64_t sub_190C73FF0()
{
  return 0;
}

Swift::Bool __swiftcall AppExtensionXPCConfiguration.accept(connection:)(NSXPCConnection connection)
{
  return 0;
}

uint64_t AppExtensionXPCConfiguration.handleConnection(_:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

_QWORD *assignWithCopy for AppExtensionXPCConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AppExtensionXPCConfiguration(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _EXActiveQuery.ActiveQueryObserver(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _EXActiveQuery.ActiveQueryObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t static _EXQuery.supportsSecureCoding.getter()
{
  return 1;
}

id sub_190C74274()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;
  id v4;
  unsigned __int8 v5;
  __int128 *v6;
  uint64_t *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  objc_super v12;

  *(_QWORD *)&v0[OBJC_IVAR____EXQuery_resultType] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____EXQuery_predicate] = 0;
  v0[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
  v1 = OBJC_IVAR____EXQuery_allowsDuplicates;
  v2 = (void *)objc_opt_self();
  v3 = v0;
  v4 = objc_msgSend(v2, sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_queryAllowsDuplicates);

  v0[v1] = v5;
  v3[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
  v6 = (__int128 *)_EXAuditTokenForCurrentProcess();
  v7 = (uint64_t *)&v3[OBJC_IVAR____EXQuery_inner];
  v8 = swift_allocObject();
  v9 = *v6;
  v10 = v6[1];
  v7[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
  v7[4] = (uint64_t)&off_1E2CFBA00;
  *v7 = v8;
  *(_DWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_OWORD *)(v8 + 36) = v9;
  *(_OWORD *)(v8 + 52) = v10;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for _EXQuery();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_190C748A4(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v3 = (void *)sub_190CA88E4();
  v4 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____EXQuery_allowsDuplicates);
  v6 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeBool_forKey_, v5, v6);

  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____EXQuery_includePostprocessing);
  v8 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeBool_forKey_, v7, v8);

  v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR____EXQuery_excludeLockedApps);
  v10 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeBool_forKey_, v9, v10);

  v11 = v1 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_190C6D76C(v11, (uint64_t)v15);
  v12 = v16;
  v13 = v17;
  __swift_project_boxed_opaque_existential_2Tm(v15, v16);
  (*(void (**)(void *, uint64_t, uint64_t))(v13 + 88))(a1, v12, v13);
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v15);
}

id _EXQuery.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_190C77420(a1);

  return v4;
}

id _EXQuery.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_190C77420(a1);

  return v2;
}

void sub_190C74B18(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  _OWORD v11[3];
  int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v5 = (void *)sub_190CA85D8();
  v6 = objc_msgSend(a1, sel_decodeIntegerForKey_, v5);

  if (v6 == (id)1)
  {
    sub_190C77220(a1);
    if (!v2)
    {
      a2[3] = (uint64_t)&type metadata for _EXQuery.RecordQuery;
      a2[4] = (uint64_t)&off_1E2CFB920;
      v7 = swift_allocObject();
      *a2 = v7;
      v8 = v14;
      *(_OWORD *)(v7 + 16) = v13;
      *(_OWORD *)(v7 + 32) = v8;
      *(_QWORD *)(v7 + 48) = v15;
    }
  }
  else if (v6)
  {
    sub_190CA8ADC();
    __break(1u);
  }
  else
  {
    sub_190C7700C(a1, (uint64_t)v11);
    if (!v2)
    {
      a2[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
      a2[4] = (uint64_t)&off_1E2CFBA00;
      v9 = swift_allocObject();
      *a2 = v9;
      v10 = v11[1];
      *(_OWORD *)(v9 + 16) = v11[0];
      *(_OWORD *)(v9 + 32) = v10;
      *(_OWORD *)(v9 + 48) = v11[2];
      *(_DWORD *)(v9 + 64) = v12;
    }
  }
}

void sub_190C74CD0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  __int128 v10[2];

  v3 = (objc_class *)type metadata accessor for _EXQuery();
  v4 = objc_msgSend(objc_allocWithZone(v3), sel_init);
  v5 = v1 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_190C6D76C(v5, (uint64_t)v10);
  v6 = (uint64_t)&v4[OBJC_IVAR____EXQuery_inner];
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_2Tm(v6);
  sub_190C6A2A8(v10, v6);
  swift_endAccess();
  *(_QWORD *)&v4[OBJC_IVAR____EXQuery_resultType] = *(_QWORD *)(v1 + OBJC_IVAR____EXQuery_resultType);
  v4[OBJC_IVAR____EXQuery_allowsDuplicates] = *(_BYTE *)(v1 + OBJC_IVAR____EXQuery_allowsDuplicates);
  v4[OBJC_IVAR____EXQuery_includePostprocessing] = *(_BYTE *)(v1 + OBJC_IVAR____EXQuery_includePostprocessing);
  v4[OBJC_IVAR____EXQuery_excludeLockedApps] = *(_BYTE *)(v1 + OBJC_IVAR____EXQuery_excludeLockedApps);
  v7 = *(void **)(v1 + OBJC_IVAR____EXQuery_predicate);
  v8 = *(void **)&v4[OBJC_IVAR____EXQuery_predicate];
  *(_QWORD *)&v4[OBJC_IVAR____EXQuery_predicate] = v7;
  v9 = v7;

  a1[3] = v3;
  *a1 = v4;
}

id sub_190C74E44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id result;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = objc_msgSend(a1, sel_extensionPointIdentifier);
  v5 = sub_190CA85F0();
  v7 = v6;

  v8 = v2 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_190C6D76C(v8, (uint64_t)v18);
  v9 = v19;
  v10 = v20;
  __swift_project_boxed_opaque_existential_2Tm(v18, v19);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  v13 = v12;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
  if (v13)
  {
    if (v5 == v11 && v13 == v7)
      v15 = 1;
    else
      v15 = sub_190CA8BCC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____EXQuery_predicate);
    result = (id)((v17 == 0) & v15);
    if (v17)
    {
      if ((v15 & 1) != 0)
        return objc_msgSend(*(id *)(v2 + OBJC_IVAR____EXQuery_predicate), sel_evaluateWithObject_, a1);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

BOOL sub_190C74FE0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  _BOOL8 result;
  uint64_t v18;
  uint64_t v19;
  int v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unsigned int v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v3 = v1 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_190C6D76C(v3, (uint64_t)v26);
  v4 = v27;
  v5 = v28;
  __swift_project_boxed_opaque_existential_2Tm(v26, v27);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (v7)
  {
    v8 = v6;
    v9 = v7;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    v10 = objc_msgSend(a1, sel_extensionPointRecord);
    v11 = objc_msgSend(v10, sel_identifier);

    v12 = sub_190CA85F0();
    v14 = v13;

    if (v8 == v12 && v9 == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = sub_190CA8BCC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v16 & 1) == 0)
        return result;
    }
    sub_190C6D76C(v3, (uint64_t)v26);
    v22 = v27;
    v23 = v28;
    __swift_project_boxed_opaque_existential_2Tm(v26, v27);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    v21 = objc_msgSend(a1, sel_extensionPointRecord);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    sub_190C6D76C(v3, (uint64_t)v26);
    v18 = v27;
    v19 = v28;
    __swift_project_boxed_opaque_existential_2Tm(v26, v27);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    v21 = objc_msgSend(a1, sel_extensionPointRecord);
  }
  v24 = v21;
  v25 = objc_msgSend(v24, sel_platform);

  return (v20 + 1) < 2 || v25 == v20;
}

uint64_t sub_190C7524C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  char *v52;
  __int128 v53;
  int v54;
  int v55;
  int v56;
  int v57;
  __int128 v58;
  int v59;
  int v60;
  int v61;
  int v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  sub_190C6F4D4(a1, (uint64_t)v63);
  if (v64)
  {
    type metadata accessor for _EXQuery();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = (char *)v58;
      if ((char *)v58 == v1)
      {

        v38 = 1;
        return v38 & 1;
      }
      v51 = v1;
      v3 = (uint64_t)&v1[OBJC_IVAR____EXQuery_inner];
      swift_beginAccess();
      sub_190C6D76C(v3, (uint64_t)v63);
      v4 = v64;
      v5 = v65;
      __swift_project_boxed_opaque_existential_2Tm(v63, v64);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
      v7 = v6;
      LODWORD(v4) = v8;
      LODWORD(v5) = v9;
      v11 = v10;
      v12 = HIDWORD(v6);
      v13 = HIDWORD(v8);
      v14 = HIDWORD(v9);
      v15 = HIDWORD(v10);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
      *(_QWORD *)&v58 = __PAIR64__(v12, v7);
      *((_QWORD *)&v58 + 1) = __PAIR64__(v13, v4);
      v59 = v5;
      v60 = v14;
      v61 = v11;
      v62 = v15;
      v52 = v2;
      v16 = (uint64_t)&v2[OBJC_IVAR____EXQuery_inner];
      swift_beginAccess();
      sub_190C6D76C(v16, (uint64_t)v63);
      v17 = v64;
      v18 = v65;
      __swift_project_boxed_opaque_existential_2Tm(v63, v64);
      v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
      v20 = v19;
      LODWORD(v17) = v21;
      LODWORD(v18) = v22;
      LODWORD(v15) = v23;
      v24 = HIDWORD(v19);
      v25 = HIDWORD(v21);
      v26 = HIDWORD(v22);
      v27 = HIDWORD(v23);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
      *(_QWORD *)&v53 = __PAIR64__(v24, v20);
      *((_QWORD *)&v53 + 1) = __PAIR64__(v25, v17);
      v54 = v18;
      v55 = v26;
      v56 = v15;
      v57 = v27;
      sub_190C6D76C(v3, (uint64_t)v63);
      v28 = v64;
      v29 = v65;
      __swift_project_boxed_opaque_existential_2Tm(v63, v64);
      v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      v32 = v31;
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
      sub_190C6D76C(v16, (uint64_t)v63);
      v33 = v64;
      v34 = v65;
      __swift_project_boxed_opaque_existential_2Tm(v63, v64);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
      v37 = v36;
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
      if (v32)
      {
        if (v37)
        {
          if (v30 == v35 && v32 == v37)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            v40 = sub_190CA8BCC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v40 & 1) == 0)
            {
LABEL_22:

              goto LABEL_10;
            }
          }
LABEL_17:
          sub_190C6D76C(v3, (uint64_t)v63);
          v41 = v64;
          v42 = v65;
          __swift_project_boxed_opaque_existential_2Tm(v63, v64);
          LODWORD(v41) = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 40))(v41, v42);
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
          sub_190C6D76C(v16, (uint64_t)v63);
          v43 = v64;
          v44 = v65;
          __swift_project_boxed_opaque_existential_2Tm(v63, v64);
          v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 40))(v43, v44);
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
          if ((_DWORD)v41 == v45 && _EXAuditTokenEqual(&v58, &v53))
          {
            v46 = *(void **)&v51[OBJC_IVAR____EXQuery_predicate];
            v47 = *(void **)&v52[OBJC_IVAR____EXQuery_predicate];
            v38 = v47 == 0;
            if (!v46)
            {

              return v38 & 1;
            }
            if (v47)
            {
              sub_190C2B30C(0, &qword_1EE20A2A8);
              v48 = v46;
              v49 = v47;
              v50 = v48;
              v38 = sub_190CA88A8();

              return v38 & 1;
            }
          }
          goto LABEL_22;
        }
      }
      else if (!v37)
      {
        goto LABEL_17;
      }

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_190C459C8((uint64_t)v63);
  }
LABEL_10:
  v38 = 0;
  return v38 & 1;
}

uint64_t sub_190C75708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_190C6D76C(v1, (uint64_t)v10);
  v2 = v11;
  v3 = v12;
  __swift_project_boxed_opaque_existential_2Tm(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v5 = v4;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v10);
  if (v5)
  {
    v6 = sub_190CA8698();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  sub_190C6D76C(v1, (uint64_t)v10);
  v7 = v11;
  v8 = v12;
  __swift_project_boxed_opaque_existential_2Tm(v10, v11);
  LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v10);
  return v6 ^ v7;
}

id _EXQuery.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXQuery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_190C75860(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _BYTE v7[16];
  _QWORD v8[2];

  sub_190C77C1C(v1, (uint64_t)v7);
  sub_190C77C1C((uint64_t)v7, (uint64_t)v8);
  if (v8[1])
  {
    v3 = (void *)sub_190CA85D8();
    v4 = (void *)sub_190CA85D8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  }
  v5 = (void *)sub_190CA8C8C();
  v6 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

}

unint64_t sub_190C75944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  NSObject *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD *v59;
  NSObject *v60;
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  id v71;
  unint64_t v72;
  _OWORD v73[2];
  __int128 v74;
  __int128 v75;
  id v76;
  _BYTE v77[16];
  _QWORD v78[2];
  _QWORD v79[3];

  v1 = v0;
  v79[2] = *MEMORY[0x1E0C80C00];
  v68 = sub_190CA8404();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v3 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C77C1C(v0, (uint64_t)v77);
  sub_190C77C1C((uint64_t)v77, (uint64_t)v79);
  if (v79[1])
    v4 = sub_190CA868C();
  else
    v4 = 1;
  v70 = *(_OWORD *)(v0 + 20);
  v69 = *(_OWORD *)(v0 + 36);
  v5 = (void *)objc_opt_self();
  *(_QWORD *)&v73[0] = 0;
  v74 = v70;
  v75 = v69;
  v6 = objc_msgSend(v5, sel_bundleRecordForAuditToken_error_, &v74, v73);
  v7 = *(void **)&v73[0];
  if (v6)
  {
    v8 = v6;
    objc_opt_self();
    v9 = (void *)swift_dynamicCastObjCClass();
    if (v9)
    {
      v76 = v9;
      v10 = qword_1ECD98BF8;
      v11 = v7;
      if (v10 != -1)
        swift_once();
      v12 = sub_190CA8518();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ECD98BD8);
      v13 = sub_190CA8500();
      v14 = sub_190CA87DC();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v15 = 138412290;
        swift_beginAccess();
        v17 = v76;
        if (v76)
        {
          *(_QWORD *)&v70 = v15 + 12;
          *(_QWORD *)&v74 = v76;
          v18 = v76;
        }
        else
        {
          *(_QWORD *)&v74 = 0;
        }
        sub_190CA88F0();
        *v16 = v17;
        _os_log_impl(&dword_190C25000, v13, v14, "Resolved host app record for value query: %@", v15, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v16, -1, -1);
        MEMORY[0x19401889C](v15, -1, -1);
      }

      goto LABEL_22;
    }
    v21 = v7;

  }
  else
  {
    v19 = *(id *)&v73[0];
    v20 = (void *)sub_190CA83EC();

    swift_willThrow();
  }
  v76 = 0;
  if (qword_1ECD98BF8 != -1)
    swift_once();
  v22 = sub_190CA8518();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ECD98BD8);
  sub_190C77C64(v1);
  sub_190C77C64(v1);
  v23 = sub_190CA8500();
  v24 = sub_190CA87DC();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_QWORD *)&v74 = v26;
    *(_DWORD *)v25 = 136446210;
    *(_QWORD *)&v70 = v25 + 4;
    sub_190C77C64(v1);
    v27 = sub_190C76418();
    v29 = v28;
    sub_190C77C8C(v1);
    *(_QWORD *)&v73[0] = sub_190C30058(v27, v29, (uint64_t *)&v74);
    sub_190CA88F0();
    swift_bridgeObjectRelease();
    sub_190C77C8C(v1);
    sub_190C77C8C(v1);
    _os_log_impl(&dword_190C25000, v23, v24, "Unable to resolve host app record for value query: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v26, -1, -1);
    MEMORY[0x19401889C](v25, -1, -1);
  }
  else
  {
    sub_190C77C8C(v1);
    sub_190C77C8C(v1);
  }

LABEL_22:
  v72 = MEMORY[0x1E0DEE9D8];
  sub_190C77C1C((uint64_t)v77, (uint64_t)v78);
  if (v78[1])
  {
    v30 = (void *)objc_opt_self();
    v31 = (void *)sub_190CA85D8();
    v32 = objc_msgSend(v30, sel_enumeratorForExtensionPointIdentifier_, v31);

    *(_QWORD *)&v70 = v32;
    sub_190CA87C4();
    swift_beginAccess();
    sub_190CA83F8();
    if (*((_QWORD *)&v75 + 1))
    {
      while (1)
      {
        sub_190C38F64(&v74, v73);
        sub_190C2B30C(0, (unint64_t *)&unk_1ECD98BB0);
        swift_dynamicCast();
        v34 = v71;
        if ((v4 & 1) != 0)
          break;
        v36 = objc_msgSend(v71, sel_parentAppRecord);
        v37 = v76;
        if (v36)
        {
          v33 = v36;
          if (!v76)
          {

            goto LABEL_27;
          }
          sub_190C2B30C(0, &qword_1EE20BAE0);
          v38 = v37;
          v39 = v33;
          v40 = sub_190CA88A8();

          if ((v40 & 1) != 0)
            break;
        }
        else if (!v76)
        {
          break;
        }
LABEL_26:
        v33 = v34;
LABEL_27:

        sub_190CA83F8();
        if (!*((_QWORD *)&v75 + 1))
          goto LABEL_39;
      }
      v35 = *(_DWORD *)(v1 + 16);
      if ((v35 + 1) < 2 || objc_msgSend(v34, sel_platform) == v35)
      {
        v33 = v34;
        MEMORY[0x194017510]();
        if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190CA86E0();
        sub_190CA86F8();
        sub_190CA86D4();
        goto LABEL_27;
      }
      goto LABEL_26;
    }
LABEL_39:
    (*(void (**)(char *, uint64_t))(v67 + 8))(v3, v68);
    if (v72 >> 62)
    {
      swift_bridgeObjectRetain();
      v41 = sub_190CA8AF4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v42 = (void *)v70;
    if (!v41)
    {
      if (qword_1ECD98BF8 != -1)
        swift_once();
      v43 = sub_190CA8518();
      __swift_project_value_buffer(v43, (uint64_t)qword_1ECD98BD8);
      sub_190C77C64(v1);
      sub_190C77C64(v1);
      v44 = sub_190CA8500();
      v45 = sub_190CA8800();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        *(_QWORD *)&v74 = v47;
        *(_DWORD *)v46 = 136446210;
        sub_190C77C64(v1);
        v48 = sub_190C76418();
        v50 = v49;
        sub_190C77C8C(v1);
        *(_QWORD *)&v73[0] = sub_190C30058(v48, v50, (uint64_t *)&v74);
        sub_190CA88F0();
        swift_bridgeObjectRelease();
        sub_190C77C8C(v1);
        sub_190C77C8C(v1);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v47, -1, -1);
        MEMORY[0x19401889C](v46, -1, -1);

        goto LABEL_55;
      }
      sub_190C77C8C(v1);
      sub_190C77C8C(v1);

    }
    goto LABEL_55;
  }
  swift_beginAccess();
  v51 = v76;
  if (v76)
  {
    v52 = qword_1ECD98BF8;
    v53 = v76;
    if (v52 != -1)
      swift_once();
    v54 = sub_190CA8518();
    __swift_project_value_buffer(v54, (uint64_t)qword_1ECD98BD8);
    v55 = v53;
    v56 = sub_190CA8500();
    v57 = sub_190CA8800();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v58 = 138543362;
      *(_QWORD *)&v73[0] = v55;
      v60 = v55;
      sub_190CA88F0();
      *v59 = v51;

      _os_log_impl(&dword_190C25000, v56, v57, "Enumerating all available extensions for host: %{public}@", v58, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v59, -1, -1);
      MEMORY[0x19401889C](v58, -1, -1);
    }
    else
    {

      v56 = v55;
    }

    v61 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithParentApplicationRecord_, v55);
    v62 = objc_msgSend(v61, sel_allObjects);
    v63 = sub_190CA86BC();

    v64 = sub_190C882DC(v63);
    swift_bridgeObjectRelease();
    sub_190C7FB50(v64);

  }
LABEL_55:
  v65 = v72;

  return v65;
}

unint64_t sub_190C76418()
{
  uint64_t v0;
  _DWORD v2[4];
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  v3 = 0xD00000000000001ALL;
  v4 = 0x8000000190CB4CA0;
  sub_190C77C1C(v0, (uint64_t)v5);
  sub_190C77C1C((uint64_t)v5, (uint64_t)v2);
  sub_190C77C64(v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98C18);
  sub_190CA8620();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  v2[0] = *(_DWORD *)(v0 + 16);
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_190C76528()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_190C76554(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t sub_190C76588()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 20);
}

uint64_t sub_190C7659C()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t sub_190C765A4(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  return result;
}

unint64_t sub_190C765AC()
{
  return sub_190C75944();
}

void sub_190C765EC(void *a1)
{
  sub_190C75860(a1);
}

unint64_t sub_190C7662C()
{
  return sub_190C76418();
}

uint64_t sub_190C7666C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_identifier);
  v2 = sub_190CA85F0();

  return v2;
}

void sub_190C766C0()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  swift_bridgeObjectRelease();
  if (qword_1EE20ADE8 != -1)
    swift_once();
  v0 = sub_190CA8518();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE20AE20);
  oslog = sub_190CA8500();
  v1 = sub_190CA87E8();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    MEMORY[0x19401889C](v2, -1, -1);
  }

}

uint64_t sub_190C76794()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

id sub_190C767A0()
{
  id *v0;

  return objc_msgSend(*v0, sel_platform);
}

void sub_190C767B0()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1EE20ADE8 != -1)
    swift_once();
  v0 = sub_190CA8518();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE20AE20);
  oslog = sub_190CA8500();
  v1 = sub_190CA87E8();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    MEMORY[0x19401889C](v2, -1, -1);
  }

}

uint64_t sub_190C7687C()
{
  void **v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v5;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190CADDD0;
  *(_QWORD *)(v2 + 32) = v1;
  v5 = v2;
  sub_190CA86D4();
  v3 = v1;
  return v5;
}

void sub_190C768E8(void *a1)
{
  id *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;

  v3 = objc_msgSend(*v1, sel_persistentIdentifier);
  v4 = sub_190CA8488();
  v6 = v5;
  v7 = (void *)sub_190CA8470();
  sub_190C32568(v4, v6);

  v8 = (id)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

}

void sub_190C76B44(uint64_t a1, uint64_t a2)
{
  id v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20BCB8);
  v3 = (id)sub_190CA86B0();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);

}

uint64_t sub_190C76C1C(unint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v3 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20BCB8);
    v5 = sub_190CA8AE8();
    swift_bridgeObjectRelease();
    v3 = v5;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_190CA8BD8();
  }
  a2(v3);
  return swift_bridgeObjectRelease();
}

id sub_190C76D64(uint64_t a1, uint64_t a2, int a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _BYTE *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  id v16;
  unsigned __int8 v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  objc_super v27;

  v8 = a7;
  v9 = a6;
  v10 = a5;
  v11 = a4;
  v23 = HIDWORD(a4);
  v24 = HIDWORD(a5);
  v25 = HIDWORD(a6);
  v26 = HIDWORD(a7);
  *(_QWORD *)&v7[OBJC_IVAR____EXQuery_resultType] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____EXQuery_predicate] = 0;
  v7[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
  v13 = OBJC_IVAR____EXQuery_allowsDuplicates;
  v14 = (void *)objc_opt_self();
  v15 = v7;
  v16 = objc_msgSend(v14, sel_sharedInstance);
  v17 = objc_msgSend(v16, sel_queryAllowsDuplicates);

  v7[v13] = v17;
  v15[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
  v18 = (uint64_t *)&v15[OBJC_IVAR____EXQuery_inner];
  v18[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
  v18[4] = (uint64_t)&off_1E2CFBA00;
  v19 = swift_allocObject();
  *v18 = v19;
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_DWORD *)(v19 + 32) = a3;
  *(_DWORD *)(v19 + 36) = v11;
  *(_DWORD *)(v19 + 40) = v23;
  *(_DWORD *)(v19 + 44) = v10;
  *(_DWORD *)(v19 + 48) = v24;
  *(_DWORD *)(v19 + 52) = v9;
  *(_DWORD *)(v19 + 56) = v25;
  *(_DWORD *)(v19 + 60) = v8;
  *(_DWORD *)(v19 + 64) = v26;

  v27.receiver = v15;
  v27.super_class = (Class)type metadata accessor for _EXQuery();
  return objc_msgSendSuper2(&v27, sel_init);
}

id sub_190C76EE0(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  void *v4;
  _BYTE *v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  __int128 *v9;
  uint64_t *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  objc_super v15;

  *(_QWORD *)&v1[OBJC_IVAR____EXQuery_resultType] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____EXQuery_predicate] = 0;
  v1[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
  v3 = OBJC_IVAR____EXQuery_allowsDuplicates;
  v4 = (void *)objc_opt_self();
  v5 = v1;
  v6 = objc_msgSend(v4, sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_queryAllowsDuplicates);

  v1[v3] = v7;
  v5[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
  v8 = a1;
  v9 = (__int128 *)_EXAuditTokenForCurrentProcess();
  v10 = (uint64_t *)&v5[OBJC_IVAR____EXQuery_inner];
  v11 = swift_allocObject();
  v12 = *v9;
  v13 = v9[1];
  v10[3] = (uint64_t)&type metadata for _EXQuery.RecordQuery;
  v10[4] = (uint64_t)&off_1E2CFB920;
  *v10 = v11;
  *(_QWORD *)(v11 + 16) = v8;
  *(_OWORD *)(v11 + 24) = v12;
  *(_OWORD *)(v11 + 40) = v13;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for _EXQuery();
  return objc_msgSendSuper2(&v15, sel_init);
}

void sub_190C7700C(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  void *v5;
  unint64_t v6;
  void *v7;
  id v8;
  id v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  sub_190C2B30C(0, (unint64_t *)&unk_1EE20AEE0);
  v4 = (void *)sub_190CA8878();
  if (v4)
  {
    v13 = 0uLL;
    sub_190CA85E4();

    v4 = 0;
  }
  swift_bridgeObjectRetain();
  v5 = (void *)sub_190CA85D8();
  v6 = (unint64_t)objc_msgSend(a1, sel_decodeIntegerForKey_, v5);

  if ((v6 & 0x8000000000000000) != 0 || HIDWORD(v6))
  {
    sub_190CA8AD0();
    __break(1u);
  }
  else
  {
    objc_opt_self();
    v7 = (void *)swift_dynamicCastObjCClass();
    if (v7 && (v8 = objc_msgSend(v7, sel_connection)) != 0)
    {
      v9 = v8;
      objc_msgSend(v8, sel_auditToken);
      v11 = v14;
      v12 = v13;
      swift_bridgeObjectRelease();

      a1 = v9;
    }
    else
    {
      v10 = (__int128 *)_EXAuditTokenForCurrentProcess();
      v11 = v10[1];
      v12 = *v10;
      swift_bridgeObjectRelease();
    }

    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 20) = v12;
    *(_OWORD *)(a2 + 36) = v11;
  }
}

void sub_190C77220(void *a1)
{
  uint64_t v2;
  void *v3;

  sub_190C2B30C(0, &qword_1EE20ADB0);
  v2 = sub_190CA8878();
  if (v2)
  {
    v3 = (void *)v2;
    sub_190CA847C();

  }
  objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();

}

id sub_190C77420(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _BYTE *v7;
  id v8;
  unsigned __int8 v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  void *v13;
  unsigned __int8 v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;
  objc_class *v18;
  id result;
  objc_super v20;
  __int128 v21[2];

  v3 = OBJC_IVAR____EXQuery_resultType;
  *(_QWORD *)&v1[OBJC_IVAR____EXQuery_resultType] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____EXQuery_predicate] = 0;
  v4 = OBJC_IVAR____EXQuery_includePostprocessing;
  v1[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
  v5 = OBJC_IVAR____EXQuery_allowsDuplicates;
  v6 = (void *)objc_opt_self();
  v7 = v1;
  v8 = objc_msgSend(v6, sel_sharedInstance);
  v9 = objc_msgSend(v8, sel_queryAllowsDuplicates);

  v1[v5] = v9;
  v10 = OBJC_IVAR____EXQuery_excludeLockedApps;
  v7[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
  v11 = (void *)sub_190CA85D8();
  v12 = (unint64_t)objc_msgSend(a1, sel_decodeIntegerForKey_, v11);

  if ((v12 & 0x8000000000000000) != 0)
  {
    sub_190CA8AD0();
    __break(1u);
    result = (id)swift_unexpectedError();
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v1[v3] = v12;
    v13 = (void *)sub_190CA85D8();
    v14 = objc_msgSend(a1, sel_decodeBoolForKey_, v13);

    v1[v5] = v14;
    v15 = (void *)sub_190CA85D8();
    v16 = objc_msgSend(a1, sel_decodeBoolForKey_, v15);

    v1[v4] = v16;
    v17 = (void *)sub_190CA85D8();
    LOBYTE(v15) = objc_msgSend(a1, sel_decodeBoolForKey_, v17);

    v7[v10] = (_BYTE)v15;
    v18 = (objc_class *)type metadata accessor for _EXQuery();
    sub_190C74B18(a1, (uint64_t *)v21);
    sub_190C6A2A8(v21, (uint64_t)&v7[OBJC_IVAR____EXQuery_inner]);

    v20.receiver = v7;
    v20.super_class = v18;
    return objc_msgSendSuper2(&v20, sel_init);
  }
  return result;
}

uint64_t type metadata accessor for _EXQuery()
{
  return objc_opt_self();
}

uint64_t method lookup function for _EXQuery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _EXQuery.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of _EXQuery.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t dispatch thunk of _EXQuery.copy(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t sub_190C77704(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_190C7770C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_190C77714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_190C7771C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_190C77724(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_190C7772C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_190C77734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_190C7773C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_190C77744(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))() & 1;
}

uint64_t sub_190C77768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_190C77780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_190C77788()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_190C777AC(uint64_t a1)
{
  uint64_t v1;

  sub_190C76B44(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_190C777B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C777D8(unint64_t a1)
{
  uint64_t v1;

  return sub_190C76C1C(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_190C77818()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190C7783C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t initializeWithCopy for _EXQuery.RecordQuery(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for _EXQuery.RecordQuery(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for _EXQuery.RecordQuery(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for _EXQuery.RecordQuery(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _EXQuery.RecordQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _EXQuery.RecordQuery()
{
  return &type metadata for _EXQuery.RecordQuery;
}

uint64_t initializeWithCopy for _EXQuery.ValuesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 20) = *(_OWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for _EXQuery.ValuesQuery(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy52_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _EXQuery.ValuesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for _EXQuery.ValuesQuery(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 52))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _EXQuery.ValuesQuery(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 52) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 52) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _EXQuery.ValuesQuery()
{
  return &type metadata for _EXQuery.ValuesQuery;
}

uint64_t sub_190C77C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190C77C64(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190C77C8C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

id sub_190C77CC8()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  objc_super v8;

  *(_QWORD *)&v0[OBJC_IVAR____EXHostConfiguration__extensionIdentity] = 0;
  v1 = &v0[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = MEMORY[0x1E0DEE9E0];
  v2 = &v0[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____EXHostConfiguration_launchPersona] = 0;
  v3 = OBJC_IVAR____EXHostConfiguration_assertionAttributes;
  v4 = v0;
  *(_QWORD *)&v0[v3] = sub_190C39FF0();
  v4[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = 0;
  v5 = &v4[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
  v6 = sub_190CA8548();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);

  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for _EXHostConfiguration();
  return objc_msgSendSuper2(&v8, sel_init);
}

id _EXHostConfiguration.__allocating_init(with:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
  v5 = sub_190C39EB8(a1, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

char *sub_190C77E74(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int *v23;
  char *v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  char *v31;
  char *v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - v6;
  v8 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190CA84E8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v31 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(id *)a1;
  objc_opt_self();
  v15 = (void *)swift_dynamicCastObjCClassUnconditional();
  v16 = objc_allocWithZone(v1);
  v17 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
  v18 = (char *)sub_190C39EB8(v15, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v19 = *(_QWORD *)(a1 + 16);
  v20 = &v18[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  v21 = *(_QWORD *)&v18[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  *(_QWORD *)v20 = *(_QWORD *)(a1 + 8);
  *((_QWORD *)v20 + 1) = v19;
  v22 = v18;
  swift_retain();
  sub_190C2FC70(v21);
  v23 = (int *)type metadata accessor for AppExtensionProcess.Configuration(0);
  sub_190C3A498(a1 + v23[6], (uint64_t)v10);
  sub_190C3CB84((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1ECD98DB0);
  sub_190C2BA04((uint64_t)v10, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
    sub_190C38990((uint64_t)v7, (uint64_t *)&unk_1ECD98DB0);
  }
  else
  {
    v24 = v31;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v31, v7, v11);
    v25 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v32, v24, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    v26 = objc_allocWithZone((Class)type metadata accessor for _EXExtensionInstanceIdentifier());
    v27 = _EXExtensionInstanceIdentifier.init(instanceIdentifier:)(v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
    v28 = *(void **)&v22[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
    *(_QWORD *)&v22[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = v27;

  }
  v22[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = *(_BYTE *)(a1 + v23[7]);
  v29 = *(_QWORD *)(a1 + v23[8]);
  swift_bridgeObjectRetain();
  sub_190C2BA04(a1, type metadata accessor for AppExtensionProcess.Configuration);
  *(_QWORD *)&v22[OBJC_IVAR____EXHostConfiguration_assertionAttributes] = v29;

  swift_bridgeObjectRelease();
  return v22;
}

id _EXHostConfiguration.init(with:)(void *a1)
{
  id v2;
  id v3;

  v2 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
  v3 = sub_190C39EB8(a1, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

id _EXHostConfiguration.__allocating_init(with:instanceIdentifier:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_190C39EB8(a1, a2);

  return v6;
}

id _EXHostConfiguration.init(with:instanceIdentifier:)(void *a1, void *a2)
{
  id v4;

  v4 = sub_190C39EB8(a1, a2);

  return v4;
}

uint64_t sub_190C787EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  void *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)(v1 + OBJC_IVAR____EXHostConfiguration__extensionIdentity);
  if (v8)
  {
    v9 = *(void **)(v1 + OBJC_IVAR____EXHostConfiguration_instanceIdentifier);
    v10 = (objc_class *)type metadata accessor for _EXHostConfiguration();
    v11 = objc_allocWithZone(v10);
    v12 = v9;
    v13 = v8;
    v14 = sub_190C39EB8(v13, v9);

    v15 = *(_QWORD *)(v2 + OBJC_IVAR____EXHostConfiguration_interruptionHandler);
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____EXHostConfiguration_interruptionHandler + 8);
    v17 = (uint64_t *)&v14[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
    v18 = *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
    *v17 = v15;
    v17[1] = v16;
    sub_190C2FA88(v15);
    sub_190C2FC70(v18);
    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = *(_QWORD *)(v2
                                                                                     + OBJC_IVAR____EXHostConfiguration_preferredLanguages);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = *(_QWORD *)(v2
                                                                                                 + OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = *(void **)(v2 + OBJC_IVAR____EXHostConfiguration_launchPersona);
    v20 = *(void **)&v14[OBJC_IVAR____EXHostConfiguration_launchPersona];
    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_launchPersona] = v19;
    v21 = v19;

    *(_QWORD *)&v14[OBJC_IVAR____EXHostConfiguration_assertionAttributes] = *(_QWORD *)(v2
                                                                                      + OBJC_IVAR____EXHostConfiguration_assertionAttributes);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = *(_BYTE *)(v2
                                                                         + OBJC_IVAR____EXHostConfiguration_requireInvalidation);
    v22 = v2 + OBJC_IVAR____EXHostConfiguration_networkApplicationID;
    swift_beginAccess();
    sub_190C3CB84(v22, (uint64_t)v7, &qword_1ECD98D60);
    v23 = (uint64_t)&v14[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
    swift_beginAccess();
    sub_190C683B0((uint64_t)v7, v23);
    result = swift_endAccess();
    a1[3] = v10;
    *a1 = v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190C78A94()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  void *v7;
  id v8;
  id v9;
  id v10;
  objc_super v11;
  uint64_t v12;
  unint64_t v13;

  v1 = v0;
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_190CA89D4();
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for _EXHostConfiguration();
  v2 = objc_msgSendSuper2(&v11, sel_description);
  v3 = sub_190CA85F0();
  v5 = v4;
  swift_bridgeObjectRelease();

  v12 = v3;
  v13 = v5;
  result = sub_190CA8644();
  v7 = *(void **)&v0[OBJC_IVAR____EXHostConfiguration__extensionIdentity];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v8, sel_description);
    sub_190CA85F0();

    sub_190CA8644();
    swift_bridgeObjectRelease();
    sub_190CA8644();
    v10 = *(id *)&v1[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C50);
    sub_190CA8620();
    sub_190CA8644();
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id _EXHostConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXHostConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190C78C7C()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t result;
  id v21;

  v1 = getpid();
  v2 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, v1);
  if (qword_1EE20ADE8 != -1)
    swift_once();
  v3 = sub_190CA8518();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE20AE20);
  v4 = v0;
  v5 = v2;
  v6 = v4;
  v7 = v5;
  v8 = sub_190CA8500();
  v9 = sub_190CA8800();
  if (os_log_type_enabled(v8, v9))
  {
    v21 = v2;
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138543618;
    v12 = v6;
    sub_190CA88F0();
    *v11 = v6;

    *(_WORD *)(v10 + 12) = 2114;
    if (v7)
    {
      v13 = v7;
      sub_190CA88F0();
      v14 = v21;
    }
    else
    {
      sub_190CA88F0();
      v14 = 0;
    }
    v11[1] = v14;

    _os_log_impl(&dword_190C25000, v8, v9, "Vending RBSProcessIdentity for: %{public}@ with host: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v11, -1, -1);
    MEMORY[0x19401889C](v10, -1, -1);

  }
  else
  {

  }
  if (v7)
  {
    v15 = (char *)v6;
    v16 = v7;
    v17 = (void *)sub_190C354BC(v15);
    v18 = objc_msgSend(v17, sel_rbsProcessIdentityWithHost_, v16);
    if (!v18)
      __break(1u);
    v19 = v18;

    return (uint64_t)v19;
  }
  else
  {
    result = sub_190CA8ADC();
    __break(1u);
  }
  return result;
}

uint64_t sub_190C78F84()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t result;
  id v6;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = (void *)v1;
    v3 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
    v4 = sub_190C39EB8(v2, 0);
    swift_unknownObjectRelease();
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v4;
  }
  else
  {
    v6 = v0;
    sub_190CA89D4();
    sub_190CA8644();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20BCB8);
    sub_190CA8A94();
    result = sub_190CA8ADC();
    __break(1u);
  }
  return result;
}

void sub_190C791C4()
{
  char *v0;
  uint64_t v1;
  void *v2;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____EXHostConfiguration__extensionIdentity];
    *(_QWORD *)&v0[OBJC_IVAR____EXHostConfiguration__extensionIdentity] = v1;

  }
  else
  {
    sub_190CA89D4();
    sub_190CA8644();
    objc_msgSend(v0, sel_extension);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20BCB8);
    sub_190CA8A94();
    swift_unknownObjectRelease();
    sub_190CA8ADC();
    __break(1u);
  }
}

uint64_t sub_190C792E0()
{
  return type metadata accessor for _EXHostConfiguration();
}

void sub_190C792E8()
{
  unint64_t v0;

  sub_190C793BC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for _EXHostConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _EXHostConfiguration.__allocating_init(with:instanceIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of _EXHostConfiguration.copy(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

void sub_190C793BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECD98D68)
  {
    sub_190CA8548();
    v0 = sub_190CA88D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECD98D68);
  }
}

uint64_t sub_190C79410(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t result;

  v3 = v2;
  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    v6 = v5;
    swift_unknownObjectRetain();
    v7 = objc_msgSend(v3, sel_initWithExtensionIdentity_instanceIdentifier_, v6, a2);
    swift_unknownObjectRelease();

    return (uint64_t)v7;
  }
  else
  {
    sub_190CA89D4();
    sub_190CA8644();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20BCB8);
    sub_190CA8A94();
    result = sub_190CA8ADC();
    __break(1u);
  }
  return result;
}

unint64_t sub_190C7953C()
{
  unint64_t result;

  result = qword_1EE20A2C8;
  if (!qword_1EE20A2C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE20A2C8);
  }
  return result;
}

uint64_t sub_190C79578()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_190C7959C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17[6];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_190CA8938();
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    sub_190C6D7B8();
    sub_190CA8788();
    v1 = (unint64_t)v17[1];
    v16 = v17[2];
    v2 = (uint64_t)v17[3];
    v3 = v17[4];
    v4 = (unint64_t)v17[5];
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = (_QWORD *)(a1 + 56);
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | ((_QWORD)v3 << 6);
      v11 = (char *)v3;
      goto LABEL_29;
    }
    v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      goto LABEL_32;
    v14 = v16[v13];
    v11 = (char *)v3 + 1;
    if (!v14)
    {
      v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8)
        goto LABEL_32;
      v14 = v16[(_QWORD)v11];
      if (!v14)
      {
        v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8)
          goto LABEL_32;
        v14 = v16[(_QWORD)v11];
        if (!v14)
        {
          v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8)
            goto LABEL_32;
          v14 = v16[(_QWORD)v11];
          if (!v14)
          {
            v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8)
              goto LABEL_32;
            v14 = v16[(_QWORD)v11];
            if (!v14)
            {
              v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                v14 = v16[(_QWORD)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_190C6D7B0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((_QWORD)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_32;
    while (1)
    {
      sub_190C8F5A0(v17, v12);

      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_190CA895C())
      {
        sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17[0];
        swift_unknownObjectRelease();
        v11 = (char *)v3;
        v9 = v4;
        if (v12)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_190C79838(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_190C79888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v5[40];
  _BYTE v6[40];

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  sub_190CA898C();
  swift_beginAccess();
  sub_190C8FAA8((uint64_t)v6, (uint64_t)v5);
  sub_190C7E850((uint64_t)v6);
  return swift_endAccess();
}

uint64_t sub_190C79940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v5[40];
  _BYTE v6[40];

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_BYTE *))(v2 + 16))((_BYTE *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  sub_190CA898C();
  swift_beginAccess();
  sub_190C93BF0((uint64_t)v5, (uint64_t)v6);
  sub_190C7E850((uint64_t)v5);
  sub_190C38990((uint64_t)v6, (uint64_t *)&unk_1EE20BE80);
  return swift_endAccess();
}

uint64_t sub_190C79A08()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14[40];
  _OWORD v15[2];
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v20 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_190C9A1A8(0, v2, 0);
  result = sub_190C95940(v1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v1 + 32))
  {
    if (((*(_QWORD *)(v1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(v1 + 36) != (_DWORD)v7)
      goto LABEL_16;
    sub_190C7E814(*(_QWORD *)(v1 + 48) + 40 * v5, (uint64_t)v17);
    v15[0] = v17[0];
    v15[1] = v17[1];
    v16 = v18;
    sub_190C7E814((uint64_t)v15, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C3A0);
    swift_dynamicCast();
    sub_190C7E850((uint64_t)v15);
    v3 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_190C9A1A8(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v3 = v20;
    }
    v11 = *(_QWORD *)(v3 + 16);
    v10 = *(_QWORD *)(v3 + 24);
    if (v11 >= v10 >> 1)
    {
      sub_190C9A1A8(v10 > 1, v11 + 1, 1);
      v3 = v20;
    }
    *(_QWORD *)(v3 + 16) = v11 + 1;
    sub_190C6A2A8(&v19, v3 + 40 * v11 + 32);
    result = sub_190C95A24(v5, v7, v9 & 1, v1);
    v5 = result;
    v7 = v12;
    v9 = v13 & 1;
    if (!--v2)
    {
      sub_190C7E884(result, v12, v13 & 1);
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_190C79C08()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_190C79C2C()
{
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong();
  swift_unknownObjectWeakAssign();

}

uint64_t sub_190C79D50(uint64_t a1)
{
  char *v1;
  id v2;
  char v3;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_190C6F4D4(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_190C38990((uint64_t)v6, &qword_1ECD98D20);
    goto LABEL_6;
  }
  type metadata accessor for _EXActiveClientQuery();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    v3 = 0;
    return v3 & 1;
  }
  if (v5 == v1)
  {

    v3 = 1;
  }
  else
  {
    sub_190C2B30C(0, (unint64_t *)&unk_1ECD98C20);
    v2 = *(id *)&v5[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query];
    v3 = sub_190CA88A8();

  }
  return v3 & 1;
}

id sub_190C79EF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXActiveClientQuery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _EXActiveClientQuery()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _EXActiveClientQuery.ServiceClientObserverSet()
{
  return objc_opt_self();
}

id sub_190C79FC4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXServiceClient()), sel_init);
  qword_1EE20DF28 = (uint64_t)result;
  return result;
}

id sub_190C7A030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____EXServiceClient_connectionLock) + 16);
  os_unfair_lock_lock(v5);
  v6 = OBJC_IVAR____EXServiceClient__discoveryConnection;
  v7 = *(void **)(v1 + OBJC_IVAR____EXServiceClient__discoveryConnection);
  if (v7)
  {
    v8 = v7;
    os_unfair_lock_unlock(v5);
    return v8;
  }
  v10 = sub_190CA84E8();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v4, 1, 1, v10);
  v12 = (void *)sub_190CA85D8();
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) != 1)
  {
    v13 = (void *)sub_190CA84A0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  v14 = (void *)sub_190CA85D8();
  v15 = objc_msgSend((id)objc_opt_self(), sel_endpointForServiceName_oneshot_service_instance_, v12, v13, v14, 0);

  if (!v15)
  {
    if (qword_1EE20ADE8 != -1)
      swift_once();
    v26 = sub_190CA8518();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE20AE20);
    v27 = sub_190CA8500();
    v28 = sub_190CA87F4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      aBlock = v30;
      *(_DWORD *)v29 = 136446466;
      v38 = sub_190C30058(0xD00000000000001DLL, 0x8000000190CB5330, &aBlock);
      sub_190CA88F0();
      *(_WORD *)(v29 + 12) = 2082;
      v38 = sub_190C30058(0x7265766F63736944, 0xE900000000000079, &aBlock);
      sub_190CA88F0();
      swift_arrayDestroy();
      MEMORY[0x19401889C](v30, -1, -1);
      MEMORY[0x19401889C](v29, -1, -1);
    }

    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3B38]), sel_init);
    goto LABEL_14;
  }
  v16 = (void *)objc_opt_self();
  v36 = nullsub_1;
  v37 = 0;
  v17 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v33 = 1107296256;
  v34 = sub_190C28AF8;
  v35 = &block_descriptor_106;
  v18 = _Block_copy(&aBlock);
  swift_release();
  v19 = objc_msgSend(v16, sel_NSXPCConnectionWithEndpoint_configurator_, v15, v18);
  _Block_release(v18);
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (qword_1EE20B7F0 != -1)
LABEL_16:
    swift_once();
  objc_msgSend(v19, sel_setRemoteObjectInterface_, qword_1EE20E3D8);
  v20 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v36 = (uint64_t (*)())sub_190C7E7EC;
  v37 = v20;
  aBlock = v17;
  v33 = 1107296256;
  v34 = sub_190C2A3B4;
  v35 = &block_descriptor_110;
  v21 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v19, sel_setInterruptionHandler_, v21);
  _Block_release(v21);
  v22 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v36 = sub_190C7E7F4;
  v37 = v22;
  aBlock = v17;
  v33 = 1107296256;
  v34 = sub_190C2A3B4;
  v35 = &block_descriptor_114;
  v23 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v19, sel_setInvalidationHandler_, v23);
  _Block_release(v23);
  v24 = *(void **)(v1 + v6);
  *(_QWORD *)(v1 + v6) = v19;
  v25 = v19;

  objc_msgSend(v25, sel_activate);
LABEL_14:
  os_unfair_lock_unlock(v5);
  return v25;
}

void sub_190C7A578(uint64_t a1)
{
  char *Strong;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  char *v7;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v3 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v3 + 4);
  sub_190C7AC00(v4, a1, &OBJC_IVAR____EXServiceClient__discoveryConnection);
  os_unfair_lock_unlock(v3 + 4);
  swift_release();
  v7 = (char *)swift_unknownObjectUnownedLoadStrong();
  v5 = (os_unfair_lock_s *)(*(_QWORD *)&v7[OBJC_IVAR____EXServiceClient_activeQueriesLock] + 16);
  os_unfair_lock_lock(v5);
  sub_190C7AFAC(v6, (uint64_t)v7);
  os_unfair_lock_unlock(v5);

}

id sub_190C7A63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____EXServiceClient_connectionLock) + 16);
  os_unfair_lock_lock(v5);
  v6 = OBJC_IVAR____EXServiceClient__tccProxyConnection;
  v7 = *(void **)(v1 + OBJC_IVAR____EXServiceClient__tccProxyConnection);
  if (v7)
  {
    v8 = v7;
    os_unfair_lock_unlock(v5);
    return v8;
  }
  v10 = sub_190CA84E8();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v4, 1, 1, v10);
  v12 = (void *)sub_190CA85D8();
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) != 1)
  {
    v13 = (void *)sub_190CA84A0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  v14 = (void *)sub_190CA85D8();
  v15 = objc_msgSend((id)objc_opt_self(), sel_endpointForServiceName_oneshot_service_instance_, v12, v13, v14, 0);

  if (!v15)
  {
    if (qword_1EE20ADE8 != -1)
      swift_once();
    v26 = sub_190CA8518();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE20AE20);
    v27 = sub_190CA8500();
    v28 = sub_190CA87F4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      aBlock = v30;
      *(_DWORD *)v29 = 136446466;
      v38 = sub_190C30058(0xD00000000000001DLL, 0x8000000190CB5330, &aBlock);
      sub_190CA88F0();
      *(_WORD *)(v29 + 12) = 2082;
      v38 = sub_190C30058(0x79786F7250434354, 0xE800000000000000, &aBlock);
      sub_190CA88F0();
      swift_arrayDestroy();
      MEMORY[0x19401889C](v30, -1, -1);
      MEMORY[0x19401889C](v29, -1, -1);
    }

    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3B38]), sel_init);
    goto LABEL_14;
  }
  v16 = (void *)objc_opt_self();
  v36 = nullsub_1;
  v37 = 0;
  v17 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v33 = 1107296256;
  v34 = sub_190C28AF8;
  v35 = &block_descriptor_95;
  v18 = _Block_copy(&aBlock);
  swift_release();
  v19 = objc_msgSend(v16, sel_NSXPCConnectionWithEndpoint_configurator_, v15, v18);
  _Block_release(v18);
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (qword_1EE20B800 != -1)
LABEL_16:
    swift_once();
  objc_msgSend(v19, sel_setRemoteObjectInterface_, qword_1EE20E3E0);
  v20 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v36 = sub_190C7E7AC;
  v37 = v20;
  aBlock = v17;
  v33 = 1107296256;
  v34 = sub_190C2A3B4;
  v35 = &block_descriptor_99;
  v21 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v19, sel_setInterruptionHandler_, v21);
  _Block_release(v21);
  v22 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v36 = sub_190C7E7CC;
  v37 = v22;
  aBlock = v17;
  v33 = 1107296256;
  v34 = sub_190C2A3B4;
  v35 = &block_descriptor_103;
  v23 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v19, sel_setInvalidationHandler_, v23);
  _Block_release(v23);
  v24 = *(void **)(v1 + v6);
  *(_QWORD *)(v1 + v6) = v19;
  v25 = v19;

  objc_msgSend(v25, sel_activate);
LABEL_14:
  os_unfair_lock_unlock(v5);
  return v25;
}

uint64_t sub_190C7AB7C(uint64_t a1, uint64_t *a2)
{
  char *Strong;
  os_unfair_lock_s *v5;
  uint64_t v6;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v5 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v5 + 4);
  sub_190C7AC00(v6, a1, a2);
  os_unfair_lock_unlock(v5 + 4);
  return swift_release();
}

void sub_190C7AC00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  char *Strong;
  id v5;
  char *v6;
  uint64_t v7;
  void *v8;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v5 = *(id *)&Strong[*a3];

  objc_msgSend(v5, sel_invalidate);
  v6 = (char *)swift_unknownObjectUnownedLoadStrong();
  v7 = *a3;
  v8 = *(void **)&v6[*a3];
  *(_QWORD *)&v6[v7] = 0;

}

uint64_t sub_190C7AC88(uint64_t a1, uint64_t *a2)
{
  char *Strong;
  os_unfair_lock_s *v4;
  char *v5;
  uint64_t v6;
  void *v7;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v4 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v4 + 4);
  v5 = (char *)swift_unknownObjectUnownedLoadStrong();
  v6 = *a2;
  v7 = *(void **)&v5[*a2];
  *(_QWORD *)&v5[v6] = 0;

  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

id sub_190C7AD08()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;
  uint64_t v18;

  v1 = sub_190CA8824();
  v15 = *(_QWORD *)(v1 - 8);
  v16 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_190CA8818();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_190CA856C();
  MEMORY[0x1E0C80A78](v6);
  v7 = OBJC_IVAR____EXServiceClient_connectionLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DD0);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(_QWORD *)&v0[v7] = v8;
  *(_QWORD *)&v0[OBJC_IVAR____EXServiceClient__discoveryConnection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____EXServiceClient__tccProxyConnection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____EXServiceClient__launchConnection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____EXServiceClient_activeQueries] = MEMORY[0x1E0DEE9E8];
  v9 = OBJC_IVAR____EXServiceClient_activeQueriesLock;
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)&v0[v9] = v10;
  v14 = OBJC_IVAR____EXServiceClient_notifyQueue;
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98E28);
  v11 = v0;
  sub_190CA8560();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_190C3A458((unint64_t *)&qword_1ECD98DF0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC8);
  sub_190C3A3D4((unint64_t *)&qword_1ECD98DE0, &qword_1ECD98DC8);
  sub_190CA8914();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v3, *MEMORY[0x1E0DEF8D0], v16);
  *(_QWORD *)&v0[v14] = sub_190CA8848();

  v12 = (objc_class *)type metadata accessor for _EXServiceClient();
  v17.receiver = v11;
  v17.super_class = v12;
  return objc_msgSendSuper2(&v17, sel_init);
}

void sub_190C7AFAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _BYTE *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _BYTE *v27;
  void *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v33;
  _BYTE *aBlock;
  uint64_t v35;
  void (*v36)(uint64_t, void *);
  void *v37;
  void (*v38)(void *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v2 = (uint64_t *)(a2 + OBJC_IVAR____EXServiceClient_activeQueries);
  swift_beginAccess();
  v3 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_190CA8938();
    type metadata accessor for _EXActiveClientQuery();
    sub_190C3A458(&qword_1EE20BE78, (uint64_t (*)(uint64_t))type metadata accessor for _EXActiveClientQuery, MEMORY[0x1E0DEFCF8]);
    sub_190CA8788();
    v3 = v40;
    v30 = v41;
    v4 = v42;
    v5 = v43;
    v6 = v44;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(v3 + 32);
    v30 = v3 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(v3 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v29 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    v13 = sub_190CA895C();
    if (!v13)
      goto LABEL_34;
    v33 = (void *)v13;
    type metadata accessor for _EXActiveClientQuery();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = aBlock;
    swift_unknownObjectRelease();
    v12 = v5;
    v10 = v6;
    if (!v14)
      goto LABEL_34;
LABEL_30:
    v18 = MEMORY[0x194018968](&v14[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_connection]);
    if (v18)
    {
      v19 = (void *)v18;
      swift_unknownObjectWeakAssign();
      objc_msgSend(v19, sel_invalidate);

    }
    v20 = OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started;
    v14[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started] = 0;
    os_unfair_lock_assert_owner((const os_unfair_lock *)(*(_QWORD *)(a2 + OBJC_IVAR____EXServiceClient_activeQueriesLock)
                                                       + 16));
    if ((v14[v20] & 1) == 0)
    {
      v21 = (void *)sub_190C7A030();
      v38 = sub_190C7C884;
      v39 = 0;
      v31 = v10;
      v22 = v3;
      v23 = (_BYTE *)MEMORY[0x1E0C809B0];
      aBlock = (_BYTE *)MEMORY[0x1E0C809B0];
      v35 = 1107296256;
      v36 = sub_190C79838;
      v37 = &block_descriptor_117;
      v24 = _Block_copy(&aBlock);
      v25 = objc_msgSend(v21, sel_remoteObjectProxyWithErrorHandler_, v24);
      _Block_release(v24);

      sub_190CA8908();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BE58);
      swift_dynamicCast();
      v14[v20] = 1;
      v26 = *(_QWORD *)&v14[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query];
      v27 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_xpcListener], sel_endpoint);
      v38 = sub_190C7CA50;
      v39 = 0;
      aBlock = v23;
      v3 = v22;
      v10 = v31;
      v35 = 1107296256;
      v36 = sub_190C7CC28;
      v37 = &block_descriptor_120;
      v28 = _Block_copy(&aBlock);
      objc_msgSend(v33, sel_beginExtensionsQuery_listenerEndpoint_reply_, v26, v27, v28);
      _Block_release(v28);

      swift_unknownObjectRelease();
      v14 = v27;
    }

    v5 = v12;
    v6 = v10;
  }
  if (v6)
  {
    v10 = (v6 - 1) & v6;
    v11 = __clz(__rbit64(v6)) | (v5 << 6);
    v12 = v5;
LABEL_29:
    v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v11);
    if (!v14)
      goto LABEL_34;
    goto LABEL_30;
  }
  v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v29)
      goto LABEL_34;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    v12 = v5 + 1;
    if (!v16)
    {
      v12 = v5 + 2;
      if (v5 + 2 >= v29)
        goto LABEL_34;
      v16 = *(_QWORD *)(v30 + 8 * v12);
      if (!v16)
      {
        v12 = v5 + 3;
        if (v5 + 3 >= v29)
          goto LABEL_34;
        v16 = *(_QWORD *)(v30 + 8 * v12);
        if (!v16)
        {
          v12 = v5 + 4;
          if (v5 + 4 >= v29)
            goto LABEL_34;
          v16 = *(_QWORD *)(v30 + 8 * v12);
          if (!v16)
          {
            v17 = v5 + 5;
            while (v29 != v17)
            {
              v16 = *(_QWORD *)(v30 + 8 * v17++);
              if (v16)
              {
                v12 = v17 - 1;
                goto LABEL_28;
              }
            }
LABEL_34:
            sub_190C6D7B0();
            return;
          }
        }
      }
    }
LABEL_28:
    v10 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

id sub_190C7B450(char *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD *v9;
  void *v10;
  id v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  void *v17;
  uint64_t aBlock;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD *v23;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  v3 = *(void **)&a1[OBJC_IVAR____EXQuery_predicate];
  v4 = v3;
  v5 = sub_190C7A030();
  v22 = sub_190C7B67C;
  v23 = 0;
  v6 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v19 = 1107296256;
  v20 = sub_190C79838;
  v21 = &block_descriptor_73;
  v7 = _Block_copy(&aBlock);
  v8 = objc_msgSend(v5, sel_synchronousRemoteObjectProxyWithErrorHandler_, v7);
  _Block_release(v7);

  sub_190CA8908();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BE58);
  swift_dynamicCast();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v3;
  v9[3] = a1;
  v9[4] = v2;
  v22 = sub_190C7E760;
  v23 = v9;
  aBlock = v6;
  v19 = 1107296256;
  v20 = sub_190C45C80;
  v21 = &block_descriptor_79;
  v10 = _Block_copy(&aBlock);
  v11 = v4;
  v12 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_extensionsWith_reply_, v12, v10);
  _Block_release(v10);
  swift_beginAccess();
  v13 = *(void **)(v2 + 16);
  if (v13)
    v14 = v13;
  else
    v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQueryResult()), sel_init);
  v15 = v14;

  swift_unknownObjectRelease();
  swift_release();
  return v15;
}

void sub_190C7B67C(void *a1)
{
  sub_190C7C890(a1, "Query failed with error: %{public}@");
}

void sub_190C7B688(char *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  void **v6;
  void *v7;
  char *v8;
  uint64_t v10;
  id v11;
  id v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  id v24;
  void *v25;
  NSObject *oslog;
  objc_super v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    v6 = (void **)(a5 + 16);
    if (a3
      && *(_QWORD *)&a1[OBJC_IVAR____EXQueryResult_identities]
      && !*(_QWORD *)(a4 + OBJC_IVAR____EXQuery_resultType))
    {
      v18 = a3;
      v19 = a1;
      v20 = swift_bridgeObjectRetain();
      v21 = sub_190C7E4D4(v20, v18);

      v22 = (objc_class *)type metadata accessor for _EXQueryResult();
      v23 = (char *)objc_allocWithZone(v22);
      *(_QWORD *)&v23[OBJC_IVAR____EXQueryResult_identities] = v21;
      *(_QWORD *)&v23[OBJC_IVAR____EXQueryResult_availablility] = 0;
      v27.receiver = v23;
      v27.super_class = v22;
      v24 = objc_msgSendSuper2(&v27, sel_init);

      swift_beginAccess();
      v25 = *v6;
      *v6 = v24;

    }
    else
    {
      swift_beginAccess();
      v7 = *v6;
      *v6 = a1;
      v8 = a1;

    }
  }
  else
  {
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v10 = sub_190CA8518();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ECD98BD8);
    v11 = a2;
    v12 = a2;
    oslog = sub_190CA8500();
    v13 = sub_190CA87E8();
    if (os_log_type_enabled(oslog, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138543362;
      if (a2)
      {
        v16 = a2;
        v17 = _swift_stdlib_bridgeErrorToNSError();
        v28 = v17;
        sub_190CA88F0();
      }
      else
      {
        v28 = 0;
        sub_190CA88F0();
        v17 = 0;
      }
      *v15 = v17;

      _os_log_impl(&dword_190C25000, oslog, v13, "Query failed with error: %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v15, -1, -1);
      MEMORY[0x19401889C](v14, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_190C7B99C(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD *v11;
  void *v12;
  id v13;
  void *v15;
  uint64_t aBlock;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD *v21;

  v6 = sub_190C7A030();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v20 = sub_190C7E9A8;
  v21 = (_QWORD *)v7;
  v8 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = sub_190C79838;
  v19 = &block_descriptor_60;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);

  sub_190CA8908();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BE58);
  swift_dynamicCast();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v20 = sub_190C7E9A4;
  v21 = v11;
  aBlock = v8;
  v17 = 1107296256;
  v18 = sub_190C45C80;
  v19 = &block_descriptor_67;
  v12 = _Block_copy(&aBlock);
  swift_retain();
  v13 = a1;
  swift_release();
  objc_msgSend(v15, sel_extensionsWith_reply_, v13, v12);
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

void sub_190C7BB64(void *a1, void (*a2)(void))
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t v13;

  if (qword_1ECD98BF8 != -1)
    swift_once();
  v4 = sub_190CA8518();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECD98BD8);
  v5 = a1;
  v6 = a1;
  v7 = sub_190CA8500();
  v8 = sub_190CA87E8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138543362;
    v11 = a1;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    sub_190CA88F0();
    *v10 = v13;

    _os_log_impl(&dword_190C25000, v7, v8, "Query failed with error: %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v10, -1, -1);
    MEMORY[0x19401889C](v9, -1, -1);
  }
  else
  {

  }
  v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQueryResult()), sel_init);
  a2();

}

void sub_190C7BD3C(char *a1, void *a2, uint64_t a3, void (*a4)(void))
{
  void *v6;
  char *v7;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  objc_super v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    v6 = *(void **)(a3 + OBJC_IVAR____EXQuery_predicate);
    if (v6
      && *(_QWORD *)&a1[OBJC_IVAR____EXQueryResult_identities]
      && !*(_QWORD *)(a3 + OBJC_IVAR____EXQuery_resultType))
    {
      v18 = v6;
      v19 = a1;
      v20 = swift_bridgeObjectRetain();
      v21 = sub_190C7E4D4(v20, v18);

      v22 = (objc_class *)type metadata accessor for _EXQueryResult();
      v23 = (char *)objc_allocWithZone(v22);
      *(_QWORD *)&v23[OBJC_IVAR____EXQueryResult_identities] = v21;
      *(_QWORD *)&v23[OBJC_IVAR____EXQueryResult_availablility] = 0;
      v29.receiver = v23;
      v29.super_class = v22;
      v24 = objc_msgSendSuper2(&v29, sel_init);
      if (objc_msgSend(v24, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
      {
        v25 = (id)swift_dynamicCastClassUnconditional();
        ((void (*)(id))a4)(v25);

      }
      else
      {
        v27 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
        swift_willThrow();
        swift_unexpectedError();
        __break(1u);
      }
    }
    else
    {
      v28 = v6;
      v7 = a1;
      a4();

    }
  }
  else
  {
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v9 = sub_190CA8518();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ECD98BD8);
    v10 = a2;
    v11 = a2;
    v12 = sub_190CA8500();
    v13 = sub_190CA87E8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138543362;
      if (a2)
      {
        v16 = a2;
        v17 = _swift_stdlib_bridgeErrorToNSError();
        v30 = v17;
        sub_190CA88F0();
      }
      else
      {
        v30 = 0;
        sub_190CA88F0();
        v17 = 0;
      }
      *v15 = v17;

      _os_log_impl(&dword_190C25000, v12, v13, "Query failed with error: %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v15, -1, -1);
      MEMORY[0x19401889C](v14, -1, -1);
    }
    else
    {

    }
    v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQueryResult()), sel_init);
    a4();

  }
}

id sub_190C7C11C(unint64_t a1)
{
  uint64_t v2;
  id result;
  uint64_t i;
  char *v5;
  char *v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  objc_super v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9E8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_190CA8AF4();
    v2 = (uint64_t)result;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_14:
    v10 = (objc_class *)type metadata accessor for _EXQueryResult();
    v11 = (char *)objc_allocWithZone(v10);
    *(_QWORD *)&v11[OBJC_IVAR____EXQueryResult_identities] = v9;
    *(_QWORD *)&v11[OBJC_IVAR____EXQueryResult_availablility] = 0;
    v12.receiver = v11;
    v12.super_class = v10;
    return objc_msgSendSuper2(&v12, sel_init);
  }
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (char *)MEMORY[0x194017870](i, a1);
      else
        v5 = (char *)*(id *)(a1 + 8 * i + 32);
      v6 = v5;
      v7 = (char *)sub_190C7B450(v5);
      if (*(_QWORD *)&v7[OBJC_IVAR____EXQueryResult_identities])
      {
        v8 = swift_bridgeObjectRetain();
        sub_190C7959C(v8);
      }

    }
    swift_bridgeObjectRelease();
    v9 = v13;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_190C7C28C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  dispatch_group_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t aBlock;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  _QWORD *v53;

  v35 = a2;
  v36 = a3;
  v4 = sub_190CA8554();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190CA856C();
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = MEMORY[0x1E0DEE9E8];
  v10 = dispatch_group_create();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_190CA8AF4();
    v11 = result;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v40 = v7;
  v41 = v5;
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    v27 = (_QWORD *)swift_allocObject();
    v28 = v35;
    v29 = v36;
    v27[2] = v46;
    v27[3] = v28;
    v27[4] = v29;
    v52 = sub_190C7DD64;
    v53 = v27;
    aBlock = MEMORY[0x1E0C809B0];
    v49 = 1107296256;
    v50 = sub_190C2A3B4;
    v51 = &block_descriptor_53_0;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v31 = v37;
    sub_190CA8560();
    v47 = (void *)MEMORY[0x1E0DEE9D8];
    sub_190C3A458((unint64_t *)&qword_1ECD98C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98C40);
    sub_190C3A3D4((unint64_t *)&qword_1ECD98C70, (uint64_t *)&unk_1ECD98C40);
    v32 = v40;
    sub_190CA8914();
    sub_190CA880C();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v4);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v39);
    swift_release();
    return swift_release();
  }
  if (v11 >= 1)
  {
    v34 = v4;
    v13 = 0;
    v43 = a1 & 0xC000000000000001;
    v42 = MEMORY[0x1E0DEE9B8] + 8;
    v44 = v11;
    v45 = a1;
    v14 = MEMORY[0x1E0C809B0];
    do
    {
      if (v43)
        v15 = (id)MEMORY[0x194017870](v13, a1);
      else
        v15 = *(id *)(a1 + 8 * v13 + 32);
      v16 = v15;
      ++v13;
      dispatch_group_enter(v10);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v46;
      *(_QWORD *)(v17 + 24) = v10;
      swift_retain();
      v18 = v10;
      v19 = sub_190C7A030();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = sub_190C7DCF4;
      *(_QWORD *)(v20 + 24) = v17;
      v52 = sub_190C7DD20;
      v53 = (_QWORD *)v20;
      aBlock = v14;
      v49 = 1107296256;
      v50 = sub_190C79838;
      v51 = &block_descriptor_41;
      v21 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v22 = objc_msgSend(v19, sel_remoteObjectProxyWithErrorHandler_, v21);
      _Block_release(v21);

      sub_190CA8908();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BE58);
      swift_dynamicCast();
      v23 = v47;
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = v16;
      v24[3] = sub_190C7DCF4;
      v24[4] = v17;
      v52 = sub_190C7DD2C;
      v53 = v24;
      aBlock = v14;
      v49 = 1107296256;
      v50 = sub_190C45C80;
      v51 = &block_descriptor_47;
      v25 = _Block_copy(&aBlock);
      swift_retain();
      v26 = v16;
      swift_release();
      objc_msgSend(v23, sel_extensionsWith_reply_, v26, v25);
      _Block_release(v25);

      swift_release();
      swift_unknownObjectRelease();
      a1 = v45;
    }
    while (v44 != v13);
    swift_bridgeObjectRelease();
    v4 = v34;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_190C7C764(uint64_t a1, int a2, dispatch_group_t group)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + OBJC_IVAR____EXQueryResult_identities))
  {
    swift_beginAccess();
    v4 = swift_bridgeObjectRetain();
    sub_190C7959C(v4);
    swift_endAccess();
  }
  dispatch_group_leave(group);
}

void sub_190C7C7DC(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  objc_super v8;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = (objc_class *)type metadata accessor for _EXQueryResult();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____EXQueryResult_identities] = v4;
  *(_QWORD *)&v6[OBJC_IVAR____EXQueryResult_availablility] = 0;
  v8.receiver = v6;
  v8.super_class = v5;
  swift_bridgeObjectRetain();
  v7 = objc_msgSendSuper2(&v8, sel_init);
  a2();

}

void sub_190C7C884(void *a1)
{
  sub_190C7C890(a1, "Begin active query failed with error: %{public}@");
}

void sub_190C7C890(void *a1, const char *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  NSObject *oslog;
  uint64_t v12;

  if (qword_1ECD98BF8 != -1)
    swift_once();
  v4 = sub_190CA8518();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECD98BD8);
  v5 = a1;
  v6 = a1;
  oslog = sub_190CA8500();
  v7 = sub_190CA87E8();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138543362;
    v10 = a1;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    sub_190CA88F0();
    *v9 = v12;

    _os_log_impl(&dword_190C25000, oslog, v7, a2, v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v9, -1, -1);
    MEMORY[0x19401889C](v8, -1, -1);
  }
  else
  {

  }
}

void sub_190C7CA50(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  NSObject *oslog;
  uint64_t v11;

  if (a1)
  {
    v2 = a1;
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v3 = sub_190CA8518();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ECD98BD8);
    v4 = a1;
    v5 = a1;
    oslog = sub_190CA8500();
    v6 = sub_190CA87E8();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138543362;
      v9 = a1;
      v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_190CA88F0();
      *v8 = v11;

      _os_log_impl(&dword_190C25000, oslog, v6, "Begin active query failed with error: %{public}@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v8, -1, -1);
      MEMORY[0x19401889C](v7, -1, -1);

    }
    else
    {

    }
  }
}

void sub_190C7CC28(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_190C7CC7C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  const os_unfair_lock *v8;
  uint64_t v9;
  _QWORD *i;
  id v11;
  void *v12;
  objc_class *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  const os_unfair_lock *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v33;
  uint64_t *v34;
  id v35;
  uint64_t v37;
  void *v38;
  uint64_t aBlock;
  uint64_t v40;
  void (*v41)(uint64_t, void *);
  void *v42;
  void (*v43)(void *);
  uint64_t v44;
  objc_super v45;

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_2Tm(a2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  if (v5 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    return swift_bridgeObjectRelease();
  while (1)
  {
    result = objc_opt_self();
    v35 = (id)result;
    v33 = v6 - 1;
    if (v6 < 1)
      break;
    v8 = (const os_unfair_lock *)(*(_QWORD *)(a3 + OBJC_IVAR____EXServiceClient_activeQueriesLock) + 16);
    v34 = (uint64_t *)(a3 + OBJC_IVAR____EXServiceClient_activeQueries);
    swift_beginAccess();
    v9 = 0;
    for (i = &unk_1EE20B000; ; i = (_QWORD *)&unk_1EE20B000)
    {
      v37 = v9;
      v11 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194017870]() : *(id *)(v5 + 8 * v9 + 32);
      v12 = v11;
      os_unfair_lock_assert_owner(v8);
      v13 = (objc_class *)type metadata accessor for _EXActiveClientQuery();
      v14 = objc_allocWithZone(v13);
      v14[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started] = 0;
      v15 = i[434];
      type metadata accessor for _EXActiveClientQuery.ServiceClientObserverSet();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = MEMORY[0x1E0DEE9E8];
      *(_QWORD *)&v14[v15] = v16;
      swift_unknownObjectWeakInit();
      *(_QWORD *)&v14[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query] = v12;
      v17 = v12;
      v18 = v14;
      v19 = objc_msgSend(v35, sel_anonymousListener);
      *(_QWORD *)&v18[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_xpcListener] = v19;
      v20 = v19;

      v45.receiver = v18;
      v45.super_class = v13;
      v21 = (char *)objc_msgSendSuper2(&v45, sel_init);
      objc_msgSend(v20, sel_setDelegate_, v21);
      objc_msgSend(v20, sel_resume);

      v22 = *v34;
      swift_bridgeObjectRetain();
      LOBYTE(v20) = sub_190C8D230(v21, v22);
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        break;
      v23 = __swift_project_boxed_opaque_existential_2Tm(a2, a2[3]);
      swift_retain();
      sub_190C79888((uint64_t)v23);
      swift_release();
      v24 = v8;
      os_unfair_lock_assert_owner(v8);
      v25 = OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started;
      if ((v21[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started] & 1) != 0)
      {

      }
      else
      {
        v26 = sub_190C7A030();
        v43 = sub_190C7C884;
        v44 = 0;
        aBlock = MEMORY[0x1E0C809B0];
        v40 = 1107296256;
        v41 = sub_190C79838;
        v42 = &block_descriptor_3;
        v27 = _Block_copy(&aBlock);
        v28 = objc_msgSend(v26, sel_remoteObjectProxyWithErrorHandler_, v27);
        _Block_release(v27);

        sub_190CA8908();
        swift_unknownObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BE58);
        swift_dynamicCast();
        v21[v25] = 1;
        v29 = *(_QWORD *)&v21[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query];
        v30 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_xpcListener], sel_endpoint);
        v43 = sub_190C7CA50;
        v44 = 0;
        aBlock = MEMORY[0x1E0C809B0];
        v40 = 1107296256;
        v41 = sub_190C7CC28;
        v42 = &block_descriptor_4;
        v31 = _Block_copy(&aBlock);
        objc_msgSend(v38, sel_beginExtensionsQuery_listenerEndpoint_reply_, v29, v30, v31);
        _Block_release(v31);

        swift_unknownObjectRelease();
      }
      if (v33 == v37)
        return swift_bridgeObjectRelease();
      v9 = v37 + 1;
      v8 = v24;
    }
    __break(1u);
LABEL_16:
    v6 = sub_190CA8AF4();
    if (!v6)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_190C7D0E4(uint64_t a1, _QWORD *a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  void *v13;
  objc_class *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  os_unfair_lock *lock;
  id v31;
  objc_super v33;
  uint64_t *v34;

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_2Tm(a2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  if (v6 >> 62)
    goto LABEL_17;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return swift_bridgeObjectRelease();
  while (1)
  {
    result = objc_opt_self();
    v31 = (id)result;
    if (v7 < 1)
      break;
    v29 = v6 & 0xC000000000000001;
    lock = (os_unfair_lock *)(*(_QWORD *)&a3[OBJC_IVAR____EXServiceClient_activeQueriesLock] + 16);
    v34 = (uint64_t *)&a3[OBJC_IVAR____EXServiceClient_activeQueries];
    swift_beginAccess();
    v9 = 0;
    v28 = v6;
    while (1)
    {
      v12 = v29 ? (id)MEMORY[0x194017870](v9, v6) : *(id *)(v6 + 8 * v9 + 32);
      v13 = v12;
      os_unfair_lock_assert_owner(lock);
      v14 = (objc_class *)type metadata accessor for _EXActiveClientQuery();
      v15 = objc_allocWithZone(v14);
      v15[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started] = 0;
      v16 = OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery__observers;
      type metadata accessor for _EXActiveClientQuery.ServiceClientObserverSet();
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = MEMORY[0x1E0DEE9E8];
      *(_QWORD *)&v15[v16] = v17;
      swift_unknownObjectWeakInit();
      *(_QWORD *)&v15[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query] = v13;
      v11 = v13;
      v18 = v15;
      v19 = objc_msgSend(v31, sel_anonymousListener);
      *(_QWORD *)&v18[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_xpcListener] = v19;
      v20 = v19;

      v33.receiver = v18;
      v33.super_class = v14;
      a3 = (char *)objc_msgSendSuper2(&v33, sel_init);
      objc_msgSend(v20, sel_setDelegate_, a3);
      objc_msgSend(v20, sel_resume);

      v21 = *v34;
      swift_bridgeObjectRetain();
      LOBYTE(v20) = sub_190C8D230(a3, v21);
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        break;
      v22 = __swift_project_boxed_opaque_existential_2Tm(a2, a2[3]);
      v23 = OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery__observers;
      swift_retain();
      sub_190C79940((uint64_t)v22);
      swift_release();
      v24 = *(_QWORD *)&a3[v23];
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)(v24 + 16) + 16))
      {
        swift_beginAccess();
        v25 = (void *)sub_190C93D50(a3);
        swift_endAccess();

        v26 = MEMORY[0x194018968](&a3[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_connection]);
        if (v26)
        {
          v27 = (void *)v26;
          swift_unknownObjectWeakAssign();
          objc_msgSend(v27, sel_invalidate);

        }
        a3[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started] = 0;
        v10 = a3;
        v6 = v28;
      }
      else
      {
        v10 = v11;
        v11 = a3;
        v6 = v28;
      }
      ++v9;

      if (v7 == v9)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_17:
    v7 = sub_190CA8AF4();
    if (!v7)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_190C7D464()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v1 = sub_190C7A63C();
  v14 = sub_190C7DC00;
  v15 = v0;
  v2 = MEMORY[0x1E0C809B0];
  v10 = MEMORY[0x1E0C809B0];
  v11 = 1107296256;
  v12 = sub_190C79838;
  v13 = &block_descriptor_7;
  v3 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  v4 = objc_msgSend(v1, sel_remoteObjectProxyWithErrorHandler_, v3);
  _Block_release(v3);

  sub_190CA8908();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BE68);
  swift_dynamicCast();
  v5 = v16;
  v6 = (void *)sub_190CA84A0();
  v14 = sub_190C7DC38;
  v15 = v0;
  v10 = v2;
  v11 = 1107296256;
  v12 = sub_190C7D914;
  v13 = &block_descriptor_10;
  v7 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_photoServiceAuthorizationStatusForExtensionUUID_completion_, v6, v7);
  _Block_release(v7);

  swift_beginAccess();
  v8 = *(void **)(v0 + 16);
  if (v8)
  {
    v8;
    swift_willThrow();
  }
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_190C7D654(void *a1, uint64_t a2, _QWORD *a3, uint64_t a4, const char *a5)
{
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  if (*a3 != -1)
    swift_once();
  v9 = sub_190CA8518();
  __swift_project_value_buffer(v9, a4);
  v10 = a1;
  v11 = a1;
  v12 = sub_190CA8500();
  v13 = sub_190CA87E8();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138543362;
    v16 = a1;
    v19 = _swift_stdlib_bridgeErrorToNSError();
    sub_190CA88F0();
    *v15 = v19;

    _os_log_impl(&dword_190C25000, v12, v13, a5, v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v15, -1, -1);
    MEMORY[0x19401889C](v14, -1, -1);
  }
  else
  {

  }
  v17 = sub_190CA83E0();
  swift_beginAccess();
  v18 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v17;

}

void sub_190C7D824(char a1, id a2, uint64_t a3)
{
  void **v4;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;

  v4 = (void **)(a3 + 16);
  if (a2)
  {
    v6 = a2;
    v7 = sub_190CA83E0();

    swift_beginAccess();
    v8 = *v4;
    *v4 = (void *)v7;

  }
  if ((a1 & 1) == 0)
  {
    v9 = (void *)objc_opt_self();
    v10 = (void *)sub_190CA85D8();
    v11 = objc_msgSend(v9, sel__EX_errorWithCode_description_, 17, v10);

    swift_beginAccess();
    v12 = *v4;
    *v4 = v11;

  }
}

void sub_190C7D914(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id sub_190C7DA6C()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  objc_super v5;

  v1 = *(void **)&v0[OBJC_IVAR____EXServiceClient__discoveryConnection];
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  v2 = *(void **)&v0[OBJC_IVAR____EXServiceClient__tccProxyConnection];
  if (v2)
    objc_msgSend(v2, sel_invalidate);
  v3 = *(void **)&v0[OBJC_IVAR____EXServiceClient__launchConnection];
  if (v3)
    objc_msgSend(v3, sel_invalidate);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for _EXServiceClient();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t type metadata accessor for _EXServiceClient()
{
  return objc_opt_self();
}

uint64_t sub_190C7DBBC(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_190C7DBDC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_190C7DC00(void *a1)
{
  uint64_t v1;

}

void sub_190C7DC38(char a1, void *a2)
{
  uint64_t v2;

  sub_190C7D824(a1, a2, v2);
}

void sub_190C7DC40(void *a1)
{
  uint64_t v1;

  sub_190C7D654(a1, v1, &qword_1ECD98D00, (uint64_t)qword_1ECD98D28, "Launch failed with error: %{public}@");
}

uint64_t sub_190C7DC78()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C7DCA4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190C7DCC8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_190C7DCF4(uint64_t a1)
{
  uint64_t v1;

  sub_190C7C764(a1, *(_QWORD *)(v1 + 16), *(dispatch_group_t *)(v1 + 24));
}

uint64_t sub_190C7DCFC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_190C7DD20(void *a1)
{
  uint64_t v1;

  sub_190C7BB64(a1, *(void (**)(void))(v1 + 16));
}

void sub_190C7DD2C(char *a1, void *a2)
{
  uint64_t v2;

  sub_190C7BD3C(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_190C7DD38()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_190C7DD64()
{
  uint64_t v0;

  sub_190C7C7DC(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_190C7DD70(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  void (*v14)();
  uint64_t v15;

  v3 = (void *)MEMORY[0x194018968](v1+ OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_connection);

  if (!v3)
  {
    objc_msgSend(a1, sel_setExportedObject_, v1);
    if (qword_1EE20B808 != -1)
      swift_once();
    objc_msgSend(a1, sel_setExportedInterface_, qword_1EE20E3E8);
    v4 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    v14 = sub_190C7E8B4;
    v15 = v4;
    v5 = MEMORY[0x1E0C809B0];
    v10 = MEMORY[0x1E0C809B0];
    v11 = 1107296256;
    v12 = sub_190C2A3B4;
    v13 = &block_descriptor_126;
    v6 = _Block_copy(&v10);
    swift_release();
    objc_msgSend(a1, sel_setInterruptionHandler_, v6);
    _Block_release(v6);
    v7 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    v14 = sub_190C7E8B4;
    v15 = v7;
    v10 = v5;
    v11 = 1107296256;
    v12 = sub_190C2A3B4;
    v13 = &block_descriptor_130;
    v8 = _Block_copy(&v10);
    swift_release();
    objc_msgSend(a1, sel_setInvalidationHandler_, v8);
    _Block_release(v8);
    swift_unknownObjectWeakAssign();
    objc_msgSend(a1, sel_activate);
  }
  return 1;
}

uint64_t sub_190C7DF48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  if (qword_1ECD98BF8 != -1)
    swift_once();
  v7 = sub_190CA8518();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ECD98BD8);
  v8 = a1;
  v9 = sub_190CA8500();
  v10 = sub_190CA87DC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138543362;
    v20[0] = v8;
    v12 = v8;
    sub_190CA88F0();
    *v19 = v8;

    _os_log_impl(&dword_190C25000, v9, v10, "Remote query change notification %{public}@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v19, -1, -1);
    MEMORY[0x19401889C](v11, -1, -1);

  }
  else
  {

  }
  (*(void (**)(uint64_t))(a4 + 16))(a4);
  swift_retain();
  v13 = sub_190C79A08();
  swift_release();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = v13 + 32;
    do
    {
      sub_190C6D76C(v15, (uint64_t)v20);
      v16 = v21;
      v17 = v22;
      __swift_project_boxed_opaque_existential_2Tm(v20, v21);
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v17 + 16))(v8, a2, v16, v17);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
      v15 += 40;
      --v14;
    }
    while (v14);
  }
  return swift_bridgeObjectRelease();
}

unint64_t *sub_190C7E184(unint64_t *result, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v19;
  unint64_t *v20;

  v19 = a2;
  v20 = result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    result = (unint64_t *)objc_msgSend(a4, sel_evaluateWithObject_, *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14), v19);
    if ((_DWORD)result)
    {
      *(unint64_t *)((char *)v20 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_190C9321C(v20, v19, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_190C7E328(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  unint64_t *v11;
  void *v12;
  id v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (char *)v15 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    v11 = sub_190C7E184((unint64_t *)v9, v6, a1, v10);
    swift_release();

    if (v2)
      swift_willThrow();

  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, 8 * v6);
    v13 = v8;
    v11 = sub_190C7E184((unint64_t *)v12, v6, a1, v13);
    swift_release();

    MEMORY[0x19401889C](v12, -1, -1);
  }
  return v11;
}

uint64_t sub_190C7E4D4(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  if ((a1 & 0xC000000000000001) == 0)
    return (uint64_t)sub_190C7E328(a1, a2);
  v2 = MEMORY[0x1E0DEE9E8];
  v17 = MEMORY[0x1E0DEE9E8];
  v3 = a2;
  sub_190CA8938();
  if (sub_190CA895C())
  {
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    do
    {
      swift_dynamicCast();
      if ((objc_msgSend(v3, sel_evaluateWithObject_, v16) & 1) != 0)
      {
        v4 = v17;
        v5 = *(_QWORD *)(v17 + 16);
        if (*(_QWORD *)(v17 + 24) <= v5)
        {
          sub_190C90588(v5 + 1);
          v4 = v17;
        }
        result = sub_190CA889C();
        v7 = v4 + 56;
        v8 = -1 << *(_BYTE *)(v4 + 32);
        v9 = result & ~v8;
        v10 = v9 >> 6;
        if (((-1 << v9) & ~*(_QWORD *)(v4 + 56 + 8 * (v9 >> 6))) != 0)
        {
          v11 = __clz(__rbit64((-1 << v9) & ~*(_QWORD *)(v4 + 56 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v12 = 0;
          v13 = (unint64_t)(63 - v8) >> 6;
          do
          {
            if (++v10 == v13 && (v12 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v14 = v10 == v13;
            if (v10 == v13)
              v10 = 0;
            v12 |= v14;
            v15 = *(_QWORD *)(v7 + 8 * v10);
          }
          while (v15 == -1);
          v11 = __clz(__rbit64(~v15)) + (v10 << 6);
        }
        *(_QWORD *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v16;
        ++*(_QWORD *)(v4 + 16);
      }
      else
      {

      }
    }
    while (sub_190CA895C());
    v2 = v17;
  }

  swift_release();
  return v2;
}

uint64_t objectdestroy_43Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C7E72C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_190C7E760(char *a1, void *a2)
{
  uint64_t v2;

  sub_190C7B688(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_190C7E76C()
{
  uint64_t v0;

  return sub_190C7AB7C(v0, &OBJC_IVAR____EXServiceClient__launchConnection);
}

uint64_t sub_190C7E78C()
{
  uint64_t v0;

  return sub_190C7AC88(v0, &OBJC_IVAR____EXServiceClient__launchConnection);
}

uint64_t sub_190C7E7AC()
{
  uint64_t v0;

  return sub_190C7AB7C(v0, &OBJC_IVAR____EXServiceClient__tccProxyConnection);
}

uint64_t sub_190C7E7CC()
{
  uint64_t v0;

  return sub_190C7AC88(v0, &OBJC_IVAR____EXServiceClient__tccProxyConnection);
}

void sub_190C7E7EC()
{
  uint64_t v0;

  sub_190C7A578(v0);
}

uint64_t sub_190C7E7F4()
{
  uint64_t v0;

  return sub_190C7AC88(v0, &OBJC_IVAR____EXServiceClient__discoveryConnection);
}

uint64_t sub_190C7E814(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_190C7E850(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_190C7E884(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_190C7E890()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_190C7E8B4()
{
  sub_190C79C2C();
}

void sub_190C7EB10(uint64_t a1, uint64_t a2)
{
  id v3;

  sub_190C7F614();
  v3 = (id)sub_190CA86B0();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);

}

uint64_t sub_190C7ECD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____EXQueryController_innerController);
  v2 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
  v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions);
  v5 = *(os_unfair_lock_s **)(v1 + v2);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  v6 = sub_190C89904(v4);
  swift_bridgeObjectRelease();
  return v6;
}

char *sub_190C7EE3C(unint64_t a1)
{
  void *v1;
  id v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v14;

  swift_unknownObjectWeakInit();
  v3 = objc_allocWithZone((Class)type metadata accessor for QueryController());
  v4 = v1;
  *(_QWORD *)&v4[OBJC_IVAR____EXQueryController_innerController] = sub_190C70860(a1);

  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for _EXQueryController();
  v5 = (char *)objc_msgSendSuper2(&v14, sel_init);
  v6 = *(_QWORD *)&v5[OBJC_IVAR____EXQueryController_innerController];
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (uint64_t (**)())(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks);
  v10 = *(_QWORD *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks);
  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks + 8);
  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks + 16);
  *v9 = sub_190C7F4B0;
  v9[1] = (uint64_t (*)())v7;
  v9[2] = (uint64_t (*)())sub_190C7F4C8;
  v9[3] = (uint64_t (*)())v8;
  sub_190C73FB0(v10, v11, v12);
  return v5;
}

uint64_t sub_190C7EF54(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char *v3;
  void *v4;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x194018968](v1);
  if (result)
  {
    v3 = (char *)result;
    v4 = (void *)objc_opt_self();
    objc_msgSend(v4, sel_queryControllerDelegate_didUpdateController_, MEMORY[0x194018968](&v3[OBJC_IVAR____EXQueryController_delegate]), v3);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190C7EFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char *v5;
  void *v6;

  v3 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x194018968](v3);
  if (result)
  {
    v5 = (char *)result;
    v6 = (void *)objc_opt_self();
    objc_msgSend(v6, sel_queryControllerDelegate_didUpdateController_enabledCount_disabledCount_unelectedCount_, MEMORY[0x194018968](&v5[OBJC_IVAR____EXQueryController_delegate]), v5, *(_QWORD *)(a1 + OBJC_IVAR____EXExtensionAvailablility_enabledCount), *(_QWORD *)(a1 + OBJC_IVAR____EXExtensionAvailablility_disabledCount), *(_QWORD *)(a1 + OBJC_IVAR____EXExtensionAvailablility_unelectedCount));

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190C7F1E8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____EXQueryController_innerController), sel_description);
  v2 = sub_190CA85F0();

  return v2;
}

uint64_t sub_190C7F298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____EXQueryController_innerController);
  v2 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
  v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions);
  v5 = *(os_unfair_lock_s **)(v1 + v2);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  v6 = sub_190C89904(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v6 < 0 || (v6 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20BCB8);
    v7 = sub_190CA8AE8();
    swift_release();
  }
  else
  {
    sub_190CA8BD8();
    v7 = v6;
  }
  swift_release();
  return v7;
}

id _EXQueryController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void _EXQueryController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _EXQueryController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXQueryController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _EXQueryController()
{
  return objc_opt_self();
}

uint64_t method lookup function for _EXQueryController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_190C7F48C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190C7F4B0()
{
  uint64_t v0;

  return sub_190C7EF54(v0);
}

uint64_t sub_190C7F4C8(uint64_t a1)
{
  uint64_t v1;

  return sub_190C7EFEC(a1, v1);
}

char *sub_190C7F4E0(unint64_t a1)
{
  void *v1;
  id v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v14;

  swift_unknownObjectWeakInit();
  v3 = objc_allocWithZone((Class)type metadata accessor for QueryController());
  v4 = v1;
  *(_QWORD *)&v4[OBJC_IVAR____EXQueryController_innerController] = sub_190C70860(a1);

  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for _EXQueryController();
  v5 = (char *)objc_msgSendSuper2(&v14, sel_init);
  v6 = *(_QWORD *)&v5[OBJC_IVAR____EXQueryController_innerController];
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (uint64_t (**)())(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks);
  v10 = *(_QWORD *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks);
  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks + 8);
  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks + 16);
  *v9 = sub_190C7F4B0;
  v9[1] = (uint64_t (*)())v7;
  v9[2] = (uint64_t (*)())sub_190C7F4C8;
  v9[3] = (uint64_t (*)())v8;
  sub_190C73FB0(v10, v11, v12);
  swift_unknownObjectWeakAssign();
  return v5;
}

unint64_t sub_190C7F614()
{
  unint64_t result;

  result = qword_1ECD98C80;
  if (!qword_1ECD98C80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECD98C80);
  }
  return result;
}

uint64_t sub_190C7F650()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_190C7F674(uint64_t a1)
{
  uint64_t v1;

  sub_190C7EB10(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_190C7F67C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

id static OS_os_log.general.getter()
{
  return sub_190C7F840(&qword_1ECD99018, (id *)&qword_1ECD99010);
}

uint64_t sub_190C7F6C4()
{
  uint64_t result;

  sub_190C2A4C4();
  result = sub_190CA88CC();
  qword_1EE20A918 = result;
  return result;
}

id static OS_os_log.discovery.getter()
{
  return sub_190C7F840(&qword_1EE20A920, (id *)&qword_1EE20A918);
}

uint64_t sub_190C7F740()
{
  uint64_t result;

  sub_190C2A4C4();
  result = sub_190CA88CC();
  qword_1EE20BEA0 = result;
  return result;
}

id static OS_os_log.prototypeInterfaces.getter()
{
  return sub_190C7F840(&qword_1EE20B818, (id *)&qword_1EE20BEA0);
}

uint64_t sub_190C7F7C0()
{
  uint64_t result;

  sub_190C2A4C4();
  result = sub_190CA88CC();
  qword_1EE20BEA8 = result;
  return result;
}

id static OS_os_log.preferences.getter()
{
  return sub_190C7F840(qword_1EE20B820, (id *)&qword_1EE20BEA8);
}

id sub_190C7F840(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_190C7F878(uint64_t a1)
{
  return sub_190C28A3C(a1, qword_1EE20AE20);
}

uint64_t static Logger.general.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190C7F8D0(&qword_1EE20ADE8, (uint64_t)qword_1EE20AE20, a1);
}

uint64_t static Logger.launch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190C7F8D0(&qword_1ECD98D00, (uint64_t)qword_1ECD98D28, a1);
}

uint64_t sub_190C7F8D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_190CA8518();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_190C7F938(uint64_t a1)
{
  return sub_190C28A3C(a1, qword_1ECD98BD8);
}

uint64_t static Logger.discovery.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190C7F8D0(&qword_1ECD98BF8, (uint64_t)qword_1ECD98BD8, a1);
}

uint64_t sub_190C7F978(uint64_t a1)
{
  return sub_190C28A3C(a1, qword_1EE20BEB0);
}

uint64_t static Logger.prototypeInterfaces.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190C7F8D0(&qword_1EE20B830, (uint64_t)qword_1EE20BEB0, a1);
}

uint64_t sub_190C7F9B8(uint64_t a1)
{
  return sub_190C28A3C(a1, qword_1EE20BEC8);
}

uint64_t static Logger.preferences.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190C7F8D0(&qword_1EE20B838, (uint64_t)qword_1EE20BEC8, a1);
}

uint64_t sub_190C7F9FC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_190C8081C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C7FB50(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x19401787C](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_190C80928(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_190CA86D4();
  }
  __break(1u);
  return result;
}

id sub_190C7FD40()
{
  return sub_190C80208((uint64_t (*)(_QWORD))type metadata accessor for _EXDomainAttribute);
}

void sub_190C7FFE0(void *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  if (a1)
  {
    objc_msgSend(a1, sel_copyWithZone_, 0);
    sub_190CA8908();
    swift_unknownObjectRelease();

    sub_190C2B30C(0, &qword_1EE20ADD8);
    v3 = swift_dynamicCast();
    v4 = v6;
    if (!v3)
      v4 = 0;
  }
  else
  {
    v4 = 0;
  }
  v5 = *(void **)(v1 + OBJC_IVAR____EXLaunchConfiguration_launchPersona);
  *(_QWORD *)(v1 + OBJC_IVAR____EXLaunchConfiguration_launchPersona) = v4;

}

id sub_190C801FC()
{
  return sub_190C80208(type metadata accessor for _EXLaunchConfiguration);
}

id sub_190C80208(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_190C80240()
{
  return type metadata accessor for _EXLaunchConfiguration(0);
}

void sub_190C80248()
{
  unint64_t v0;

  sub_190C793BC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

char *sub_190C802EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  objc_class *v6;
  id v7;
  id v8;
  id v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(v0 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
  v6 = (objc_class *)type metadata accessor for _EXHostConfiguration();
  v7 = objc_allocWithZone(v6);
  v8 = objc_allocWithZone(v6);
  v9 = v5;
  v10 = (char *)sub_190C39EB8(v9, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v11 = *(void **)(v1 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
  v12 = *(void **)&v10[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
  *(_QWORD *)&v10[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = v11;
  v13 = v11;

  *(_QWORD *)&v10[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = *(_QWORD *)(v1
                                                                                   + OBJC_IVAR____EXLaunchConfiguration_preferredLanguages);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName + 8);
  v15 = &v10[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
  *(_QWORD *)v15 = *(_QWORD *)(v1 + OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName);
  *((_QWORD *)v15 + 1) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = *(_QWORD *)(v1
                                                                                               + OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = *(void **)(v1 + OBJC_IVAR____EXLaunchConfiguration_launchPersona);
  v17 = *(void **)&v10[OBJC_IVAR____EXHostConfiguration_launchPersona];
  *(_QWORD *)&v10[OBJC_IVAR____EXHostConfiguration_launchPersona] = v16;
  v18 = v16;

  *(_QWORD *)&v10[OBJC_IVAR____EXHostConfiguration_assertionAttributes] = *(_QWORD *)(v1
                                                                                    + OBJC_IVAR____EXLaunchConfiguration_assertionAttributes);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v1 + OBJC_IVAR____EXLaunchConfiguration_networkApplicationID;
  swift_beginAccess();
  sub_190C3CB84(v19, (uint64_t)v4, &qword_1ECD98D60);
  v20 = (uint64_t)&v10[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
  swift_beginAccess();
  sub_190C683B0((uint64_t)v4, v20);
  swift_endAccess();
  return v10;
}

BOOL sub_190C80544(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_190C80558()
{
  sub_190CA8C50();
  sub_190CA8C5C();
  return sub_190CA8C80();
}

uint64_t sub_190C8059C()
{
  return sub_190CA8C5C();
}

uint64_t sub_190C805C4()
{
  sub_190CA8C50();
  sub_190CA8C5C();
  return sub_190CA8C80();
}

uint64_t sub_190C80604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190C817DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190C80628()
{
  return 0;
}

void sub_190C80634(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_190C80640()
{
  sub_190C31BC4();
  return sub_190CA8CB0();
}

uint64_t sub_190C80668()
{
  sub_190C31BC4();
  return sub_190CA8CBC();
}

uint64_t sub_190C80690(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_190CA8BCC();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_190CA8BCC() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

id sub_190C80754()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_190CA83EC();

    swift_willThrow();
  }
  return v2;
}

_QWORD *sub_190C8081C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ADE0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190C80B44(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_190C80928(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_190C81F74(&qword_1EE20BF60, (uint64_t *)&unk_1EE20BF50, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20BF50);
          v12 = sub_190C6D220(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_190C2B30C(0, (unint64_t *)&unk_1ECD98BB0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C80B44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C80C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ACB8);
    v3 = sub_190CA89C8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_190CA8C50();
      swift_bridgeObjectRetain();
      sub_190CA8638();
      result = sub_190CA8C80();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_190CA8BCC(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_190CA8BCC();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

void sub_190C80DD4(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECD98B00);
      v3 = sub_190CA89C8();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_190CA8AF4();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x194017870](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_190CA889C();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_190CA88A8();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_190CA88A8();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_190CA889C();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_190CA88A8();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_190CA88A8();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

id sub_190C81130(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  id result;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  __int128 v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  char *v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  objc_class *v47;
  _QWORD v48[2];
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  objc_super v57;
  __int128 v58;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier;
  *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier] = 0;
  v8 = OBJC_IVAR____EXLaunchConfiguration_preferredLanguages;
  *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages] = 0;
  v9 = &v1[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables;
  *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables] = MEMORY[0x1E0DEE9E0];
  v11 = OBJC_IVAR____EXLaunchConfiguration_launchPersona;
  *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_launchPersona] = 0;
  v12 = OBJC_IVAR____EXLaunchConfiguration_assertionAttributes;
  v13 = v2;
  v14 = sub_190C39FF0();
  v51 = v12;
  *(_QWORD *)&v2[v12] = v14;
  v15 = &v13[OBJC_IVAR____EXLaunchConfiguration_networkApplicationID];
  v16 = sub_190CA8548();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v52 = (uint64_t)v15;
  v17(v15, 1, 1, v16);
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
  result = (id)sub_190CA8878();
  if (!result)
    goto LABEL_33;
  v50 = v13;
  *(_QWORD *)&v13[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity] = result;
  type metadata accessor for _EXExtensionInstanceIdentifier();
  v19 = sub_190CA8878();
  v20 = *(void **)&v2[v7];
  v53 = v2;
  *(_QWORD *)&v2[v7] = v19;

  sub_190C2B30C(0, (unint64_t *)&unk_1EE20AEE0);
  v21 = sub_190CA8878();
  if (v21)
  {
    v22 = (void *)v21;
    v58 = 0uLL;
    sub_190CA85E4();

    v23 = v58;
  }
  else
  {
    v23 = 0uLL;
  }
  *(_OWORD *)v9 = v23;
  swift_bridgeObjectRelease();
  v24 = sub_190CA8890();
  if (v24)
  {
    *(_QWORD *)&v58 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20A2F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AF40);
    v25 = swift_dynamicCast();
    v26 = v56;
    if (!v25)
      v26 = 0;
  }
  else
  {
    v26 = 0;
  }
  v27 = v53;
  *(_QWORD *)&v53[v8] = v26;
  swift_bridgeObjectRelease();
  v28 = sub_190CA8884();
  if (v28)
  {
    *(_QWORD *)&v58 = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20AED0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DA8);
    if (swift_dynamicCast())
    {
      v29 = v56;
      v27 = v53;
      goto LABEL_15;
    }
    v27 = v53;
  }
  v29 = sub_190C8A3A8(MEMORY[0x1E0DEE9D8]);
LABEL_15:
  *(_QWORD *)&v27[v10] = v29;
  swift_bridgeObjectRelease();
  sub_190C2B30C(0, &qword_1EE20ADD8);
  v30 = sub_190CA8878();
  v31 = *(void **)&v27[v11];
  *(_QWORD *)&v27[v11] = v30;

  type metadata accessor for _EXDomainAttribute();
  v32 = sub_190CA8890();
  if (!v32)
  {
    v44 = sub_190C39FF0();
LABEL_31:
    *(_QWORD *)&v53[v51] = v44;
    swift_bridgeObjectRelease();
    sub_190C68ED4((uint64_t)v6);
    v45 = v52;
    swift_beginAccess();
    sub_190C683B0((uint64_t)v6, v45);
    swift_endAccess();
    v46 = v50;

    v47 = (objc_class *)type metadata accessor for _EXLaunchConfiguration(0);
    v57.receiver = v46;
    v57.super_class = v47;
    return objc_msgSendSuper2(&v57, sel_init);
  }
  v33 = v32;
  if (v32 >> 62)
  {
    v34 = sub_190CA8AF4();
    if (v34)
      goto LABEL_18;
    goto LABEL_30;
  }
  v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v34)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    v44 = MEMORY[0x1E0DEE9D8];
    goto LABEL_31;
  }
LABEL_18:
  *(_QWORD *)&v58 = MEMORY[0x1E0DEE9D8];
  result = (id)sub_190CA8A4C();
  v54 = v34;
  if ((v34 & 0x8000000000000000) == 0)
  {
    v48[1] = a1;
    v49 = v6;
    v35 = 0;
    v55 = v33 & 0xC000000000000001;
    v36 = v54;
    do
    {
      if (v55)
        v40 = (char *)MEMORY[0x194017870](v35, v33);
      else
        v40 = (char *)*(id *)(v33 + 8 * v35 + 32);
      v41 = v40;
      if (*(_QWORD *)&v40[OBJC_IVAR____EXDomainAttribute_sourceEnvironment + 8])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42 = sub_190CA85D8();
        swift_bridgeObjectRelease();
        v37 = (void *)sub_190CA85D8();
        swift_bridgeObjectRelease();
        v38 = (void *)sub_190CA85D8();
        swift_bridgeObjectRelease();
        v43 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_sourceEnvironment_, v42, v37, v38);

        v41 = (void *)v42;
        v36 = v54;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v37 = (void *)sub_190CA85D8();
        swift_bridgeObjectRelease();
        v38 = (void *)sub_190CA85D8();
        swift_bridgeObjectRelease();
        v39 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v37, v38);
      }

      ++v35;
      sub_190CA8A28();
      sub_190CA8A58();
      sub_190CA8A64();
      sub_190CA8A34();
    }
    while (v36 != v35);
    v44 = v58;
    swift_bridgeObjectRelease();
    v6 = v49;
    goto LABEL_31;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_190C817DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000190CB4DA0 || (sub_190CA8BCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000190CB4D60 || (sub_190CA8BCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000190CB4D80 || (sub_190CA8BCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000190CB59C0 || (sub_190CA8BCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000190CB4E10)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_190CA8BCC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t *sub_190C819C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 32);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = sub_190CA8548();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
      memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

_QWORD *sub_190C81AF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190CA8548();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_190C81C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_190CA8548();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_190C81D34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 32);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190CA8548();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_190C81E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_190C81EFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_190C81F74(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1940187DC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s10AttachmentV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10AttachmentV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_190C82090 + 4 * byte_190CAE51A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_190C820C4 + 4 * byte_190CAE515[v4]))();
}

uint64_t sub_190C820C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190C820CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190C820D4);
  return result;
}

uint64_t sub_190C820E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190C820E8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_190C820EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190C820F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190C82100(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_190C82108(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

unint64_t sub_190C82114()
{
  unint64_t result;

  result = qword_1EE20BF68;
  if (!qword_1EE20BF68)
  {
    result = MEMORY[0x1940187DC](&unk_190CAE6BC, &_s10AttachmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE20BF68);
  }
  return result;
}

Swift::Bool __swiftcall _ConnectionHandler.shouldAccept(connection:)(NSXPCConnection connection)
{
  return 0;
}

uint64_t dispatch thunk of _ConnectionHandler.shouldAccept(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_190C82168(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v9;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_190C8C484((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v6);
        swift_retain();
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_190CA8AB8();

  if (!v4)
    return 0;
  type metadata accessor for _EXActiveQuery();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t static _EXExtensionAvailablility.supportsSecureCoding.getter()
{
  return 1;
}

void sub_190C82300(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionAvailablility_enabledCount);
  v4 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v3, v4);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionAvailablility_disabledCount);
  v6 = (void *)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v5, v6);

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____EXExtensionAvailablility_unelectedCount);
  v8 = (id)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v7, v8);

}

id _EXExtensionAvailablility.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_190C862C4(a1);

  return v4;
}

id _EXExtensionAvailablility.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_190C862C4(a1);

  return v2;
}

id _EXExtensionAvailablility.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionAvailablility();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190C82538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_190C82A70();
  v1 = v0 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_uuid;
  v2 = sub_190CA84E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_190C825B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  void *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  char *v11;
  void *v12;
  void (*v13)(id);
  uint64_t v14;
  id v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  id v19;
  id v20;
  char *v21;
  _QWORD v22[5];

  v2 = v0;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_queries);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  if (!sub_190CA8AF4())
    goto LABEL_17;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v5 = (id)MEMORY[0x194017870](0, v3);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_20:
    swift_once();
LABEL_8:
    v8 = (void *)qword_1ECD99310;
    type metadata accessor for _EXQuery();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (objc_msgSend(v1, sel_isKindOfClass_, ObjCClassFromMetadata))
    {
      v10 = v1;
      sub_190C84A18(v2, v10, v8);

      if ((objc_msgSend(v10, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) == 0)
      {
LABEL_23:
        v15 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
        swift_willThrow();
        swift_unexpectedError();
        __break(1u);
LABEL_24:
        v20 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
        swift_willThrow();

        swift_unexpectedError();
        __break(1u);
        return;
      }
      v21 = (char *)v10;
      v11 = (char *)sub_190C6B6BC(v21);

      v12 = *(void **)&v11[OBJC_IVAR____EXQueryResult_availablility];
      if (v12)
      {
        v13 = *(void (**)(id))(v2
                                        + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
        type metadata accessor for _EXExtensionAvailablility();
        v14 = swift_getObjCClassFromMetadata();
        v15 = v12;
        if ((objc_msgSend(v15, sel_isKindOfClass_, v14) & 1) != 0)
        {
          v13(v15);

          return;
        }
        goto LABEL_24;
      }
      __break(1u);
    }
    v19 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    goto LABEL_23;
  }
  v5 = *(id *)(v3 + 32);
LABEL_6:
  v1 = v5;
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_preferInProcessDiscovery);

  if (v7)
  {
    if (qword_1ECD98BA8 == -1)
      goto LABEL_8;
    goto LABEL_20;
  }
  if (qword_1EE20ACC0 != -1)
    swift_once();
  v16 = qword_1EE20DF28;
  v22[3] = type metadata accessor for _EXExtensionAvailablilityObserver();
  v22[4] = sub_190C3A458(&qword_1EE20C030, (uint64_t (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver, (uint64_t)&unk_190CAE894);
  v22[0] = v2;
  v17 = (os_unfair_lock_s *)(*(_QWORD *)(v16 + OBJC_IVAR____EXServiceClient_activeQueriesLock) + 16);
  swift_retain_n();
  os_unfair_lock_lock(v17);
  sub_190C7CC7C(v18, v22, v16);
  os_unfair_lock_unlock(v17);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v22);
  swift_release();
  swift_retain();
  sub_190C7B99C(v1, (uint64_t)sub_190C8661C, v2);
  swift_release();

}

void sub_190C829A4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void (*v3)(void);
  id v4;
  id v5;

  v2 = *(void **)(a1 + OBJC_IVAR____EXQueryResult_availablility);
  if (v2)
  {
    v3 = *(void (**)(void))(a2 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
    type metadata accessor for _EXExtensionAvailablility();
    if (objc_msgSend(v2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
    {
      v5 = v2;
      v3();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

void sub_190C82A70()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  unsigned int v5;
  void *v6;
  char *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v12[5];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_queries);
  if (!(v1 >> 62))
  {
    v2 = *(void **)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v2 = (void *)sub_190CA8AF4();
  if (!v2)
    goto LABEL_14;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v3 = (id)MEMORY[0x194017870](0, v1);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_17:
    swift_once();
LABEL_8:
    v6 = (void *)qword_1ECD99310;
    type metadata accessor for _EXQuery();
    if (objc_msgSend(v2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
    {
      v11 = v2;
      sub_190C85ACC(v0, v11, v6);

    }
    else
    {
      v10 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
      swift_willThrow();
      swift_unexpectedError();
      __break(1u);
    }
    return;
  }
  v3 = *(id *)(v1 + 32);
LABEL_6:
  v2 = v3;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_preferInProcessDiscovery);

  if (v5)
  {
    if (qword_1ECD98BA8 == -1)
      goto LABEL_8;
    goto LABEL_17;
  }
  if (qword_1EE20ACC0 != -1)
    swift_once();
  v7 = (char *)qword_1EE20DF28;
  v12[3] = type metadata accessor for _EXExtensionAvailablilityObserver();
  v12[4] = sub_190C3A458(&qword_1EE20C030, (uint64_t (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver, (uint64_t)&unk_190CAE894);
  v12[0] = v0;
  v8 = (os_unfair_lock_s *)(*(_QWORD *)&v7[OBJC_IVAR____EXServiceClient_activeQueriesLock] + 16);
  swift_retain_n();
  os_unfair_lock_lock(v8);
  sub_190C7D0E4(v9, v12, v7);
  os_unfair_lock_unlock(v8);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v12);
  swift_release();

}

void sub_190C82D04(uint64_t a1, uint64_t a2)
{
  sub_190C861F8(a2);
}

void sub_190C82D0C(uint64_t a1, uint64_t a2)
{
  sub_190C861F8(a2);
}

uint64_t sub_190C82D30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_190C82D44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for _EXExtensionAvailablilityObserver();
  result = sub_190CA89F8();
  *a1 = result;
  return result;
}

uint64_t sub_190C82D84()
{
  sub_190CA8C50();
  sub_190CA84C4();
  return sub_190CA8C80();
}

uint64_t sub_190C82DD0()
{
  return sub_190CA84C4();
}

uint64_t sub_190C82DFC()
{
  sub_190CA8C50();
  sub_190CA84C4();
  return sub_190CA8C80();
}

uint64_t sub_190C82E44()
{
  return sub_190CA84AC();
}

void sub_190C82E60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v6 = type metadata accessor for _EXExtensionAvailablilityObserver();
  v7 = swift_allocObject();
  swift_retain();
  sub_190CA84DC();
  v8 = OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_queries;
  v9 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQuery()), sel_init);
  *(_QWORD *)&v9[OBJC_IVAR____EXQuery_resultType] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_190CADDD0;
  *(_QWORD *)(v10 + 32) = v9;
  v12 = v10;
  sub_190CA86D4();
  *(_QWORD *)(v7 + v8) = v12;
  v11 = (_QWORD *)(v7 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
  *v11 = a1;
  v11[1] = a2;
  sub_190C825B0();
  a3[3] = v6;
  *a3 = v7;
}

uint64_t sub_190C830D8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_190C8C484(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_190C83CF0();
        v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = sub_190CA8AB8();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v8 = sub_190CA8944();
  v9 = sub_190C832C4(v5, v8);
  swift_retain();
  a1 = sub_190C8C484((uint64_t)v6);
  v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * a1);
  sub_190C837C0(a1, v9);
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_190C83224(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_190CA8944();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_190C832C4(v7, result + 1);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_190C83BA0(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_190C832C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AC00);
    v2 = sub_190CA8B18();
    v18 = v2;
    sub_190CA8AA0();
    v3 = sub_190CA8AC4();
    if (v3)
    {
      v4 = v3;
      type metadata accessor for _EXQuery();
      do
      {
        swift_dynamicCast();
        type metadata accessor for _EXActiveQuery();
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_190C834EC(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_190CA889C();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_190CA8AC4();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_190C834EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AC00);
  v6 = sub_190CA8B0C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_retain();
    }
    result = sub_190CA889C();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_190C837C0(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_190CA8920();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_190CA889C();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_190C83970(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  audit_token_t atoken;

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_190CA8920();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v31 = v4;
      v32 = v2;
      v33 = (result + 1) & v7;
      v34 = v7;
      do
      {
        v35 = v3;
        v8 = (unsigned int *)(*(_QWORD *)(v2 + 48) + 32 * v6);
        v9 = *v8;
        v10 = v8[1];
        v12 = v8[2];
        v11 = v8[3];
        v13 = v8[4];
        v14 = v8[5];
        v15 = v8[6];
        v16 = v8[7];
        sub_190CA8C50();
        atoken.val[0] = v9;
        atoken.val[1] = v10;
        atoken.val[2] = v12;
        atoken.val[3] = v11;
        atoken.val[4] = v13;
        atoken.val[5] = v14;
        atoken.val[6] = v15;
        atoken.val[7] = v16;
        audit_token_to_pid(&atoken);
        sub_190CA8C74();
        atoken.val[0] = v9;
        atoken.val[1] = v10;
        atoken.val[2] = v12;
        atoken.val[3] = v11;
        atoken.val[4] = v13;
        atoken.val[5] = v14;
        atoken.val[6] = v15;
        atoken.val[7] = v16;
        v3 = v35;
        audit_token_to_pidversion(&atoken);
        sub_190CA8C74();
        result = sub_190CA8C80();
        v17 = result & v34;
        if (v35 >= (uint64_t)v33)
        {
          if (v17 < v33)
          {
            v4 = v31;
            v2 = v32;
          }
          else
          {
            v4 = v31;
            v2 = v32;
            if (v35 >= (uint64_t)v17)
              goto LABEL_12;
          }
        }
        else
        {
          v4 = v31;
          v2 = v32;
          if (v17 >= v33 || v35 >= (uint64_t)v17)
          {
LABEL_12:
            v18 = *(_QWORD *)(v2 + 48);
            v19 = (_OWORD *)(v18 + 32 * v35);
            v20 = (_OWORD *)(v18 + 32 * v6);
            if (v35 != v6 || v19 >= v20 + 2)
            {
              v21 = v20[1];
              *v19 = *v20;
              v19[1] = v21;
            }
            v22 = *(_QWORD *)(v2 + 56);
            v23 = (_QWORD *)(v22 + 8 * v35);
            v24 = (_QWORD *)(v22 + 8 * v6);
            if (v35 != v6 || (v3 = v6, v23 >= v24 + 1))
            {
              *v23 = *v24;
              v3 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v34;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v25 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v26 = *v25;
    v27 = (-1 << v3) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v4 + 8 * (result >> 6));
    v27 = *v25;
    v26 = (-1 << result) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(v2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v30;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

id sub_190C83BA0(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_190C8C484((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_190C83CF0();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_release();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_190C834EC(v12, a3 & 1);
  v18 = sub_190C8C484((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for _EXQuery();
  result = (id)sub_190CA8BFC();
  __break(1u);
  return result;
}

void *sub_190C83CF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AC00);
  v2 = *v0;
  v3 = sub_190CA8B00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_190C83E98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  void *v19;
  _OWORD *v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE20A340);
  v2 = *v0;
  v3 = sub_190CA8B00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = 8 * v15;
    v19 = *(void **)(*(_QWORD *)(v2 + 56) + v18);
    v20 = (_OWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v21 = v17[1];
    *v20 = *v17;
    v20[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = v19;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_190C84044(uint64_t a1, void *a2, void *a3)
{
  sub_190C840E4(a1, a2, a3, &qword_1EE20C048, (uint64_t (*)(uint64_t))type metadata accessor for _EXConnectionActiveQueryObserver, (uint64_t)&unk_190CAE160, (uint64_t)&unk_1E2CFE550, (uint64_t)sub_190C866A8, (uint64_t)&block_descriptor_18_0);
}

void sub_190C84094(uint64_t a1, void *a2, void *a3)
{
  sub_190C840E4(a1, a2, a3, &qword_1EE20ABF8, (uint64_t (*)(uint64_t))type metadata accessor for QueryController, (uint64_t)&unk_190CAE230, (uint64_t)&unk_1E2CFE500, (uint64_t)sub_190C866A8, (uint64_t)&block_descriptor_11);
}

void sub_190C840E4(uint64_t a1, void *a2, void *a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  NSObject *v45;
  NSObject *v46;
  uint64_t v47;
  uint8_t *v48;
  NSObject *v49;
  id v50;
  NSObject *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  _QWORD *v55;
  NSObject *v56;
  id v57;
  uint64_t v58;
  void *v59;
  NSObject *v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  os_unfair_lock_s *v67;
  _QWORD v68[3];
  _QWORD aBlock[6];

  v12 = sub_190C3A458(a4, a5, a6);
  if ((sub_190C6D314((uint64_t)a2) & 1) != 0)
  {
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v13 = sub_190CA8518();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ECD98BD8);
    v14 = a3;
    v15 = a2;
    v16 = (char *)v14;
    v17 = v15;
    v18 = sub_190CA8500();
    v19 = sub_190CA8800();
    v65 = a8;
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v20 = 138543618;
      v64 = v12;
      v22 = v16;
      sub_190CA88F0();
      *v21 = v16;

      *(_WORD *)(v20 + 12) = 2114;
      aBlock[0] = v17;
      v23 = v17;
      sub_190CA88F0();
      v21[1] = v17;

      v12 = v64;
      _os_log_impl(&dword_190C25000, v18, v19, "%{public}@ Adding observer for query '%{public}@'", (uint8_t *)v20, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v21, -1, -1);
      MEMORY[0x19401889C](v20, -1, -1);

    }
    else
    {

    }
    v34 = v16;
    v67 = (os_unfair_lock_s *)(*(_QWORD *)&v16[OBJC_IVAR____EXDiscoveryController_activeQueriesLock] + 16);
    os_unfair_lock_lock(v67);
    v35 = (uint64_t *)&v16[OBJC_IVAR____EXDiscoveryController_activeQueries];
    swift_beginAccess();
    v36 = *v35;
    if ((*v35 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v37 = sub_190CA8944();
      swift_bridgeObjectRelease();
      v36 = *v35;
    }
    else
    {
      v37 = *(_QWORD *)(v36 + 16);
    }
    v38 = v17;
    swift_bridgeObjectRetain();
    v39 = sub_190C82168(v38, v36);

    swift_bridgeObjectRelease();
    if (!v39)
    {
      type metadata accessor for _EXActiveQuery();
      v40 = (_QWORD *)swift_allocObject();
      v40[2] = v38;
      v40[3] = v34;
      v41 = MEMORY[0x1E0DEE9E8];
      v40[4] = MEMORY[0x1E0DEE9E8];
      v40[5] = v41;
      v40[6] = v41;
      swift_beginAccess();
      v42 = v34;
      v43 = v38;
      v44 = swift_retain();
      sub_190C83224(v44, v43);
      swift_endAccess();
      v45 = v43;
      v46 = sub_190CA8500();
      v47 = sub_190CA8800();
      if (os_log_type_enabled(v46, (os_log_type_t)v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        v63 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v48 = 138543362;
        aBlock[0] = v45;
        v49 = v45;
        sub_190CA88F0();
        *v63 = v45;

        _os_log_impl(&dword_190C25000, v46, (os_log_type_t)v47, "New active query %{public}@'", v48, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v63, -1, -1);
        MEMORY[0x19401889C](v48, -1, -1);
        v45 = v46;
      }
      else
      {

      }
      swift_retain();
    }
    swift_beginAccess();
    v50 = (id)swift_unknownObjectRetain();
    swift_retain();
    sub_190C8F348((uint64_t)v68, (uint64_t)v50, v12);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_190C8F348((uint64_t)v68, (uint64_t)v50, v12);
    swift_endAccess();

    swift_unknownObjectRelease();
    if (v37 <= 0)
    {
      v51 = v34;
      v52 = sub_190CA8500();
      v53 = sub_190CA8800();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        v55 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v54 = 138543362;
        aBlock[0] = v51;
        v56 = v51;
        sub_190CA88F0();
        *v55 = v51;

        _os_log_impl(&dword_190C25000, v52, v53, "%{public}@ LS database observing started.", v54, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v55, -1, -1);
        MEMORY[0x19401889C](v54, -1, -1);
      }
      else
      {

        v52 = v51;
      }

      v57 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v58 = swift_allocObject();
      *(_QWORD *)(v58 + 16) = v51;
      aBlock[4] = v65;
      aBlock[5] = v58;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_190C2A3B4;
      aBlock[3] = a9;
      v59 = _Block_copy(aBlock);
      v60 = v51;
      swift_release();
      v61 = objc_msgSend(v57, sel_addChangeObserver_, v59);
      _Block_release(v59);

      sub_190CA8908();
      swift_unknownObjectRelease();
      v62 = (uint64_t)v60 + OBJC_IVAR____EXDiscoveryController_settingsStoreToken;
      swift_beginAccess();
      sub_190C8662C((uint64_t)aBlock, v62);
      swift_endAccess();
      objc_msgSend(*(id *)((char *)&v60->isa + OBJC_IVAR____EXDiscoveryController_observer), sel_startObserving);
    }
    sub_190C8D7C4();
    swift_release_n();
    os_unfair_lock_unlock(v67);
  }
  else
  {
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v24 = sub_190CA8518();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ECD98BD8);
    v25 = a3;
    v26 = a2;
    v66 = v25;
    v27 = v26;
    v28 = sub_190CA8500();
    v29 = sub_190CA87E8();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v30 = 138543618;
      v32 = v66;
      sub_190CA88F0();
      *v31 = v66;

      *(_WORD *)(v30 + 12) = 2114;
      aBlock[0] = v27;
      v33 = v27;
      sub_190CA88F0();
      v31[1] = v27;

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v31, -1, -1);
      MEMORY[0x19401889C](v30, -1, -1);

    }
    else
    {

    }
  }
}

void sub_190C84A18(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  id v27;
  os_unfair_lock_s *v28;
  uint64_t *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  NSObject *v43;
  NSObject *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  _QWORD *v48;
  NSObject *v49;
  id v50;
  uint64_t v51;
  void *v52;
  NSObject *v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  id v59;
  _QWORD v60[3];
  _QWORD aBlock[6];

  v6 = sub_190C3A458((unint64_t *)&unk_1EE20C038, (uint64_t (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver, (uint64_t)&unk_190CAE8B0);
  if ((sub_190C6D314((uint64_t)a2) & 1) != 0)
  {
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v7 = sub_190CA8518();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ECD98BD8);
    v8 = a3;
    v9 = a2;
    v10 = (char *)v8;
    v11 = v9;
    v12 = sub_190CA8500();
    v13 = sub_190CA8800();
    v58 = v10;
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138543618;
      v16 = v10;
      sub_190CA88F0();
      *v15 = v58;

      *(_WORD *)(v14 + 12) = 2114;
      aBlock[0] = v11;
      v17 = v11;
      v10 = v58;
      sub_190CA88F0();
      v15[1] = v11;

      _os_log_impl(&dword_190C25000, v12, v13, "%{public}@ Adding observer for query '%{public}@'", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v15, -1, -1);
      MEMORY[0x19401889C](v14, -1, -1);

    }
    else
    {

    }
    v28 = (os_unfair_lock_s *)(*(_QWORD *)&v10[OBJC_IVAR____EXDiscoveryController_activeQueriesLock] + 16);
    os_unfair_lock_lock(v28);
    v29 = (uint64_t *)&v10[OBJC_IVAR____EXDiscoveryController_activeQueries];
    swift_beginAccess();
    v30 = *v29;
    if ((*v29 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v10 = v58;
      v57 = sub_190CA8944();
      swift_bridgeObjectRelease();
      v30 = *v29;
    }
    else
    {
      v57 = *(_QWORD *)(v30 + 16);
    }
    v31 = v11;
    swift_bridgeObjectRetain();
    v32 = sub_190C82168(v31, v30);

    swift_bridgeObjectRelease();
    if (v32)
    {
      v33 = v57;
    }
    else
    {
      type metadata accessor for _EXActiveQuery();
      v34 = (_QWORD *)swift_allocObject();
      v34[2] = v31;
      v34[3] = v10;
      v35 = MEMORY[0x1E0DEE9E8];
      v34[4] = MEMORY[0x1E0DEE9E8];
      v34[5] = v35;
      v34[6] = v35;
      swift_beginAccess();
      v36 = v10;
      v37 = v31;
      v38 = swift_retain();
      sub_190C83224(v38, v37);
      swift_endAccess();
      v39 = v37;
      v40 = sub_190CA8500();
      v41 = sub_190CA8800();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v56 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v42 = 138543362;
        aBlock[0] = v39;
        v43 = v39;
        sub_190CA88F0();
        *v56 = v39;

        _os_log_impl(&dword_190C25000, v40, v41, "New active query %{public}@'", v42, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v56, -1, -1);
        MEMORY[0x19401889C](v42, -1, -1);
        v39 = v40;
      }
      else
      {

      }
      v33 = v57;

      swift_retain();
      v10 = v58;
    }
    swift_beginAccess();
    swift_retain_n();
    swift_retain();
    sub_190C8F348((uint64_t)v60, a1, v6);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_beginAccess();
    swift_retain();
    sub_190C8F348((uint64_t)v60, a1, v6);
    swift_endAccess();
    swift_release();
    swift_unknownObjectRelease();
    if (v33 <= 0)
    {
      v44 = v10;
      v45 = sub_190CA8500();
      v46 = sub_190CA8800();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        v48 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v47 = 138543362;
        aBlock[0] = v44;
        v49 = v44;
        sub_190CA88F0();
        *v48 = v44;

        _os_log_impl(&dword_190C25000, v45, v46, "%{public}@ LS database observing started.", v47, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v48, -1, -1);
        MEMORY[0x19401889C](v47, -1, -1);
      }
      else
      {

        v45 = v44;
      }

      v50 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = v44;
      aBlock[4] = sub_190C86624;
      aBlock[5] = v51;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_190C2A3B4;
      aBlock[3] = &block_descriptor_4;
      v52 = _Block_copy(aBlock);
      v53 = v44;
      swift_release();
      v54 = objc_msgSend(v50, sel_addChangeObserver_, v52);
      _Block_release(v52);

      sub_190CA8908();
      swift_unknownObjectRelease();
      v55 = (uint64_t)v53 + OBJC_IVAR____EXDiscoveryController_settingsStoreToken;
      swift_beginAccess();
      sub_190C8662C((uint64_t)aBlock, v55);
      swift_endAccess();
      objc_msgSend(*(id *)((char *)&v53->isa + OBJC_IVAR____EXDiscoveryController_observer), sel_startObserving);
    }
    sub_190C8D7C4();
    swift_release_n();
    os_unfair_lock_unlock(v28);
  }
  else
  {
    if (qword_1ECD98BF8 != -1)
      swift_once();
    v18 = sub_190CA8518();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ECD98BD8);
    v19 = a3;
    v20 = a2;
    v59 = v19;
    v21 = v20;
    v22 = sub_190CA8500();
    v23 = sub_190CA87E8();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138543618;
      v26 = v59;
      sub_190CA88F0();
      *v25 = v59;

      *(_WORD *)(v24 + 12) = 2114;
      aBlock[0] = v21;
      v27 = v21;
      sub_190CA88F0();
      v25[1] = v21;

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v25, -1, -1);
      MEMORY[0x19401889C](v24, -1, -1);

    }
    else
    {

    }
  }
}

void sub_190C85378(void *a1, void *a2, void *a3)
{
  sub_190C853B0(a1, a2, a3, &qword_1EE20C048, (uint64_t (*)(uint64_t))type metadata accessor for _EXConnectionActiveQueryObserver, (uint64_t)&unk_190CAE160);
}

void sub_190C85394(void *a1, void *a2, void *a3)
{
  sub_190C853B0(a1, a2, a3, &qword_1EE20ABF8, (uint64_t (*)(uint64_t))type metadata accessor for QueryController, (uint64_t)&unk_190CAE230);
}

void sub_190C853B0(void *a1, void *a2, void *a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  id v19;
  os_unfair_lock_s *v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  NSObject *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  NSObject *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD *v41;
  NSObject *v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  os_unfair_lock_s *v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  sub_190C3A458(a4, a5, a6);
  if (qword_1ECD98BF8 != -1)
    swift_once();
  v9 = sub_190CA8518();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ECD98BD8);
  v10 = a3;
  v11 = a2;
  v12 = (char *)v10;
  v13 = v11;
  v14 = sub_190CA8500();
  v15 = sub_190CA8800();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v16 = 138543618;
    v18 = v12;
    sub_190CA88F0();
    *v17 = v12;

    *(_WORD *)(v16 + 12) = 2114;
    *(_QWORD *)&v49 = v13;
    v19 = v13;
    sub_190CA88F0();
    v17[1] = v13;

    _os_log_impl(&dword_190C25000, v14, v15, "%{public}@ Removing observer for query '%{public}@'", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v17, -1, -1);
    MEMORY[0x19401889C](v16, -1, -1);

  }
  else
  {

  }
  v20 = (os_unfair_lock_s *)(*(_QWORD *)&v12[OBJC_IVAR____EXDiscoveryController_activeQueriesLock] + 16);
  os_unfair_lock_lock(v20);
  v21 = (uint64_t *)&v12[OBJC_IVAR____EXDiscoveryController_activeQueries];
  swift_beginAccess();
  v22 = *v21;
  v23 = v13;
  swift_bridgeObjectRetain();
  v24 = sub_190C82168(v23, v22);

  swift_bridgeObjectRelease();
  if (v24)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_190C939C0();
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_beginAccess();
    sub_190C939C0();
    swift_endAccess();

    swift_unknownObjectRelease();
    v25 = *(_QWORD *)(sub_190C8EDE8() + 16);
    swift_bridgeObjectRelease();
    if (!v25)
    {
      v26 = v12;
      v27 = v23;
      v28 = v26;
      v29 = v27;
      v30 = sub_190CA8500();
      v31 = sub_190CA87DC();
      if (os_log_type_enabled(v30, v31))
      {
        v46 = v20;
        v32 = swift_slowAlloc();
        v45 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v32 = 138543618;
        v33 = v28;
        sub_190CA88F0();
        *v45 = v28;

        *(_WORD *)(v32 + 12) = 2114;
        *(_QWORD *)&v49 = v29;
        v34 = v29;
        sub_190CA88F0();
        v45[1] = v29;

        v28 = v30;
        _os_log_impl(&dword_190C25000, v30, v31, "%{public}@  No more observers for query '%{public}@ '", (uint8_t *)v32, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v45, -1, -1);
        v35 = v32;
        v20 = v46;
        MEMORY[0x19401889C](v35, -1, -1);
      }
      else
      {

      }
      swift_beginAccess();
      sub_190C830D8((unint64_t)v29);
      swift_endAccess();
      swift_release();
    }
    if ((*v21 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v36 = sub_190CA8944();
      swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_14:
        swift_release();
        goto LABEL_22;
      }
    }
    else if (*(_QWORD *)(*v21 + 16))
    {
      goto LABEL_14;
    }
    objc_msgSend(*(id *)&v12[OBJC_IVAR____EXDiscoveryController_observer], sel_stopObserving, v45);
    v37 = v12;
    v38 = sub_190CA8500();
    v39 = sub_190CA8800();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v40 = 138543362;
      *(_QWORD *)&v49 = v37;
      v42 = v37;
      sub_190CA88F0();
      *v41 = v37;

      _os_log_impl(&dword_190C25000, v38, v39, "%{public}@ LS database observing stopped", v40, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v41, -1, -1);
      MEMORY[0x19401889C](v40, -1, -1);
    }
    else
    {

      v38 = v37;
    }

    v43 = (uint64_t)v37 + OBJC_IVAR____EXDiscoveryController_settingsStoreToken;
    swift_beginAccess();
    sub_190C6F4D4(v43, (uint64_t)&v47);
    if (v48)
    {
      sub_190C38F64(&v47, &v49);
      v44 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      __swift_project_boxed_opaque_existential_2Tm(&v49, v50);
      objc_msgSend(v44, sel_removeChangeObserver_, sub_190CA8BC0());
      swift_release();

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v49);
    }
    else
    {
      swift_release();
      sub_190C459C8((uint64_t)&v47);
    }
  }
LABEL_22:
  os_unfair_lock_unlock(v20);
}

void sub_190C85ACC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  id v15;
  os_unfair_lock_s *v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  NSObject *v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  NSObject *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  NSObject *v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  os_unfair_lock_s *v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;

  sub_190C3A458((unint64_t *)&unk_1EE20C038, (uint64_t (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver, (uint64_t)&unk_190CAE8B0);
  if (qword_1ECD98BF8 != -1)
    swift_once();
  v5 = sub_190CA8518();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ECD98BD8);
  v6 = a3;
  v7 = a2;
  v8 = (char *)v6;
  v9 = v7;
  v10 = sub_190CA8500();
  v11 = sub_190CA8800();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138543618;
    v14 = v8;
    sub_190CA88F0();
    *v13 = v8;

    *(_WORD *)(v12 + 12) = 2114;
    *(_QWORD *)&v45 = v9;
    v15 = v9;
    sub_190CA88F0();
    v13[1] = v9;

    _os_log_impl(&dword_190C25000, v10, v11, "%{public}@ Removing observer for query '%{public}@'", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v13, -1, -1);
    MEMORY[0x19401889C](v12, -1, -1);

  }
  else
  {

  }
  v16 = (os_unfair_lock_s *)(*(_QWORD *)&v8[OBJC_IVAR____EXDiscoveryController_activeQueriesLock] + 16);
  os_unfair_lock_lock(v16);
  v17 = (uint64_t *)&v8[OBJC_IVAR____EXDiscoveryController_activeQueries];
  swift_beginAccess();
  v18 = *v17;
  v19 = v9;
  swift_bridgeObjectRetain();
  v20 = sub_190C82168(v19, v18);

  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_190C939C0();
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_beginAccess();
    sub_190C939C0();
    swift_endAccess();
    swift_release();
    swift_unknownObjectRelease();
    v21 = *(_QWORD *)(sub_190C8EDE8() + 16);
    swift_bridgeObjectRelease();
    if (!v21)
    {
      v22 = v8;
      v23 = v19;
      v24 = v22;
      v25 = v23;
      v26 = sub_190CA8500();
      v27 = sub_190CA87DC();
      if (os_log_type_enabled(v26, v27))
      {
        v42 = v16;
        v28 = swift_slowAlloc();
        v41 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v28 = 138543618;
        v29 = v24;
        sub_190CA88F0();
        *v41 = v24;

        *(_WORD *)(v28 + 12) = 2114;
        *(_QWORD *)&v45 = v25;
        v30 = v25;
        sub_190CA88F0();
        v41[1] = v25;

        v24 = v26;
        _os_log_impl(&dword_190C25000, v26, v27, "%{public}@  No more observers for query '%{public}@ '", (uint8_t *)v28, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v41, -1, -1);
        v31 = v28;
        v16 = v42;
        MEMORY[0x19401889C](v31, -1, -1);
      }
      else
      {

      }
      swift_beginAccess();
      sub_190C830D8((unint64_t)v25);
      swift_endAccess();
      swift_release();
    }
    if ((*v17 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v32 = sub_190CA8944();
      swift_bridgeObjectRelease();
      if (v32)
      {
LABEL_14:
        swift_release();
        goto LABEL_22;
      }
    }
    else if (*(_QWORD *)(*v17 + 16))
    {
      goto LABEL_14;
    }
    objc_msgSend(*(id *)&v8[OBJC_IVAR____EXDiscoveryController_observer], sel_stopObserving, v41);
    v33 = v8;
    v34 = sub_190CA8500();
    v35 = sub_190CA8800();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v36 = 138543362;
      *(_QWORD *)&v45 = v33;
      v38 = v33;
      sub_190CA88F0();
      *v37 = v33;

      _os_log_impl(&dword_190C25000, v34, v35, "%{public}@ LS database observing stopped", v36, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v37, -1, -1);
      MEMORY[0x19401889C](v36, -1, -1);
    }
    else
    {

      v34 = v33;
    }

    v39 = (uint64_t)v33 + OBJC_IVAR____EXDiscoveryController_settingsStoreToken;
    swift_beginAccess();
    sub_190C6F4D4(v39, (uint64_t)&v43);
    if (v44)
    {
      sub_190C38F64(&v43, &v45);
      v40 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      __swift_project_boxed_opaque_existential_2Tm(&v45, v46);
      objc_msgSend(v40, sel_removeChangeObserver_, sub_190CA8BC0());
      swift_release();

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v45);
    }
    else
    {
      swift_release();
      sub_190C459C8((uint64_t)&v43);
    }
  }
LABEL_22:
  os_unfair_lock_unlock(v16);
}

void sub_190C861F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void (*v3)(void);
  id v4;
  id v5;

  v2 = *(void **)(a1 + OBJC_IVAR____EXQueryResult_availablility);
  if (v2)
  {
    v3 = *(void (**)(void))(v1 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
    type metadata accessor for _EXExtensionAvailablility();
    if (objc_msgSend(v2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
    {
      v5 = v2;
      v3();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

id sub_190C862C4(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  objc_super v14;

  v3 = OBJC_IVAR____EXExtensionAvailablility_enabledCount;
  *(_QWORD *)&v1[OBJC_IVAR____EXExtensionAvailablility_enabledCount] = 0;
  v4 = OBJC_IVAR____EXExtensionAvailablility_disabledCount;
  *(_QWORD *)&v1[OBJC_IVAR____EXExtensionAvailablility_disabledCount] = 0;
  v5 = OBJC_IVAR____EXExtensionAvailablility_unelectedCount;
  *(_QWORD *)&v1[OBJC_IVAR____EXExtensionAvailablility_unelectedCount] = 0;
  v6 = v1;
  v7 = (void *)sub_190CA85D8();
  v8 = objc_msgSend(a1, sel_decodeIntegerForKey_, v7);

  *(_QWORD *)&v1[v3] = v8;
  v9 = (void *)sub_190CA85D8();
  v10 = objc_msgSend(a1, sel_decodeIntegerForKey_, v9);

  *(_QWORD *)&v1[v4] = v10;
  v11 = (void *)sub_190CA85D8();
  v12 = objc_msgSend(a1, sel_decodeIntegerForKey_, v11);

  *(_QWORD *)&v1[v5] = v12;
  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for _EXExtensionAvailablility();
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t type metadata accessor for _EXExtensionAvailablility()
{
  return objc_opt_self();
}

uint64_t method lookup function for _EXExtensionAvailablility()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _EXExtensionAvailablility.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of _EXExtensionAvailablility.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_190C8646C()
{
  return type metadata accessor for _EXExtensionAvailablilityObserver();
}

uint64_t type metadata accessor for _EXExtensionAvailablilityObserver()
{
  uint64_t result;

  result = qword_1EE20BFF8;
  if (!qword_1EE20BFF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190C864B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190CA84E8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_190C86538()
{
  return sub_190C3A458(&qword_1EE20C010, (uint64_t (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver, (uint64_t)&unk_190CAE7F4);
}

uint64_t sub_190C86564()
{
  return MEMORY[0x1E0DEA528];
}

uint64_t sub_190C86570(uint64_t a1)
{
  uint64_t result;

  result = sub_190C3A458(&qword_1EE20C018, (uint64_t (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver, (uint64_t)&unk_190CAE81C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190C865AC(uint64_t a1)
{
  uint64_t result;

  result = sub_190C3A458((unint64_t *)&unk_1EE20C020, (uint64_t (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver, (uint64_t)&unk_190CAE85C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190C865E8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_190C8660C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_190C8661C(uint64_t a1)
{
  uint64_t v1;

  sub_190C829A4(a1, v1);
}

uint64_t sub_190C86624()
{
  return sub_190C6B52C();
}

uint64_t sub_190C8662C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_190C86674()
{
  uint64_t v0;

  return swift_deallocObject();
}

id _EXExtensionInstanceIdentifier.__allocating_init(instanceIdentifier:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return _EXExtensionInstanceIdentifier.init(instanceIdentifier:)(a1);
}

uint64_t static _EXExtensionInstanceIdentifier.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE20C068;
}

uint64_t static _EXExtensionInstanceIdentifier.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE20C068 = a1;
  return result;
}

uint64_t (*static _EXExtensionInstanceIdentifier.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_190C867F0()
{
  if (qword_1EE20B848 != -1)
    swift_once();
  return (id)qword_1EE20C070;
}

id _EXExtensionInstanceIdentifier.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id _EXExtensionInstanceIdentifier.init()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v9;

  v1 = v0;
  v2 = sub_190CA84E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190CA84DC();
  v6 = (void *)sub_190CA84A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = objc_msgSend(v1, sel_initWithIdentifier_, v6);

  return v7;
}

uint64_t _EXExtensionInstanceIdentifier.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t result;
  void *v11;
  id v12;
  objc_super v13;

  v2 = v1;
  v4 = sub_190CA84E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(v2);
  sub_190C2B30C(0, (unint64_t *)&unk_1EE20AB50);
  v9 = v8;
  result = sub_190CA8878();
  if (result)
  {
    v11 = (void *)result;
    sub_190CA84B8();

    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))((uint64_t)v9 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v7, v4);
    v13.receiver = v9;
    v13.super_class = v2;
    v12 = objc_msgSendSuper2(&v13, sel_init);

    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _EXExtensionInstanceIdentifier.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t result;
  void *v9;
  objc_class *v10;
  id v11;
  objc_super v12;

  v3 = sub_190CA84E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C2B30C(0, (unint64_t *)&unk_1EE20AB50);
  v7 = v1;
  result = sub_190CA8878();
  if (result)
  {
    v9 = (void *)result;
    sub_190CA84B8();

    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))((uint64_t)v7 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v6, v3);
    v10 = (objc_class *)type metadata accessor for _EXExtensionInstanceIdentifier();
    v12.receiver = v7;
    v12.super_class = v10;
    v11 = objc_msgSendSuper2(&v12, sel_init);

    return (uint64_t)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_190C86CA4(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_190CA84A0();
  v3 = (id)sub_190CA85D8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

}

uint64_t _EXExtensionInstanceIdentifier.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
  v4 = sub_190CA84E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_190C86E14()
{
  sub_190C2B30C(0, (unint64_t *)&unk_1ECD98C20);
  if (qword_1EE20B848 != -1)
    swift_once();
  return sub_190CA88A8() & 1;
}

uint64_t sub_190C86E88()
{
  return sub_190CA84D0();
}

id _EXExtensionInstanceIdentifier.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionInstanceIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190C86EE4()
{
  return type metadata accessor for _EXExtensionInstanceIdentifier();
}

uint64_t method lookup function for _EXExtensionInstanceIdentifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static _EXExtensionInstanceIdentifier.default()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of _EXExtensionInstanceIdentifier.__allocating_init(instanceIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of _EXExtensionInstanceIdentifier.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of _EXExtensionInstanceIdentifier.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of _EXExtensionInstanceIdentifier.isDefault.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

void static _EXExtensionProcess.extensionProcess(configuration:)(void *a1)
{
  sub_190C32894(a1);
}

void *sub_190C87074()
{
  return sub_190C2960C(1);
}

void *sub_190C870A0()
{
  return sub_190C2960C(0);
}

id sub_190C871E8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle);
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_invalidationLock) + 16);
  os_unfair_lock_lock(v2);
  v3 = *(void **)(v1 + OBJC_IVAR____EXExtensionProcessHandle_assertion);
  if (v3)
    v4 = objc_msgSend(v3, sel_isValid);
  else
    v4 = 0;
  os_unfair_lock_unlock(v2);
  return v4;
}

id sub_190C8725C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_assertion), sel_invalidate);
}

id sub_190C872A8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), "pid");
}

uint64_t sub_190C872CC()
{
  uint64_t v0;
  uint64_t v2;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), sel_auditToken);
  return v2;
}

id sub_190C8735C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____EXExtensionProcess_configuration);
  swift_beginAccess();
  return *v1;
}

void sub_190C873FC(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____EXExtensionProcess_configuration);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_190C8744C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____EXExtensionProcess_configuration);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_190C874AC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL sub_190C87500(void *a1)
{
  uint64_t v1;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), sel_auditToken);
  objc_msgSend(a1, sel_auditToken);
  return _EXAuditTokenEqual(&v5, &v4);
}

id sub_190C87674()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), "pid");
  v1 = (void *)sub_190CA8C38();
  v2 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingIdentifier_, v1);

  return v2;
}

id _EXExtensionProcess.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void _EXExtensionProcess.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_190C87888()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionProcess.ProcessObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190C878BC()
{
  swift_release();
  return swift_deallocObject();
}

id sub_190C878E0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____EXExtensionProcess_configuration);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for _EXExtensionProcess()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _EXExtensionProcess.newXPCConnection()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of _EXExtensionProcess.makeXPCConnection()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of _EXExtensionProcess.invalidate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of _EXExtensionProcess.isValid.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.invalidateLaunchAssertion()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of _EXExtensionProcess.pid.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.auditToken.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of _EXExtensionProcess.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.configuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of _EXExtensionProcess.configuration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.matchesProcess(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.processPredicate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of _EXExtensionProcess.rbs_pid()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

void sub_190C87ACC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  _QWORD *v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandlerLock)
                          + 16);
  os_unfair_lock_lock(v1);
  v2 = (_QWORD *)(v0
                + OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler);
  v3 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler);
  *v2 = 0;
  v2[1] = 0;
  sub_190C2FA88((uint64_t)v3);
  sub_190C2FC70((uint64_t)v3);
  os_unfair_lock_unlock(v1);
  if (v3)
  {
    v4 = swift_retain();
    v3(v4);
    sub_190C2FC70((uint64_t)v3);
    sub_190C2FC70((uint64_t)v3);
  }
}

uint64_t sub_190C87B6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_190C87B90()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t dispatch thunk of AppExtensionConfiguration.accept(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_190C87BCC()
{
  id v0;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  objc_msgSend(v0, sel_hostAuditToken);

  return v2;
}

uint64_t _AppExtension.hostAuditToken.getter()
{
  id v0;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  objc_msgSend(v0, sel_hostAuditToken);

  return v2;
}

uint64_t static _AppExtension.main()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  NSObject *v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v32 = (char *)&v28 - v8;
  v33 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190CA87DC();
  if (qword_1ECD99018 != -1)
    swift_once();
  v12 = qword_1ECD99010;
  if (os_log_type_enabled((os_log_t)qword_1ECD99010, v11))
  {
    v30 = AssociatedTypeWitness;
    v13 = swift_slowAlloc();
    v31 = v2;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v29 = v6;
    v16 = (_QWORD *)v15;
    *(_DWORD *)v14 = 138412290;
    v28 = v14 + 4;
    v17 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v34 = v17;
    sub_190CA88F0();
    *v16 = v17;
    AssociatedTypeWitness = v30;
    _os_log_impl(&dword_190C25000, v12, v11, "Launching extension %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    v18 = v16;
    v6 = v29;
    MEMORY[0x19401889C](v18, -1, -1);
    MEMORY[0x19401889C](v14, -1, -1);
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v19 = (uint64_t)v32;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v20 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for _SceneWrapper(0, AssociatedTypeWitness, AssociatedConformanceWitness, v22);
  v26 = sub_190C881C0(v19, v23, v24, v25);
  objc_msgSend(v20, sel_setExtension_, v26);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v10, a1);
}

uint64_t type metadata accessor for _SceneWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _SceneWrapper);
}

uint64_t sub_190C87FC0(uint64_t a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x58) + 8))(a1, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50)) & 1;
}

uint64_t sub_190C88004(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  LOBYTE(a1) = sub_190C87FC0((uint64_t)v4);

  return a1 & 1;
}

void sub_190C88050()
{
  sub_190C88284();
}

id sub_190C8806C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for _SceneWrapper(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_190C880B8(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x60)]);
}

void static _EXExtension.bootstrap(with:)(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  objc_msgSend(v2, sel_setExtension_, a1);

}

id sub_190C88140(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  objc_super v7;

  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1);
  v3 = v2[10];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(&v1[v2[12]], a1, v3);
  v5 = (objc_class *)type metadata accessor for _SceneWrapper(0, v3, v2[11], v4);
  v7.receiver = v1;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_190C881C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for _SceneWrapper(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_190C88140(a1);
}

uint64_t dispatch thunk of _AppExtension.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of _AppExtension.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of _AppExtension.hostAuditToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_190C88214()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_190C88284()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x194018788](a1, v6, a5);
}

uint64_t sub_190C882DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_190CA8A4C();
    v4 = a1 + 32;
    do
    {
      sub_190C30128(v4, (uint64_t)&v5);
      sub_190C2B30C(0, (unint64_t *)&unk_1ECD98BB0);
      swift_dynamicCast();
      sub_190CA8A28();
      sub_190CA8A58();
      sub_190CA8A64();
      sub_190CA8A34();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_190C883D4(unint64_t a1)
{
  uint64_t v3;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20BCB8);
    v3 = sub_190CA8AE8();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_190CA8BD8();
    return a1;
  }
}

uint64_t sub_190C8844C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void **v28;
  void *v29;
  id v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v34 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v34 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - v12;
  v14 = sub_190CA84E8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v36 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v34 - v18);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v21 = MEMORY[0x1E0DEE9D8];
  if (!v20)
    return v21;
  v37 = MEMORY[0x1E0DEE9D8];
  result = sub_190C9A1C4(0, v20 & ~(v20 >> 63), 0);
  if (v20 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a1 & 0xC000000000000001) == 0)
    {
      v28 = (void **)(a1 + 32);
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      while (1)
      {
        v29 = *v28;
        v35(v8, 1, 1, v14);
        sub_190C898C4(&qword_1EE20C148, MEMORY[0x1E0CB09E8]);
        v30 = v29;
        sub_190CA8B48();
        sub_190C389CC((uint64_t)v8, (uint64_t)v5);
        result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14);
        if ((_DWORD)result == 1)
          break;
        sub_190C8A144((uint64_t)v8);
        v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v31(v36, v5, v14);

        v21 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_190C9A1C4(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v21 = v37;
        }
        v33 = *(_QWORD *)(v21 + 16);
        v32 = *(_QWORD *)(v21 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_190C9A1C4(v32 > 1, v33 + 1, 1);
          v21 = v37;
        }
        *(_QWORD *)(v21 + 16) = v33 + 1;
        v31((char *)(v21+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v33), v36, v14);
        v37 = v21;
        ++v28;
        if (!--v20)
          return v21;
      }
      goto LABEL_25;
    }
    v23 = 0;
    v35 = v19;
    v36 = (char *)a1;
    while (1)
    {
      MEMORY[0x194017870](v23, a1);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
      sub_190C898C4(&qword_1EE20C148, MEMORY[0x1E0CB09E8]);
      sub_190CA8B48();
      sub_190C389CC((uint64_t)v13, (uint64_t)v11);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
      if ((_DWORD)result == 1)
        break;
      sub_190C8A144((uint64_t)v13);
      v24 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v24((char *)v19, v11, v14);
      swift_unknownObjectRelease();
      v21 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190C9A1C4(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v37;
      }
      v26 = *(_QWORD *)(v21 + 16);
      v25 = *(_QWORD *)(v21 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_190C9A1C4(v25 > 1, v26 + 1, 1);
        v21 = v37;
      }
      ++v23;
      *(_QWORD *)(v21 + 16) = v26 + 1;
      v27 = v21
          + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
          + *(_QWORD *)(v15 + 72) * v26;
      v19 = v35;
      v24((char *)v27, (char *)v35, v14);
      v37 = v21;
      a1 = (unint64_t)v36;
      if (v20 == v23)
        return v21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_190C889FC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  if (*(_QWORD *)(v1 + OBJC_IVAR____EXQueryResult_identities))
  {
    v3 = swift_bridgeObjectRetain();
    sub_190C89904(v3);
    swift_bridgeObjectRelease();
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    v4 = (void *)sub_190CA86B0();
    swift_release();
    v5 = (void *)sub_190CA85D8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  }
  v6 = *(void **)(v1 + OBJC_IVAR____EXQueryResult_availablility);
  if (v6)
  {
    v7 = v6;
    v8 = (id)sub_190CA85D8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  }
}

id sub_190C88C28()
{
  return sub_190C89864(type metadata accessor for _EXQueryResult);
}

uint64_t type metadata accessor for _EXQueryResult()
{
  return objc_opt_self();
}

id sub_190C88D00(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = a2;
  *(_QWORD *)&v5[OBJC_IVAR____EXQueryResult_identities] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____EXQueryResult_availablility] = 0;
  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for _EXQueryResult();
  return objc_msgSendSuper2(&v7, sel_init);
}

void sub_190C88F64(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  _QWORD v29[2];
  id v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v5 = sub_190CA84E8();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v29 - v9;
  v39 = a2;
  v40 = MEMORY[0x1E0DEE9E8];
  v30 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_190CA8938();
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    sub_190C6D7B8();
    sub_190CA8788();
    a1 = v41;
    v34 = v42;
    v11 = v43;
    v12 = v44;
    v13 = v45;
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 56);
    v34 = a1 + 56;
    v11 = ~v14;
    v16 = -v14;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v13 = v17 & v15;
    swift_bridgeObjectRetain();
    v12 = 0;
  }
  v29[1] = v11;
  v32 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v33 = (unint64_t)(v11 + 64) >> 6;
  v31 = MEMORY[0x1E0DEE9B0] + 8;
  while (a1 < 0)
  {
    v21 = sub_190CA895C();
    if (!v21)
      goto LABEL_33;
    v37 = v21;
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v22 = v38;
    swift_unknownObjectRelease();
    v20 = v12;
    v18 = v13;
    if (!v22)
      goto LABEL_33;
LABEL_31:

    if ((sub_190C8CF48(v22, a2) & 1) != 0)
    {

    }
    else
    {
      v26 = objc_msgSend(v22, sel_UUID);
      sub_190CA84B8();

      sub_190C8F844((uint64_t)v10, v8);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
    }
    v12 = v20;
    v13 = v18;
  }
  if (v13)
  {
    v18 = (v13 - 1) & v13;
    v19 = __clz(__rbit64(v13)) | (v12 << 6);
    v20 = v12;
LABEL_30:
    v22 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v19);
    if (!v22)
      goto LABEL_33;
    goto LABEL_31;
  }
  v23 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v23 >= v33)
      goto LABEL_33;
    v24 = *(_QWORD *)(v34 + 8 * v23);
    v20 = v12 + 1;
    if (!v24)
    {
      v20 = v12 + 2;
      if (v12 + 2 >= v33)
        goto LABEL_33;
      v24 = *(_QWORD *)(v34 + 8 * v20);
      if (!v24)
      {
        v20 = v12 + 3;
        if (v12 + 3 >= v33)
          goto LABEL_33;
        v24 = *(_QWORD *)(v34 + 8 * v20);
        if (!v24)
        {
          v20 = v12 + 4;
          if (v12 + 4 >= v33)
            goto LABEL_33;
          v24 = *(_QWORD *)(v34 + 8 * v20);
          if (!v24)
          {
            v25 = v12 + 5;
            while (v33 != v25)
            {
              v24 = *(_QWORD *)(v34 + 8 * v25++);
              if (v24)
              {
                v20 = v25 - 1;
                goto LABEL_29;
              }
            }
LABEL_33:
            sub_190C6D7B0();
            swift_bridgeObjectRelease();
            sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
            sub_190C6D7B8();
            v27 = (void *)sub_190CA8758();
            swift_bridgeObjectRelease();
            sub_190C898C4(&qword_1EE20ABB0, MEMORY[0x1E0CB09C8]);
            v28 = (void *)sub_190CA8758();
            swift_bridgeObjectRelease();
            objc_msgSend(v30, sel_initWithAddedExtensions_removedUUIDs_, v27, v28);

            return;
          }
        }
      }
    }
LABEL_29:
    v18 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

id sub_190C89404(void *a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  sub_190C2B30C(0, (unint64_t *)&unk_1EE20AB50);
  v3 = v1;
  v4 = sub_190CA8890();
  if (v4)
    v5 = v4;
  else
    v5 = MEMORY[0x1E0DEE9D8];
  v6 = sub_190C8844C(v5);
  swift_bridgeObjectRelease();
  v7 = sub_190C9AB90(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v3[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = v7;

  v8 = sub_190C8A184();
  return v8;
}

unint64_t sub_190C896B0()
{
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
  sub_190C6D7B8();
  swift_bridgeObjectRetain();
  sub_190CA8770();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  sub_190CA84E8();
  sub_190C898C4(&qword_1EE20ABB0, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  sub_190CA8770();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

uint64_t sub_190C89848()
{
  return swift_bridgeObjectRelease();
}

id sub_190C89858()
{
  return sub_190C89864(type metadata accessor for _EXQueryResultUpdate);
}

id sub_190C89864(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for _EXQueryResultUpdate()
{
  return objc_opt_self();
}

uint64_t sub_190C898C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_190CA84E8();
    result = MEMORY[0x1940187DC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190C89904(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_190CA8944();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC0);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_190C89AF4(&v8, v3 + 4, v2, a1);
  result = sub_190C6D7B0();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

size_t sub_190C899FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C140);
  v3 = *(_QWORD *)(sub_190CA84E8() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_190C89DFC(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_190C6D7B0();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_190C89AF4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_190CA8938();
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    sub_190C6D7B8();
    result = (_QWORD *)sub_190CA8788();
    v4 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v24 = v7;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
LABEL_46:
    *v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (_QWORD *)v12;
  }
  v10 = 0;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 56;
  v9 = ~v20;
  v21 = -v20;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v11 = v22 & *(_QWORD *)(a4 + 56);
  v24 = result;
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_190CA895C())
        goto LABEL_45;
      sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
      {
        v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          v11 = 0;
          v10 = v18;
          goto LABEL_45;
        }
        v17 = *(_QWORD *)(v8 + 8 * v16);
        if (!v17)
        {
          v19 = v10 + 6;
          while (v25 != v19)
          {
            v17 = *(_QWORD *)(v8 + 8 * v19++);
            if (v17)
            {
              v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          v11 = 0;
          v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_190C89DFC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190CA84E8();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_190C8A144((uint64_t)v10);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_190C8A144(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_190C8A184()
{
  void *v0;
  char *v1;
  unint64_t v2;
  uint64_t v3;
  objc_super v5;

  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
  v1 = v0;
  v2 = sub_190CA8890();
  if (v2)
  {
    v3 = sub_190C9AA30(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)&v1[OBJC_IVAR____EXQueryResult_identities] = v3;
  type metadata accessor for _EXExtensionAvailablility();
  *(_QWORD *)&v1[OBJC_IVAR____EXQueryResult_availablility] = sub_190CA8878();

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for _EXQueryResult();
  return objc_msgSendSuper2(&v5, sel_init);
}

unint64_t sub_190C8A280(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A978);
  v2 = sub_190CA8B24();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_190C8C43C(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_190C359F0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_190C38F64(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190C8A3A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C1E8);
  v2 = (_QWORD *)sub_190CA8B24();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_190C359F0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static _EXExtensionProcessHandle.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE20C150;
}

uint64_t static _EXExtensionProcessHandle.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE20C150 = a1;
  return result;
}

uint64_t (*static _EXExtensionProcessHandle.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_190C8A714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x194018968](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_190C8A7D8();

  }
}

void sub_190C8A764(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

void sub_190C8A7D8()
{
  _BYTE *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  char *__ptr32 *v6;
  uint8_t *v7;
  _QWORD *v8;
  char *v9;
  _QWORD *v10;
  void *v11;
  os_unfair_lock_s *v12;
  id v13;
  unint64_t v14;
  os_unfair_lock_s *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char **v20;
  NSObject *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char **v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t i;
  void *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)&v0[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock] + 16);
  os_unfair_lock_lock(v1);
  if (v0[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock_invalidated] == 1)
  {
    os_unfair_lock_unlock(v1);
    return;
  }
  v0[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock_invalidated] = 1;
  if (qword_1ECD98D00 != -1)
    swift_once();
  v2 = sub_190CA8518();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ECD98D28);
  v3 = v0;
  v4 = sub_190CA8500();
  v5 = sub_190CA8800();
  v6 = &off_190CAD000;
  v45 = v3;
  if (os_log_type_enabled(v4, v5))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v46 = (uint64_t)v45;
    v9 = v45;
    v6 = &off_190CAD000;
    sub_190CA88F0();
    *v8 = v45;

    _os_log_impl(&dword_190C25000, v4, v5, "Assertion for extension process '%{public}@' invalidated", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    v10 = v8;
    v3 = v45;
    MEMORY[0x19401889C](v10, -1, -1);
    MEMORY[0x19401889C](v7, -1, -1);

  }
  else
  {

  }
  v11 = (void *)MEMORY[0x194018968](&v3[OBJC_IVAR____EXExtensionProcessHandle_manager]);
  objc_msgSend(v11, sel_processDidInvalidate_, v3);

  v12 = (os_unfair_lock_s *)(*(_QWORD *)&v3[OBJC_IVAR____EXExtensionProcessHandle_xpcConnectionLock] + 16);
  os_unfair_lock_lock(v12);
  v13 = objc_msgSend(*(id *)&v3[OBJC_IVAR____EXExtensionProcessHandle_xpcConnections], sel_allObjects);
  sub_190C2B30C(0, &qword_1EE20AF38);
  v14 = sub_190CA86BC();

  os_unfair_lock_unlock(v12);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)&v3[OBJC_IVAR____EXExtensionProcessHandle_observersLock] + 16);
  os_unfair_lock_lock(v15);
  v16 = objc_msgSend(*(id *)&v3[OBJC_IVAR____EXExtensionProcessHandle_observers], sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20AF30);
  v44 = sub_190CA86BC();

  os_unfair_lock_unlock(v15);
  os_unfair_lock_unlock(v1);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
    if (!v17)
      goto LABEL_20;
  }
  else
  {
    v17 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v17)
      goto LABEL_20;
  }
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  v18 = 0;
  v19 = v14 & 0xC000000000000001;
  v43 = *((_QWORD *)v6 + 402);
  v20 = &selRef__UUID;
  do
  {
    if (v19)
      v22 = (id)MEMORY[0x194017870](v18, v14);
    else
      v22 = *(id *)(v14 + 8 * v18 + 32);
    v23 = v22;
    v21 = sub_190CA8500();
    v24 = sub_190CA87DC();
    if (os_log_type_enabled(v21, v24))
    {
      v25 = swift_slowAlloc();
      v26 = v19;
      v27 = v17;
      v28 = v14;
      v29 = v20;
      v30 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = v43;
      *(_QWORD *)(v25 + 4) = v23;
      *v30 = v23;
      _os_log_impl(&dword_190C25000, v21, v24, "Invalidating connection '%{public}@'", (uint8_t *)v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      v31 = v30;
      v20 = v29;
      v14 = v28;
      v17 = v27;
      v19 = v26;
      MEMORY[0x19401889C](v31, -1, -1);
      MEMORY[0x19401889C](v25, -1, -1);
    }
    else
    {

      v21 = v23;
    }
    ++v18;

    objc_msgSend(v23, v20[401]);
  }
  while (v17 != v18);
LABEL_20:
  swift_bridgeObjectRelease();
  v32 = v44;
  if (!(v44 >> 62))
  {
    v33 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    v34 = v45;
    if (v33)
      goto LABEL_22;
LABEL_32:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v33 = sub_190CA8AF4();
  swift_bridgeObjectRelease();
  v34 = v45;
  if (!v33)
    goto LABEL_32;
LABEL_22:
  if (v33 >= 1)
  {
    for (i = 0; i != v33; ++i)
    {
      if ((v44 & 0xC000000000000001) != 0)
      {
        v36 = (void *)MEMORY[0x194017870](i, v32);
      }
      else
      {
        v36 = *(void **)(v32 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRetain_n();
      v37 = sub_190CA8500();
      v38 = sub_190CA87DC();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v46 = v40;
        *(_DWORD *)v39 = 136446210;
        swift_unknownObjectRetain();
        v41 = sub_190CA8620();
        *(_QWORD *)(v39 + 4) = sub_190C30058(v41, v42, &v46);
        swift_unknownObjectRelease_n();
        v32 = v44;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_190C25000, v37, v38, "Informing process observer '%{public}s' of extension process invalidation", (uint8_t *)v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v40, -1, -1);
        v34 = v45;
        MEMORY[0x19401889C](v39, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      objc_msgSend(v36, sel_processDidInvalidate_, v34);
      swift_unknownObjectRelease();
    }
    goto LABEL_32;
  }
LABEL_34:
  __break(1u);
}

void sub_190C8AE5C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  id v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_invalidationLock) + 16);
  os_unfair_lock_lock(v1);
  v2 = *(id *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_assertion);
  if (v2)
  {
    *(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_assertion) = 0;
    *(_QWORD *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount) = 0;
  }
  os_unfair_lock_unlock(v1);
  objc_msgSend(v2, sel_invalidate);
  sub_190C8A7D8();

}

void sub_190C8AF24(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7;
  id v8;

  swift_unknownObjectRetain();
  v8 = a1;
  sub_190C8C5D4(a3, (uint64_t)v8, v7, a4);
  swift_unknownObjectRelease();

}

id sub_190C8B09C()
{
  void *v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD *v33;
  void *v34;
  id v35;
  uint64_t v37;
  _QWORD *v38;
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE20ADE8 != -1)
    swift_once();
  v6 = sub_190CA8518();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE20AE20);
  v7 = v0;
  v8 = sub_190CA8500();
  v9 = sub_190CA87DC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v38 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138543362;
    v1 = v10 + 12;
    v2 = (uint64_t)(v10 + 4);
    v11 = *(void **)(*(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration]
                   + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
    aBlock[0] = v11;
    v12 = v11;
    sub_190CA88F0();
    v13 = v38;
    *v38 = v11;

    _os_log_impl(&dword_190C25000, v8, v9, "Creating connection for extension: '%{public}@'", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v13, -1, -1);
    MEMORY[0x19401889C](v10, -1, -1);

  }
  else
  {

  }
  v14 = *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_sessionEndpoint];
  if (v14 && (v15 = *(void **)(v14 + OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint)) != 0)
  {
    v16 = v15;
  }
  else
  {
    v1 = *(uint8_t **)&v7[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration];
    v2 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
    v17 = objc_msgSend(*(id *)&v1[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity], sel_serviceName);
    sub_190CA85F0();

    v18 = *(_QWORD *)&v1[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
    if (v18)
    {
      v19 = v18 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
      v20 = sub_190CA84E8();
      v21 = *(_QWORD *)(v20 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v5, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v5, 0, 1, v20);
    }
    else
    {
      v20 = sub_190CA84E8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
    }
    v22 = (void *)sub_190CA85D8();
    swift_bridgeObjectRelease();
    sub_190CA84E8();
    v23 = *(_QWORD *)(v20 - 8);
    v24 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v5, 1, v20) != 1)
    {
      v24 = (void *)sub_190CA84A0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v20);
    }
    v25 = (void *)sub_190CA85D8();
    v16 = objc_msgSend((id)objc_opt_self(), sel_endpointForServiceName_oneshot_service_instance_, v22, v24, v25, 0);

    if (!v16)
      goto LABEL_17;
  }
  v26 = v16;
  v27 = (void *)objc_opt_self();
  aBlock[4] = sub_190C45AD4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190C28AF8;
  aBlock[3] = &block_descriptor_6;
  v7 = (char *)_Block_copy(aBlock);
  swift_release();
  v28 = objc_msgSend(v27, sel_NSXPCConnectionWithEndpoint_configurator_, v26, v7);
  _Block_release(v7);

  if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
    return v28;
  __break(1u);
LABEL_17:
  v29 = v7;
  v30 = sub_190CA8500();
  v31 = sub_190CA87E8();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v32 = 138412290;
    v34 = *(void **)&v1[v2];
    aBlock[0] = v34;
    v35 = v34;
    sub_190CA88F0();
    *v33 = v34;

    _os_log_impl(&dword_190C25000, v30, v31, "Failed to create connection endpoint for extension: '%@'", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v33, -1, -1);
    MEMORY[0x19401889C](v32, -1, -1);
  }
  else
  {

  }
  return 0;
}

id sub_190C8B6D0(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  _QWORD aBlock[6];
  objc_super v37;

  v10 = OBJC_IVAR____EXExtensionProcessHandle_xpcConnectionLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DD0);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(_QWORD *)&v6[v10] = v11;
  v12 = OBJC_IVAR____EXExtensionProcessHandle_xpcConnections;
  v13 = (void *)objc_opt_self();
  v14 = v6;
  *(_QWORD *)&v6[v12] = objc_msgSend(v13, sel_weakObjectsHashTable);
  v15 = OBJC_IVAR____EXExtensionProcessHandle_observersLock;
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(_QWORD *)&v14[v15] = v16;
  v17 = OBJC_IVAR____EXExtensionProcessHandle_observers;
  *(_QWORD *)&v14[v17] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  v14[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock_invalidated] = 0;
  v18 = OBJC_IVAR____EXExtensionProcessHandle_invalidationLock;
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(_QWORD *)&v14[v18] = v19;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions] = MEMORY[0x1E0DEE9D8];
  swift_unknownObjectWeakInit();
  v20 = OBJC_IVAR____EXExtensionProcessHandle_launchAssertion;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_launchAssertion] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertion] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration] = a1;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle] = a2;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_mainEndpoint] = a3;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_sessionEndpoint] = a5;
  *(_QWORD *)&v14[OBJC_IVAR____EXExtensionProcessHandle_libXPCEndpoint] = a4;
  v21 = *(void **)&v14[v20];
  *(_QWORD *)&v14[v20] = a6;
  v22 = a1;
  v23 = a2;
  v24 = a3;
  v25 = a5;
  v26 = a4;
  v27 = a6;

  v37.receiver = v14;
  v37.super_class = (Class)type metadata accessor for _EXExtensionProcessHandle();
  v28 = objc_msgSendSuper2(&v37, sel_init);
  v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_190C8C3F8;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190C8B9A0;
  aBlock[3] = &block_descriptor_11_0;
  v30 = _Block_copy(aBlock);
  v31 = v28;
  swift_release();
  objc_msgSend(v23, sel_monitorForDeath_, v30);

  _Block_release(v30);
  return v31;
}

void sub_190C8B9A0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

id _EXExtensionProcessHandle.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____EXExtensionProcessHandle_assertion], sel_invalidate);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____EXExtensionProcessHandle_launchAssertion], sel_invalidate);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionProcessHandle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _EXExtensionProcessHandle.__allocating_init(coder:)(NSObject *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return _EXExtensionProcessHandle.init(coder:)(a1);
}

uint64_t _EXExtensionProcessHandle.init(coder:)(NSObject *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  NSObject *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  char **v36;
  NSObject *v37;
  NSObject *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  void *v44;
  id v45;
  unsigned int v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  unint64_t v51;
  unint64_t v52;
  Class isa;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  objc_super v58;

  v3 = OBJC_IVAR____EXExtensionProcessHandle_xpcConnectionLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DD0);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(_QWORD *)&v1[v3] = v4;
  v5 = OBJC_IVAR____EXExtensionProcessHandle_xpcConnections;
  v6 = (void *)objc_opt_self();
  v7 = v1;
  *(_QWORD *)&v1[v5] = objc_msgSend(v6, sel_weakObjectsHashTable);
  v8 = OBJC_IVAR____EXExtensionProcessHandle_observersLock;
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  *(_QWORD *)&v7[v8] = v9;
  v10 = OBJC_IVAR____EXExtensionProcessHandle_observers;
  *(_QWORD *)&v7[v10] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  v7[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock_invalidated] = 0;
  v11 = OBJC_IVAR____EXExtensionProcessHandle_invalidationLock;
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(_QWORD *)&v7[v11] = v12;
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions;
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions] = MEMORY[0x1E0DEE9D8];
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_launchAssertion] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_assertion] = 0;
  sub_190C2B30C(0, (unint64_t *)&unk_1EE20ACE8);
  result = sub_190CA8878();
  if (!result)
  {
    __break(1u);
    goto LABEL_34;
  }
  v16 = &unk_1EE20C000;
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle] = result;
  type metadata accessor for EXConnectionEndpoint();
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_mainEndpoint] = sub_190CA8878();
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_sessionEndpoint] = sub_190CA8878();
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_libXPCEndpoint] = sub_190CA8878();
  type metadata accessor for _EXLaunchConfiguration(0);
  result = sub_190CA8878();
  if (!result)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  v17 = &unk_1EE20C000;
  *(_QWORD *)&v7[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration] = result;
  sub_190C2B30C(0, (unint64_t *)&unk_1EE20ADC8);
  v18 = sub_190CA8890();
  if (v18)
    v19 = v18;
  else
    v19 = v13;
  *(_QWORD *)&v7[v14] = v19;

  swift_bridgeObjectRelease();
  v58.receiver = v7;
  v58.super_class = (Class)type metadata accessor for _EXExtensionProcessHandle();
  v20 = -[NSObject init](&v58, sel_init);
  v21 = (void *)objc_opt_self();
  v22 = (unint64_t)v20;
  if (!objc_msgSend(v21, sel_sandboxed))
    goto LABEL_29;
  v23 = OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions;
  v24 = *(_QWORD *)(v22 + OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions);
  if (v24 >> 62)
    goto LABEL_28;
  if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_29:

    return v22;
  }
  while (1)
  {
    if (qword_1ECD98D00 != -1)
      swift_once();
    v25 = sub_190CA8518();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ECD98D28);
    v26 = (id)v22;
    v27 = sub_190CA8500();
    v28 = sub_190CA87DC();
    v50 = a1;
    v51 = v22;
    v55 = v26;
    if (os_log_type_enabled(v27, v28))
    {
      v56 = v23;
      v29 = swift_slowAlloc();
      v30 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v29 = 138543618;
      v31 = *(Class *)((char *)&v26->isa + v17[45]);
      v32 = v31;
      v16 = &unk_1EE20C000;
      sub_190CA88F0();
      *v30 = v31;

      *(_WORD *)(v29 + 12) = 1026;
      objc_msgSend(*(id *)((char *)&v26->isa + OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), "pid", v50);

      v17 = (_QWORD *)&unk_1EE20C000;
      sub_190CA88F0();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
      swift_arrayDestroy();
      MEMORY[0x19401889C](v30, -1, -1);
      v33 = v29;
      v23 = v56;
      v22 = v51;
      MEMORY[0x19401889C](v33, -1, -1);
    }
    else
    {

      v27 = v26;
    }

    v22 = *(_QWORD *)(v22 + v23);
    if (v22 >> 62)
      break;
    v34 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v35 = v26;
    if (!v34)
      goto LABEL_31;
LABEL_16:
    isa = v16[46].isa;
    v54 = v17[45];
    v17 = (_QWORD *)(v22 & 0xC000000000000001);
    v23 = 4;
    v36 = &selRef_service;
    v57 = v34;
    v52 = v22 & 0xC000000000000001;
    while (1)
    {
      v38 = v17 ? MEMORY[0x194017870](v23 - 4, v22) : *(id *)(v22 + 8 * v23);
      a1 = v38;
      v39 = v23 - 3;
      if (__OFADD__(v23 - 4, 1))
        break;
      if ((objc_msgSend(v38, v36[52]) & 1) == 0)
      {
        v16 = v35;
        v37 = sub_190CA8500();
        v40 = sub_190CA87E8();
        if (os_log_type_enabled(v37, v40))
        {
          v41 = swift_slowAlloc();
          v42 = v22;
          v43 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v41 = 138543618;
          v44 = *(Class *)((char *)&v35->isa + v54);
          *(_QWORD *)(v41 + 4) = v44;
          *v43 = v44;
          v45 = v44;

          *(_WORD *)(v41 + 12) = 1026;
          v46 = objc_msgSend(*(id *)((char *)isa + (_QWORD)v35), "pid");

          *(_DWORD *)(v41 + 14) = v46;
          v35 = v55;

          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
          swift_arrayDestroy();
          v47 = v43;
          v22 = v42;
          MEMORY[0x19401889C](v47, -1, -1);
          v48 = v41;
          v17 = (_QWORD *)v52;
          MEMORY[0x19401889C](v48, -1, -1);
        }
        else
        {

          v37 = v16;
          a1 = v16;
        }
        v34 = v57;

        v36 = &selRef_service;
      }

      ++v23;
      if (v39 == v34)
        goto LABEL_31;
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    v49 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
    if (!v49)
      goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  v34 = sub_190CA8AF4();
  v35 = v26;
  if (v34)
    goto LABEL_16;
LABEL_31:

  swift_bridgeObjectRelease();
  return v51;
}

id _EXExtensionProcessHandle.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void _EXExtensionProcessHandle.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void *sub_190C8C2E8(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_190CA8B30();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_190C8C37C@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t method lookup function for _EXExtensionProcessHandle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _EXExtensionProcessHandle.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of _EXExtensionProcessHandle.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t sub_190C8C3D4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_190C8C3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_190C8A714(a1, a2, v2);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_190C8C43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_190C8C484(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190CA889C();
  return sub_190C8C4B4(a1, v2);
}

unint64_t sub_190C8C4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for _EXQuery();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_190CA88A8();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_190CA88A8();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

void sub_190C8C5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190C8C5D4(a1, a2, a3, (SEL *)&selRef_addObject_);
}

void sub_190C8C5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190C8C5D4(a1, a2, a3, (SEL *)&selRef_removeObject_);
}

void sub_190C8C5D4(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  os_unfair_lock_s *v7;

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + OBJC_IVAR____EXExtensionProcessHandle_observersLock) + 16);
  os_unfair_lock_lock(v7);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____EXExtensionProcessHandle_observers), *a4, a1);
  os_unfair_lock_unlock(v7);
}

void sub_190C8C8CC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;

  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    v4 = (void *)v3;
    v5 = a1;
    v6 = (void *)sub_190CA85D8();
    v7 = (void *)sub_190CA85D8();
    objc_msgSend(v4, sel_encodeObject_forKey_, v6, v7);

    v8 = *(_QWORD *)(v1 + OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint);
    if (v8)
    {
      swift_unknownObjectRetain();
      v9 = (void *)sub_190CA85D8();
      objc_msgSend(v4, sel_encodeXPCObject_forKey_, v8, v9);
      swift_unknownObjectRelease();

    }
    v10 = *(_QWORD *)(v1 + OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint);
    v11 = (id)sub_190CA85D8();
    objc_msgSend(v4, sel_encodeObject_forKey_, v10, v11);

  }
  else
  {
    sub_190CA8ADC();
    __break(1u);
  }
}

id sub_190C8CB34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EXConnectionEndpoint();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190C8CB64(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t result;
  objc_super v20;

  v2 = v1;
  v4 = OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint;
  *(_QWORD *)&v1[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint] = 0;
  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    v6 = (void *)v5;
    sub_190C2B30C(0, (unint64_t *)&unk_1EE20AEE0);
    v7 = v2;
    v8 = a1;
    v9 = sub_190CA8878();
    if (v9)
    {
      v10 = (void *)v9;
      v11 = sub_190CA85F0();
      v13 = v12;

      v14 = (uint64_t *)&v7[OBJC_IVAR___EXConnectionEndpoint_identifier];
      *v14 = v11;
      v14[1] = v13;
      v15 = sub_190CA8524();
      v16 = (void *)sub_190CA85D8();
      v17 = objc_msgSend(v6, sel_decodeXPCObjectOfType_forKey_, v15, v16);

      *(_QWORD *)&v2[v4] = v17;
      swift_unknownObjectRelease();
      sub_190C2B30C(0, &qword_1EE20C208);
      *(_QWORD *)&v7[OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint] = sub_190CA8878();

      v20.receiver = v7;
      v20.super_class = (Class)type metadata accessor for EXConnectionEndpoint();
      v18 = objc_msgSendSuper2(&v20, sel_init);

      return (uint64_t)v18;
    }
    __break(1u);
  }
  result = sub_190CA8ADC();
  __break(1u);
  return result;
}

uint64_t static _AppExtensionConfigurationBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

ValueMetadata *type metadata accessor for _AppExtensionConfigurationBuilder()
{
  return &type metadata for _AppExtensionConfigurationBuilder;
}

BOOL sub_190C8CD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11[5];

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  sub_190CA8C50();
  swift_getObjectType();
  v11[3] = swift_getAssociatedTypeWitness();
  v11[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v11);
  sub_190CA89EC();
  sub_190CA85B4();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v11);
  v4 = sub_190CA8C80();
  v5 = -1 << *(_BYTE *)(a3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v7 = ~v5;
  do
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v8 = sub_190CA89F8();
    v9 = sub_190CA89F8();
    swift_unknownObjectRelease();
    result = v8 == v9;
    if (v8 == v9)
      break;
    v6 = (v6 + 1) & v7;
  }
  while (((*(_QWORD *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  return result;
}

uint64_t sub_190C8CF48(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_190CA8968();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_190CA889C(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_190CA88A8();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_190CA88A8();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_190C8D0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_190CA84E8();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]), v6 = sub_190CA85A8(), v7 = -1 << *(_BYTE *)(a2 + 32), v8 = v6 & ~v7, ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_190C959E4(&qword_1EE20ABB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v12 = sub_190CA85CC();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_190C8D230(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_190CA8968();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_190CA889C(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  type metadata accessor for _EXActiveClientQuery();
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_190CA88A8();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_190CA88A8();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_190C8D37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_190CA8C50();
    swift_bridgeObjectRetain();
    sub_190CA8638();
    swift_bridgeObjectRelease();
    v6 = sub_190CA8C80();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_190CA8BCC() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_190CA8BCC() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_190C8D4C0()
{
  uint64_t v1[5];

  sub_190CA8C50();
  swift_getObjectType();
  v1[3] = swift_getAssociatedTypeWitness();
  v1[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v1);
  sub_190CA89EC();
  sub_190CA85B4();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
  return sub_190CA8C80();
}

uint64_t sub_190C8D5A8()
{
  uint64_t v1[5];

  swift_getObjectType();
  v1[3] = swift_getAssociatedTypeWitness();
  v1[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v1);
  sub_190CA89EC();
  sub_190CA85B4();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
}

uint64_t sub_190C8D688()
{
  uint64_t v1[5];

  sub_190CA8C50();
  swift_getObjectType();
  v1[3] = swift_getAssociatedTypeWitness();
  v1[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v1);
  sub_190CA89EC();
  sub_190CA85B4();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
  return sub_190CA8C80();
}

BOOL sub_190C8D76C()
{
  uint64_t v0;

  swift_getObjectType();
  v0 = sub_190CA89F8();
  swift_getObjectType();
  return v0 == sub_190CA89F8();
}

uint64_t sub_190C8D7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t ObjCClassFromMetadata;
  char *v28;
  objc_class *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  objc_class *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  int64_t v99;
  unint64_t v100;
  uint64_t v101;
  id v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  objc_class *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  __int128 v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  NSObject *v143;
  uint64_t v144;
  os_log_type_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  uint64_t v156;
  os_log_type_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  char *v175;
  char *v176;
  id v177;
  int64_t v178;
  id v179;
  __int128 v180;
  char *v181;
  id v182;
  __int128 v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  objc_super v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191[3];
  objc_super v192;
  uint64_t v193;
  uint64_t v194;
  objc_super v195;
  __int128 v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;

  v1 = sub_190CA84E8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v169 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v169 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v169 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v169 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v169 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v169 - v19;
  MEMORY[0x1E0C80A78](v18);
  v185 = (char *)&v169 - v21;
  sub_190CA84DC();
  v171 = v0;
  v23 = *(char **)(v0 + 16);
  v22 = *(_QWORD *)(v0 + 24);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____EXQuery_resultType];
  v186 = v1;
  v184 = v2;
  if (v24)
  {
    v181 = v23;
    v25 = (char *)sub_190C6B6BC(v23);
    v26 = *(void **)&v25[OBJC_IVAR____EXQueryResult_availablility];
    if (!v26)
      goto LABEL_122;
    v177 = v25;
    type metadata accessor for _EXExtensionAvailablility();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v22 = v26;
    if (!objc_msgSend((id)v22, sel_isKindOfClass_, ObjCClassFromMetadata))
      goto LABEL_124;
    v28 = (char *)objc_allocWithZone((Class)type metadata accessor for _EXQueryResultUpdate());
    *(_QWORD *)&v28[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)&v28[OBJC_IVAR____EXQueryResult_identities] = 0;
    *(_QWORD *)&v28[OBJC_IVAR____EXQueryResult_availablility] = v26;
    v29 = (objc_class *)type metadata accessor for _EXQueryResult();
    v195.receiver = v28;
    v195.super_class = v29;
    v182 = objc_msgSendSuper2(&v195, sel_init);
    v178 = sub_190C8EDE8();
    v31 = *(_QWORD *)(v178 + 16);
    v32 = v181;
    if (v31)
    {
      v33 = (__int128 *)(v178 + 32);
      *(_QWORD *)&v30 = 136446466;
      v180 = v30;
      v179 = (id)(MEMORY[0x1E0DEE9B8] + 8);
      v34 = v184;
      do
      {
        v36 = qword_1ECD98BF8;
        v183 = *v33;
        swift_unknownObjectRetain();
        if (v36 != -1)
          swift_once();
        v37 = sub_190CA8518();
        __swift_project_value_buffer(v37, (uint64_t)qword_1ECD98BD8);
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v5, v185, v1);
        swift_unknownObjectRetain_n();
        v38 = sub_190CA8500();
        v39 = sub_190CA87DC();
        if (os_log_type_enabled(v38, v39))
        {
          v40 = swift_slowAlloc();
          v41 = swift_slowAlloc();
          v194 = v41;
          *(_DWORD *)v40 = v180;
          sub_190C959E4((unint64_t *)&qword_1ECD98BC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v42 = sub_190CA8BB4();
          *(_QWORD *)(v40 + 4) = sub_190C30058(v42, v43, &v194);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v186);
          *(_WORD *)(v40 + 12) = 2082;
          v196 = v183;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C390);
          v44 = sub_190CA8620();
          *(_QWORD *)(v40 + 14) = sub_190C30058(v44, v45, &v194);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_190C25000, v38, v39, "[%{public}s] Sending update observer update to %{public}s", (uint8_t *)v40, 0x16u);
          swift_arrayDestroy();
          v46 = v41;
          v1 = v186;
          MEMORY[0x19401889C](v46, -1, -1);
          v47 = v40;
          v32 = v181;
          MEMORY[0x19401889C](v47, -1, -1);

        }
        else
        {
          (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v1);

          swift_unknownObjectRelease_n();
        }
        ObjectType = swift_getObjectType();
        (*(void (**)(char *, id, uint64_t))(*((_QWORD *)&v183 + 1) + 16))(v32, v182, ObjectType);
        swift_unknownObjectRelease();
        ++v33;
        --v31;
      }
      while (v31);
    }

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v185, v1);
  }
  *(_QWORD *)&v174 = v17;
  v181 = v11;
  type metadata accessor for _EXQuery();
  if (!objc_msgSend(v23, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
    goto LABEL_125;
  v175 = v14;
  v49 = v23;
  v22 = (uint64_t)sub_190C6B6BC(v49);
  *(_QWORD *)&v180 = v49;

  v50 = *(_QWORD *)(v22 + OBJC_IVAR____EXQueryResult_identities);
  swift_bridgeObjectRetain();

  v170 = v50;
  if (!v50)
    goto LABEL_123;
  v51 = v171;
  swift_beginAccess();
  v52 = *(_QWORD **)(v51 + 40);
  v53 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v51 + 40) = MEMORY[0x1E0DEE9E8];
  v54 = v52[2];
  v176 = v8;
  v182 = v52;
  if (!v54)
    goto LABEL_42;
  v55 = (char *)objc_allocWithZone((Class)type metadata accessor for _EXQueryResultUpdate());
  *(_QWORD *)&v55[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = v53;
  *(_QWORD *)&v55[OBJC_IVAR____EXQueryResult_identities] = v170;
  *(_QWORD *)&v55[OBJC_IVAR____EXQueryResult_availablility] = 0;
  v56 = (objc_class *)type metadata accessor for _EXQueryResult();
  v187.receiver = v55;
  v187.super_class = v56;
  v22 = (uint64_t)sel_init;
  swift_bridgeObjectRetain();
  v179 = objc_msgSendSuper2(&v187, sel_init);
  v57 = v52[7];
  v177 = v52 + 7;
  v58 = 1 << *((_BYTE *)v52 + 32);
  v59 = -1;
  if (v58 < 64)
    v59 = ~(-1 << v58);
  v60 = v59 & v57;
  v178 = (unint64_t)(v58 + 63) >> 6;
  swift_bridgeObjectRetain();
  v61 = 0;
  *(_QWORD *)&v62 = 136446466;
  v173 = v62;
  v172 = MEMORY[0x1E0DEE9B8] + 8;
  v63 = v20;
  while (1)
  {
    if (v60)
    {
      v65 = __clz(__rbit64(v60));
      v60 &= v60 - 1;
      v66 = v65 | (v61 << 6);
      goto LABEL_37;
    }
    v67 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    if (v67 >= v178)
      goto LABEL_41;
    v68 = *((_QWORD *)v177 + v67);
    ++v61;
    if (!v68)
    {
      v61 = v67 + 1;
      if (v67 + 1 >= v178)
        goto LABEL_41;
      v68 = *((_QWORD *)v177 + v61);
      if (!v68)
      {
        v61 = v67 + 2;
        if (v67 + 2 >= v178)
          goto LABEL_41;
        v68 = *((_QWORD *)v177 + v61);
        if (!v68)
          break;
      }
    }
LABEL_36:
    v60 = (v68 - 1) & v68;
    v66 = __clz(__rbit64(v68)) + (v61 << 6);
LABEL_37:
    *(_QWORD *)&v183 = v61;
    v70 = (uint64_t *)(v52[6] + 16 * v66);
    v71 = *v70;
    v72 = v70[1];
    v73 = qword_1ECD98BF8;
    swift_unknownObjectRetain();
    if (v73 != -1)
      swift_once();
    v74 = sub_190CA8518();
    __swift_project_value_buffer(v74, (uint64_t)qword_1ECD98BD8);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v63, v185, v1);
    swift_unknownObjectRetain_n();
    v75 = sub_190CA8500();
    v76 = sub_190CA87DC();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = swift_slowAlloc();
      v78 = swift_slowAlloc();
      v191[0] = v78;
      *(_DWORD *)v77 = v173;
      sub_190C959E4((unint64_t *)&qword_1ECD98BC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v79 = sub_190CA8BB4();
      *(_QWORD *)(v77 + 4) = sub_190C30058(v79, v80, v191);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v184 + 8))(v63, v1);
      *(_WORD *)(v77 + 12) = 2082;
      *(_QWORD *)&v196 = v71;
      *((_QWORD *)&v196 + 1) = v72;
      swift_unknownObjectRetain();
      v81 = sub_190CA8620();
      *(_QWORD *)(v77 + 14) = sub_190C30058(v81, v82, v191);
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_190C25000, v75, v76, "[%{public}s] Sending initial observer update to %{public}s", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      v83 = v78;
      v2 = v184;
      MEMORY[0x19401889C](v83, -1, -1);
      v84 = v77;
      v52 = v182;
      MEMORY[0x19401889C](v84, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v63, v1);

      swift_unknownObjectRelease_n();
    }
    v61 = v183;
    v64 = swift_getObjectType();
    v22 = v71;
    (*(void (**)(_QWORD, id, uint64_t, uint64_t))(v72 + 16))(v180, v179, v64, v72);
    swift_unknownObjectRelease();
    v1 = v186;
  }
  v69 = v67 + 3;
  if (v69 >= v178)
    goto LABEL_41;
  v68 = *((_QWORD *)v177 + v69);
  if (v68)
  {
    v61 = v69;
    goto LABEL_36;
  }
  while (1)
  {
    v61 = v69 + 1;
    if (__OFADD__(v69, 1))
      goto LABEL_121;
    if (v61 >= v178)
      break;
    v68 = *((_QWORD *)v177 + v61);
    ++v69;
    if (v68)
      goto LABEL_36;
  }
LABEL_41:

  swift_release();
  v53 = MEMORY[0x1E0DEE9E8];
LABEL_42:
  v85 = *(_QWORD *)(v171 + 48);
  v193 = v53;
  v86 = v170;
  v178 = v85;
  if ((v170 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_190CA8938();
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    sub_190C6D7B8();
    sub_190CA8788();
    *(_QWORD *)&v183 = *((_QWORD *)&v196 + 1);
    v86 = v196;
    v22 = v197;
    v87 = v198;
    v88 = v199;
  }
  else
  {
    v89 = -1 << *(_BYTE *)(v170 + 32);
    v90 = *(_QWORD *)(v170 + 56);
    *(_QWORD *)&v183 = v170 + 56;
    v22 = ~v89;
    v91 = -v89;
    if (v91 < 64)
      v92 = ~(-1 << v91);
    else
      v92 = -1;
    v88 = v92 & v90;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87 = 0;
  }
  v179 = (id)(v86 & 0x7FFFFFFFFFFFFFFFLL);
  v177 = (id)v22;
  v93 = (unint64_t)(v22 + 64) >> 6;
  if (v86 < 0)
    goto LABEL_51;
LABEL_49:
  if (v88)
  {
    v94 = (v88 - 1) & v88;
    v95 = __clz(__rbit64(v88)) | (v87 << 6);
    v96 = v87;
LABEL_68:
    v98 = *(id *)(*(_QWORD *)(v86 + 48) + 8 * v95);
    if (!v98)
      goto LABEL_71;
    while (1)
    {
      v102 = objc_msgSend(v98, sel_UUID);
      v103 = v175;
      sub_190CA84B8();

      v22 = (uint64_t)&v193;
      v104 = v174;
      sub_190C8F844(v174, v103);

      (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v104, v186);
      v87 = v96;
      v88 = v94;
      if ((v86 & 0x8000000000000000) == 0)
        goto LABEL_49;
LABEL_51:
      v97 = sub_190CA895C();
      if (v97)
      {
        v188 = v97;
        sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v98 = (id)v191[0];
        swift_unknownObjectRelease();
        v96 = v87;
        v94 = v88;
        if (v98)
          continue;
      }
      goto LABEL_71;
    }
  }
  v99 = v87 + 1;
  if (__OFADD__(v87, 1))
    goto LABEL_119;
  if (v99 < v93)
  {
    v100 = *(_QWORD *)(v183 + 8 * v99);
    v96 = v87 + 1;
    if (!v100)
    {
      v96 = v87 + 2;
      if (v87 + 2 >= v93)
        goto LABEL_71;
      v100 = *(_QWORD *)(v183 + 8 * v96);
      if (!v100)
      {
        v96 = v87 + 3;
        if (v87 + 3 >= v93)
          goto LABEL_71;
        v100 = *(_QWORD *)(v183 + 8 * v96);
        if (!v100)
        {
          v96 = v87 + 4;
          if (v87 + 4 >= v93)
            goto LABEL_71;
          v100 = *(_QWORD *)(v183 + 8 * v96);
          if (!v100)
          {
            v101 = v87 + 5;
            do
            {
              if (v93 == v101)
                goto LABEL_71;
              v100 = *(_QWORD *)(v183 + 8 * v101++);
            }
            while (!v100);
            v96 = v101 - 1;
          }
        }
      }
    }
    v94 = (v100 - 1) & v100;
    v95 = __clz(__rbit64(v100)) + (v96 << 6);
    goto LABEL_68;
  }
LABEL_71:
  sub_190C6D7B0();
  v105 = v193;
  v106 = v178;
  if (*(_QWORD *)(v178 + 16) <= *(_QWORD *)(v193 + 16) >> 3)
  {
    v191[0] = v193;
    swift_bridgeObjectRetain();
    sub_190C94C94(v106);
    v107 = v191[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v107 = sub_190C94F40(v106, v105);
  }
  v108 = v186;
  v109 = v184;
  v110 = v181;
  v111 = v170;
  if (*(_QWORD *)(v105 + 16) <= *(_QWORD *)(v106 + 16) >> 3)
  {
    v191[0] = v106;
    v114 = swift_bridgeObjectRetain();
    sub_190C94C94(v114);
    swift_bridgeObjectRelease();
    v113 = v191[0];
  }
  else
  {
    v112 = swift_bridgeObjectRetain();
    v113 = sub_190C94F40(v112, v106);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v171 + 48) = v105;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v115 = sub_190C96084(v111, v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if ((v115 & 0xC000000000000001) != 0)
    v116 = sub_190CA8944();
  else
    v116 = *(_QWORD *)(v115 + 16);
  if (v116 <= 0 && !*(_QWORD *)(v113 + 16))
  {
    (*(void (**)(char *, uint64_t))(v109 + 8))(v185, v108);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v117 = (char *)objc_allocWithZone((Class)type metadata accessor for _EXQueryResultUpdate());
  *(_QWORD *)&v117[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = v113;
  *(_QWORD *)&v117[OBJC_IVAR____EXQueryResult_identities] = v115;
  *(_QWORD *)&v117[OBJC_IVAR____EXQueryResult_availablility] = 0;
  v118 = (objc_class *)type metadata accessor for _EXQueryResult();
  v192.receiver = v117;
  v192.super_class = v118;
  v177 = objc_msgSendSuper2(&v192, sel_init);
  v119 = v171;
  swift_beginAccess();
  v120 = *(char **)(v119 + 32);
  v121 = *((_QWORD *)v120 + 7);
  v178 = (int64_t)(v120 + 56);
  v122 = 1 << v120[32];
  v123 = -1;
  if (v122 < 64)
    v123 = ~(-1 << v122);
  v124 = v123 & v121;
  v179 = (id)((unint64_t)(v122 + 63) >> 6);
  swift_bridgeObjectRetain();
  v125 = 0;
  v126 = (_QWORD *)&unk_1ECD98000;
  *(_QWORD *)&v127 = 136446466;
  v174 = v127;
  *(_QWORD *)&v173 = MEMORY[0x1E0DEE9B8] + 8;
  v128 = v108;
  v175 = v120;
  while (2)
  {
    if (v124)
    {
      v129 = __clz(__rbit64(v124));
      v124 &= v124 - 1;
      *(_QWORD *)&v183 = v125;
      v130 = v129 | (v125 << 6);
      v22 = (uint64_t)v182;
LABEL_104:
      v135 = (uint64_t *)(*((_QWORD *)v120 + 6) + 16 * v130);
      v137 = *v135;
      v136 = v135[1];
      v138 = swift_unknownObjectRetain();
      v139 = sub_190C8CD90(v138, v136, v22);
      v140 = v126[383];
      if (v139)
      {
        if (v140 != -1)
          swift_once();
        v141 = sub_190CA8518();
        __swift_project_value_buffer(v141, (uint64_t)qword_1ECD98BD8);
        v142 = v176;
        (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v176, v185, v128);
        swift_unknownObjectRetain_n();
        v143 = sub_190CA8500();
        v144 = v128;
        v145 = sub_190CA87DC();
        if (os_log_type_enabled(v143, v145))
        {
          v146 = swift_slowAlloc();
          v147 = swift_slowAlloc();
          v190 = v147;
          *(_DWORD *)v146 = v174;
          sub_190C959E4((unint64_t *)&qword_1ECD98BC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v148 = sub_190CA8BB4();
          *(_QWORD *)(v146 + 4) = sub_190C30058(v148, v149, &v190);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v184 + 8))(v142, v144);
          *(_WORD *)(v146 + 12) = 2082;
          v188 = v137;
          v189 = v136;
          swift_unknownObjectRetain();
          v150 = sub_190CA8620();
          *(_QWORD *)(v146 + 14) = sub_190C30058(v150, v151, &v190);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_190C25000, v143, v145, "[%{public}s] Skipping observer update to %{public}s", (uint8_t *)v146, 0x16u);
          swift_arrayDestroy();
          v152 = v147;
          v109 = v184;
          MEMORY[0x19401889C](v152, -1, -1);
          v153 = v146;
          v120 = v175;
          MEMORY[0x19401889C](v153, -1, -1);
          swift_unknownObjectRelease();

        }
        else
        {
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v109 + 8))(v142, v144);

          swift_unknownObjectRelease_n();
        }
        v110 = v181;
        v128 = v144;
        v126 = &unk_1ECD98000;
      }
      else
      {
        if (v140 != -1)
          swift_once();
        v154 = sub_190CA8518();
        __swift_project_value_buffer(v154, (uint64_t)qword_1ECD98BD8);
        (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v110, v185, v128);
        swift_unknownObjectRetain_n();
        v155 = sub_190CA8500();
        v156 = v128;
        v157 = sub_190CA87DC();
        if (os_log_type_enabled(v155, v157))
        {
          v158 = swift_slowAlloc();
          v159 = swift_slowAlloc();
          v190 = v159;
          *(_DWORD *)v158 = v174;
          sub_190C959E4((unint64_t *)&qword_1ECD98BC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v160 = sub_190CA8BB4();
          *(_QWORD *)(v158 + 4) = sub_190C30058(v160, v161, &v190);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v109 + 8))(v181, v186);
          *(_WORD *)(v158 + 12) = 2082;
          v188 = v137;
          v189 = v136;
          swift_unknownObjectRetain();
          v162 = sub_190CA8620();
          *(_QWORD *)(v158 + 14) = sub_190C30058(v162, v163, &v190);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_190C25000, v155, v157, "[%{public}s] Sending update observer update to %{public}s", (uint8_t *)v158, 0x16u);
          swift_arrayDestroy();
          v164 = v159;
          v110 = v181;
          v128 = v186;
          MEMORY[0x19401889C](v164, -1, -1);
          v165 = v158;
          v120 = v175;
          MEMORY[0x19401889C](v165, -1, -1);

        }
        else
        {
          (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v156);

          swift_unknownObjectRelease_n();
          v128 = v156;
        }
        v166 = swift_getObjectType();
        (*(void (**)(_QWORD, id, uint64_t, uint64_t))(v136 + 16))(v180, v177, v166, v136);
        swift_unknownObjectRelease();
      }
      v125 = v183;
      continue;
    }
    break;
  }
  v131 = v125 + 1;
  v22 = (uint64_t)v182;
  if (__OFADD__(v125, 1))
  {
    __break(1u);
    goto LABEL_118;
  }
  if (v131 >= (uint64_t)v179)
    goto LABEL_115;
  v132 = *(_QWORD *)(v178 + 8 * v131);
  v133 = v125 + 1;
  if (v132)
    goto LABEL_103;
  v133 = v125 + 2;
  if (v125 + 2 >= (uint64_t)v179)
    goto LABEL_115;
  v132 = *(_QWORD *)(v178 + 8 * v133);
  if (v132)
    goto LABEL_103;
  v133 = v125 + 3;
  if (v125 + 3 >= (uint64_t)v179)
    goto LABEL_115;
  v132 = *(_QWORD *)(v178 + 8 * v133);
  if (v132)
  {
LABEL_103:
    v124 = (v132 - 1) & v132;
    *(_QWORD *)&v183 = v133;
    v130 = __clz(__rbit64(v132)) + (v133 << 6);
    goto LABEL_104;
  }
  v134 = v125 + 4;
  if (v125 + 4 >= (uint64_t)v179)
  {
LABEL_115:
    swift_bridgeObjectRelease();

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v185, v128);
  }
  v132 = *(_QWORD *)(v178 + 8 * v134);
  if (v132)
  {
    v133 = v125 + 4;
    goto LABEL_103;
  }
  while (1)
  {
    v133 = v134 + 1;
    if (__OFADD__(v134, 1))
      break;
    if (v133 >= (uint64_t)v179)
      goto LABEL_115;
    v132 = *(_QWORD *)(v178 + 8 * v133);
    ++v134;
    if (v132)
      goto LABEL_103;
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  v167 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();

  swift_unexpectedError();
  __break(1u);
LABEL_125:
  v168 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_190C8EDE8()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v15 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_190C9A18C(0, v2, 0);
  v3 = v15;
  result = sub_190C95944(v1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v1 + 32))
  {
    if (((*(_QWORD *)(v1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(v1 + 36) != v7)
      goto LABEL_14;
    v11 = *(_QWORD *)(v15 + 16);
    v10 = *(_QWORD *)(v15 + 24);
    v14 = *(_OWORD *)(*(_QWORD *)(v1 + 48) + 16 * v5);
    swift_unknownObjectRetain();
    if (v11 >= v10 >> 1)
      sub_190C9A18C(v10 > 1, v11 + 1, 1);
    *(_QWORD *)(v15 + 16) = v11 + 1;
    *(_OWORD *)(v15 + 16 * v11 + 32) = v14;
    result = sub_190C95A28(v5, v7, v9 & 1, v1);
    v5 = result;
    v7 = v12;
    v9 = v13 & 1;
    if (!--v2)
    {
      sub_190C7E884(result, v12, v13 & 1);
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_190C8EF70()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  sub_190CA89D4();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  v2 = objc_msgSend(v1, sel_description);
  sub_190CA85F0();

  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  v3 = sub_190C8EDE8();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C390);
  MEMORY[0x194017534](v3, v4);
  sub_190CA8644();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t sub_190C8F094()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _EXActiveQuery()
{
  return objc_opt_self();
}

_OWORD *initializeBufferWithCopyOfBuffer for _EXActiveQuery.ActiveQueryObserver(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for _EXActiveQuery.ActiveQueryObserver()
{
  return swift_unknownObjectRelease();
}

_QWORD *assignWithCopy for _EXActiveQuery.ActiveQueryObserver(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *assignWithTake for _EXActiveQuery.ActiveQueryObserver(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  *a1 = *a2;
  return a1;
}

ValueMetadata *type metadata accessor for _EXActiveQuery.ActiveQueryObserver()
{
  return &type metadata for _EXActiveQuery.ActiveQueryObserver;
}

unint64_t sub_190C8F1BC()
{
  unint64_t result;

  result = qword_1EE20ABC0;
  if (!qword_1EE20ABC0)
  {
    result = MEMORY[0x1940187DC](&unk_190CAEC24, &type metadata for _EXActiveQuery.ActiveQueryObserver);
    atomic_store(result, (unint64_t *)&qword_1EE20ABC0);
  }
  return result;
}

uint64_t sub_190C8F200()
{
  sub_190C2B30C(0, (unint64_t *)&unk_1ECD98C20);
  return sub_190CA88A8() & 1;
}

uint64_t sub_190C8F254()
{
  sub_190CA8C50();
  sub_190CA88B4();
  return sub_190CA8C80();
}

uint64_t sub_190C8F298()
{
  return sub_190CA88B4();
}

uint64_t sub_190C8F2BC()
{
  sub_190CA8C50();
  sub_190CA88B4();
  return sub_190CA8C80();
}

unint64_t sub_190C8F2FC()
{
  return sub_190C8EF70();
}

uint64_t sub_190C8F31C(uint64_t a1, uint64_t a2)
{
  return sub_190C959E4(&qword_1EE20C210, a2, (uint64_t (*)(uint64_t))type metadata accessor for _EXActiveQuery, (uint64_t)&unk_190CAECF4);
}

uint64_t sub_190C8F348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20[5];
  uint64_t v21;

  v7 = *v3;
  sub_190CA8C50();
  swift_getObjectType();
  v17 = a3;
  v20[3] = swift_getAssociatedTypeWitness();
  v20[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v20);
  swift_bridgeObjectRetain();
  sub_190CA89EC();
  sub_190CA85B4();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
  v8 = sub_190CA8C80();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  v19 = a1;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_190CA89F8();
      v13 = sub_190CA89F8();
      swift_unknownObjectRelease();
      if (v12 == v13)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_5;
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)v19 = *(_OWORD *)(*(_QWORD *)(*v18 + 48) + 16 * v10);
    swift_unknownObjectRetain();
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v18;
    *v18 = 0x8000000000000000;
    v15 = swift_unknownObjectRetain();
    sub_190C911D0(v15, v17, v10, isUniquelyReferenced_nonNull_native);
    *v18 = v21;
    swift_bridgeObjectRelease();
    *(_QWORD *)v19 = a2;
    *(_QWORD *)(v19 + 8) = v17;
    return 1;
  }
}

uint64_t sub_190C8F5A0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_190CA8950();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_190CA8944();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_190C8FDDC(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_190C90BCC(v26, qword_1ECD98B00);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_190C91150((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_190CA889C();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_190CA88A8();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_190CA88A8();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_190C9140C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_190C8F844(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_190CA84E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_190C959E4(&qword_1EE20ABB0, 255, v11, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_190CA85A8();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_190C959E4(&qword_1EE20ABB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v21 = sub_190CA85CC();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_190C915A8((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_190C8FAA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  __int128 v13;
  uint64_t v15;
  _BYTE v16[40];

  v3 = v2;
  v6 = *v2;
  swift_bridgeObjectRetain();
  v7 = sub_190CA8974();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    while (1)
    {
      sub_190C7E814(*(_QWORD *)(v6 + 48) + 40 * v9, (uint64_t)v16);
      v11 = MEMORY[0x1940177EC](v16, a2);
      sub_190C7E850((uint64_t)v16);
      if ((v11 & 1) != 0)
        break;
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_190C7E850(a2);
    sub_190C7E814(*(_QWORD *)(*v3 + 48) + 40 * v9, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_190C7E814(a2, (uint64_t)v16);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_190C917B4((uint64_t)v16, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v15;
    swift_bridgeObjectRelease();
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_190C8FC20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_190CA8C50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190CA8638();
  swift_bridgeObjectRelease();
  v8 = sub_190CA8C80();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_190CA8BCC() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_190CA8BCC() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_190C9191C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_190C8FDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECD98B00);
    v2 = sub_190CA89BC();
    v15 = v2;
    sub_190CA8938();
    if (sub_190CA895C())
    {
      sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_190C90BCC(v9 + 1, qword_1ECD98B00);
          v2 = v15;
        }
        result = sub_190CA889C();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_190CA895C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_190C8FFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C218);
    v2 = sub_190CA89BC();
    v15 = v2;
    sub_190CA8938();
    if (sub_190CA895C())
    {
      type metadata accessor for _EXActiveClientQuery();
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_190C90BCC(v9 + 1, &qword_1EE20C218);
          v2 = v15;
        }
        result = sub_190CA889C();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_190CA895C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_190C901DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t i;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;
  int64_t v27;
  __int128 v28;
  uint64_t v29[5];

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ABA8);
  v2 = sub_190CA89B0();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    for (i = 0; ; i = v27)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v27 = i;
        v12 = v11 | (i << 6);
      }
      else
      {
        v13 = i + 1;
        if (__OFADD__(i, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25)
          goto LABEL_33;
        v14 = v26[v13];
        v15 = i + 1;
        if (!v14)
        {
          v15 = i + 2;
          if (i + 2 >= v25)
            goto LABEL_33;
          v14 = v26[v15];
          if (!v14)
          {
            v15 = i + 3;
            if (i + 3 >= v25)
              goto LABEL_33;
            v14 = v26[v15];
            if (!v14)
            {
              v16 = i + 4;
              if (i + 4 >= v25)
              {
LABEL_33:
                swift_release();
                v24 = 1 << *(_BYTE *)(v1 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v26[v16];
              if (!v14)
              {
                while (1)
                {
                  v15 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v15 >= v25)
                    goto LABEL_33;
                  v14 = v26[v15];
                  ++v16;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v15 = i + 4;
            }
          }
        }
LABEL_23:
        v6 = (v14 - 1) & v14;
        v27 = v15;
        v12 = __clz(__rbit64(v14)) + (v15 << 6);
      }
      v28 = *(_OWORD *)(*(_QWORD *)(v1 + 48) + 16 * v12);
      sub_190CA8C50();
      swift_getObjectType();
      v29[3] = swift_getAssociatedTypeWitness();
      v29[4] = swift_getAssociatedConformanceWitness();
      __swift_allocate_boxed_opaque_existential_0(v29);
      sub_190CA89EC();
      sub_190CA85B4();
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v29);
      result = sub_190CA8C80();
      v17 = -1 << *(_BYTE *)(v3 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v22 = v19 == v21;
          if (v19 == v21)
            v19 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_OWORD *)(*(_QWORD *)(v3 + 48) + 16 * v10) = v28;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

uint64_t sub_190C90588(uint64_t a1)
{
  return sub_190C90BCC(a1, qword_1ECD98B00);
}

uint64_t sub_190C90594()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_190CA84E8();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ABA0);
  v6 = sub_190CA89B0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      result = sub_190CA85A8();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_190C90904()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C220);
  v3 = sub_190CA89B0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9)
          goto LABEL_33;
        v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v9)
            goto LABEL_33;
          v18 = v6[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v9)
              goto LABEL_33;
            v18 = v6[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v18 = v6[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_23:
        v8 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = *(_QWORD *)(v2 + 48) + 40 * v16;
      v29 = *(_OWORD *)v20;
      v30 = *(_OWORD *)(v20 + 16);
      v31 = *(_QWORD *)(v20 + 32);
      result = sub_190CA8974();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v4 + 48) + 40 * v13;
      *(_OWORD *)v14 = v29;
      *(_OWORD *)(v14 + 16) = v30;
      *(_QWORD *)(v14 + 32) = v31;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_190C90BCC(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_190CA89B0();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_190CA889C();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_190C90E64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C228);
  v3 = sub_190CA89B0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_190CA8C50();
      swift_bridgeObjectRetain();
      sub_190CA8638();
      swift_bridgeObjectRelease();
      result = sub_190CA8C80();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_190C91150(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_190CA889C();
  result = sub_190CA892C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_190C911D0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21[5];

  v6 = result;
  v7 = *(_QWORD *)(*v4 + 16);
  v8 = *(_QWORD *)(*v4 + 24);
  if (v8 > v7 && (a4 & 1) != 0)
    goto LABEL_12;
  if ((a4 & 1) != 0)
  {
    sub_190C901DC();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_190C91AC4();
      goto LABEL_12;
    }
    sub_190C923B0();
  }
  v9 = *v4;
  sub_190CA8C50();
  swift_getObjectType();
  v21[3] = swift_getAssociatedTypeWitness();
  v21[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v21);
  sub_190CA89EC();
  sub_190CA85B4();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
  result = sub_190CA8C80();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a3 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v11 = ~v10;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_190CA89F8();
      v13 = sub_190CA89F8();
      result = swift_unknownObjectRelease();
      if (v12 == v13)
        goto LABEL_15;
      a3 = (a3 + 1) & v11;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_12:
  v14 = *v19;
  *(_QWORD *)(*v19 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v15 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 16 * a3);
  *v15 = v6;
  v15[1] = a2;
  v16 = *(_QWORD *)(v14 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (!v17)
  {
    *(_QWORD *)(v14 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_190CA8BF0();
  __break(1u);
  return result;
}

void sub_190C9140C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_190C90BCC(v6 + 1, qword_1ECD98B00);
  }
  else
  {
    if (v7 > v6)
    {
      sub_190C92060(qword_1ECD98B00);
      goto LABEL_14;
    }
    sub_190C92730();
  }
  v8 = *v3;
  v9 = sub_190CA889C();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_190CA88A8();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_190CA8BF0();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_190CA88A8();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_190C915A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_190CA84E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_190C90594();
  }
  else
  {
    if (v11 > v10)
    {
      sub_190C91C70();
      goto LABEL_12;
    }
    sub_190C929A8();
  }
  v12 = *v3;
  sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v13 = sub_190CA85A8();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_190C959E4(&qword_1EE20ABB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v18 = sub_190CA85CC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_190CA8BF0();
  __break(1u);
  return result;
}

uint64_t sub_190C917B4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _BYTE v19[40];

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_190C90904();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_190C91E94();
      goto LABEL_12;
    }
    sub_190C92CD4();
  }
  v9 = *v3;
  result = sub_190CA8974();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = ~v10;
    do
    {
      sub_190C7E814(*(_QWORD *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      v12 = MEMORY[0x1940177EC](v19, v6);
      result = sub_190C7E850((uint64_t)v19);
      if ((v12 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v11;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v13 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v14 = *(_QWORD *)(v13 + 48) + 40 * a2;
  v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v6 + 32);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (!v17)
  {
    *(_QWORD *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_190CA8BF0();
  __break(1u);
  return result;
}

uint64_t sub_190C9191C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_190C90E64();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_190C92200();
      goto LABEL_22;
    }
    sub_190C92F64();
  }
  v11 = *v4;
  sub_190CA8C50();
  swift_bridgeObjectRetain();
  sub_190CA8638();
  swift_bridgeObjectRelease();
  result = sub_190CA8C80();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_190CA8BCC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_190CA8BF0();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_190CA8BCC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_190C91AC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ABA8);
  v2 = *v0;
  v3 = sub_190CA89A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    result = (void *)swift_unknownObjectRetain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_190C91C70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_190CA84E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ABA0);
  v6 = *v0;
  v7 = sub_190CA89A4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_190C91E94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C220);
  v2 = *v0;
  v3 = sub_190CA89A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    result = (void *)sub_190C7E814(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v17 = *(_QWORD *)(v4 + 48) + v16;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_190C92060(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_190CA89A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_190C92200()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C228);
  v2 = *v0;
  v3 = sub_190CA89A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190C923B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t i;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  __int128 v27;
  uint64_t v28[5];

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ABA8);
  v2 = sub_190CA89B0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v24 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  for (i = 0; ; i = v26)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v26 = i;
      v12 = v11 | (i << 6);
      goto LABEL_24;
    }
    v13 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    v15 = i + 1;
    if (!v14)
    {
      v15 = i + 2;
      if (i + 2 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v24 + 8 * v15);
      if (!v14)
      {
        v15 = i + 3;
        if (i + 3 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v24 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v26 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    v27 = *(_OWORD *)(*(_QWORD *)(v1 + 48) + 16 * v12);
    sub_190CA8C50();
    swift_getObjectType();
    v28[3] = swift_getAssociatedTypeWitness();
    v28[4] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_0(v28);
    swift_unknownObjectRetain();
    sub_190CA89EC();
    sub_190CA85B4();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v28);
    result = sub_190CA8C80();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_OWORD *)(*(_QWORD *)(v3 + 48) + 16 * v10) = v27;
    ++*(_QWORD *)(v3 + 16);
  }
  v16 = i + 4;
  if (i + 4 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v24 + 8 * v16);
  if (v14)
  {
    v15 = i + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190C92730()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECD98B00);
  v3 = sub_190CA89B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_190CA889C();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190C929A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_190CA84E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ABA0);
  v7 = sub_190CA89B0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_190CA85A8();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190C92CD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C220);
  v3 = sub_190CA89B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_24;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v9)
      goto LABEL_33;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v9)
        goto LABEL_33;
      v20 = *(_QWORD *)(v6 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v9)
          goto LABEL_33;
        v20 = *(_QWORD *)(v6 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v8 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_24:
    sub_190C7E814(*(_QWORD *)(v2 + 48) + 40 * v18, (uint64_t)v29);
    result = sub_190CA8974();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v4 + 48) + 40 * v13;
    v15 = v29[0];
    v16 = v29[1];
    *(_QWORD *)(v14 + 32) = v30;
    *(_OWORD *)v14 = v15;
    *(_OWORD *)(v14 + 16) = v16;
    ++*(_QWORD *)(v4 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v20 = *(_QWORD *)(v6 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190C92F64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C228);
  v3 = sub_190CA89B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_190CA8C50();
    swift_bridgeObjectRetain_n();
    sub_190CA8638();
    swift_bridgeObjectRelease();
    result = sub_190CA8C80();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190C9321C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECD98B00);
  result = sub_190CA89C8();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_190CA889C();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_190C93478(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_190CA84E8();
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ABA0);
  result = sub_190CA89C8();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_190CA85A8();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_190C9377C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_190CA84E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_190C959E4(&qword_1EE20ABB0, 255, v11, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_190CA85A8();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_190C959E4(&qword_1EE20ABB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v19 = sub_190CA85CC();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_190C91C70();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_190C94418(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_190C939C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t *v12;
  uint64_t v13[5];
  uint64_t v14;

  v1 = *v0;
  sub_190CA8C50();
  swift_getObjectType();
  v13[3] = swift_getAssociatedTypeWitness();
  v13[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v13);
  swift_bridgeObjectRetain();
  sub_190CA89EC();
  sub_190CA85B4();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v13);
  v2 = sub_190CA8C80();
  v3 = -1 << *(_BYTE *)(v1 + 32);
  v4 = v2 & ~v3;
  if (((*(_QWORD *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v12 = v0;
    v5 = ~v3;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v6 = sub_190CA89F8();
      v7 = sub_190CA89F8();
      swift_unknownObjectRelease();
      if (v6 == v7)
        break;
      v4 = (v4 + 1) & v5;
      if (((*(_QWORD *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v12;
    v14 = *v12;
    *v12 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_190C91AC4();
      v10 = v14;
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v4);
    sub_190C94698(v4);
    *v12 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

uint64_t sub_190C93BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD v17[5];

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain();
  v7 = sub_190CA8974();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    while (1)
    {
      sub_190C7E814(*(_QWORD *)(v6 + 48) + 40 * v9, (uint64_t)v17);
      v11 = MEMORY[0x1940177EC](v17, a1);
      sub_190C7E850((uint64_t)v17);
      if ((v11 & 1) != 0)
        break;
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    v17[0] = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_190C91E94();
      v14 = v17[0];
    }
    v15 = *(_QWORD *)(v14 + 48) + 40 * v9;
    v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v15;
    *(_OWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(v15 + 32);
    sub_190C9492C(v9);
    *v3 = v17[0];
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_190C93D50(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_190CA8968();

    if ((v5 & 1) != 0)
    {
      v6 = sub_190C940F8();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_190CA889C();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  type metadata accessor for _EXActiveClientQuery();
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_190CA88A8();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_190CA88A8();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_190C92060(&qword_1EE20C218);
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_190C94AF4(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_190C93F1C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_190CA8968();

    if ((v5 & 1) != 0)
    {
      v6 = sub_190C94280();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_190CA889C();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_190CA88A8();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_190CA88A8();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_190C92060(qword_1ECD98B00);
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_190C94AF4(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_190C940F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_190CA8944();
  v3 = swift_unknownObjectRetain();
  v4 = sub_190C8FFE4(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_190CA889C();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    type metadata accessor for _EXActiveClientQuery();
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_190CA88A8();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_190C94AF4(v7);
      if ((sub_190CA88A8() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_190CA88A8();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_190C94280()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_190CA8944();
  v3 = swift_unknownObjectRetain();
  v4 = sub_190C8FDDC(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_190CA889C();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_190CA88A8();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_190C94AF4(v7);
      if ((sub_190CA88A8() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_190CA88A8();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_190C94418(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_190CA84E8();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_190CA8920();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v16 = sub_190CA85A8();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

unint64_t sub_190C94698(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23[5];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v19 = v1;
    v7 = ~v5;
    swift_retain();
    v8 = sub_190CA8920();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v20 = v3;
      v21 = v4;
      v22 = (v8 + 1) & v7;
      do
      {
        sub_190CA8C50();
        swift_getObjectType();
        v23[3] = swift_getAssociatedTypeWitness();
        v23[4] = swift_getAssociatedConformanceWitness();
        __swift_allocate_boxed_opaque_existential_0(v23);
        swift_unknownObjectRetain();
        sub_190CA89EC();
        sub_190CA85B4();
        __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v23);
        v9 = sub_190CA8C80();
        swift_unknownObjectRelease();
        v10 = v9 & v7;
        if (v2 >= (uint64_t)v22)
        {
          if (v10 < v22)
          {
            v4 = v21;
          }
          else
          {
            v11 = v20;
            v4 = v21;
            if (v2 >= (uint64_t)v10)
              goto LABEL_12;
          }
        }
        else
        {
          v11 = v20;
          v4 = v21;
          if (v10 >= v22 || v2 >= (uint64_t)v10)
          {
LABEL_12:
            v12 = *(_QWORD *)(v11 + 48);
            v13 = (_OWORD *)(v12 + 16 * v2);
            v14 = (_OWORD *)(v12 + 16 * v6);
            if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
            {
              *v13 = *v14;
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
    v1 = v19;
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v15 + 16) = v18;
    ++*(_DWORD *)(v15 + 36);
  }
  return result;
}

unint64_t sub_190C9492C(unint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _BYTE v24[40];

  v2 = v1;
  v3 = result;
  v4 = *v1;
  v5 = *v1 + 56;
  v6 = -1 << *(_BYTE *)(*v1 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(v5 + 8 * (v7 >> 6))) != 0)
  {
    v8 = ~v6;
    swift_retain();
    v9 = sub_190CA8920();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (v9 + 1) & v8;
      do
      {
        sub_190C7E814(*(_QWORD *)(v4 + 48) + 40 * v7, (uint64_t)v24);
        v13 = sub_190CA8974();
        sub_190C7E850((uint64_t)v24);
        v14 = v13 & v8;
        if (v3 >= (uint64_t)v10)
        {
          if (v14 >= v10 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            v17 = *(_QWORD *)(v4 + 48);
            v18 = v17 + 40 * v3;
            v19 = (__int128 *)(v17 + 40 * v7);
            if (v3 != v7 || (v3 = v7, v18 >= (unint64_t)v19 + 40))
            {
              v11 = *v19;
              v12 = v19[1];
              *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
              *(_OWORD *)v18 = v11;
              *(_OWORD *)(v18 + 16) = v12;
              v3 = v7;
            }
          }
        }
        else if (v14 >= v10 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        v7 = (v7 + 1) & v8;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    *(_QWORD *)(v5 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v3) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v20 = *v2;
  v21 = *(_QWORD *)(*v2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
  return result;
}

unint64_t sub_190C94AF4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_190CA8920();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_190CA889C();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_190C94C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;

  v3 = sub_190CA84E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v24 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v17)
    goto LABEL_6;
LABEL_5:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_190C9377C((uint64_t)v6, (uint64_t)v10);
    sub_190C8A144((uint64_t)v10);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17)
      goto LABEL_5;
LABEL_6:
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v25)
        goto LABEL_25;
      v22 = *(_QWORD *)(v14 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v25)
          goto LABEL_25;
        v22 = *(_QWORD *)(v14 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v25)
            goto LABEL_25;
          v22 = *(_QWORD *)(v14 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_21:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    return swift_release();
  }
  v22 = *(_QWORD *)(v14 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_190C94F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190CA84E8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_190C6D7B0();
      sub_190C8A144((uint64_t)v6);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    v33 = sub_190CA85A8();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_190C959E4(&qword_1EE20ABB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
    v40 = sub_190CA85CC();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_190C954FC((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_190C6D7B0();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_190C954FC((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_190C6D7B0();
    MEMORY[0x19401889C](v48, -1, -1);
  }
  return v46;
}

uint64_t sub_190C954FC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v48 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190CA84E8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v56 = (char *)&v47 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v50 = a1;
  v51 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v54 = a3 + 56;
  v55 = a3;
  v52 = a5;
  while (2)
  {
    v49 = v22;
    do
    {
      while (1)
      {
        v25 = *a5;
        v24 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v53 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * v40);
        if (v42)
          goto LABEL_17;
        if (v26 + 2 >= v41)
          goto LABEL_34;
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 2));
        if (v42)
        {
          v40 = v26 + 2;
LABEL_17:
          v29 = (v42 - 1) & v42;
          v30 = __clz(__rbit64(v42)) + (v40 << 6);
          v26 = v40;
          goto LABEL_7;
        }
        if (v26 + 3 >= v41)
        {
          v29 = 0;
          v31 = 1;
          v26 += 2;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v40 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v24 + 8 * v40);
          if (v42)
            goto LABEL_17;
          v40 = v41 - 1;
          v45 = v26 + 5;
          while (v41 != v45)
          {
            v42 = *(_QWORD *)(v24 + 8 * v45++);
            if (v42)
            {
              v40 = v45 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          v29 = 0;
          v31 = 1;
          v26 = v40;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v25;
        a5[1] = v24;
        a5[2] = v53;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_190C8A144((uint64_t)v11);
          v46 = v55;
          swift_retain();
          return sub_190C93478(v50, v48, v49, v46);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v56, v11, v12);
        v32 = v55;
        sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v33 = sub_190CA85A8();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v56, v12);
        v11 = v51;
        a5 = v52;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v55 + 48) + v37 * v35, v12);
        sub_190C959E4(&qword_1EE20ABB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v39 = sub_190CA85CC();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v56, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v51;
      v44 = *(unint64_t *)((char *)v50 + v43);
      *(unint64_t *)((char *)v50 + v43) = v44 & ~(1 << v35);
      a5 = v52;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v49 - 1;
    if (__OFSUB__(v49, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v49 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_190C95944(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_190C959E4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1940187DC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

int64_t sub_190C95A28(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_190C95B0C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  char v31;
  void (*v32)(char *, uint64_t);
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v36 = a2;
  v37 = a1;
  v6 = sub_190CA84E8();
  v47 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v35 - v10;
  v12 = 0;
  v41 = a3;
  v13 = *(_QWORD *)(a3 + 56);
  v38 = 0;
  v39 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  if (v14 < 64)
    v15 = ~(-1 << v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v40 = (unint64_t)(v14 + 63) >> 6;
  v48 = a4;
  v46 = a4 + 56;
  while (1)
  {
    if (v16)
    {
      v44 = (v16 - 1) & v16;
      v45 = v12;
      v17 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_22;
    }
    v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v18 >= v40)
      goto LABEL_31;
    v19 = *(_QWORD *)(v39 + 8 * v18);
    v20 = v12 + 1;
    if (!v19)
    {
      v20 = v12 + 2;
      if (v12 + 2 >= v40)
        goto LABEL_31;
      v19 = *(_QWORD *)(v39 + 8 * v20);
      if (!v19)
      {
        v20 = v12 + 3;
        if (v12 + 3 >= v40)
          goto LABEL_31;
        v19 = *(_QWORD *)(v39 + 8 * v20);
        if (!v19)
          break;
      }
    }
LABEL_21:
    v44 = (v19 - 1) & v19;
    v45 = v20;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v41 + 48);
    v42 = v17;
    v43 = *(id *)(v22 + 8 * v17);
    v23 = objc_msgSend(v43, sel_UUID);
    sub_190CA84B8();

    if (*(_QWORD *)(v48 + 16)
      && (v24 = v48,
          sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]), v25 = sub_190CA85A8(), v26 = -1 << *(_BYTE *)(v24 + 32), v27 = v25 & ~v26, ((*(_QWORD *)(v46 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0))
    {
      v28 = ~v26;
      v29 = v47[9];
      v30 = (void (*)(char *, unint64_t, uint64_t))v47[2];
      while (1)
      {
        v30(v9, *(_QWORD *)(v48 + 48) + v29 * v27, v6);
        sub_190C959E4(&qword_1EE20ABB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v31 = sub_190CA85CC();
        v32 = (void (*)(char *, uint64_t))v47[1];
        v32(v9, v6);
        if ((v31 & 1) != 0)
          break;
        v27 = (v27 + 1) & v28;
        if (((*(_QWORD *)(v46 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
          goto LABEL_5;
      }
      v32(v11, v6);

      *(unint64_t *)((char *)v37 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
      v33 = __OFADD__(v38++, 1);
      v16 = v44;
      v12 = v45;
      if (v33)
      {
        __break(1u);
LABEL_31:
        v34 = v41;
        swift_retain();
        sub_190C9321C(v37, v36, v38, v34);
        return;
      }
    }
    else
    {
LABEL_5:
      ((void (*)(char *, uint64_t))v47[1])(v11, v6);

      v16 = v44;
      v12 = v45;
    }
  }
  v21 = v12 + 4;
  if (v12 + 4 >= v40)
    goto LABEL_31;
  v19 = *(_QWORD *)(v39 + 8 * v21);
  if (v19)
  {
    v20 = v12 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v40)
      goto LABEL_31;
    v19 = *(_QWORD *)(v39 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_190C95EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_190C95B0C((_QWORD *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_190C95B0C((unint64_t *)v12, v7, a1, a2);
    v11 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x19401889C](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_190C96084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;

  v6 = sub_190CA84E8();
  v40 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)v38 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = MEMORY[0x1E0DEE9E8];
    v44 = MEMORY[0x1E0DEE9E8];
    swift_bridgeObjectRetain();
    v38[4] = sub_190CA8938();
    v11 = sub_190CA895C();
    if (v11)
    {
      v12 = v11;
      v38[1] = v3;
      v38[3] = sub_190C2B30C(0, (unint64_t *)&qword_1ECD98C80);
      v39 = a2 + 56;
      v38[2] = MEMORY[0x1E0DEE9B0] + 8;
      v13 = a2;
      do
      {
        v42 = v12;
        swift_dynamicCast();
        v14 = objc_msgSend(v43, sel_UUID);
        sub_190CA84B8();

        if (*(_QWORD *)(v13 + 16)
          && (sub_190C959E4(&qword_1EE20ABB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]), v15 = sub_190CA85A8(), v16 = -1 << *(_BYTE *)(v13 + 32), v17 = v15 & ~v16, ((*(_QWORD *)(v39 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0))
        {
          v18 = ~v16;
          v19 = v40[9];
          v20 = (void (*)(char *, unint64_t, uint64_t))v40[2];
          while (1)
          {
            v21 = v13;
            v20(v9, *(_QWORD *)(v13 + 48) + v19 * v17, v6);
            sub_190C959E4(&qword_1EE20ABB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
            v22 = sub_190CA85CC();
            v23 = (void (*)(char *, uint64_t))v40[1];
            v23(v9, v6);
            if ((v22 & 1) != 0)
              break;
            v17 = (v17 + 1) & v18;
            v13 = v21;
            if (((*(_QWORD *)(v39 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
              goto LABEL_4;
          }
          v23(v41, v6);
          v24 = v43;
          v25 = v44;
          v26 = *(_QWORD *)(v44 + 16);
          if (*(_QWORD *)(v44 + 24) <= v26)
          {
            sub_190C90BCC(v26 + 1, qword_1ECD98B00);
            v25 = v44;
          }
          result = sub_190CA889C();
          v28 = v25 + 56;
          v29 = -1 << *(_BYTE *)(v25 + 32);
          v30 = result & ~v29;
          v31 = v30 >> 6;
          v13 = v21;
          if (((-1 << v30) & ~*(_QWORD *)(v25 + 56 + 8 * (v30 >> 6))) != 0)
          {
            v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v25 + 56 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v33 = 0;
            v34 = (unint64_t)(63 - v29) >> 6;
            do
            {
              if (++v31 == v34 && (v33 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v35 = v31 == v34;
              if (v31 == v34)
                v31 = 0;
              v33 |= v35;
              v36 = *(_QWORD *)(v28 + 8 * v31);
            }
            while (v36 == -1);
            v32 = __clz(__rbit64(~v36)) + (v31 << 6);
          }
          *(_QWORD *)(v28 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
          *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * v32) = v24;
          ++*(_QWORD *)(v25 + 16);
        }
        else
        {
LABEL_4:
          ((void (*)(char *, uint64_t))v40[1])(v41, v6);

        }
        v12 = sub_190CA895C();
      }
      while (v12);
      v2 = v44;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v37 = sub_190C95EC0(a1, a2);
    if (!v3)
      return v37;
  }
  return v2;
}

id sub_190C96484()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____EXRunningLibXPCServiceExtension____lazy_storage____extensionIdentity;
  v2 = *(void **)(v0 + OBJC_IVAR____EXRunningLibXPCServiceExtension____lazy_storage____extensionIdentity);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____EXRunningLibXPCServiceExtension____lazy_storage____extensionIdentity);
LABEL_5:
    v8 = v2;
    return v3;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForCurrentProcess);
  if (result)
  {
    v5 = result;
    objc_opt_self();
    v6 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, swift_dynamicCastObjCClassUnconditional());

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_190C9658C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXRunningLibXPCServiceExtension();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190C965F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_190C96620(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_190CA87A0();
  if (!v18)
    return sub_190CA86EC();
  v19 = v18;
  v25 = v15;
  v39 = sub_190CA8A7C();
  v32 = sub_190CA8A88();
  sub_190CA8A40();
  v36 = v17;
  result = sub_190CA8794();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_190CA87B8();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_190CA8A70();
      sub_190CA87AC();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t static AppExtensionIdentity.matching(appExtensionPointIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C240);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v26 = v6;
    v27 = v5;
    v28 = a2;
    v29 = MEMORY[0x1E0DEE9D8];
    sub_190C9A1E0(0, v9, 0);
    v10 = v29;
    v11 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      swift_bridgeObjectRetain_n();
      sub_190C6A4E8(v12, v13);
      if (v2)
        break;
      v16 = v14;
      v17 = v15;
      swift_bridgeObjectRelease();
      v29 = v10;
      v19 = *(_QWORD *)(v10 + 16);
      v18 = *(_QWORD *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_190C9A1E0(v18 > 1, v19 + 1, 1);
        v10 = v29;
      }
      v11 += 2;
      *(_QWORD *)(v10 + 16) = v19 + 1;
      v20 = v10 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v16;
      *(_QWORD *)(v20 + 40) = v17;
      if (!--v9)
      {
        v5 = v27;
        v6 = v26;
        goto LABEL_9;
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    v22 = sub_190C9AD60(v10);
    swift_bridgeObjectRelease();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C248);
    *v8 = 1;
    v24 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DF07A8], v5);
    MEMORY[0x1E0C80A78](v24);
    *(&v25 - 2) = (uint64_t)sub_190C9AE18;
    *(&v25 - 1) = v23;
    sub_190CA8740();
    return swift_release();
  }
}

uint64_t sub_190C96B1C(id *a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = objc_msgSend(v3, sel_extensionPointIdentifier);
  v5 = sub_190CA85F0();
  v7 = v6;

  LOBYTE(a2) = sub_190C8D37C(v5, v7, a2);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

void sub_190C96BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t inited;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  objc_class *Controller;
  id v21;
  char *v22;
  char *v23;
  uint64_t (**v24)(unint64_t, uint64_t);
  id v25;
  uint64_t v26;
  id v27;
  os_log_type_t v28;
  NSObject *v29;
  id v30;
  id v31;
  uint8_t *v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  objc_super v38;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C3C0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQuery()), sel_init);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  aBlock[4] = sub_190C9B838;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190C970BC;
  aBlock[3] = &block_descriptor_8;
  v12 = _Block_copy(aBlock);
  v13 = (void *)objc_opt_self();
  swift_retain();
  v14 = objc_msgSend(v13, sel_predicateWithBlock_, v12);
  _Block_release(v12);
  swift_release();
  v15 = *(void **)&v10[OBJC_IVAR____EXQuery_predicate];
  *(_QWORD *)&v10[OBJC_IVAR____EXQuery_predicate] = v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190CADDD0;
  *(_QWORD *)(inited + 32) = v10;
  aBlock[0] = inited;
  sub_190CA86D4();
  v17 = aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v18, v9, v6);
  Controller = (objc_class *)type metadata accessor for _QueryController();
  v21 = objc_allocWithZone(Controller);
  objc_allocWithZone((Class)type metadata accessor for _EXQueryController());
  v22 = v10;
  v23 = (char *)v21;
  *(_QWORD *)&v23[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_controller] = sub_190C7EE3C(v17);
  v24 = (uint64_t (**)(unint64_t, uint64_t))&v23[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_handler];
  *v24 = sub_190C9B8A8;
  v24[1] = (uint64_t (*)(unint64_t, uint64_t))v19;
  swift_retain();

  v38.receiver = v23;
  v38.super_class = Controller;
  v25 = objc_msgSendSuper2(&v38, sel_init);
  v26 = OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_controller;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v25;
  v27 = v25;
  sub_190CA871C();
  v28 = sub_190CA87DC();
  if (qword_1EE20A920 != -1)
    swift_once();
  v29 = qword_1EE20A918;
  if (os_log_type_enabled((os_log_t)qword_1EE20A918, v28))
  {
    v30 = v27;
    v36 = v27;
    v37 = v26;
    v31 = v30;
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v32 = 138412290;
    aBlock[0] = v31;
    v34 = v31;
    v27 = v36;
    sub_190CA88F0();
    *v33 = v25;

    _os_log_impl(&dword_190C25000, v29, v28, "Resuming controller: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v33, -1, -1);
    MEMORY[0x19401889C](v32, -1, -1);
  }
  sub_190C70D7C();

}

uint64_t sub_190C96FBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *))
{
  id v4;
  void *v5;
  char v6;
  uint64_t result;
  void *v8;
  _QWORD v9[4];

  sub_190C6F4D4(a1, (uint64_t)v9);
  if (v9[3])
  {
    sub_190C7F614();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v8;
      objc_opt_self();
      v5 = (void *)swift_dynamicCastObjCClassUnconditional();
      v9[0] = v5;
      v6 = a3(v9);

      return v6 & 1;
    }
  }
  else
  {
    sub_190C459C8((uint64_t)v9);
  }
  result = sub_190CA8ADC();
  __break(1u);
  return result;
}

uint64_t sub_190C970BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(__int128 *, uint64_t);
  char v6;
  __int128 v8;
  __int128 v9;

  v3 = a3;
  v5 = *(uint64_t (**)(__int128 *, uint64_t))(a1 + 32);
  if (!a2)
  {
    v8 = 0u;
    v9 = 0u;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  *((_QWORD *)&v9 + 1) = swift_getObjectType();
  *(_QWORD *)&v8 = a2;
  if (v3)
LABEL_3:
    v3 = sub_190CA859C();
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  v6 = v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_190C459C8((uint64_t)&v8);
  return v6 & 1;
}

uint64_t sub_190C9717C(unint64_t a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_190CA8AF4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v16 = MEMORY[0x1E0DEE9D8];
  result = a2(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x194017870](i, a1);
        objc_opt_self();
        v8 = swift_dynamicCastObjCClassUnconditional();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a2(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v10 = *(_QWORD *)(v16 + 16);
        v9 = *(_QWORD *)(v16 + 24);
        if (v10 >= v9 >> 1)
          a2(v9 > 1, v10 + 1, 1);
        *(_QWORD *)(v16 + 16) = v10 + 1;
        *(_QWORD *)(v16 + 8 * v10 + 32) = v8;
      }
    }
    else
    {
      v11 = (id *)(a1 + 32);
      do
      {
        v12 = *v11;
        objc_opt_self();
        v13 = swift_dynamicCastObjCClassUnconditional();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a2(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v15 = *(_QWORD *)(v16 + 16);
        v14 = *(_QWORD *)(v16 + 24);
        if (v15 >= v14 >> 1)
          a2(v14 > 1, v15 + 1, 1);
        *(_QWORD *)(v16 + 16) = v15 + 1;
        *(_QWORD *)(v16 + 8 * v15 + 32) = v13;
        ++v11;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t AppExtensionIdentity.Identities.AsyncIterator.next()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C258);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C260);
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = swift_task_alloc();
  type metadata accessor for AppExtensionIdentity.Identities.AsyncIterator(0);
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190C97450()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[10];
  v3 = v0[5];
  v2 = v0[6];
  v4 = v0[4];
  sub_190C39AA0(v0[3], v1, type metadata accessor for AppExtensionIdentity.Identities.AsyncIterator);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  sub_190C81F74(&qword_1EE20C268, &qword_1EE20C258, MEMORY[0x1E0DF0848]);
  sub_190CA874C();
  sub_190C81F74(&qword_1EE20C270, &qword_1EE20C260, MEMORY[0x1E0DF0830]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_190C97540;
  return sub_190CA8710();
}

uint64_t sub_190C97540()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    (*(void (**)(_QWORD, _QWORD))(v2[8] + 8))(v2[9], v2[7]);
  return swift_task_switch();
}

uint64_t sub_190C975B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
    v5 = v4;
  else
    v5 = MEMORY[0x1E0DEE9D8];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_190C97648()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[12];
  v2 = v0[10];
  v5 = v0 + 4;
  v4 = v0[4];
  v3 = v5[1];

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
}

uint64_t sub_190C97688(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_190C976D0;
  return AppExtensionIdentity.Identities.AsyncIterator.next()();
}

uint64_t sub_190C976D0(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v5;

  v3 = *(_QWORD **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();
  *v3 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_190C97724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[5] = v4;
  *v4 = v3;
  v4[1] = sub_190C97770;
  return AppExtensionIdentity.Identities.AsyncIterator.next()();
}

uint64_t sub_190C97770(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 24);
  swift_task_dealloc();
  if (v4)
  {
    swift_getObjectType();
    sub_190CA8704();
  }
  *(_QWORD *)(v3 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_190C977FC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppExtensionIdentity.Identities.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  return sub_190C98D64(&qword_1EE20C258, a1);
}

uint64_t sub_190C97820@<X0>(uint64_t a1@<X8>)
{
  return sub_190C98DAC(&qword_1EE20C258, type metadata accessor for AppExtensionIdentity.Identities, a1);
}

void AppExtensionIdentity.Availability.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t AppExtensionIdentity.Availability.enabledCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AppExtensionIdentity.Availability.disabledCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t AppExtensionIdentity.Availability.unapprovedCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t AppExtensionIdentity.Availability.totalCount.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = v0[1];
  v2 = *v0 + v1;
  if (__OFADD__(*v0, v1))
  {
    __break(1u);
    goto LABEL_5;
  }
  v3 = v0[2];
  result = v2 + v3;
  if (__OFADD__(v2, v3))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t AppExtensionIdentity.Availability.description.getter()
{
  sub_190CA89D4();
  sub_190CA8644();
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t static AppExtensionIdentity.availabilityUpdates.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C278);
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v2 = 1;
  (*(void (**)(_QWORD *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DF07A8]);
  return sub_190CA8740();
}

void sub_190C97A6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  uint64_t (**v11)(uint64_t *);
  id v12;
  id v13;
  os_log_type_t v14;
  NSObject *v15;
  id v16;
  uint8_t *v17;
  _QWORD *v18;
  id v19;
  _QWORD v20[2];
  objc_super v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20C3A8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, v5, v2);
  v8 = (objc_class *)type metadata accessor for _AvailabilityController();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_token];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v11 = (uint64_t (**)(uint64_t *))&v9[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_handler];
  *v11 = sub_190C9B758;
  v11[1] = (uint64_t (*)(uint64_t *))v7;
  v21.receiver = v9;
  v21.super_class = v8;
  v12 = objc_msgSendSuper2(&v21, sel_init);
  *(_QWORD *)(swift_allocObject() + 16) = v12;
  v13 = v12;
  sub_190CA871C();
  v14 = sub_190CA87DC();
  if (qword_1EE20A920 != -1)
    swift_once();
  v15 = qword_1EE20A918;
  if (os_log_type_enabled((os_log_t)qword_1EE20A918, v14))
  {
    v16 = v13;
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v17 = 138412290;
    v20[1] = v16;
    v19 = v16;
    sub_190CA88F0();
    *v18 = v16;

    _os_log_impl(&dword_190C25000, v15, v14, "Resuming controller: %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v18, -1, -1);
    MEMORY[0x19401889C](v17, -1, -1);
  }
  sub_190C98178();

}

uint64_t sub_190C97CF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C3B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = sub_190CA87DC();
  if (qword_1EE20A920 != -1)
    swift_once();
  v12 = qword_1EE20A918;
  if (os_log_type_enabled((os_log_t)qword_1EE20A918, v11))
  {
    v13 = swift_slowAlloc();
    v23 = a2;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v22 = v4;
    v24 = v8;
    v25 = v15;
    v16 = v15;
    v21 = v5;
    *(_DWORD *)v14 = 136315138;
    v26 = v24;
    v27 = v9;
    v28 = v10;
    v17 = AppExtensionIdentity.Availability.description.getter();
    v26 = sub_190C30058(v17, v18, &v25);
    v5 = v21;
    sub_190CA88F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v12, v11, "_NewExtensionsController yeild results: %s", v14, 0xCu);
    swift_arrayDestroy();
    v19 = v16;
    v8 = v24;
    v4 = v22;
    MEMORY[0x19401889C](v19, -1, -1);
    MEMORY[0x19401889C](v14, -1, -1);
  }
  v26 = v8;
  v27 = v9;
  v28 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20C3A8);
  sub_190CA8728();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_190C97F04(uint64_t a1, void *a2)
{
  os_log_type_t v3;
  NSObject *v4;
  id v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;

  v3 = sub_190CA87DC();
  if (qword_1EE20A920 != -1)
    swift_once();
  v4 = qword_1EE20A918;
  if (os_log_type_enabled((os_log_t)qword_1EE20A918, v3))
  {
    v5 = a2;
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v8 = v5;
    sub_190CA88F0();
    *v7 = v5;

    _os_log_impl(&dword_190C25000, v4, v3, "Suspending controller: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v7, -1, -1);
    MEMORY[0x19401889C](v6, -1, -1);
  }
  return sub_190C98070();
}

uint64_t sub_190C98070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _OWORD v5[2];

  v1 = v0 + OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_token;
  swift_beginAccess();
  sub_190C6F4D4(v1, (uint64_t)&v3);
  if (!v4)
    return sub_190C459C8((uint64_t)&v3);
  sub_190C38F64(&v3, v5);
  sub_190C30128((uint64_t)v5, (uint64_t)&v3);
  type metadata accessor for _EXExtensionAvailablilityObserver();
  if (swift_dynamicCast())
  {
    sub_190C82A70();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v5);
  }
  else
  {
    result = sub_190CA8ADC();
    __break(1u);
  }
  return result;
}

uint64_t sub_190C98178()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (**v8)(uint64_t);
  uint64_t v9;
  _QWORD v11[4];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v0;
  v2 = type metadata accessor for _EXExtensionAvailablilityObserver();
  v3 = swift_allocObject();
  v4 = v0;
  swift_retain();
  sub_190CA84DC();
  v5 = OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_queries;
  v6 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQuery()), sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____EXQuery_resultType] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98DC0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_190CADDD0;
  *(_QWORD *)(v7 + 32) = v6;
  v11[0] = v7;
  sub_190CA86D4();
  *(_QWORD *)(v3 + v5) = v11[0];
  v8 = (uint64_t (**)(uint64_t))(v3
                                        + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
  *v8 = sub_190C9B7A0;
  v8[1] = (uint64_t (*)(uint64_t))v1;
  sub_190C825B0();
  v11[3] = v2;
  swift_release();
  v11[0] = v3;
  v9 = (uint64_t)v4
     + OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_token;
  swift_beginAccess();
  sub_190C8662C((uint64_t)v11, v9);
  return swift_endAccess();
}

uint64_t static AppExtensionIdentity.all.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _BYTE v5[16];
  uint64_t (*v6)();
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C240);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C248);
  *v3 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DF07A8], v0);
  v6 = sub_190C983B8;
  v7 = 0;
  return sub_190CA8740();
}

uint64_t sub_190C983B8()
{
  return 1;
}

uint64_t static AppExtensionIdentity.allMatching(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C240);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C248);
  *v7 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DF07A8], v4);
  v10 = a1;
  v11 = a2;
  swift_retain();
  sub_190CA8740();
  return swift_release();
}

uint64_t _AppExtensionQuery.extensionPointIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _AppExtensionQuery.extensionPointIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*_AppExtensionQuery.extensionPointIdentifier.modify())()
{
  return nullsub_1;
}

void *_AppExtensionQuery.predicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void _AppExtensionQuery.predicate.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*_AppExtensionQuery.predicate.modify())()
{
  return nullsub_1;
}

__n128 _AppExtensionQuery.hostAuditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 56);
  result = *(__n128 *)(v1 + 24);
  v4 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t _AppExtensionQuery.hostAuditToken.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_190C9AE3C(a1, v1 + 24);
}

uint64_t (*_AppExtensionQuery.hostAuditToken.modify())()
{
  return nullsub_1;
}

void *_AppExtensionQuery.extensionPoint.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void _AppExtensionQuery.extensionPoint.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
}

uint64_t (*_AppExtensionQuery.extensionPoint.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionQuery.allowsDuplicates.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t _AppExtensionQuery.allowsDuplicates.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t (*_AppExtensionQuery.allowsDuplicates.modify())()
{
  return nullsub_1;
}

double _AppExtensionQuery.init(extensionPointIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  id v7;
  unsigned __int8 v8;
  double result;

  v6 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v6, sel_sharedInstance);
  v8 = objc_msgSend(v7, sel_queryAllowsDuplicates);
  swift_bridgeObjectRelease();

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_QWORD *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 56) = 1;
  *(_QWORD *)(a3 + 64) = 0;
  *(_BYTE *)(a3 + 72) = v8;
  return result;
}

double _AppExtensionQuery.init(extensionPointIdentifier:predicate:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  void *v8;
  id v9;
  id v10;
  unsigned __int8 v11;
  double result;

  v8 = (void *)objc_opt_self();
  v9 = a3;
  swift_bridgeObjectRetain();
  v10 = objc_msgSend(v8, sel_sharedInstance);
  v11 = objc_msgSend(v10, sel_queryAllowsDuplicates);
  swift_bridgeObjectRelease();

  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  result = 0.0;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_BYTE *)(a4 + 56) = 1;
  *(_QWORD *)(a4 + 64) = 0;
  *(_BYTE *)(a4 + 72) = v11;
  return result;
}

double _AppExtensionQuery.init(extensionPoint:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  unsigned __int8 v11;
  double result;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_190CA85F0();
  v7 = v6;

  v8 = (void *)objc_opt_self();
  v9 = a1;
  swift_bridgeObjectRetain();
  v10 = objc_msgSend(v8, sel_sharedInstance);
  v11 = objc_msgSend(v10, sel_queryAllowsDuplicates);
  swift_bridgeObjectRelease();

  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_QWORD *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = 1;
  *(_QWORD *)(a2 + 64) = a1;
  *(_BYTE *)(a2 + 72) = v11;
  return result;
}

uint64_t _AppExtensionQuery.Results.AsyncIterator.next()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A8B0);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A8A8);
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = swift_task_alloc();
  type metadata accessor for _AppExtensionQuery.Results.AsyncIterator(0);
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190C98920()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[10];
  v3 = v0[5];
  v2 = v0[6];
  v4 = v0[4];
  sub_190C39AA0(v0[3], v1, type metadata accessor for _AppExtensionQuery.Results.AsyncIterator);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  sub_190C81F74(&qword_1EE20A910, &qword_1EE20A8B0, MEMORY[0x1E0DF0848]);
  sub_190CA874C();
  sub_190C81F74((unint64_t *)&unk_1EE20A8F8, &qword_1EE20A8A8, MEMORY[0x1E0DF0830]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_190C98A10;
  return sub_190CA8710();
}

uint64_t sub_190C98A10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    (*(void (**)(_QWORD, _QWORD))(v2[8] + 8))(v2[9], v2[7]);
  return swift_task_switch();
}

uint64_t sub_190C98A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
    v5 = v4;
  else
    v5 = MEMORY[0x1E0DEE9D8];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_190C98B1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_190C98B64;
  return _AppExtensionQuery.Results.AsyncIterator.next()();
}

uint64_t sub_190C98B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_190C98BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v4[7] = v5;
  *v5 = v4;
  v5[1] = sub_190C98C0C;
  return _AppExtensionQuery.Results.AsyncIterator.next()();
}

uint64_t sub_190C98C0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    if (v5)
    {
      swift_getObjectType();
      sub_190CA8704();
    }
  }
  else
  {
    if (v5)
    {
      swift_getObjectType();
      sub_190CA8704();
    }
    *(_QWORD *)(v4 + 72) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_190C98CD8()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190C98CF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD **)(v0 + 48);
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A2A0);
  swift_willThrowTypedImpl();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _AppExtensionQuery.Results.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  return sub_190C98D64(&qword_1EE20A8B0, a1);
}

uint64_t sub_190C98D64@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2, v4);
}

uint64_t sub_190C98D98@<X0>(uint64_t a1@<X8>)
{
  return sub_190C98DAC(&qword_1EE20A8B0, type metadata accessor for _AppExtensionQuery.Results, a1);
}

uint64_t sub_190C98DAC@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v3, v6);
  return sub_190C2BA04(v3, a2);
}

uint64_t _AppExtensionQuery.results.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  void *v10;
  char v11;
  uint64_t inited;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A8A0);
  v20 = *(_QWORD *)(v2 - 8);
  v21 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *v1;
  v5 = v1[1];
  v7 = (void *)v1[2];
  v19 = *(_OWORD *)(v1 + 3);
  v8 = v1[6];
  v18 = v1[5];
  v9 = *((_BYTE *)v1 + 56);
  v10 = (void *)v1[8];
  v11 = *((_BYTE *)v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A928);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190CADDC0;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = v7;
  *(_OWORD *)(inited + 56) = v19;
  *(_QWORD *)(inited + 72) = v18;
  *(_QWORD *)(inited + 80) = v8;
  *(_BYTE *)(inited + 88) = v9;
  *(_QWORD *)(inited + 96) = v10;
  *(_BYTE *)(inited + 104) = v11;
  v13 = v10;
  swift_bridgeObjectRetain();
  v14 = v7;
  v15 = sub_190C99088(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A8E0);
  *v4 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v4, *MEMORY[0x1E0DF07A8], v21);
  v23 = v15;
  sub_190CA8740();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t Collection<>.results.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A8A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_190C9956C(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A8E0);
  *v7 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DF07A8], v4);
  v11 = v8;
  sub_190CA8740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190C99088(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  objc_class *v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  id v9;
  _BYTE *v10;
  id v11;
  unsigned __int8 v12;
  id v13;
  __int128 *v14;
  uint64_t *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  objc_class *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  void *v29;
  _BYTE *v30;
  id v31;
  unsigned __int8 v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  void *v38;
  id v39;
  _BYTE *v40;
  id v41;
  unsigned __int8 v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  objc_super v51;
  objc_super v52;
  objc_super v53;
  uint64_t v54;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v54 = MEMORY[0x1E0DEE9D8];
    sub_190CA8A4C();
    v4 = a1 + 48;
    do
    {
      v19 = *(void **)(v4 + 48);
      if (v19)
      {
        v5 = (objc_class *)type metadata accessor for _EXQuery();
        v6 = objc_allocWithZone(v5);
        *(_QWORD *)&v6[OBJC_IVAR____EXQuery_resultType] = 0;
        *(_QWORD *)&v6[OBJC_IVAR____EXQuery_predicate] = 0;
        v6[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
        v7 = OBJC_IVAR____EXQuery_allowsDuplicates;
        v8 = (void *)objc_opt_self();
        v9 = v19;
        v10 = v6;
        v11 = objc_msgSend(v8, sel_sharedInstance);
        v12 = objc_msgSend(v11, sel_queryAllowsDuplicates);

        v6[v7] = v12;
        v10[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
        v13 = v9;
        v14 = (__int128 *)_EXAuditTokenForCurrentProcess();
        v15 = (uint64_t *)&v10[OBJC_IVAR____EXQuery_inner];
        v16 = swift_allocObject();
        v17 = *v14;
        v18 = v14[1];
        v15[3] = (uint64_t)&type metadata for _EXQuery.RecordQuery;
        v15[4] = (uint64_t)&off_1E2CFB920;
        *v15 = v16;
        *(_QWORD *)(v16 + 16) = v13;
        *(_OWORD *)(v16 + 24) = v17;
        *(_OWORD *)(v16 + 40) = v18;

        v51.receiver = v10;
        v51.super_class = v5;
        objc_msgSendSuper2(&v51, sel_init);
      }
      else
      {
        v20 = *(_QWORD *)(v4 - 8);
        v21 = *(void **)v4;
        v50 = *(_QWORD *)(v4 - 16);
        if ((*(_BYTE *)(v4 + 40) & 1) != 0)
        {
          v22 = v21;
          swift_bridgeObjectRetain_n();
          v13 = v22;
          v23 = _EXAuditTokenForCurrentProcess();
          v24 = (objc_class *)type metadata accessor for _EXQuery();
          v49 = *(_OWORD *)v23;
          v25 = *(_QWORD *)(v23 + 16);
          v26 = *(_QWORD *)(v23 + 24);
          v27 = objc_allocWithZone(v24);
          *(_QWORD *)&v27[OBJC_IVAR____EXQuery_resultType] = 0;
          *(_QWORD *)&v27[OBJC_IVAR____EXQuery_predicate] = 0;
          v27[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
          v28 = OBJC_IVAR____EXQuery_allowsDuplicates;
          v29 = (void *)objc_opt_self();
          v30 = v27;
          v31 = objc_msgSend(v29, sel_sharedInstance);
          v32 = objc_msgSend(v31, sel_queryAllowsDuplicates);

          v27[v28] = v32;
          v30[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
          v33 = (uint64_t *)&v30[OBJC_IVAR____EXQuery_inner];
          v33[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
          v33[4] = (uint64_t)&off_1E2CFBA00;
          v34 = swift_allocObject();
          *v33 = v34;
          *(_QWORD *)(v34 + 16) = v50;
          *(_QWORD *)(v34 + 24) = v20;
          *(_DWORD *)(v34 + 32) = 0;
          *(_OWORD *)(v34 + 36) = v49;
          *(_QWORD *)(v34 + 52) = v25;
          *(_QWORD *)(v34 + 60) = v26;

          v53.receiver = v30;
          v53.super_class = v24;
          objc_msgSendSuper2(&v53, sel_init);
        }
        else
        {
          v45 = *(_QWORD *)(v4 + 8);
          v46 = *(_QWORD *)(v4 + 16);
          v35 = *(_QWORD *)(v4 + 24);
          v48 = *(_QWORD *)(v4 + 32);
          v47 = (objc_class *)type metadata accessor for _EXQuery();
          v36 = objc_allocWithZone(v47);
          *(_QWORD *)&v36[OBJC_IVAR____EXQuery_resultType] = 0;
          *(_QWORD *)&v36[OBJC_IVAR____EXQuery_predicate] = 0;
          v36[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
          v37 = OBJC_IVAR____EXQuery_allowsDuplicates;
          v38 = (void *)objc_opt_self();
          v39 = v21;
          swift_bridgeObjectRetain();
          v13 = v39;
          v40 = v36;
          swift_bridgeObjectRetain();
          v41 = objc_msgSend(v38, sel_sharedInstance);
          v42 = objc_msgSend(v41, sel_queryAllowsDuplicates);

          v36[v37] = v42;
          v40[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
          v43 = (uint64_t *)&v40[OBJC_IVAR____EXQuery_inner];
          v43[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
          v43[4] = (uint64_t)&off_1E2CFBA00;
          v44 = swift_allocObject();
          *v43 = v44;
          *(_QWORD *)(v44 + 16) = v50;
          *(_QWORD *)(v44 + 24) = v20;
          *(_DWORD *)(v44 + 32) = 0;
          *(_QWORD *)(v44 + 36) = v45;
          *(_QWORD *)(v44 + 44) = v46;
          *(_QWORD *)(v44 + 52) = v35;
          *(_QWORD *)(v44 + 60) = v48;

          v52.receiver = v40;
          v52.super_class = v47;
          objc_msgSendSuper2(&v52, sel_init);
        }
        swift_bridgeObjectRelease();

      }
      sub_190CA8A28();
      sub_190CA8A58();
      sub_190CA8A64();
      sub_190CA8A34();
      v4 += 80;
      --v2;
    }
    while (v2);
    return v54;
  }
  return result;
}

uint64_t sub_190C9956C(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)type metadata accessor for _EXQuery();
  return sub_190C96620((void (*)(char *, char *))sub_190C995D4, 0, a1, v4, MEMORY[0x1E0DEDCE8], a2, MEMORY[0x1E0DEDD18], v5);
}

void sub_190C995D4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v3 = *(void **)(a1 + 64);
  if (v3)
  {
    v4 = objc_allocWithZone((Class)type metadata accessor for _EXQuery());
    v5 = v3;
    v6 = sub_190C76EE0(v5);

  }
  else
  {
    v7 = *(_QWORD *)a1;
    v8 = *(_QWORD *)(a1 + 8);
    if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    {
      v9 = *(id *)(a1 + 16);
      swift_bridgeObjectRetain_n();
      v10 = v9;
      v11 = (unint64_t *)_EXAuditTokenForCurrentProcess();
      v12 = *v11;
      v13 = v11[1];
      v14 = v11[2];
      v15 = v11[3];
      v16 = objc_allocWithZone((Class)type metadata accessor for _EXQuery());
      v6 = sub_190C76D64(v7, v8, 0, v12, v13, v14, v15);
      swift_bridgeObjectRelease();

    }
    else
    {
      v17 = *(_QWORD *)(a1 + 24);
      v18 = *(_QWORD *)(a1 + 32);
      v19 = *(_QWORD *)(a1 + 40);
      v20 = *(_QWORD *)(a1 + 48);
      objc_allocWithZone((Class)type metadata accessor for _EXQuery());
      swift_bridgeObjectRetain();
      v6 = sub_190C76D64(v7, v8, 0, v17, v18, v19, v20);
    }
  }
  *a2 = v6;
}

void sub_190C99924(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  objc_class *Controller;
  id v10;
  char *v11;
  uint64_t (**v12)(unint64_t, uint64_t);
  id v13;
  uint64_t v14;
  id v15;
  os_log_type_t v16;
  NSObject *v17;
  id v18;
  id v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  _QWORD v23[2];
  objc_super v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20A8E8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  Controller = (objc_class *)type metadata accessor for _QueryController();
  v10 = objc_allocWithZone(Controller);
  objc_allocWithZone((Class)type metadata accessor for _EXQueryController());
  swift_bridgeObjectRetain();
  v11 = (char *)v10;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_controller] = sub_190C7EE3C(a2);
  v12 = (uint64_t (**)(unint64_t, uint64_t))&v11[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_handler];
  *v12 = sub_190C9B6C4;
  v12[1] = (uint64_t (*)(unint64_t, uint64_t))v8;
  swift_retain();

  v24.receiver = v11;
  v24.super_class = Controller;
  v13 = objc_msgSendSuper2(&v24, sel_init);
  v14 = OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_controller;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v13;
  v15 = v13;
  sub_190CA871C();
  v16 = sub_190CA87DC();
  if (qword_1EE20A920 != -1)
    swift_once();
  v17 = qword_1EE20A918;
  if (os_log_type_enabled((os_log_t)qword_1EE20A918, v16))
  {
    v18 = v15;
    v23[0] = v14;
    v19 = v18;
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v20 = 138412290;
    v23[1] = v19;
    v22 = v19;
    sub_190CA88F0();
    *v21 = v13;

    _os_log_impl(&dword_190C25000, v17, v16, "Resuming controller: %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v21, -1, -1);
    MEMORY[0x19401889C](v20, -1, -1);
  }
  sub_190C70D7C();

}

uint64_t sub_190C99C24(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t), uint64_t *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t (*v28)(BOOL, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190CA87DC();
  if (qword_1EE20A920 != -1)
    swift_once();
  v15 = qword_1EE20A918;
  if (os_log_type_enabled((os_log_t)qword_1EE20A918, v14))
  {
    swift_bridgeObjectRetain_n();
    v30 = v10;
    v16 = swift_slowAlloc();
    v31 = a3;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v33 = v18;
    v28 = a5;
    v29 = v11;
    *(_DWORD *)v17 = 136315138;
    v27[1] = v17 + 4;
    v19 = a6;
    v20 = sub_190C7F614();
    v21 = swift_bridgeObjectRetain();
    v22 = MEMORY[0x194017534](v21, v20);
    v24 = v23;
    swift_bridgeObjectRelease();
    v25 = v22;
    a6 = v19;
    v32 = sub_190C30058(v25, v24, &v33);
    v11 = v29;
    a5 = v28;
    sub_190CA88F0();
    swift_bridgeObjectRelease_n();
    v10 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190C25000, v15, v14, "_QueryController yeild results: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v18, -1, -1);
    MEMORY[0x19401889C](v17, -1, -1);
  }
  v33 = sub_190C9717C(a1, a5);
  __swift_instantiateConcreteTypeFromMangledName(a6);
  sub_190CA8728();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_190C99E64(uint64_t a1, void *a2)
{
  os_log_type_t v3;
  NSObject *v4;
  id v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;

  v3 = sub_190CA87DC();
  if (qword_1EE20A920 != -1)
    swift_once();
  v4 = qword_1EE20A918;
  if (os_log_type_enabled((os_log_t)qword_1EE20A918, v3))
  {
    v5 = a2;
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v8 = v5;
    sub_190CA88F0();
    *v7 = v5;

    _os_log_impl(&dword_190C25000, v4, v3, "Suspending controller: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98D70);
    swift_arrayDestroy();
    MEMORY[0x19401889C](v7, -1, -1);
    MEMORY[0x19401889C](v6, -1, -1);
  }
  sub_190C714D8();
}

id sub_190C9A014()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  id v4;
  objc_super v6;
  uint64_t v7;
  unint64_t v8;

  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20AE40);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190CADDC0;
  v7 = 0x20636F6C6C616564;
  v8 = 0xE800000000000000;
  v3 = v0;
  v4 = objc_msgSend(v3, sel_description);
  sub_190CA85F0();

  sub_190CA8644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 32) = 0x20636F6C6C616564;
  *(_QWORD *)(v2 + 40) = 0xE800000000000000;
  sub_190CA8C44();
  swift_bridgeObjectRelease();
  v6.receiver = v3;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_190C9A18C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_190C9A254(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_190C9A1A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_190C9A3DC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_190C9A1C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_190C9A57C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_190C9A1E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_190C9A75C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_190C9A1FC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_190C9A8C4(a1, a2, a3, *v3, &qword_1EE20C3D0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_190C9A228(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_190C9A8C4(a1, a2, a3, *v3, (uint64_t *)&unk_1EE20A930);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_190C9A254(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C388);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C390);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C9A3DC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C398);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C3A0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C9A57C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C140);
  v10 = *(_QWORD *)(sub_190CA84E8() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_190CA84E8() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C9A75C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20C3E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C9A8C4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

uint64_t sub_190C9AA30(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_190CA8AF4();
    swift_bridgeObjectRelease();
  }
  sub_190C7F614();
  sub_190C3A458((unint64_t *)&qword_1EE20AB90, (uint64_t (*)(uint64_t))sub_190C7F614, MEMORY[0x1E0DEFCF8]);
  result = sub_190CA877C();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_190CA8AF4();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x194017870](i, a1);
        sub_190C8F5A0(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_190C8F5A0(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_190C9AB90(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_190CA84E8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_190C3A458(&qword_1EE20ABB0, v3, MEMORY[0x1E0CB09C8]);
  v19 = sub_190CA877C();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_190C8F844((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_190C9AD60(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_190C9B94C();
  result = sub_190CA877C();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_190C8FC20(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_190C9ADF4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190C9AE18(id *a1)
{
  uint64_t v1;

  return sub_190C96B1C(a1, *(_QWORD *)(v1 + 16));
}

void sub_190C9AE20(uint64_t a1)
{
  uint64_t v1;

  sub_190C96BA0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for AppExtensionIdentity.Identities.AsyncIterator(uint64_t a1)
{
  return sub_190C39BFC(a1, (uint64_t *)&unk_1EE20C2E8);
}

uint64_t sub_190C9AE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for _AppExtensionQuery.Results.AsyncIterator(uint64_t a1)
{
  return sub_190C39BFC(a1, (uint64_t *)&unk_1EE20A8D0);
}

void sub_190C9AE98(uint64_t a1)
{
  uint64_t v1;

  sub_190C99924(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_190C9AEA0()
{
  return MEMORY[0x1E0DEDD18];
}

uint64_t sub_190C9AEAC()
{
  return sub_190C3A458(qword_1EE20C2A8, type metadata accessor for AppExtensionIdentity.Identities.AsyncIterator, (uint64_t)&protocol conformance descriptor for AppExtensionIdentity.Identities.AsyncIterator);
}

uint64_t sub_190C9AED8()
{
  return MEMORY[0x1E0DEDB38];
}

uint64_t sub_190C9AEE4()
{
  return sub_190C3A458((unint64_t *)&unk_1EE20C2C0, type metadata accessor for _AppExtensionQuery.Results.AsyncIterator, (uint64_t)&protocol conformance descriptor for _AppExtensionQuery.Results.AsyncIterator);
}

uint64_t _s10IdentitiesVwxx(uint64_t a1, uint64_t a2)
{
  return sub_190C9B488(a1, a2, &qword_1EE20C258);
}

uint64_t _s10IdentitiesVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190C9B4BC(a1, a2, a3, &qword_1EE20C258);
}

uint64_t _s10IdentitiesVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190C9B500(a1, a2, a3, &qword_1EE20C258);
}

uint64_t _s10IdentitiesVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190C9B544(a1, a2, a3, &qword_1EE20C258);
}

uint64_t _s10IdentitiesVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190C9B588(a1, a2, a3, &qword_1EE20C258);
}

uint64_t _s10IdentitiesVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9AF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1EE20C258);
}

uint64_t _s10IdentitiesVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9AF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1EE20C258);
}

uint64_t type metadata accessor for AppExtensionIdentity.Identities(uint64_t a1)
{
  return sub_190C39BFC(a1, (uint64_t *)&unk_1EE20C2D0);
}

void sub_190C9AF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190C9B014(a1, a2, a3, &qword_1EE20C2E0, &qword_1EE20C248);
}

uint64_t _s10IdentitiesV13AsyncIteratorVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C258);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s10IdentitiesV13AsyncIteratorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9AFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1EE20C258);
}

uint64_t _s10IdentitiesV13AsyncIteratorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9B008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1EE20C258);
}

void sub_190C9B014(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v5;

  sub_190C9B3FC(319, a4, a5);
  if (v5 <= 0x3F)
    swift_initStructMetadata();
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s12AvailabilityVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s12AvailabilityVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppExtensionIdentity.Availability()
{
  return &type metadata for AppExtensionIdentity.Availability;
}

void destroy for _AppExtensionQuery(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for _AppExtensionQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for _AppExtensionQuery(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  id v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  v7 = *(_OWORD *)(a2 + 24);
  v8 = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 24) = v7;
  v9 = *(void **)(a1 + 64);
  v10 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  v11 = v10;

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for _AppExtensionQuery(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppExtensionQuery(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _AppExtensionQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _AppExtensionQuery()
{
  return &type metadata for _AppExtensionQuery;
}

uint64_t destroy for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2)
{
  return sub_190C9B488(a1, a2, &qword_1EE20A8B0);
}

uint64_t initializeWithCopy for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190C9B4BC(a1, a2, a3, &qword_1EE20A8B0);
}

uint64_t assignWithCopy for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190C9B500(a1, a2, a3, &qword_1EE20A8B0);
}

uint64_t initializeWithTake for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190C9B544(a1, a2, a3, &qword_1EE20A8B0);
}

uint64_t assignWithTake for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190C9B588(a1, a2, a3, &qword_1EE20A8B0);
}

uint64_t getEnumTagSinglePayload for _AppExtensionQuery.Results()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9B3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1EE20A8B0);
}

uint64_t storeEnumTagSinglePayload for _AppExtensionQuery.Results()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9B3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1EE20A8B0);
}

uint64_t type metadata accessor for _AppExtensionQuery.Results(uint64_t a1)
{
  return sub_190C39BFC(a1, (uint64_t *)&unk_1EE20A888);
}

void sub_190C9B3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190C9B014(a1, a2, a3, &qword_1EE20A908, &qword_1EE20A8E0);
}

void sub_190C9B3FC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_190CA8734();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for _AppExtensionQuery.Results.AsyncIterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20A8B0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_190C9B488(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_190C9B4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t sub_190C9B500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t sub_190C9B544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t sub_190C9B588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppExtensionQuery.Results.AsyncIterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9B5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1EE20A8B0);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for _AppExtensionQuery.Results.AsyncIterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9B62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1EE20A8B0);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t type metadata accessor for _QueryController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _AvailabilityController()
{
  return objc_opt_self();
}

uint64_t sub_190C9B6B8()
{
  return objectdestroy_21Tm((uint64_t *)&unk_1EE20A8E8);
}

uint64_t sub_190C9B6C4(unint64_t a1, uint64_t a2)
{
  return sub_190C9B8C4(a1, a2, (uint64_t *)&unk_1EE20A8E8, &qword_1EE20A898, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_190C9A228);
}

uint64_t sub_190C9B6E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_190C9B704()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190C9B728()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_190C9B74C()
{
  return objectdestroy_21Tm((uint64_t *)&unk_1EE20C3A8);
}

uint64_t sub_190C9B758(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE20C3A8) - 8)
                          + 80);
  return sub_190C97CF4(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_190C9B798(uint64_t a1)
{
  uint64_t v1;

  return sub_190C97F04(a1, *(void **)(v1 + 16));
}

uint64_t sub_190C9B7A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[3];

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____EXExtensionAvailablility_disabledCount);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____EXExtensionAvailablility_unelectedCount);
  v4 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)(v1 + 16)
                                          + OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_handler);
  v6[0] = *(_QWORD *)(a1 + OBJC_IVAR____EXExtensionAvailablility_enabledCount);
  v6[1] = v2;
  v6[2] = v3;
  return v4(v6);
}

uint64_t sub_190C9B814()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C9B838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190C96FBC(a1, a2, *(uint64_t (**)(_QWORD *))(v2 + 16));
}

uint64_t sub_190C9B840()
{
  return objectdestroy_21Tm(&qword_1EE20C3C0);
}

uint64_t objectdestroy_21Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_190C9B8A8(unint64_t a1, uint64_t a2)
{
  return sub_190C9B8C4(a1, a2, &qword_1EE20C3C0, &qword_1EE20C3C8, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_190C9A1FC);
}

uint64_t sub_190C9B8C4(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return sub_190C99C24(a1, a2, v5 + ((v11 + 16) & ~v11), a4, a5, a3);
}

void sub_190C9B934(uint64_t a1)
{
  uint64_t v1;

  sub_190C99E64(a1, *(void **)(v1 + 16));
}

unint64_t sub_190C9B94C()
{
  unint64_t result;

  result = qword_1EE20C3D8;
  if (!qword_1EE20C3D8)
  {
    result = MEMORY[0x1940187DC](&unk_190CADFF4, &type metadata for _AppExtensionPoint);
    atomic_store(result, (unint64_t *)&qword_1EE20C3D8);
  }
  return result;
}

id AppExtensionIdentity.inner.getter()
{
  id *v0;

  return *v0;
}

uint64_t AppExtensionIdentity.bundleIdentifier.getter()
{
  return sub_190C2E374((SEL *)&selRef_bundleIdentifier);
}

uint64_t AppExtensionIdentity.localizedName.getter()
{
  return sub_190C2E374((SEL *)&selRef_localizedName);
}

uint64_t AppExtensionIdentity.init(record:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, a1);

  objc_opt_self();
  result = swift_dynamicCastObjCClassUnconditional();
  *a2 = result;
  return result;
}

uint64_t AppExtensionIdentity.bundleVersion.getter()
{
  return sub_190C2E374((SEL *)&selRef_bundleVersion);
}

id AppExtensionIdentity.presentsUserInterface.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_presentsUserInterface);
}

id AppExtensionIdentity.requiresMacCatalystBehavior.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_requiresMacCatalystBehavior);
}

ExtensionFoundation::AppExtensionIdentity __swiftcall AppExtensionIdentity.init(_:)(ExtensionFoundation::AppExtensionIdentity result)
{
  _QWORD *v1;

  *v1 = *(_QWORD *)result._inner.super.isa;
  return result;
}

uint64_t AppExtensionIdentity._attributes.getter()
{
  return sub_190C9BFC4((SEL *)&selRef_attributes);
}

uint64_t AppExtensionIdentity._nsExtensionAttributes.getter()
{
  return MEMORY[0x1E0DEE9E0];
}

ExtensionFoundation::_AppExtensionIdentity __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _AppExtensionIdentity.init(serviceIdentifier:)(Swift::String serviceIdentifier)
{
  _QWORD *v1;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  objc_class *v13;
  __int16 v14;
  NSString *v15;
  id v16;
  void *v17;
  os_log_type_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  ExtensionFoundation::_AppExtensionIdentity result;

  object = serviceIdentifier._object;
  countAndFlagsBits = serviceIdentifier._countAndFlagsBits;
  v4 = v1;
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForCurrentProcess);
  if (v5)
  {
    v6 = v5;
    objc_opt_self();
    v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      v8 = objc_msgSend(v7, sel_applicationExtensionRecords);
      sub_190C9C85C();
      sub_190C3A458(&qword_1EE20C3F0, (uint64_t (*)(uint64_t))sub_190C9C85C, MEMORY[0x1E0DEFCF8]);
      v9 = sub_190CA8764();

      swift_bridgeObjectRetain();
      sub_190C9CE10(v9, countAndFlagsBits, (uint64_t)object);
      v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11)
      {
        swift_bridgeObjectRelease();
        v12 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, v11);

        *v4 = v12;
      }
      else
      {
        v18 = sub_190CA87E8();
        if (qword_1EE20A920 != -1)
          swift_once();
        v19 = qword_1EE20A918;
        v20 = v18;
        if (os_log_type_enabled((os_log_t)qword_1EE20A918, v18))
        {
          swift_bridgeObjectRetain();
          v21 = (uint8_t *)swift_slowAlloc();
          v22 = swift_slowAlloc();
          v25 = v22;
          *(_DWORD *)v21 = 136315138;
          swift_bridgeObjectRetain();
          sub_190C30058(countAndFlagsBits, (unint64_t)object, &v25);
          sub_190CA88F0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_190C25000, v19, v20, "Current process does not contain an extension with bundle ID %s.", v21, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x19401889C](v22, -1, -1);
          MEMORY[0x19401889C](v21, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        sub_190CA85F0();
        v23 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
        v24 = (void *)sub_190CA85D8();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, 5, 0);

        swift_willThrow();
      }
      goto LABEL_15;
    }

  }
  swift_bridgeObjectRelease();
  sub_190CA87E8();
  if (qword_1EE20A920 != -1)
    swift_once();
  sub_190CA84F4();
  sub_190CA85F0();
  v16 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v17 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, 5, 0);

  v13 = (objc_class *)swift_willThrow();
LABEL_15:
  result._inner._developerName = v15;
  result._inner.super.isa = v13;
  *(_WORD *)&result._inner._requiresUIKitSceneHosting = v14;
  return result;
}

void _AppExtensionIdentity.init(applicationExtensionRecord:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  v4 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, a1);

  *a2 = v4;
}

void _AppExtensionIdentity.id.getter()
{
  sub_190C9C05C((SEL *)&selRef_uniqueIdentifier, (void (*)(void))MEMORY[0x1E0CB0958]);
}

uint64_t _AppExtensionIdentity.extensionPointIdentifier.getter()
{
  return sub_190C2E374((SEL *)&selRef_extensionPointIdentifier);
}

uint64_t _AppExtensionIdentity.bundleVersion.getter()
{
  return sub_190C2E374((SEL *)&selRef_bundleVersion);
}

id _AppExtensionIdentity.containingApplicationRecord.getter()
{
  id *v0;
  id result;
  void *v2;

  result = objc_msgSend(*v0, sel_containingBundleRecord);
  if (result)
  {
    v2 = result;
    objc_opt_self();
    result = (id)swift_dynamicCastObjCClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

uint64_t _AppExtensionIdentity.localizedName.getter()
{
  return sub_190C2E374((SEL *)&selRef_localizedName);
}

uint64_t _AppExtensionIdentity.developerName.getter()
{
  return sub_190C2E374((SEL *)&selRef_developerName);
}

uint64_t _AppExtensionIdentity.attributes.getter()
{
  return sub_190C9BFC4((SEL *)&selRef_attributes);
}

uint64_t _AppExtensionIdentity.nsExtensionAttributes.getter()
{
  return sub_190C9BFC4((SEL *)&selRef_nsExtensionAttributes);
}

uint64_t sub_190C9BFC4(SEL *a1)
{
  id *v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(*v1, *a1);
  v3 = sub_190CA859C();

  return v3;
}

id _AppExtensionIdentity.icon.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_icon);
}

void _AppExtensionIdentity.url.getter()
{
  sub_190C9C05C((SEL *)&selRef_url, (void (*)(void))MEMORY[0x1E0CAFF00]);
}

void sub_190C9C05C(SEL *a1, void (*a2)(void))
{
  id *v2;
  id v4;

  v4 = objc_msgSend(*v2, *a1);
  a2();

}

id _AppExtensionIdentity.enabled.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_enabled);
}

id _AppExtensionIdentity.platform.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_platform);
}

id _AppExtensionIdentity.extensionPointRecord.getter()
{
  id *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v1 = *v0;
  v2 = objc_msgSend(*v0, sel_applicationExtensionRecord);
  if (!v2
    || (v3 = v2,
        v4 = objc_msgSend(v2, sel_extensionPointRecord),
        v3,
        !v4))
  {
    v5 = v1;
    v6 = objc_msgSend(v5, sel_extensionPointIdentifier);
    v7 = sub_190CA85F0();
    v9 = v8;

    v10 = objc_msgSend(v5, sel_platform);
    v11 = objc_allocWithZone(MEMORY[0x1E0CA58E0]);
    return sub_190C9C898(v7, v9, (uint64_t)v10);
  }
  return v4;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _AppExtensionIdentity.enable()()
{
  sub_190C9C278((SEL *)&selRef_enableExtension_error_);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _AppExtensionIdentity.disable()()
{
  sub_190C9C278((SEL *)&selRef_disableExtension_error_);
}

id sub_190C9C278(SEL *a1)
{
  uint64_t *v1;
  uint64_t v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *v1;
  v5[0] = 0;
  if (objc_msgSend((id)objc_opt_self(), *a1, v2, v5))
    return v5[0];
  v4 = v5[0];
  sub_190CA83EC();

  return (id)swift_willThrow();
}

id _AppExtensionIdentity.showsInExtensionsManager.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_showsInExtensionsManager);
}

id _AppExtensionIdentity.isSystemComponent.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isSystemComponent);
}

id _AppExtensionIdentity.canDisable.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_canDisable);
}

id _AppExtensionIdentity.spotlightIndexable.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_spotlightIndexable);
}

uint64_t _AppExtensionIdentity.spotlightImporterIdentifiers.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_spotlightImporterIdentifiers);
  v2 = sub_190CA86BC();

  return v2;
}

uint64_t _s19ExtensionFoundation03AppA8IdentityV4hash4intoys6HasherVz_tF_0()
{
  id *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_190CA84E8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*v0, sel_uniqueIdentifier);
  sub_190CA84B8();

  sub_190C3A458(&qword_1EE20ABB0, v2, MEMORY[0x1E0CB09C8]);
  sub_190CA85B4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t _s19ExtensionFoundation03AppA8IdentityV2eeoiySbAC_ACtFZ_0(id *a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v4 = sub_190CA84E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  v11 = *a2;
  v12 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_190CA84B8();

  v13 = objc_msgSend(v11, sel_uniqueIdentifier);
  sub_190CA84B8();

  LOBYTE(v13) = sub_190CA84AC();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v10, v4);
  return v13 & 1;
}

uint64_t _s19ExtensionFoundation03AppA8IdentityV9hashValueSivg_0()
{
  void **v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v9;

  v1 = sub_190CA84E8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_190CA8C50();
  v7 = objc_msgSend(v6, sel_uniqueIdentifier);
  sub_190CA84B8();

  sub_190C3A458(&qword_1EE20ABB0, v2, MEMORY[0x1E0CB09C8]);
  sub_190CA85B4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_190CA8C80();
}

uint64_t sub_190C9C6D4()
{
  void **v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v9;

  v1 = sub_190CA84E8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_190CA8C50();
  v7 = objc_msgSend(v6, sel_uniqueIdentifier);
  sub_190CA84B8();

  sub_190C3A458(&qword_1EE20ABB0, v2, MEMORY[0x1E0CB09C8]);
  sub_190CA85B4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_190CA8C80();
}

void sub_190C9C7C4()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_uniqueIdentifier);
  sub_190CA84B8();

}

uint64_t _s19ExtensionFoundation03AppA8IdentityV5innerACyXl_tcfC_0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  objc_opt_self();
  result = swift_dynamicCastObjCClassUnconditional();
  *a1 = result;
  return result;
}

unint64_t sub_190C9C85C()
{
  unint64_t result;

  result = qword_1ECD98AF8;
  if (!qword_1ECD98AF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECD98AF8);
  }
  return result;
}

id sub_190C9C898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_190CA85D8();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithIdentifier_platform_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_190CA83EC();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_190C9C970(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_190C30058(v6, v7, a3);
  v8 = *a1 + 8;
  sub_190CA88F0();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_190C9C9E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_190C9CA74(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_190C9CCC4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_190C9CCC4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_190C9CA74(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_190C9CBE8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_190CA89E0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_190CA8AD0();
      __break(1u);
LABEL_10:
      v2 = sub_190CA8650();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_190CA8B30();
    __break(1u);
LABEL_14:
    result = sub_190CA8AD0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_190C9CBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C408);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_190C9CC4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_190CA8680();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1940174D4](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_190C9CCC4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C408);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_190CA8B30();
  __break(1u);
  return result;
}

void sub_190C9CE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  void *v34;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_190CA8938();
    sub_190C9C85C();
    sub_190C3A458(&qword_1EE20C3F0, (uint64_t (*)(uint64_t))sub_190C9C85C, MEMORY[0x1E0DEFCF8]);
    sub_190CA8788();
    v3 = v29;
    v26 = v30;
    v4 = v31;
    v5 = v32;
    v6 = v33;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v24 = v4;
  v25 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_190CA895C())
      goto LABEL_37;
    sub_190C9C85C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v34;
    swift_unknownObjectRelease();
    v12 = v6;
    if (!v34)
      goto LABEL_37;
LABEL_33:
    v19 = objc_msgSend(v14, sel_bundleIdentifier, v24);
    if (v19)
    {
      v20 = v19;
      v21 = sub_190CA85F0();
      v23 = v22;

      if (v21 == a2 && v23 == a3)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        sub_190C6D7B0();
        return;
      }
      v11 = sub_190CA8BCC();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_37;
    }

    v6 = v12;
  }
  if (v6)
  {
    v12 = (v6 - 1) & v6;
    v13 = __clz(__rbit64(v6)) | (v5 << 6);
LABEL_32:
    v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
    if (!v14)
      goto LABEL_37;
    goto LABEL_33;
  }
  v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v25)
      goto LABEL_37;
    v16 = v5;
    v17 = *(_QWORD *)(v26 + 8 * v15);
    ++v5;
    if (!v17)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v25)
        goto LABEL_37;
      v17 = *(_QWORD *)(v26 + 8 * v5);
      if (!v17)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v25)
          goto LABEL_37;
        v17 = *(_QWORD *)(v26 + 8 * v5);
        if (!v17)
        {
          v5 = v15 + 3;
          if (v15 + 3 >= v25)
            goto LABEL_37;
          v17 = *(_QWORD *)(v26 + 8 * v5);
          if (!v17)
          {
            v5 = v15 + 4;
            if (v15 + 4 >= v25)
              goto LABEL_37;
            v17 = *(_QWORD *)(v26 + 8 * v5);
            if (!v17)
            {
              v18 = v16 + 6;
              while (v25 != v18)
              {
                v17 = *(_QWORD *)(v26 + 8 * v18++);
                if (v17)
                {
                  v5 = v18 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_31:
    v12 = (v17 - 1) & v17;
    v13 = __clz(__rbit64(v17)) + (v5 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

unint64_t sub_190C9D16C()
{
  unint64_t result;

  result = qword_1EE20C3F8;
  if (!qword_1EE20C3F8)
  {
    result = MEMORY[0x1940187DC](&protocol conformance descriptor for AppExtensionIdentity, &type metadata for AppExtensionIdentity);
    atomic_store(result, (unint64_t *)&qword_1EE20C3F8);
  }
  return result;
}

unint64_t sub_190C9D1B4()
{
  unint64_t result;

  result = qword_1EE20C400;
  if (!qword_1EE20C400)
  {
    result = MEMORY[0x1940187DC](&protocol conformance descriptor for _AppExtensionIdentity, &type metadata for _AppExtensionIdentity);
    atomic_store(result, (unint64_t *)&qword_1EE20C400);
  }
  return result;
}

uint64_t sub_190C9D1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

id AppExtensionProcess.Configuration.appExtension.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t AppExtensionProcess.Configuration._instanceIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppExtensionProcess.Configuration(0);
  return sub_190C39AA0(v1 + *(int *)(v3 + 24), a1, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
}

uint64_t AppExtensionProcess._InstanceIdentifier.effectiveID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190C3CB84(v1, a1, (uint64_t *)&unk_1ECD98DB0);
}

uint64_t AppExtensionProcess.Configuration._requireInvalidation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 28));
}

uint64_t AppExtensionProcess.Configuration._assertionAttributes.getter()
{
  type metadata accessor for AppExtensionProcess.Configuration(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_190C9D2C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  swift_willThrow();
  sub_190C2BA04(v2, type metadata accessor for AppExtensionProcess.Configuration);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppExtensionProcess.init(configuration:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_190C9E63C(a1, type metadata accessor for AppExtensionProcess.Configuration, (uint64_t (*)(char *))sub_190C39BF8, a2);
}

NSXPCConnection __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppExtensionProcess.makeXPCConnection()()
{
  return (NSXPCConnection)sub_190C2D808((SEL *)&selRef_makeXPCConnectionWithError_);
}

uint64_t (*AppExtensionProcess.Configuration.appExtensionIdentity.modify())()
{
  return nullsub_1;
}

uint64_t AppExtensionProcess.Configuration.onInterruption.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_retain();
  return v1;
}

uint64_t AppExtensionProcess.Configuration.onInterruption.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*AppExtensionProcess.Configuration.onInterruption.modify())()
{
  return nullsub_1;
}

id AppExtensionProcess._valid.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isValid);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppExtensionProcess.terminate()()
{
  void **v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v2 = objc_allocWithZone(MEMORY[0x1E0D87E00]);
  v3 = (void *)sub_190CA85D8();
  v4 = objc_msgSend(v2, sel_initWithExplanation_, v3);

  objc_msgSend(v4, sel_setReportType_, 0);
  objc_msgSend(v4, sel_setMaximumTerminationResistance_, 20);
  v5 = objc_msgSend(v1, sel_processPredicate);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87E08]), sel_initWithPredicate_context_, v5, v4);

  v12[0] = 0;
  if ((objc_msgSend(v6, sel_execute_, v12) & 1) != 0)
  {
    v7 = v12[0];

  }
  else
  {
    v8 = v12[0];
    v9 = (void *)sub_190CA83EC();

    swift_willThrow();
    v10 = (void *)objc_opt_self();
    v11 = (void *)sub_190CA83E0();
    objc_msgSend(v10, sel__EX_errorWithCode_underlyingError_, 18, v11);

    swift_willThrow();
  }
}

uint64_t sub_190C9D63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C39AA0(a1, (uint64_t)v6, v7);
  v8 = type metadata accessor for AppExtensionProcess.Configuration(0);
  return sub_190C29FF4((uint64_t)v6, a2 + *(int *)(v8 + 24));
}

void (*AppExtensionProcess.Configuration._instanceIdentifier.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;
  uint64_t v5;

  *(_QWORD *)a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for AppExtensionProcess._InstanceIdentifier(0) - 8) + 64);
  *(_QWORD *)(a1 + 8) = malloc(v3);
  v4 = malloc(v3);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 24);
  *(_DWORD *)(a1 + 24) = v5;
  sub_190C39AA0(v1 + v5, (uint64_t)v4, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  return sub_190C9D750;
}

void sub_190C9D750(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)a1 + *(int *)(a1 + 24);
  if ((a2 & 1) != 0)
  {
    sub_190C39AA0(*(_QWORD *)(a1 + 16), (uint64_t)v2, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
    sub_190C29FF4((uint64_t)v2, v4);
    sub_190C2BA04((uint64_t)v3, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  }
  else
  {
    sub_190C29FF4(*(_QWORD *)(a1 + 16), v4);
  }
  free(v3);
  free(v2);
}

uint64_t (*AppExtensionProcess.Configuration._requireInvalidation.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v3;
  return sub_190C9D814;
}

uint64_t sub_190C9D814(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(int *)(result + 8)) = *(_BYTE *)(result + 12);
  return result;
}

uint64_t sub_190C9D828(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 32);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t AppExtensionProcess.Configuration._assertionAttributes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AppExtensionProcess.Configuration._assertionAttributes.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  *(_QWORD *)a1 = *(_QWORD *)(v1 + v3);
  swift_bridgeObjectRetain();
  return sub_190C9D8FC;
}

uint64_t sub_190C9D8FC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = *((int *)a1 + 4);
  v3 = *a1;
  v4 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + v2) = v3;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + v2) = v3;
  }
  return result;
}

uint64_t static AppExtensionProcess._InstanceIdentifier.defaultInstanceIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190C9D9FC(&qword_1EE20B858, (uint64_t)qword_1EE20C410, a1);
}

uint64_t sub_190C9D97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  __swift_allocate_value_buffer(v0, qword_1EE20AC88);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE20AC88);
  v2 = sub_190CA84E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static AppExtensionProcess._InstanceIdentifier.nilInstanceIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190C9D9FC(&qword_1EE20ACA0, (uint64_t)qword_1EE20AC88, a1);
}

uint64_t sub_190C9D9FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_190C39AA0(v6, a3, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
}

uint64_t AppExtensionProcess._InstanceIdentifier.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C3CB84(v2, (uint64_t)v6, (uint64_t *)&unk_1ECD98DB0);
  v7 = sub_190CA84E8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  if (qword_1EE20B848 != -1)
    swift_once();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, qword_1EE20C070 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v7);
  return sub_190C38990((uint64_t)v6, (uint64_t *)&unk_1ECD98DB0);
}

uint64_t AppExtensionProcess._InstanceIdentifier.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_190CA84E8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C3CB84(v0, (uint64_t)v7, (uint64_t *)&unk_1ECD98DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_190CA8C68();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_190CA8C68();
  sub_190C3A458(&qword_1EE20ABB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_190CA85B4();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t AppExtensionProcess._InstanceIdentifier.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_190CA84E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190CA8C50();
  sub_190C3CB84(v1, (uint64_t)v8, (uint64_t *)&unk_1ECD98DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_190CA8C68();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_190CA8C68();
    sub_190C3A458(&qword_1EE20ABB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    sub_190CA85B4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_190CA8C80();
}

uint64_t sub_190C9DE1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C3CB84(v2, (uint64_t)v6, (uint64_t *)&unk_1ECD98DB0);
  v7 = sub_190CA84E8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  if (qword_1EE20B848 != -1)
    swift_once();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, qword_1EE20C070 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v7);
  return sub_190C38990((uint64_t)v6, (uint64_t *)&unk_1ECD98DB0);
}

uint64_t sub_190C9DF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_190CA84E8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190C3CB84(v0, (uint64_t)v7, (uint64_t *)&unk_1ECD98DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_190CA8C68();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_190CA8C68();
  sub_190C3A458(&qword_1EE20ABB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_190CA85B4();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_190C9E080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_190CA84E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190CA8C50();
  sub_190C3CB84(v1, (uint64_t)v8, (uint64_t *)&unk_1ECD98DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_190CA8C68();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_190CA8C68();
    sub_190C3A458(&qword_1EE20ABB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    sub_190CA85B4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_190CA8C80();
}

id AppExtensionProcess.inner.getter()
{
  id *v0;

  return *v0;
}

void AppExtensionProcess.Configuration.appExtension.setter(void **a1)
{
  id *v1;
  void *v2;

  v2 = *a1;

  *v1 = v2;
}

void (*AppExtensionProcess.Configuration.appExtension.modify(void **a1))(uint64_t a1, char a2)
{
  void **v1;
  void *v2;
  id v3;

  v2 = *v1;
  *a1 = *v1;
  a1[1] = v1;
  v3 = v2;
  return sub_190C9E250;
}

void sub_190C9E250(uint64_t a1, char a2)
{
  void **v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)a1;
  v2 = *(void ***)(a1 + 8);
  v4 = *v2;
  if ((a2 & 1) != 0)
  {
    v5 = v3;

    *v2 = v5;
  }
  else
  {

    *v2 = v3;
  }
}

void __swiftcall _AppExtensionProcess.init(appExtensionProcess:)(ExtensionFoundation::_AppExtensionProcess *__return_ptr retstr, ExtensionFoundation::AppExtensionProcess *appExtensionProcess)
{
  retstr->internalExtensionProcess.super.isa = appExtensionProcess->internalExtensionProcess.super.isa;
}

uint64_t _AppExtensionProcess.init(configuration:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[16] = a1;
  v2[17] = a2;
  type metadata accessor for _AppExtensionProcess.Configuration(0);
  v2[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190C9E318()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v9;

  v1 = v0[17];
  v2 = v0[18];
  type metadata accessor for _EXHostConfiguration();
  sub_190C39AA0(v1, v2, type metadata accessor for _AppExtensionProcess.Configuration);
  v3 = (void *)sub_190C2BE44(v2);
  v0[19] = v3;
  sub_190C2B30C(0, &qword_1EE20AE18);
  if (objc_msgSend(v3, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    v4 = (void *)objc_opt_self();
    objc_opt_self();
    v5 = swift_dynamicCastObjCClassUnconditional();
    v0[7] = v0 + 15;
    v0[2] = v0;
    v0[3] = sub_190C9E4C0;
    v6 = swift_continuation_init();
    v0[10] = MEMORY[0x1E0C809B0];
    v7 = v0 + 10;
    v7[1] = 0x40000000;
    v7[2] = sub_190C35B34;
    v7[3] = &block_descriptor_2;
    v7[4] = v6;
    objc_msgSend(v4, sel_extensionProcessWithConfiguration_completionHandler_, v5, v7);
    return swift_continuation_await();
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();

    return swift_unexpectedError();
  }
}

uint64_t sub_190C9E4C0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_190C9E520()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD **)(v0 + 128);
  sub_190C2BA04(*(_QWORD *)(v0 + 136), type metadata accessor for _AppExtensionProcess.Configuration);
  v3 = *(_QWORD *)(v0 + 120);

  *v2 = v3;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190C9E57C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  swift_willThrow();
  sub_190C2BA04(v2, type metadata accessor for _AppExtensionProcess.Configuration);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _AppExtensionProcess.init(configuration:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_190C9E63C(a1, type metadata accessor for _AppExtensionProcess.Configuration, (uint64_t (*)(char *))sub_190C2BE44, a2);
}

uint64_t sub_190C9E63C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(char *)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t result;
  id v18;
  id v19[2];

  v19[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = a2(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - v9;
  type metadata accessor for _EXHostConfiguration();
  sub_190C39AA0(a1, (uint64_t)v10, a2);
  v11 = (void *)a3(v10);
  sub_190C2B30C(0, &qword_1EE20AE18);
  if (objc_msgSend(v11, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    objc_opt_self();
    v12 = swift_dynamicCastObjCClassUnconditional();
    v13 = (void *)objc_opt_self();
    v19[0] = 0;
    v14 = objc_msgSend(v13, sel_extensionProcessWithConfiguration_error_, v12, v19);
    if (v14)
    {
      v15 = v14;
      v16 = v19[0];

      result = sub_190C2BA04(a1, a2);
      *a4 = v15;
    }
    else
    {
      v18 = v19[0];
      sub_190CA83EC();

      swift_willThrow();
      return sub_190C2BA04(a1, a2);
    }
  }
  else
  {
    objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
    swift_willThrow();

    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t _AppExtensionProcess.init(inner:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  objc_opt_self();
  result = swift_dynamicCastObjCClassUnconditional();
  *a1 = result;
  return result;
}

uint64_t sub_190C9E890(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v9 = *a1;
  v8 = a1[1];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = a6;
  *(_QWORD *)(a2 + 16) = v10;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.onInterruption.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.instanceIdentifier.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  id v6;
  uint64_t result;
  id v8;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
LABEL_7:
    v6 = v1;
    return v2;
  }
  if (qword_1EE20B848 != -1)
    swift_once();
  v3 = (void *)qword_1EE20C070;
  sub_190C2B30C(0, &qword_1EE20AC18);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = v3;
  if (objc_msgSend(v5, sel_isKindOfClass_, ObjCClassFromMetadata))
  {
    objc_opt_self();
    v2 = swift_dynamicCastObjCClassUnconditional();
    v1 = 0;
    goto LABEL_7;
  }
  v8 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();

  result = swift_unexpectedError();
  __break(1u);
  return result;
}

void (*_AppExtensionProcess.Configuration.instanceIdentifier.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  id v8;
  void (*result)(uint64_t, char);
  id v10;

  a1[1] = v1;
  v3 = *(void **)(v1 + 24);
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 24);
LABEL_7:
    *a1 = v4;
    v8 = v3;
    return sub_190C9EB68;
  }
  if (qword_1EE20B848 != -1)
    swift_once();
  v5 = (void *)qword_1EE20C070;
  sub_190C2B30C(0, &qword_1EE20AC18);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = v5;
  if ((objc_msgSend(v7, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) != 0)
  {
    objc_opt_self();
    v4 = swift_dynamicCastObjCClassUnconditional();
    v3 = 0;
    goto LABEL_7;
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel__EX_parameterError);
  swift_willThrow();

  result = (void (*)(uint64_t, char))swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_190C9EB68(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(v2 + 24);
  if ((a2 & 1) != 0)
  {
    v5 = v3;

    *(_QWORD *)(v2 + 24) = v3;
  }
  else
  {

    *(_QWORD *)(v2 + 24) = v3;
  }
}

uint64_t _AppExtensionProcess.Configuration.preferredLanguages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*_AppExtensionProcess.Configuration.preferredLanguages.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.additionalEnvironmentVariables.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*_AppExtensionProcess.Configuration.additionalEnvironmentVariables.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.sandboxProfileName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*_AppExtensionProcess.Configuration.sandboxProfileName.modify())()
{
  return nullsub_1;
}

void *_AppExtensionProcess.Configuration.launchPersona.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void _AppExtensionProcess.Configuration.launchPersona.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
}

uint64_t (*_AppExtensionProcess.Configuration.launchPersona.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.assertionAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _AppExtensionProcess.Configuration.assertionAttributes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.assertionAttributes.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.requireInvalidation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t _AppExtensionProcess.Configuration.requireInvalidation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.requireInvalidation.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.networkApplicationID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for _AppExtensionProcess.Configuration(0);
  return sub_190C3CB84(v1 + *(int *)(v3 + 52), a1, &qword_1ECD98D60);
}

uint64_t _AppExtensionProcess.Configuration.networkApplicationID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for _AppExtensionProcess.Configuration(0) + 52);
  return sub_190C683B0(a1, v3);
}

uint64_t (*_AppExtensionProcess.Configuration.networkApplicationID.modify())()
{
  type metadata accessor for _AppExtensionProcess.Configuration(0);
  return nullsub_1;
}

BOOL _s19ExtensionFoundation03AppA7ProcessV19_InstanceIdentifierV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;

  v4 = sub_190CA84E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20C440);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v25 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v25 - v17;
  sub_190C3CB84(a1, (uint64_t)&v25 - v17, (uint64_t *)&unk_1ECD98DB0);
  sub_190C3CB84(a2, (uint64_t)v16, (uint64_t *)&unk_1ECD98DB0);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_190C3CB84((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_1ECD98DB0);
  sub_190C3CB84((uint64_t)v16, v19, (uint64_t *)&unk_1ECD98DB0);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_190C38990((uint64_t)v16, (uint64_t *)&unk_1ECD98DB0);
    sub_190C38990((uint64_t)v18, (uint64_t *)&unk_1ECD98DB0);
    if (v20(v19, 1, v4) == 1)
    {
      sub_190C38990((uint64_t)v9, (uint64_t *)&unk_1ECD98DB0);
      return 1;
    }
    goto LABEL_6;
  }
  sub_190C3CB84((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_1ECD98DB0);
  if (v20(v19, 1, v4) == 1)
  {
    sub_190C38990((uint64_t)v16, (uint64_t *)&unk_1ECD98DB0);
    sub_190C38990((uint64_t)v18, (uint64_t *)&unk_1ECD98DB0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_6:
    sub_190C38990((uint64_t)v9, &qword_1EE20C440);
    return 0;
  }
  v21 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v26, v19, v4);
  sub_190C3A458(&qword_1EE20ABB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v22 = sub_190CA85CC();
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v21, v4);
  sub_190C38990((uint64_t)v16, (uint64_t *)&unk_1ECD98DB0);
  sub_190C38990((uint64_t)v18, (uint64_t *)&unk_1ECD98DB0);
  v23(v13, v4);
  sub_190C38990((uint64_t)v9, (uint64_t *)&unk_1ECD98DB0);
  return (v22 & 1) != 0;
}

uint64_t sub_190C9F080()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190C9F0A4()
{
  return sub_190C3A458(&qword_1EE20C438, type metadata accessor for AppExtensionProcess._InstanceIdentifier, (uint64_t)&protocol conformance descriptor for AppExtensionProcess._InstanceIdentifier);
}

uint64_t sub_190C9F0D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, (uint64_t)sub_190CA05E0, a2);
}

uint64_t sub_190C9F0E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190C9E890(a1, a2, a3, a4, (uint64_t)&unk_1E2CFEBE8, (uint64_t)sub_190CA05E0);
}

uint64_t sub_190C9F108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for AppExtensionProcess.Configuration(0);
  return sub_190C39AA0(a1 + *(int *)(v4 + 24), a2, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
}

uint64_t sub_190C9F14C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = type metadata accessor for AppExtensionProcess.Configuration(0);
  *a2 = *(_BYTE *)(a1 + *(int *)(result + 28));
  return result;
}

uint64_t sub_190C9F180(char *a1, uint64_t a2)
{
  char v3;
  uint64_t result;

  v3 = *a1;
  result = type metadata accessor for AppExtensionProcess.Configuration(0);
  *(_BYTE *)(a2 + *(int *)(result + 28)) = v3;
  return result;
}

uint64_t sub_190C9F1B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 32));
  return swift_bridgeObjectRetain();
}

id sub_190C9F1E8@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

void sub_190C9F1F4(id *a1, id *location)
{
  objc_storeStrong(location, *a1);
}

uint64_t sub_190C9F204@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, (uint64_t)sub_190C45C00, a2);
}

uint64_t keypath_getTm@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  *a3 = a2;
  a3[1] = v7;
  return swift_retain();
}

uint64_t sub_190C9F260(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190C9E890(a1, a2, a3, a4, (uint64_t)&unk_1E2CFEB98, (uint64_t)sub_190C45C00);
}

uint64_t sub_190C9F284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _AppExtensionProcess.Configuration.instanceIdentifier.getter();
  *a1 = result;
  return result;
}

void sub_190C9F2AC(id *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *(void **)(a2 + 24);
  v5 = *a1;

  *(_QWORD *)(a2 + 24) = v3;
}

char *initializeBufferWithCopyOfBuffer for AppExtensionProcess.Configuration(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_190CA84E8();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    swift_retain();
    if (v14(v11, 1, v12))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[8];
    v7[a3[7]] = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)&v7[v17] = *(char **)((char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t assignWithCopy for AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v9;
  swift_retain();
  swift_release();
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_190CA84E8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_190CA84E8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_190CA84E8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppExtensionProcess.Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9F7B0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AppExtensionProcess.Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_190C9F838(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AppExtensionProcess._InstanceIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_190CA84E8();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for AppExtensionProcess._InstanceIdentifier(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_190CA84E8();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for AppExtensionProcess._InstanceIdentifier(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190CA84E8();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for AppExtensionProcess._InstanceIdentifier(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_190CA84E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for AppExtensionProcess._InstanceIdentifier(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190CA84E8();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for AppExtensionProcess._InstanceIdentifier(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_190CA84E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppExtensionProcess._InstanceIdentifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9FD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AppExtensionProcess._InstanceIdentifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190C9FD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

char *initializeBufferWithCopyOfBuffer for _AppExtensionProcess.Configuration(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  char *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v6;
    v7 = a2[3];
    v8 = a2[4];
    *((_QWORD *)a1 + 3) = v7;
    *((_QWORD *)a1 + 4) = v8;
    v9 = a2[6];
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v9;
    v10 = a2[8];
    *((_QWORD *)a1 + 7) = a2[7];
    *((_QWORD *)a1 + 8) = v10;
    *((_QWORD *)a1 + 9) = a2[9];
    v11 = *(int *)(a3 + 52);
    v12 = (char *)a2 + v11;
    __dst = &a1[v11];
    a1[80] = *((_BYTE *)a2 + 80);
    v13 = sub_190CA8548();
    v19 = *(_QWORD *)(v13 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v14 = v4;
    swift_retain();
    v15 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v10;
    swift_bridgeObjectRetain();
    if (v20(v12, 1, v13))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v13);
    }
  }
  return v5;
}

uint64_t assignWithCopy for _AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v9;
  swift_retain();
  swift_release();
  v10 = *(void **)(a1 + 24);
  v11 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  v12 = v11;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(void **)(a1 + 64);
  v14 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v14;
  v15 = v14;

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v16 = *(int *)(a3 + 52);
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_190CA8548();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t initializeWithTake for _AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  v5 = *(int *)(a3 + 52);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = sub_190CA8548();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for _AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v10 = *(int *)(a3 + 52);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_190CA8548();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppExtensionProcess.Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190CA037C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 52)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for _AppExtensionProcess.Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_190CA0408(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD98D60);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 52)], a2, a2, v7);
  }
  return result;
}

void sub_190CA0480()
{
  unint64_t v0;

  sub_190CA0548(319, (unint64_t *)&qword_1ECD98D68, (void (*)(uint64_t))MEMORY[0x1E0CCE820]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_190CA0548(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_190CA88D8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_190CA0594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD98DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190CA060C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v5;
  void *v7;
  id v8;
  unsigned __int8 v9;
  _QWORD v10[9];

  v10[8] = *MEMORY[0x1E0C80C00];
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  v4 = (void *)sub_190CA85D8();
  sub_190CA0798();
  swift_getObjCClassFromMetadata();
  v5 = _EXAuditTokenGetEntitlementValue((uint64_t)v10, v4);

  sub_190CA8908();
  swift_unknownObjectRelease();
  if (swift_dynamicCast() && (v9 & 1) != 0)
    return 1;
  v7 = (void *)sub_190CA85D8();
  v8 = _EXAuditTokenGetEntitlementValue((uint64_t)v10, v7);

  sub_190CA8908();
  swift_unknownObjectRelease();
  return swift_dynamicCast() & v9;
}

unint64_t sub_190CA0798()
{
  unint64_t result;

  result = qword_1ECD98C08;
  if (!qword_1ECD98C08)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECD98C08);
  }
  return result;
}

unint64_t sub_190CA07D4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  audit_token_t v13;
  unint64_t v14;
  unint64_t v15;

  v4 = a4;
  v5 = a3;
  v6 = a2;
  v7 = a1;
  v8 = HIDWORD(a1);
  v9 = HIDWORD(a2);
  v10 = HIDWORD(a3);
  v11 = HIDWORD(a4);
  sub_190CA89D4();
  swift_bridgeObjectRelease();
  v14 = 0xD000000000000011;
  v15 = 0x8000000190CB6CC0;
  v13.val[0] = v7;
  v13.val[1] = v8;
  v13.val[2] = v6;
  v13.val[3] = v9;
  v13.val[4] = v5;
  v13.val[5] = v10;
  v13.val[6] = v4;
  v13.val[7] = v11;
  v13.val[0] = audit_token_to_pid(&v13);
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  sub_190CA8644();
  v13.val[0] = v7;
  v13.val[1] = v8;
  v13.val[2] = v6;
  v13.val[3] = v9;
  v13.val[4] = v5;
  v13.val[5] = v10;
  v13.val[6] = v4;
  v13.val[7] = v11;
  v13.val[0] = audit_token_to_pidversion(&v13);
  sub_190CA8BB4();
  sub_190CA8644();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_190CA0920()
{
  unsigned int *v0;
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  audit_token_t atoken;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  v8 = v0[7];
  sub_190CA8C50();
  atoken.val[0] = v1;
  atoken.val[1] = v2;
  atoken.val[2] = v3;
  atoken.val[3] = v4;
  atoken.val[4] = v5;
  atoken.val[5] = v6;
  atoken.val[6] = v7;
  atoken.val[7] = v8;
  audit_token_to_pid(&atoken);
  sub_190CA8C74();
  atoken.val[0] = v1;
  atoken.val[1] = v2;
  atoken.val[2] = v3;
  atoken.val[3] = v4;
  atoken.val[4] = v5;
  atoken.val[5] = v6;
  atoken.val[6] = v7;
  atoken.val[7] = v8;
  audit_token_to_pidversion(&atoken);
  sub_190CA8C74();
  return sub_190CA8C80();
}

uint64_t sub_190CA09C4()
{
  unsigned int *v0;
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  audit_token_t v10;

  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  v8 = v0[7];
  v10.val[0] = *v0;
  v1 = v10.val[0];
  v10.val[1] = v2;
  v10.val[2] = v3;
  v10.val[3] = v4;
  v10.val[4] = v5;
  v10.val[5] = v6;
  v10.val[6] = v7;
  v10.val[7] = v8;
  audit_token_to_pid(&v10);
  sub_190CA8C74();
  v10.val[0] = v1;
  v10.val[1] = v2;
  v10.val[2] = v3;
  v10.val[3] = v4;
  v10.val[4] = v5;
  v10.val[5] = v6;
  v10.val[6] = v7;
  v10.val[7] = v8;
  audit_token_to_pidversion(&v10);
  return sub_190CA8C74();
}

uint64_t sub_190CA0A54()
{
  unsigned int *v0;
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  audit_token_t atoken;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  v8 = v0[7];
  sub_190CA8C50();
  atoken.val[0] = v1;
  atoken.val[1] = v2;
  atoken.val[2] = v3;
  atoken.val[3] = v4;
  atoken.val[4] = v5;
  atoken.val[5] = v6;
  atoken.val[6] = v7;
  atoken.val[7] = v8;
  audit_token_to_pid(&atoken);
  sub_190CA8C74();
  atoken.val[0] = v1;
  atoken.val[1] = v2;
  atoken.val[2] = v3;
  atoken.val[3] = v4;
  atoken.val[4] = v5;
  atoken.val[5] = v6;
  atoken.val[6] = v7;
  atoken.val[7] = v8;
  audit_token_to_pidversion(&atoken);
  sub_190CA8C74();
  return sub_190CA8C80();
}

BOOL sub_190CA0AF4(unsigned int *a1, unsigned int *a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  pid_t v18;
  int v19;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  audit_token_t atoken;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v11 = *a2;
  v10 = a2[1];
  v12 = a2[2];
  v13 = a2[3];
  v14 = a2[4];
  v15 = a2[5];
  v16 = a2[6];
  v17 = a2[7];
  atoken.val[0] = *a1;
  atoken.val[1] = v2;
  v26 = v4;
  v27 = v2;
  atoken.val[2] = v4;
  atoken.val[3] = v5;
  v24 = v6;
  v25 = v5;
  atoken.val[4] = v6;
  atoken.val[5] = v7;
  v22 = v8;
  v23 = v7;
  atoken.val[6] = v8;
  atoken.val[7] = v9;
  v21 = v9;
  v18 = audit_token_to_pid(&atoken);
  atoken.val[0] = v11;
  atoken.val[1] = v10;
  atoken.val[2] = v12;
  atoken.val[3] = v13;
  atoken.val[4] = v14;
  atoken.val[5] = v15;
  atoken.val[6] = v16;
  atoken.val[7] = v17;
  if (v18 != audit_token_to_pid(&atoken))
    return 0;
  atoken.val[0] = v3;
  atoken.val[1] = v27;
  atoken.val[2] = v26;
  atoken.val[3] = v25;
  atoken.val[4] = v24;
  atoken.val[5] = v23;
  atoken.val[6] = v22;
  atoken.val[7] = v21;
  v19 = audit_token_to_pidversion(&atoken);
  atoken.val[0] = v11;
  atoken.val[1] = v10;
  atoken.val[2] = v12;
  atoken.val[3] = v13;
  atoken.val[4] = v14;
  atoken.val[5] = v15;
  atoken.val[6] = v16;
  atoken.val[7] = v17;
  return v19 == audit_token_to_pidversion(&atoken);
}

unint64_t sub_190CA0C08()
{
  unint64_t *v0;

  return sub_190CA07D4(*v0, v0[1], v0[2], v0[3]);
}

ValueMetadata *type metadata accessor for AuditToken()
{
  return &type metadata for AuditToken;
}

unint64_t sub_190CA0C28()
{
  unint64_t result;

  result = qword_1EE20A328;
  if (!qword_1EE20A328)
  {
    result = MEMORY[0x1940187DC](&unk_190CAF388, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_1EE20A328);
  }
  return result;
}

Swift::Bool __swiftcall _Scene.shouldAccept(connection:)(NSXPCConnection connection)
{
  return 0;
}

Swift::Bool __swiftcall _EmptyScene.shouldAccept(connection:)(NSXPCConnection connection)
{
  return 0;
}

uint64_t static _SceneBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t dispatch thunk of _Scene.shouldAccept(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for _EmptyScene()
{
  return &type metadata for _EmptyScene;
}

ValueMetadata *type metadata accessor for _SceneBuilder()
{
  return &type metadata for _SceneBuilder;
}

id static Defaults.preferInProcessDiscovery.getter()
{
  return sub_190CA0F04((SEL *)&selRef_preferInProcessDiscovery);
}

id static Defaults.queryAllowsDuplicates.getter()
{
  return sub_190CA0F04((SEL *)&selRef_queryAllowsDuplicates);
}

id static Defaults.startUIHostingSessionImmediately.getter()
{
  return sub_190CA0F04((SEL *)&selRef_startUIHostingSessionImmediately);
}

uint64_t static Defaults.alwaysEnabledExtensionBundleIdentifiers.getter()
{
  return sub_190CA0F64((SEL *)&selRef_alwaysEnabledExtensionBundleIdentifiers);
}

uint64_t sub_190CA0CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE20ACB8);
    v2 = sub_190CA89C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  v4 = a1 + 56;
  v3 = *(_QWORD *)(a1 + 56);
  v20 = v2;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & v3;
  v8 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_9;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v8)
      goto LABEL_27;
    v14 = *(_QWORD *)(v4 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v8)
        goto LABEL_27;
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v8)
          goto LABEL_27;
        v14 = *(_QWORD *)(v4 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 4;
          if (v10 + 4 >= v8)
            goto LABEL_27;
          v14 = *(_QWORD *)(v4 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_26:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v10 = v15;
LABEL_9:
    sub_190C7E814(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)&v19);
    swift_dynamicCast();
    result = sub_190CA17DC(v17, v18);
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v8)
  {
LABEL_27:
    sub_190C6D7B0();
    return v20;
  }
  v14 = *(_QWORD *)(v4 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v8)
      goto LABEL_27;
    v14 = *(_QWORD *)(v4 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_26;
  }
LABEL_29:
  __break(1u);
  return result;
}

id static Defaults.enforceXPCCacheCodeSigning.getter()
{
  return sub_190CA0F04((SEL *)&selRef_enforceXPCCacheCodeSigning);
}

id static Defaults.forceSandbox.getter()
{
  return sub_190CA0F04((SEL *)&selRef_forceSandbox);
}

id sub_190CA0F04(SEL *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, *a1);

  return v3;
}

uint64_t static Defaults.allowedUnsandboxedExtensionPoints.getter()
{
  return sub_190CA0F64((SEL *)&selRef_allowedUnsandboxedExtensionPoints);
}

uint64_t sub_190CA0F64(SEL *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, *a1);

  v4 = sub_190CA8764();
  v5 = sub_190CA0CF0(v4);
  swift_bridgeObjectRelease();
  return v5;
}

BOOL static ExtensionKitInternalError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ExtensionKitInternalError.hash(into:)()
{
  return sub_190CA8C5C();
}

uint64_t ExtensionKitInternalError.hashValue.getter()
{
  sub_190CA8C50();
  sub_190CA8C5C();
  return sub_190CA8C80();
}

BOOL sub_190CA1078(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t ExtensionKitInternalError.description.getter()
{
  return 0xD0000000000000D0;
}

unint64_t sub_190CA10D0()
{
  return 0xD0000000000000D0;
}

uint64_t sub_190CA1100(uint64_t a1)
{
  return sub_190CA1118(a1, &unk_1EE20C448);
}

uint64_t sub_190CA110C(uint64_t a1)
{
  return sub_190CA1118(a1, byte_1EE20C449);
}

uint64_t sub_190CA1118(uint64_t a1, _BYTE *a2)
{
  uint64_t result;

  sub_190CA87D0();
  if (qword_1EE20B818 != -1)
    swift_once();
  result = sub_190CA84F4();
  *a2 = 1;
  return result;
}

void static Defaults.checkAllowPrototypeSPI()()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  unsigned __int8 v4;
  os_log_type_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;

  if (qword_1EE20B868 != -1)
    swift_once();
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_allowPrototypeSPI);

  if ((v2 & 1) == 0)
  {
    v3 = objc_msgSend(v0, sel_sharedInstance);
    v4 = objc_msgSend(v3, sel_assertOnDisallowedPrototypeSPIUse);

    if ((v4 & 1) == 0)
    {
      v5 = sub_190CA87F4();
      if (qword_1EE20B818 != -1)
        swift_once();
      v6 = qword_1EE20BEA0;
      v7 = v5;
      if (os_log_type_enabled((os_log_t)qword_1EE20BEA0, v5))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = swift_slowAlloc();
        v11 = v9;
        *(_DWORD *)v8 = 136315138;
        sub_190C30058(0xD0000000000000D0, 0x8000000190CB6CE0, &v11);
        sub_190CA88F0();
        _os_log_impl(&dword_190C25000, v6, v7, "%s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v9, -1, -1);
        MEMORY[0x19401889C](v8, -1, -1);
      }
      sub_190CA13BC();
      swift_allocError();
      *v10 = 1;
      swift_willThrow();
    }
  }
}

unint64_t sub_190CA13BC()
{
  unint64_t result;

  result = qword_1EE20C450;
  if (!qword_1EE20C450)
  {
    result = MEMORY[0x1940187DC](&protocol conformance descriptor for ExtensionKitInternalError, &type metadata for ExtensionKitInternalError);
    atomic_store(result, (unint64_t *)&qword_1EE20C450);
  }
  return result;
}

void static Defaults.checkAllowPrototypeAPI()()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  unsigned __int8 v4;
  os_log_type_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;

  if (qword_1EE20B860 != -1)
    swift_once();
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_allowPrototypeAPI);

  if ((v2 & 1) == 0)
  {
    v3 = objc_msgSend(v0, sel_sharedInstance);
    v4 = objc_msgSend(v3, sel_assertOnDisallowedPrototypeAPIUse);

    if ((v4 & 1) == 0)
    {
      v5 = sub_190CA87F4();
      if (qword_1EE20B818 != -1)
        swift_once();
      v6 = qword_1EE20BEA0;
      v7 = v5;
      if (os_log_type_enabled((os_log_t)qword_1EE20BEA0, v5))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = swift_slowAlloc();
        v11 = v9;
        *(_DWORD *)v8 = 136315138;
        sub_190C30058(0xD0000000000000D0, 0x8000000190CB6DC0, &v11);
        sub_190CA88F0();
        _os_log_impl(&dword_190C25000, v6, v7, "%s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19401889C](v9, -1, -1);
        MEMORY[0x19401889C](v8, -1, -1);
      }
      sub_190CA13BC();
      swift_allocError();
      *v10 = 0;
      swift_willThrow();
    }
  }
}

unint64_t sub_190CA1620()
{
  unint64_t result;

  result = qword_1EE20C458;
  if (!qword_1EE20C458)
  {
    result = MEMORY[0x1940187DC](&protocol conformance descriptor for ExtensionKitInternalError, &type metadata for ExtensionKitInternalError);
    atomic_store(result, (unint64_t *)&qword_1EE20C458);
  }
  return result;
}

ValueMetadata *type metadata accessor for Defaults()
{
  return &type metadata for Defaults;
}

uint64_t getEnumTagSinglePayload for ExtensionKitInternalError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtensionKitInternalError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190CA1750 + 4 * byte_190CAF445[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190CA1784 + 4 * asc_190CAF440[v4]))();
}

uint64_t sub_190CA1784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190CA178C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190CA1794);
  return result;
}

uint64_t sub_190CA17A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190CA17A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190CA17AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190CA17B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_190CA17C0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ExtensionKitInternalError()
{
  return &type metadata for ExtensionKitInternalError;
}

uint64_t sub_190CA17DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = *v2;
  sub_190CA8C50();
  sub_190CA8638();
  result = sub_190CA8C80();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = result & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v10 = *(_QWORD *)(v5 + 48);
    v11 = (_QWORD *)(v10 + 16 * v8);
    v12 = *v11 == a1 && v11[1] == a2;
    if (v12 || (result = sub_190CA8BCC(), (result & 1) != 0))
    {
LABEL_7:
      v13 = (_QWORD *)(v10 + 16 * v8);
      result = swift_bridgeObjectRelease();
      *v13 = a1;
      v13[1] = a2;
      return result;
    }
    v14 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      v15 = (_QWORD *)(v10 + 16 * v8);
      if (*v15 != a1 || v15[1] != a2)
      {
        result = sub_190CA8BCC();
        if ((result & 1) == 0)
          continue;
      }
      goto LABEL_7;
    }
  }
  if (*(_QWORD *)(v5 + 16) >= *(_QWORD *)(v5 + 24))
  {
    __break(1u);
    goto LABEL_21;
  }
  *(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) |= 1 << v8;
  v17 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v8);
  *v17 = a1;
  v17[1] = a2;
  v18 = *(_QWORD *)(v5 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v5 + 16) = v20;
  return result;
}

void _EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent_cold_1()
{
  __assert_rtn("_EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent", "EXConcreteExtension.m", 124, "mainRunLoop != NULL");
}

void EXConcreteExtensionTearDownRequestWithIdentifier_cold_1()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_0(&dword_190C25000, v0, (uint64_t)v0, "teardown requested for request %{public}@ to extension %{public}@ but no such request was issued, or the request already completed or canceled earlier.", v1);
  OUTLINED_FUNCTION_6();
}

void __getMCProfileConnectionClass_block_invoke_cold_1()
{
  abort_report_np();
  -[NSExtensionContext(ExtensionKitAdditions) _derivedExtensionAuxiliaryHostProtocol].cold.1();
}

void _EXExtensionPredicateForActivationRule_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_13(&dword_190C25000, a2, a3, "Generating predicate from dict: %@", a5, a6, a7, a8, 2u);
  OUTLINED_FUNCTION_6();
}

void _EXExtensionPredicateForActivationRule_cold_2(uint64_t a1, NSObject *a2)
{
  void *v3;
  id v4;
  int v5;
  const char *v6;
  __int16 v7;
  int v8;
  __int16 v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_opt_class();
  v5 = 136315906;
  v6 = "([rule isKindOfClass:objc_getClass(\"NSString\")] || [rule isKindOfClass:objc_getClass(\"NSDictionary\")])";
  v7 = 2080;
  OUTLINED_FUNCTION_2();
  v8 = 904;
  v9 = 2112;
  v10 = v3;
  v4 = v3;
  _os_log_fault_impl(&dword_190C25000, a2, OS_LOG_TYPE_FAULT, "%s - %s:%d: Unable to parse rule which is not either a string or a dictionary - type: %@", (uint8_t *)&v5, 0x26u);

  OUTLINED_FUNCTION_8_1();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2[0] = 136315394;
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_4_0(&dword_190C25000, v0, v1, "%s: Unexpected NSExpression type %ld", (uint8_t *)v2);
  OUTLINED_FUNCTION_6();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_2(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_13(&dword_190C25000, a1, a3, "%s: No operand expression", a5, a6, a7, a8, 2u);
  OUTLINED_FUNCTION_6();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2[0] = 136315394;
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_4_0(&dword_190C25000, v0, v1, "%s: Operand expression not safe to execute %@", (uint8_t *)v2);
  OUTLINED_FUNCTION_6();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_4(uint64_t a1, NSObject *a2)
{
  id v3;
  int v4;
  const char *v5;
  __int16 v6;
  uint64_t v7;
  __int16 v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v4 = 136315650;
  v5 = "EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions";
  v6 = 2112;
  v7 = a1;
  v8 = 2112;
  v9 = (id)objc_opt_class();
  v3 = v9;
  _os_log_debug_impl(&dword_190C25000, a2, OS_LOG_TYPE_DEBUG, "%s: Keypath not of expected class (%@, %@)", (uint8_t *)&v4, 0x20u);

  OUTLINED_FUNCTION_8_1();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_5()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2[0] = 136315394;
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_4_0(&dword_190C25000, v0, v1, "%s: Argument expression not safe to execute %@", (uint8_t *)v2);
  OUTLINED_FUNCTION_6();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_6(void *a1, NSObject *a2)
{
  uint64_t v3;
  int v4[6];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "count");
  v4[0] = 136315394;
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_4_0(&dword_190C25000, a2, v3, "%s: Unexpected number of arguments %ld", (uint8_t *)v4);
  OUTLINED_FUNCTION_2_1();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_7(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5[6];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "objectAtIndexedSubscript:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = 136315394;
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_4_0(&dword_190C25000, a2, v4, "%s: Unsafe operand %@", (uint8_t *)v5);

  OUTLINED_FUNCTION_2_1();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_8(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5[6];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "objectAtIndexedSubscript:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = 136315394;
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_4_0(&dword_190C25000, a2, v4, "%s: Unsafe operand %@", (uint8_t *)v5);

  OUTLINED_FUNCTION_2_1();
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_10()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2[0] = 136315394;
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_4_0(&dword_190C25000, v0, v1, "%s: Unexpected selector name %@", (uint8_t *)v2);
  OUTLINED_FUNCTION_6();
}

void _EXAuditTokenHasRequiredEntitlements_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138543618;
  v4 = a1;
  v5 = 2114;
  v6 = a2;
  _os_log_error_impl(&dword_190C25000, log, OS_LOG_TYPE_ERROR, "Host is missing entitlement: %{public}@ : %{public}@", (uint8_t *)&v3, 0x16u);
}

void __getISIconClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  +[NSDictionary(ExtensionKitAdditions) _EX_dictionaryWithSignedURL:error:].cold.1(v0);
}

uint64_t sub_190CA8314()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_190CA8320()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_190CA832C()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_190CA8338()
{
  return MEMORY[0x1E0CAE0C8]();
}

uint64_t sub_190CA8344()
{
  return MEMORY[0x1E0CAE0E0]();
}

uint64_t sub_190CA8350()
{
  return MEMORY[0x1E0CAE108]();
}

uint64_t sub_190CA835C()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_190CA8368()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_190CA8374()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_190CA8380()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_190CA838C()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_190CA8398()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_190CA83A4()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_190CA83B0()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_190CA83BC()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_190CA83C8()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_190CA83D4()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_190CA83E0()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_190CA83EC()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_190CA83F8()
{
  return MEMORY[0x1E0CAFB50]();
}

uint64_t sub_190CA8404()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_190CA8410()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_190CA841C()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_190CA8428()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_190CA8434()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_190CA8440()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_190CA844C()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_190CA8458()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_190CA8464()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_190CA8470()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_190CA847C()
{
  return MEMORY[0x1E0CB0220]();
}

uint64_t sub_190CA8488()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_190CA8494()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_190CA84A0()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_190CA84AC()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_190CA84B8()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_190CA84C4()
{
  return MEMORY[0x1E0CB0968]();
}

uint64_t sub_190CA84D0()
{
  return MEMORY[0x1E0CB0980]();
}

uint64_t sub_190CA84DC()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_190CA84E8()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_190CA84F4()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_190CA8500()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_190CA850C()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_190CA8518()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_190CA8524()
{
  return MEMORY[0x1E0DF03F8]();
}

uint64_t sub_190CA8530()
{
  return MEMORY[0x1E0CCE810]();
}

uint64_t sub_190CA853C()
{
  return MEMORY[0x1E0CCE818]();
}

uint64_t sub_190CA8548()
{
  return MEMORY[0x1E0CCE820]();
}

uint64_t sub_190CA8554()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_190CA8560()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_190CA856C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_190CA8578()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_190CA8584()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_190CA8590()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_190CA859C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_190CA85A8()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_190CA85B4()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_190CA85C0()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_190CA85CC()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_190CA85D8()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_190CA85E4()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_190CA85F0()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_190CA85FC()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_190CA8608()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_190CA8614()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_190CA8620()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_190CA862C()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_190CA8638()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_190CA8644()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_190CA8650()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_190CA865C()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_190CA8668()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_190CA8674()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_190CA8680()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_190CA868C()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_190CA8698()
{
  return MEMORY[0x1E0DEA950]();
}

uint64_t sub_190CA86A4()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_190CA86B0()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_190CA86BC()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_190CA86C8()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_190CA86D4()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_190CA86E0()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_190CA86EC()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_190CA86F8()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_190CA8704()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_190CA8710()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_190CA871C()
{
  return MEMORY[0x1E0DF07A0]();
}

uint64_t sub_190CA8728()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_190CA8734()
{
  return MEMORY[0x1E0DF0838]();
}

uint64_t sub_190CA8740()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_190CA874C()
{
  return MEMORY[0x1E0DF09D0]();
}

uint64_t sub_190CA8758()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_190CA8764()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_190CA8770()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_190CA877C()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_190CA8788()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_190CA8794()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_190CA87A0()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_190CA87AC()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_190CA87B8()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_190CA87C4()
{
  return MEMORY[0x1E0CB1CD0]();
}

uint64_t sub_190CA87D0()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_190CA87DC()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_190CA87E8()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_190CA87F4()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_190CA8800()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_190CA880C()
{
  return MEMORY[0x1E0DEF7E8]();
}

uint64_t sub_190CA8818()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_190CA8824()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_190CA8830()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_190CA883C()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_190CA8848()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_190CA8854()
{
  return MEMORY[0x1E0DEF988]();
}

uint64_t sub_190CA8860()
{
  return MEMORY[0x1E0DEF9F0]();
}

uint64_t sub_190CA886C()
{
  return MEMORY[0x1E0DEFA20]();
}

uint64_t sub_190CA8878()
{
  return MEMORY[0x1E0CB2020]();
}

uint64_t sub_190CA8884()
{
  return MEMORY[0x1E0CB2038]();
}

uint64_t sub_190CA8890()
{
  return MEMORY[0x1E0CB2050]();
}

uint64_t sub_190CA889C()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_190CA88A8()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_190CA88B4()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_190CA88C0()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_190CA88CC()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_190CA88D8()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_190CA88E4()
{
  return MEMORY[0x1E0CB23E0]();
}

uint64_t sub_190CA88F0()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_190CA88FC()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_190CA8908()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_190CA8914()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_190CA8920()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_190CA892C()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_190CA8938()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_190CA8944()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_190CA8950()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_190CA895C()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_190CA8968()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_190CA8974()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_190CA8980()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_190CA898C()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_190CA8998()
{
  return MEMORY[0x1E0DEC228]();
}

uint64_t sub_190CA89A4()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_190CA89B0()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_190CA89BC()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_190CA89C8()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_190CA89D4()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_190CA89E0()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_190CA89EC()
{
  return MEMORY[0x1E0DEC2F0]();
}

uint64_t sub_190CA89F8()
{
  return MEMORY[0x1E0DEC300]();
}

uint64_t sub_190CA8A04()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_190CA8A10()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_190CA8A1C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_190CA8A28()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_190CA8A34()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_190CA8A40()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_190CA8A4C()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_190CA8A58()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_190CA8A64()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_190CA8A70()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_190CA8A7C()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_190CA8A88()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_190CA8A94()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_190CA8AA0()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_190CA8AAC()
{
  return MEMORY[0x1E0DECB80]();
}

uint64_t sub_190CA8AB8()
{
  return MEMORY[0x1E0DECBA8]();
}

uint64_t sub_190CA8AC4()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_190CA8AD0()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_190CA8ADC()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_190CA8AE8()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_190CA8AF4()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_190CA8B00()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_190CA8B0C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_190CA8B18()
{
  return MEMORY[0x1E0DECD48]();
}

uint64_t sub_190CA8B24()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_190CA8B30()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_190CA8B3C()
{
  return MEMORY[0x1E0CB25F0]();
}

uint64_t sub_190CA8B48()
{
  return MEMORY[0x1E0DECEF0]();
}

uint64_t sub_190CA8B54()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_190CA8B60()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_190CA8B6C()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_190CA8B78()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_190CA8B84()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_190CA8B90()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_190CA8B9C()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_190CA8BA8()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_190CA8BB4()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_190CA8BC0()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_190CA8BCC()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_190CA8BD8()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_190CA8BE4()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_190CA8BF0()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_190CA8BFC()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_190CA8C08()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_190CA8C14()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_190CA8C20()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_190CA8C2C()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_190CA8C38()
{
  return MEMORY[0x1E0CB2670]();
}

uint64_t sub_190CA8C44()
{
  return MEMORY[0x1E0DEDED8]();
}

uint64_t sub_190CA8C50()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_190CA8C5C()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_190CA8C68()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_190CA8C74()
{
  return MEMORY[0x1E0DEDF28]();
}

uint64_t sub_190CA8C80()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_190CA8C8C()
{
  return MEMORY[0x1E0CB26E8]();
}

uint64_t sub_190CA8C98()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_190CA8CA4()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_190CA8CB0()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_190CA8CBC()
{
  return MEMORY[0x1E0DEE8E8]();
}

CFAllocatorRef CFAllocatorGetDefault(void)
{
  return (CFAllocatorRef)MEMORY[0x1E0C97CC0]();
}

CFURLRef CFBundleCopyBuiltInPlugInsURL(CFBundleRef bundle)
{
  return (CFURLRef)MEMORY[0x1E0C97FF0](bundle);
}

CFURLRef CFBundleCopyBundleURL(CFBundleRef bundle)
{
  return (CFURLRef)MEMORY[0x1E0C98000](bundle);
}

CFURLRef CFBundleCopyExecutableURL(CFBundleRef bundle)
{
  return (CFURLRef)MEMORY[0x1E0C98020](bundle);
}

CFArrayRef CFBundleCopyResourceURLsOfType(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName)
{
  return (CFArrayRef)MEMORY[0x1E0C98098](bundle, resourceType, subDirName);
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return (CFBundleRef)MEMORY[0x1E0C980D0](allocator, bundleURL);
}

CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98130](bundle);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BE8](rl, observer, mode);
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C40]();
}

CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context)
{
  return (CFRunLoopObserverRef)MEMORY[0x1E0C98C60](allocator, activities, repeats, order, callout, context);
}

kern_return_t IOConnectCallMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, const void *inputStruct, size_t inputStructCnt, uint64_t *output, uint32_t *outputCnt, void *outputStruct, size_t *outputStructCnt)
{
  return MEMORY[0x1E0CBAD80](*(_QWORD *)&connection, *(_QWORD *)&selector, input, *(_QWORD *)&inputCnt, inputStruct, inputStructCnt, output, outputCnt);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x1E0CBB6F0](*(_QWORD *)&object);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return MEMORY[0x1E0CBB9D0](*(_QWORD *)&connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x1E0CBB9E0](*(_QWORD *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0CBBA00](name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return MEMORY[0x1E0CBBA10](*(_QWORD *)&service, *(_QWORD *)&owningTask, *(_QWORD *)&type, connect);
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x1E0CB3218](proto);
}

OSStatus SecCodeCopySigningInformation(SecStaticCodeRef code, SecCSFlags flags, CFDictionaryRef *information)
{
  return MEMORY[0x1E0CD61F0](code, *(_QWORD *)&flags, information);
}

OSStatus SecCodeMapMemory(SecStaticCodeRef code, SecCSFlags flags)
{
  return MEMORY[0x1E0CD61F8](code, *(_QWORD *)&flags);
}

uint64_t SecCodeSetDetachedSignature()
{
  return MEMORY[0x1E0CD6200]();
}

OSStatus SecStaticCodeCheckValidity(SecStaticCodeRef staticCode, SecCSFlags flags, SecRequirementRef requirement)
{
  return MEMORY[0x1E0CD65C0](staticCode, *(_QWORD *)&flags, requirement);
}

OSStatus SecStaticCodeCreateWithPath(CFURLRef path, SecCSFlags flags, SecStaticCodeRef *staticCode)
{
  return MEMORY[0x1E0CD65D0](path, *(_QWORD *)&flags, staticCode);
}

uint64_t TCCAccessCopyInformationForBundle()
{
  return MEMORY[0x1E0DB0FC0]();
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return MEMORY[0x1E0CA5940](inUTI, inConformsToUTI);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFBundleCreateUnique()
{
  return MEMORY[0x1E0C99FF0]();
}

uint64_t _CFURLAttachSecurityScopeToFileURL()
{
  return MEMORY[0x1E0C9A5B0]();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x1E0C9A800]();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return MEMORY[0x1E0C9A818]();
}

int *_NSGetArgc(void)
{
  return (int *)MEMORY[0x1E0C809C0]();
}

char ***_NSGetArgv(void)
{
  return (char ***)MEMORY[0x1E0C809C8]();
}

uint64_t _NSIsNSArray()
{
  return MEMORY[0x1E0C9A860]();
}

uint64_t _NSIsNSData()
{
  return MEMORY[0x1E0C9A878]();
}

uint64_t _NSIsNSDictionary()
{
  return MEMORY[0x1E0C9A888]();
}

uint64_t _NSIsNSNumber()
{
  return MEMORY[0x1E0C9A890]();
}

uint64_t _NSIsNSString()
{
  return MEMORY[0x1E0C9A8B0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

uint64_t __PLUGINKIT_CALLING_OUT_TO_CLIENT_SUBSYSTEM_FOR_INIT__()
{
  return MEMORY[0x1E0D7D4A8]();
}

uint64_t __PLUGINKIT_HANDING_CONTROL_TO_MAIN_SERVICE_LISTENER__()
{
  return MEMORY[0x1E0D7D4B0]();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

uint64_t _dyld_get_prog_image_header()
{
  return MEMORY[0x1E0C80E90]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

void _os_activity_initiate(void *dso, const char *description, os_activity_flag_t flags, os_block_t activity_block)
{
  MEMORY[0x1E0C80FD0](dso, description, *(_QWORD *)&flags, activity_block);
}

uint64_t _os_assert_log()
{
  return MEMORY[0x1E0C80FF0]();
}

uint64_t _os_crash()
{
  return MEMORY[0x1E0C81000]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void abort(void)
{
  MEMORY[0x1E0C813A8]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1E0C813B0]();
}

uint64_t abort_with_reason()
{
  return MEMORY[0x1E0C813C0]();
}

uint64_t amfi_interface_query_bootarg_state()
{
  return MEMORY[0x1E0CFDF18]();
}

int atoi(const char *a1)
{
  return MEMORY[0x1E0C81668](a1);
}

void audit_token_to_au32(audit_token_t *atoken, uid_t *auidp, uid_t *euidp, gid_t *egidp, uid_t *ruidp, gid_t *rgidp, pid_t *pidp, au_asid_t *asidp, au_tid_t *tidp)
{
  MEMORY[0x1E0DE40C8](atoken, auidp, euidp, egidp, ruidp, rgidp, pidp, asidp);
}

uid_t audit_token_to_euid(audit_token_t *atoken)
{
  return MEMORY[0x1E0DE40E0](atoken);
}

pid_t audit_token_to_pid(audit_token_t *atoken)
{
  return MEMORY[0x1E0DE40F0](atoken);
}

int audit_token_to_pidversion(audit_token_t *atoken)
{
  return MEMORY[0x1E0DE40F8](atoken);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

BOOL class_conformsToProtocol(Class cls, Protocol *protocol)
{
  return MEMORY[0x1E0DE7A68](cls, protocol);
}

const char *__cdecl class_getName(Class cls)
{
  return (const char *)MEMORY[0x1E0DE7AC8](cls);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BF8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E50](label, attr, target);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

uint64_t dyld_get_active_platform()
{
  return MEMORY[0x1E0C830A0]();
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1E0C83158]();
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1E0C83660](a1);
}

uid_t geteuid(void)
{
  return MEMORY[0x1E0C83668]();
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x1E0C83778]();
}

uint8_t *__cdecl getsectiondata(const mach_header_64 *mhp, const char *segname, const char *sectname, unint64_t *size)
{
  return (uint8_t *)MEMORY[0x1E0C837E0](mhp, segname, sectname, size);
}

uid_t getuid(void)
{
  return MEMORY[0x1E0C83828]();
}

uint64_t launch_add_external_service()
{
  return MEMORY[0x1E0C83A78]();
}

uint64_t launch_copy_extension_properties()
{
  return MEMORY[0x1E0C83A88]();
}

uint64_t launch_copy_extension_properties_for_pid()
{
  return MEMORY[0x1E0C83A90]();
}

uint64_t launch_extension_check_in_live_4UIKit()
{
  return MEMORY[0x1E0C83AD8]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint64_t memorystatus_control()
{
  return MEMORY[0x1E0C840A8]();
}

uint64_t nw_application_id_set_self()
{
  return MEMORY[0x1E0CCEE88]();
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

Protocol *__cdecl objc_allocateProtocol(const char *name)
{
  return (Protocol *)MEMORY[0x1E0DE7BC8](name);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
  MEMORY[0x1E0DE7C30](dest, src, size, atomic, hasStrong);
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_rethrow(void)
{
  MEMORY[0x1E0DE7C98]();
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

Protocol *__cdecl objc_getProtocol(const char *name)
{
  return (Protocol *)MEMORY[0x1E0DE7CD8](name);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

Class objc_lookUpClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7D10](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_registerProtocol(Protocol *proto)
{
  MEMORY[0x1E0DE7D70](proto);
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x1E0C84930](log, ptr);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1E0C849F0]();
}

uint64_t pklog_get_persona_type_and_name()
{
  return MEMORY[0x1E0D7D4B8]();
}

uint64_t pklog_handle_for_category()
{
  return MEMORY[0x1E0D7D4C0]();
}

void protocol_addProtocol(Protocol *proto, Protocol *addition)
{
  MEMORY[0x1E0DE8078](proto, addition);
}

const char *__cdecl protocol_getName(Protocol *p)
{
  return (const char *)MEMORY[0x1E0DE80B0](p);
}

uint64_t sandbox_check()
{
  return MEMORY[0x1E0C85178]();
}

uint64_t sandbox_container_path_for_pid()
{
  return MEMORY[0x1E0C85190]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t sandbox_extension_issue_file()
{
  return MEMORY[0x1E0C851A8]();
}

uint64_t sandbox_extension_issue_file_to_process()
{
  return MEMORY[0x1E0C851B0]();
}

uint64_t sandbox_extension_issue_mach_to_process()
{
  return MEMORY[0x1E0C851F0]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1E0C851F8]();
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1E0C85438](*(_QWORD *)&a1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

size_t strlcat(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1E0C85568](__dst, __source, __size);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1E0C85570](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x1E0DEEB90]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x1E0DEEEF8]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x1E0DEEF00]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x1E0DEEF08]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return MEMORY[0x1E0C85838](*(_QWORD *)&target_task, *(_QWORD *)&flavor, task_info_out, task_info_outCnt);
}

uint64_t terminate_with_reason()
{
  return MEMORY[0x1E0C858C8]();
}

uint64_t voucher_get_current_persona()
{
  return MEMORY[0x1E0C85B30]();
}

void xpc_connection_activate(xpc_connection_t connection)
{
  MEMORY[0x1E0C85F50](connection);
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x1E0C85F90](name, targetq);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return (xpc_connection_t)MEMORY[0x1E0C85FA0](endpoint);
}

uint64_t xpc_connection_kill()
{
  return MEMORY[0x1E0C86010]();
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x1E0C86080](connection, handler);
}

uint64_t xpc_connection_set_oneshot_instance()
{
  return MEMORY[0x1E0C860A8]();
}

uint64_t xpc_copy_bootstrap()
{
  return MEMORY[0x1E0C860F0]();
}

uint64_t xpc_copy_entitlement_for_token()
{
  return MEMORY[0x1E0C86120]();
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_main(xpc_connection_handler_t handler)
{
  MEMORY[0x1E0C86608](handler);
}

void xpc_release(xpc_object_t object)
{
  MEMORY[0x1E0C86658](object);
}

uint64_t xpc_transaction_exit_clean()
{
  return MEMORY[0x1E0C86778]();
}

uint64_t xpc_transaction_interrupt_clean_exit()
{
  return MEMORY[0x1E0C86780]();
}

