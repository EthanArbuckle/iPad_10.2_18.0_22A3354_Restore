uint64_t sub_232DDD48C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_232DDD4AC()
{
  uint64_t v0;

  return sub_232DDD4D4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_232DDD4B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_232DDD4D4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t type metadata accessor for SubscribedActivity(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_254238530);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_232DDD5FC(uint64_t *a1)
{
  return sub_232DE44F4(a1);
}

uint64_t sub_232DDD608@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_232DDD614()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActivityDescriptor();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ActivityDescriptorContentState()
{
  uint64_t result;

  result = qword_2542383E8;
  if (!qword_2542383E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Activity.ActivityUpdates.Iterator.next()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_232E29328;
  return v3(v0 + 16);
}

uint64_t sub_232DDD798(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_232DDD7D4(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_232DDD904(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_232E11954();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a2;
    *(_BYTE *)(v16[7] + v10) = a1 & 1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_232DDDC7C(result, a3 & 1);
  result = sub_232DDD904(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_232E6F714();
  __break(1u);
  return result;
}

unint64_t sub_232DDD904(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_232E6F774();
  return sub_232DDD934(a1, v2);
}

unint64_t sub_232DDD934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t ActivitySubscriptionOptions.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC000);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEB390();
  sub_232E6F7BC();
  if (!v2)
  {
    v9 = sub_232E6F624();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232DDDAD8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23492A124](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232DDDB18(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static OpaqueObjectiveCBridgable<>._unconditionallyBridgeFromObjectiveC(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_232E6F474();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - v12;
  v14 = *(_QWORD *)(a2 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, double))(v14 + 56))((char *)&v16 - v12, 1, 1, a2, v11);
  if (a1)
  {
    sub_232E6F5C4();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, a2);
    if ((_DWORD)result != 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v9, a2);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_232DDDC7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237B78);
  result = sub_232E6F5A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
      result = sub_232E6F774();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_232DDDF18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_232DDDF74(v2, v3);
  return a1;
}

uint64_t sub_232DDDF74(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_232DDDFA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B90);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEB390();
  sub_232E6F7C8();
  sub_232E6F690();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_232DDE08C(uint64_t a1)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(v1[9] + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_232DDF54C(a1, v1);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t sub_232DDE0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for Activity(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  result = sub_232E6EEF8();
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_232DDE158(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_232DDE184(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237590);
  v37 = a2;
  v6 = sub_232E6F5A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_232DEAC8C(v25, (uint64_t)v38);
    }
    else
    {
      sub_232DE80CC((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_232E6F780();
    sub_232E6F21C();
    result = sub_232E6F7B0();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_232DEAC8C(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_232DDE4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  type metadata accessor for Activity(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v5 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

uint64_t sub_232DDE4F0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542382E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s11ActivityKit9SingletonCMa_1()
{
  return objc_opt_self();
}

id sub_232DDE550(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_232E6EEA4() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

void (*sub_232DDE5A4(uint64_t a1, uint64_t a2, uint64_t a3))(BOOL, uint64_t, uint64_t)
{
  return sub_232DF1BB4(a1, a2, a3, (uint64_t)sub_232DF5340, (uint64_t)&type metadata for XPCCodableActivityDescriptorContentStates, (void (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState, (void (*)(BOOL, uint64_t, uint64_t))sub_232E525F0);
}

uint64_t type metadata accessor for ActivityInputClient()
{
  return objc_opt_self();
}

uint64_t sub_232DDE5F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_232E6EE74();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_232DDE71C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542383D0)
  {
    sub_232E6EE74();
    v0 = sub_232E6F474();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542383D0);
  }
}

void sub_232DDE838()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_232DDE71C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_232DDE8CC()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_2542383F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2542383F8);
  return sub_232E6EEC8();
}

uint64_t sub_232DDE914()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_254238540);
  __swift_project_value_buffer(v0, (uint64_t)qword_254238540);
  return sub_232E6EEC8();
}

uint64_t sub_232DDE95C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254238478 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254238590);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

id sub_232DDE9CC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)_s11ActivityKit9SingletonCMa_1()), sel_init);
  qword_2542382C0 = (uint64_t)result;
  return result;
}

unint64_t sub_232DDE9FC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFE660);
  v2 = (_QWORD *)sub_232E6F5AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_232DE0F18(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_232DDEB24()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Singleton()), sel_init);
  qword_2542384C8 = (uint64_t)result;
  return result;
}

uint64_t sub_232DDEB54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254238428 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2542383F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t type metadata accessor for ActivityPushTokenClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ActivityFrequentUpdatesObservationClient()
{
  return objc_opt_self();
}

uint64_t sub_232DDEC04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD920);
    v2 = sub_232E6F4D4();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B08];
  }
  v19 = v2;
  v3 = a1 + 56;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_7:
  v10 = (v6 - 1) & v6;
  v11 = __clz(__rbit64(v6)) | (v9 << 6);
  for (i = v9; ; v11 = __clz(__rbit64(v14)) + (i << 6))
  {
    sub_232E185E0(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)&v18);
    if ((swift_dynamicCast() & 1) == 0 || !v17)
    {
      swift_release();
      sub_232E1861C();
      swift_bridgeObjectRelease();
      return 0;
    }
    result = sub_232E1762C(v16, v17);
    v9 = i;
    v6 = v10;
    if (v10)
      goto LABEL_7;
LABEL_8:
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v7)
      goto LABEL_29;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    i = v9 + 1;
    if (!v14)
    {
      i = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_29;
      v14 = *(_QWORD *)(v3 + 8 * i);
      if (!v14)
      {
        i = v9 + 3;
        if (v9 + 3 >= v7)
          goto LABEL_29;
        v14 = *(_QWORD *)(v3 + 8 * i);
        if (!v14)
        {
          i = v9 + 4;
          if (v9 + 4 >= v7)
            goto LABEL_29;
          v14 = *(_QWORD *)(v3 + 8 * i);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v10 = (v14 - 1) & v14;
  }
  v15 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_29:
    sub_232E1861C();
    return v19;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    i = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    i = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (i >= v7)
      goto LABEL_29;
    v14 = *(_QWORD *)(v3 + 8 * i);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ActivityOutputClient()
{
  return objc_opt_self();
}

uint64_t static Activity.activities.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t (*v20)();
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[3];
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ActivityDescriptorContentState();
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254238460 != -1)
    swift_once();
  v8 = off_2542385A8;
  sub_232DE80CC((uint64_t)off_2542385A8 + 32, (uint64_t)v37);
  v9 = v38;
  v10 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  v11 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v10 + 24))(v35, v9, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v12 = *(_QWORD *)(v1 + 80);
  v13 = *(_QWORD *)(v1 + 88);
  v30[2] = v1;
  v33 = v12;
  v34 = v13;
  v30[4] = type metadata accessor for Activity(0, v12, v13, v14);
  v15 = sub_232E6F150();
  v37[0] = v15;
  v16 = *(_QWORD *)(v11 + 16);
  if (v16)
  {
    v30[3] = v8;
    v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v30[1] = v11;
    v18 = v11 + v17;
    v32 = *(_QWORD *)(v5 + 72);
    v19 = type metadata accessor for ActivityDescriptorContentState;
    v20 = type metadata accessor for ActivityDescriptor;
    while (1)
    {
      v22 = v19;
      sub_232DED470(v18, (uint64_t)v7, (uint64_t (*)(_QWORD))v19);
      v23 = v20;
      sub_232DED470((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))v20);
      v24 = *((_QWORD *)v4 + 2);
      v25 = *((_QWORD *)v4 + 3);
      swift_bridgeObjectRetain();
      ActivityAttributesType.init<A>(from:)((uint64_t *)v35);
      if (v24 == *(_QWORD *)&v35[0] && v25 == *((_QWORD *)&v35[0] + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v27 = sub_232E6F6E4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
          goto LABEL_7;
      }
      v21 = (uint64_t)&v7[*(int *)(v31 + 28)];
      LOBYTE(v35[0]) = v7[*(int *)(v31 + 20)];
      *(_QWORD *)&v35[0] = sub_232E0CDFC((uint64_t)v4, v21, (uint64_t)v35, v33, v34);
      sub_232E6F330();
      sub_232E6F318();
LABEL_7:
      v20 = v23;
      sub_232DF51B8((uint64_t)v4, (uint64_t (*)(_QWORD))v23);
      v19 = v22;
      sub_232DF51B8((uint64_t)v7, (uint64_t (*)(_QWORD))v22);
      v18 += v32;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        return v37[0];
      }
    }
  }
  v29 = v15;
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_232DDF348()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_254238570);
  __swift_project_value_buffer(v0, (uint64_t)qword_254238570);
  return sub_232E6EEC8();
}

id sub_232DDF390(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_232E6EEA4() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

uint64_t sub_232DDF3E4()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_254238590);
  __swift_project_value_buffer(v0, (uint64_t)qword_254238590);
  return sub_232E6EEC8();
}

uint64_t sub_232DDF42C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254238470 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254238570);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_232DDF49C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23492A124](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232DDF4DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254238560 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254238540);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_232DDF54C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  __int128 v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  _QWORD v50[2];
  uint64_t v51;
  char v52;

  v41 = 0;
  v4 = *a2;
  v5 = sub_232E6EF28();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for ActivityDescriptorContentState();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v43 = v8;
    v44 = v6;
    v45 = v5;
    v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v35[0] = a1;
    swift_bridgeObjectRetain();
    v49 = a2 + 11;
    swift_beginAccess();
    v37 = &v52;
    v48 = *(_QWORD *)(v9 + 72);
    v40 = 0x8000000232E7DBA0;
    *(_QWORD *)&v14 = 136446978;
    v36 = v14;
    v35[1] = MEMORY[0x24BEE4AD8] + 8;
    v15 = v4;
    v16 = v41;
    v38 = a2;
    v39 = v4;
    do
    {
      sub_232DED470(v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      v17 = v11[1];
      v18 = *v49;
      v50[0] = *v11;
      v50[1] = v17;
      v19 = *(_QWORD *)(v15 + 80);
      v46 = *(_QWORD *)(v15 + 88);
      v47 = v19;
      v21 = type metadata accessor for Activity(0, v19, v46, v20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MEMORY[0x2349295D8](&v51, v50, v18, MEMORY[0x24BEE0D00], v21, MEMORY[0x24BEE0D10]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v51;
      swift_release();
      if (!v22)
      {
        v23 = (uint64_t)v11 + *(int *)(v42 + 28);
        LOBYTE(v50[0]) = *((_BYTE *)v11 + *(int *)(v42 + 20));
        sub_232E0082C((uint64_t)v11, v23, (unsigned __int8 *)v50);
      }
      sub_232E00224(v11);
      sub_232DF51B8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      v13 += v48;
      --v12;
    }
    while (v12);
    v41 = v16;
    a1 = v35[0];
    swift_bridgeObjectRelease();
    v25 = v46;
    v24 = v47;
  }
  else
  {
    v24 = *(_QWORD *)(v4 + 80);
    v25 = *(_QWORD *)(v4 + 88);
  }
  v50[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238450);
  v27 = type metadata accessor for Activity(0, v24, v25, v26);
  sub_232DDF49C(&qword_254237588, &qword_254238450, MEMORY[0x24BEE12C8]);
  v28 = sub_232E6F24C();
  sub_232DEB764(a1);
  if (MEMORY[0x234929758](v28, v27))
  {
    v29 = 4;
    do
    {
      v30 = v29 - 4;
      v31 = sub_232E6F300();
      sub_232E6F2DC();
      if ((v31 & 1) != 0)
      {
        v32 = *(_QWORD *)(v28 + 8 * v29);
        swift_retain();
        v33 = v29 - 3;
        if (__OFADD__(v30, 1))
          goto LABEL_16;
      }
      else
      {
        v32 = sub_232E6F4F8();
        v33 = v29 - 3;
        if (__OFADD__(v30, 1))
        {
LABEL_16:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v50[0] = v32;
      swift_retain();
      sub_232E6EF94();
      swift_release();
      swift_release();
      ++v29;
    }
    while (v33 != MEMORY[0x234929758](v28, v27));
  }
  return swift_bridgeObjectRelease();
}

uint64_t XPCCodableActivityChanges.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEBCB8();
  sub_232E6F7C8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237FF0);
  sub_232DEA5E4(&qword_255FFC540, (uint64_t (*)(void))sub_232E07480, MEMORY[0x24BEE12A0]);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_232DDFDE0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t *v31;

  v31 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (_QWORD *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_232E6F5AC();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)v10 + *(int *)(v7 + 48);
  v29[1] = a1;
  v30 = v14;
  v15 = v11 + 64;
  v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v17 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_232DF5040(v16, (uint64_t)v10, v31);
    v18 = *v10;
    v19 = v10[1];
    result = sub_232DE0F18(*v10, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v12[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v12[7];
    v25 = a4(0);
    result = sub_232DEDD20(v30, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v16 += v17;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_232DDFF78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_232DDFFD4(v2, v3);
  return a1;
}

uint64_t sub_232DDFFD4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_232DE0004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_232DEAC8C((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_232DE0DE4(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_232DDD798(a1, &qword_2542374A8);
    sub_232DF8E14(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_232DDD798((uint64_t)v9, &qword_2542374A8);
  }
}

uint64_t sub_232DE00D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ActivityDescriptor();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t XPCCodableActivityChanges.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEBCB8();
  sub_232E6F7BC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237FF0);
    sub_232DEA5E4(&qword_254237B70, (uint64_t (*)(void))sub_232DEAC34, MEMORY[0x24BEE12D0]);
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232DE02E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_232DDE08C(v1);
    return swift_release();
  }
  return result;
}

uint64_t XPCCodableActivityDescriptorContentStates.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_255FFC010);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEBE34();
  sub_232E6F7C8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238450);
  sub_232DEA6C8(&qword_255FFC530, &qword_255FFC498, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState, MEMORY[0x24BEE12A0]);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t XPCCodableActivityDescriptorContentStates.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEBE34();
  sub_232E6F7BC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238450);
    sub_232DEA6C8(&qword_254237B68, &qword_254237AF8, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState, MEMORY[0x24BEE12D0]);
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232DE0650(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_232DE068C(uint64_t a1)
{
  uint64_t v1;

  return sub_232DE0694(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_232DE0694(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_232DE06B4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_232DE06EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = type metadata accessor for ActivityPushTokenClient();
  v8[4] = &off_250426400;
  v8[0] = a1;
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = 0;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 64) = MEMORY[0x24BEE4B08];
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 72) = sub_232DE6200(MEMORY[0x24BEE4AF8]);
  *(_OWORD *)(a2 + 80) = xmmword_232E70D10;
  *(_QWORD *)(a2 + 96) = sub_232DDE9FC(v6);
  *(_QWORD *)(a2 + 104) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238110);
  swift_allocObject();
  *(_QWORD *)(a2 + 112) = sub_232E6EFAC();
  sub_232DE80CC((uint64_t)v8, a2 + 24);
  sub_232DE189C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return a2;
}

void sub_232DE07D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (_QWORD *)sub_232E6F12C();
  v2 = *(v1 - 1);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  (*(void (**)(_QWORD *, _QWORD *))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  v7 = (void *)sub_232DE1ED8();
  if (!v7)
    return;
  v23[0] = 0;
  v8 = objc_msgSend(v7, sel_registerForPushTokensWithError_, v23);
  swift_unknownObjectRelease();
  if (v8)
  {
    v9 = v23[0];
    return;
  }
  v21[1] = v23[0];
  v10 = v23[0];
  v1 = (_QWORD *)sub_232E6EDF0();

  swift_willThrow();
  if (qword_2542380A0 != -1)
    goto LABEL_11;
LABEL_6:
  v11 = sub_232E6EF28();
  __swift_project_value_buffer(v11, (uint64_t)qword_254238080);
  v12 = v1;
  v13 = v1;
  v14 = sub_232E6EF10();
  v15 = sub_232E6F378();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = (void *)swift_slowAlloc();
    v23[0] = v17;
    *(_DWORD *)v16 = 136446210;
    v22 = (uint64_t)v1;
    v18 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
    v19 = sub_232E6F1F8();
    v22 = sub_232DE4A70(v19, v20, (uint64_t *)v23);
    sub_232E6F480();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_232DDB000, v14, v15, "Could not register for push tokens: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v17, -1, -1);
    MEMORY[0x23492A1F0](v16, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_232DE0AF8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;

  v3 = sub_232E6F12C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_232E6F144();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
    goto LABEL_30;
  v10 = v1 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_subscriptions;
  result = swift_beginAccess();
  v11 = 0;
  v12 = *(_QWORD *)v10 + 64;
  v13 = 1 << *(_BYTE *)(*(_QWORD *)v10 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(*(_QWORD *)v10 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v11 << 6);
      goto LABEL_6;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v19 >= v16)
      goto LABEL_27;
    v20 = *(_QWORD *)(v12 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v16)
        goto LABEL_27;
      v20 = *(_QWORD *)(v12 + 8 * v11);
      if (!v20)
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v16)
          goto LABEL_27;
        v20 = *(_QWORD *)(v12 + 8 * v11);
        if (!v20)
        {
          v11 = v19 + 3;
          if (v19 + 3 >= v16)
            goto LABEL_27;
          v20 = *(_QWORD *)(v12 + 8 * v11);
          if (!v20)
          {
            v11 = v19 + 4;
            if (v19 + 4 >= v16)
              goto LABEL_27;
            v20 = *(_QWORD *)(v12 + 8 * v11);
            if (!v20)
            {
              v21 = v19 + 5;
              if (v21 >= v16)
              {
LABEL_27:
                v22 = 0;
                goto LABEL_28;
              }
              v20 = *(_QWORD *)(v12 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  v11 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_31;
                  if (v11 >= v16)
                    goto LABEL_27;
                  v20 = *(_QWORD *)(v12 + 8 * v11);
                  ++v21;
                  if (v20)
                    goto LABEL_25;
                }
              }
              v11 = v21;
            }
          }
        }
      }
    }
LABEL_25:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_6:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)v10 + 56) + v18) == 1)
    {
      v22 = 1;
LABEL_28:
      *a1 = v22;
      return result;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_232DE0D10(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232DEB244();
  sub_232E6ED9C();
  sub_232DE8D98(v3, v5);
  result = swift_release();
  *a2 = v7;
  return result;
}

uint64_t sub_232DE0DE4(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_232DE0F18(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_232DEAC8C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_232E124F0();
      goto LABEL_7;
    }
    sub_232DDE184(v15, a4 & 1);
    v21 = sub_232DE0F18(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_232DEA498(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_232E6F714();
  __break(1u);
  return result;
}

unint64_t sub_232DE0F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232E6F780();
  sub_232E6F21C();
  v4 = sub_232E6F7B0();
  return sub_232DE0F7C(a1, a2, v4);
}

unint64_t sub_232DE0F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_232E6F6E4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_232E6F6E4() & 1) == 0);
    }
  }
  return v6;
}

uint64_t ActivityOutputClient.init()()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;
  _QWORD *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  void *v6;
  id v7;

  type metadata accessor for UnfairLock();
  v1 = swift_allocObject();
  v2 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = 0;
  *(_QWORD *)(v0 + 32) = v1;
  *(_BYTE *)(v0 + 40) = 2;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  if (qword_254238008 != -1)
    swift_once();
  v3 = off_254237FF8;
  v4 = (os_unfair_lock_s *)((char *)off_254237FF8 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_254237FF8 + 6);
  v5 = v3[2] + 1;
  v3[2] = v5;
  os_unfair_lock_unlock(v4);
  *(_QWORD *)(v0 + 16) = v5;
  if (qword_2542385E0 != -1)
    swift_once();
  v6 = (void *)qword_2542384C8;
  *(_QWORD *)(v0 + 24) = qword_2542384C8;
  v7 = v6;
  return v0;
}

id sub_232DE1148(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  void *v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = (void *)v2();

  return v4;
}

uint64_t sub_232DE1184@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;

  v38 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237938);
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v32 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237890);
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238100);
  v5 = MEMORY[0x24BDAC7A8](v41);
  v7 = (char **)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char **)((char *)&v32 - v8);
  v10 = *a1;
  v42 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(v10 + 64);
  v39 = v10 + 64;
  v12 = 1 << *(_BYTE *)(v10 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v40 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = *(_QWORD *)(v10 + 56);
    v22 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * i);
    v24 = *v22;
    v23 = v22[1];
    v25 = type metadata accessor for SubscribedActivity(0);
    sub_232DED470(v21 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * i, (uint64_t)v9 + *(int *)(v41 + 48), type metadata accessor for SubscribedActivity);
    *v9 = v24;
    v9[1] = v23;
    sub_232DE939C((uint64_t)v9, (uint64_t)v7, &qword_254238100);
    swift_bridgeObjectRetain();
    sub_232DEFEDC(&v42, v7);
    sub_232DDD798((uint64_t)v7, &qword_254238100);
    if (v14)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v40)
      goto LABEL_24;
    v19 = *(_QWORD *)(v39 + 8 * v15);
    if (!v19)
      break;
LABEL_17:
    v14 = (v19 - 1) & v19;
  }
  v20 = v15 + 1;
  if (v15 + 1 >= v40)
    goto LABEL_24;
  v19 = *(_QWORD *)(v39 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 2;
  if (v15 + 2 >= v40)
    goto LABEL_24;
  v19 = *(_QWORD *)(v39 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 3;
  if (v15 + 3 >= v40)
    goto LABEL_24;
  v19 = *(_QWORD *)(v39 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 4;
  if (v15 + 4 >= v40)
  {
LABEL_24:
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238450);
    v26 = v32;
    sub_232E6F018();
    v27 = v33;
    v28 = v36;
    sub_232E6F00C();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v28);
    sub_232DDF49C(&qword_254237958, &qword_254237890, MEMORY[0x24BDBA1D0]);
    v29 = v37;
    v30 = sub_232E6F030();
    result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v27, v29);
    *v38 = v30;
    return result;
  }
  v19 = *(_QWORD *)(v39 + 8 * v20);
  if (v19)
  {
LABEL_16:
    v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v40)
      goto LABEL_24;
    v19 = *(_QWORD *)(v39 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
  swift_bridgeObjectRelease();
  sub_232DDD798((uint64_t)v7, &qword_254238100);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_232DE1550@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  v16 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237938);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237950);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DDFF78(a1);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_232DF4904(v11, a1, (void (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState, (void (*)(BOOL, uint64_t, uint64_t))sub_232E525F0);
  sub_232DDDF18(a1);
  swift_bridgeObjectRelease();
  v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238450);
  sub_232E6F018();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
  sub_232E6F00C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_232DDF49C(&qword_254237948, &qword_254237950, MEMORY[0x24BDBA1D0]);
  v13 = sub_232E6F030();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *v16 = v13;
  return result;
}

void sub_232DE16F4(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_254238030 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_254238010);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232DE17C8(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_254238078 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_254238060);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

uint64_t sub_232DE189C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_232DE80CC(v0 + 24, (uint64_t)v4);
  v1 = v5;
  v2 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238490);
  sub_232DDF49C((unint64_t *)&unk_2542385F8, &qword_254238490, MEMORY[0x24BDB9AF8]);
  sub_232E6F09C();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  swift_beginAccess();
  sub_232E6EF4C();
  swift_endAccess();
  return swift_release();
}

void *sub_232DE19B4(uint64_t a1)
{
  void *result;
  id v3;
  uint64_t v4;
  _QWORD *v5;

  result = (void *)sub_232DE1C10();
  if (result)
  {
    v3 = objc_msgSend(result, sel_activitiesExceedingReducedPushBudget);
    if (v3)
    {
      v4 = sub_232E6F360();

      v3 = (id)sub_232DDEC04(v4);
      swift_bridgeObjectRelease();
    }
    v5 = (_QWORD *)(a1 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activities);
    swift_beginAccess();
    *v5 = v3;
    swift_unknownObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_232DE1A74(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_254238058 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_254238040);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232DE1B48()
{
  id v0;
  uint64_t v1;
  id v2;
  id v3;
  _QWORD *v4;
  _QWORD *v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActivityPushTokenClient()), sel_init);
  type metadata accessor for ActivityOutputClient();
  swift_allocObject();
  v1 = ActivityOutputClient.init()();
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActivityInputClient()), sel_init);
  v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActivityFrequentUpdatesObservationClient()), sel_init);
  type metadata accessor for ActivityManager();
  v4 = (_QWORD *)swift_allocObject();
  v5 = sub_232DE7E28(v0, v1, v2, (uint64_t)v3, v4);

  off_2542385A8 = v5;
}

uint64_t sub_232DE1C10()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD v16[2];
  _OWORD v17[2];
  _BYTE v18[24];
  uint64_t v19;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_queue);
  *v4 = v5;
  (*((void (**)(_QWORD *, _QWORD, NSObject *))isa + 13))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  (*((void (**)(_QWORD *, NSObject *))isa + 1))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232DE9BB8();
  v7 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_connection);
  if (!v7)
  {
    if (qword_254238078 != -1)
      swift_once();
    v8 = sub_232E6EF28();
    __swift_project_value_buffer(v8, (uint64_t)qword_254238060);
    v1 = sub_232E6EF10();
    v9 = sub_232E6F384();
    if (os_log_type_enabled(v1, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_232DDB000, v1, v9, "Frequent updates observation service: Failed to establish a connection", v10, 2u);
      MEMORY[0x23492A1F0](v10, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v7;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_232DE9CF0((uint64_t)v17, (uint64_t)v18);
  if (v19)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542382E0);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v16[1];
    }
  }
  else
  {
    sub_232DDE4F0((uint64_t)v18);
  }
  if (qword_254238078 != -1)
    goto LABEL_20;
LABEL_15:
  v12 = sub_232E6EF28();
  __swift_project_value_buffer(v12, (uint64_t)qword_254238060);
  v13 = sub_232E6EF10();
  v14 = sub_232E6F384();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_232DDB000, v13, v14, "Frequent updates observation Service: Failed to cast connection to server interface protocol", v15, 2u);
    MEMORY[0x23492A1F0](v15, -1, -1);
  }

LABEL_18:
  return 0;
}

uint64_t sub_232DE1ED8()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue);
  *v4 = v5;
  (*((void (**)(_QWORD *, _QWORD, NSObject *))isa + 13))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  v7 = (*((uint64_t (**)(_QWORD *, NSObject *))isa + 1))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232DE97AC(v7);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_connection);
  if (!v8)
  {
    if (qword_2542380A0 != -1)
      swift_once();
    v9 = sub_232E6EF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_254238080);
    v1 = sub_232E6EF10();
    v10 = sub_232E6F384();
    if (os_log_type_enabled(v1, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_232DDB000, v1, v10, "ActivityPushTokenClient: Failed to establish a connection", v11, 2u);
      MEMORY[0x23492A1F0](v11, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v8;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_232DE9CF0((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542382B8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v17[1];
    }
  }
  else
  {
    sub_232DDE4F0((uint64_t)v19);
  }
  if (qword_2542380A0 != -1)
    goto LABEL_20;
LABEL_15:
  v13 = sub_232E6EF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_254238080);
  v14 = sub_232E6EF10();
  v15 = sub_232E6F384();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_232DDB000, v14, v15, "ActivityPushTokenClient: Failed to cast connection to server interface protocol", v16, 2u);
    MEMORY[0x23492A1F0](v16, -1, -1);
  }

LABEL_18:
  return 0;
}

_QWORD *sub_232DE21A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27[3];
  uint64_t v28;

  v4 = v3;
  v25 = a2;
  v26 = a3;
  v24 = a1;
  v5 = *v3;
  v6 = sub_232E6F3C0();
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_232E6F3A8();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v11);
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v13;
  *v13 = 0;
  v14 = MEMORY[0x24BEE4B08];
  v4[9] = v12;
  v4[10] = v14;
  v15 = *(_QWORD *)(v5 + 80);
  v21 = *(_QWORD *)(v5 + 88);
  type metadata accessor for Activity(255, v15, v21, v16);
  swift_getTupleTypeMetadata2();
  sub_232E6F2F4();
  v4[11] = sub_232E6F180();
  sub_232E6EFB8();
  v4[12] = sub_232E6EFA0();
  v4[13] = sub_232E6EFA0();
  sub_232DEA514();
  sub_232E6F0E4();
  *(_QWORD *)&v27[0] = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8((unint64_t *)&qword_254238620, v10, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v8, *MEMORY[0x24BEE5750], v23);
  v4[14] = sub_232E6F3F0();
  v4[15] = MEMORY[0x24BEE4B08];
  v17 = v25;
  v18 = v26;
  v4[2] = v24;
  v4[3] = v17;
  sub_232DE80CC(v18, (uint64_t)(v4 + 4));
  ActivityAttributesType.init<A>(from:)((uint64_t *)v27);
  memset(&v27[1], 0, 32);
  v28 = 0;
  sub_232DE345C(v27);
  __swift_destroy_boxed_opaque_existential_1(v18);
  swift_bridgeObjectRelease();
  sub_232DDDF74(0, 0);
  return v4;
}

void sub_232DE24C0()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232E18584;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_7;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_254238078 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_254238060);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232DE2694()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232E2380C;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_7;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_2542380A0 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_254238080);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232DE2868(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v3 = sub_232E6F12C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(a2 + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    if (qword_2542380A0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v9 = sub_232E6EF28();
  __swift_project_value_buffer(v9, (uint64_t)qword_254238080);
  v10 = sub_232E6EF10();
  v11 = sub_232E6F36C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_232DDB000, v10, v11, "Push Service: Activated", v12, 2u);
    MEMORY[0x23492A1F0](v12, -1, -1);
  }

  sub_232DE07D8();
}

void sub_232DE29D8()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232DF99DC;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_10;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_254238058 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_254238040);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232DE2BAC()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232DF50EC;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_62;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_254238030 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_254238010);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

uint64_t OpaqueObjectiveCBridgable<>._bridgeToObjectiveC()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t ActivityOutputClient.observeDescriptorContentStates(matching:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _OWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542378C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237898);
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542378E0);
  v26 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v12;
  v28[2] = *(_OWORD *)(a1 + 32);
  v29 = *(_QWORD *)(a1 + 48);
  v13 = ActivityOutputClient.observeDescriptorContentStates()();
  if (!v1)
  {
    v30 = v13;
    v24 = 0;
    v14 = swift_allocObject();
    v23 = v3;
    v15 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v14 + 32) = v15;
    *(_OWORD *)(v14 + 48) = *(_OWORD *)(a1 + 32);
    *(_QWORD *)(v14 + 64) = *(_QWORD *)(a1 + 48);
    sub_232DDFF78((uint64_t)v28);
    v21[2] = sub_232E6EF40();
    v21[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_254237930);
    v22 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237920);
    v16 = MEMORY[0x24BDB9AF8];
    sub_232DDF49C(&qword_254237928, &qword_254237930, MEMORY[0x24BDB9AF8]);
    v21[3] = sub_232DDF49C(&qword_254237918, &qword_254237920, v16);
    sub_232E6F0B4();
    swift_release();
    swift_release();
    sub_232DDF49C(&qword_2542378F8, &qword_254237898, MEMORY[0x24BDB98F0]);
    sub_232DEA64C();
    sub_232E6F090();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
    sub_232DDF49C(&qword_2542378D8, &qword_2542378E0, MEMORY[0x24BDB9658]);
    v17 = sub_232E6F030();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    v30 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238450);
    v18 = v27;
    sub_232E6F03C();
    sub_232DDF49C(&qword_2542378B8, &qword_2542378C0, MEMORY[0x24BDB94C8]);
    v19 = v23;
    v3 = sub_232E6F030();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v19);
  }
  return v3;
}

void sub_232DE3170(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_232DE31C0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;

  if (qword_254238030 != -1)
    swift_once();
  v6 = sub_232E6EF28();
  __swift_project_value_buffer(v6, (uint64_t)qword_254238010);
  v7 = sub_232E6EF10();
  v8 = sub_232E6F390();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v9 = 134349314;
    sub_232E6F480();
    *(_WORD *)(v9 + 12) = 2082;
    sub_232E6F4E0();
    swift_bridgeObjectRelease();
    sub_232E6F228();
    swift_bridgeObjectRelease();
    sub_232DE4A70(0xD000000000000011, 0x8000000232E7D420, &v14);
    sub_232E6F480();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232DDB000, v7, v8, "Client %{public}llu subscribing with options: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v13, -1, -1);
    MEMORY[0x23492A1F0](v9, -1, -1);
  }

  v10 = (uint64_t *)(a3 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_subscriptions);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *v10;
  *v10 = 0x8000000000000000;
  sub_232DDD7D4(a2 & 1, a1, isUniquelyReferenced_nonNull_native);
  *v10 = v14;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_232DE89A4();
}

uint64_t sub_232DE345C(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _OWORD v30[3];
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v26 = *v1;
  v3 = sub_232E6EF28();
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AE0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237888);
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a1[1];
  v35 = *a1;
  v36 = v9;
  v37 = a1[2];
  v38 = *((_QWORD *)a1 + 6);
  sub_232DE80CC((uint64_t)(v1 + 4), (uint64_t)v32);
  v10 = v33;
  v11 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  v30[0] = v35;
  v30[1] = v36;
  v30[2] = v37;
  v31 = v38;
  *(_QWORD *)&v30[0] = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v11 + 64))(v30, v10, v11);
  v29 = (id)v1[14];
  v12 = v29;
  v13 = sub_232E6F3B4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237920);
  sub_232DEA514();
  sub_232DDF49C(&qword_254237918, &qword_254237920, MEMORY[0x24BDB9AF8]);
  sub_232DDDAD8((unint64_t *)&qword_254237AE8, (uint64_t (*)(uint64_t))sub_232DEA514, MEMORY[0x24BEE5670]);
  sub_232E6F084();
  sub_232DDD798((uint64_t)v6, &qword_254237AE0);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = swift_allocObject();
  v17 = v26;
  v18 = *(_QWORD *)(v26 + 80);
  *(_QWORD *)(v16 + 16) = v18;
  v19 = *(_QWORD *)(v17 + 88);
  *(_QWORD *)(v16 + 24) = v19;
  *(_QWORD *)(v16 + 32) = v15;
  v20 = v36;
  *(_OWORD *)(v16 + 40) = v35;
  *(_OWORD *)(v16 + 56) = v20;
  *(_OWORD *)(v16 + 72) = v37;
  *(_QWORD *)(v16 + 88) = v38;
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v18;
  v22[3] = v19;
  v22[4] = v21;
  sub_232DDFF78((uint64_t)&v35);
  sub_232DDF49C(&qword_254237910, &qword_254237888, MEMORY[0x24BDB9A08]);
  v23 = v28;
  sub_232E6F054();
  swift_release();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v8, v23);
  swift_beginAccess();
  sub_232E6EF4C();
  swift_endAccess();
  return swift_release();
}

void sub_232DE3B68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _OWORD v12[2];

  v1 = (_QWORD *)sub_232E6F12C();
  v2 = *(v1 - 1);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  (*(void (**)(_QWORD *, _QWORD *))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  sub_232DE3F94();
  v7 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_connection);
  if (!v7)
    return;
  v1 = v7;
  if (objc_msgSend(v1, sel_remoteTarget))
  {
    sub_232E6F498();

    swift_unknownObjectRelease();
    sub_232DDD798((uint64_t)v12, &qword_2542382E8);
    return;
  }
  memset(v12, 0, sizeof(v12));
  sub_232DDD798((uint64_t)v12, &qword_2542382E8);
  objc_msgSend(v1, sel_activate);
  if (qword_254238058 != -1)
    goto LABEL_11;
LABEL_6:
  v8 = sub_232E6EF28();
  __swift_project_value_buffer(v8, (uint64_t)qword_254238040);
  v9 = sub_232E6EF10();
  v10 = sub_232E6F390();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_232DDB000, v9, v10, "Activated ActivityClient connection", v11, 2u);
    MEMORY[0x23492A1F0](v11, -1, -1);
  }

}

uint64_t sub_232DE3D5C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;

  if (qword_254238030 != -1)
    swift_once();
  v5 = sub_232E6EF28();
  __swift_project_value_buffer(v5, (uint64_t)qword_254238010);
  swift_bridgeObjectRetain_n();
  v6 = sub_232E6EF10();
  v7 = sub_232E6F390();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136446210;
    type metadata accessor for SubscribedActivity(0);
    swift_bridgeObjectRetain();
    v10 = sub_232E6F174();
    v12 = v11;
    swift_bridgeObjectRelease();
    sub_232DE4A70(v10, v12, &v14);
    sub_232E6F480();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232DDB000, v6, v7, "Sending activity changes: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v9, -1, -1);
    MEMORY[0x23492A1F0](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v14 = a1;
  result = sub_232E6EF94();
  if (a3)
  {
    swift_retain();
    a3(0);
    return sub_232DF5030((uint64_t)a3);
  }
  return result;
}

void sub_232DE3F94()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232DEAF98();
    v9 = (void *)sub_232E6F438();
    if (v9)
    {
      v10 = *(void **)&v1[v8];
      *(_QWORD *)&v1[v8] = v9;
      v11 = v9;

      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v1;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = sub_232DEB5E8;
      *(_QWORD *)(v13 + 24) = v12;
      aBlock[4] = sub_232DE068C;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_19;
      v14 = _Block_copy(aBlock);
      v1;
      swift_retain();
      swift_release();
      objc_msgSend(v11, sel_configureConnection_, v14);
      _Block_release(v14);
      LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v14 & 1) == 0)
      {
        sub_232DE29D8();
        swift_release();

        return;
      }
LABEL_8:
      __break(1u);
    }
  }
}

uint64_t sub_232DE41BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  objc_class *v11;
  char *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];
  objc_super v24;

  v1 = v0;
  v2 = sub_232E6F3C0();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_232E6F3A8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_connection;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_connection] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_serverStartupToken] = -1;
  v20 = OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue;
  sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v9 = v0;
  sub_232E6F0F0();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8((unint64_t *)&qword_254238620, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DEA598();
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v4, *MEMORY[0x24BEE5758], v22);
  *(_QWORD *)&v0[v20] = sub_232E6F3F0();
  *(_QWORD *)&v9[OBJC_IVAR____TtC11ActivityKit19ActivityInputClient__queue_ephemeralActivityRequests] = MEMORY[0x24BEE4B00];
  v10 = *(void **)&v0[v8];
  *(_QWORD *)&v1[v8] = 0;

  v11 = (objc_class *)type metadata accessor for ActivityInputClient();
  v24.receiver = v9;
  v24.super_class = v11;
  v12 = (char *)objc_msgSendSuper2(&v24, sel_init);
  v13 = *(NSObject **)&v12[OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_232DEB59C;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_232DF9DAC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_39;
  v16 = _Block_copy(aBlock);
  v17 = v12;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v13 & 1) == 0)
    return (uint64_t)v17;
  __break(1u);
  return result;
}

uint64_t sub_232DE44F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD *v3;
  os_unfair_lock_s *v4;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = (_QWORD *)result;
    v4 = *(os_unfair_lock_s **)(*(_QWORD *)(result + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_232DE4584(v3, v1);
    os_unfair_lock_unlock(v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_232DE4584(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  uint64_t result;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  int64_t v46;
  _QWORD *v47;
  int64_t v48;

  v47 = a1 + 9;
  swift_beginAccess();
  a1[9] = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v4 = a1[10];
  v5 = a1[11];
  *((_OWORD *)a1 + 5) = xmmword_232E70D10;
  sub_232DE4A18(v4, v5);
  v44 = a1;
  v45 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  v43 = a1 + 12;
  swift_beginAccess();
  v9 = 0;
  v46 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_22;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_42;
    if (v14 >= v46)
      return swift_release();
    v15 = *(_QWORD *)(v45 + 8 * v14);
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v46)
        return swift_release();
      v15 = *(_QWORD *)(v45 + 8 * v9);
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v46)
          return swift_release();
        v15 = *(_QWORD *)(v45 + 8 * v9);
        if (!v15)
          break;
      }
    }
LABEL_21:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_22:
    v17 = 16 * v13;
    v18 = (uint64_t *)(*(_QWORD *)(a2 + 48) + v17);
    v20 = *v18;
    v19 = v18[1];
    v21 = (uint64_t *)(*(_QWORD *)(a2 + 56) + v17);
    v23 = *v21;
    v22 = v21[1];
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v23, v22);
    if ((sub_232E6F240() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v10 = v44[10];
      v11 = v44[11];
      v44[10] = v23;
      v44[11] = v22;
      sub_232DE4A2C(v23, v22);
      sub_232DE4A18(v10, v11);
      sub_232E6EF94();
      goto LABEL_5;
    }
    v48 = v9;
    v24 = a2;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v23, v22);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = (_QWORD *)*v47;
    *v47 = 0x8000000000000000;
    v28 = sub_232DE0F18(v20, v19);
    v29 = v26[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v32 = v27;
    if (v26[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v27 & 1) != 0)
          goto LABEL_30;
      }
      else
      {
        sub_232E1232C();
        if ((v32 & 1) != 0)
          goto LABEL_30;
      }
    }
    else
    {
      sub_232E11318(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_232DE0F18(v20, v19);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_45;
      v28 = v33;
      if ((v32 & 1) != 0)
      {
LABEL_30:
        v35 = v26[7] + 16 * v28;
        sub_232DE8D98(*(_QWORD *)v35, *(_QWORD *)(v35 + 8));
        *(_QWORD *)v35 = v23;
        *(_QWORD *)(v35 + 8) = v22;
        goto LABEL_34;
      }
    }
    v26[(v28 >> 6) + 8] |= 1 << v28;
    v36 = (uint64_t *)(v26[6] + 16 * v28);
    *v36 = v20;
    v36[1] = v19;
    v37 = (uint64_t *)(v26[7] + 16 * v28);
    *v37 = v23;
    v37[1] = v22;
    v38 = v26[2];
    v39 = __OFADD__(v38, 1);
    v40 = v38 + 1;
    if (v39)
      goto LABEL_43;
    v26[2] = v40;
    swift_bridgeObjectRetain();
LABEL_34:
    *v47 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    a2 = v24;
    v9 = v48;
    if (*(_QWORD *)(*v43 + 16))
    {
      swift_bridgeObjectRetain();
      sub_232DE0F18(v20, v19);
      if ((v41 & 1) != 0)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_getObjectType();
        v9 = v48;
        sub_232E6F024();
        swift_unknownObjectRelease();
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_5:
    sub_232DE8D98(v23, v22);
  }
  v16 = v14 + 3;
  if (v16 >= v46)
    return swift_release();
  v15 = *(_QWORD *)(v45 + 8 * v16);
  if (v15)
  {
    v9 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v46)
      return swift_release();
    v15 = *(_QWORD *)(v45 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_232E6F714();
  __break(1u);
  return result;
}

uint64_t sub_232DE4A18(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_232DE8D98(a1, a2);
  return a1;
}

uint64_t sub_232DE4A2C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_232DE4A70(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_232DE4B7C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_232DE4B40((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_232DE4B40((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_232DE4B40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_232DE4B7C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_232E6F48C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_232DE4D34(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_232E6F528();
  if (!v8)
  {
    sub_232E6F570();
    __break(1u);
LABEL_17:
    result = sub_232E6F5B8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_232DE4D34(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_232DE4DC8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_232E2A3DC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_232E2A3DC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_232DE4DC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_232DE4F3C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_232E6F4EC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_232E6F570();
      __break(1u);
LABEL_10:
      v2 = sub_232E6F234();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_232E6F5B8();
    __break(1u);
LABEL_14:
    result = sub_232E6F570();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_232DE4F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542383B0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_232DE4FA0(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  __int128 v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  unint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _BOOL8 v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t (*v114)(uint64_t);
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t result;
  int64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t);
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  int64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  uint64_t aBlock[7];
  unint64_t v146;

  v121 = a4;
  v120 = a3;
  LODWORD(v135) = a2;
  v127 = sub_232E6F0D8();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v125 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_232E6F108();
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v122 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542380F0);
  MEMORY[0x24BDAC7A8](v7);
  v134 = (uint64_t)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for SubscribedActivity(0);
  v142 = *(_QWORD *)(v140 - 8);
  v9 = MEMORY[0x24BDAC7A8](v140);
  v141 = (uint64_t)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v139 = (uint64_t)&v119 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t)&v119 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542380F8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v136 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v137 = v14;
  v138 = (int64_t *)((char *)&v119 - v18);
  v19 = *a1;
  v20 = *(_QWORD *)(*a1 + 16);
  if (!v20)
  {
    swift_bridgeObjectRetain();
    v22 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_18:
    swift_bridgeObjectRelease();
    v21 = v128;
    if (qword_254238030 == -1)
      goto LABEL_19;
    goto LABEL_78;
  }
  swift_bridgeObjectRetain_n();
  v133 = v19;
  v21 = (uint64_t (*)(uint64_t))(v19 + 40);
  v22 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v14 = *((_QWORD *)v21 - 1);
    v143 = *(_OWORD *)v21;
    v24 = v143;
    swift_bridgeObjectRetain_n();
    v25 = *((_QWORD *)&v143 + 1);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = (uint64_t)v22;
    v28 = sub_232DE0F18(v14, v24);
    v29 = v22[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (v22[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v22 = (_QWORD *)aBlock[0];
        if ((v27 & 1) == 0)
          goto LABEL_12;
      }
      else
      {
        sub_232E11948();
        v22 = (_QWORD *)aBlock[0];
        if ((v32 & 1) == 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_232E10600(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_232DE0F18(v14, v24);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_80;
      v28 = v33;
      v22 = (_QWORD *)aBlock[0];
      if ((v32 & 1) == 0)
      {
LABEL_12:
        v22[(v28 >> 6) + 8] |= 1 << v28;
        v35 = (uint64_t *)(v22[6] + 16 * v28);
        *v35 = v14;
        v35[1] = v24;
        v36 = v22[7] + 24 * v28;
        *(_QWORD *)v36 = v14;
        *(_OWORD *)(v36 + 8) = v143;
        v37 = v22[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_75;
        v22[2] = v39;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    v23 = (uint64_t *)(v22[7] + 24 * v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v23 = v14;
    v23[1] = v24;
    v23[2] = v25;
LABEL_4:
    v21 = (uint64_t (*)(uint64_t))((char *)v21 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v20)
    {
      swift_bridgeObjectRelease();
      v14 = v137;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
  do
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    swift_once();
LABEL_19:
    v40 = sub_232E6EF28();
    v41 = __swift_project_value_buffer(v40, (uint64_t)qword_254238010);
    swift_bridgeObjectRetain_n();
    v133 = v41;
    v42 = sub_232E6EF10();
    v43 = sub_232E6F390();
    v44 = os_log_type_enabled(v42, v43);
    v45 = MEMORY[0x24BEE4AD8];
    if (v44)
    {
      v46 = MEMORY[0x24BEE4AD8];
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      aBlock[0] = v48;
      *(_DWORD *)v47 = 136446210;
      *(_QWORD *)&v143 = v47 + 4;
      swift_bridgeObjectRetain();
      v49 = sub_232E6F18C();
      v51 = v50;
      swift_bridgeObjectRelease();
      v52 = v49;
      v14 = v137;
      aBlock[6] = sub_232DE4A70(v52, v51, aBlock);
      sub_232E6F480();
      swift_bridgeObjectRelease_n();
      v45 = v46;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232DDB000, v42, v43, "Activities changed: %{public}s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v48, -1, -1);
      MEMORY[0x23492A1F0](v47, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v53 = MEMORY[0x24BEE4AF8];
    v146 = sub_232DEA908(MEMORY[0x24BEE4AF8]);
    MEMORY[0x24BDAC7A8](v146);
    *(&v119 - 2) = (int64_t)v21;
    *(&v119 - 1) = (int64_t)&v146;
    sub_232DF4DAC((uint64_t)v22, (void (*)(uint64_t, uint64_t, _QWORD *))sub_232DF4DA4);
    v54 = v136;
    if ((v135 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_72;
    }
    v55 = (uint64_t *)((char *)v21
                    + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_activities);
    swift_beginAccess();
    v56 = *v55;
    v57 = *(_QWORD *)(*v55 + 64);
    v129 = *v55 + 64;
    v58 = 1 << *(_BYTE *)(v56 + 32);
    v59 = -1;
    if (v58 < 64)
      v59 = ~(-1 << v58);
    v60 = v59 & v57;
    v132 = (unint64_t)(v58 + 63) >> 6;
    v119 = v132 - 1;
    v135 = v56;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v143 = 0;
    *(_QWORD *)&v61 = 136446210;
    v131 = v61;
    v130 = v45 + 8;
    if (v60)
    {
      while (1)
      {
        v62 = __clz(__rbit64(v60));
        v60 &= v60 - 1;
        v21 = (uint64_t (*)(uint64_t))v142;
        v63 = v62 | ((_QWORD)v143 << 6);
LABEL_30:
        v64 = *(_QWORD *)(v135 + 56);
        v65 = (_QWORD *)(*(_QWORD *)(v135 + 48) + 16 * v63);
        v66 = v65[1];
        *v54 = *v65;
        v54[1] = v66;
        v67 = v64 + *((_QWORD *)v21 + 9) * v63;
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238100);
        sub_232DED470(v67, (uint64_t)v54 + *(int *)(v68 + 48), type metadata accessor for SubscribedActivity);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v54, 0, 1, v68);
        swift_bridgeObjectRetain();
        v69 = v138;
LABEL_51:
        sub_232DE939C((uint64_t)v54, (uint64_t)v69, &qword_2542380F8);
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238100);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 48))(v69, 1, v76) == 1)
          break;
        v78 = *v69;
        v77 = v69[1];
        sub_232DEDD20((uint64_t)v69 + *(int *)(v76 + 48), v14, type metadata accessor for SubscribedActivity);
        if (v22[2]
          && (swift_bridgeObjectRetain(), sub_232DE0F18(v78, v77),
                                          v80 = v79,
                                          swift_bridgeObjectRelease(),
                                          (v80 & 1) != 0))
        {
          sub_232DF51B8(v14, type metadata accessor for SubscribedActivity);
          swift_bridgeObjectRelease();
          v54 = v136;
          if (!v60)
            goto LABEL_33;
        }
        else
        {
          swift_bridgeObjectRetain_n();
          v81 = sub_232E6EF10();
          v82 = sub_232E6F390();
          if (os_log_type_enabled(v81, v82))
          {
            v83 = swift_slowAlloc();
            v84 = swift_slowAlloc();
            aBlock[0] = v84;
            *(_DWORD *)v83 = v131;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v83 + 4) = sub_232DE4A70(v78, v77, aBlock);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_232DDB000, v81, v82, "Activity disappeared from daemon: %{public}s", (uint8_t *)v83, 0xCu);
            swift_arrayDestroy();
            v85 = v84;
            v14 = v137;
            MEMORY[0x23492A1F0](v85, -1, -1);
            MEMORY[0x23492A1F0](v83, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v87 = v139;
          v86 = v140;
          sub_232DED470(v14 + *(int *)(v140 + 24), v139 + *(int *)(v140 + 24), (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
          v88 = *(int *)(v86 + 28);
          v89 = *(_QWORD *)(v14 + v88);
          *(_QWORD *)v87 = v78;
          *(_QWORD *)(v87 + 8) = v77;
          *(_BYTE *)(v87 + 16) = 2;
          *(_QWORD *)(v87 + v88) = v89;
          sub_232DED470(v87, v141, type metadata accessor for SubscribedActivity);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v90 = swift_isUniquelyReferenced_nonNull_native();
          v91 = v146;
          aBlock[0] = v146;
          v146 = 0x8000000000000000;
          v93 = sub_232DE0F18(v78, v77);
          v94 = *(_QWORD *)(v91 + 16);
          v95 = (v92 & 1) == 0;
          v96 = v94 + v95;
          if (__OFADD__(v94, v95))
            goto LABEL_74;
          v14 = v92;
          if (*(_QWORD *)(v91 + 24) >= v96)
          {
            if ((v90 & 1) == 0)
              sub_232E11934();
          }
          else
          {
            sub_232E105EC(v96, v90);
            v97 = sub_232DE0F18(v78, v77);
            if ((v14 & 1) != (v98 & 1))
              goto LABEL_80;
            v93 = v97;
          }
          v99 = (_QWORD *)aBlock[0];
          if ((v14 & 1) != 0)
          {
            v21 = (uint64_t (*)(uint64_t))*((_QWORD *)v21 + 9);
            sub_232DF4FEC(v141, *(_QWORD *)(aBlock[0] + 56) + (_QWORD)v21 * v93);
          }
          else
          {
            *(_QWORD *)(aBlock[0] + 8 * (v93 >> 6) + 64) |= 1 << v93;
            v100 = (uint64_t *)(v99[6] + 16 * v93);
            *v100 = v78;
            v100[1] = v77;
            v21 = (uint64_t (*)(uint64_t))*((_QWORD *)v21 + 9);
            sub_232DEDD20(v141, v99[7] + (_QWORD)v21 * v93, type metadata accessor for SubscribedActivity);
            v101 = v99[2];
            v38 = __OFADD__(v101, 1);
            v102 = v101 + 1;
            if (v38)
              goto LABEL_77;
            v99[2] = v102;
            swift_bridgeObjectRetain();
          }
          v146 = (unint64_t)v99;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          swift_bridgeObjectRetain();
          v103 = sub_232DE0F18(v78, v77);
          v105 = v104;
          swift_bridgeObjectRelease();
          v14 = v137;
          if ((v105 & 1) != 0)
          {
            v106 = swift_isUniquelyReferenced_nonNull_native();
            v107 = *v55;
            v144 = *v55;
            *v55 = 0x8000000000000000;
            if ((v106 & 1) == 0)
            {
              sub_232E11934();
              v107 = v144;
            }
            swift_bridgeObjectRelease();
            v108 = *(_QWORD *)(v107 + 56) + (_QWORD)v21 * v103;
            v71 = v134;
            v21 = type metadata accessor for SubscribedActivity;
            sub_232DEDD20(v108, v134, type metadata accessor for SubscribedActivity);
            sub_232DF8F0C(v103, v107);
            *v55 = v107;
            swift_bridgeObjectRelease();
            v70 = 0;
          }
          else
          {
            v70 = 1;
            v71 = v134;
            v21 = type metadata accessor for SubscribedActivity;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56))(v71, v70, 1, v140);
          swift_bridgeObjectRelease();
          sub_232DDD798(v71, &qword_2542380F0);
          swift_endAccess();
          sub_232DF51B8(v139, type metadata accessor for SubscribedActivity);
          sub_232DF51B8(v14, type metadata accessor for SubscribedActivity);
          v54 = v136;
          if (!v60)
            goto LABEL_33;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      v21 = v128;
      v53 = MEMORY[0x24BEE4AF8];
LABEL_72:
      v109 = v146;
      v110 = (_QWORD *)swift_allocObject();
      v110[2] = v109;
      v110[3] = v21;
      v111 = v120;
      v112 = v121;
      v110[4] = v120;
      v110[5] = v112;
      aBlock[4] = (uint64_t)sub_232DEAB50;
      aBlock[5] = (uint64_t)v110;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_232DDE158;
      aBlock[3] = (uint64_t)&block_descriptor;
      v113 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      v114 = v21;
      sub_232DEA504(v111);
      v115 = v122;
      sub_232E6F0E4();
      v144 = v53;
      sub_232DDDAD8(&qword_2542382C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D0);
      sub_232DDF49C(&qword_2542383A8, &qword_2542382D0, MEMORY[0x24BEE12C8]);
      v116 = v125;
      v117 = v127;
      sub_232E6F4A4();
      MEMORY[0x234929818](0, v115, v116, v113);
      _Block_release(v113);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v116, v117);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v115, v124);
      swift_release();
      return swift_bridgeObjectRelease();
    }
LABEL_33:
    v72 = v143 + 1;
  }
  while (__OFADD__((_QWORD)v143, 1));
  v69 = v138;
  v21 = (uint64_t (*)(uint64_t))v142;
  if (v72 >= v132)
    goto LABEL_50;
  v73 = *(_QWORD *)(v129 + 8 * v72);
  if (v73)
  {
LABEL_36:
    v60 = (v73 - 1) & v73;
    v63 = __clz(__rbit64(v73)) + (v72 << 6);
    *(_QWORD *)&v143 = v72;
    goto LABEL_30;
  }
  v74 = v143 + 2;
  *(_QWORD *)&v143 = v143 + 1;
  if (v72 + 1 >= v132)
    goto LABEL_50;
  v73 = *(_QWORD *)(v129 + 8 * v74);
  if (v73)
  {
LABEL_39:
    v72 = v74;
    goto LABEL_36;
  }
  *(_QWORD *)&v143 = v72 + 1;
  if (v72 + 2 >= v132)
    goto LABEL_50;
  v73 = *(_QWORD *)(v129 + 8 * (v72 + 2));
  if (v73)
  {
    v72 += 2;
    goto LABEL_36;
  }
  v74 = v72 + 3;
  *(_QWORD *)&v143 = v72 + 2;
  if (v72 + 3 >= v132)
  {
LABEL_50:
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238100);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v54, 1, 1, v75);
    v60 = 0;
    goto LABEL_51;
  }
  v73 = *(_QWORD *)(v129 + 8 * v74);
  if (v73)
    goto LABEL_39;
  while (1)
  {
    v72 = v74 + 1;
    if (__OFADD__(v74, 1))
      break;
    if (v72 >= v132)
    {
      *(_QWORD *)&v143 = v119;
      goto LABEL_50;
    }
    v73 = *(_QWORD *)(v129 + 8 * v72);
    ++v74;
    if (v73)
      goto LABEL_36;
  }
  __break(1u);
LABEL_80:
  result = sub_232E6F714();
  __break(1u);
  return result;
}

uint64_t sub_232DE5E70()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  objc_class *v12;
  char *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];
  objc_super v25;

  v1 = sub_232E6F3C0();
  v22 = *(_QWORD *)(v1 - 8);
  v23 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6F3A8();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient__pushTokenPublisher;
  v8 = v0;
  v9 = MEMORY[0x24BEE4AF8];
  aBlock[0] = sub_232DE6200(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238488);
  swift_allocObject();
  *(_QWORD *)&v0[v7] = sub_232E6F000();
  v10 = OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_connection;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_connection] = 0;
  *(_DWORD *)&v8[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_serverStartupToken] = -1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient__queue_pushTokens] = MEMORY[0x24BEE4B00];
  v21 = OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue;
  sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  sub_232E6F0E4();
  aBlock[0] = v9;
  sub_232DDDAD8((unint64_t *)&qword_254238620, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v3, *MEMORY[0x24BEE5750], v23);
  *(_QWORD *)&v8[v21] = sub_232E6F3F0();
  v11 = *(void **)&v8[v10];
  *(_QWORD *)&v8[v10] = 0;

  v12 = (objc_class *)type metadata accessor for ActivityPushTokenClient();
  v25.receiver = v8;
  v25.super_class = v12;
  v13 = (char *)objc_msgSendSuper2(&v25, sel_init);
  v14 = *(NSObject **)&v13[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_232DEB404;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_232DDD4AC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_40;
  v17 = _Block_copy(aBlock);
  v18 = v13;
  swift_retain();
  swift_release();
  dispatch_sync(v14, v17);

  _Block_release(v17);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v14 & 1) == 0)
    return (uint64_t)v18;
  __break(1u);
  return result;
}

unint64_t sub_232DE6200(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD870);
  v2 = (_QWORD *)sub_232E6F5AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v7, v8);
    result = sub_232DE0F18(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_232DE6324(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256012448);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_2560135E8);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_queue));
  v18 = sub_232DEA9C4;
  v19 = 0;
  v10 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_12;
  v11 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v18 = sub_232E17348;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_15_0;
  v12 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  v18 = sub_232E17354;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_18_0;
  v13 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInvalidationHandler_, v13);
  _Block_release(v13);

}

uint64_t sub_232DE65A8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  char *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t result;
  _QWORD v28[5];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];
  objc_super v33;

  v31 = a1;
  v30 = sub_232E6F3C0();
  v2 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_232E6F3A8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_activityDiffPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238410);
  swift_allocObject();
  v9 = v1;
  *(_QWORD *)&v1[v8] = sub_232E6EFAC();
  v10 = OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__activityPublisher;
  v11 = MEMORY[0x24BEE4AF8];
  aBlock[0] = sub_232DEA908(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542384A0);
  swift_allocObject();
  *(_QWORD *)&v9[v10] = sub_232E6F000();
  *(_DWORD *)&v9[OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_serverStartupToken] = -1;
  v12 = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v9[OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_activities] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v9[OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_subscriptions] = v12;
  v29 = OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue;
  v28[4] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  sub_232E6F0E4();
  aBlock[0] = v11;
  v28[2] = sub_232DDDAD8((unint64_t *)&qword_254238620, v6, MEMORY[0x24BEE5698]);
  v28[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  v28[3] = sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  v13 = *MEMORY[0x24BEE5750];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v15 = v30;
  v14(v4, v13, v30);
  *(_QWORD *)&v9[v29] = sub_232E6F3F0();
  v29 = OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_calloutQueue;
  sub_232E6F0E4();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232E6F4A4();
  v14(v4, v13, v15);
  *(_QWORD *)&v9[v29] = sub_232E6F3F0();
  v16 = &v9[OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_target];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238440);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, v31, v17);

  v20 = (objc_class *)type metadata accessor for Singleton();
  v33.receiver = v9;
  v33.super_class = v20;
  v21 = (char *)objc_msgSendSuper2(&v33, sel_init);
  v22 = *(NSObject **)&v21[OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue];
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v21;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_232DEAADC;
  *(_QWORD *)(v24 + 24) = v23;
  aBlock[4] = sub_232DDD4AC;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_47;
  v25 = _Block_copy(aBlock);
  v26 = v21;
  swift_retain();
  swift_release();
  dispatch_sync(v22, v25);

  _Block_release(v25);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v22 & 1) == 0)
    return (uint64_t)v26;
  __break(1u);
  return result;
}

uint64_t sub_232DE6A54(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  char *v30;
  char *v31;
  char *v32;
  uint8_t *v34;
  uint64_t v35;
  id v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_232E6F0D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_232E6F108();
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_232E6F12C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint8_t **)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)&v2[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue];
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  v16 = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) != 0)
  {
    v37 = v7;
    if (qword_2542380A0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v36 = v15;
  v17 = sub_232E6EF28();
  __swift_project_value_buffer(v17, (uint64_t)qword_254238080);
  swift_bridgeObjectRetain_n();
  v18 = sub_232E6EF10();
  v19 = sub_232E6F390();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v35 = v4;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)v21 = 136446210;
    v34 = v21 + 4;
    swift_bridgeObjectRetain();
    v23 = sub_232E6F174();
    v24 = v5;
    v26 = v25;
    swift_bridgeObjectRelease();
    v41 = sub_232DE4A70(v23, v26, aBlock);
    sub_232E6F480();
    swift_bridgeObjectRelease_n();
    v5 = v24;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232DDB000, v18, v19, "Push tokens changed: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v22, -1, -1);
    v27 = v21;
    v4 = v35;
    MEMORY[0x23492A1F0](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(_QWORD *)&v2[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient__queue_pushTokens] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v2;
  *(_QWORD *)(v28 + 24) = a1;
  aBlock[4] = (uint64_t)sub_232DEB4CC;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_232DDE158;
  aBlock[3] = (uint64_t)&block_descriptor_9;
  v29 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v30 = v2;
  v31 = v38;
  sub_232E6F0E4();
  v41 = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8(&qword_2542382C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D0);
  sub_232DDF49C(&qword_2542383A8, &qword_2542382D0, MEMORY[0x24BEE12C8]);
  v32 = v37;
  sub_232E6F4A4();
  MEMORY[0x234929818](0, v31, v32, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v4);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v40);
  return swift_release();
}

void sub_232DE6EA4(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, void *);
  void *v18;
  void (*v19)(uint64_t);
  uint64_t v20;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256013BE8);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256013B68);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue));
  v19 = sub_232DEB5DC;
  v20 = 0;
  v10 = MEMORY[0x24BDAC760];
  v15 = MEMORY[0x24BDAC760];
  v16 = 1107296256;
  v17 = sub_232DE3170;
  v18 = &block_descriptor_22;
  v11 = _Block_copy(&v15);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = sub_232DF9A18;
  v20 = v12;
  v15 = v10;
  v16 = 1107296256;
  v17 = sub_232DE3170;
  v18 = &block_descriptor_26;
  v13 = _Block_copy(&v15);
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v13);
  _Block_release(v13);
  v19 = sub_232DF58EC;
  v20 = 0;
  v15 = v10;
  v16 = 1107296256;
  v17 = sub_232DE3170;
  v18 = &block_descriptor_29;
  v14 = _Block_copy(&v15);
  objc_msgSend(a1, sel_setInvalidationHandler_, v14);
  _Block_release(v14);

}

void sub_232DE7154(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v20 = sub_232DDF390;
  v21 = 0;
  v6 = MEMORY[0x24BDAC760];
  v16 = MEMORY[0x24BDAC760];
  v17 = 1107296256;
  v18 = sub_232DE1148;
  v19 = &block_descriptor_65;
  v7 = _Block_copy(&v16);
  v8 = &unk_256011DD8;
  swift_release();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_protocolForProtocol_interpreter_, v8, v7);

  _Block_release(v7);
  objc_msgSend(v5, sel_setClient_, v10);

  v11 = objc_msgSend(v9, sel_protocolForProtocol_, &unk_256013530);
  objc_msgSend(v5, sel_setServer_, v11);

  v12 = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v12);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue));
  v20 = sub_232DEAB3C;
  v21 = 0;
  v16 = v6;
  v17 = 1107296256;
  v18 = sub_232DE3170;
  v19 = &block_descriptor_68;
  v13 = _Block_copy(&v16);
  objc_msgSend(a1, sel_setActivationHandler_, v13);
  _Block_release(v13);
  v20 = sub_232DF44C0;
  v21 = 0;
  v16 = v6;
  v17 = 1107296256;
  v18 = sub_232DE3170;
  v19 = &block_descriptor_71;
  v14 = _Block_copy(&v16);
  objc_msgSend(a1, sel_setInterruptionHandler_, v14);
  _Block_release(v14);
  v20 = sub_232DF44CC;
  v21 = 0;
  v16 = v6;
  v17 = 1107296256;
  v18 = sub_232DE3170;
  v19 = &block_descriptor_74;
  v15 = _Block_copy(&v16);
  objc_msgSend(a1, sel_setInvalidationHandler_, v15);
  _Block_release(v15);

}

uint64_t sub_232DE743C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t result;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t aBlock;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;
  objc_super v34;

  v27 = sub_232E6F3C0();
  v1 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v5);
  v26 = OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_queue;
  v25[0] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v6 = v0;
  sub_232E6F0E4();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v27);
  *(_QWORD *)(v25[1] + v26) = sub_232E6F3F0();
  v7 = OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_connection;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_connection] = 0;
  *(_DWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_serverStartupToken] = -1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activities] = 0;
  v8 = OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activityDiffPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D8);
  swift_allocObject();
  *(_QWORD *)&v6[v8] = sub_232E6EFAC();
  v9 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = 0;

  v10 = (objc_class *)_s11ActivityKit9SingletonCMa_1();
  v34.receiver = v6;
  v34.super_class = v10;
  v11 = (char *)objc_msgSendSuper2(&v34, sel_init);
  v12 = OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_queue;
  v13 = *(NSObject **)&v11[OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_queue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v11;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_232DEA97C;
  *(_QWORD *)(v15 + 24) = v14;
  v32 = sub_232DDD4AC;
  v33 = v15;
  v16 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v29 = 1107296256;
  v30 = sub_232DDD48C;
  v31 = &block_descriptor_27;
  v17 = _Block_copy(&aBlock);
  v18 = v11;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v17);
  _Block_release(v17);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = *(NSObject **)&v11[v12];
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v18;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_232DEA99C;
    *(_QWORD *)(v22 + 24) = v21;
    v32 = sub_232DF9DAC;
    v33 = v22;
    aBlock = v16;
    v29 = 1107296256;
    v30 = sub_232DDD48C;
    v31 = &block_descriptor_37_1;
    v23 = _Block_copy(&aBlock);
    v24 = v18;
    swift_retain();
    swift_release();
    dispatch_sync(v20, v23);

    _Block_release(v23);
    LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    result = swift_release();
    if ((v20 & 1) == 0)
      return (uint64_t)v24;
  }
  __break(1u);
  return result;
}

uint64_t static Activity.activityUpdates.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_254238460 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  sub_232DE790C(v1, v1, v2);
  type metadata accessor for Activity(0, v1, v2, v3);
  return sub_232E6EEEC();
}

uint64_t sub_232DE790C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232DE7918(a1, a2, a3, sub_232DE797C);
}

uint64_t sub_232DE7918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  swift_retain();
  v8 = a4(a1, a2, a3);
  swift_release();
  return v8;
}

uint64_t sub_232DE797C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232DE7988(a1, a2, a3, (uint64_t (*)(void))sub_232DE7DB0);
}

uint64_t sub_232DE7988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5;

  sub_232DE79C0(a1, a2, a3);
  v5 = a4();
  swift_release();
  return v5;
}

uint64_t sub_232DE79C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v6;
  uint64_t v8;

  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_232DE7A44(v3, a2, a3, &v8);
  os_unfair_lock_unlock(v6);
  swift_release();
  return v8;
}

uint64_t sub_232DE7A44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  _UNKNOWN **v32;

  v8 = sub_232E6F7EC();
  v10 = v9;
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v11 + 16))
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
LABEL_9:
    sub_232DDD798((uint64_t)&v30, &qword_2542374A8);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v12 = sub_232DE0F18(v8, v10);
  if ((v13 & 1) != 0)
  {
    sub_232DE80CC(*(_QWORD *)(v11 + 56) + 40 * v12, (uint64_t)&v30);
  }
  else
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v31 + 1))
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542373F8);
  type metadata accessor for AttributeScopedActivityInstanceStore(0, a2, a3, v14);
  if ((swift_dynamicCast() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v16 = v29;
    goto LABEL_16;
  }
LABEL_10:
  v28 = a2;
  if (qword_255FFC8A8 != -1)
    swift_once();
  v17 = sub_232E6EF28();
  __swift_project_value_buffer(v17, (uint64_t)qword_255FFC890);
  swift_bridgeObjectRetain_n();
  v18 = sub_232E6EF10();
  v19 = sub_232E6F390();
  if (os_log_type_enabled(v18, v19))
  {
    v27 = a3;
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = v8;
    v22 = swift_slowAlloc();
    *(_QWORD *)&v30 = v22;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    sub_232DE4A70(v21, v10, (uint64_t *)&v30);
    sub_232E6F480();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_232DDB000, v18, v19, "Creating attributes table for attribute type: %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    v23 = v22;
    v8 = v21;
    MEMORY[0x23492A1F0](v23, -1, -1);
    v24 = v20;
    a3 = v27;
    MEMORY[0x23492A1F0](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v26 = type metadata accessor for AttributeScopedActivityInstanceStore(0, v28, a3, v25);
  sub_232DE80CC(a1 + 32, (uint64_t)&v30);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v16 = sub_232DE21A0(v8, v10, (uint64_t)&v30);
  *((_QWORD *)&v31 + 1) = v26;
  v32 = &off_250424B90;
  *(_QWORD *)&v30 = v16;
  swift_beginAccess();
  swift_retain();
  sub_232DE0004((uint64_t)&v30, v8, v10);
  result = swift_endAccess();
LABEL_16:
  *a4 = v16;
  return result;
}

uint64_t type metadata accessor for AttributeScopedActivityInstanceStore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AttributeScopedActivityInstanceStore);
}

uint64_t sub_232DE7DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Activity(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v5 = sub_232E6EFB8();
  MEMORY[0x23492A124](MEMORY[0x24BDB9CB0], v5);
  return sub_232E6F030();
}

_QWORD *sub_232DE7E28(void *a1, uint64_t a2, void *a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  __int128 v24[2];
  _QWORD v25[5];

  v22 = a1;
  v23 = a4;
  v21 = a3;
  v20 = sub_232E6F3C0();
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v11);
  v25[3] = type metadata accessor for ActivityOutputClient();
  v25[4] = &protocol witness table for ActivityOutputClient;
  v25[0] = a2;
  a5[2] = 0;
  sub_232DEA514();
  sub_232E6F0E4();
  *(_QWORD *)&v24[0] = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5750], v20);
  a5[12] = sub_232E6F3F0();
  sub_232DE80CC((uint64_t)v25, (uint64_t)(a5 + 4));
  v12 = v21;
  a5[3] = v21;
  type metadata accessor for ActivityPushTokenManager();
  v13 = swift_allocObject();
  v14 = v22;
  v15 = v12;
  a5[10] = sub_232DE06EC((uint64_t)v14, v13);
  sub_232DE80CC((uint64_t)v25, (uint64_t)v24);
  type metadata accessor for ActivityInstanceManager();
  v16 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v17 = swift_allocObject();
  v18 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v17 + 16) = v18;
  *v18 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v16 + 24) = sub_232DEA7C8(MEMORY[0x24BEE4AF8]);
  sub_232DEAC8C(v24, v16 + 32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  a5[9] = v16;
  a5[11] = v23;
  return a5;
}

uint64_t sub_232DE80CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t Activity.ActivityUpdates.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result;

  type metadata accessor for Activity(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  sub_232E6EEF8();
  result = sub_232E6EEE0();
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for Activity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity);
}

uint64_t ActivityOutputClient.observeDescriptorContentStates()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542378D0);
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v21 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237908);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542378F0);
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActivityOutputClient.observeActivities()();
  if (!v1)
  {
    v23 = v11;
    v19 = 0;
    v17[3] = sub_232E6EF40();
    v17[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B38);
    v17[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_254237930);
    v18 = v2;
    v12 = MEMORY[0x24BDB9AF8];
    v17[1] = sub_232DDF49C(&qword_254237B30, &qword_254237B38, MEMORY[0x24BDB9AF8]);
    sub_232DDF49C(&qword_254237928, &qword_254237930, v12);
    sub_232E6F0C0();
    swift_release();
    sub_232DDF49C(&qword_254237900, &qword_254237908, MEMORY[0x24BDB98F0]);
    sub_232DEA64C();
    sub_232E6F090();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_232DDF49C(&qword_2542378E8, &qword_2542378F0, MEMORY[0x24BDB9658]);
    v13 = sub_232E6F030();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
    v23 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238450);
    v14 = v21;
    sub_232E6F03C();
    sub_232DDF49C(&qword_2542378C8, &qword_2542378D0, MEMORY[0x24BDB94C8]);
    v15 = v18;
    v0 = sub_232E6F030();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v15);
  }
  return v0;
}

void ActivityOutputClient.observeActivities()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B50);
  v31 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B28);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD0);
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B10);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254238030 != -1)
    swift_once();
  v13 = sub_232E6EF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_254238010);
  v14 = sub_232E6EF10();
  v15 = sub_232E6F390();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_232DDB000, v14, v15, "Attempting to observe activities", v16, 2u);
    MEMORY[0x23492A1F0](v16, -1, -1);
  }

  v17 = *(os_unfair_lock_s **)(v1[4] + 16);
  swift_retain();
  os_unfair_lock_lock(v17);
  v18 = v1[6];
  if (__OFADD__(v18, 1))
  {
    __break(1u);
  }
  else
  {
    v1[6] = v18 + 1;
    os_unfair_lock_unlock(v17);
    v19 = swift_release();
    if (v18)
    {
LABEL_7:
      v20 = swift_allocObject();
      swift_weakInit();
      v21 = v1[3];
      v22 = (uint64_t *)(v21
                      + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_activities);
      swift_beginAccess();
      v39 = *v22;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254237B58);
      sub_232E6F018();
      v39 = *(_QWORD *)(v21
                      + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_activityDiffPublisher);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254238410);
      sub_232DDF49C(&qword_254237B48, &qword_254237B50, MEMORY[0x24BDB9DF8]);
      sub_232DDF49C(&qword_254237B40, &qword_254238410, MEMORY[0x24BDB9CB0]);
      sub_232E6F06C();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v2);
      sub_232DDF49C(&qword_254237B20, &qword_254237B28, MEMORY[0x24BDB9798]);
      v23 = sub_232E6F030();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
      v39 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254237B38);
      sub_232DDF49C(&qword_254237B30, &qword_254237B38, MEMORY[0x24BDB9AF8]);
      sub_232DEA74C();
      sub_232E6F090();
      swift_release();
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = sub_232DF484C;
      *(_QWORD *)(v24 + 24) = v20;
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = sub_232DF484C;
      *(_QWORD *)(v25 + 24) = v20;
      sub_232DDF49C(&qword_254237B18, &qword_254237AD0, MEMORY[0x24BDB9658]);
      swift_retain_n();
      v26 = v34;
      v27 = v35;
      sub_232E6F048();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v26);
      sub_232DDF49C(&qword_254237B08, &qword_254237B10, MEMORY[0x24BDB9568]);
      v28 = v37;
      sub_232E6F030();
      swift_release();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v28);
      return;
    }
    MEMORY[0x24BDAC7A8](v19);
    v29 = v38;
    sub_232E6F3D8();
    if (!v29)
    {
      v38 = 0;
      goto LABEL_7;
    }
  }
}

uint64_t sub_232DE89A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _BYTE *v28;
  uint64_t result;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35[5];

  v35[4] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_232DE8DDC();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = v0 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_subscriptions;
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      objc_msgSend(v3, sel_unsubscribe);
      v35[0] = (id)MEMORY[0x24BEE4AF8];
      sub_232DE4FA0((uint64_t *)v35, 0, 0, 0);
      return swift_unknownObjectRelease();
    }
    sub_232DE0AF8((char *)v35);
    sub_232E6EDD8();
    swift_allocObject();
    sub_232E6EDCC();
    sub_232DEB288();
    v5 = sub_232E6EDC0();
    if (!v1)
    {
      v7 = v5;
      v8 = v6;
      v9 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v7, v8);
      swift_release();
      v10 = sub_232E6EE44();
      v12 = v11;

      v13 = (void *)sub_232E6EE2C();
      v35[0] = 0;
      v14 = objc_msgSend(v3, sel_subscribeWithOptions_error_, v13, v35);

      v15 = v35[0];
      if (!v14)
      {
        v30 = v15;
        sub_232E6EDF0();

        swift_willThrow();
        sub_232DE8D98(v10, v12);
        return swift_unknownObjectRelease();
      }
      v16 = sub_232E6EE44();
      v18 = v17;

      v33 = v18;
      v34 = v16;
      v19 = (void *)sub_232E6EE2C();
      sub_232E6EDB4();
      swift_allocObject();
      sub_232E6EDA8();
      v20 = sub_232E6EE44();
      v22 = v21;
      sub_232DEBBB4();
      sub_232E6ED9C();
      sub_232DE8D98(v20, v22);
      swift_release();
      v23 = v35[0];
      if (v35[0])
      {

        v35[0] = v23;
        sub_232DE4FA0((uint64_t *)v35, 0, 0, 0);
        sub_232DE8D98(v10, v12);
        sub_232DE8D98(v34, v33);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      __break(1u);
    }
    v31 = swift_unexpectedError();
    __break(1u);
    sub_232DE8D98(v31, v32);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    if (qword_254238030 != -1)
      swift_once();
    v24 = sub_232E6EF28();
    __swift_project_value_buffer(v24, (uint64_t)qword_254238010);
    v25 = sub_232E6EF10();
    v26 = sub_232E6F378();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_232DDB000, v25, v26, "Remote target does not exist", v27, 2u);
      MEMORY[0x23492A1F0](v27, -1, -1);
    }

    sub_232DF50F4();
    swift_allocError();
    *v28 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_232DE8D98(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_232DE8DDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  int v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD v18[2];
  _OWORD v19[2];
  _BYTE v20[24];
  uint64_t v21;

  v1 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_254238440);
  v2 = *(v1 - 1);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_232E6F12C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v10 = v9;
  LOBYTE(v9) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  v11 = v0 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_target;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, _QWORD *))(v2 + 16))(v4, v11, v1);
  v12 = (*(uint64_t (**)(char *, _QWORD *))(v2 + 88))(v4, v1);
  if (v12 == *MEMORY[0x24BE854F8])
  {
    (*(void (**)(char *, _QWORD *))(v2 + 96))(v4, v1);
    return *(_QWORD **)v4;
  }
  if (v12 != *MEMORY[0x24BE854E8])
  {
    if (v12 != *MEMORY[0x24BE854F0])
      (*(void (**)(char *, _QWORD *))(v2 + 8))(v4, v1);
    return 0;
  }
  (*(void (**)(char *, _QWORD *))(v2 + 96))(v4, v1);
  v1 = *(_QWORD **)v4;
  sub_232DE90F8();
  if (objc_msgSend(v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_232DE939C((uint64_t)v19, (uint64_t)v20, &qword_2542382E8);
  if (v21)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238458);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return (_QWORD *)v18[1];
    }
  }
  else
  {
    sub_232DDD798((uint64_t)v20, &qword_2542382E8);
  }
  if (qword_254238030 != -1)
    goto LABEL_20;
LABEL_15:
  v14 = sub_232E6EF28();
  __swift_project_value_buffer(v14, (uint64_t)qword_254238010);
  v15 = sub_232E6EF10();
  v16 = sub_232E6F384();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_232DDB000, v15, v16, "ActivityOutputClient: Failed to cast connection to server interface protocol", v17, 2u);
    MEMORY[0x23492A1F0](v17, -1, -1);
  }

  return 0;
}

void sub_232DE90F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _OWORD v16[2];

  v1 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_254238440);
  v2 = *(v1 - 1);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (id *)((char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_232E6F12C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v10 = v9;
  LOBYTE(v9) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_7;
  }
  sub_232DE93E0();
  v11 = v0 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_target;
  swift_beginAccess();
  (*(void (**)(id *, uint64_t, _QWORD *))(v2 + 16))(v4, v11, v1);
  if ((*(unsigned int (**)(id *, _QWORD *))(v2 + 88))(v4, v1) != *MEMORY[0x24BE854E8])
  {
    (*(void (**)(id *, _QWORD *))(v2 + 8))(v4, v1);
    return;
  }
  (*(void (**)(id *, _QWORD *))(v2 + 96))(v4, v1);
  v1 = *v4;
  if (objc_msgSend(*v4, sel_remoteTarget))
  {
    sub_232E6F498();

    swift_unknownObjectRelease();
    sub_232DDD798((uint64_t)v16, &qword_2542382E8);
    return;
  }
  memset(v16, 0, sizeof(v16));
  sub_232DDD798((uint64_t)v16, &qword_2542382E8);
  objc_msgSend(v1, sel_activate);
  if (qword_254238030 != -1)
    goto LABEL_11;
LABEL_7:
  v12 = sub_232E6EF28();
  __swift_project_value_buffer(v12, (uint64_t)qword_254238010);
  v13 = sub_232E6EF10();
  v14 = sub_232E6F390();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_232DDB000, v13, v14, "Activated ActivityOutputClient connection", v15, 2u);
    MEMORY[0x23492A1F0](v15, -1, -1);
  }

}

uint64_t sub_232DE939C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_232DE93E0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  char *v26;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238440);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (id *)((char *)&aBlock[-1] - v7);
  v9 = sub_232E6F12C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  LOBYTE(v13) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  v15 = &v1[OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_target];
  swift_beginAccess();
  (*(void (**)(id *, char *, uint64_t))(v3 + 16))(v8, v15, v2);
  v16 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v8, v2);
  if (v16 == *MEMORY[0x24BE854F8])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v8, v2);
    swift_unknownObjectRelease();
    return;
  }
  v17 = *MEMORY[0x24BE854E8];
  if (v16 == (_DWORD)v17)
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v8, v2);

    return;
  }
  (*(void (**)(id *, uint64_t))(v3 + 8))(v8, v2);
  sub_232DE06B4(0, &qword_2542384C0);
  sub_232DEAF1C();
  v18 = sub_232E6F438();
  if (v18)
  {
    v19 = (void *)v18;
    v26 = v6;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v1;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_232DEAB48;
    *(_QWORD *)(v21 + 24) = v20;
    aBlock[4] = sub_232DE068C;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_232DE0650;
    aBlock[3] = &block_descriptor_56;
    v22 = _Block_copy(aBlock);
    v1;
    swift_retain();
    swift_release();
    objc_msgSend(v19, sel_configureConnection_, v22);
    _Block_release(v22);
    LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v22 & 1) == 0)
    {
      v23 = v26;
      *(_QWORD *)v26 = v19;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 104))(v23, v17, v2);
      swift_beginAccess();
      v24 = *(void (**)(char *, char *, uint64_t))(v3 + 40);
      v25 = v19;
      v24(v15, v23, v2);
      swift_endAccess();
      sub_232DE2BAC();
      swift_release();

      return;
    }
    goto LABEL_12;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BE854F0], v2);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 40))(v15, v6, v2);
  swift_endAccess();
}

void sub_232DE97AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _OWORD v12[2];

  v1 = (_QWORD *)sub_232E6F12C();
  v2 = *(v1 - 1);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  (*(void (**)(_QWORD *, _QWORD *))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  sub_232DE9990();
  v7 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_connection);
  if (!v7)
    return;
  v1 = v7;
  if (objc_msgSend(v1, sel_remoteTarget))
  {
    sub_232E6F498();

    swift_unknownObjectRelease();
    sub_232DDE4F0((uint64_t)v12);
    return;
  }
  memset(v12, 0, sizeof(v12));
  sub_232DDE4F0((uint64_t)v12);
  objc_msgSend(v1, sel_activate);
  if (qword_2542380A0 != -1)
    goto LABEL_11;
LABEL_6:
  v8 = sub_232E6EF28();
  __swift_project_value_buffer(v8, (uint64_t)qword_254238080);
  v9 = sub_232E6EF10();
  v10 = sub_232E6F390();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_232DDB000, v9, v10, "Activated ActivityPushTokenClient connection", v11, 2u);
    MEMORY[0x23492A1F0](v11, -1, -1);
  }

}

void sub_232DE9990()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232DEAD30();
    v9 = (void *)sub_232E6F438();
    if (v9)
    {
      v10 = *(void **)&v1[v8];
      *(_QWORD *)&v1[v8] = v9;
      v11 = v9;

      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v1;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = sub_232DEB4C4;
      *(_QWORD *)(v13 + 24) = v12;
      aBlock[4] = sub_232DE068C;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_16;
      v14 = _Block_copy(aBlock);
      v1;
      swift_retain();
      swift_release();
      objc_msgSend(v11, sel_configureConnection_, v14);
      _Block_release(v14);
      LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v14 & 1) == 0)
      {
        sub_232DE2694();
        swift_release();

        return;
      }
LABEL_8:
      __break(1u);
    }
  }
}

void sub_232DE9BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  _OWORD v9[2];

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    sub_232DE9D38();
    v7 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_connection);
    if (v7)
    {
      v8 = v7;
      if (objc_msgSend(v8, sel_remoteTarget))
      {
        sub_232E6F498();

        swift_unknownObjectRelease();
        sub_232DDE4F0((uint64_t)v9);
      }
      else
      {
        memset(v9, 0, sizeof(v9));
        sub_232DDE4F0((uint64_t)v9);
        objc_msgSend(v8, sel_activate);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_232DE9CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542382E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_232DE9D38()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_queue];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232DEACB4();
    v9 = (void *)sub_232E6F438();
    if (v9)
    {
      v10 = *(void **)&v1[v8];
      *(_QWORD *)&v1[v8] = v9;
      v11 = v9;

      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v1;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = sub_232DEA9D0;
      *(_QWORD *)(v13 + 24) = v12;
      aBlock[4] = sub_232DE068C;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_9;
      v14 = _Block_copy(aBlock);
      v1;
      swift_retain();
      swift_release();
      objc_msgSend(v11, sel_configureConnection_, v14);
      _Block_release(v14);
      LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v14 & 1) == 0)
      {
        sub_232DE24C0();
        swift_release();

        return;
      }
LABEL_8:
      __break(1u);
    }
  }
}

void sub_232DE9F60(void *a1, char *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v22 = sub_232DDE550;
  v23 = 0;
  v6 = MEMORY[0x24BDAC760];
  v18 = MEMORY[0x24BDAC760];
  v19 = 1107296256;
  v20 = sub_232DE1148;
  v21 = &block_descriptor_19_2;
  v7 = _Block_copy(&v18);
  v8 = &unk_256012660;
  swift_release();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_protocolForProtocol_interpreter_, v8, v7);

  _Block_release(v7);
  objc_msgSend(v5, sel_setClient_, v10);

  v11 = objc_msgSend(v9, sel_protocolForProtocol_, &unk_256013C88);
  objc_msgSend(v5, sel_setServer_, v11);

  v12 = objc_msgSend((id)objc_opt_self(), sel_utility);
  objc_msgSend(a1, sel_setServiceQuality_, v12);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)&a2[OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient_queue]);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  v22 = sub_232DEB4BC;
  v23 = v13;
  v18 = v6;
  v19 = 1107296256;
  v20 = sub_232DE3170;
  v21 = &block_descriptor_25_1;
  v14 = _Block_copy(&v18);
  v15 = a2;
  swift_release();
  objc_msgSend(a1, sel_setActivationHandler_, v14);
  _Block_release(v14);
  v22 = sub_232E234C4;
  v23 = 0;
  v18 = v6;
  v19 = 1107296256;
  v20 = sub_232DE3170;
  v21 = &block_descriptor_28_1;
  v16 = _Block_copy(&v18);
  objc_msgSend(a1, sel_setInterruptionHandler_, v16);
  _Block_release(v16);
  v22 = sub_232E234D0;
  v23 = 0;
  v18 = v6;
  v19 = 1107296256;
  v20 = sub_232DE3170;
  v21 = &block_descriptor_31;
  v17 = _Block_copy(&v18);
  objc_msgSend(a1, sel_setInvalidationHandler_, v17);
  _Block_release(v17);

}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23492A10C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t type metadata accessor for ActivityDescriptor()
{
  uint64_t result;

  result = qword_254238928;
  if (!qword_254238928)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23492A118](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23492A0B8](a1, v6, a5);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_232DEA498(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_232DEAC8C(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_232DEA504(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

unint64_t sub_232DEA514()
{
  unint64_t result;

  result = qword_254238480;
  if (!qword_254238480)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254238480);
  }
  return result;
}

unint64_t sub_232DEA550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254238620;
  if (!qword_254238620)
  {
    v1 = sub_232E6F3A8();
    result = MEMORY[0x23492A124](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_254238620);
  }
  return result;
}

unint64_t sub_232DEA598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254238610;
  if (!qword_254238610)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542384B0);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254238610);
  }
  return result;
}

uint64_t sub_232DEA5E4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254237FF0);
    v8 = a2();
    result = MEMORY[0x23492A124](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232DEA64C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254237940;
  if (!qword_254237940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254238450);
    v2 = sub_232DDDAD8(&qword_2542378B0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptorContentState, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254237940);
  }
  return result;
}

uint64_t sub_232DEA6C8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254238450);
    v10 = sub_232DDDAD8(a2, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptorContentState, a3);
    result = MEMORY[0x23492A124](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232DEA74C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254237B60;
  if (!qword_254237B60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254237B58);
    v2 = sub_232DDDAD8(&qword_254237AF0, type metadata accessor for SubscribedActivity, (uint64_t)&protocol conformance descriptor for SubscribedActivity);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE04D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254237B60);
  }
  return result;
}

unint64_t sub_232DEA7C8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237590);
  v2 = sub_232E6F5AC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_232DF5040(v6, (uint64_t)&v15, &qword_255FFE658);
    v7 = v15;
    v8 = v16;
    result = sub_232DE0F18(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_232DEAC8C(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_232DEA908(uint64_t a1)
{
  return sub_232DDFDE0(a1, &qword_254238608, &qword_254237810, type metadata accessor for SubscribedActivity);
}

void sub_232DEA924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254238448)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254238458);
    v0 = sub_232E6EF04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254238448);
  }
}

void sub_232DEA97C()
{
  sub_232DE9BB8();
}

void *sub_232DEA99C()
{
  uint64_t v0;

  return sub_232DE19B4(*(_QWORD *)(v0 + 16));
}

void sub_232DEA9C4(uint64_t a1)
{
  sub_232DE17C8(a1, "Frequent updates observation service: activated");
}

void sub_232DEA9D0(void *a1)
{
  uint64_t v1;

  sub_232DE6324(a1, *(_QWORD *)(v1 + 16));
}

void sub_232DEA9D8()
{
  unint64_t v0;

  sub_232DEA924();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for Singleton()
{
  uint64_t result;

  result = qword_2542385E8;
  if (!qword_2542385E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232DEAABC()
{
  uint64_t v0;

  return sub_232DE31C0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_232DEAADC()
{
  sub_232DE90F8();
}

void sub_232DEAAFC(_QWORD *a1@<X8>)
{
  sub_232DF1FAC((uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState, (SEL *)&selRef_activityDescriptorContentStatesWithError_, (void (*)(void))sub_232DEBD34, "Fetched descriptors for content states: %{public}s", a1);
}

void sub_232DEAB3C(uint64_t a1)
{
  sub_232DE16F4(a1, "Activated");
}

void sub_232DEAB48(void *a1)
{
  uint64_t v1;

  sub_232DE7154(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232DEAB50()
{
  uint64_t v0;

  return sub_232DE3D5C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32));
}

ValueMetadata *type metadata accessor for PushType()
{
  return &type metadata for PushType;
}

ValueMetadata *type metadata accessor for ProcessDescriptor()
{
  return &type metadata for ProcessDescriptor;
}

uint64_t ProcessDescriptor.appIntentExtensionBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t ProcessDescriptor.canContributeToAllActivities.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t ProcessDescriptor.isAppIntentsExtension.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 19) = result;
  return result;
}

uint64_t ProcessDescriptor.canEndAllActivities.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

void __swiftcall ProcessDescriptor.init(identifier:)(ActivityKit::ProcessDescriptor *__return_ptr retstr, Swift::String identifier)
{
  retstr->bundleIdentifier = identifier;
  *(_DWORD *)&retstr->canEndAllActivities = 0;
  retstr->appIntentExtensionBundleIdentifier.value._countAndFlagsBits = 0;
  retstr->appIntentExtensionBundleIdentifier.value._object = 0;
}

uint64_t ProcessDescriptor.canBypassActivityCountLimits.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 18) = result;
  return result;
}

ValueMetadata *type metadata accessor for SceneTarget()
{
  return &type metadata for SceneTarget;
}

uint64_t type metadata accessor for ActivityManager()
{
  return objc_opt_self();
}

uint64_t sub_232DEAC10()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for ActivityContent()
{
  JUMPOUT(0x23492A0B8);
}

ValueMetadata *type metadata accessor for ActivityChange()
{
  return &type metadata for ActivityChange;
}

unint64_t sub_232DEAC34()
{
  unint64_t result;

  result = qword_254237B00;
  if (!qword_254237B00)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityChange, &type metadata for ActivityChange);
    atomic_store(result, (unint64_t *)&qword_254237B00);
  }
  return result;
}

uint64_t type metadata accessor for ActivityChange.Change(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_254237C68);
}

uint64_t sub_232DEAC8C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

ValueMetadata *type metadata accessor for ActivityState()
{
  return &type metadata for ActivityState;
}

unint64_t sub_232DEACB4()
{
  unint64_t result;

  result = qword_2542382A0;
  if (!qword_2542382A0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityFrequentUpdatesObservationServiceDefinition, &type metadata for ActivityFrequentUpdatesObservationServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_2542382A0);
  }
  return result;
}

unint64_t sub_232DEACF8()
{
  return 0xD00000000000003BLL;
}

unint64_t static ActivityFrequentUpdatesObservationServiceDefinition.serviceName.getter()
{
  return 0xD00000000000003BLL;
}

unint64_t sub_232DEAD30()
{
  unint64_t result;

  result = qword_2542384A8;
  if (!qword_2542384A8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPushTokenServiceDefinition, &type metadata for ActivityPushTokenServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_2542384A8);
  }
  return result;
}

unint64_t sub_232DEAD74()
{
  return 0xD000000000000029;
}

unint64_t static ActivityPushTokenServiceDefinition.serviceName.getter()
{
  return 0xD000000000000029;
}

uint64_t _s11ActivityKit32ActivityAuthorizationOptionsTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_232DEADFC + 4 * byte_232E7BD75[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_232DEAE30 + 4 * byte_232E7BD70[v4]))();
}

uint64_t sub_232DEAE30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DEAE38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232DEAE40);
  return result;
}

uint64_t sub_232DEAE4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232DEAE54);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_232DEAE58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DEAE60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityPresentationOptions.ActivityPresentationDestination(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for ActivityAuthorizationOptionsType()
{
  return &type metadata for ActivityAuthorizationOptionsType;
}

_BYTE *sub_232DEAF14(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

unint64_t sub_232DEAF1C()
{
  unint64_t result;

  result = qword_254238588;
  if (!qword_254238588)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityOutputServiceDefinition, &type metadata for ActivityOutputServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_254238588);
  }
  return result;
}

unint64_t sub_232DEAF60()
{
  return 0xD00000000000001CLL;
}

unint64_t static ActivityOutputServiceDefinition.serviceName.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_232DEAF98()
{
  unint64_t result;

  result = qword_254238568;
  if (!qword_254238568)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityInputServiceDefinition, &type metadata for ActivityInputServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_254238568);
  }
  return result;
}

unint64_t sub_232DEAFDC()
{
  return 0xD00000000000001BLL;
}

unint64_t static ActivityInputServiceDefinition.serviceName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t storeEnumTagSinglePayload for ActivityDescriptorContentState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ActivityDescriptorContentState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232DEB02C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActivityDescriptor();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for OpaqueActivityContent();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivitySubscriptionOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232DEB110 + 4 * byte_232E72FA9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232DEB144 + 4 * byte_232E72FA4[v4]))();
}

uint64_t sub_232DEB144(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DEB14C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232DEB154);
  return result;
}

uint64_t sub_232DEB160(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232DEB168);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232DEB16C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DEB174(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivitySubscriptionOptions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_232DEB220@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActivitySubscriptionOptions.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for ActivitySubscriptionOptions()
{
  return &type metadata for ActivitySubscriptionOptions;
}

unint64_t sub_232DEB244()
{
  unint64_t result;

  result = qword_255FFBFB8;
  if (!qword_255FFBFB8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivitySubscriptionOptions, &type metadata for ActivitySubscriptionOptions);
    atomic_store(result, (unint64_t *)&qword_255FFBFB8);
  }
  return result;
}

unint64_t sub_232DEB288()
{
  unint64_t result;

  result = qword_254237FE8;
  if (!qword_254237FE8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivitySubscriptionOptions, &type metadata for ActivitySubscriptionOptions);
    atomic_store(result, (unint64_t *)&qword_254237FE8);
  }
  return result;
}

uint64_t sub_232DEB2CC()
{
  return 0x506564756C636E69;
}

ValueMetadata *type metadata accessor for ActivitySubscriptionOptions.CodingKeys()
{
  return &type metadata for ActivitySubscriptionOptions.CodingKeys;
}

unint64_t sub_232DEB308()
{
  unint64_t result;

  result = qword_254237FE0;
  if (!qword_254237FE0)
  {
    result = MEMORY[0x23492A124](&unk_232E73394, &type metadata for ActivitySubscriptionOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237FE0);
  }
  return result;
}

unint64_t sub_232DEB34C()
{
  unint64_t result;

  result = qword_254237FD8;
  if (!qword_254237FD8)
  {
    result = MEMORY[0x23492A124](&unk_232E733BC, &type metadata for ActivitySubscriptionOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237FD8);
  }
  return result;
}

unint64_t sub_232DEB390()
{
  unint64_t result;

  result = qword_254237FD0;
  if (!qword_254237FD0)
  {
    result = MEMORY[0x23492A124](&unk_232E73A7C, &type metadata for ActivitySubscriptionOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237FD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationOptions()
{
  return &type metadata for ActivityPresentationOptions;
}

uint64_t type metadata accessor for ActivityPushTokenManager()
{
  return objc_opt_self();
}

void sub_232DEB404()
{
  sub_232DE97AC();
}

uint64_t sub_232DEB444()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238488);
  sub_232DDF49C(&qword_254238498, &qword_254238488, MEMORY[0x24BDB9D10]);
  return sub_232E6F030();
}

void sub_232DEB4BC(uint64_t a1)
{
  uint64_t v1;

  sub_232DE2868(a1, *(_QWORD *)(v1 + 16));
}

void sub_232DEB4C4(void *a1)
{
  uint64_t v1;

  sub_232DE9F60(a1, *(char **)(v1 + 16));
}

uint64_t sub_232DEB4CC()
{
  return sub_232E6EFD0();
}

uint64_t type metadata accessor for ActivityInstanceManager()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ActivityAttributesType()
{
  return &type metadata for ActivityAttributesType;
}

uint64_t ActivityAttributesType.init<A>(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_232E6F7EC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for ActivityContentSource()
{
  return &type metadata for ActivityContentSource;
}

uint64_t sub_232DEB570(uint64_t a1)
{
  return ActivityOutputClient.observeDescriptorContentStates(matching:)(a1);
}

uint64_t sub_232DEB590@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_232DE1550(v1 + 16, a1);
}

void sub_232DEB59C()
{
  sub_232DE3B68();
}

void sub_232DEB5DC(uint64_t a1)
{
  sub_232DE1A74(a1, "ActivityClient Service: Activated");
}

void sub_232DEB5E8(void *a1)
{
  uint64_t v1;

  sub_232DE6EA4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for ActivityDescriptor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ActivityDescriptor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232DEB60C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for Activity.ActivityUpdates(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.ActivityUpdates);
}

uint64_t type metadata accessor for Activity.ActivityUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.ActivityUpdates.Iterator);
}

void sub_232DEB62C()
{
  unint64_t v0;

  sub_232DDE71C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for OpaqueActivityContent()
{
  uint64_t result;

  result = qword_2542383D8;
  if (!qword_2542383D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232DEB6E8()
{
  return swift_initClassMetadata2();
}

void sub_232DEB764(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  __int128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43[3];
  _QWORD v44[3];

  v3 = *v1;
  v4 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_QWORD *)((char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ActivityDescriptorContentState();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v1;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v1[9] + 16));
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = v40 + 11;
    v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v34[0] = a1;
    swift_bridgeObjectRetain();
    v42 = v12;
    swift_beginAccess();
    v41 = *(_QWORD *)(v8 + 72);
    *(_QWORD *)&v14 = 136446466;
    v35 = v14;
    v34[1] = MEMORY[0x24BEE4AD8] + 8;
    v36 = v10;
    v37 = v3;
    do
    {
      sub_232DED470(v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      sub_232DED470((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      sub_232DF51B8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      v16 = *v6;
      v17 = v6[1];
      swift_bridgeObjectRetain();
      sub_232DF51B8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      v18 = *v42;
      v43[0] = v16;
      v43[1] = v17;
      v20 = type metadata accessor for Activity(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v19);
      swift_bridgeObjectRetain();
      MEMORY[0x2349295D8](v44, v43, v18, MEMORY[0x24BEE0D00], v20, MEMORY[0x24BEE0D10]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v44[0];
      if (v44[0])
      {
        sub_232E26290();
        if (LOBYTE(v43[0]) == 2)
        {
          if (qword_255FFC8A8 != -1)
            swift_once();
          v22 = sub_232E6EF28();
          __swift_project_value_buffer(v22, (uint64_t)qword_255FFC890);
          swift_retain();
          swift_retain();
          v23 = sub_232E6EF10();
          v24 = sub_232E6F390();
          v25 = v24;
          if (os_log_type_enabled(v23, v24))
          {
            v26 = swift_slowAlloc();
            v39 = v25;
            v27 = v26;
            v38 = swift_slowAlloc();
            v43[0] = v38;
            *(_DWORD *)v27 = v35;
            v28 = v40[2];
            v29 = v40[3];
            swift_bridgeObjectRetain();
            *(_QWORD *)(v27 + 4) = sub_232DE4A70(v28, v29, v43);
            swift_release();
            swift_bridgeObjectRelease();
            *(_WORD *)(v27 + 12) = 2082;
            v30 = *(_QWORD *)(v21 + 16);
            v31 = *(_QWORD *)(v21 + 24);
            swift_bridgeObjectRetain();
            v32 = v30;
            v3 = v37;
            *(_QWORD *)(v27 + 14) = sub_232DE4A70(v32, v31, v43);
            swift_release();
            v10 = v36;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_232DDB000, v23, (os_log_type_t)v39, "[%{public}s] Removing dismissed activity: %{public}s", (uint8_t *)v27, 0x16u);
            v33 = v38;
            swift_arrayDestroy();
            MEMORY[0x23492A1F0](v33, -1, -1);
            MEMORY[0x23492A1F0](v27, -1, -1);

          }
          else
          {

            swift_release();
            swift_release();
          }
          v15 = *(_QWORD *)(v21 + 16);
          v44[1] = *(_QWORD *)(v21 + 24);
          v44[2] = 0;
          v44[0] = v15;
          swift_beginAccess();
          sub_232E6F198();
          swift_bridgeObjectRetain();
          sub_232E6F1B0();
          swift_endAccess();
        }
        swift_release();
      }
      v13 += v41;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_232DEBB70(uint64_t *a1)
{
  return sub_232DE02E0(a1);
}

uint64_t sub_232DEBB7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return XPCCodableActivityChanges.init(from:)(a1, a2);
}

uint64_t sub_232DEBB90(_QWORD *a1)
{
  return XPCCodableActivityChanges.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for XPCCodableActivityChanges()
{
  return &type metadata for XPCCodableActivityChanges;
}

unint64_t sub_232DEBBB4()
{
  unint64_t result;

  result = qword_254237FC8;
  if (!qword_254237FC8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for XPCCodableActivityChanges, &type metadata for XPCCodableActivityChanges);
    atomic_store(result, (unint64_t *)&qword_254237FC8);
  }
  return result;
}

ActivityKit::XPCCodableActivityChanges __swiftcall XPCCodableActivityChanges.init(changes:)(ActivityKit::XPCCodableActivityChanges changes)
{
  ActivityKit::XPCCodableActivityChanges *v1;

  v1->changes._rawValue = changes.changes._rawValue;
  return changes;
}

uint64_t sub_232DEBC00()
{
  return 0x7365676E616863;
}

ValueMetadata *type metadata accessor for XPCCodableActivityChanges.CodingKeys()
{
  return &type metadata for XPCCodableActivityChanges.CodingKeys;
}

unint64_t sub_232DEBC30()
{
  unint64_t result;

  result = qword_254237FC0;
  if (!qword_254237FC0)
  {
    result = MEMORY[0x23492A124](&unk_232E725E8, &type metadata for XPCCodableActivityChanges.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237FC0);
  }
  return result;
}

unint64_t sub_232DEBC74()
{
  unint64_t result;

  result = qword_254237FB8;
  if (!qword_254237FB8)
  {
    result = MEMORY[0x23492A124](&unk_232E72610, &type metadata for XPCCodableActivityChanges.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237FB8);
  }
  return result;
}

unint64_t sub_232DEBCB8()
{
  unint64_t result;

  result = qword_254237FB0;
  if (!qword_254237FB0)
  {
    result = MEMORY[0x23492A124](&unk_232E726A0, &type metadata for XPCCodableActivityChanges.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237FB0);
  }
  return result;
}

uint64_t sub_232DEBCFC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return XPCCodableActivityDescriptorContentStates.init(from:)(a1, a2);
}

uint64_t sub_232DEBD10(_QWORD *a1)
{
  return XPCCodableActivityDescriptorContentStates.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for XPCCodableActivityDescriptorContentStates()
{
  return &type metadata for XPCCodableActivityDescriptorContentStates;
}

unint64_t sub_232DEBD34()
{
  unint64_t result;

  result = qword_254237E58;
  if (!qword_254237E58)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for XPCCodableActivityDescriptorContentStates, &type metadata for XPCCodableActivityDescriptorContentStates);
    atomic_store(result, (unint64_t *)&qword_254237E58);
  }
  return result;
}

unint64_t sub_232DEBD78()
{
  return 0xD000000000000017;
}

ValueMetadata *type metadata accessor for XPCCodableActivityDescriptorContentStates.CodingKeys()
{
  return &type metadata for XPCCodableActivityDescriptorContentStates.CodingKeys;
}

unint64_t sub_232DEBDAC()
{
  unint64_t result;

  result = qword_254237FA8;
  if (!qword_254237FA8)
  {
    result = MEMORY[0x23492A124](&unk_232E7BC00, &type metadata for XPCCodableActivityDescriptorContentStates.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237FA8);
  }
  return result;
}

unint64_t sub_232DEBDF0()
{
  unint64_t result;

  result = qword_254237FA0;
  if (!qword_254237FA0)
  {
    result = MEMORY[0x23492A124](&unk_232E7BC28, &type metadata for XPCCodableActivityDescriptorContentStates.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237FA0);
  }
  return result;
}

unint64_t sub_232DEBE34()
{
  unint64_t result;

  result = qword_254237F98;
  if (!qword_254237F98)
  {
    result = MEMORY[0x23492A124](&unk_232E7BCB8, &type metadata for XPCCodableActivityDescriptorContentStates.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237F98);
  }
  return result;
}

ActivityKit::XPCCodableActivityDescriptorContentStates __swiftcall XPCCodableActivityDescriptorContentStates.init(descriptorContentStates:)(ActivityKit::XPCCodableActivityDescriptorContentStates descriptorContentStates)
{
  ActivityKit::XPCCodableActivityDescriptorContentStates *v1;

  v1->descriptorContentStates._rawValue = descriptorContentStates.descriptorContentStates._rawValue;
  return descriptorContentStates;
}

id acTryWithObjCException(void *a1)
{
  void (**v1)(void);

  v1 = a1;
  v1[2]();

  return 0;
}

void sub_232DEC708(void *a1)
{
  id v1;

  v1 = objc_begin_catch(a1);
  objc_end_catch();
  JUMPOUT(0x232DEC6F4);
}

void type metadata accessor for os_unfair_lock_s()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_2542383C0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2542383C0);
  }
}

BOOL sub_232DED218(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_232DED22C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t ActivityEndingOptions.uiDismissalPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DED470(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
}

uint64_t ActivityEndingOptions.platterDismissalPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = type metadata accessor for ActivityUIDismissalPolicy();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DED470(v1, (uint64_t)v5, v6);
  v7 = sub_232E6EE74();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
}

uint64_t ActivityEndingOptions.init(platterDismissalPolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for ActivityPlatterDismissalPolicy();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivityUIDismissalPolicy();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DED470(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActivityPlatterDismissalPolicy);
  v10 = sub_232E6EE74();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    if (qword_2542374C0 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v7, (uint64_t)qword_254237640);
    sub_232DED470(v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v6, v10);
  }
  sub_232DEDC64(a1);
  return sub_232DEDD20((uint64_t)v9, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
}

uint64_t sub_232DED470(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ActivityEndingOptions.init(uiDismissalPolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232DEDD20(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
}

uint64_t sub_232DED4D8()
{
  return 1;
}

uint64_t sub_232DED4E0()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t sub_232DED520()
{
  return sub_232E6F78C();
}

uint64_t sub_232DED544()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

unint64_t sub_232DED580()
{
  return 0xD000000000000011;
}

uint64_t sub_232DED59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232DEE228(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_232DED5C4()
{
  return 0;
}

void sub_232DED5D0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_232DED5DC()
{
  sub_232DEDCA0();
  return sub_232E6F7D4();
}

uint64_t sub_232DED604()
{
  sub_232DEDCA0();
  return sub_232E6F7E0();
}

uint64_t ActivityEndingOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254236928);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEDCA0();
  sub_232E6F7C8();
  type metadata accessor for ActivityUIDismissalPolicy();
  sub_232DDDAD8(&qword_254237390, (uint64_t (*)(uint64_t))type metadata accessor for ActivityUIDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ActivityEndingOptions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for ActivityUIDismissalPolicy();
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFBFF0);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActivityEndingOptions();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEDCA0();
  sub_232E6F7BC();
  if (!v2)
  {
    sub_232DDDAD8(&qword_255FFC488, (uint64_t (*)(uint64_t))type metadata accessor for ActivityUIDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy);
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_232DEDD20(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
    sub_232DEDD20((uint64_t)v11, v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityEndingOptions);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232DED908@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityEndingOptions.init(from:)(a1, a2);
}

uint64_t sub_232DED91C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254236928);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEDCA0();
  sub_232E6F7C8();
  type metadata accessor for ActivityUIDismissalPolicy();
  sub_232DDDAD8(&qword_254237390, (uint64_t (*)(uint64_t))type metadata accessor for ActivityUIDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_232DEDA30()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8((unint64_t *)&unk_2542374B0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityEndingOptions, (uint64_t)&protocol conformance descriptor for ActivityEndingOptions);
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232DEDAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  sub_232DDDAD8(&qword_255FFBFB0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityEndingOptions, (uint64_t)&protocol conformance descriptor for ActivityEndingOptions);
  sub_232E6ED9C();
  sub_232DEE2AC(a2);
  sub_232DE8D98(v8, v10);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v7, 0, 1, a3);
  return sub_232DEE2EC((uint64_t)v7, a2);
}

uint64_t sub_232DEDC64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivityPlatterDismissalPolicy();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_232DEDCA0()
{
  unint64_t result;

  result = qword_254237608;
  if (!qword_254237608)
  {
    result = MEMORY[0x23492A124](&unk_232E70AAC, &type metadata for ActivityEndingOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237608);
  }
  return result;
}

uint64_t type metadata accessor for ActivityEndingOptions()
{
  uint64_t result;

  result = qword_254237878;
  if (!qword_254237878)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232DEDD20(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_232DEDD64(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_232DDDAD8(&qword_255FFBFB0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityEndingOptions, (uint64_t)&protocol conformance descriptor for ActivityEndingOptions);
  a1[2] = sub_232DDDAD8((unint64_t *)&unk_2542374B0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityEndingOptions, (uint64_t)&protocol conformance descriptor for ActivityEndingOptions);
  result = sub_232DDDAD8(&qword_255FFC478, (uint64_t (*)(uint64_t))type metadata accessor for ActivityEndingOptions, (uint64_t)&protocol conformance descriptor for ActivityEndingOptions);
  a1[3] = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityUIDismissalPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ActivityUIDismissalPolicy(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ActivityUIDismissalPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ActivityUIDismissalPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ActivityUIDismissalPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ActivityUIDismissalPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEndingOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232DEDF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityUIDismissalPolicy();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ActivityEndingOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232DEDFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityUIDismissalPolicy();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_232DEDFF0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_232E6EE74();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityEndingOptions.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ActivityEndingOptions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232DEE0E8 + 4 * asc_232E708D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232DEE108 + 4 * byte_232E708D5[v4]))();
}

_BYTE *sub_232DEE0E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232DEE108(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232DEE110(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232DEE118(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232DEE120(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232DEE128(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_232DEE134()
{
  return 0;
}

ValueMetadata *type metadata accessor for ActivityEndingOptions.CodingKeys()
{
  return &type metadata for ActivityEndingOptions.CodingKeys;
}

unint64_t sub_232DEE154()
{
  unint64_t result;

  result = qword_255FFD320;
  if (!qword_255FFD320)
  {
    result = MEMORY[0x23492A124](&unk_232E70A84, &type metadata for ActivityEndingOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD320);
  }
  return result;
}

unint64_t sub_232DEE19C()
{
  unint64_t result;

  result = qword_254237618;
  if (!qword_254237618)
  {
    result = MEMORY[0x23492A124](&unk_232E709F4, &type metadata for ActivityEndingOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237618);
  }
  return result;
}

unint64_t sub_232DEE1E4()
{
  unint64_t result;

  result = qword_254237610;
  if (!qword_254237610)
  {
    result = MEMORY[0x23492A124](&unk_232E70A1C, &type metadata for ActivityEndingOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237610);
  }
  return result;
}

uint64_t sub_232DEE228(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000232E7D090)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_232DEE2AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232DEE2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232DEE334()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_254238010);
  __swift_project_value_buffer(v0, (uint64_t)qword_254238010);
  return sub_232E6EF1C();
}

BOOL sub_232DEE3B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s11ActivityKit0A17PresentationStateO18ForegroundModifierO9hashValueSivg_0()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t sub_232DEE408()
{
  return sub_232E6F78C();
}

uint64_t sub_232DEE430()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t sub_232DEE490()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542380A8);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 0;
  off_254237FF8 = (_UNKNOWN *)result;
  return result;
}

uint64_t ActivityOutputClient.identifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

id sub_232DEE4D0()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t ActivityOutputClient.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ActivityOutputClient.init()();
  return v0;
}

uint64_t ActivityOutputClient.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = v0;
  v2 = *(void **)(v0 + 24);
  sub_232DEE544(*(_QWORD *)(v1 + 16));

  swift_release();
  return v1;
}

uint64_t sub_232DEE544(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_232E6F0D8();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_232E6F108();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v1;
  aBlock[4] = sub_232DF5218;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDE158;
  aBlock[3] = &block_descriptor_84;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  sub_232E6F0E4();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8(&qword_2542382C8, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D0);
  sub_232DDF49C(&qword_2542383A8, &qword_2542382D0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  MEMORY[0x234929818](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t ActivityOutputClient.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = v0;
  v2 = *(void **)(v0 + 24);
  sub_232DEE544(*(_QWORD *)(v1 + 16));

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ActivityOutputClient.observeDescriptors()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD328);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD330);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254238030 != -1)
    swift_once();
  v10 = sub_232E6EF28();
  __swift_project_value_buffer(v10, (uint64_t)qword_254238010);
  v11 = sub_232E6EF10();
  v12 = sub_232E6F390();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_232DDB000, v11, v12, "Attempting to observe descriptors", v13, 2u);
    MEMORY[0x23492A1F0](v13, -1, -1);
  }

  v14 = v2;
  ActivityOutputClient.observeDescriptorStates()();
  if (!v1)
  {
    v25 = v15;
    v20[1] = sub_232E6EF40();
    v20[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD338);
    v21 = v6;
    v22 = v7;
    v16 = MEMORY[0x24BDB9AF8];
    sub_232DDF49C(&qword_255FFC3B0, &qword_255FFC3B8, MEMORY[0x24BDB9AF8]);
    sub_232DDF49C(&qword_255FFD340, &qword_255FFD338, v16);
    sub_232E6F0C0();
    swift_release();
    sub_232DDF49C(&qword_255FFD348, &qword_255FFD328, MEMORY[0x24BDB98F0]);
    sub_232DF1D00();
    v17 = v24;
    sub_232E6F090();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v17);
    sub_232DDF49C(&qword_255FFD368, &qword_255FFD330, MEMORY[0x24BDB9658]);
    v18 = v21;
    v14 = sub_232E6F030();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v18);
  }
  return v14;
}

void ActivityOutputClient.observeDescriptorStates()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B50);
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B28);
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC398);
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC380);
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v42 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC360);
  v46 = *(_QWORD *)(v13 - 8);
  v47 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v45 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254238030 != -1)
    swift_once();
  v15 = sub_232E6EF28();
  __swift_project_value_buffer(v15, (uint64_t)qword_254238010);
  v16 = sub_232E6EF10();
  v17 = sub_232E6F390();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_232DDB000, v16, v17, "Attempting to observe states", v18, 2u);
    MEMORY[0x23492A1F0](v18, -1, -1);
  }

  v19 = *(os_unfair_lock_s **)(v2[4] + 16);
  swift_retain();
  os_unfair_lock_lock(v19);
  v20 = v2[7];
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    return;
  }
  v21 = v2[6] | v20;
  v2[7] = v20 + 1;
  os_unfair_lock_unlock(v19);
  v22 = swift_release();
  if (!v21)
  {
    MEMORY[0x24BDAC7A8](v22);
    sub_232E6F3D8();
    if (v1)
      return;
    v48 = 0;
  }
  v23 = swift_allocObject();
  swift_weakInit();
  v24 = v2[3];
  v25 = (uint64_t *)(v24 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_activities);
  swift_beginAccess();
  v49 = *v25;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237B58);
  sub_232E6F018();
  v49 = *(_QWORD *)(v24
                  + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_activityDiffPublisher);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238410);
  sub_232DDF49C(&qword_254237B48, &qword_254237B50, MEMORY[0x24BDB9DF8]);
  sub_232DDF49C(&qword_254237B40, &qword_254238410, MEMORY[0x24BDB9CB0]);
  sub_232E6F06C();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v3);
  sub_232DDF49C(&qword_254237B20, &qword_254237B28, MEMORY[0x24BDB9798]);
  v26 = sub_232E6F030();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v6);
  v49 = v26;
  sub_232E6EF40();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237B38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3B8);
  v27 = MEMORY[0x24BDB9AF8];
  sub_232DDF49C(&qword_254237B30, &qword_254237B38, MEMORY[0x24BDB9AF8]);
  sub_232DDF49C(&qword_255FFC3B0, &qword_255FFC3B8, v27);
  v28 = v39;
  sub_232E6F0C0();
  swift_release();
  sub_232DDF49C(&qword_255FFC390, &qword_255FFC398, MEMORY[0x24BDB98F0]);
  sub_232DF47D0();
  v29 = v41;
  v30 = v42;
  sub_232E6F090();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v29);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_232DF47C8;
  *(_QWORD *)(v31 + 24) = v23;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_232DF47C8;
  *(_QWORD *)(v32 + 24) = v23;
  sub_232DDF49C(&qword_255FFC378, &qword_255FFC380, MEMORY[0x24BDB9658]);
  swift_retain_n();
  v33 = v44;
  v34 = v45;
  sub_232E6F048();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v33);
  sub_232DDF49C(&qword_255FFC358, &qword_255FFC360, MEMORY[0x24BDB9568]);
  v35 = v47;
  sub_232E6F030();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v35);
}

uint64_t sub_232DEF098@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for ActivityDescriptorState(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActivityDescriptor();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD3B8);
  v32 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD3D8);
  v33 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v31 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = MEMORY[0x24BEE4AF8];
  if (v17)
  {
    v27 = v12;
    v28 = v14;
    v29 = a2;
    v35 = MEMORY[0x24BEE4AF8];
    sub_232E525C4(0, v17, 0);
    v19 = v16 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v34 = *(_QWORD *)(v5 + 72);
    v18 = v35;
    do
    {
      sub_232DED470(v19, (uint64_t)v7, type metadata accessor for ActivityDescriptorState);
      sub_232DED470((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      sub_232DF51B8((uint64_t)v7, type metadata accessor for ActivityDescriptorState);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_232E525C4(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v35;
      }
      v21 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v18 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_232E525C4(v20 > 1, v21 + 1, 1);
        v18 = v35;
      }
      *(_QWORD *)(v18 + 16) = v21 + 1;
      sub_232DEDD20((uint64_t)v11, v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v21, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      v19 += v34;
      --v17;
    }
    while (v17);
    v14 = v28;
    a2 = v29;
    v12 = v27;
  }
  v35 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD358);
  v22 = v30;
  sub_232E6F018();
  v23 = v31;
  sub_232E6F00C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v12);
  sub_232DDF49C(&qword_255FFD3E0, &qword_255FFD3D8, MEMORY[0x24BDBA1D0]);
  v24 = sub_232E6F030();
  result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v23, v14);
  *a2 = v24;
  return result;
}

uint64_t sub_232DEF39C()
{
  uint64_t result;
  uint64_t *v1;
  os_unfair_lock_s *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = (uint64_t *)result;
    v2 = *(os_unfair_lock_s **)(*(_QWORD *)(result + 32) + 16);
    swift_retain();
    os_unfair_lock_lock(v2);
    sub_232DEF424(v1);
    os_unfair_lock_unlock(v2);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_232DEF424(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v2 = a1[6];
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
    swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_254238010);
    v7 = v1;
    v8 = v1;
    swift_retain();
    v9 = sub_232E6EF10();
    v10 = sub_232E6F378();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v16 = v12;
      *(_DWORD *)v11 = 134349314;
      sub_232E6F480();
      swift_release();
      *(_WORD *)(v11 + 12) = 2080;
      v13 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
      v14 = sub_232E6F1F8();
      sub_232DE4A70(v14, v15, &v16);
      sub_232E6F480();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232DDB000, v9, v10, "Could not update subscription for client %{public}llu: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v12, -1, -1);
      MEMORY[0x23492A1F0](v11, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a1[6] = v4;
    if (!v4)
    {
      v5 = a1[7];
      if (v5 < 1)
      {
        if (!v5)
          sub_232DEE544(a1[2]);
      }
      else
      {
        MEMORY[0x24BDAC7A8](a1);
        sub_232E6F3D8();
      }
    }
  }
}

void sub_232DEF6C0()
{
  uint64_t Strong;
  uint64_t *v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = (uint64_t *)Strong;
    v2 = *(os_unfair_lock_s **)(*(_QWORD *)(Strong + 32) + 16);
    swift_retain();
    os_unfair_lock_lock(v2);
    v3 = v1[7];
    v4 = __OFSUB__(v3, 1);
    v5 = v3 - 1;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      v1[7] = v5;
      if (!v5 && !v1[6])
        sub_232DEE544(v1[2]);
      os_unfair_lock_unlock(v2);
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_232DEF768@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t i;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  int64_t v65;
  char *v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  unint64_t v76;
  unint64_t v77;

  v63 = a2;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3C0);
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v57 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3F0);
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v58 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v5);
  v73 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivityDescriptorState(0);
  v71 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v70 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238100);
  v9 = MEMORY[0x24BDAC7A8](v69);
  v68 = (char **)((char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v67 = (char **)((char *)&v57 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char **)((char *)&v57 - v14);
  MEMORY[0x24BDAC7A8](v13);
  v66 = (char *)&v57 - v16;
  v17 = *a1;
  v18 = *(_QWORD *)(*a1 + 64);
  v64 = *a1 + 64;
  v19 = 1 << *(_BYTE *)(v17 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v65 = (unint64_t)(v19 + 63) >> 6;
  v74 = v17;
  result = swift_bridgeObjectRetain();
  v23 = 0;
  v24 = MEMORY[0x24BEE4AF8];
  v25 = v69;
  v76 = MEMORY[0x24BEE4AF8];
  if (!v21)
    goto LABEL_5;
LABEL_4:
  v26 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v75 = v23;
  for (i = v26 | (v23 << 6); ; i = __clz(__rbit64(v29)) + (v30 << 6))
  {
    v32 = *(_QWORD *)(v74 + 56);
    v33 = (uint64_t *)(*(_QWORD *)(v74 + 48) + 16 * i);
    v34 = *v33;
    v35 = v33[1];
    v36 = type metadata accessor for SubscribedActivity(0);
    v37 = v32 + *(_QWORD *)(*(_QWORD *)(v36 - 8) + 72) * i;
    v38 = v66;
    sub_232DED470(v37, (uint64_t)&v66[*(int *)(v25 + 48)], type metadata accessor for SubscribedActivity);
    *v38 = v34;
    v38[1] = v35;
    sub_232DE939C((uint64_t)v38, (uint64_t)v15, &qword_254238100);
    v39 = *(int *)(v25 + 48);
    v40 = v67;
    v41 = (uint64_t)v67 + v39;
    v42 = (uint64_t)v15 + v39;
    v43 = v15[1];
    *v67 = *v15;
    v40[1] = v43;
    sub_232DED470((uint64_t)v15 + v39, v41, type metadata accessor for SubscribedActivity);
    v44 = v41 + *(int *)(v36 + 24);
    v45 = v73;
    sub_232DED470(v44, v73, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
    swift_bridgeObjectRetain();
    sub_232DF51B8(v41, type metadata accessor for SubscribedActivity);
    v46 = v68;
    v47 = (uint64_t)v68 + *(int *)(v25 + 48);
    v48 = v15[1];
    *v68 = *v15;
    v46[1] = v48;
    sub_232DED470(v42, v47, type metadata accessor for SubscribedActivity);
    LOBYTE(v34) = *(_BYTE *)(v47 + 16);
    sub_232DF51B8(v47, type metadata accessor for SubscribedActivity);
    v49 = v70;
    sub_232DEDD20(v45, v70, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
    *(_BYTE *)(v49 + *(int *)(v72 + 20)) = v34;
    v24 = v76;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v24 = sub_232E0FC14(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
    v51 = *(_QWORD *)(v24 + 16);
    v50 = *(_QWORD *)(v24 + 24);
    if (v51 >= v50 >> 1)
      v24 = sub_232E0FC14(v50 > 1, v51 + 1, 1, v24);
    *(_QWORD *)(v24 + 16) = v51 + 1;
    sub_232DEDD20(v49, v24+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(_QWORD *)(v71 + 72) * v51, type metadata accessor for ActivityDescriptorState);
    result = sub_232DDD798((uint64_t)v15, &qword_254238100);
    v23 = v75;
    v76 = v24;
    if (v21)
      goto LABEL_4;
LABEL_5:
    v28 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v28 >= v65)
      goto LABEL_27;
    v29 = *(_QWORD *)(v64 + 8 * v28);
    v30 = v23 + 1;
    if (!v29)
    {
      v30 = v23 + 2;
      if (v23 + 2 >= v65)
        goto LABEL_27;
      v29 = *(_QWORD *)(v64 + 8 * v30);
      if (!v29)
      {
        v30 = v23 + 3;
        if (v23 + 3 >= v65)
          goto LABEL_27;
        v29 = *(_QWORD *)(v64 + 8 * v30);
        if (!v29)
        {
          v30 = v23 + 4;
          if (v23 + 4 >= v65)
            goto LABEL_27;
          v29 = *(_QWORD *)(v64 + 8 * v30);
          if (!v29)
            break;
        }
      }
    }
LABEL_20:
    v21 = (v29 - 1) & v29;
    v75 = v30;
  }
  v31 = v23 + 5;
  if (v23 + 5 >= v65)
  {
LABEL_27:
    swift_release();
    v77 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3C8);
    v52 = v57;
    sub_232E6F018();
    v53 = v58;
    v54 = v61;
    sub_232E6F00C();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v52, v54);
    sub_232DDF49C(&qword_255FFC3E8, &qword_255FFC3F0, MEMORY[0x24BDBA1D0]);
    v55 = v62;
    v56 = sub_232E6F030();
    result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v53, v55);
    *v63 = v56;
    return result;
  }
  v29 = *(_QWORD *)(v64 + 8 * v31);
  if (v29)
  {
    v30 = v23 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v65)
      goto LABEL_27;
    v29 = *(_QWORD *)(v64 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_232DEFD14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_254238030 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_254238010);
  v4 = sub_232E6EF10();
  v5 = sub_232E6F390();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_232DDB000, v4, v5, "Activity feed completed", v6, 2u);
    MEMORY[0x23492A1F0](v6, -1, -1);
  }

  return a2();
}

uint64_t sub_232DEFDF8(uint64_t (*a1)(void))
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_254238030 != -1)
    swift_once();
  v2 = sub_232E6EF28();
  __swift_project_value_buffer(v2, (uint64_t)qword_254238010);
  v3 = sub_232E6EF10();
  v4 = sub_232E6F390();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, v3, v4, "Activity feed cancelled", v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

  return a1();
}

uint64_t sub_232DEFEDC(unint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  unsigned int (*v45)(_BYTE *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _BYTE *v56;
  char v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _BYTE v70[12];
  int v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  unint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;

  v77 = a1;
  v73 = type metadata accessor for ActivityDescriptorContentState();
  v76 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v75 = &v70[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for OpaqueActivityContent();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v72 = &v70[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v74 = &v70[-v8];
  MEMORY[0x24BDAC7A8](v7);
  v82 = (uint64_t *)&v70[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v83 = &v70[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v84 = &v70[-v13];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238100);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v81 = &v70[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = &v70[-v18];
  MEMORY[0x24BDAC7A8](v17);
  v21 = &v70[-v20];
  v22 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v22);
  v24 = &v70[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = *(int *)(v14 + 48);
  v26 = (uint64_t)v21 + v25;
  v27 = (uint64_t)a2 + v25;
  v28 = a2[1];
  *v21 = *a2;
  v21[1] = v28;
  sub_232DED470((uint64_t)a2 + v25, (uint64_t)v21 + v25, type metadata accessor for SubscribedActivity);
  v29 = type metadata accessor for SubscribedActivity(0);
  v30 = v26 + *(int *)(v29 + 24);
  v85 = v24;
  sub_232DED470(v30, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  sub_232DF51B8(v26, type metadata accessor for SubscribedActivity);
  v31 = (uint64_t)v21 + *(int *)(v14 + 48);
  v32 = a2[1];
  *v21 = *a2;
  v21[1] = v32;
  sub_232DED470(v27, v31, type metadata accessor for SubscribedActivity);
  v71 = *(unsigned __int8 *)(v31 + 16);
  sub_232DF51B8(v31, type metadata accessor for SubscribedActivity);
  v78 = v14;
  v79 = v27;
  v33 = (uint64_t)v19 + *(int *)(v14 + 48);
  v34 = a2[1];
  *v19 = *a2;
  v19[1] = v34;
  sub_232DED470(v27, v33, type metadata accessor for SubscribedActivity);
  v80 = v29;
  v35 = *(_QWORD *)(v33 + *(int *)(v29 + 28));
  swift_bridgeObjectRetain();
  sub_232DF51B8(v33, type metadata accessor for SubscribedActivity);
  if (*(_QWORD *)(v35 + 16))
  {
    v36 = v84;
    v37 = sub_232E104D4(0);
    if ((v38 & 1) != 0)
    {
      v39 = v37;
      v40 = *(_QWORD *)(v35 + 56);
      v41 = type metadata accessor for OpaqueActivityPayload(0);
      v42 = *(_QWORD *)(v41 - 8);
      sub_232DED470(v40 + *(_QWORD *)(v42 + 72) * v39, (uint64_t)v36, type metadata accessor for OpaqueActivityPayload);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v41);
      goto LABEL_7;
    }
    v41 = type metadata accessor for OpaqueActivityPayload(0);
    v43 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  }
  else
  {
    v41 = type metadata accessor for OpaqueActivityPayload(0);
    v43 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
    v36 = v84;
  }
  v43(v36, 1, 1, v41);
LABEL_7:
  swift_bridgeObjectRelease();
  type metadata accessor for OpaqueActivityPayload(0);
  v44 = *(_QWORD *)(v41 - 8);
  v45 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48);
  if (v45(v36, 1, v41) == 1)
  {
    sub_232DDD798((uint64_t)v36, &qword_2542379D0);
    v46 = (uint64_t)v85;
  }
  else
  {
    v47 = v82;
    sub_232DED470((uint64_t)&v36[*(int *)(v41 + 28)], (uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
    sub_232DF51B8((uint64_t)v36, type metadata accessor for OpaqueActivityPayload);
    v48 = *v47;
    v49 = *v47;
    v84 = (_BYTE *)v47[1];
    sub_232DE4A2C(v49, (unint64_t)v84);
    sub_232DF51B8((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
    v50 = v79;
    v51 = v81;
    v52 = (uint64_t)v81 + *(int *)(v78 + 48);
    v53 = a2[1];
    *v81 = *a2;
    v51[1] = v53;
    sub_232DED470(v50, v52, type metadata accessor for SubscribedActivity);
    v54 = *(_QWORD *)(v52 + *(int *)(v80 + 28));
    swift_bridgeObjectRetain();
    sub_232DF51B8(v52, type metadata accessor for SubscribedActivity);
    if (*(_QWORD *)(v54 + 16))
    {
      v55 = sub_232E104D4(0);
      v56 = v83;
      if ((v57 & 1) != 0)
      {
        sub_232DED470(*(_QWORD *)(v54 + 56) + *(_QWORD *)(v44 + 72) * v55, (uint64_t)v83, type metadata accessor for OpaqueActivityPayload);
        v58 = 0;
      }
      else
      {
        v58 = 1;
      }
    }
    else
    {
      v58 = 1;
      v56 = v83;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v56, v58, 1, v41);
    swift_bridgeObjectRelease();
    if (v45(v56, 1, v41) == 1)
    {
      sub_232DDD798((uint64_t)v56, &qword_2542379D0);
      sub_232DE8D98(v48, (unint64_t)v84);
      v46 = (uint64_t)v85;
    }
    else
    {
      v59 = v72;
      sub_232DED470((uint64_t)&v56[*(int *)(v41 + 28)], (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
      sub_232DF51B8((uint64_t)v56, type metadata accessor for OpaqueActivityPayload);
      v60 = v74;
      sub_232DEDD20((uint64_t)v59, (uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
      v46 = (uint64_t)v85;
      v61 = v75;
      sub_232DED470((uint64_t)v85, (uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      v62 = v73;
      sub_232DED470((uint64_t)v60, (uint64_t)&v61[*(int *)(v73 + 28)], (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
      v61[*(int *)(v62 + 20)] = v71;
      v63 = (uint64_t *)&v61[*(int *)(v62 + 24)];
      v64 = (unint64_t)v84;
      *v63 = v48;
      v63[1] = v64;
      v65 = v77;
      v66 = *v77;
      sub_232DE4A2C(v48, v64);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v66 = sub_232E0FC28(0, *(_QWORD *)(v66 + 16) + 1, 1, v66);
      v68 = *(_QWORD *)(v66 + 16);
      v67 = *(_QWORD *)(v66 + 24);
      if (v68 >= v67 >> 1)
        v66 = sub_232E0FC28(v67 > 1, v68 + 1, 1, v66);
      *(_QWORD *)(v66 + 16) = v68 + 1;
      sub_232DEDD20((uint64_t)v61, v66+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(_QWORD *)(v76 + 72) * v68, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      sub_232DE8D98(v48, v64);
      *v65 = v66;
      sub_232DF51B8((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
    }
  }
  return sub_232DF51B8(v46, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
}

uint64_t ActivityOutputClient.descriptor(id:)()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_254237A40);
  return sub_232E6F3D8();
}

void (*ActivityOutputClient.descriptors(matching:)(uint64_t a1))(BOOL, uint64_t, uint64_t)
{
  return sub_232DF0620(a1, (uint64_t)sub_232DF48C4, (uint64_t)&type metadata for XPCCodableActivityDescriptors, (void (*)(_QWORD))type metadata accessor for ActivityDescriptor, (void (*)(BOOL, uint64_t, uint64_t))sub_232E525C4);
}

void (*ActivityOutputClient.descriptorContentStates(matching:)(uint64_t a1))(BOOL, uint64_t, uint64_t)
{
  return sub_232DF0620(a1, (uint64_t)sub_232DEAAFC, (uint64_t)&type metadata for XPCCodableActivityDescriptorContentStates, (void (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState, (void (*)(BOOL, uint64_t, uint64_t))sub_232E525F0);
}

void (*sub_232DF0620(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t)))(BOOL, uint64_t, uint64_t)
{
  uint64_t v5;
  __int128 v8;
  uint64_t v10;
  _OWORD v11[3];
  uint64_t v12;

  v8 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v8;
  v11[2] = *(_OWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 48);
  sub_232E6F3D8();
  if (!v5)
  {
    sub_232DDFF78((uint64_t)v11);
    a5 = (void (*)(BOOL, uint64_t, uint64_t))sub_232DF4904(v10, (uint64_t)v11, a4, a5);
    sub_232DDDF18((uint64_t)v11);
    swift_bridgeObjectRelease();
  }
  return a5;
}

char *ActivityOutputClient.observePayloads(id:)(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = 0;
  return ActivityOutputClient.observePayloads(id:feed:)(a1, a2, &v3);
}

char *ActivityOutputClient.observePayloads(id:feed:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v32 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB4E0);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB500);
  v33 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB510);
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB4F0);
  v36 = *(_QWORD *)(v14 - 8);
  v37 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a3;
  ActivityOutputClient.observeActivities()();
  if (!v3)
  {
    v41 = v18;
    v31 = 0;
    v19 = swift_allocObject();
    v30 = v8;
    v20 = v32;
    *(_QWORD *)(v19 + 16) = v32;
    *(_QWORD *)(v19 + 24) = a2;
    *(_BYTE *)(v19 + 32) = v17;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237B38);
    sub_232DDF49C(&qword_254237B30, &qword_254237B38, MEMORY[0x24BDB9AF8]);
    sub_232E6F078();
    swift_release();
    swift_release();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = a2;
    *(_BYTE *)(v21 + 32) = v17;
    swift_bridgeObjectRetain();
    sub_232E6EF40();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB520);
    sub_232DDF49C(&qword_255FFB4F8, &qword_255FFB500, MEMORY[0x24BDB97F8]);
    sub_232DDF49C(&qword_255FFB518, &qword_255FFB520, MEMORY[0x24BDB9AF8]);
    v22 = v30;
    sub_232E6F0B4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v22);
    sub_232DDF49C(&qword_255FFB508, &qword_255FFB510, MEMORY[0x24BDB98F0]);
    sub_232DDDAD8(&qword_255FFB4C0, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
    v23 = v35;
    sub_232E6F090();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v23);
    sub_232DDF49C(&qword_255FFB4E8, &qword_255FFB4F0, MEMORY[0x24BDB9658]);
    v24 = v37;
    v25 = sub_232E6F030();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v24);
    v41 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB4B8);
    v26 = v38;
    sub_232E6F03C();
    sub_232DDF49C(&qword_255FFB4D8, &qword_255FFB4E0, MEMORY[0x24BDB94C8]);
    v27 = v40;
    v10 = (char *)sub_232E6F030();
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
  }
  return v10;
}

BOOL sub_232DF0B04(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542380F0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SubscribedActivity(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  if (!*(_QWORD *)(v18 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_7:
    sub_232DDD798((uint64_t)v13, &qword_2542380F0);
    return 0;
  }
  swift_bridgeObjectRetain();
  v19 = sub_232DE0F18(a2, a3);
  if ((v20 & 1) != 0)
  {
    sub_232DED470(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v15 + 72) * v19, (uint64_t)v13, type metadata accessor for SubscribedActivity);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v21, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_7;
  sub_232DEDD20((uint64_t)v13, (uint64_t)v17, type metadata accessor for SubscribedActivity);
  v23 = *(_QWORD *)&v17[*(int *)(v14 + 28)];
  if (*(_QWORD *)(v23 + 16) && (v24 = sub_232E104D4(a4 & 1), (v25 & 1) != 0))
  {
    v26 = v24;
    v27 = *(_QWORD *)(v23 + 56);
    v28 = type metadata accessor for OpaqueActivityPayload(0);
    v29 = *(_QWORD *)(v28 - 8);
    sub_232DED470(v27 + *(_QWORD *)(v29 + 72) * v26, (uint64_t)v10, type metadata accessor for OpaqueActivityPayload);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v10, 0, 1, v28);
  }
  else
  {
    v28 = type metadata accessor for OpaqueActivityPayload(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
  }
  sub_232DF51B8((uint64_t)v17, type metadata accessor for SubscribedActivity);
  type metadata accessor for OpaqueActivityPayload(0);
  v22 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v10, 1, v28) != 1;
  sub_232DDD798((uint64_t)v10, &qword_2542379D0);
  return v22;
}

uint64_t sub_232DF0D94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int v45;
  uint64_t v46;

  v45 = a4;
  v46 = a2;
  v44 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB530);
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB540);
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OpaqueActivityPayload(0);
  v38 = *(_QWORD *)(v13 - 8);
  v39 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542380F0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SubscribedActivity(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *a1;
  if (*(_QWORD *)(v26 + 16))
  {
    swift_bridgeObjectRetain();
    v27 = sub_232DE0F18(v46, a3);
    if ((v28 & 1) != 0)
    {
      sub_232DED470(*(_QWORD *)(v26 + 56) + *(_QWORD *)(v23 + 72) * v27, (uint64_t)v21, type metadata accessor for SubscribedActivity);
      v29 = 0;
    }
    else
    {
      v29 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, v29, 1, v22);
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
    if ((_DWORD)result == 1)
      goto LABEL_12;
    sub_232DEDD20((uint64_t)v21, (uint64_t)v25, type metadata accessor for SubscribedActivity);
    v31 = *(_QWORD *)&v25[*(int *)(v22 + 28)];
    if (*(_QWORD *)(v31 + 16))
    {
      v32 = sub_232E104D4(v45 & 1);
      if ((v33 & 1) != 0)
      {
        sub_232DED470(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v38 + 72) * v32, (uint64_t)v18, type metadata accessor for OpaqueActivityPayload);
        sub_232DED470((uint64_t)v18, (uint64_t)v16, type metadata accessor for OpaqueActivityPayload);
        sub_232E6F018();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
        v34 = v41;
        sub_232E6F00C();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v34);
        sub_232DDF49C(&qword_255FFB538, &qword_255FFB540, MEMORY[0x24BDBA1D0]);
        v35 = v43;
        v36 = sub_232E6F030();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v35);
        sub_232DF51B8((uint64_t)v18, type metadata accessor for OpaqueActivityPayload);
        result = sub_232DF51B8((uint64_t)v25, type metadata accessor for SubscribedActivity);
        *v44 = v36;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_232DF10F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *boxed_opaque_existential_1;

  a2[3] = type metadata accessor for OpaqueActivityPayload(0);
  a2[4] = (uint64_t)&protocol witness table for OpaqueActivityPayload;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_232DED470(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for OpaqueActivityPayload);
}

uint64_t ActivityOutputClient.observeDescriptors(matching:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _OWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD370);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD378);
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD380);
  v26 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v12;
  v28[2] = *(_OWORD *)(a1 + 32);
  v29 = *(_QWORD *)(a1 + 48);
  v13 = ActivityOutputClient.observeDescriptors()();
  if (!v1)
  {
    v30 = v13;
    v24 = 0;
    v14 = swift_allocObject();
    v23 = v3;
    v15 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v14 + 32) = v15;
    *(_OWORD *)(v14 + 48) = *(_OWORD *)(a1 + 32);
    *(_QWORD *)(v14 + 64) = *(_QWORD *)(a1 + 48);
    sub_232DDFF78((uint64_t)v28);
    v21[2] = sub_232E6EF40();
    v21[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD338);
    v22 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD388);
    v16 = MEMORY[0x24BDB9AF8];
    sub_232DDF49C(&qword_255FFD340, &qword_255FFD338, MEMORY[0x24BDB9AF8]);
    v21[3] = sub_232DDF49C(&qword_255FFD390, &qword_255FFD388, v16);
    sub_232E6F0B4();
    swift_release();
    swift_release();
    sub_232DDF49C(&qword_255FFD398, &qword_255FFD378, MEMORY[0x24BDB98F0]);
    sub_232DF1D00();
    sub_232E6F090();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
    sub_232DDF49C(&qword_255FFD3A0, &qword_255FFD380, MEMORY[0x24BDB9658]);
    v17 = sub_232E6F030();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    v30 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD358);
    v18 = v27;
    sub_232E6F03C();
    sub_232DDF49C(&qword_255FFD3A8, &qword_255FFD370, MEMORY[0x24BDB94C8]);
    v19 = v23;
    v3 = sub_232E6F030();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v19);
  }
  return v3;
}

uint64_t sub_232DF1488@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  v16 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD3B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD3C0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DDFF78(a1);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_232DF4904(v11, a1, (void (*)(_QWORD))type metadata accessor for ActivityDescriptor, (void (*)(BOOL, uint64_t, uint64_t))sub_232E525C4);
  sub_232DDDF18(a1);
  swift_bridgeObjectRelease();
  v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD358);
  sub_232E6F018();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
  sub_232E6F00C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_232DDF49C(&qword_255FFD3C8, &qword_255FFD3C0, MEMORY[0x24BDBA1D0]);
  v13 = sub_232E6F030();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *v16 = v13;
  return result;
}

uint64_t ActivityOutputClient.observeDescriptorStates(matching:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _OWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC350);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFBFA0);
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC370);
  v26 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v12;
  v28[2] = *(_OWORD *)(a1 + 32);
  v29 = *(_QWORD *)(a1 + 48);
  ActivityOutputClient.observeDescriptorStates()();
  if (!v1)
  {
    v30 = v13;
    v24 = 0;
    v14 = swift_allocObject();
    v23 = v3;
    v15 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v14 + 32) = v15;
    *(_OWORD *)(v14 + 48) = *(_OWORD *)(a1 + 32);
    *(_QWORD *)(v14 + 64) = *(_QWORD *)(a1 + 48);
    sub_232DDFF78((uint64_t)v28);
    v21[2] = sub_232E6EF40();
    v21[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3B8);
    v22 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3A8);
    v16 = MEMORY[0x24BDB9AF8];
    sub_232DDF49C(&qword_255FFC3B0, &qword_255FFC3B8, MEMORY[0x24BDB9AF8]);
    v21[3] = sub_232DDF49C(&qword_255FFC3A0, &qword_255FFC3A8, v16);
    sub_232E6F0B4();
    swift_release();
    swift_release();
    sub_232DDF49C(&qword_255FFC388, &qword_255FFBFA0, MEMORY[0x24BDB98F0]);
    sub_232DF47D0();
    sub_232E6F090();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
    sub_232DDF49C(&qword_255FFC368, &qword_255FFC370, MEMORY[0x24BDB9658]);
    v17 = sub_232E6F030();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    v30 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3C8);
    v18 = v27;
    sub_232E6F03C();
    sub_232DDF49C(&qword_255FFC348, &qword_255FFC350, MEMORY[0x24BDB94C8]);
    v19 = v23;
    v3 = sub_232E6F030();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v19);
  }
  return v3;
}

uint64_t sub_232DF1968@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  v16 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DDFF78(a1);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_232DF4904(v11, a1, (void (*)(_QWORD))type metadata accessor for ActivityDescriptorState, (void (*)(BOOL, uint64_t, uint64_t))sub_232E5261C);
  sub_232DDDF18(a1);
  swift_bridgeObjectRelease();
  v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC3C8);
  sub_232E6F018();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
  sub_232E6F00C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_232DDF49C(&qword_255FFC3D8, &qword_255FFC3E0, MEMORY[0x24BDBA1D0]);
  v13 = sub_232E6F030();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *v16 = v13;
  return result;
}

uint64_t sub_232DF1B0C()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_254237A40);
  return sub_232E6F3D8();
}

void (*sub_232DF1B80(uint64_t a1, uint64_t a2, uint64_t a3))(BOOL, uint64_t, uint64_t)
{
  return sub_232DF1BB4(a1, a2, a3, (uint64_t)sub_232DF5354, (uint64_t)&type metadata for XPCCodableActivityDescriptors, (void (*)(_QWORD))type metadata accessor for ActivityDescriptor, (void (*)(BOOL, uint64_t, uint64_t))sub_232E525C4);
}

void (*sub_232DF1BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD), void (*a7)(BOOL, uint64_t, uint64_t)))(BOOL, uint64_t, uint64_t)
{
  uint64_t v7;
  __int128 v10;
  uint64_t v12;
  _OWORD v13[3];
  uint64_t v14;

  v10 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v10;
  v13[2] = *(_OWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 48);
  sub_232E6F3D8();
  if (!v7)
  {
    sub_232DDFF78((uint64_t)v13);
    a7 = (void (*)(BOOL, uint64_t, uint64_t))sub_232DF4904(v12, (uint64_t)v13, a6, a7);
    sub_232DDDF18((uint64_t)v13);
    swift_bridgeObjectRelease();
  }
  return a7;
}

char *sub_232DF1C78(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = 0;
  return ActivityOutputClient.observePayloads(id:feed:)(a1, a2, &v3);
}

char *sub_232DF1CA0(uint64_t a1, uint64_t a2, char *a3)
{
  return ActivityOutputClient.observePayloads(id:feed:)(a1, a2, a3);
}

uint64_t sub_232DF1CC0(uint64_t a1)
{
  return ActivityOutputClient.observeDescriptors(matching:)(a1);
}

uint64_t sub_232DF1CE0(uint64_t a1)
{
  return ActivityOutputClient.observeDescriptorStates(matching:)(a1);
}

unint64_t sub_232DF1D00()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255FFD350;
  if (!qword_255FFD350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255FFD358);
    v2 = sub_232DDDAD8(&qword_255FFD360, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255FFD350);
  }
  return result;
}

id sub_232DF1DBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Singleton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_232DF1FAC(uint64_t (*a1)(_QWORD)@<X1>, SEL *a2@<X2>, void (*a3)(void)@<X3>, const char *a4@<X5>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  NSObject *v29;
  int v30;
  uint8_t *v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _BYTE *v47;
  void *v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void *v53;
  NSObject *v54;
  _QWORD *v55;
  void *v56;
  int v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  const char *v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t (*v66)(_QWORD);
  uint64_t v67;
  id v68[2];

  v68[1] = *(id *)MEMORY[0x24BDAC8D0];
  v66 = a1;
  v10 = a1(0);
  v65 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v54 - v11);
  v13 = sub_232DE8DDC();
  if (v13)
  {
    v14 = v13;
    v62 = a4;
    v68[0] = 0;
    v15 = objc_msgSend(v13, *a2, v68);
    v16 = v68[0];
    if (!v15)
    {
      v48 = v16;
      sub_232E6EDF0();

      swift_willThrow();
      swift_unknownObjectRelease();
      return;
    }
    v63 = v14;
    v64 = a5;
    v17 = sub_232E6EE44();
    v19 = v18;

    v60 = v17;
    v61 = v19;
    v20 = (void *)sub_232E6EE2C();
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v21 = sub_232E6EE44();
    v23 = v22;
    a3();
    sub_232E6ED9C();
    v24 = v21;
    v25 = v23;
    if (!v5)
    {
      sub_232DE8D98(v21, v23);
      v24 = swift_release();
      v26 = v68[0];
      if (v68[0])
      {

        v27 = v64;
        if (qword_254238030 != -1)
          swift_once();
        v28 = sub_232E6EF28();
        __swift_project_value_buffer(v28, (uint64_t)qword_254238010);
        swift_bridgeObjectRetain_n();
        v29 = sub_232E6EF10();
        v30 = sub_232E6F390();
        if (os_log_type_enabled(v29, (os_log_type_t)v30))
        {
          v57 = v30;
          v59 = 0;
          v31 = (uint8_t *)swift_slowAlloc();
          v56 = (void *)swift_slowAlloc();
          v68[0] = v56;
          v58 = v31;
          *(_DWORD *)v31 = 136446210;
          v32 = v26[2];
          v33 = MEMORY[0x24BEE4AF8];
          if (v32)
          {
            v54 = v29;
            v67 = MEMORY[0x24BEE4AF8];
            swift_bridgeObjectRetain();
            sub_232E52648(0, v32, 0);
            v34 = *(unsigned __int8 *)(v65 + 80);
            v55 = v26;
            v35 = (uint64_t)v26 + ((v34 + 32) & ~v34);
            v36 = *(_QWORD *)(v65 + 72);
            v33 = v67;
            do
            {
              v37 = v66;
              sub_232DED470(v35, (uint64_t)v12, v66);
              v39 = *v12;
              v38 = v12[1];
              swift_bridgeObjectRetain();
              sub_232DF51B8((uint64_t)v12, v37);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_232E52648(0, *(_QWORD *)(v33 + 16) + 1, 1);
                v33 = v67;
              }
              v41 = *(_QWORD *)(v33 + 16);
              v40 = *(_QWORD *)(v33 + 24);
              if (v41 >= v40 >> 1)
              {
                sub_232E52648(v40 > 1, v41 + 1, 1);
                v33 = v67;
              }
              *(_QWORD *)(v33 + 16) = v41 + 1;
              v42 = v33 + 16 * v41;
              *(_QWORD *)(v42 + 32) = v39;
              *(_QWORD *)(v42 + 40) = v38;
              v35 += v36;
              --v32;
            }
            while (v32);
            v26 = v55;
            swift_bridgeObjectRelease();
            v27 = v64;
            v29 = v54;
          }
          v49 = v58;
          v50 = MEMORY[0x2349296F8](v33, MEMORY[0x24BEE0D00]);
          v52 = v51;
          swift_bridgeObjectRelease();
          v67 = sub_232DE4A70(v50, v52, (uint64_t *)v68);
          sub_232E6F480();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_232DDB000, v29, (os_log_type_t)v57, v62, v49, 0xCu);
          v53 = v56;
          swift_arrayDestroy();
          MEMORY[0x23492A1F0](v53, -1, -1);
          MEMORY[0x23492A1F0](v49, -1, -1);
          sub_232DE8D98(v60, v61);
          swift_unknownObjectRelease();

          *v27 = v26;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_232DE8D98(v60, v61);

          swift_unknownObjectRelease();
          *v27 = v26;
        }
        return;
      }
      __break(1u);
    }
    sub_232DE8D98(v24, v25);
    swift_unexpectedError();
    __break(1u);
    return;
  }
  if (qword_254238030 != -1)
    swift_once();
  v43 = sub_232E6EF28();
  __swift_project_value_buffer(v43, (uint64_t)qword_254238010);
  v44 = sub_232E6EF10();
  v45 = sub_232E6F378();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_232DDB000, v44, v45, "Remote target does not exist", v46, 2u);
    MEMORY[0x23492A1F0](v46, -1, -1);
  }

  sub_232DF50F4();
  swift_allocError();
  *v47 = 0;
  swift_willThrow();
}

uint64_t sub_232DF2538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE *v24;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v40 = __swift_instantiateConcreteTypeFromMangledName(qword_254237A40);
  v3 = MEMORY[0x24BDAC7A8](v40);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v36 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  v11 = sub_232DE8DDC();
  if (v11)
  {
    v12 = v11;
    v13 = (void *)sub_232E6F1E0();
    v14 = objc_msgSend(v12, sel_activityDescriptorForIdentifier_, v13);

    if (v14)
    {
      v15 = sub_232E6EE44();
      v17 = v16;

      sub_232DE4A2C(v15, v17);
      v18 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v15, v17);
      if (v18)
      {
        sub_232E13918((uint64_t)v18, (uint64_t)v10);

        v19 = type metadata accessor for ActivityDescriptor();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 0, 1, v19);
LABEL_12:
        sub_232DE939C((uint64_t)v10, a1, qword_254237A40);
        if (qword_254238030 != -1)
          swift_once();
        v27 = sub_232E6EF28();
        __swift_project_value_buffer(v27, (uint64_t)qword_254238010);
        sub_232DF5040(a1, (uint64_t)v8, qword_254237A40);
        v28 = sub_232E6EF10();
        v29 = sub_232E6F390();
        if (os_log_type_enabled(v28, v29))
        {
          v38 = v17;
          v30 = swift_slowAlloc();
          v37 = v15;
          v31 = (uint8_t *)v30;
          v32 = swift_slowAlloc();
          v39 = v1;
          v33 = v32;
          v42 = v32;
          *(_DWORD *)v31 = 136380675;
          sub_232DF5040((uint64_t)v8, (uint64_t)v5, qword_254237A40);
          v34 = sub_232E6F1F8();
          v41 = sub_232DE4A70(v34, v35, &v42);
          sub_232E6F480();
          swift_bridgeObjectRelease();
          sub_232DDD798((uint64_t)v8, qword_254237A40);
          _os_log_impl(&dword_232DDB000, v28, v29, "Fetched descriptor: %{private}s", v31, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23492A1F0](v33, -1, -1);
          MEMORY[0x23492A1F0](v31, -1, -1);
          swift_unknownObjectRelease();

          return sub_232DE4A18(v37, v38);
        }
        else
        {
          sub_232DE4A18(v15, v17);
          sub_232DDD798((uint64_t)v8, qword_254237A40);

          return swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      v15 = 0;
      v17 = 0xF000000000000000;
    }
    v26 = type metadata accessor for ActivityDescriptor();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
    goto LABEL_12;
  }
  if (qword_254238030 != -1)
    swift_once();
  v20 = sub_232E6EF28();
  __swift_project_value_buffer(v20, (uint64_t)qword_254238010);
  v21 = sub_232E6EF10();
  v22 = sub_232E6F378();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_232DDB000, v21, v22, "Remote target does not exist", v23, 2u);
    MEMORY[0x23492A1F0](v23, -1, -1);
  }

  sub_232DF50F4();
  swift_allocError();
  *v24 = 0;
  return swift_willThrow();
}

uint64_t sub_232DF2990(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(void);
  uint64_t v73;
  void (*v74)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  int EnumCaseMultiPayload;
  uint64_t v82;
  int v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  _BOOL4 v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  BOOL v108;
  int v109;
  uint8_t *v110;
  uint64_t v111;
  uint8_t *v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v120;
  const char *v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint8_t *v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  int *v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  void (*v142)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  void (*v151)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t (*v169)(_QWORD);
  uint64_t v170;
  int v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t *v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  void (*v215)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v216;
  int *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;

  v204 = a5;
  v211 = a4;
  v214 = a1;
  v7 = type metadata accessor for ActivityDescriptor();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v195 = (uint64_t)&v178 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v193 = (uint64_t)&v178 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v209 = (char *)&v178 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v185 = (uint64_t)&v178 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v180 = (uint64_t)&v178 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v186 = (uint64_t)&v178 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v179 = (uint64_t)&v178 - v21;
  v22 = type metadata accessor for OpaqueActivityPayload(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v206 = (char *)&v178 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v192 = (char *)&v178 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v200 = (char *)&v178 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542380F0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v210 = (uint64_t)&v178 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v203 = (uint64_t)&v178 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v199 = (char *)&v178 - v34;
  v35 = type metadata accessor for SubscribedActivity(0);
  v212 = *(_QWORD **)(v35 - 8);
  v213 = v35;
  v36 = MEMORY[0x24BDAC7A8](v35);
  v201 = (char *)&v178 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v190 = (char *)&v178 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v189 = (uint64_t)&v178 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v207 = (char *)&v178 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v181 = (char *)&v178 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v184 = (uint64_t *)((char *)&v178 - v47);
  MEMORY[0x24BDAC7A8](v46);
  v198 = (uint64_t)&v178 - v48;
  v49 = type metadata accessor for ActivityChange.Change(0);
  v50 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (unsigned __int8 *)&v178 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  v54 = MEMORY[0x24BDAC7A8](v53);
  v187 = (uint64_t)&v178 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BDAC7A8](v54);
  v191 = (uint64_t)&v178 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v194 = (uint64_t)&v178 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v182 = (uint64_t)&v178 - v61;
  MEMORY[0x24BDAC7A8](v60);
  v63 = (char *)&v178 - v62;
  v64 = __swift_instantiateConcreteTypeFromMangledName(qword_254237A40);
  v65 = MEMORY[0x24BDAC7A8](v64);
  v205 = (uint64_t)&v178 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = MEMORY[0x24BDAC7A8](v65);
  v188 = (uint64_t)&v178 - v68;
  v69 = MEMORY[0x24BDAC7A8](v67);
  v183 = (uint64_t)&v178 - v70;
  MEMORY[0x24BDAC7A8](v69);
  v71 = *(_QWORD *)(a3 + 16);
  v208 = v8;
  v72 = *(void (**)(void))(v8 + 56);
  v219 = (uint64_t)&v178 - v73;
  v216 = v7;
  v72();
  v202 = v23;
  v74 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v23 + 56);
  v217 = (int *)v22;
  v218 = v63;
  v215 = (void (*)(uint64_t, _QWORD, uint64_t, int *))v74;
  v74(v63, 1, 1, v22);
  v75 = v71;
  v76 = *(_QWORD *)(v71 + 16);
  if (v76)
  {
    v197 = a2;
    v77 = v75 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
    v78 = *(_QWORD *)(v50 + 72);
    v196 = v75;
    swift_bridgeObjectRetain();
    v79 = 4;
    do
    {
      sub_232DED470(v77, (uint64_t)v52, type metadata accessor for ActivityChange.Change);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v82 = v219;
          sub_232DDD798(v219, qword_254237A40);
          sub_232DEDD20((uint64_t)v52, v82, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v72)(v82, 0, 1, v216);
        }
        else
        {
          v80 = (uint64_t)v218;
          sub_232DDD798((uint64_t)v218, &qword_2542379D0);
          sub_232DEDD20((uint64_t)v52, v80, type metadata accessor for OpaqueActivityPayload);
          v215(v80, 0, 1, v217);
        }
      }
      else
      {
        v79 = *v52;
      }
      v77 += v78;
      --v76;
    }
    while (v76);
    swift_bridgeObjectRelease();
    v83 = v79;
    a2 = v197;
    v84 = &unk_254238000;
    if (v79 == 2)
    {
      v85 = v212;
      v86 = v213;
      if (qword_254238030 != -1)
        swift_once();
      v87 = sub_232E6EF28();
      __swift_project_value_buffer(v87, (uint64_t)qword_254238010);
      swift_bridgeObjectRetain_n();
      v88 = sub_232E6EF10();
      v89 = sub_232E6F390();
      v90 = os_log_type_enabled(v88, v89);
      v91 = (uint64_t)v200;
      if (v90)
      {
        v92 = (uint8_t *)swift_slowAlloc();
        v93 = swift_slowAlloc();
        v222 = v93;
        *(_DWORD *)v92 = 136446210;
        swift_bridgeObjectRetain();
        v220 = sub_232DE4A70(v214, a2, &v222);
        v86 = v213;
        v84 = (_QWORD *)&unk_254238000;
        sub_232E6F480();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_232DDB000, v88, v89, "Activity dismissed: %{public}s", v92, 0xCu);
        swift_arrayDestroy();
        v94 = v93;
        v85 = v212;
        MEMORY[0x23492A1F0](v94, -1, -1);
        MEMORY[0x23492A1F0](v92, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v127 = v217;
      v128 = (uint64_t)v199;
      v129 = (uint64_t *)((char *)v211 + v84[183]);
      swift_beginAccess();
      v130 = *v129;
      if (!*(_QWORD *)(*v129 + 16))
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v85[7])(v128, 1, 1, v86);
        goto LABEL_50;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v131 = sub_232DE0F18(v214, a2);
      if ((v132 & 1) != 0)
      {
        sub_232DED470(*(_QWORD *)(v130 + 56) + v85[9] * v131, v128, type metadata accessor for SubscribedActivity);
        v133 = (int *)v85[7];
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v133)(v128, 0, 1, v86);
      }
      else
      {
        v133 = (int *)v85[7];
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v133)(v128, 1, 1, v86);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v85[6])(v128, 1, v86) == 1)
      {
LABEL_50:
        sub_232DDD798(v128, &qword_2542380F0);
        swift_bridgeObjectRetain_n();
        v117 = sub_232E6EF10();
        v118 = sub_232E6F378();
        if (os_log_type_enabled(v117, v118))
        {
          v119 = (uint8_t *)swift_slowAlloc();
          v120 = swift_slowAlloc();
          v220 = v120;
          *(_DWORD *)v119 = 136446210;
          swift_bridgeObjectRetain();
          v221 = sub_232DE4A70(v214, a2, &v220);
          sub_232E6F480();
          swift_bridgeObjectRelease_n();
          v121 = "No activity found to dismiss: %{public}s";
          goto LABEL_52;
        }
LABEL_53:

        swift_bridgeObjectRelease_n();
        goto LABEL_79;
      }
      v143 = v198;
      sub_232DEDD20(v128, v198, type metadata accessor for SubscribedActivity);
      v221 = *(_QWORD *)(v143 + *(int *)(v86 + 28));
      v144 = v182;
      sub_232DF5040((uint64_t)v218, v182, &qword_2542379D0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v202 + 48))(v144, 1, v127) == 1)
      {
        swift_bridgeObjectRetain();
        sub_232DDD798(v144, &qword_2542379D0);
        v145 = (uint64_t)v181;
      }
      else
      {
        v217 = v133;
        sub_232DEDD20(v144, v91, type metadata accessor for OpaqueActivityPayload);
        v158 = v179;
        sub_232DF5040(v91 + v127[8], v179, &qword_254237AD8);
        v159 = type metadata accessor for AlertConfiguration();
        v160 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 48))(v158, 1, v159);
        swift_bridgeObjectRetain();
        sub_232DDD798(v158, &qword_254237AD8);
        v161 = v194;
        sub_232DED470(v91, v194, type metadata accessor for OpaqueActivityPayload);
        v162 = v91;
        v163 = v215;
        v215(v161, 0, 1, v127);
        sub_232DF5414(v161, 0);
        if (v160 != 1)
        {
          sub_232DED470(v162, v161, type metadata accessor for OpaqueActivityPayload);
          v163(v161, 0, 1, v127);
          sub_232DF5414(v161, 1);
        }
        sub_232DF51B8(v162, type metadata accessor for OpaqueActivityPayload);
        v145 = (uint64_t)v181;
        v133 = v217;
      }
      v170 = v183;
      sub_232DF5040(v219, v183, qword_254237A40);
      sub_232DED470(v198, v145, type metadata accessor for SubscribedActivity);
      v171 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v208 + 48))(v170, 1, v216);
      v172 = v185;
      if (v171 == 1)
      {
        sub_232DED470(v145 + *(int *)(v86 + 24), v185, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
        sub_232DF51B8(v145, type metadata accessor for SubscribedActivity);
        sub_232DDD798(v170, qword_254237A40);
      }
      else
      {
        sub_232DF51B8(v145, type metadata accessor for SubscribedActivity);
        sub_232DEDD20(v170, v172, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      }
      v173 = v221;
      v174 = v214;
      v175 = (uint64_t)v184;
      *v184 = v214;
      *(_QWORD *)(v175 + 8) = a2;
      *(_BYTE *)(v175 + 16) = 2;
      sub_232DEDD20(v172, v175 + *(int *)(v86 + 24), (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      *(_QWORD *)(v175 + *(int *)(v86 + 28)) = v173;
      v176 = v203;
      sub_232DED470(v175, v203, type metadata accessor for SubscribedActivity);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v133)(v176, 0, 1, v86);
      swift_bridgeObjectRetain_n();
      sub_232DF53F0(v176, v174, a2);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v133)(v176, 1, 1, v86);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_232DF53F0(v176, v174, a2);
      swift_endAccess();
      sub_232DF51B8(v175, type metadata accessor for SubscribedActivity);
      v168 = v198;
      v169 = type metadata accessor for SubscribedActivity;
LABEL_78:
      sub_232DF51B8(v168, v169);
      goto LABEL_79;
    }
  }
  else
  {
    v83 = 4;
  }
  v95 = (uint64_t *)((char *)v211
                  + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_activities);
  swift_beginAccess();
  v211 = v95;
  v96 = *v95;
  v97 = *(_QWORD *)(*v95 + 16);
  v98 = v212;
  v99 = v213;
  if (v97)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v100 = sub_232DE0F18(v214, a2);
    v101 = v210;
    if ((v102 & 1) != 0)
    {
      sub_232DED470(*(_QWORD *)(v96 + 56) + v98[9] * v100, v210, type metadata accessor for SubscribedActivity);
      v103 = (_QWORD *)v98[7];
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v103)(v101, 0, 1, v99);
    }
    else
    {
      v103 = (_QWORD *)v98[7];
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v103)(v210, 1, 1, v99);
    }
    v104 = (uint64_t)v207;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v98[6])(v101, 1, v99) != 1)
    {
      LODWORD(v206) = v83;
      sub_232DEDD20(v101, v104, type metadata accessor for SubscribedActivity);
      if (qword_254238030 != -1)
        swift_once();
      v212 = v103;
      v122 = sub_232E6EF28();
      __swift_project_value_buffer(v122, (uint64_t)qword_254238010);
      swift_bridgeObjectRetain_n();
      v123 = sub_232E6EF10();
      v124 = sub_232E6F390();
      if (os_log_type_enabled(v123, v124))
      {
        v125 = (uint8_t *)swift_slowAlloc();
        v126 = swift_slowAlloc();
        v220 = v126;
        *(_DWORD *)v125 = 136446210;
        swift_bridgeObjectRetain();
        v221 = sub_232DE4A70(v214, a2, &v220);
        v104 = (uint64_t)v207;
        sub_232E6F480();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_232DDB000, v123, v124, "Received updated activity: %{public}s", v125, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23492A1F0](v126, -1, -1);
        MEMORY[0x23492A1F0](v125, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v135 = v217;
      v136 = (uint64_t)v192;
      v137 = v191;
      v220 = *(_QWORD *)(v104 + *(int *)(v99 + 28));
      sub_232DF5040((uint64_t)v218, v191, &qword_2542379D0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v202 + 48))(v137, 1, v135) == 1)
      {
        swift_bridgeObjectRetain();
        sub_232DDD798(v137, &qword_2542379D0);
      }
      else
      {
        sub_232DEDD20(v137, v136, type metadata accessor for OpaqueActivityPayload);
        v138 = v186;
        sub_232DF5040(v136 + v135[8], v186, &qword_254237AD8);
        v139 = type metadata accessor for AlertConfiguration();
        v140 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 48))(v138, 1, v139);
        swift_bridgeObjectRetain();
        sub_232DDD798(v138, &qword_254237AD8);
        v141 = v194;
        sub_232DED470(v136, v194, type metadata accessor for OpaqueActivityPayload);
        v142 = v215;
        v215(v141, 0, 1, v135);
        sub_232DF5414(v141, 0);
        if (v140 != 1)
        {
          sub_232DED470(v136, v141, type metadata accessor for OpaqueActivityPayload);
          v142(v141, 0, 1, v135);
          sub_232DF5414(v141, 1);
        }
        sub_232DF51B8(v136, type metadata accessor for OpaqueActivityPayload);
      }
      v83 = (int)v206;
      v152 = v220;
      v153 = v189;
      sub_232DED470(v104, v189, type metadata accessor for SubscribedActivity);
      v154 = (uint64_t)v190;
      if (v83 == 4)
        LOBYTE(v83) = *(_BYTE *)(v153 + 16);
      sub_232DF51B8(v153, type metadata accessor for SubscribedActivity);
      v155 = v188;
      sub_232DF5040(v219, v188, qword_254237A40);
      sub_232DEDD20(v104, v154, type metadata accessor for SubscribedActivity);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 48))(v155, 1, v216) == 1)
      {
        v156 = v193;
        sub_232DED470(v154 + *(int *)(v99 + 24), v193, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
        sub_232DF51B8(v154, type metadata accessor for SubscribedActivity);
        sub_232DDD798(v155, qword_254237A40);
      }
      else
      {
        sub_232DF51B8(v154, type metadata accessor for SubscribedActivity);
        v156 = v193;
        sub_232DEDD20(v155, v193, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      }
      v157 = v156;
      v114 = (uint64_t)v209;
      goto LABEL_71;
    }
  }
  else
  {
    v103 = (_QWORD *)v212[7];
    v101 = v210;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v103)(v210, 1, 1, v213);
  }
  sub_232DDD798(v101, &qword_2542380F0);
  if (qword_254238030 != -1)
    swift_once();
  v105 = sub_232E6EF28();
  __swift_project_value_buffer(v105, (uint64_t)qword_254238010);
  swift_bridgeObjectRetain_n();
  v106 = sub_232E6EF10();
  v107 = sub_232E6F390();
  v108 = os_log_type_enabled(v106, v107);
  v212 = v103;
  if (v108)
  {
    v109 = v83;
    v110 = (uint8_t *)swift_slowAlloc();
    v111 = swift_slowAlloc();
    v220 = v111;
    *(_DWORD *)v110 = 136446210;
    swift_bridgeObjectRetain();
    v221 = sub_232DE4A70(v214, a2, &v220);
    v99 = v213;
    sub_232E6F480();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_232DDB000, v106, v107, "Received new activity: %{public}s", v110, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v111, -1, -1);
    v112 = v110;
    v83 = v109;
    MEMORY[0x23492A1F0](v112, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v113 = v217;
  v114 = (uint64_t)v209;
  v115 = (uint64_t)v206;
  v116 = v205;
  if (v83 != 4)
  {
    sub_232DF5040(v219, v205, qword_254237A40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 48))(v116, 1, v216) == 1)
    {
      sub_232DDD798(v116, qword_254237A40);
      swift_bridgeObjectRetain_n();
      v117 = sub_232E6EF10();
      v118 = sub_232E6F378();
      if (!os_log_type_enabled(v117, v118))
        goto LABEL_53;
      v119 = (uint8_t *)swift_slowAlloc();
      v120 = swift_slowAlloc();
      v220 = v120;
      *(_DWORD *)v119 = 136446210;
      swift_bridgeObjectRetain();
      v221 = sub_232DE4A70(v214, a2, &v220);
      sub_232E6F480();
      swift_bridgeObjectRelease_n();
      v121 = "Received activity without descriptor: %{public}s";
      goto LABEL_52;
    }
    sub_232DEDD20(v116, v195, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
    v220 = MEMORY[0x24BEE4B00];
    v134 = v187;
    sub_232DF5040((uint64_t)v218, v187, &qword_2542379D0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v202 + 48))(v134, 1, v113) == 1)
    {
      sub_232DDD798(v134, &qword_2542379D0);
    }
    else
    {
      v146 = v83;
      sub_232DEDD20(v134, v115, type metadata accessor for OpaqueActivityPayload);
      v147 = v180;
      sub_232DF5040(v115 + v113[8], v180, &qword_254237AD8);
      v148 = type metadata accessor for AlertConfiguration();
      v149 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 48))(v147, 1, v148);
      sub_232DDD798(v147, &qword_254237AD8);
      v150 = v194;
      sub_232DED470(v115, v194, type metadata accessor for OpaqueActivityPayload);
      v151 = v215;
      v215(v150, 0, 1, v113);
      sub_232DF5414(v150, 0);
      if (v149 != 1)
      {
        sub_232DED470(v115, v150, type metadata accessor for OpaqueActivityPayload);
        v151(v150, 0, 1, v113);
        sub_232DF5414(v150, 1);
      }
      sub_232DF51B8(v115, type metadata accessor for OpaqueActivityPayload);
      LOBYTE(v83) = v146;
    }
    v152 = v220;
    v157 = v195;
LABEL_71:
    sub_232DEDD20(v157, v114, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
    v164 = (uint64_t)v201;
    sub_232DED470(v114, (uint64_t)&v201[*(int *)(v99 + 24)], (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
    v165 = v214;
    *(_QWORD *)v164 = v214;
    *(_QWORD *)(v164 + 8) = a2;
    *(_BYTE *)(v164 + 16) = v83;
    *(_QWORD *)(v164 + *(int *)(v99 + 28)) = v152;
    v166 = v203;
    sub_232DED470(v164, v203, type metadata accessor for SubscribedActivity);
    v167 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v212;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v212)(v166, 0, 1, v99);
    swift_bridgeObjectRetain_n();
    sub_232DF53F0(v166, v165, a2);
    sub_232DED470(v164, v166, type metadata accessor for SubscribedActivity);
    v167(v166, 0, 1, v99);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_232DF53F0(v166, v165, a2);
    swift_endAccess();
    sub_232DF51B8(v164, type metadata accessor for SubscribedActivity);
    v168 = v114;
    v169 = (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor;
    goto LABEL_78;
  }
  swift_bridgeObjectRetain_n();
  v117 = sub_232E6EF10();
  v118 = sub_232E6F378();
  if (!os_log_type_enabled(v117, v118))
    goto LABEL_53;
  v119 = (uint8_t *)swift_slowAlloc();
  v120 = swift_slowAlloc();
  v220 = v120;
  *(_DWORD *)v119 = 136446210;
  swift_bridgeObjectRetain();
  v221 = sub_232DE4A70(v214, a2, &v220);
  sub_232E6F480();
  swift_bridgeObjectRelease_n();
  v121 = "Received activity without state: %{public}s";
LABEL_52:
  _os_log_impl(&dword_232DDB000, v117, v118, v121, v119, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x23492A1F0](v120, -1, -1);
  MEMORY[0x23492A1F0](v119, -1, -1);

LABEL_79:
  sub_232DDD798((uint64_t)v218, &qword_2542379D0);
  return sub_232DDD798(v219, qword_254237A40);
}

uint64_t sub_232DF4278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v15;

  if (qword_254238030 != -1)
    swift_once();
  v4 = sub_232E6EF28();
  __swift_project_value_buffer(v4, (uint64_t)qword_254238010);
  v5 = sub_232E6EF10();
  v6 = sub_232E6F390();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134349056;
    sub_232E6F480();
    _os_log_impl(&dword_232DDB000, v5, v6, "Client %{public}llu removed", v7, 0xCu);
    MEMORY[0x23492A1F0](v7, -1, -1);
  }

  v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton__queue_subscriptions);
  swift_beginAccess();
  v9 = sub_232DDD904(a1);
  if ((v10 & 1) != 0)
  {
    v11 = v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v8;
    v15 = *v8;
    *v8 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_232E11954();
      v13 = v15;
    }
    sub_232DF8F18(v11, v13);
    *v8 = v13;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  return sub_232DE89A4();
}

void sub_232DF44C0(uint64_t a1)
{
  sub_232DE16F4(a1, "Interrupted");
}

void sub_232DF44CC(uint64_t a1)
{
  sub_232DE16F4(a1, "Invalidated");
}

void sub_232DF44D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232DF4528();

  }
}

void sub_232DF4528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_1602B0B984EDF6E52CE840E80AB3FBCA9Singleton_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    sub_232DE89A4();
  }
  else
  {
    __break(1u);
    swift_once();
    v7 = sub_232E6EF28();
    __swift_project_value_buffer(v7, (uint64_t)qword_254238010);
    v8 = v4;
    v9 = v4;
    v10 = sub_232E6EF10();
    v11 = sub_232E6F378();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v18 = (uint64_t)v4;
      v19 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
      v15 = sub_232E6F1F8();
      v18 = sub_232DE4A70(v15, v16, &v19);
      sub_232E6F480();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232DDB000, v10, v11, "Could not reconnect output client: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v13, -1, -1);
      MEMORY[0x23492A1F0](v12, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_232DF4794(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_232DF47A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_232DF47C8()
{
  sub_232DEF6C0();
}

unint64_t sub_232DF47D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255FFC3D0;
  if (!qword_255FFC3D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255FFC3C8);
    v2 = sub_232DDDAD8(&qword_255FFC328, type metadata accessor for ActivityDescriptorState, (uint64_t)&protocol conformance descriptor for ActivityDescriptorState);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255FFC3D0);
  }
  return result;
}

uint64_t sub_232DF484C()
{
  return sub_232DEF39C();
}

uint64_t sub_232DF4854(uint64_t a1)
{
  uint64_t v1;

  return sub_232DEFD14(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_232DF486C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232DF4890()
{
  uint64_t v0;

  return sub_232DEFDF8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_232DF48A8@<X0>(uint64_t a1@<X8>)
{
  return sub_232DF2538(a1);
}

void sub_232DF48C4(_QWORD *a1@<X8>)
{
  sub_232DF1FAC((uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor, (SEL *)&selRef_activityDescriptorsWithError_, (void (*)(void))sub_232DF5174, "Fetched descriptors: %{public}s", a1);
}

uint64_t sub_232DF4904(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), void (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  BOOL v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  void (*v28)(BOOL, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[16];
  _BYTE v40[40];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v28 = a4;
  v5 = (uint64_t (*)(_QWORD))a3;
  a3(0);
  v8 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (_QWORD *)((char *)v27 - v12);
  result = MEMORY[0x24BEE4AF8];
  v45 = MEMORY[0x24BEE4AF8];
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v27[1] = v4;
    v15 = 0;
    v33 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v36 = a1 + v33;
    v38 = *(_QWORD *)(v11 + 72);
    v34 = MEMORY[0x24BEE4AF8];
    v35 = a2 + 16;
    v32 = v5;
    v31 = a2;
    v30 = v10;
    v29 = (char *)v27 - v12;
    while (1)
    {
      sub_232DED470(v36 + v38 * v15, (uint64_t)v13, v5);
      sub_232DE939C(v35, (uint64_t)v40, &qword_2542377E8);
      sub_232DE939C((uint64_t)v40, (uint64_t)&v41, &qword_2542377E8);
      v16 = v42;
      if (v42)
      {
        v17 = v13[12];
        v18 = *(_QWORD *)(v17 + 16);
        if (v18)
        {
          v19 = v41;
          swift_bridgeObjectRetain();
          v20 = (_BYTE *)(v17 + 88);
          do
          {
            if (*v20 == 1)
            {
              v21 = *((_QWORD *)v20 - 7) == v19 && *((_QWORD *)v20 - 6) == v16;
              if (v21 || (sub_232E6F6E4() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v22 = 1;
                goto LABEL_20;
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_232DDDF74(0, 0);
              sub_232DDDF74(v19, v16);
            }
            v20 += 64;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
          v22 = 0;
LABEL_20:
          v5 = v32;
          a2 = v31;
          v10 = v30;
          v13 = v29;
        }
        else
        {
          v22 = 0;
        }
      }
      else
      {
        v22 = 1;
      }
      sub_232DE939C(a2, (uint64_t)v39, &qword_2542377D0);
      sub_232DE939C((uint64_t)v39, (uint64_t)&v43, &qword_2542377D0);
      if (!v44 || v13[2] == v43 && v13[3] == v44)
      {
        if ((v22 & 1) != 0)
          goto LABEL_27;
      }
      else if ((v22 & sub_232E6F6E4() & 1) != 0)
      {
LABEL_27:
        sub_232DEDD20((uint64_t)v13, (uint64_t)v10, v5);
        v23 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v24 = v45;
        v26 = *(_QWORD *)(v45 + 16);
        v25 = *(_QWORD *)(v45 + 24);
        if (v26 >= v25 >> 1)
        {
          v28(v25 > 1, v26 + 1, 1);
          v24 = v45;
        }
        *(_QWORD *)(v24 + 16) = v26 + 1;
        v34 = v24;
        sub_232DEDD20((uint64_t)v10, v24 + v33 + v26 * v38, v5);
        goto LABEL_4;
      }
      sub_232DF51B8((uint64_t)v13, v5);
LABEL_4:
      if (++v15 == v37)
        return v45;
    }
  }
  return result;
}

uint64_t sub_232DF4CC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_232DF4CE4(uint64_t *a1)
{
  uint64_t v1;

  return sub_232DF0B04(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_232DF4CF0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_232DF0D94(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

uint64_t sub_232DF4D00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_232DF1488(v1 + 16, a1);
}

uint64_t sub_232DF4D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_232DF1968(v1 + 16, a1);
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t method lookup function for ActivityOutputClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityOutputClient.serviceClient.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ActivityOutputClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t sub_232DF4D70()
{
  return type metadata accessor for Singleton();
}

uint64_t sub_232DF4D78()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_232DF4D9C(uint64_t a1)
{
  uint64_t v1;

  sub_232E5B94C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232DF4DA4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_232DF2990(a1, a2, a3, *(uint64_t **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_232DF4DAC(uint64_t a1, void (*a2)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  int64_t v22;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v22)
      return swift_release();
    v18 = *(_QWORD *)(v20 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v22)
        return swift_release();
      v18 = *(_QWORD *)(v20 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v22)
          return swift_release();
        v18 = *(_QWORD *)(v20 + 8 * v8);
        if (!v18)
        {
          v8 = v17 + 3;
          if (v17 + 3 >= v22)
            return swift_release();
          v18 = *(_QWORD *)(v20 + 8 * v8);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v18 - 1) & v18;
    v10 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = (_QWORD *)(*(_QWORD *)(a1 + 56) + 24 * v10);
    v15 = v14[1];
    v16 = v14[2];
    v21[0] = *v14;
    v21[1] = v15;
    v21[2] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v12, v13, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v22)
    return swift_release();
  v18 = *(_QWORD *)(v20 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v22)
      return swift_release();
    v18 = *(_QWORD *)(v20 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_232DF4FB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_232DF4FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscribedActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_232DF5030(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_232DF5040(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_232DF5084()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_232DF50A8()
{
  return swift_deallocObject();
}

uint64_t sub_232DF50B8()
{
  return swift_deallocObject();
}

uint64_t sub_232DF50C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232DF50EC(uint64_t a1)
{
  uint64_t v1;

  sub_232DF44D8(a1, v1);
}

unint64_t sub_232DF50F4()
{
  unint64_t result;

  result = qword_255FFD3B0;
  if (!qword_255FFD3B0)
  {
    result = MEMORY[0x23492A124](&unk_232E70CB4, &type metadata for OutputClientError);
    atomic_store(result, (unint64_t *)&qword_255FFD3B0);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_232DF5174()
{
  unint64_t result;

  result = qword_255FFD3D0;
  if (!qword_255FFD3D0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for XPCCodableActivityDescriptors, &type metadata for XPCCodableActivityDescriptors);
    atomic_store(result, (unint64_t *)&qword_255FFD3D0);
  }
  return result;
}

uint64_t sub_232DF51B8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_232DF51F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_232DF5218()
{
  uint64_t v0;

  return sub_232DF4278(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t storeEnumTagSinglePayload for OutputClientError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_232DF526C + 4 * byte_232E70B35[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_232DF52A0 + 4 * byte_232E70B30[v4]))();
}

uint64_t sub_232DF52A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DF52A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232DF52B0);
  return result;
}

uint64_t sub_232DF52BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232DF52C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_232DF52C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DF52D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DF52DC(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for OutputClientError()
{
  return &type metadata for OutputClientError;
}

unint64_t sub_232DF52FC()
{
  unint64_t result;

  result = qword_255FFD3E8;
  if (!qword_255FFD3E8)
  {
    result = MEMORY[0x23492A124](&unk_232E70C8C, &type metadata for OutputClientError);
    atomic_store(result, (unint64_t *)&qword_255FFD3E8);
  }
  return result;
}

void sub_232DF5340(_QWORD *a1@<X8>)
{
  sub_232DEAAFC(a1);
}

void sub_232DF5354(_QWORD *a1@<X8>)
{
  sub_232DF48C4(a1);
}

uint64_t sub_232DF53C4()
{
  return sub_232DEAABC();
}

uint64_t sub_232DF53D8@<X0>(uint64_t a1@<X8>)
{
  return sub_232DF48A8(a1);
}

uint64_t sub_232DF53F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232DF55EC(a1, a2, a3, &qword_2542380F0, type metadata accessor for SubscribedActivity, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_232E56C8C, (void (*)(void))sub_232E11934);
}

uint64_t sub_232DF5414(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OpaqueActivityPayload(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_232DDD798(a1, &qword_2542379D0);
    v13 = sub_232E104D4(v5);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_232E11AE0();
        v17 = v22;
      }
      sub_232DEDD20(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for OpaqueActivityPayload);
      sub_232DF90AC(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_232DDD798((uint64_t)v8, &qword_2542379D0);
  }
  else
  {
    sub_232DEDD20(a1, (uint64_t)v12, type metadata accessor for OpaqueActivityPayload);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_232E56CA8((uint64_t)v12, v5, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_232DF55EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(void))
{
  uint64_t *v7;
  uint64_t *v12;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;

  v12 = v7;
  v16 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5(0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v25 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(a1, 1) == 1)
  {
    sub_232DDD798(a1, a4);
    sub_232DF8CDC(a2, a3, a5, a7, (uint64_t)v18);
    swift_bridgeObjectRelease();
    return sub_232DDD798((uint64_t)v18, a4);
  }
  else
  {
    sub_232DEDD20(a1, (uint64_t)v21, a5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *v12;
    *v12 = 0x8000000000000000;
    a6(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    *v12 = v26;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_232DF5768()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_254238040);
  __swift_project_value_buffer(v0, (uint64_t)qword_254238040);
  return sub_232E6EF1C();
}

void sub_232DF57E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;

  v2 = a2 + 16;
  if (qword_254238058 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_254238040);
  v4 = sub_232E6EF10();
  v5 = sub_232E6F36C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_232DDB000, v4, v5, "ActivityClient Service: Interrupted", v6, 2u);
    MEMORY[0x23492A1F0](v6, -1, -1);
  }

  swift_beginAccess();
  v7 = MEMORY[0x23492A28C](v2);
  if (v7)
  {
    v8 = (void *)v7;
    sub_232DF5C20();

  }
}

void sub_232DF58EC(uint64_t a1)
{
  sub_232DE1A74(a1, "ActivityClient Service: Invalidated");
}

void sub_232DF58F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232DE3B68();

  }
}

uint64_t sub_232DF5948()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue);
  *v4 = v5;
  (*((void (**)(_QWORD *, _QWORD, NSObject *))isa + 13))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  v7 = (*((uint64_t (**)(_QWORD *, NSObject *))isa + 1))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232DE3B68(v7);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_connection);
  if (!v8)
  {
    if (qword_254238058 != -1)
      swift_once();
    v9 = sub_232E6EF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_254238040);
    v1 = sub_232E6EF10();
    v10 = sub_232E6F384();
    if (os_log_type_enabled(v1, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_232DDB000, v1, v10, "ActivityInputClient: Failed to establish a connection", v11, 2u);
      MEMORY[0x23492A1F0](v11, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v8;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_232DE939C((uint64_t)v18, (uint64_t)v19, &qword_2542382E8);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542373D8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v17[1];
    }
  }
  else
  {
    sub_232DDD798((uint64_t)v19, &qword_2542382E8);
  }
  if (qword_254238058 != -1)
    goto LABEL_20;
LABEL_15:
  v13 = sub_232E6EF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_254238040);
  v14 = sub_232E6EF10();
  v15 = sub_232E6F384();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_232DDB000, v14, v15, "ActivityInputClient: Failed to cast connection to server interface protocol", v16, 2u);
    MEMORY[0x23492A1F0](v16, -1, -1);
  }

LABEL_18:
  return 0;
}

uint64_t sub_232DF5C20()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  __int128 v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t *v52;
  char *v53;
  int64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  char *v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  __int128 v66;
  __int128 v67;

  v1 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ActivityRequest();
  v59 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v47 - v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237E50);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)&v47 - v13;
  v14 = sub_232E6F12C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue);
  *(_QWORD *)v17 = v18;
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v19 = v18;
  LOBYTE(v18) = sub_232E6F144();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v20 = *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_connection);
  if (v20)
  {
    if (objc_msgSend(v20, sel_remoteTarget))
    {
      sub_232E6F498();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v65, 0, sizeof(v65));
    }
    sub_232DE939C((uint64_t)v65, (uint64_t)&v66, &qword_2542382E8);
    if (*((_QWORD *)&v67 + 1))
      return sub_232DDD798((uint64_t)&v66, &qword_2542382E8);
  }
  else
  {
    v66 = 0u;
    v67 = 0u;
  }
  sub_232DDD798((uint64_t)&v66, &qword_2542382E8);
  v17 = (char *)v0 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient__queue_ephemeralActivityRequests;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v17 + 16))
  {
    sub_232DE3B68(result);
    if (qword_254238058 == -1)
    {
LABEL_11:
      v22 = sub_232E6EF28();
      v23 = __swift_project_value_buffer(v22, (uint64_t)qword_254238040);
      v24 = v0;
      v55 = v23;
      v25 = sub_232E6EF10();
      v26 = sub_232E6F390();
      v0 = v26;
      v27 = os_log_type_enabled(v25, v26);
      v60 = v24;
      if (v27)
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v28 = 134349056;
        *(_QWORD *)&v65[0] = *(_QWORD *)(*(_QWORD *)v17 + 16);
        sub_232E6F480();

        _os_log_impl(&dword_232DDB000, v25, (os_log_type_t)v0, "Reconnecting %{public}ld activities", v28, 0xCu);
        MEMORY[0x23492A1F0](v28, -1, -1);
      }
      else
      {

        v25 = v24;
      }
      v29 = (uint64_t)v61;

      v30 = *(_QWORD *)v17;
      v31 = *(_QWORD *)(*(_QWORD *)v17 + 64);
      v49 = *(_QWORD *)v17 + 64;
      v32 = 1 << *(_BYTE *)(v30 + 32);
      v33 = -1;
      if (v32 < 64)
        v33 = ~(-1 << v32);
      v34 = v33 & v31;
      v52 = &v64;
      v54 = (unint64_t)(v32 + 63) >> 6;
      v48 = v54 - 1;
      v58 = v30;
      result = swift_bridgeObjectRetain();
      v35 = 0;
      v17 = 0;
      *(_QWORD *)&v36 = 136446210;
      v51 = v36;
      v50 = MEMORY[0x24BEE4AD8] + 8;
      v53 = v3;
      v56 = v12;
      while (1)
      {
        if (v34)
        {
          v62 = v35;
          v63 = (v34 - 1) & v34;
          v37 = __clz(__rbit64(v34)) | (v35 << 6);
          goto LABEL_19;
        }
        v43 = v35 + 1;
        if (__OFADD__(v35, 1))
        {
          __break(1u);
          goto LABEL_46;
        }
        if (v43 >= v54)
          goto LABEL_30;
        v44 = *(_QWORD *)(v49 + 8 * v43);
        if (v44)
          goto LABEL_23;
        v35 += 2;
        if (v43 + 1 >= v54)
        {
LABEL_42:
          v62 = v43;
          goto LABEL_31;
        }
        v44 = *(_QWORD *)(v49 + 8 * v35);
        if (v44)
          goto LABEL_26;
        if (v43 + 2 >= v54)
        {
LABEL_30:
          v62 = v35;
        }
        else
        {
          v44 = *(_QWORD *)(v49 + 8 * (v43 + 2));
          if (v44)
          {
            v43 += 2;
            goto LABEL_23;
          }
          v35 = v43 + 3;
          if (v43 + 3 < v54)
          {
            v44 = *(_QWORD *)(v49 + 8 * v35);
            if (!v44)
            {
              while (1)
              {
                v43 = v35 + 1;
                if (__OFADD__(v35, 1))
                  break;
                if (v43 >= v54)
                {
                  v43 = v48;
                  goto LABEL_42;
                }
                v44 = *(_QWORD *)(v49 + 8 * v43);
                ++v35;
                if (v44)
                  goto LABEL_23;
              }
              __break(1u);
              return result;
            }
LABEL_26:
            v43 = v35;
LABEL_23:
            v62 = v43;
            v63 = (v44 - 1) & v44;
            v37 = __clz(__rbit64(v44)) + (v43 << 6);
LABEL_19:
            v38 = *(_QWORD *)(v58 + 56);
            v39 = (_QWORD *)(*(_QWORD *)(v58 + 48) + 16 * v37);
            v40 = v39[1];
            *v12 = *v39;
            v12[1] = v40;
            v41 = v38 + *(_QWORD *)(v59 + 72) * v37;
            v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFD420);
            sub_232DED470(v41, (uint64_t)v12 + *(int *)(v42 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v12, 0, 1, v42);
            swift_bridgeObjectRetain();
            v29 = (uint64_t)v61;
            goto LABEL_32;
          }
          v62 = v43 + 2;
        }
LABEL_31:
        v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFD420);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v12, 1, 1, v45);
        v63 = 0;
LABEL_32:
        sub_232DE939C((uint64_t)v12, v29, &qword_254237E50);
        v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFD420);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v29, 1, v46) == 1)
          return swift_release();
        swift_bridgeObjectRelease();
        sub_232DEDD20(v29 + *(int *)(v46 + 48), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
        v0 = v60;
        sub_232DF6414(v8, (uint64_t)v3);
        sub_232DF51B8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
        result = sub_232DF51B8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
        v35 = v62;
        v34 = v63;
      }
    }
LABEL_47:
    swift_once();
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_232DF6414@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  _BOOL4 v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  int *v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char v72;
  char v73;
  char v74;
  char v75;
  uint64_t v76;
  char v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  id v105[5];

  v99 = a2;
  v3 = v2;
  v103 = a1;
  v105[3] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237420);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_254237A40);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v98 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v86 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v101 = (char *)&v86 - v13;
  v102 = type metadata accessor for ActivityRequest();
  v14 = *(_QWORD *)(v102 - 8);
  v15 = MEMORY[0x24BDAC7A8](v102);
  v96 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v86 - v17;
  v19 = sub_232E6F12C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (id *)((char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(void **)&v3[OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue];
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x24BEE5610], v19);
  v24 = v23;
  LOBYTE(v23) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  v97 = v12;
  v25 = sub_232DF5948();
  if (!v25)
  {
    sub_232DF9980();
    swift_allocError();
    *(_OWORD *)v34 = xmmword_232E70D00;
    *(_OWORD *)(v34 + 16) = 0u;
    *(_OWORD *)(v34 + 32) = 0u;
    *(_OWORD *)(v34 + 48) = 0u;
    *(_QWORD *)(v34 + 64) = 0;
    return swift_willThrow();
  }
  v12 = (char *)v25;
  if (qword_254238058 != -1)
    goto LABEL_16;
LABEL_4:
  v26 = sub_232E6EF28();
  __swift_project_value_buffer(v26, (uint64_t)qword_254238040);
  sub_232DED470((uint64_t)v103, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
  v27 = sub_232E6EF10();
  v28 = sub_232E6F390();
  v29 = v28;
  v30 = os_log_type_enabled(v27, v28);
  v94 = v3;
  v95 = v6;
  v93 = v14;
  if (v30)
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v3 = (char *)swift_slowAlloc();
    v105[0] = v3;
    *(_DWORD *)v31 = 136446210;
    v32 = ActivityRequest.description.getter();
    v104 = sub_232DE4A70(v32, v33, (uint64_t *)v105);
    sub_232E6F480();
    swift_bridgeObjectRelease();
    sub_232DF51B8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
    _os_log_impl(&dword_232DDB000, v27, (os_log_type_t)v29, "Requesting an activity: %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v3, -1, -1);
    MEMORY[0x23492A1F0](v31, -1, -1);
  }
  else
  {
    sub_232DF51B8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
  }

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8(&qword_2542374C8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityRequest, (uint64_t)&protocol conformance descriptor for ActivityRequest);
  v36 = v100;
  v37 = sub_232E6EDC0();
  v39 = (uint64_t)v101;
  if (v36)
    goto LABEL_18;
  v40 = v37;
  v41 = v38;
  v42 = (void *)sub_232E6EE2C();
  sub_232DE8D98(v40, v41);
  swift_release();
  v43 = sub_232E6EE44();
  v45 = v44;

  v46 = (void *)sub_232E6EE2C();
  v105[0] = 0;
  v47 = objc_msgSend(v12, sel_requestActivityWithRequest_error_, v46, v105);

  v48 = v105[0];
  if (!v47)
  {
    v85 = v48;
    sub_232E6EDF0();

    swift_willThrow();
    sub_232DE8D98(v43, v45);
    return swift_unknownObjectRelease();
  }
  v90 = v43;
  v91 = v12;
  v100 = v45;
  v49 = sub_232E6EE44();
  v51 = v50;

  v87 = v49;
  v88 = v51;
  v52 = (void *)sub_232E6EE2C();
  v53 = type metadata accessor for ActivityDescriptor();
  v92 = *(_QWORD *)(v53 - 8);
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56);
  v54(v39, 1, 1, v53);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v86 = v52;
  v3 = (char *)sub_232E6EE44();
  v56 = v55;
  sub_232DDDAD8(&qword_254237EA0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
  v57 = (uint64_t)v97;
  sub_232E6ED9C();
  v89 = 0;
  sub_232DDD798(v39, qword_254237A40);
  sub_232DE8D98((uint64_t)v3, v56);
  swift_release();
  v54(v57, 0, 1, v53);
  sub_232DE939C(v57, v39, qword_254237A40);
  v29 = v98;
  sub_232DF5040(v39, v98, qword_254237A40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v29, 1, v53) == 1)
  {
    __break(1u);
LABEL_18:
    swift_unexpectedError();
    __break(1u);
    sub_232DE8D98((uint64_t)v3, v29);
    result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  sub_232DDD798(v39, qword_254237A40);
  sub_232DEDD20(v29, v99, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);

  v58 = (int *)v102;
  if (*((_BYTE *)v103 + *(int *)(v102 + 44)) == 1)
  {
    v59 = v103;
    v60 = v103[2];
    v86 = (id)v103[3];
    v61 = v86;
    v62 = v103[5];
    v92 = v103[4];
    v63 = v92;
    v64 = v96;
    sub_232DED470((uint64_t)v103 + *(int *)(v102 + 28), (uint64_t)&v96[*(int *)(v102 + 28)], (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
    v65 = v58[9];
    v66 = (char *)v59 + v58[8];
    v67 = *((_QWORD *)v66 + 1);
    v97 = *(char **)v66;
    v68 = v97;
    v98 = v67;
    v69 = v66[16];
    v70 = (char *)v59 + v65;
    v101 = *(char **)((char *)v59 + v65);
    v71 = v101;
    LOBYTE(v65) = *((_BYTE *)v59 + v65 + 8);
    v72 = v70[9];
    v73 = v70[10];
    v74 = v70[11];
    v75 = v70[12];
    v76 = *(_QWORD *)((char *)v59 + v58[10]);
    v77 = *((_BYTE *)v59 + v58[12]);
    v78 = (void *)*((_QWORD *)v70 + 2);
    LOBYTE(v70) = *((_BYTE *)v59 + v58[13]);
    v80 = *(_QWORD *)(v99 + 8);
    v103 = *(_QWORD **)v99;
    v79 = v103;
    v64[2] = v60;
    v64[3] = v61;
    v64[4] = v63;
    v64[5] = v62;
    v81 = (char *)v64 + v58[8];
    *(_QWORD *)v81 = v68;
    *((_QWORD *)v81 + 1) = v67;
    v81[16] = v69;
    v82 = (char *)v64 + v58[9];
    *(_QWORD *)v82 = v71;
    v82[8] = v65;
    v82[9] = v72;
    v82[10] = v73;
    v82[11] = v74;
    v82[12] = v75;
    *((_QWORD *)v82 + 2) = v78;
    *(_QWORD *)((char *)v64 + v58[10]) = v76;
    *((_BYTE *)v64 + v58[11]) = 1;
    *((_BYTE *)v64 + v58[12]) = v77;
    *((_BYTE *)v64 + v58[13]) = (_BYTE)v70;
    *v64 = v79;
    v64[1] = v80;
    *((_BYTE *)v64 + v58[14]) = 4;
    v83 = (uint64_t)v95;
    sub_232DED470((uint64_t)v64, (uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v93 + 56))(v83, 0, 1, v58);
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v92, v62);
    sub_232DF99C4(v97, v98, v69);
    v84 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_232DF55EC(v83, (uint64_t)v103, v80, &qword_254237420, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_232E56DD0, (void (*)(void))sub_232E11D08);
    swift_endAccess();
    sub_232DE8D98(v90, v100);
    sub_232DE8D98(v87, v88);
    swift_unknownObjectRelease();
    return sub_232DF51B8((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
  }
  else
  {
    sub_232DE8D98(v90, v100);
    sub_232DE8D98(v87, v88);
    return swift_unknownObjectRelease();
  }
}

id sub_232DF6D48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityInputClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_232DF6DC0@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_232DF6414(a1, a2);
}

uint64_t sub_232DF6DE4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for OpaqueActivityPayload(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254238058 != -1)
    swift_once();
  v9 = sub_232E6EF28();
  __swift_project_value_buffer(v9, (uint64_t)qword_254238040);
  sub_232DED470(a3, (uint64_t)v8, type metadata accessor for OpaqueActivityPayload);
  swift_bridgeObjectRetain_n();
  v10 = sub_232E6EF10();
  v11 = sub_232E6F390();
  v12 = os_log_type_enabled(v10, v11);
  v28 = a1;
  if (v12)
  {
    v13 = swift_slowAlloc();
    v27 = a3;
    v14 = v13;
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v14 = 136446466;
    swift_bridgeObjectRetain();
    v29 = sub_232DE4A70(a1, a2, &v30);
    sub_232E6F480();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2082;
    sub_232E6EE98();
    sub_232DDDAD8(&qword_255FFB358, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v15 = sub_232E6F6C0();
    v29 = sub_232DE4A70(v15, v16, &v30);
    sub_232E6F480();
    swift_bridgeObjectRelease();
    sub_232DF51B8((uint64_t)v8, type metadata accessor for OpaqueActivityPayload);
    _os_log_impl(&dword_232DDB000, v10, v11, "Updating activity: %{public}s; payload: %{public}s",
      (uint8_t *)v14,
      0x16u);
    v17 = v26;
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v17, -1, -1);
    v18 = v14;
    a3 = v27;
    MEMORY[0x23492A1F0](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_232DF51B8((uint64_t)v8, type metadata accessor for OpaqueActivityPayload);
  }

  if (qword_254237398 != -1)
    swift_once();
  v19 = qword_25423F4C0;
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for Watchdog();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = 0;
  type metadata accessor for UnfairLock();
  v22 = swift_allocObject();
  v23 = (os_unfair_lock_s *)swift_slowAlloc();
  *(_QWORD *)(v22 + 16) = v23;
  v23->_os_unfair_lock_opaque = 0;
  *(_QWORD *)(v21 + 24) = v22;
  *(_BYTE *)(v21 + 32) = 0;
  swift_retain();
  os_unfair_lock_lock(v23);
  sub_232E08618(v19, (uint64_t)sub_232DF9DF8, 0, 10.0);
  os_unfair_lock_unlock(v23);
  swift_release();
  sub_232DF7184(v21, v20, v28, a2, a3);
  swift_release();
  return swift_release();
}

uint64_t sub_232DF7184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  NSObject *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v10 = type metadata accessor for OpaqueActivityPayload(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  swift_beginAccess();
  result = MEMORY[0x23492A28C](a2 + 16);
  if (result)
  {
    v14 = (void *)result;
    v15 = *(NSObject **)(result + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue);
    sub_232DED470(a5, (uint64_t)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for OpaqueActivityPayload);
    v16 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v14;
    v17[3] = a3;
    v17[4] = a4;
    sub_232DEDD20((uint64_t)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v17 + v16, type metadata accessor for OpaqueActivityPayload);
    *(_QWORD *)((char *)v17 + ((v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_232DF9D54;
    *(_QWORD *)(v18 + 24) = v17;
    aBlock[4] = sub_232DF9DAC;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_232DDD48C;
    aBlock[3] = &block_descriptor_72;
    v19 = _Block_copy(aBlock);
    v20 = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v15, v19);

    _Block_release(v19);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_232DF738C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, int *);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  char *v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  void *v44;
  uint64_t v45;
  char v46;
  char v47;
  char *v48;
  char *v49;
  void *v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  os_unfair_lock_s *v63;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v74 = a5;
  v75 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237420);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v65 - v12;
  v14 = (int *)type metadata accessor for ActivityRequest();
  v15 = *((_QWORD *)v14 - 1);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v18);
  v20 = (uint64_t *)((char *)&v65 - v19);
  v73 = a1;
  v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient__queue_ephemeralActivityRequests);
  swift_beginAccess();
  v22 = *v21;
  v23 = *(_QWORD *)(*v21 + 16);
  v72 = a2;
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v15 + 56))(v13, 1, 1, v14);
LABEL_7:
    sub_232DDD798((uint64_t)v13, &qword_254237420);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_232DE0F18(a2, a3);
  if ((v25 & 1) != 0)
  {
    sub_232DED470(*(_QWORD *)(v22 + 56) + *(_QWORD *)(v15 + 72) * v24, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  v27 = *(void (**)(char *, uint64_t, uint64_t, int *))(v15 + 56);
  v27(v13, v26, 1, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_7;
  sub_232DEDD20((uint64_t)v13, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
  v28 = v20[2];
  v29 = v20[3];
  v30 = v20[5];
  v67 = v20[4];
  v31 = v67;
  v65 = v28;
  v66 = v30;
  v32 = type metadata accessor for OpaqueActivityPayload(0);
  sub_232DED470(v75 + *(int *)(v32 + 28), (uint64_t)v17 + v14[7], (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
  v33 = v14[9];
  v34 = (char *)v20 + v14[8];
  v35 = *((_QWORD *)v34 + 1);
  v68 = *(_QWORD *)v34;
  v36 = v68;
  v69 = v35;
  v37 = v34[16];
  v70 = v37;
  v38 = (char *)v20 + v33;
  v71 = *(_QWORD *)((char *)v20 + v33);
  v39 = v71;
  LOBYTE(v33) = *((_BYTE *)v20 + v33 + 8);
  v40 = v38[9];
  v41 = v38[10];
  v42 = v38[11];
  v43 = v38[12];
  v44 = (void *)*((_QWORD *)v38 + 2);
  v45 = *(_QWORD *)((char *)v20 + v14[10]);
  LOBYTE(v38) = *((_BYTE *)v20 + v14[11]);
  v46 = *((_BYTE *)v20 + v14[12]);
  v47 = *((_BYTE *)v20 + v14[13]);
  v17[2] = v65;
  v17[3] = v29;
  v17[4] = v31;
  v17[5] = v30;
  v48 = (char *)v17 + v14[8];
  *(_QWORD *)v48 = v36;
  *((_QWORD *)v48 + 1) = v35;
  v48[16] = v37;
  v49 = (char *)v17 + v14[9];
  *(_QWORD *)v49 = v39;
  v49[8] = v33;
  v49[9] = v40;
  v49[10] = v41;
  v49[11] = v42;
  v49[12] = v43;
  *((_QWORD *)v49 + 2) = v44;
  v50 = v44;
  *(_QWORD *)((char *)v17 + v14[10]) = v45;
  *((_BYTE *)v17 + v14[11]) = (_BYTE)v38;
  *((_BYTE *)v17 + v14[12]) = v46;
  *((_BYTE *)v17 + v14[13]) = v47;
  *v17 = 0;
  v17[1] = 0;
  *((_BYTE *)v17 + v14[14]) = 4;
  sub_232DED470((uint64_t)v17, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
  v27(v10, 0, 1, v14);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_232DE4A2C(v67, v66);
  sub_232DF99C4(v68, v69, v70);
  v51 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_232DF55EC((uint64_t)v10, v72, a3, &qword_254237420, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_232E56DD0, (void (*)(void))sub_232E11D08);
  swift_endAccess();
  sub_232DF51B8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
  sub_232DF51B8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
LABEL_9:
  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  type metadata accessor for OpaqueActivityPayload(0);
  sub_232DDDAD8(qword_255FFC240, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
  v52 = sub_232E6EDC0();
  v54 = v53;
  v55 = (void *)sub_232E6EE2C();
  sub_232DE8D98(v52, v54);
  swift_release();
  v56 = sub_232E6EE44();
  v58 = v57;

  v59 = sub_232DF5948();
  if (v59)
  {
    v60 = (void *)v59;
    v61 = (void *)sub_232E6F1E0();
    v62 = (void *)sub_232E6EE2C();
    objc_msgSend(v60, sel_updateActivityWithIdentifier_payload_, v61, v62);

    swift_unknownObjectRelease();
  }
  v63 = *(os_unfair_lock_s **)(*(_QWORD *)(v74 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v63);
  sub_232E08C54();
  os_unfair_lock_unlock(v63);
  swift_release();
  return sub_232DE8D98(v56, v58);
}

uint64_t sub_232DF78A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_unfair_lock_s *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OpaqueActivityPayload(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - v16;
  sub_232DF5040(a3, (uint64_t)v10, &qword_2542379D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_232DDD798((uint64_t)v10, &qword_2542379D0);
    if (qword_254238058 != -1)
      swift_once();
    v18 = sub_232E6EF28();
    __swift_project_value_buffer(v18, (uint64_t)qword_254238040);
    swift_bridgeObjectRetain_n();
    v19 = sub_232E6EF10();
    v20 = sub_232E6F390();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v45 = v22;
      *(_DWORD *)v21 = 136446210;
      swift_bridgeObjectRetain();
      v44 = sub_232DE4A70(v43, a2, &v45);
      sub_232E6F480();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_232DDB000, v19, v20, "Ending activity: %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v22, -1, -1);
      MEMORY[0x23492A1F0](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    v42 = a3;
    sub_232DEDD20((uint64_t)v10, (uint64_t)v17, type metadata accessor for OpaqueActivityPayload);
    if (qword_254238058 != -1)
      swift_once();
    v23 = sub_232E6EF28();
    __swift_project_value_buffer(v23, (uint64_t)qword_254238040);
    sub_232DED470((uint64_t)v17, (uint64_t)v14, type metadata accessor for OpaqueActivityPayload);
    swift_bridgeObjectRetain_n();
    v24 = sub_232E6EF10();
    v25 = sub_232E6F390();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v41 = a4;
      v27 = v26;
      v39 = swift_slowAlloc();
      v45 = v39;
      *(_DWORD *)v27 = 136446466;
      swift_bridgeObjectRetain();
      v44 = sub_232DE4A70(v43, a2, &v45);
      v40 = v4;
      sub_232E6F480();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2082;
      sub_232E6EE98();
      sub_232DDDAD8(&qword_255FFB358, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v28 = sub_232E6F6C0();
      v44 = sub_232DE4A70(v28, v29, &v45);
      sub_232E6F480();
      swift_bridgeObjectRelease();
      sub_232DF51B8((uint64_t)v14, type metadata accessor for OpaqueActivityPayload);
      _os_log_impl(&dword_232DDB000, v24, v25, "Ending activity: %{public}s; payload: %{public}s",
        (uint8_t *)v27,
        0x16u);
      v30 = v39;
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v30, -1, -1);
      v31 = v27;
      a4 = v41;
      MEMORY[0x23492A1F0](v31, -1, -1);

    }
    else
    {

      sub_232DF51B8((uint64_t)v14, type metadata accessor for OpaqueActivityPayload);
      swift_bridgeObjectRelease_n();
    }
    sub_232DF51B8((uint64_t)v17, type metadata accessor for OpaqueActivityPayload);
    a3 = v42;
  }
  if (qword_254237398 != -1)
    swift_once();
  v32 = qword_25423F4C0;
  v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for Watchdog();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = 0;
  type metadata accessor for UnfairLock();
  v35 = swift_allocObject();
  v36 = (os_unfair_lock_s *)swift_slowAlloc();
  *(_QWORD *)(v35 + 16) = v36;
  v36->_os_unfair_lock_opaque = 0;
  *(_QWORD *)(v34 + 24) = v35;
  *(_BYTE *)(v34 + 32) = 0;
  swift_retain();
  os_unfair_lock_lock(v36);
  sub_232E08618(v32, (uint64_t)sub_232DF84A0, 0, 10.0);
  os_unfair_lock_unlock(v36);
  swift_release();
  sub_232DF7E80(v34, v33, v43, a2, a3, a4);
  swift_release();
  return swift_release();
}

uint64_t sub_232DF7E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  dispatch_queue_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v30 = a3;
  v31 = a4;
  v10 = type metadata accessor for ActivityEndingOptions();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x23492A28C](a2 + 16);
  if (result)
  {
    v19 = (void *)result;
    v29 = *(dispatch_queue_t *)(result + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue);
    sub_232DF5040(a5, (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542379D0);
    sub_232DED470(a6, (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ActivityEndingOptions);
    v20 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v21 = (v16 + *(unsigned __int8 *)(v11 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = (_QWORD *)swift_allocObject();
    v24 = v30;
    v25 = v31;
    v23[2] = v19;
    v23[3] = v24;
    v23[4] = v25;
    sub_232DE939C((uint64_t)v17, (uint64_t)v23 + v20, &qword_2542379D0);
    sub_232DEDD20((uint64_t)v13, (uint64_t)v23 + v21, (uint64_t (*)(_QWORD))type metadata accessor for ActivityEndingOptions);
    *(_QWORD *)((char *)v23 + v22) = a1;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = sub_232DF98F0;
    *(_QWORD *)(v26 + 24) = v23;
    aBlock[4] = sub_232DDD4AC;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_232DDD48C;
    aBlock[3] = &block_descriptor_0;
    v27 = _Block_copy(aBlock);
    v28 = v19;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v29, v27);

    _Block_release(v27);
    LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v27 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_232DF8108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  os_unfair_lock_s *v32;
  _QWORD v34[2];
  uint64_t v35;
  __int128 v36;

  v34[1] = a5;
  v35 = a6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237420);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ActivityRequest();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_232DF55EC((uint64_t)v14, a2, a3, &qword_254237420, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_232E56DD0, (void (*)(void))sub_232E11D08);
  swift_endAccess();
  sub_232DF5040(a4, (uint64_t)v11, &qword_2542379D0);
  v16 = type metadata accessor for OpaqueActivityPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v11, 1, v16) == 1)
  {
    sub_232DDD798((uint64_t)v11, &qword_2542379D0);
    v17 = 0;
    v18 = 0xF000000000000000;
  }
  else
  {
    sub_232DE06B4(0, &qword_255FFB4B0);
    swift_dynamicCast();
    v19 = (void *)v36;
    v36 = xmmword_232E70D10;
    sub_232E6EE38();

    v18 = *((_QWORD *)&v36 + 1);
    v17 = v36;
  }
  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  type metadata accessor for ActivityEndingOptions();
  sub_232DDDAD8((unint64_t *)&unk_2542374B0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityEndingOptions, (uint64_t)&protocol conformance descriptor for ActivityEndingOptions);
  v20 = sub_232E6EDC0();
  v22 = v21;
  v23 = (void *)sub_232E6EE2C();
  sub_232DE8D98(v20, v22);
  swift_release();
  v24 = sub_232E6EE44();
  v26 = v25;

  v27 = sub_232DF5948();
  if (v27)
  {
    v28 = (void *)v27;
    v29 = (void *)sub_232E6F1E0();
    if (v18 >> 60 == 15)
    {
      v30 = 0;
    }
    else
    {
      sub_232DE4A2C(v17, v18);
      v30 = (void *)sub_232E6EE2C();
      sub_232DE4A18(v17, v18);
    }
    v31 = (void *)sub_232E6EE2C();
    objc_msgSend(v28, sel_endActivityWithIdentifier_payload_options_, v29, v30, v31);

    swift_unknownObjectRelease();
  }
  v32 = *(os_unfair_lock_s **)(*(_QWORD *)(v35 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v32);
  sub_232E08C54();
  os_unfair_lock_unlock(v32);
  swift_release();
  sub_232DE8D98(v24, v26);
  return sub_232DE4A18(v17, v18);
}

uint64_t sub_232DF84A4()
{
  type metadata accessor for ActivityDescriptor();
  return sub_232E6F3D8();
}

uint64_t sub_232DF850C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DF6414(*(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_232DF8530(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  _BYTE v25[8];

  if (qword_254237398 != -1)
    swift_once();
  v14 = qword_25423F4C0;
  swift_unknownObjectWeakInit();
  type metadata accessor for Watchdog();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  v17 = (os_unfair_lock_s *)swift_slowAlloc();
  *(_QWORD *)(v16 + 16) = v17;
  v17->_os_unfair_lock_opaque = 0;
  *(_QWORD *)(v15 + 24) = v16;
  *(_BYTE *)(v15 + 32) = 0;
  swift_retain();
  os_unfair_lock_lock(v17);
  sub_232E08618(v14, (uint64_t)sub_232DF9DF8, 0, 10.0);
  os_unfair_lock_unlock(v17);
  swift_release();
  sub_232DF8688(v15, (uint64_t)v25, a1, a2, a5, a6, a7, a8, a9, a10, a11, a12, a3, a4);
  swift_release();
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_232DF8688(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  NSObject *queue;
  _QWORD aBlock[6];

  swift_beginAccess();
  result = MEMORY[0x23492A28C](a2);
  if (result)
  {
    v23 = (void *)result;
    queue = *(NSObject **)(result + OBJC_IVAR____TtC11ActivityKit19ActivityInputClient_queue);
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a3;
    v24[3] = a4;
    v24[4] = v23;
    v24[5] = a5;
    v24[6] = a6;
    v24[7] = a7;
    v24[8] = a8;
    v24[9] = a9;
    v24[10] = a10;
    v24[11] = a11;
    v24[12] = a12;
    v24[13] = a13;
    v24[14] = a14;
    v24[15] = a1;
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = sub_232DF9A9C;
    *(_QWORD *)(v25 + 24) = v24;
    aBlock[4] = sub_232DF9DAC;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_232DDD48C;
    aBlock[3] = &block_descriptor_49;
    v26 = _Block_copy(aBlock);
    sub_232DF9AE8(a3, a4);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v27 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(queue, v26);

    _Block_release(v26);
    LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v26 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_232DF88A4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  os_unfair_lock_s *v33;
  void *v35;
  void *v36;
  uint64_t aBlock;
  uint64_t v38;
  void (*v39)(uint64_t, void *, void *);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;

  v14 = a14;
  if (a2 >> 60 == 15)
  {
    if (a13)
    {
      v15 = sub_232DF5948();
      if (v15)
      {
        v16 = (void *)v15;
        v17 = (void *)sub_232E6F1E0();
        v18 = (void *)sub_232E6F1E0();
        v19 = (void *)sub_232E6F1E0();
        v20 = (void *)sub_232E6F15C();
        sub_232DE06B4(0, &qword_255FFD498);
        v21 = (void *)sub_232E6F450();
        v22 = swift_allocObject();
        *(_QWORD *)(v22 + 16) = a10;
        *(_QWORD *)(v22 + 24) = a11;
        v41 = sub_232DF9B20;
        v42 = v22;
        aBlock = MEMORY[0x24BDAC760];
        v38 = 1107296256;
        v39 = sub_232DF8C30;
        v40 = &block_descriptor_55;
        v23 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v16, sel_mockPushWithChannelID_processIdentifier_environmentName_payload_pushPriority_completionHandler_, v17, v18, v19, v20, v21, v23);
        swift_unknownObjectRelease();
        _Block_release(v23);

        v14 = a14;
      }
    }
  }
  else
  {
    sub_232DE4A2C(a1, a2);
    v26 = sub_232DF5948();
    if (v26)
    {
      v27 = (void *)v26;
      v36 = (void *)sub_232E6EE2C();
      v35 = (void *)sub_232E6F1E0();
      v28 = (void *)sub_232E6F1E0();
      v29 = (void *)sub_232E6F15C();
      sub_232DE06B4(0, &qword_255FFD498);
      v30 = (void *)sub_232E6F450();
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = a10;
      *(_QWORD *)(v31 + 24) = a11;
      v41 = sub_232DF9B20;
      v42 = v31;
      aBlock = MEMORY[0x24BDAC760];
      v38 = 1107296256;
      v39 = sub_232DF8C30;
      v40 = &block_descriptor_61;
      v32 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v27, sel_mockPushWithToken_processIdentifier_environmentName_payload_pushPriority_completionHandler_, v36, v35, v28, v29, v30, v32);
      sub_232DE4A18(a1, a2);
      swift_unknownObjectRelease();
      _Block_release(v32);

    }
    else
    {
      sub_232DE4A18(a1, a2);
    }
    v14 = a14;
  }
  v33 = *(os_unfair_lock_s **)(*(_QWORD *)(v14 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v33);
  sub_232E08C54();
  os_unfair_lock_unlock(v33);
  return swift_release();
}

void sub_232DF8C30(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

uint64_t sub_232DF8CA4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232DF8CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_232DF8CDC(a1, a2, type metadata accessor for SubscribedActivity, (void (*)(void))sub_232E11934, a3);
}

uint64_t sub_232DF8CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_232DE0F18(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v21 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v21;
    }
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 56);
    v17 = a3(0);
    v18 = *(_QWORD *)(v17 - 8);
    sub_232DEDD20(v16 + *(_QWORD *)(v18 + 72) * v12, a5, a3);
    sub_232DF9480(v12, v15, a3);
    *v8 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a5, 0, 1, v17);
  }
  else
  {
    v20 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
}

double sub_232DF8E14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_232DE0F18(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_232E124F0();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_232DEAC8C((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_232DF928C(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_232DF8F0C(unint64_t a1, uint64_t a2)
{
  return sub_232DF9480(a1, a2, type metadata accessor for SubscribedActivity);
}

unint64_t sub_232DF8F18(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_232E6F4B0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_232E6F774();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_BYTE *)(v15 + v3);
            v17 = (_BYTE *)(v15 + v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_232DF90AC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_232E6F4B0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_232E6F780();
        sub_232E6F78C();
        result = sub_232E6F7B0();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_BYTE *)(v10 + v3);
        v12 = (_BYTE *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for OpaqueActivityPayload(0) - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_232DF928C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_232E6F4B0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_232E6F780();
        swift_bridgeObjectRetain();
        sub_232E6F21C();
        v11 = sub_232E6F7B0();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_232DF9474(unint64_t a1, uint64_t a2)
{
  return sub_232DF9480(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
}

unint64_t sub_232DF9480(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_232E6F4B0();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_232E6F780();
        swift_bridgeObjectRetain();
        sub_232E6F21C();
        v11 = sub_232E6F7B0();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_232DF9688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityEndingOptions() - 8) + 80);

  swift_bridgeObjectRelease();
  v6 = v0 + v3;
  v7 = (int *)type metadata accessor for OpaqueActivityPayload(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v0 + v3, 1, v7))
  {
    v8 = sub_232E6EE98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v3, v8);
    v9 = v6 + v7[5];
    v10 = sub_232E6EE74();
    v11 = *(_QWORD *)(v10 - 8);
    v24 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v24(v9, v10);
    sub_232DE8D98(*(_QWORD *)(v6 + v7[6]), *(_QWORD *)(v6 + v7[6] + 8));
    v12 = v6 + v7[7];
    sub_232DE8D98(*(_QWORD *)v12, *(_QWORD *)(v12 + 8));
    v13 = v12 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (!v25(v13, 1, v10))
      v24(v13, v10);
    v14 = v6 + v7[8];
    v15 = type metadata accessor for AlertConfiguration();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      v23 = v4;
      v16 = sub_232E6EE08();
      v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
      v17(v14, v16);
      v18 = v16;
      v4 = v23;
      v17(v14 + *(int *)(v15 + 20), v18);
      v3 = (v2 + 40) & ~v2;
      v19 = v14 + *(int *)(v15 + 24);
      swift_bridgeObjectRelease();

    }
    v20 = v6 + v7[9];
    if (!v25(v20, 1, v10))
      v24(v20, v10);
  }
  v21 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v0 + ((v3 + v4 + v5) & ~v5), v21);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232DF98F0()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for ActivityEndingOptions() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_232DF8108(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, (uint64_t)v0 + v5, *(uint64_t *)((char *)v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_232DF9970()
{
  return swift_deallocObject();
}

unint64_t sub_232DF9980()
{
  unint64_t result;

  result = qword_255FFB660;
  if (!qword_255FFB660)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityError, &type metadata for ActivityError);
    atomic_store(result, (unint64_t *)&qword_255FFB660);
  }
  return result;
}

uint64_t sub_232DF99C8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

void sub_232DF99DC(uint64_t a1)
{
  uint64_t v1;

  sub_232DF58F8(a1, v1);
}

uint64_t sub_232DF99E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_232DF9A08()
{
  return swift_deallocObject();
}

void sub_232DF9A18(uint64_t a1)
{
  uint64_t v1;

  sub_232DF57E8(a1, v1);
}

uint64_t sub_232DF9A20()
{
  return swift_deallocObject();
}

uint64_t sub_232DF9A30()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_232DE8D98(*(_QWORD *)(v0 + 16), v1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232DF9A9C()
{
  uint64_t v0;

  return sub_232DF88A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_232DF9AD8()
{
  return swift_deallocObject();
}

uint64_t sub_232DF9AE8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_232DE4A2C(a1, a2);
  return a1;
}

uint64_t sub_232DF9AFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232DF9B24(void *a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(id, uint64_t))(v2 + 16))(objc_msgSend(a1, sel_BOOLValue), a2);
}

uint64_t sub_232DF9B60()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for OpaqueActivityPayload(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);

  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 40) & ~v2);
  v4 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[5];
  v6 = sub_232E6EE74();
  v7 = *(_QWORD *)(v6 - 8);
  v18 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v18(v5, v6);
  sub_232DE8D98(*(_QWORD *)(v3 + v1[6]), *(_QWORD *)(v3 + v1[6] + 8));
  v8 = v3 + v1[7];
  sub_232DE8D98(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
  v9 = v8 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v10(v9, 1, v6))
    v18(v9, v6);
  v11 = v3 + v1[8];
  v12 = type metadata accessor for AlertConfiguration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = sub_232E6EE08();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v11, v13);
    v14(v11 + *(int *)(v12 + 20), v13);
    v15 = v11 + *(int *)(v12 + 24);
    swift_bridgeObjectRelease();

  }
  v16 = v3 + v1[9];
  if (!v10(v16, 1, v6))
    v18(v16, v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232DF9D54()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for OpaqueActivityPayload(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_232DF738C(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, *(uint64_t *)((char *)v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_232DF9D9C()
{
  return swift_deallocObject();
}

id ActivityAuthorization.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *ActivityAuthorization.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _DWORD *v4;
  id v5;
  uint64_t v6;
  char *v7;
  os_unfair_lock_s *v8;
  objc_super v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock;
  type metadata accessor for UnfairLock();
  v2 = swift_allocObject();
  v3 = v0;
  v4 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = 0;
  *(_QWORD *)&v0[v1] = v2;

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for ActivityAuthorization();
  v5 = objc_msgSendSuper2(&v10, sel_init);
  v6 = qword_255FFC150;
  v7 = (char *)v5;
  if (v6 != -1)
    swift_once();
  v8 = *(os_unfair_lock_s **)(*(_QWORD *)&v7[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  *(_QWORD *)&v7[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient + 8] = &off_250426C18;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v8);
  swift_release();

  return v7;
}

uint64_t type metadata accessor for ActivityAuthorization()
{
  return objc_opt_self();
}

char *ActivityAuthorization.__allocating_init(client:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return ActivityAuthorization.init(client:)(a1, a2);
}

char *ActivityAuthorization.init(client:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _DWORD *v7;
  char *v8;
  os_unfair_lock_s *v9;
  char *v10;
  objc_super v12;

  *(_QWORD *)&v2[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient + 8] = 0;
  swift_unknownObjectWeakInit();
  v4 = OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock;
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = v2;
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = 0;
  *(_QWORD *)&v2[v4] = v5;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for ActivityAuthorization();
  v8 = (char *)objc_msgSendSuper2(&v12, sel_init);
  v9 = *(os_unfair_lock_s **)(*(_QWORD *)&v8[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v10 = v8;
  swift_retain();
  os_unfair_lock_lock(v9);
  *(_QWORD *)&v10[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient + 8] = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v9);
  swift_release();
  swift_unknownObjectRelease();

  return v10;
}

void sub_232DFA0D4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[2];

  v7 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v7);
  v8 = v3 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  if (MEMORY[0x23492A28C](v3 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient))
  {
    v9 = *(_QWORD *)(v8 + 8);
    ObjectType = swift_getObjectType();
    v11[0] = a1 & 1;
    v11[1] = 2;
    (*(void (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t))(v9 + 48))(a2, a3, v11, ObjectType, v9);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_232DFA1B4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _BYTE v13[2];

  if (a4)
  {
    if (a4 != 1)
      goto LABEL_8;
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  v9 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v9);
  v10 = v4 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  if (MEMORY[0x23492A28C](v10))
  {
    v11 = *(_QWORD *)(v10 + 8);
    ObjectType = swift_getObjectType();
    v13[0] = a1 & 1;
    v13[1] = v8;
    (*(void (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t))(v11 + 48))(a2, a3, v13, ObjectType, v11);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v9);
    return;
  }
  __break(1u);
LABEL_8:
  sub_232E6F57C();
  __break(1u);
}

void sub_232DFA3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v5);
  v6 = v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  if (MEMORY[0x23492A28C](v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient))
  {
    v7 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 64))(a1, a2, ObjectType, v7);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_232DFA458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v5);
  v6 = v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  if (MEMORY[0x23492A28C](v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient))
  {
    v7 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 72))(a1, a2, ObjectType, v7);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_232DFA50C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v5);
  v6 = v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  if (MEMORY[0x23492A28C](v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient))
  {
    v7 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 80))(a1, a2, ObjectType, v7);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_232DFA5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v5);
  v6 = v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  if (MEMORY[0x23492A28C](v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient))
  {
    v7 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, a2, ObjectType, v7);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v5);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_232DFA780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  char v10;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v5);
  v6 = v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  result = MEMORY[0x23492A28C](v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient);
  if (result)
  {
    v8 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 40))(a1, a2, ObjectType, v8);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v5);
    return v10 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_232DFA8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  char v10;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v5);
  v6 = v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  result = MEMORY[0x23492A28C](v2 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient);
  if (result)
  {
    v8 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 88))(a1, a2, ObjectType, v8);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v5);
    return v10 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_232DFAA50(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[2];

  v7 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock) + 16);
  os_unfair_lock_lock(v7);
  v8 = v3 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient;
  if (MEMORY[0x23492A28C](v3 + OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient))
  {
    v9 = *(_QWORD *)(v8 + 8);
    ObjectType = swift_getObjectType();
    v11[0] = a1 & 1;
    v11[1] = 2;
    (*(void (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t))(v9 + 96))(a2, a3, v11, ObjectType, v9);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_232DFAB30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v9 = sub_232E6F1EC();
  v11 = v10;
  v12 = a1;
  a6(a3, v9, v11);
  swift_bridgeObjectRelease();

  return 1;
}

id ActivityAuthorization.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityAuthorization();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ActivityAuthorization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityAuthorization.__allocating_init(client:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ActivityAuthorization.setActivities(enabled:forBundleId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ActivityAuthorization.setActivities(enabled:for:source:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ActivityAuthorization.activityAuthorizationLevel(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ActivityAuthorization.subscribeToActivityAuthorizationStatusUpdates(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ActivityAuthorization.unsubscribeToActivityAuthorizationStatusUpdates(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ActivityAuthorization.clearActivityAuthorization(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ActivityAuthorization.areActivitiesEnabled(forBundleId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ActivityAuthorization.areFrequentPushesEnabled(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ActivityAuthorization.setFrequentPushes(enabled:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t sub_232DFADC4(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_232DFADE8()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFD4B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFD4B0);
  return sub_232E6EF1C();
}

id sub_232DFAE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v14[6];

  if (qword_255FFC928 != -1)
    swift_once();
  v8 = (void *)qword_255FFD4C8;
  v9 = (void *)sub_232E6F1E0();
  v10 = (void *)sub_232E6F1E0();
  v14[4] = a5;
  v14[5] = a6;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_232DFAF90;
  v14[3] = &block_descriptor_1;
  v11 = _Block_copy(v14);
  swift_retain();
  swift_release();
  v12 = objc_msgSend(v8, sel_listenForActivityPresentationWithActivityIdentifier_presenterBundleIdentifier_handler_, v9, v10, v11);
  _Block_release(v11);

  return v12;
}

uint64_t sub_232DFAF90(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_232DFB168(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (qword_255FFC928 != -1)
    a1 = swift_once();
  MEMORY[0x24BDAC7A8](a1);
  sub_232E6EF64();
  result = sub_232E6F3D8();
  if (!v1)
    return v3;
  return result;
}

id ActivityPresentationObservationClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ActivityPresentationObservationClient.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityPresentationObservationClient();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ActivityPresentationObservationClient.__deallocating_deinit(uint64_t a1)
{
  return sub_232DFC954(a1, type metadata accessor for ActivityPresentationObservationClient);
}

id sub_232DFB2E4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)_s11ActivityKit9SingletonCMa_0()), sel_init);
  qword_255FFD4C8 = (uint64_t)result;
  return result;
}

uint64_t sub_232DFB354()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  objc_class *v11;
  char *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t result;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];
  objc_super v23;

  v21 = sub_232E6F3C0();
  v1 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v5);
  v20 = OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue;
  v19[0] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v6 = v0;
  sub_232E6F0E4();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v21);
  *(_QWORD *)(v19[1] + v20) = sub_232E6F3F0();
  v7 = OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_connection;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_connection] = 0;
  *(_DWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_serverStartupToken] = -1;
  v8 = OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton__presentationPublisher;
  v9 = MEMORY[0x24BEE4AF8];
  aBlock[0] = sub_232E4EFD0(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD520);
  swift_allocObject();
  *(_QWORD *)&v6[v8] = sub_232E6F000();
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton__queue_presentations] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton__queue_predicates] = v9;
  v10 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = 0;

  v11 = (objc_class *)_s11ActivityKit9SingletonCMa_0();
  v23.receiver = v6;
  v23.super_class = v11;
  v12 = (char *)objc_msgSendSuper2(&v23, sel_init);
  v13 = *(NSObject **)&v12[OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_232DFD9D8;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_232DDD4AC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_37;
  v16 = _Block_copy(aBlock);
  v17 = v12;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v13 & 1) == 0)
    return (uint64_t)v17;
  __break(1u);
  return result;
}

void sub_232DFB700()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232DFD958();
    v9 = (void *)sub_232E6F438();
    if (v9)
    {
      v10 = *(void **)&v1[v8];
      *(_QWORD *)&v1[v8] = v9;
      v11 = v9;

      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v1;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = sub_232DFD9C0;
      *(_QWORD *)(v13 + 24) = v12;
      aBlock[4] = sub_232DE068C;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_19_0;
      v14 = _Block_copy(aBlock);
      v1;
      swift_retain();
      swift_release();
      objc_msgSend(v11, sel_configureConnection_, v14);
      _Block_release(v14);
      LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v14 & 1) == 0)
      {
        sub_232DFBDEC();
        swift_release();

        return;
      }
LABEL_8:
      __break(1u);
    }
  }
}

void sub_232DFB928(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256012018);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_2560138E0);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue));
  v18 = sub_232DFBBAC;
  v19 = 0;
  v10 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_22_0;
  v11 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v18 = sub_232DFBBB8;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_25;
  v12 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  v18 = sub_232DFBBC4;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_28;
  v13 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInvalidationHandler_, v13);
  _Block_release(v13);

}

void sub_232DFBBAC(uint64_t a1)
{
  sub_232DFBBD0(a1, "Presentation observation service: activated");
}

void sub_232DFBBB8(uint64_t a1)
{
  sub_232DFBBD0(a1, "Presentation observation service: interrupted");
}

void sub_232DFBBC4(uint64_t a1)
{
  sub_232DFBBD0(a1, "Presentation observation service: invalidated");
}

void sub_232DFBBD0(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_255FFC920 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_255FFD4B0);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232DFBCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  _OWORD v9[2];

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    sub_232DFB700();
    v7 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_connection);
    if (v7)
    {
      v8 = v7;
      if (objc_msgSend(v8, sel_remoteTarget))
      {
        sub_232E6F498();

        swift_unknownObjectRelease();
        sub_232DDD798((uint64_t)v9, &qword_2542382E8);
      }
      else
      {
        memset(v9, 0, sizeof(v9));
        sub_232DDD798((uint64_t)v9, &qword_2542382E8);
        objc_msgSend(v8, sel_activate);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_232DFBDEC()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232DFD950;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_10_0;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_255FFC920 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_255FFD4B0);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232DFBFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232DFC6D0();

  }
}

uint64_t sub_232DFC010()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD v16[2];
  _OWORD v17[2];
  _BYTE v18[24];
  uint64_t v19;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue);
  *v4 = v5;
  (*((void (**)(_QWORD *, _QWORD, NSObject *))isa + 13))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  (*((void (**)(_QWORD *, NSObject *))isa + 1))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232DFBCA4();
  v7 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_connection);
  if (!v7)
  {
    if (qword_255FFC920 != -1)
      swift_once();
    v8 = sub_232E6EF28();
    __swift_project_value_buffer(v8, (uint64_t)qword_255FFD4B0);
    v1 = sub_232E6EF10();
    v9 = sub_232E6F384();
    if (os_log_type_enabled(v1, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_232DDB000, v1, v9, "ActivityPresentationObservationClient: Failed to establish a connection", v10, 2u);
      MEMORY[0x23492A1F0](v10, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v7;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_232DE9CF0((uint64_t)v17, (uint64_t)v18);
  if (v19)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD510);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v16[1];
    }
  }
  else
  {
    sub_232DDD798((uint64_t)v18, &qword_2542382E8);
  }
  if (qword_255FFC920 != -1)
    goto LABEL_20;
LABEL_15:
  v12 = sub_232E6EF28();
  __swift_project_value_buffer(v12, (uint64_t)qword_255FFD4B0);
  v13 = sub_232E6EF10();
  v14 = sub_232E6F384();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_232DDB000, v13, v14, "ActivityPresentationObservationClient: Failed to cast connection to server interface protocol", v15, 2u);
    MEMORY[0x23492A1F0](v15, -1, -1);
  }

LABEL_18:
  return 0;
}

uint64_t sub_232DFC2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  uint64_t *v12;
  uint64_t result;
  char v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  unsigned __int8 v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  __int128 v32;
  uint64_t v33;

  v2 = v1;
  v33 = *MEMORY[0x24BDAC8D0];
  v4 = sub_232E6F12C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue);
  v10 = *(_QWORD **)a1;
  v9 = *(_QWORD **)(a1 + 8);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v11 = v8;
  LOBYTE(v8) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
    __break(1u);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton__queue_predicates);
  swift_beginAccess();
  result = sub_232E5B998(v10, v9, *v12);
  if ((v14 & 1) == 0)
  {
    v15 = result;
    swift_beginAccess();
    sub_232E5BCE4(v15, &v32);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_232DFC010();
    if (result)
    {
      v16 = (void *)result;
      v17 = swift_bridgeObjectRetain();
      sub_232DFC5BC(v17, &v31);
      swift_bridgeObjectRelease();
      sub_232E6EDD8();
      swift_allocObject();
      sub_232E6EDCC();
      sub_232DFD8E8();
      v18 = sub_232E6EDC0();
      v20 = v19;
      v21 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v18, v20);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = sub_232E6EE44();
      v24 = v23;

      v25 = (void *)sub_232E6EE2C();
      v31 = 0;
      v26 = objc_msgSend(v16, sel_subscribeToActivityPresentationMatchingPredicate_error_, v25, &v31);

      if ((v26 & 1) != 0)
      {
        v27 = v31;
        sub_232DE8D98(v22, v24);
      }
      else
      {
        v28 = v31;
        v29 = (void *)sub_232E6EDF0();

        swift_willThrow();
        sub_232DE8D98(v22, v24);

      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_232DFC5BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = MEMORY[0x24BEE4AF8];
  v10 = MEMORY[0x24BEE4AF8];
  v11 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = MEMORY[0x24BEE4AF8];
    if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_13;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v6 = (uint64_t *)(a1 + 40);
  do
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    if (v7)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_232E5BEAC(v7);
      if (v8)
        goto LABEL_3;
    }
    else
    {
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        sub_232E5BEAC(v8);
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    v6 += 2;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  result = v10;
  v9 = v11;
  if (*(_QWORD *)(v11 + 16))
    goto LABEL_14;
LABEL_13:
  if (*(_QWORD *)(result + 16))
  {
LABEL_14:
    *a2 = v9;
    a2[1] = result;
  }
  else
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

uint64_t sub_232DFC6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  unsigned __int8 v19;
  id v20;
  id v21;
  void *v22;
  id v24[3];

  v24[2] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (id *)((char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 24);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_232E6F144();
  v7 = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
    __break(1u);
  result = sub_232DFC010(v7);
  if (result)
  {
    v9 = (void *)result;
    swift_beginAccess();
    v10 = swift_bridgeObjectRetain();
    sub_232DFC5BC(v10, v24);
    swift_bridgeObjectRelease();
    sub_232E6EDD8();
    swift_allocObject();
    sub_232E6EDCC();
    sub_232DFD8E8();
    v11 = sub_232E6EDC0();
    v13 = v12;
    v14 = (void *)sub_232E6EE2C();
    sub_232DE8D98(v11, v13);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = sub_232E6EE44();
    v17 = v16;

    v18 = (void *)sub_232E6EE2C();
    v24[0] = 0;
    v19 = objc_msgSend(v9, sel_subscribeToActivityPresentationMatchingPredicate_error_, v18, v24);

    if ((v19 & 1) != 0)
    {
      v20 = v24[0];
      sub_232DE8D98(v15, v17);
    }
    else
    {
      v21 = v24[0];
      v22 = (void *)sub_232E6EDF0();

      swift_willThrow();
      sub_232DE8D98(v15, v17);

    }
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_232DFC944()
{
  return sub_232DFC954(0, _s11ActivityKit9SingletonCMa_0);
}

id sub_232DFC954(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_232DFC9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  objc_class *v15;
  id v16;
  char *v17;
  id v18;
  objc_super v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_232E70DA0;
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_232E70DA0;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = a4;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a1;
  v14[7] = a2;
  sub_232E6EF64();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_232E6F3D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v15 = (objc_class *)type metadata accessor for CancellableAssertion();
  v16 = objc_allocWithZone(v15);
  swift_allocObject();
  swift_retain();
  v17 = (char *)v16;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11ActivityKit20CancellableAssertion_token] = sub_232E6EF70();

  v20.receiver = v17;
  v20.super_class = v15;
  v18 = objc_msgSendSuper2(&v20, sel_init);
  swift_release();
  return v18;
}

uint64_t sub_232DFCC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  int v19;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (!*(_QWORD *)(a1 + 16))
    return a4(0);
  swift_bridgeObjectRetain();
  v13 = sub_232DE0F18(a2, a3);
  if ((v14 & 1) == 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return a4(0);
  }
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 24 * v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v17 = (unsigned __int8 *)(v15 + 49);
  while (1)
  {
    v18 = *(v17 - 1);
    v19 = *v17;
    v20 = *(_QWORD *)(v17 - 17) == a6 && *(_QWORD *)(v17 - 9) == a7;
    if (v20 || (sub_232E6F6E4() & 1) != 0)
      break;
    v17 += 24;
    if (!--v16)
      goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = 4;
  v23 = 1;
  v24 = 2;
  if ((v18 & 1) != 0)
    v24 = 3;
  if (v18 != 2)
    v23 = v24;
  v25 = 5;
  if ((v18 & 1) != 0)
    v25 = 6;
  if (v19 == 1)
    v22 = v25;
  if (v19)
    v26 = v22;
  else
    v26 = v23;
  a4(v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_232DFCEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD **v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  unsigned __int8 v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  id v71[6];

  v67 = a4;
  v71[5] = *(id *)MEMORY[0x24BDAC8D0];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AE0);
  MEMORY[0x24BDAC7A8](v11);
  v66 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD528);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_232DFC010();
  if (v17)
  {
    v18 = (void *)v17;
    v61 = a5;
    v63 = v13;
    v19 = (_QWORD **)(a1 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton__queue_predicates);
    swift_beginAccess();
    v20 = *v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v64 = a6;
    v68 = a2;
    v58 = a1;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v20 = sub_232E0FF54(0, v20[2] + 1, 1, v20);
    v23 = v20[2];
    v22 = v20[3];
    v65 = v18;
    v62 = v14;
    v60 = v16;
    if (v23 >= v22 >> 1)
      v20 = sub_232E0FF54((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
    v20[2] = v23 + 1;
    v24 = &v20[2 * v23];
    v24[4] = v68;
    v24[5] = a3;
    v59 = a3;
    v25 = swift_bridgeObjectRetain();
    sub_232DFC5BC(v25, v71);
    swift_bridgeObjectRelease();
    sub_232E6EDD8();
    swift_allocObject();
    sub_232E6EDCC();
    sub_232DFD8E8();
    v26 = v69;
    v27 = sub_232E6EDC0();
    if (v26)
    {
      result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      v29 = v27;
      v30 = v28;
      v31 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v29, v30);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = sub_232E6EE44();
      v34 = v33;

      v35 = (void *)sub_232E6EE2C();
      v71[0] = 0;
      v36 = objc_msgSend(v65, sel_subscribeToActivityPresentationMatchingPredicate_error_, v35, v71);

      v37 = v71[0];
      if ((v36 & 1) != 0)
      {
        *v19 = v20;
        v38 = v37;
        swift_bridgeObjectRelease();
        v69 = v34;
        v39 = *(void **)(v58
                       + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton__presentationPublisher);
        v70 = *(id *)(v58 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue);
        v40 = v70;
        v71[0] = v39;
        v41 = sub_232E6F3B4();
        v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
        v57 = v32;
        v43 = (uint64_t)v66;
        v42(v66, 1, 1, v41);
        swift_retain();
        v44 = v40;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD520);
        sub_232DE06B4(0, (unint64_t *)&qword_254238480);
        sub_232DDF49C(&qword_255FFD530, &qword_255FFD520, MEMORY[0x24BDB9D10]);
        sub_232DFDA08();
        v45 = v60;
        sub_232E6F084();
        sub_232DDD798(v43, &qword_254237AE0);

        swift_release();
        v46 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v47 = (_QWORD *)swift_allocObject();
        v48 = v68;
        v47[2] = v46;
        v47[3] = v48;
        v49 = v59;
        v47[4] = v59;
        v50 = (_QWORD *)swift_allocObject();
        v50[2] = v48;
        v50[3] = v49;
        v51 = v61;
        v50[4] = v67;
        v50[5] = v51;
        sub_232DDF49C(&qword_255FFD538, &qword_255FFD528, MEMORY[0x24BDB9A08]);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_retain();
        v52 = v63;
        v53 = sub_232E6F054();
        sub_232DE8D98(v57, v69);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v45, v52);
        *v64 = v53;
      }
      else
      {
        v56 = v71[0];
        swift_bridgeObjectRelease();
        sub_232E6EDF0();

        swift_willThrow();
        sub_232DE8D98(v32, v34);
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    sub_232DF9980();
    swift_allocError();
    *(_OWORD *)v55 = xmmword_232E70D00;
    *(_OWORD *)(v55 + 16) = 0u;
    *(_OWORD *)(v55 + 32) = 0u;
    *(_OWORD *)(v55 + 48) = 0u;
    *(_QWORD *)(v55 + 64) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_232DFD454@<X0>(uint64_t *a1@<X8>)
{
  return sub_232DFD8C8(a1);
}

uint64_t type metadata accessor for ActivityPresentationObservationClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for ActivityPresentationObservationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityPresentationObservationClient.listenForActivityPresentation(activityIdentifier:presenterBundleIdentifier:handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x50))();
}

uint64_t dispatch thunk of ActivityPresentationObservationClient.subscribeToActivityPresentation(matching:handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t _s11ActivityKit9SingletonCMa_0()
{
  return objc_opt_self();
}

void sub_232DFD4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[2];

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x23492A28C](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9[0] = a3;
    v9[1] = a4;
    sub_232DFC2E0((uint64_t)v9);

  }
}

uint64_t sub_232DFD604(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_232E6F12C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)sub_232E6EE2C();
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v11 = sub_232E6EE44();
  v13 = v12;
  sub_232DFD80C();
  sub_232E6ED9C();
  sub_232DE8D98(v11, v13);
  swift_release();
  v14 = v19;
  if (v19)
  {

    v15 = *(void **)(a3 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton_queue);
    *v9 = v15;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
    v16 = v15;
    LOBYTE(v15) = sub_232E6F144();
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v15 & 1) != 0)
    {
      *(_QWORD *)(a3 + OBJC_IVAR____TtC11ActivityKitP33_37102ADAD4FB4DA90D1EB342A548B6909Singleton__queue_presentations) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19 = v14;
      swift_bridgeObjectRetain();
      sub_232E6EFD0();
      swift_bridgeObjectRelease();
      a4[2](a4, 0);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  _Block_release(a4);
  __break(1u);
  _Block_release(a4);
  sub_232DE8D98(v11, v13);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_232DFD80C()
{
  unint64_t result;

  result = qword_255FFD500;
  if (!qword_255FFD500)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationMap, &type metadata for ActivityPresentationMap);
    atomic_store(result, (unint64_t *)&qword_255FFD500);
  }
  return result;
}

uint64_t sub_232DFD850()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_232DFD874()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_232DFD884()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_232DFD8B8(uint64_t a1)
{
  uint64_t v1;

  return sub_232DFCC40(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_232DFD8C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_232DFCEBC(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

unint64_t sub_232DFD8E8()
{
  unint64_t result;

  result = qword_255FFD508;
  if (!qword_255FFD508)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationPredicate, &type metadata for ActivityPresentationPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFD508);
  }
  return result;
}

uint64_t sub_232DFD92C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232DFD950(uint64_t a1)
{
  uint64_t v1;

  sub_232DFBFC0(a1, v1);
}

unint64_t sub_232DFD958()
{
  unint64_t result;

  result = qword_255FFD518;
  if (!qword_255FFD518)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationObservationServiceDefinition, &type metadata for ActivityPresentationObservationServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_255FFD518);
  }
  return result;
}

uint64_t sub_232DFD99C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232DFD9C0(void *a1)
{
  uint64_t v1;

  sub_232DFB928(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232DFD9C8()
{
  return swift_deallocObject();
}

void sub_232DFD9D8()
{
  sub_232DFBCA4();
}

uint64_t sub_232DFD9F8()
{
  return swift_deallocObject();
}

unint64_t sub_232DFDA08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254237AE8;
  if (!qword_254237AE8)
  {
    v1 = sub_232DE06B4(255, (unint64_t *)&qword_254238480);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_254237AE8);
  }
  return result;
}

uint64_t sub_232DFDA60()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_232DFDA94(uint64_t a1)
{
  uint64_t *v1;

  sub_232DFD4FC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_232DFDAA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232DFDAD4(uint64_t *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(v1 + 32);
  v3 = ActivityPresentationPredicate.filter(presentations:)(*a1);
  v2(v3, v4);
  return swift_bridgeObjectRelease();
}

uint64_t ActivityAuthorizationOptions.init(enabled:source:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, _BYTE *a4@<X8>)
{
  char v4;

  if ((a3 & 1) != 0)
  {
    v4 = 2;
    goto LABEL_7;
  }
  if (!a2)
  {
    v4 = 0;
LABEL_7:
    *a4 = result & 1;
    a4[1] = v4;
    return result;
  }
  if (a2 == 1)
  {
    v4 = 1;
    goto LABEL_7;
  }
  result = sub_232E6F57C();
  __break(1u);
  return result;
}

uint64_t ActivityAuthorizationOptions.enabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void ActivityAuthorizationOptions.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *ActivityAuthorizationOptions.source.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*ActivityAuthorizationOptions.source.modify())()
{
  return nullsub_1;
}

BOOL sub_232DFDC24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_232DFDC44()
{
  _BYTE *v0;

  if (*v0)
    return 0x656372756F73;
  else
    return 0x64656C62616E65;
}

uint64_t sub_232DFDC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232DFF3C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_232DFDCA0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_232DFDCAC()
{
  sub_232DFDE34();
  return sub_232E6F7D4();
}

uint64_t sub_232DFDCD4()
{
  sub_232DFDE34();
  return sub_232E6F7E0();
}

uint64_t ActivityAuthorizationOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD540);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DFDE34();
  sub_232E6F7C8();
  v13 = 0;
  sub_232E6F690();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_232DFDE78();
    sub_232E6F678();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_232DFDE34()
{
  unint64_t result;

  result = qword_255FFD548;
  if (!qword_255FFD548)
  {
    result = MEMORY[0x23492A124](&unk_232E713A4, &type metadata for ActivityAuthorizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD548);
  }
  return result;
}

unint64_t sub_232DFDE78()
{
  unint64_t result;

  result = qword_255FFD550;
  if (!qword_255FFD550)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationChangeSource, &type metadata for ActivityAuthorizationChangeSource);
    atomic_store(result, (unint64_t *)&qword_255FFD550);
  }
  return result;
}

uint64_t ActivityAuthorizationOptions.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD558);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DFDE34();
  sub_232E6F7BC();
  if (!v2)
  {
    v15 = 0;
    v9 = sub_232E6F624();
    v13 = 1;
    sub_232DFE024();
    sub_232E6F60C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v14;
    *a2 = v9 & 1;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_232DFE024()
{
  unint64_t result;

  result = qword_255FFD560;
  if (!qword_255FFD560)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationChangeSource, &type metadata for ActivityAuthorizationChangeSource);
    atomic_store(result, (unint64_t *)&qword_255FFD560);
  }
  return result;
}

uint64_t sub_232DFE068@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActivityAuthorizationOptions.init(from:)(a1, a2);
}

uint64_t sub_232DFE07C(_QWORD *a1)
{
  return ActivityAuthorizationOptions.encode(to:)(a1);
}

uint64_t sub_232DFE090()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DFEA98();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232DFE150(uint64_t a1, _WORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  __int16 v7;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232DFEA54();
  sub_232E6ED9C();
  sub_232DE8D98(v3, v5);
  result = swift_release();
  *a2 = v7;
  return result;
}

BOOL static ActivityAuthorizationChangeSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ActivityAuthorizationChangeSource.hash(into:)()
{
  return sub_232E6F78C();
}

uint64_t sub_232DFE26C()
{
  _BYTE *v0;

  if (*v0)
    return 0x73676E6974746573;
  else
    return 0x4372657474616C70;
}

uint64_t sub_232DFE2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232DFF4AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232DFE2D4()
{
  sub_232DFE5D0();
  return sub_232E6F7D4();
}

uint64_t sub_232DFE2FC()
{
  sub_232DFE5D0();
  return sub_232E6F7E0();
}

uint64_t sub_232DFE324()
{
  return 0;
}

uint64_t sub_232DFE330()
{
  sub_232DFE658();
  return sub_232E6F7D4();
}

uint64_t sub_232DFE358()
{
  sub_232DFE658();
  return sub_232E6F7E0();
}

uint64_t sub_232DFE380@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_232DFE3AC()
{
  sub_232DFE614();
  return sub_232E6F7D4();
}

uint64_t sub_232DFE3D4()
{
  sub_232DFE614();
  return sub_232E6F7E0();
}

uint64_t ActivityAuthorizationChangeSource.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD568);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD570);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD578);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DFE5D0();
  sub_232E6F7C8();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_232DFE614();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_232DFE658();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_232DFE5D0()
{
  unint64_t result;

  result = qword_255FFD580;
  if (!qword_255FFD580)
  {
    result = MEMORY[0x23492A124](&unk_232E71354, &type metadata for ActivityAuthorizationChangeSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD580);
  }
  return result;
}

unint64_t sub_232DFE614()
{
  unint64_t result;

  result = qword_255FFD588;
  if (!qword_255FFD588)
  {
    result = MEMORY[0x23492A124](&unk_232E71304, &type metadata for ActivityAuthorizationChangeSource.SettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD588);
  }
  return result;
}

unint64_t sub_232DFE658()
{
  unint64_t result;

  result = qword_255FFD590;
  if (!qword_255FFD590)
  {
    result = MEMORY[0x23492A124](&unk_232E712B4, &type metadata for ActivityAuthorizationChangeSource.PlatterChinCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD590);
  }
  return result;
}

uint64_t ActivityAuthorizationChangeSource.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t ActivityAuthorizationChangeSource.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD598);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5A0);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5A8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DFE5D0();
  v11 = v33;
  sub_232E6F7BC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_232E6F648();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_232E6F51C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v21 = &type metadata for ActivityAuthorizationChangeSource;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_232DFE614();
    sub_232E6F5DC();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_232DFE658();
    v22 = v6;
    sub_232E6F5DC();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_232DFEA38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_232DFEBAC(a1, a2, a3, (uint64_t (*)(void))sub_232DFEA54, (uint64_t (*)(void))sub_232DFEA98, (uint64_t (*)(void))sub_232DFEADC);
}

unint64_t sub_232DFEA54()
{
  unint64_t result;

  result = qword_255FFD5B8;
  if (!qword_255FFD5B8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationOptions, &type metadata for ActivityAuthorizationOptions);
    atomic_store(result, (unint64_t *)&qword_255FFD5B8);
  }
  return result;
}

unint64_t sub_232DFEA98()
{
  unint64_t result;

  result = qword_255FFD5C0;
  if (!qword_255FFD5C0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationOptions, &type metadata for ActivityAuthorizationOptions);
    atomic_store(result, (unint64_t *)&qword_255FFD5C0);
  }
  return result;
}

unint64_t sub_232DFEADC()
{
  unint64_t result;

  result = qword_255FFD5C8;
  if (!qword_255FFD5C8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationOptions, &type metadata for ActivityAuthorizationOptions);
    atomic_store(result, (unint64_t *)&qword_255FFD5C8);
  }
  return result;
}

unint64_t sub_232DFEB24()
{
  unint64_t result;

  result = qword_255FFD5D0;
  if (!qword_255FFD5D0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationChangeSource, &type metadata for ActivityAuthorizationChangeSource);
    atomic_store(result, (unint64_t *)&qword_255FFD5D0);
  }
  return result;
}

uint64_t sub_232DFEB68@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActivityAuthorizationChangeSource.init(from:)(a1, a2);
}

uint64_t sub_232DFEB7C(_QWORD *a1)
{
  return ActivityAuthorizationChangeSource.encode(to:)(a1);
}

uint64_t sub_232DFEB90(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_232DFEBAC(a1, a2, a3, (uint64_t (*)(void))sub_232DFE024, (uint64_t (*)(void))sub_232DFDE78, (uint64_t (*)(void))sub_232DFEBF0);
}

uint64_t sub_232DFEBAC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t result;

  a1[1] = a4();
  a1[2] = a5();
  result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_232DFEBF0()
{
  unint64_t result;

  result = qword_255FFD5D8;
  if (!qword_255FFD5D8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationChangeSource, &type metadata for ActivityAuthorizationChangeSource);
    atomic_store(result, (unint64_t *)&qword_255FFD5D8);
  }
  return result;
}

uint64_t sub_232DFEC34()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DFDE78();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232DFECEC(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232DFE024();
  sub_232E6ED9C();
  sub_232DE8D98(v3, v5);
  result = swift_release();
  *a2 = v7;
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityAuthorizationOptions(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationOptions(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232DFEEC4 + 4 * byte_232E70E15[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_232DFEEF8 + 4 * asc_232E70E10[v4]))();
}

uint64_t sub_232DFEEF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_232DFEF00(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x232DFEF08);
  return result;
}

uint64_t sub_232DFEF14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x232DFEF1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232DFEF20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_232DFEF28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationOptions()
{
  return &type metadata for ActivityAuthorizationOptions;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationChangeSource()
{
  return &type metadata for ActivityAuthorizationChangeSource;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationChangeSource.CodingKeys()
{
  return &type metadata for ActivityAuthorizationChangeSource.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationChangeSource.PlatterChinCodingKeys()
{
  return &type metadata for ActivityAuthorizationChangeSource.PlatterChinCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationChangeSource.SettingsCodingKeys()
{
  return &type metadata for ActivityAuthorizationChangeSource.SettingsCodingKeys;
}

uint64_t getEnumTagSinglePayload for ActivityStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11ActivityKit33ActivityAuthorizationChangeSourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232DFF068 + 4 * byte_232E70E1F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232DFF09C + 4 * byte_232E70E1A[v4]))();
}

uint64_t sub_232DFF09C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DFF0A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232DFF0ACLL);
  return result;
}

uint64_t sub_232DFF0B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232DFF0C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232DFF0C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232DFF0CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_232DFF0D8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationOptions.CodingKeys()
{
  return &type metadata for ActivityAuthorizationOptions.CodingKeys;
}

unint64_t sub_232DFF0F8()
{
  unint64_t result;

  result = qword_255FFD5E0;
  if (!qword_255FFD5E0)
  {
    result = MEMORY[0x23492A124](&unk_232E71134, &type metadata for ActivityAuthorizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD5E0);
  }
  return result;
}

unint64_t sub_232DFF140()
{
  unint64_t result;

  result = qword_255FFD5E8;
  if (!qword_255FFD5E8)
  {
    result = MEMORY[0x23492A124](&unk_232E7128C, &type metadata for ActivityAuthorizationChangeSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD5E8);
  }
  return result;
}

unint64_t sub_232DFF188()
{
  unint64_t result;

  result = qword_255FFD5F0;
  if (!qword_255FFD5F0)
  {
    result = MEMORY[0x23492A124](&unk_232E711AC, &type metadata for ActivityAuthorizationChangeSource.PlatterChinCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD5F0);
  }
  return result;
}

unint64_t sub_232DFF1D0()
{
  unint64_t result;

  result = qword_255FFD5F8;
  if (!qword_255FFD5F8)
  {
    result = MEMORY[0x23492A124](&unk_232E711D4, &type metadata for ActivityAuthorizationChangeSource.PlatterChinCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD5F8);
  }
  return result;
}

unint64_t sub_232DFF218()
{
  unint64_t result;

  result = qword_255FFD600;
  if (!qword_255FFD600)
  {
    result = MEMORY[0x23492A124](&unk_232E7115C, &type metadata for ActivityAuthorizationChangeSource.SettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD600);
  }
  return result;
}

unint64_t sub_232DFF260()
{
  unint64_t result;

  result = qword_255FFD608;
  if (!qword_255FFD608)
  {
    result = MEMORY[0x23492A124](&unk_232E71184, &type metadata for ActivityAuthorizationChangeSource.SettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD608);
  }
  return result;
}

unint64_t sub_232DFF2A8()
{
  unint64_t result;

  result = qword_255FFD610;
  if (!qword_255FFD610)
  {
    result = MEMORY[0x23492A124](&unk_232E711FC, &type metadata for ActivityAuthorizationChangeSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD610);
  }
  return result;
}

unint64_t sub_232DFF2F0()
{
  unint64_t result;

  result = qword_255FFD618;
  if (!qword_255FFD618)
  {
    result = MEMORY[0x23492A124](&unk_232E71224, &type metadata for ActivityAuthorizationChangeSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD618);
  }
  return result;
}

unint64_t sub_232DFF338()
{
  unint64_t result;

  result = qword_255FFD620;
  if (!qword_255FFD620)
  {
    result = MEMORY[0x23492A124](&unk_232E710A4, &type metadata for ActivityAuthorizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD620);
  }
  return result;
}

unint64_t sub_232DFF380()
{
  unint64_t result;

  result = qword_255FFD628;
  if (!qword_255FFD628)
  {
    result = MEMORY[0x23492A124](&unk_232E710CC, &type metadata for ActivityAuthorizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD628);
  }
  return result;
}

uint64_t sub_232DFF3C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656C62616E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232DFF4AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4372657474616C70 && a2 == 0xEB000000006E6968;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73676E6974746573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232DFF5C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 104))
  {
    v1 = *(_QWORD *)(v0 + 104);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238110);
    sub_232DDF49C(&qword_255FFD648, &qword_254238110, MEMORY[0x24BDB9CB0]);
    v1 = sub_232E6F030();
    *(_QWORD *)(v2 + 104) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

unint64_t sub_232DFF66C()
{
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_232E6F174();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  return 0xD00000000000001CLL;
}

uint64_t sub_232DFF738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = (uint64_t *)(v2 + 96);
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 96);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_232DE0F18(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v8);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_getObjectType();
      v26[0] = v10;
      v11 = sub_232E6F030();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_232DE80CC(v3 + 24, (uint64_t)v26);
  v12 = v27;
  v13 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16))(a1, a2, v12, v13);
  if (v15 >> 60 == 15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v16 = &qword_254238110;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238110);
    swift_allocObject();
    v17 = sub_232E6EFAC();
    v18 = (unint64_t *)&unk_255FFD630;
    v19 = MEMORY[0x24BDB9CA8];
  }
  else
  {
    v20 = v14;
    v21 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v26[0] = v20;
    v26[1] = v21;
    v16 = &qword_255FFD638;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD638);
    swift_allocObject();
    v17 = sub_232E6F000();
    v18 = (unint64_t *)&unk_255FFD640;
    v19 = MEMORY[0x24BDB9D08];
  }
  v22 = sub_232DDF49C(v18, v16, v19);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v6;
  *v6 = 0x8000000000000000;
  sub_232E56F50(v17, v22, a1, a2, isUniquelyReferenced_nonNull_native);
  *v6 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_getObjectType();
  v26[0] = v17;
  v11 = sub_232E6F030();
LABEL_9:
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_232DFF998()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232DE4A18(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_232DFF9EC()
{
  sub_232DFF998();
  return swift_deallocClassInstance();
}

unint64_t sub_232DFFA0C()
{
  return sub_232DFF66C();
}

uint64_t sub_232DFFA2C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232DFFA50()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_255FFC4A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC4A0);
  return sub_232E6EEC8();
}

uint64_t static ActivityQoSObservationServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255FFBFC0 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255FFC4A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static ActivityQoSObservationServiceDefinition.serviceName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_232DFFB24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255FFBFC0 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255FFC4A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_232DFFB94()
{
  return 0xD00000000000002ELL;
}

ValueMetadata *type metadata accessor for ActivityQoSObservationServiceDefinition()
{
  return &type metadata for ActivityQoSObservationServiceDefinition;
}

Swift::Void __swiftcall CancellableAssertion.cancel()()
{
  swift_retain();
  sub_232E6EF58();
  swift_release();
}

id CancellableAssertion.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CancellableAssertion.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CancellableAssertion.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_232DFFCF0()
{
  swift_retain();
  sub_232E6EF58();
  return swift_release();
}

uint64_t type metadata accessor for CancellableAssertion()
{
  return objc_opt_self();
}

uint64_t method lookup function for CancellableAssertion()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_232DFFD54()
{
  uint64_t v0;

  MEMORY[0x23492A1F0](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t sub_232DFFD80()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFC890);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC890);
  return sub_232E6EF1C();
}

uint64_t sub_232DFFE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232DE7988(a1, a2, a3, (uint64_t (*)(void))sub_232DFFF98);
}

uint64_t sub_232DFFE0C(uint64_t *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v7;
  uint64_t v8;
  char v10;

  v7 = *a3;
  sub_232DE79C0(a4, a4, a5);
  v10 = v7;
  v8 = sub_232E00694(a1, a2, &v10);
  swift_release();
  return v8;
}

_QWORD *sub_232DFFE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  return sub_232DE21A0(a1, a2, a3);
}

uint64_t sub_232DFFED8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_232DFFF0C()
{
  uint64_t v0;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542373F8);
  v0 = sub_232E6F174();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_232DFFF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Activity(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v5 = sub_232E6EFB8();
  MEMORY[0x23492A124](MEMORY[0x24BDB9CB0], v5);
  return sub_232E6F030();
}

uint64_t sub_232E00010()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_bridgeObjectRetain();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  swift_beginAccess();
  type metadata accessor for Activity(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  v3 = sub_232E6F198();
  MEMORY[0x23492A124](MEMORY[0x24BEE04F0], v3);
  sub_232E6F6CC();
  return 0;
}

uint64_t sub_232E000F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  __int128 v5;
  _OWORD v6[3];
  uint64_t v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = *(_OWORD *)(a3 + 16);
    v6[0] = *(_OWORD *)a3;
    v6[1] = v5;
    v6[2] = *(_OWORD *)(a3 + 32);
    v7 = *(_QWORD *)(a3 + 48);
    sub_232DE345C(v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_232E0016C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = *a2;
  v5 = *a1;
  v4 = a1[1];
  swift_beginAccess();
  v6 = a2[11];
  v10[0] = v5;
  v10[1] = v4;
  v8 = type metadata accessor for Activity(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x2349295D8](v10, v6, MEMORY[0x24BEE0D00], v8, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E00224(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  os_log_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];
  uint64_t v43;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for ActivityDescriptorContentState();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v38 - v9;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v1[9] + 16));
  v12 = *a1;
  v11 = a1[1];
  swift_beginAccess();
  v13 = v2[11];
  v42[0] = v12;
  v42[1] = v11;
  v15 = type metadata accessor for Activity(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x2349295D8](&v43, v42, v13, MEMORY[0x24BEE0D00], v15, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v17 = v43;
  if (v43)
  {
    if (qword_255FFC8A8 != -1)
      swift_once();
    v18 = sub_232E6EF28();
    __swift_project_value_buffer(v18, (uint64_t)qword_255FFC890);
    sub_232DED470((uint64_t)a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
    sub_232DED470((uint64_t)a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
    swift_retain();
    swift_retain();
    v19 = sub_232E6EF10();
    v20 = sub_232E6F390();
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v40 = v23;
      *(_DWORD *)v22 = 136446978;
      v41 = v5;
      v42[0] = v23;
      v39 = v21;
      v25 = v2[2];
      v24 = v2[3];
      swift_bridgeObjectRetain();
      v43 = sub_232DE4A70(v25, v24, v42);
      sub_232E6F480();
      swift_release();
      swift_bridgeObjectRelease();
      v38 = v19;
      *(_WORD *)(v22 + 12) = 2082;
      v26 = *(_QWORD *)(v17 + 16);
      v27 = *(_QWORD *)(v17 + 24);
      swift_bridgeObjectRetain();
      v43 = sub_232DE4A70(v26, v27, v42);
      sub_232E6F480();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2082;
      LOBYTE(v43) = v10[*(int *)(v41 + 20)];
      v28 = sub_232E6F1F8();
      v43 = sub_232DE4A70(v28, v29, v42);
      sub_232E6F480();
      swift_bridgeObjectRelease();
      sub_232DF51B8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      *(_WORD *)(v22 + 32) = 2082;
      v30 = (uint64_t *)&v8[*(int *)(v41 + 28)];
      v31 = *v30;
      v32 = v30[1];
      sub_232DE4A2C(*v30, v32);
      v33 = sub_232E6EE20();
      v35 = v34;
      sub_232DE8D98(v31, v32);
      v43 = sub_232DE4A70(v33, v35, v42);
      v5 = v41;
      sub_232E6F480();
      swift_bridgeObjectRelease();
      sub_232DF51B8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      v19 = v38;
      _os_log_impl(&dword_232DDB000, v38, (os_log_type_t)v39, "[%{public}s] Updating activity: %{public}s to state: %{public}s and to content state: %{public}s", (uint8_t *)v22, 0x2Au);
      v36 = v40;
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v36, -1, -1);
      MEMORY[0x23492A1F0](v22, -1, -1);
    }
    else
    {
      swift_release();
      swift_release();
      sub_232DF51B8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      sub_232DF51B8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
    }

    v37 = *((unsigned __int8 *)a1 + *(int *)(v5 + 20));
    sub_232E26290();
    if (LOBYTE(v42[0]) != v37)
    {
      LOBYTE(v42[0]) = v37;
      sub_232E262C4((unsigned __int8 *)v42);
    }
    sub_232E26AA0();
  }
  return result;
}

uint64_t sub_232E00694(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t *v3;
  uint64_t v4;
  char v7;
  os_unfair_lock_s *v8;
  uint64_t result;
  uint64_t v10;

  v7 = *a3;
  v8 = *(os_unfair_lock_s **)(v3[9] + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_232E0072C(v3, a1, a2, v7, &v10);
  os_unfair_lock_unlock(v8);
  result = swift_release();
  if (!v4)
    return v10;
  return result;
}

uint64_t sub_232E0072C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v17[2];
  uint64_t v18;

  v9 = *a1;
  v10 = *a2;
  v11 = a2[1];
  swift_beginAccess();
  v12 = a1[11];
  v17[0] = v10;
  v17[1] = v11;
  v14 = type metadata accessor for Activity(0, *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88), v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x2349295D8](&v18, v17, v12, MEMORY[0x24BEE0D00], v14, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v18;
  if (!v18)
  {
    LOBYTE(v17[0]) = a4;
    sub_232E0082C((uint64_t)a2, a3, (unsigned __int8 *)v17);
  }
  *a5 = v18;
  return result;
}

void sub_232E0082C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  _QWORD v42[4];
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48[3];
  uint64_t v49;

  v4 = v3;
  v45 = a2;
  v7 = *v3;
  v8 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivityDescriptor();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v44 = (uint64_t)v42 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (_QWORD *)((char *)v42 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (_QWORD *)((char *)v42 - v19);
  v43 = *a3;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v3[9] + 16));
  v47 = a1;
  sub_232DED470(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  v22 = *v20;
  v21 = v20[1];
  v42[2] = v3 + 11;
  swift_beginAccess();
  v23 = v3[11];
  v48[0] = v22;
  v48[1] = v21;
  v25 = type metadata accessor for Activity(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42[3] = v25;
  MEMORY[0x2349295D8](&v49, v48, v23, MEMORY[0x24BEE0D00], v25, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232DF51B8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  v26 = v49;
  swift_release();
  if (v26)
  {
    __break(1u);
  }
  else if (qword_255FFC8A8 == -1)
  {
    goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v27 = sub_232E6EF28();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_255FFC890);
  v29 = v47;
  sub_232DED470(v47, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  swift_retain();
  v42[1] = v28;
  v30 = sub_232E6EF10();
  v31 = sub_232E6F390();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v48[0] = v33;
    *(_DWORD *)v32 = 136446466;
    v34 = v4[2];
    v35 = v4[3];
    swift_bridgeObjectRetain();
    v49 = sub_232DE4A70(v34, v35, v48);
    v42[0] = v13;
    sub_232E6F480();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    v36 = *v18;
    v37 = v18[1];
    swift_bridgeObjectRetain();
    v49 = sub_232DE4A70(v36, v37, v48);
    v29 = v47;
    sub_232E6F480();
    swift_bridgeObjectRelease();
    sub_232DF51B8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
    _os_log_impl(&dword_232DDB000, v30, v31, "[%{public}s] Creating activity: %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v33, -1, -1);
    MEMORY[0x23492A1F0](v32, -1, -1);
  }
  else
  {
    swift_release();
    sub_232DF51B8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  }

  v38 = (uint64_t)v46;
  v39 = v43;
  v40 = v44;
  sub_232DED470(v29, v44, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  LOBYTE(v48[0]) = v39;
  sub_232DED470(v45, v38, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
  if (qword_254238460 != -1)
    swift_once();
  v41 = off_2542385A8;
  swift_retain();
  sub_232E2480C(v40, (uint64_t)v48, v38, (uint64_t)v41);
}

uint64_t sub_232E00EF0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_232E00F4C()
{
  sub_232E00EF0();
  return swift_deallocClassInstance();
}

uint64_t sub_232E00F68()
{
  return sub_232E00010();
}

uint64_t sub_232E00F88(uint64_t *a1)
{
  uint64_t *v1;

  return sub_232E0016C(a1, v1);
}

uint64_t sub_232E00FA0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232E00FC4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_232E01004(uint64_t a1)
{
  uint64_t v1;

  return sub_232E000F8(a1, *(_QWORD *)(v1 + 32), v1 + 40);
}

uint64_t sub_232E01014()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t ActivityUpdateFeed.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7472656C61;
  else
    return 7105633;
}

BOOL static ActivityUpdateFeed.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ActivityUpdateFeed.hash(into:)()
{
  return sub_232E6F78C();
}

uint64_t sub_232E010A8()
{
  sub_232E01404();
  return sub_232E6F7D4();
}

uint64_t sub_232E010D0()
{
  sub_232E01404();
  return sub_232E6F7E0();
}

uint64_t sub_232E010F8()
{
  sub_232E01448();
  return sub_232E6F7D4();
}

uint64_t sub_232E01120()
{
  sub_232E01448();
  return sub_232E6F7E0();
}

uint64_t sub_232E01148()
{
  _BYTE *v0;

  if (*v0)
    return 0x7472656C61;
  else
    return 7105633;
}

uint64_t sub_232E01178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E01B90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E0119C()
{
  sub_232E013C0();
  return sub_232E6F7D4();
}

uint64_t sub_232E011C4()
{
  sub_232E013C0();
  return sub_232E6F7E0();
}

uint64_t ActivityUpdateFeed.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD658);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD660);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD668);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E013C0();
  sub_232E6F7C8();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_232E01404();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_232E01448();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_232E013C0()
{
  unint64_t result;

  result = qword_255FFD670;
  if (!qword_255FFD670)
  {
    result = MEMORY[0x23492A124](&unk_232E71AF0, &type metadata for ActivityUpdateFeed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD670);
  }
  return result;
}

unint64_t sub_232E01404()
{
  unint64_t result;

  result = qword_255FFD678;
  if (!qword_255FFD678)
  {
    result = MEMORY[0x23492A124](&unk_232E71AA0, &type metadata for ActivityUpdateFeed.AlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD678);
  }
  return result;
}

unint64_t sub_232E01448()
{
  unint64_t result;

  result = qword_255FFD680;
  if (!qword_255FFD680)
  {
    result = MEMORY[0x23492A124](&unk_232E71A50, &type metadata for ActivityUpdateFeed.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD680);
  }
  return result;
}

uint64_t ActivityUpdateFeed.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t ActivityUpdateFeed.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD688);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD690);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD698);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E013C0();
  v11 = v33;
  sub_232E6F7BC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_232E6F648();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_232E6F51C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v21 = &type metadata for ActivityUpdateFeed;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_232E01404();
    sub_232E6F5DC();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_232E01448();
    v22 = v6;
    sub_232E6F5DC();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_232E01828@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActivityUpdateFeed.init(from:)(a1, a2);
}

uint64_t sub_232E0183C(_QWORD *a1)
{
  return ActivityUpdateFeed.encode(to:)(a1);
}

unint64_t sub_232E01854()
{
  unint64_t result;

  result = qword_2542377C8;
  if (!qword_2542377C8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityUpdateFeed, &type metadata for ActivityUpdateFeed);
    atomic_store(result, (unint64_t *)&qword_2542377C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityUpdateFeed()
{
  return &type metadata for ActivityUpdateFeed;
}

uint64_t _s11ActivityKit18ActivityUpdateFeedOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E018F8 + 4 * byte_232E717B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E0192C + 4 * byte_232E717B0[v4]))();
}

uint64_t sub_232E0192C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E01934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E0193CLL);
  return result;
}

uint64_t sub_232E01948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E01950);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E01954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E0195C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityUpdateFeed.CodingKeys()
{
  return &type metadata for ActivityUpdateFeed.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityUpdateFeed.AllCodingKeys()
{
  return &type metadata for ActivityUpdateFeed.AllCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityUpdateFeed.AlertCodingKeys()
{
  return &type metadata for ActivityUpdateFeed.AlertCodingKeys;
}

unint64_t sub_232E0199C()
{
  unint64_t result;

  result = qword_255FFD6A0;
  if (!qword_255FFD6A0)
  {
    result = MEMORY[0x23492A124](&unk_232E71A28, &type metadata for ActivityUpdateFeed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD6A0);
  }
  return result;
}

unint64_t sub_232E019E4()
{
  unint64_t result;

  result = qword_255FFD6A8;
  if (!qword_255FFD6A8)
  {
    result = MEMORY[0x23492A124](&unk_232E71948, &type metadata for ActivityUpdateFeed.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD6A8);
  }
  return result;
}

unint64_t sub_232E01A2C()
{
  unint64_t result;

  result = qword_255FFD6B0;
  if (!qword_255FFD6B0)
  {
    result = MEMORY[0x23492A124](&unk_232E71970, &type metadata for ActivityUpdateFeed.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD6B0);
  }
  return result;
}

unint64_t sub_232E01A74()
{
  unint64_t result;

  result = qword_255FFD6B8;
  if (!qword_255FFD6B8)
  {
    result = MEMORY[0x23492A124](&unk_232E718F8, &type metadata for ActivityUpdateFeed.AlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD6B8);
  }
  return result;
}

unint64_t sub_232E01ABC()
{
  unint64_t result;

  result = qword_255FFD6C0;
  if (!qword_255FFD6C0)
  {
    result = MEMORY[0x23492A124](&unk_232E71920, &type metadata for ActivityUpdateFeed.AlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD6C0);
  }
  return result;
}

unint64_t sub_232E01B04()
{
  unint64_t result;

  result = qword_255FFD6C8;
  if (!qword_255FFD6C8)
  {
    result = MEMORY[0x23492A124](&unk_232E71998, &type metadata for ActivityUpdateFeed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD6C8);
  }
  return result;
}

unint64_t sub_232E01B4C()
{
  unint64_t result;

  result = qword_255FFD6D0;
  if (!qword_255FFD6D0)
  {
    result = MEMORY[0x23492A124](&unk_232E719C0, &type metadata for ActivityUpdateFeed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD6D0);
  }
  return result;
}

uint64_t sub_232E01B90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7472656C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t AlertPayload.updateIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_232E6EE98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AlertPayload.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AlertPayload() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AlertPayload()
{
  uint64_t result;

  result = qword_255FFB568;
  if (!qword_255FFB568)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AlertPayload.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AlertPayload() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlertPayload.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AlertPayload() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlertPayload.sound.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AlertPayload() + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = (void *)v3[2];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  v7 = v6;
  return swift_bridgeObjectRetain();
}

uint64_t AlertPayload.deviceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AlertPayload() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlertPayload.platterTarget.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v3 = v1 + *(int *)(type metadata accessor for AlertPayload() + 40);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  v9 = *(_BYTE *)(v3 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  return sub_232E01E60(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_232E01E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result;

  if (a6 != 255)
    return sub_232E01E78();
  return result;
}

uint64_t sub_232E01E78()
{
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 AlertPayload.init(updateIdentifier:bundleIdentifier:title:body:sound:deviceIdentifier:platterTarget:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, __int128 *a12)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __n128 result;
  __int128 v30;
  char v31;
  __n128 v32;
  __int128 v33;

  v30 = *a8;
  v19 = *((_QWORD *)a8 + 2);
  v32 = (__n128)a12[1];
  v33 = *a12;
  v20 = *((_QWORD *)a12 + 4);
  v31 = *((_BYTE *)a12 + 40);
  v21 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (int *)type metadata accessor for AlertPayload();
  v23 = (_QWORD *)(a9 + v22[5]);
  *v23 = a2;
  v23[1] = a3;
  v24 = (_QWORD *)(a9 + v22[6]);
  *v24 = a4;
  v24[1] = a5;
  v25 = (_QWORD *)(a9 + v22[7]);
  *v25 = a6;
  v25[1] = a7;
  v26 = a9 + v22[8];
  *(_OWORD *)v26 = v30;
  *(_QWORD *)(v26 + 16) = v19;
  v27 = (_QWORD *)(a9 + v22[9]);
  *v27 = a10;
  v27[1] = a11;
  v28 = a9 + v22[10];
  result = v32;
  *(_OWORD *)v28 = v33;
  *(__n128 *)(v28 + 16) = v32;
  *(_QWORD *)(v28 + 32) = v20;
  *(_BYTE *)(v28 + 40) = v31;
  return result;
}

uint64_t sub_232E01FC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_232E02000 + 4 * byte_232E71B40[a1]))(0xD000000000000010, 0x8000000232E7DC10);
}

uint64_t sub_232E02058()
{
  return 0x5472657474616C70;
}

uint64_t sub_232E0207C()
{
  unsigned __int8 *v0;

  return sub_232E01FC8(*v0);
}

uint64_t sub_232E02084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E039D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_232E020A8(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_232E020B4()
{
  sub_232E023A8();
  return sub_232E6F7D4();
}

uint64_t sub_232E020DC()
{
  sub_232E023A8();
  return sub_232E6F7E0();
}

uint64_t AlertPayload.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD6D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E023A8();
  sub_232E6F7C8();
  LOBYTE(v17) = 0;
  sub_232E6EE98();
  sub_232DDDAD8(&qword_255FFC238, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_232E6F6A8();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for AlertPayload();
    LOBYTE(v17) = 1;
    sub_232E6F684();
    LOBYTE(v17) = 2;
    sub_232E6F684();
    LOBYTE(v17) = 3;
    sub_232E6F684();
    v10 = (__int128 *)(v3 + v9[8]);
    v11 = *((_QWORD *)v10 + 2);
    v17 = *v10;
    *(_QWORD *)&v18 = v11;
    v21 = 4;
    sub_232E023EC();
    sub_232E6F6A8();
    v17 = *(_OWORD *)(v3 + v9[9]);
    v21 = 5;
    sub_232E02430();
    sub_232E6F6A8();
    v12 = (__int128 *)(v3 + v9[10]);
    v13 = *((_QWORD *)v12 + 4);
    v14 = *((_BYTE *)v12 + 40);
    v15 = v12[1];
    v17 = *v12;
    v18 = v15;
    v19 = v13;
    v20 = v14;
    v21 = 6;
    sub_232E02474();
    sub_232E6F678();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_232E023A8()
{
  unint64_t result;

  result = qword_255FFD6E0;
  if (!qword_255FFD6E0)
  {
    result = MEMORY[0x23492A124](&unk_232E71D84, &type metadata for AlertPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD6E0);
  }
  return result;
}

unint64_t sub_232E023EC()
{
  unint64_t result;

  result = qword_255FFD6E8;
  if (!qword_255FFD6E8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for AlertConfiguration.AlertSound, &type metadata for AlertConfiguration.AlertSound);
    atomic_store(result, (unint64_t *)&qword_255FFD6E8);
  }
  return result;
}

unint64_t sub_232E02430()
{
  unint64_t result;

  result = qword_255FFC870;
  if (!qword_255FFC870)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for DeviceIdentifier, &type metadata for DeviceIdentifier);
    atomic_store(result, (unint64_t *)&qword_255FFC870);
  }
  return result;
}

unint64_t sub_232E02474()
{
  unint64_t result;

  result = qword_2542375A0;
  if (!qword_2542375A0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for SceneTarget, &type metadata for SceneTarget);
    atomic_store(result, (unint64_t *)&qword_2542375A0);
  }
  return result;
}

void AlertPayload.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  char v42;

  v32 = a2;
  v3 = sub_232E6EE98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD6F0);
  v6 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AlertPayload();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_232E023A8();
  v35 = v8;
  v13 = v37;
  sub_232E6F7BC();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  else
  {
    v14 = v6;
    v37 = v4;
    LOBYTE(v38) = 0;
    sub_232DDDAD8(&qword_254237980, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v15 = v33;
    v16 = v34;
    sub_232E6F63C();
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v11, v15, v3);
    LOBYTE(v38) = 1;
    v17 = sub_232E6F618();
    v18 = (uint64_t *)&v11[v9[5]];
    *v18 = v17;
    v18[1] = v19;
    LOBYTE(v38) = 2;
    v20 = sub_232E6F618();
    v21 = (uint64_t *)&v11[v9[6]];
    *v21 = v20;
    v21[1] = v22;
    LOBYTE(v38) = 3;
    v23 = sub_232E6F618();
    v24 = (uint64_t *)&v11[v9[7]];
    *v24 = v23;
    v24[1] = v25;
    v42 = 4;
    sub_232E0298C();
    sub_232E6F63C();
    v26 = v39;
    v27 = &v11[v9[8]];
    *(_OWORD *)v27 = v38;
    *((_QWORD *)v27 + 2) = v26;
    v42 = 5;
    sub_232E029D0();
    sub_232E6F63C();
    *(_OWORD *)&v11[v9[9]] = v38;
    v42 = 6;
    sub_232E02A14();
    sub_232E6F60C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v35, v16);
    v28 = v40;
    v29 = v41;
    v30 = &v11[v9[10]];
    v31 = v39;
    *(_OWORD *)v30 = v38;
    *((_OWORD *)v30 + 1) = v31;
    *((_QWORD *)v30 + 4) = v28;
    v30[40] = v29;
    sub_232E02A58((uint64_t)v11, v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    sub_232E02A9C((uint64_t)v11);
  }
}

unint64_t sub_232E0298C()
{
  unint64_t result;

  result = qword_255FFD6F8;
  if (!qword_255FFD6F8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for AlertConfiguration.AlertSound, &type metadata for AlertConfiguration.AlertSound);
    atomic_store(result, (unint64_t *)&qword_255FFD6F8);
  }
  return result;
}

unint64_t sub_232E029D0()
{
  unint64_t result;

  result = qword_254237D40;
  if (!qword_254237D40)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for DeviceIdentifier, &type metadata for DeviceIdentifier);
    atomic_store(result, (unint64_t *)&qword_254237D40);
  }
  return result;
}

unint64_t sub_232E02A14()
{
  unint64_t result;

  result = qword_254237D78;
  if (!qword_254237D78)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for SceneTarget, &type metadata for SceneTarget);
    atomic_store(result, (unint64_t *)&qword_254237D78);
  }
  return result;
}

uint64_t sub_232E02A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AlertPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E02A9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AlertPayload();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232E02AD8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_232DDDAD8(&qword_255FFD700, (uint64_t (*)(uint64_t))type metadata accessor for AlertPayload, (uint64_t)&protocol conformance descriptor for AlertPayload);
  a1[2] = sub_232DDDAD8(&qword_255FFD708, (uint64_t (*)(uint64_t))type metadata accessor for AlertPayload, (uint64_t)&protocol conformance descriptor for AlertPayload);
  result = sub_232DDDAD8(&qword_255FFD710, (uint64_t (*)(uint64_t))type metadata accessor for AlertPayload, (uint64_t)&protocol conformance descriptor for AlertPayload);
  a1[3] = result;
  return result;
}

void sub_232E02B50(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  AlertPayload.init(from:)(a1, a2);
}

uint64_t sub_232E02B64(_QWORD *a1)
{
  return AlertPayload.encode(to:)(a1);
}

uint64_t sub_232E02B78()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8(&qword_255FFD708, (uint64_t (*)(uint64_t))type metadata accessor for AlertPayload, (uint64_t)&protocol conformance descriptor for AlertPayload);
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E02C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD730);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  sub_232DDDAD8(&qword_255FFD700, (uint64_t (*)(uint64_t))type metadata accessor for AlertPayload, (uint64_t)&protocol conformance descriptor for AlertPayload);
  sub_232E6ED9C();
  sub_232E03CA4(a2);
  sub_232DE8D98(v8, v10);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v7, 0, 1, a3);
  return sub_232E03CE4((uint64_t)v7, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for AlertPayload(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  id v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_232E6EE98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (void *)v22[2];
    v21[2] = v24;
    v25 = a3[9];
    v26 = a3[10];
    v27 = (uint64_t *)((char *)a1 + v25);
    v28 = (uint64_t *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = (char *)a1 + v26;
    v31 = (char *)a2 + v26;
    v32 = *((unsigned __int8 *)a2 + v26 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = v24;
    swift_bridgeObjectRetain();
    if (v32 == 255)
    {
      v34 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v34;
      *(_OWORD *)(v30 + 25) = *(_OWORD *)(v31 + 25);
    }
    else
    {
      v36 = *(_QWORD *)v31;
      v37 = *((_QWORD *)v31 + 1);
      v38 = *((_QWORD *)v31 + 2);
      v39 = *((_QWORD *)v31 + 3);
      v40 = *((_QWORD *)v31 + 4);
      sub_232E01E78();
      *(_QWORD *)v30 = v36;
      *((_QWORD *)v30 + 1) = v37;
      *((_QWORD *)v30 + 2) = v38;
      *((_QWORD *)v30 + 3) = v39;
      *((_QWORD *)v30 + 4) = v40;
      v30[40] = v32 & 1;
    }
  }
  return a1;
}

uint64_t destroy for AlertPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + *(int *)(a2 + 40) + 40) != 255)
    return sub_232E03000();
  return result;
}

uint64_t sub_232E03000()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AlertPayload(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  int v31;
  id v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (void *)v21[2];
  v20[2] = v23;
  v24 = a3[9];
  v25 = a3[10];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = a1 + v25;
  v30 = (uint64_t *)(a2 + v25);
  v31 = *(unsigned __int8 *)(a2 + v25 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = v23;
  swift_bridgeObjectRetain();
  if (v31 == 255)
  {
    v33 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_OWORD *)(v29 + 25) = *(_OWORD *)((char *)v30 + 25);
  }
  else
  {
    v34 = v31 & 1;
    v35 = *v30;
    v36 = v30[1];
    v37 = v30[2];
    v38 = v30[3];
    v39 = v30[4];
    sub_232E01E78();
    *(_QWORD *)v29 = v35;
    *(_QWORD *)(v29 + 8) = v36;
    *(_QWORD *)(v29 + 16) = v37;
    *(_QWORD *)(v29 + 24) = v38;
    *(_QWORD *)(v29 + 32) = v39;
    *(_BYTE *)(v29 + 40) = v34;
  }
  return a1;
}

uint64_t assignWithCopy for AlertPayload(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  int v28;
  int v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = a2 + v16;
  *v17 = *(_QWORD *)(a2 + v16);
  v17[1] = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (void *)v17[2];
  v20 = *(void **)(v18 + 16);
  v17[2] = v20;
  v21 = v20;

  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = (__int128 *)(a2 + v25);
  v28 = *(unsigned __int8 *)(a1 + v25 + 40);
  v29 = *(unsigned __int8 *)(a2 + v25 + 40);
  if (v28 == 255)
  {
    if (v29 == 255)
    {
      v32 = *v27;
      v33 = v27[1];
      *(_OWORD *)(v26 + 25) = *(__int128 *)((char *)v27 + 25);
      *(_OWORD *)v26 = v32;
      *(_OWORD *)(v26 + 16) = v33;
    }
    else
    {
      v40 = v29 & 1;
      v41 = *(_QWORD *)v27;
      v42 = *((_QWORD *)v27 + 1);
      v43 = *((_QWORD *)v27 + 2);
      v44 = *((_QWORD *)v27 + 3);
      v45 = *((_QWORD *)v27 + 4);
      sub_232E01E78();
      *(_QWORD *)v26 = v41;
      *(_QWORD *)(v26 + 8) = v42;
      *(_QWORD *)(v26 + 16) = v43;
      *(_QWORD *)(v26 + 24) = v44;
      *(_QWORD *)(v26 + 32) = v45;
      *(_BYTE *)(v26 + 40) = v40;
    }
  }
  else if (v29 == 255)
  {
    sub_232E033BC(v26);
    v30 = *(__int128 *)((char *)v27 + 25);
    v31 = v27[1];
    *(_OWORD *)v26 = *v27;
    *(_OWORD *)(v26 + 16) = v31;
    *(_OWORD *)(v26 + 25) = v30;
  }
  else
  {
    v34 = v29 & 1;
    v35 = *(_QWORD *)v27;
    v36 = *((_QWORD *)v27 + 1);
    v37 = *((_QWORD *)v27 + 2);
    v38 = *((_QWORD *)v27 + 3);
    v39 = *((_QWORD *)v27 + 4);
    sub_232E01E78();
    *(_QWORD *)v26 = v35;
    *(_QWORD *)(v26 + 8) = v36;
    *(_QWORD *)(v26 + 16) = v37;
    *(_QWORD *)(v26 + 24) = v38;
    *(_QWORD *)(v26 + 32) = v39;
    *(_BYTE *)(v26 + 40) = v34;
    sub_232E03000();
  }
  return a1;
}

uint64_t sub_232E033BC(uint64_t a1)
{
  destroy for ProcessDescriptor();
  return a1;
}

uint64_t initializeWithTake for AlertPayload(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;

  v6 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = (__int128 *)(a2 + v8);
  v11 = *v10;
  *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
  v12 = a3[9];
  v13 = a3[10];
  v14 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(a1 + v12) = v14;
  v15 = (_OWORD *)(a1 + v13);
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)(a2 + v13 + 25);
  v16 = *(_OWORD *)(a2 + v13 + 16);
  *v15 = *(_OWORD *)(a2 + v13);
  v15[1] = v16;
  return a1;
}

uint64_t assignWithTake for AlertPayload(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;

  v6 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22 + 8);
  *v23 = *(_QWORD *)(a2 + v22);
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v23[2];
  v23[2] = *(_QWORD *)(v24 + 16);

  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  if (*(unsigned __int8 *)(a1 + v32 + 40) != 255)
  {
    v35 = *(unsigned __int8 *)(v34 + 40);
    if (v35 != 255)
    {
      v37 = *(_QWORD *)(v34 + 32);
      v38 = *(_OWORD *)(v34 + 16);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *(_OWORD *)(v33 + 16) = v38;
      *(_QWORD *)(v33 + 32) = v37;
      *(_BYTE *)(v33 + 40) = v35 & 1;
      sub_232E03000();
      return a1;
    }
    sub_232E033BC(v33);
  }
  v36 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v36;
  *(_OWORD *)(v33 + 25) = *(_OWORD *)(v34 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlertPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E03608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_232E6EE98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E03694(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_232E6EE98();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_232E03710()
{
  uint64_t result;
  unint64_t v1;

  result = sub_232E6EE98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AlertPayload.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertPayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_232E03880 + 4 * byte_232E71B4C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_232E038B4 + 4 * byte_232E71B47[v4]))();
}

uint64_t sub_232E038B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E038BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E038C4);
  return result;
}

uint64_t sub_232E038D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E038D8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_232E038DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E038E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlertPayload.CodingKeys()
{
  return &type metadata for AlertPayload.CodingKeys;
}

unint64_t sub_232E03904()
{
  unint64_t result;

  result = qword_255FFD718;
  if (!qword_255FFD718)
  {
    result = MEMORY[0x23492A124](&unk_232E71D5C, &type metadata for AlertPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD718);
  }
  return result;
}

unint64_t sub_232E0394C()
{
  unint64_t result;

  result = qword_255FFD720;
  if (!qword_255FFD720)
  {
    result = MEMORY[0x23492A124](&unk_232E71CCC, &type metadata for AlertPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD720);
  }
  return result;
}

unint64_t sub_232E03994()
{
  unint64_t result;

  result = qword_255FFD728;
  if (!qword_255FFD728)
  {
    result = MEMORY[0x23492A124](&unk_232E71CF4, &type metadata for AlertPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD728);
  }
  return result;
}

uint64_t sub_232E039D8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000232E7DC10 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000232E7DC30 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E756F73 && a2 == 0xE500000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000232E7DC50 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5472657474616C70 && a2 == 0xED00007465677261)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_232E03CA4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232E03CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ActivityQoSMap.map.getter()
{
  return swift_bridgeObjectRetain();
}

ActivityKit::ActivityQoSMap __swiftcall ActivityQoSMap.init(map:)(ActivityKit::ActivityQoSMap map)
{
  ActivityKit::ActivityQoSMap *v1;

  v1->map._rawValue = map.map._rawValue;
  return map;
}

uint64_t sub_232E03D3C()
{
  return 7364973;
}

uint64_t sub_232E03D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E03DD0()
{
  sub_232E03F48();
  return sub_232E6F7D4();
}

uint64_t sub_232E03DF8()
{
  sub_232E03F48();
  return sub_232E6F7E0();
}

uint64_t ActivityQoSMap.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD738);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E03F48();
  sub_232E6F7C8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD748);
  sub_232E04118(&qword_255FFD750, (uint64_t (*)(void))sub_232E03F8C, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_232E03F48()
{
  unint64_t result;

  result = qword_255FFD740;
  if (!qword_255FFD740)
  {
    result = MEMORY[0x23492A124](&unk_232E71F78, &type metadata for ActivityQoSMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD740);
  }
  return result;
}

unint64_t sub_232E03F8C()
{
  unint64_t result;

  result = qword_255FFD758;
  if (!qword_255FFD758)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoS, &type metadata for ActivityQoS);
    atomic_store(result, (unint64_t *)&qword_255FFD758);
  }
  return result;
}

uint64_t ActivityQoSMap.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD760);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E03F48();
  sub_232E6F7BC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD748);
    sub_232E04118(&qword_255FFD768, (uint64_t (*)(void))sub_232E0418C, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232E04118(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255FFD748);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23492A124](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232E0418C()
{
  unint64_t result;

  result = qword_255FFD770;
  if (!qword_255FFD770)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoS, &type metadata for ActivityQoS);
    atomic_store(result, (unint64_t *)&qword_255FFD770);
  }
  return result;
}

uint64_t sub_232E041D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActivityQoSMap.init(from:)(a1, a2);
}

uint64_t sub_232E041E4(_QWORD *a1)
{
  return ActivityQoSMap.encode(to:)(a1);
}

unint64_t sub_232E041F8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232E0422C();
  a1[2] = sub_232E04270();
  result = sub_232E042B4();
  a1[3] = result;
  return result;
}

unint64_t sub_232E0422C()
{
  unint64_t result;

  result = qword_255FFD778;
  if (!qword_255FFD778)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoSMap, &type metadata for ActivityQoSMap);
    atomic_store(result, (unint64_t *)&qword_255FFD778);
  }
  return result;
}

unint64_t sub_232E04270()
{
  unint64_t result;

  result = qword_255FFD780;
  if (!qword_255FFD780)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoSMap, &type metadata for ActivityQoSMap);
    atomic_store(result, (unint64_t *)&qword_255FFD780);
  }
  return result;
}

unint64_t sub_232E042B4()
{
  unint64_t result;

  result = qword_255FFD788;
  if (!qword_255FFD788)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoSMap, &type metadata for ActivityQoSMap);
    atomic_store(result, (unint64_t *)&qword_255FFD788);
  }
  return result;
}

uint64_t sub_232E042F8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E04270();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

ValueMetadata *type metadata accessor for ActivityQoSMap()
{
  return &type metadata for ActivityQoSMap;
}

uint64_t storeEnumTagSinglePayload for ActivityQoSMap.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E0440C + 4 * byte_232E71DD4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E0442C + 4 * byte_232E71DD9[v4]))();
}

_BYTE *sub_232E0440C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E0442C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E04434(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E0443C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E04444(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E0444C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityQoSMap.CodingKeys()
{
  return &type metadata for ActivityQoSMap.CodingKeys;
}

unint64_t sub_232E0446C()
{
  unint64_t result;

  result = qword_255FFD790;
  if (!qword_255FFD790)
  {
    result = MEMORY[0x23492A124](&unk_232E71F50, &type metadata for ActivityQoSMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD790);
  }
  return result;
}

unint64_t sub_232E044B4()
{
  unint64_t result;

  result = qword_255FFD798;
  if (!qword_255FFD798)
  {
    result = MEMORY[0x23492A124](&unk_232E71EC0, &type metadata for ActivityQoSMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD798);
  }
  return result;
}

unint64_t sub_232E044FC()
{
  unint64_t result;

  result = qword_255FFD7A0;
  if (!qword_255FFD7A0)
  {
    result = MEMORY[0x23492A124](&unk_232E71EE8, &type metadata for ActivityQoSMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD7A0);
  }
  return result;
}

uint64_t BasicTimer.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_255FFBEB0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t BasicTimer.init()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_255FFBEB0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t sub_232E045CC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  os_unfair_lock_s *v9;

  v9 = *(os_unfair_lock_s **)(v4 + 24);
  swift_retain();
  os_unfair_lock_lock(v9 + 4);
  sub_232E046EC(a1, a2, a3, a4);
  os_unfair_lock_unlock(v9 + 4);
  return swift_release();
}

uint64_t sub_232E04644()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  const os_unfair_lock *v3;

  v1 = v0;
  v2 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  v3 = *(const os_unfair_lock **)(v0 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v3 + 4);
  swift_release();
  if (*(_QWORD *)(v1 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_232E6F420();
    swift_unknownObjectRelease();
    *(_QWORD *)(v1 + 16) = 0;
    swift_unknownObjectRelease();
  }
  os_unfair_lock_unlock(v2 + 4);
  return swift_release();
}

uint64_t sub_232E046EC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  const os_unfair_lock *v24;
  uint64_t result;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(uint64_t *, uint64_t);
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t ObjectType;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD aBlock[7];

  v5 = v4;
  v54 = a3;
  v52 = a2;
  v49 = a1;
  v7 = sub_232E6F0D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_232E6F108();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v53 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_232E6F0CC();
  v48 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v44 - v14);
  v16 = sub_232E6F120();
  v47 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v55 = (char *)&v44 - v20;
  v21 = sub_232E6F3FC();
  v46 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(const os_unfair_lock **)(v4 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v24 + 4);
  swift_release();
  if (*(_QWORD *)(v5 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_232E6F420();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v5 + 16) = 0;
  result = swift_unknownObjectRelease();
  v26 = a4 * 1000.0;
  if ((~COERCE__INT64(a4 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v45 = v7;
  if ((uint64_t)v26 >= 0x7FFFFFFF)
    v27 = 0x7FFFFFFFLL;
  else
    v27 = (uint64_t)v26;
  sub_232E04D84();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232E04DC0();
  v44 = v8;
  v28 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254236920);
  sub_232E04E08();
  sub_232E6F4A4();
  v29 = sub_232E6F408();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v21);
  sub_232E6F114();
  *v15 = v27;
  v30 = v48;
  v31 = v51;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v48 + 104))(v15, *MEMORY[0x24BEE5410], v51);
  v32 = v55;
  MEMORY[0x23492956C](v18, v15);
  v33 = *(void (**)(uint64_t *, uint64_t))(v30 + 8);
  v33(v15, v31);
  v34 = *(uint64_t (**)(char *, uint64_t))(v47 + 8);
  v49 = v28;
  v35 = v28;
  v36 = v34;
  v34(v18, v35);
  ObjectType = swift_getObjectType();
  sub_232E643AC((uint64_t)v15);
  v38 = v50;
  sub_232E643F0(v50);
  MEMORY[0x234929878](v32, v15, v38, ObjectType);
  v33(v38, v31);
  v33(v15, v31);
  v39 = (_QWORD *)swift_allocObject();
  v40 = v52;
  v39[2] = v5;
  v39[3] = v40;
  v39[4] = v54;
  aBlock[4] = sub_232E04E80;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDE158;
  aBlock[3] = &block_descriptor_2;
  v41 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v42 = v53;
  sub_232E64438();
  v43 = v58;
  sub_232E6443C();
  sub_232E6F414();
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
  swift_release();
  *(_QWORD *)(v5 + 16) = v29;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (*(_QWORD *)(v5 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_232E6F42C();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v36(v32, v49);
  }
  else
  {
    v36(v32, v49);
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_232E04C24(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  os_unfair_lock_s *v4;
  const os_unfair_lock *v5;
  uint64_t v6;

  v4 = *(os_unfair_lock_s **)(a1 + 24);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  v5 = *(const os_unfair_lock **)(a1 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v5 + 4);
  swift_release();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_232E6F420();
    swift_unknownObjectRelease();
    *(_QWORD *)(a1 + 16) = 0;
    swift_unknownObjectRelease();
  }
  os_unfair_lock_unlock(v4 + 4);
  v6 = swift_release();
  return a2(v6);
}

uint64_t BasicTimer.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t BasicTimer.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BasicTimer()
{
  return objc_opt_self();
}

uint64_t method lookup function for BasicTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BasicTimer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of BasicTimer.start(duration:queue:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of BasicTimer.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

unint64_t sub_232E04D84()
{
  unint64_t result;

  result = qword_2542373D0;
  if (!qword_2542373D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542373D0);
  }
  return result;
}

unint64_t sub_232E04DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542373C0;
  if (!qword_2542373C0)
  {
    v1 = sub_232E6F3FC();
    result = MEMORY[0x23492A124](MEMORY[0x24BEE57D0], v1);
    atomic_store(result, (unint64_t *)&qword_2542373C0);
  }
  return result;
}

unint64_t sub_232E04E08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542373B0;
  if (!qword_2542373B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254236920);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2542373B0);
  }
  return result;
}

uint64_t sub_232E04E54()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E04E80()
{
  uint64_t v0;

  return sub_232E04C24(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_232E04E8C()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_255FFC510);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC510);
  return sub_232E6EEC8();
}

uint64_t static StateCaptureServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255FFBFE0 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255FFC510);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static StateCaptureServiceDefinition.serviceName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_232E04F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255FFBFE0 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255FFC510);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_232E04FD0()
{
  return 0xD000000000000023;
}

ValueMetadata *type metadata accessor for StateCaptureServiceDefinition()
{
  return &type metadata for StateCaptureServiceDefinition;
}

uint64_t ActivityPresentationOptions.destinations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ActivityPresentationOptions.isUserDismissalAllowedOnLockScreen.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ActivityPresentationOptions.isUserDismissalAllowedOnLockScreen.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*ActivityPresentationOptions.isUserDismissalAllowedOnLockScreen.modify())()
{
  return nullsub_1;
}

uint64_t ActivityPresentationOptions.shouldSuppressAlertContentOnLockScreen.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t ActivityPresentationOptions.shouldSuppressAlertContentOnLockScreen.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*ActivityPresentationOptions.shouldSuppressAlertContentOnLockScreen.modify())()
{
  return nullsub_1;
}

uint64_t ActivityPresentationOptions.isActionButtonInitiated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t ActivityPresentationOptions.isActionButtonInitiated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 10) = result;
  return result;
}

uint64_t (*ActivityPresentationOptions.isActionButtonInitiated.modify())()
{
  return nullsub_1;
}

uint64_t ActivityPresentationOptions.showsAuthorizationOptions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t ActivityPresentationOptions.showsAuthorizationOptions.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 11) = result;
  return result;
}

uint64_t (*ActivityPresentationOptions.showsAuthorizationOptions.modify())()
{
  return nullsub_1;
}

void ActivityPresentationOptions.authorizationOptionsType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 12);
}

_BYTE *ActivityPresentationOptions.authorizationOptionsType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 12) = *result;
  return result;
}

uint64_t (*ActivityPresentationOptions.authorizationOptionsType.modify())()
{
  return nullsub_1;
}

void *ActivityPresentationOptions.platterTintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void ActivityPresentationOptions.platterTintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*ActivityPresentationOptions.platterTintColor.modify())()
{
  return nullsub_1;
}

double ActivityPresentationOptions.init(destinations:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = a1;
  *(_QWORD *)&result = 257;
  *(_DWORD *)(a2 + 8) = 257;
  *(_BYTE *)(a2 + 12) = 3;
  *(_QWORD *)(a2 + 16) = 0;
  return result;
}

void *static ActivityPresentationOptions.ActivityPresentationDestination.systemApertureOnly.getter()
{
  return &unk_250426C88;
}

ActivityKit::ActivityPresentationOptions::ActivityPresentationDestination_optional __swiftcall ActivityPresentationOptions.ActivityPresentationDestination.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ActivityKit::ActivityPresentationOptions::ActivityPresentationDestination_optional result;
  char v5;

  v2 = v1;
  v3 = sub_232E6F5D0();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ActivityPresentationOptions.ActivityPresentationDestination.allCases.getter()
{
  return &unk_250426CB0;
}

uint64_t ActivityPresentationOptions.ActivityPresentationDestination.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E051CC + 4 * byte_232E720A0[*v0]))(0x657263736B636F6CLL, 0xEA00000000006E65);
}

uint64_t sub_232E051CC()
{
  return 0x72656E6E6162;
}

uint64_t sub_232E051E0()
{
  return 0x70416D6574737973;
}

uint64_t sub_232E05204()
{
  return 0x746E6569626D61;
}

void sub_232E0521C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_232E6F780();
  __asm { BR              X9 }
}

uint64_t sub_232E0526C()
{
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  return sub_232E6F7B0();
}

void sub_232E052E4()
{
  __asm { BR              X10 }
}

uint64_t sub_232E05324()
{
  sub_232E6F21C();
  return swift_bridgeObjectRelease();
}

void sub_232E05388()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_232E6F780();
  __asm { BR              X9 }
}

uint64_t sub_232E053D4()
{
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  return sub_232E6F7B0();
}

ActivityKit::ActivityPresentationOptions::ActivityPresentationDestination_optional sub_232E0544C(Swift::String *a1)
{
  return ActivityPresentationOptions.ActivityPresentationDestination.init(rawValue:)(*a1);
}

uint64_t sub_232E05458()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_232E0548C + 4 * byte_232E720B0[*v0]))();
}

void sub_232E0548C(_QWORD *a1@<X8>)
{
  *a1 = 0x72656E6E6162;
  a1[1] = 0xE600000000000000;
}

void sub_232E054A4(char *a1@<X8>)
{
  strcpy(a1, "systemAperture");
  a1[15] = -18;
}

void sub_232E054CC(_QWORD *a1@<X8>)
{
  *a1 = 0x746E6569626D61;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_232E054E8()
{
  sub_232E071B8();
  return sub_232E6F27C();
}

uint64_t sub_232E05544()
{
  sub_232E071B8();
  return sub_232E6F258();
}

void sub_232E05590(char *a1)
{
  sub_232E53B00(*a1);
}

void sub_232E0559C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250426DE8;
}

id ActivityPresentationOptions.acActivityPresentationOptions.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  void *v7;
  id v8;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  void *v16;

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 9);
  v4 = *(_BYTE *)(v0 + 10);
  v5 = *(_BYTE *)(v0 + 11);
  v6 = *(_BYTE *)(v0 + 12);
  v7 = *(void **)(v0 + 16);
  sub_232DE06B4(0, &qword_254236870);
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v8 = v7;
  swift_bridgeObjectRetain();
  return sub_232E0564C(&v10);
}

id sub_232E0564C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  unsigned int v11;
  unsigned int v12;

  v1 = *a1;
  v11 = *((unsigned __int8 *)a1 + 8);
  v12 = *((unsigned __int8 *)a1 + 9);
  v2 = *((unsigned __int8 *)a1 + 10);
  v3 = *((unsigned __int8 *)a1 + 11);
  v4 = *((unsigned __int8 *)a1 + 12);
  v5 = (void *)a1[2];
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_232DE06B4(0, &qword_254236878);
  swift_bridgeObjectRetain();
  v7 = (void *)sub_232E6F2AC();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithDestinations_, v7);

  if (!v8)
  {
    __break(1u);
    JUMPOUT(0x232E058B8);
  }
  swift_bridgeObjectRelease();
  v9 = v8;
  objc_msgSend(v9, sel_setUserDismissalAllowedOnLockScreen_, v11);
  objc_msgSend(v9, sel_setShouldSuppressAlertContentOnLockScreen_, v12);
  objc_msgSend(v9, sel_setActionButtonInitiated_, v2);
  objc_msgSend(v9, sel_setShowsAuthorizationOptions_, v3);
  swift_bridgeObjectRelease();

  objc_msgSend(v9, sel_setAuthorizationOptionsType_, v4);
  return v9;
}

uint64_t sub_232E058CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E05908 + 4 * byte_232E720B4[a1]))(0x74616E6974736564, 0xEC000000736E6F69);
}

unint64_t sub_232E05908()
{
  return 0xD000000000000022;
}

uint64_t sub_232E059AC()
{
  unsigned __int8 *v0;

  return sub_232E058CC(*v0);
}

uint64_t sub_232E059B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E06EF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E059D8()
{
  sub_232E0679C();
  return sub_232E6F7D4();
}

uint64_t sub_232E05A00()
{
  sub_232E0679C();
  return sub_232E6F7E0();
}

void ActivityPresentationOptions.init(from:)(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char **v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char **v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238220);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E0679C();
  sub_232E6F7BC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
    v33 = 0;
    sub_232E067E0();
    sub_232E6F63C();
    v26 = a2;
    v29 = v6;
    v30 = v31;
    v9 = *(_QWORD *)(v31 + 16);
    if (v9)
    {
      v27 = v8;
      v28 = v5;
      v10 = swift_bridgeObjectRetain() + 40;
      v11 = (char *)MEMORY[0x24BEE4AF8];
      do
      {
        swift_bridgeObjectRetain();
        v12 = sub_232E6F5D0();
        swift_bridgeObjectRelease();
        if (v12 <= 3)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_232E10180(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
          v14 = *((_QWORD *)v11 + 2);
          v13 = *((_QWORD *)v11 + 3);
          if (v14 >= v13 >> 1)
            v11 = sub_232E10180((char *)(v13 > 1), v14 + 1, 1, v11);
          *((_QWORD *)v11 + 2) = v14 + 1;
          v11[v14 + 32] = v12;
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      v8 = v27;
      v5 = v28;
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    LOBYTE(v31) = 1;
    swift_bridgeObjectRetain();
    v15 = sub_232E6F624();
    LOBYTE(v31) = 2;
    v16 = sub_232E6F624();
    LOBYTE(v31) = 4;
    v34 = sub_232E6F624() & 1;
    v33 = 3;
    sub_232E0683C();
    sub_232E6F63C();
    LODWORD(v27) = v16;
    v17 = v8;
    v19 = v31;
    v18 = v32;
    sub_232DE06B4(0, &qword_255FFD7A8);
    sub_232DE06B4(0, &qword_255FFD7B0);
    v28 = v19;
    v30 = v18;
    v24 = (char *)sub_232E6F39C();
    sub_232DE8D98(v28, v30);
    LOBYTE(v18) = (_BYTE)v27;
    v33 = 5;
    sub_232E06880();
    sub_232E6F63C();
    LODWORD(v30) = v31;
    LOBYTE(v31) = 6;
    v20 = v17;
    LOBYTE(v17) = sub_232E6F600();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v5);
    v21 = v34;
    v22 = v26;
    *v26 = v11;
    *((_BYTE *)v22 + 8) = v15 & 1;
    *((_BYTE *)v22 + 9) = v18 & 1;
    *((_BYTE *)v22 + 10) = v17 & 1;
    *((_BYTE *)v22 + 11) = v21;
    *((_BYTE *)v22 + 12) = v30;
    v22[2] = v24;
    v23 = v24;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
  }
}

uint64_t ActivityPresentationOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  int v9;
  int v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _DWORD v30[3];
  int v31;
  int v32;
  int v33;
  id v34;
  char v35;
  id v36[3];

  v36[2] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_254237CA0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)v1;
  v9 = *(unsigned __int8 *)(v1 + 8);
  v33 = *(unsigned __int8 *)(v1 + 9);
  LODWORD(v34) = v9;
  v10 = *(unsigned __int8 *)(v1 + 10);
  v32 = *(unsigned __int8 *)(v1 + 11);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 12);
  v30[2] = v10;
  v31 = v6;
  v11 = *(void **)(v1 + 16);
  v12 = a1[3];
  v13 = a1;
  v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_232E0679C();
  sub_232E6F7C8();
  v36[0] = v8;
  v35 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238210);
  sub_232E068C4();
  sub_232E6F6A8();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  v16 = v11;
  v17 = v31;
  LOBYTE(v36[0]) = 1;
  sub_232E6F690();
  LOBYTE(v36[0]) = 2;
  v19 = v7;
  sub_232E6F690();
  v20 = v5;
  LOBYTE(v36[0]) = 4;
  sub_232E6F690();
  v21 = v19;
  if (v16)
  {
    v22 = (void *)objc_opt_self();
    v36[0] = 0;
    v23 = v16;
    v24 = objc_msgSend(v22, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v23, 1, v36);
    v25 = v36[0];
    if (!v24)
    {
      v29 = v25;
      sub_232E6EDF0();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v15);
    }
    v34 = v23;
    v26 = (void *)sub_232E6EE44();
    v28 = v27;

    v36[0] = v26;
    v36[1] = v28;
    v35 = 3;
    sub_232E069B0();
    sub_232E6F6A8();

    sub_232DE8D98((uint64_t)v26, (unint64_t)v28);
  }
  LOBYTE(v36[0]) = v17;
  v35 = 5;
  sub_232E0696C();
  sub_232E6F6A8();
  LOBYTE(v36[0]) = 6;
  sub_232E6F690();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v15);
}

void sub_232E06280(_QWORD *a1@<X0>, char **a2@<X8>)
{
  ActivityPresentationOptions.init(from:)(a1, a2);
}

uint64_t sub_232E06294(_QWORD *a1)
{
  return ActivityPresentationOptions.encode(to:)(a1);
}

void ActivityPresentationOptions.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  v2 = *(unsigned __int8 *)(v0 + 12);
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Destinations: ");
  v1 = swift_bridgeObjectRetain();
  MEMORY[0x2349296F8](v1, &type metadata for ActivityPresentationOptions.ActivityPresentationDestination);
  swift_bridgeObjectRelease();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F4E0();
  sub_232E6F228();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542377F8);
  sub_232E6F468();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v3[0] = 0xD00000000000001CLL;
  v3[1] = 0x8000000232E7DD60;
  __asm { BR              X9 }
}

uint64_t sub_232E06510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_232E72440;
  *(_QWORD *)(v5 + 32) = v11;
  *(_QWORD *)(v5 + 40) = v10;
  *(_QWORD *)(v5 + 48) = v9;
  *(_QWORD *)(v5 + 56) = v8;
  *(_QWORD *)(v5 + 64) = v4;
  *(_QWORD *)(v5 + 72) = v0;
  *(_QWORD *)(v5 + 80) = v2;
  *(_QWORD *)(v5 + 88) = v1;
  *(_QWORD *)(v5 + 96) = v12;
  *(_QWORD *)(v5 + 104) = v13;
  *(_QWORD *)(v5 + 112) = v3 + 9;
  *(_QWORD *)(v5 + 120) = 0x8000000232E7DD80;
  v6 = MEMORY[0x2349296F8]();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s11ActivityKit0A19PresentationOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  uint64_t result;
  id v14;
  id v15;
  char v16;
  void *v17;
  void *v18;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = *(unsigned __int8 *)(a1 + 10);
  v5 = *(unsigned __int8 *)(a1 + 11);
  v6 = *(unsigned __int8 *)(a1 + 12);
  v7 = *(unsigned __int8 *)(a2 + 8);
  v8 = *(unsigned __int8 *)(a2 + 9);
  v9 = *(unsigned __int8 *)(a2 + 10);
  v10 = *(unsigned __int8 *)(a2 + 11);
  v11 = *(unsigned __int8 *)(a2 + 12);
  v17 = *(void **)(a2 + 16);
  v18 = *(void **)(a1 + 16);
  v12 = sub_232E212DC(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if ((v12 & 1) != 0
    && ((v2 ^ v7) & 1) == 0
    && ((v3 ^ v8) & 1) == 0
    && ((v4 ^ v9) & 1) == 0
    && ((v5 ^ v10) & 1) == 0
    && v6 == v11)
  {
    if (v18)
    {
      if (v17)
      {
        sub_232DE06B4(0, &qword_255FFD7B0);
        v14 = v17;
        v15 = v18;
        v16 = sub_232E6F45C();

        if ((v16 & 1) != 0)
          return 1;
      }
    }
    else if (!v17)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_232E0679C()
{
  unint64_t result;

  result = qword_254238198;
  if (!qword_254238198)
  {
    result = MEMORY[0x23492A124](&unk_232E723E4, &type metadata for ActivityPresentationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238198);
  }
  return result;
}

unint64_t sub_232E067E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254237F10;
  if (!qword_254237F10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254237F08);
    v2 = MEMORY[0x24BEE0D38];
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254237F10);
  }
  return result;
}

unint64_t sub_232E0683C()
{
  unint64_t result;

  result = qword_254238118;
  if (!qword_254238118)
  {
    result = MEMORY[0x23492A124](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254238118);
  }
  return result;
}

unint64_t sub_232E06880()
{
  unint64_t result;

  result = qword_254237F00;
  if (!qword_254237F00)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationOptionsType, &type metadata for ActivityAuthorizationOptionsType);
    atomic_store(result, (unint64_t *)&qword_254237F00);
  }
  return result;
}

unint64_t sub_232E068C4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254237C90;
  if (!qword_254237C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254238210);
    v2 = sub_232E06928();
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254237C90);
  }
  return result;
}

unint64_t sub_232E06928()
{
  unint64_t result;

  result = qword_254237BA8;
  if (!qword_254237BA8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationOptions.ActivityPresentationDestination, &type metadata for ActivityPresentationOptions.ActivityPresentationDestination);
    atomic_store(result, (unint64_t *)&qword_254237BA8);
  }
  return result;
}

unint64_t sub_232E0696C()
{
  unint64_t result;

  result = qword_2542379D8;
  if (!qword_2542379D8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationOptionsType, &type metadata for ActivityAuthorizationOptionsType);
    atomic_store(result, (unint64_t *)&qword_2542379D8);
  }
  return result;
}

unint64_t sub_232E069B0()
{
  unint64_t result;

  result = qword_254237B98;
  if (!qword_254237B98)
  {
    result = MEMORY[0x23492A124](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254237B98);
  }
  return result;
}

unint64_t sub_232E069F8()
{
  unint64_t result;

  result = qword_255FFD7B8;
  if (!qword_255FFD7B8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationOptions.ActivityPresentationDestination, &type metadata for ActivityPresentationOptions.ActivityPresentationDestination);
    atomic_store(result, (unint64_t *)&qword_255FFD7B8);
  }
  return result;
}

unint64_t sub_232E06A40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FFD7C0;
  if (!qword_255FFD7C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254238210);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255FFD7C0);
  }
  return result;
}

void destroy for ActivityPresentationOptions(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t _s11ActivityKit27ActivityPresentationOptionsVwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ActivityPresentationOptions(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ActivityPresentationOptions(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPresentationOptions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityPresentationOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityPresentationOptions.ActivityPresentationDestination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_232E06CD4 + 4 * byte_232E720C4[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_232E06D08 + 4 * byte_232E720BF[v4]))();
}

uint64_t sub_232E06D08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E06D10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E06D18);
  return result;
}

uint64_t sub_232E06D24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E06D2CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_232E06D30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E06D38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination()
{
  return &type metadata for ActivityPresentationOptions.ActivityPresentationDestination;
}

uint64_t storeEnumTagSinglePayload for ActivityPresentationOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_232E06DA0 + 4 * byte_232E720CE[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_232E06DD4 + 4 * byte_232E720C9[v4]))();
}

uint64_t sub_232E06DD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E06DDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E06DE4);
  return result;
}

uint64_t sub_232E06DF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E06DF8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_232E06DFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E06E04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationOptions.CodingKeys()
{
  return &type metadata for ActivityPresentationOptions.CodingKeys;
}

unint64_t sub_232E06E24()
{
  unint64_t result;

  result = qword_255FFD7C8;
  if (!qword_255FFD7C8)
  {
    result = MEMORY[0x23492A124](&unk_232E723BC, &type metadata for ActivityPresentationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD7C8);
  }
  return result;
}

unint64_t sub_232E06E6C()
{
  unint64_t result;

  result = qword_2542381A8;
  if (!qword_2542381A8)
  {
    result = MEMORY[0x23492A124](&unk_232E7232C, &type metadata for ActivityPresentationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381A8);
  }
  return result;
}

unint64_t sub_232E06EB4()
{
  unint64_t result;

  result = qword_2542381A0;
  if (!qword_2542381A0)
  {
    result = MEMORY[0x23492A124](&unk_232E72354, &type metadata for ActivityPresentationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381A0);
  }
  return result;
}

uint64_t sub_232E06EF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74616E6974736564 && a2 == 0xEC000000736E6F69;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000232E7DE00 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x8000000232E7DE30 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000232E7DE60 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000232E7DE80 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000232E7DEA0 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000232E7DEC0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_232E071B8()
{
  unint64_t result;

  result = qword_254237960;
  if (!qword_254237960)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationOptions.ActivityPresentationDestination, &type metadata for ActivityPresentationOptions.ActivityPresentationDestination);
    atomic_store(result, (unint64_t *)&qword_254237960);
  }
  return result;
}

BOOL static ActivityStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ActivityStyle.hash(into:)()
{
  return sub_232E6F78C();
}

uint64_t ActivityStyle.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

unint64_t sub_232E07284()
{
  unint64_t result;

  result = qword_255FFD7D0;
  if (!qword_255FFD7D0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityStyle, &type metadata for ActivityStyle);
    atomic_store(result, (unint64_t *)&qword_255FFD7D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E07314 + 4 * byte_232E72455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E07348 + 4 * byte_232E72450[v4]))();
}

uint64_t sub_232E07348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E07350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E07358);
  return result;
}

uint64_t sub_232E07364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E0736CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E07370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E07378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityStyle()
{
  return &type metadata for ActivityStyle;
}

uint64_t XPCCodableActivityChanges.changes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_232E0739C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7365676E616863 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E07430()
{
  sub_232DEBCB8();
  return sub_232E6F7D4();
}

uint64_t sub_232E07458()
{
  sub_232DEBCB8();
  return sub_232E6F7E0();
}

unint64_t sub_232E07480()
{
  unint64_t result;

  result = qword_255FFC4F0;
  if (!qword_255FFC4F0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityChange, &type metadata for ActivityChange);
    atomic_store(result, (unint64_t *)&qword_255FFC4F0);
  }
  return result;
}

unint64_t sub_232E074C4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232DEBBB4();
  a1[2] = sub_232E074F8();
  result = sub_232E0753C();
  a1[3] = result;
  return result;
}

unint64_t sub_232E074F8()
{
  unint64_t result;

  result = qword_255FFC460;
  if (!qword_255FFC460)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for XPCCodableActivityChanges, &type metadata for XPCCodableActivityChanges);
    atomic_store(result, (unint64_t *)&qword_255FFC460);
  }
  return result;
}

unint64_t sub_232E0753C()
{
  unint64_t result;

  result = qword_255FFC468;
  if (!qword_255FFC468)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for XPCCodableActivityChanges, &type metadata for XPCCodableActivityChanges);
    atomic_store(result, (unint64_t *)&qword_255FFC468);
  }
  return result;
}

uint64_t sub_232E07580()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E074F8();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t storeEnumTagSinglePayload for XPCCodableActivityChanges.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E07684 + 4 * byte_232E724F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E076A4 + 4 * byte_232E724F5[v4]))();
}

_BYTE *sub_232E07684(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E076A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E076AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E076B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E076BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E076C4(_DWORD *result)
{
  *result = 0;
  return result;
}

unint64_t sub_232E076D4()
{
  unint64_t result;

  result = qword_255FFD7D8;
  if (!qword_255FFD7D8)
  {
    result = MEMORY[0x23492A124](&unk_232E72678, &type metadata for XPCCodableActivityChanges.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD7D8);
  }
  return result;
}

unint64_t static ActivityError.errorDomain.getter()
{
  return 0xD000000000000015;
}

uint64_t ActivityError.errorCode.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 >= 3)
    return 1004;
  else
    return v1 + 1001;
}

unint64_t ActivityError.failureReason.getter()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;

  if (v0[1] < 3uLL)
    return 0;
  v2 = v0[2];
  v3 = v0[3];
  sub_232DDFFD4(v2, v3);
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  sub_232E6F210();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_232DDDF74(v2, v3);
  }
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  sub_232E6F228();
  return 0xD000000000000016;
}

unint64_t ActivityError.errorDescription.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = 0xD000000000000017;
  v2 = *(_QWORD *)(v0 + 8);
  if (v2)
    v1 = 0xD000000000000020;
  if (v2 == 1)
    v1 = 0xD000000000000021;
  if (v2 == 2)
    return 0xD00000000000001BLL;
  else
    return v1;
}

unint64_t sub_232E07940()
{
  return 0xD000000000000015;
}

uint64_t sub_232E0795C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 >= 3)
    return 1004;
  else
    return v1 + 1001;
}

uint64_t sub_232E07980()
{
  sub_232E08008();
  return sub_232E6F72C();
}

uint64_t sub_232E079A8()
{
  sub_232E08008();
  return sub_232E6F720();
}

uint64_t initializeBufferWithCopyOfBuffer for SceneTarget(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

unint64_t destroy for ActivityError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ActivityError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      v6 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v10;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ActivityError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v5 = (_OWORD *)(a1 + 16);
      v6 = (_OWORD *)(a2 + 16);
      v7 = *(_QWORD *)(a2 + 24);
      if (*(_QWORD *)(a1 + 24))
      {
        if (v7)
        {
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
          *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
          *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
          *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_232E07D88(a1 + 16);
          v14 = *(_QWORD *)(a2 + 48);
          v15 = *(_OWORD *)(a2 + 32);
          *v5 = *v6;
          *(_OWORD *)(a1 + 32) = v15;
          *(_QWORD *)(a1 + 48) = v14;
        }
      }
      else if (v7)
      {
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
        *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
        *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v16 = *v6;
        v17 = *(_OWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *v5 = v16;
        *(_OWORD *)(a1 + 32) = v17;
      }
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v9 = *(_OWORD *)(a2 + 16);
    v10 = *(_OWORD *)(a2 + 32);
    v11 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
    goto LABEL_12;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
    *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
    *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 16);
    v13 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v12;
    *(_OWORD *)(a1 + 32) = v13;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_232E07D88(uint64_t a1)
{
  destroy for ProcessDescriptor();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ActivityError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 24))
      {
        v5 = *(_QWORD *)(a2 + 24);
        if (v5)
        {
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = v5;
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
          *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
          *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
          *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
          v6 = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = v6;
          swift_bridgeObjectRelease();
LABEL_12:
          v10 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = v10;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_232E07D88(a1 + 16);
      }
      v9 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_232E07FAC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_232E07FC4(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityError()
{
  return &type metadata for ActivityError;
}

unint64_t sub_232E08008()
{
  unint64_t result;

  result = qword_255FFB650;
  if (!qword_255FFB650)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityError, &type metadata for ActivityError);
    atomic_store(result, (unint64_t *)&qword_255FFB650);
  }
  return result;
}

uint64_t MockPushError.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_232E08080 + 4 * byte_232E727E8[*v0]))(0xD000000000000024, 0x8000000232E7E0B0);
}

uint64_t sub_232E08080(uint64_t a1)
{
  return a1 + 4;
}

uint64_t MockPushError.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_232E080FC + 4 * byte_232E727ED[*v0]))(0xD000000000000024, 0x8000000232E7E0B0);
}

uint64_t sub_232E080FC(uint64_t a1)
{
  return a1 + 4;
}

BOOL static MockPushError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MockPushError.hash(into:)()
{
  return sub_232E6F78C();
}

uint64_t MockPushError.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

unint64_t sub_232E081C8()
{
  unint64_t result;

  result = qword_255FFD7E0;
  if (!qword_255FFD7E0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for MockPushError, &type metadata for MockPushError);
    atomic_store(result, (unint64_t *)&qword_255FFD7E0);
  }
  return result;
}

unint64_t sub_232E08210()
{
  unint64_t result;

  result = qword_255FFD7E8;
  if (!qword_255FFD7E8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for MockPushError, &type metadata for MockPushError);
    atomic_store(result, (unint64_t *)&qword_255FFD7E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MockPushError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MockPushError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_232E08334 + 4 * byte_232E727F7[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_232E08368 + 4 * byte_232E727F2[v4]))();
}

uint64_t sub_232E08368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E08370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E08378);
  return result;
}

uint64_t sub_232E08384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E0838CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_232E08390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E08398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MockPushError()
{
  return &type metadata for MockPushError;
}

uint64_t sub_232E083B8()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFC850);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC850);
  return sub_232E6EF1C();
}

uint64_t sub_232E0842C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  v2 = *(unsigned __int8 *)(v0 + 32);
  os_unfair_lock_unlock(v1);
  swift_release();
  return v2;
}

uint64_t Watchdog.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  type metadata accessor for UnfairLock();
  v1 = swift_allocObject();
  v2 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = 0;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 0;
  return v0;
}

uint64_t Watchdog.init()()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;

  *(_QWORD *)(v0 + 16) = 0;
  type metadata accessor for UnfairLock();
  v1 = swift_allocObject();
  v2 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = 0;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 0;
  return v0;
}

uint64_t sub_232E08538(uint64_t a1, uint64_t (*a2)(uint64_t), double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  os_unfair_lock_s *v12;

  v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v6 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_232E08618(a1, a5, a6, a3);
  os_unfair_lock_unlock(v12);
  swift_release();
  return a2(v6);
}

uint64_t sub_232E085D0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_232E08C54();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

void sub_232E08618(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t ObjectType;
  char *v41;
  void (*v42)(char *, uint64_t);
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char *v64;
  _QWORD aBlock[7];

  v5 = v4;
  v57 = a3;
  v54 = a1;
  v55 = a2;
  v7 = sub_232E6F0D8();
  v61 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v60 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_232E6F108();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_232E6F120();
  v51 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v64 = (char *)&v48 - v15;
  v63 = sub_232E6F0CC();
  v53 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v52 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v48 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v62 = (uint64_t *)((char *)&v48 - v21);
  v22 = sub_232E6F3FC();
  v50 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v4 + 24) + 16));
  if (qword_255FFC848 != -1)
    swift_once();
  v25 = sub_232E6EF28();
  __swift_project_value_buffer(v25, (uint64_t)qword_255FFC850);
  v26 = sub_232E6EF10();
  v27 = sub_232E6F390();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v28 = 134349056;
    *(double *)aBlock = a4;
    sub_232E6F480();
    _os_log_impl(&dword_232DDB000, v26, v27, "Watchdog will fire in %{public}fs", v28, 0xCu);
    MEMORY[0x23492A1F0](v28, -1, -1);
  }

  v29 = a4 * 1000000.0;
  if ((~COERCE__INT64(a4 * 1000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v49 = v7;
  v30 = v5;
  v31 = v11;
  if ((uint64_t)v29 >= 0x7FFFFFFF)
    v32 = 0x7FFFFFFFLL;
  else
    v32 = (uint64_t)v29;
  sub_232E04D84();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232E04DC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254236920);
  sub_232E04E08();
  sub_232E6F4A4();
  v33 = sub_232E6F408();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v22);
  v34 = v62;
  v35 = v63;
  *v62 = v32;
  v36 = v31;
  v37 = v53;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v53 + 104))(v34, *MEMORY[0x24BEE5408], v35);
  sub_232E6F114();
  v38 = v64;
  MEMORY[0x23492956C](v13, v34);
  v39 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54 = v36;
  v39(v13, v36);
  ObjectType = swift_getObjectType();
  sub_232E643AC((uint64_t)v19);
  v41 = v52;
  sub_232E643F0(v52);
  MEMORY[0x234929878](v38, v19, v41, ObjectType);
  v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v41, v35);
  v42(v19, v35);
  v43 = (_QWORD *)swift_allocObject();
  v44 = v55;
  v43[2] = v30;
  v43[3] = v44;
  v43[4] = v57;
  aBlock[4] = sub_232E08F40;
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDE158;
  aBlock[3] = &block_descriptor_3;
  v45 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v46 = v56;
  sub_232E64438();
  v47 = v60;
  sub_232E6443C();
  sub_232E6F414();
  _Block_release(v45);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v49);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v59);
  swift_release();
  *(_QWORD *)(v30 + 16) = v33;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (*(_QWORD *)(v30 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_232E6F42C();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  v39(v64, v54);
  v42((char *)v62, v63);
}

uint64_t sub_232E08BE0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  *(_BYTE *)(a1 + 32) = 1;
  sub_232E08C54();
  os_unfair_lock_unlock(v4);
  swift_release();
  return a2(a1);
}

void sub_232E08C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 24) + 16));
  if (*(_QWORD *)(v0 + 16))
  {
    if (qword_255FFC848 != -1)
      swift_once();
    v2 = sub_232E6EF28();
    __swift_project_value_buffer(v2, (uint64_t)qword_255FFC850);
    v3 = sub_232E6EF10();
    v4 = sub_232E6F390();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_232DDB000, v3, v4, "Cancelling watchdog", v5, 2u);
      MEMORY[0x23492A1F0](v5, -1, -1);
    }

    if (*(_QWORD *)(v1 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_232E6F420();
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v1 + 16) = 0;
    swift_unknownObjectRelease();
  }
}

uint64_t Watchdog.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t Watchdog.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s11ActivityKit8WatchdogC7execute6within2on6action4elseySd_So17OS_dispatch_queueCyACXEyACctFZ_0(uint64_t a1, void (*a2)(uint64_t), double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;

  type metadata accessor for Watchdog();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (os_unfair_lock_s *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v13;
  v13->_os_unfair_lock_opaque = 0;
  *(_QWORD *)(v11 + 24) = v12;
  *(_BYTE *)(v11 + 32) = 0;
  swift_retain();
  os_unfair_lock_lock(v13);
  sub_232E08618(a1, a5, a6, a3);
  os_unfair_lock_unlock(v13);
  swift_release();
  a2(v11);
  return swift_release();
}

uint64_t type metadata accessor for Watchdog()
{
  return objc_opt_self();
}

uint64_t method lookup function for Watchdog()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Watchdog.isExpired.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Watchdog.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of Watchdog.execute(within:on:action:else:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Watchdog.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t sub_232E08F14()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E08F40()
{
  uint64_t v0;

  return sub_232E08BE0(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t ActivityProminences.prominentActivityIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

ActivityKit::ActivityProminences __swiftcall ActivityProminences.init(prominentActivityIdentifiers:)(ActivityKit::ActivityProminences prominentActivityIdentifiers)
{
  ActivityKit::ActivityProminences *v1;

  v1->prominentActivityIdentifiers._rawValue = prominentActivityIdentifiers.prominentActivityIdentifiers._rawValue;
  return prominentActivityIdentifiers;
}

unint64_t sub_232E08F5C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_232E08F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E09664(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_232E08FA0()
{
  sub_232E09110();
  return sub_232E6F7D4();
}

uint64_t sub_232E08FC8()
{
  sub_232E09110();
  return sub_232E6F7E0();
}

uint64_t ActivityProminences.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB580);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E09110();
  sub_232E6F7C8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
  sub_232E09294(&qword_254236860, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_232E09110()
{
  unint64_t result;

  result = qword_254236808;
  if (!qword_254236808)
  {
    result = MEMORY[0x23492A124](&unk_232E72B18, &type metadata for ActivityProminences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254236808);
  }
  return result;
}

uint64_t ActivityProminences.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB490);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E09110();
  sub_232E6F7BC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
    sub_232E09294((unint64_t *)&qword_254237F10, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232E09294(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254237F08);
    v8 = a2;
    result = MEMORY[0x23492A124](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232E092F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActivityProminences.init(from:)(a1, a2);
}

uint64_t sub_232E09308(_QWORD *a1)
{
  return ActivityProminences.encode(to:)(a1);
}

unint64_t sub_232E0931C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232E09350();
  a1[2] = sub_232E09394();
  result = sub_232E093D8();
  a1[3] = result;
  return result;
}

unint64_t sub_232E09350()
{
  unint64_t result;

  result = qword_254236820;
  if (!qword_254236820)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProminences, &type metadata for ActivityProminences);
    atomic_store(result, (unint64_t *)&qword_254236820);
  }
  return result;
}

unint64_t sub_232E09394()
{
  unint64_t result;

  result = qword_255FFB548;
  if (!qword_255FFB548)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProminences, &type metadata for ActivityProminences);
    atomic_store(result, (unint64_t *)&qword_255FFB548);
  }
  return result;
}

unint64_t sub_232E093D8()
{
  unint64_t result;

  result = qword_255FFB550;
  if (!qword_255FFB550)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProminences, &type metadata for ActivityProminences);
    atomic_store(result, (unint64_t *)&qword_255FFB550);
  }
  return result;
}

uint64_t sub_232E0941C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E09394();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

ValueMetadata *type metadata accessor for ActivityProminences()
{
  return &type metadata for ActivityProminences;
}

uint64_t storeEnumTagSinglePayload for ActivityProminences.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E09530 + 4 * byte_232E72970[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E09550 + 4 * byte_232E72975[v4]))();
}

_BYTE *sub_232E09530(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E09550(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E09558(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E09560(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E09568(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E09570(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityProminences.CodingKeys()
{
  return &type metadata for ActivityProminences.CodingKeys;
}

unint64_t sub_232E09590()
{
  unint64_t result;

  result = qword_255FFD7F0;
  if (!qword_255FFD7F0)
  {
    result = MEMORY[0x23492A124](&unk_232E72AF0, &type metadata for ActivityProminences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD7F0);
  }
  return result;
}

unint64_t sub_232E095D8()
{
  unint64_t result;

  result = qword_254236818;
  if (!qword_254236818)
  {
    result = MEMORY[0x23492A124](&unk_232E72A60, &type metadata for ActivityProminences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254236818);
  }
  return result;
}

unint64_t sub_232E09620()
{
  unint64_t result;

  result = qword_254236810;
  if (!qword_254236810)
  {
    result = MEMORY[0x23492A124](&unk_232E72A88, &type metadata for ActivityProminences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254236810);
  }
  return result;
}

uint64_t sub_232E09664(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000232E7E120)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_232E096E8()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFBE70);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFBE70);
  return sub_232E6EF1C();
}

id sub_232E09768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  if (qword_255FFB348 != -1)
    swift_once();
  v6 = (void *)qword_255FFB410;
  v7 = (void *)sub_232E6F1E0();
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_232DFAF90;
  v11[3] = &block_descriptor_4;
  v8 = _Block_copy(v11);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v6, sel_listenForActivityProminenceWithActivityIdentifier_handler_, v7, v8);
  _Block_release(v8);

  return v9;
}

uint64_t sub_232E099CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (qword_255FFB348 != -1)
    a1 = swift_once();
  MEMORY[0x24BDAC7A8](a1);
  sub_232E6EF64();
  result = sub_232E6F3D8();
  if (!v1)
    return v3;
  return result;
}

id ActivityProminenceObservationClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ActivityProminenceObservationClient.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityProminenceObservationClient();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ActivityProminenceObservationClient.__deallocating_deinit(uint64_t a1)
{
  return sub_232DFC954(a1, type metadata accessor for ActivityProminenceObservationClient);
}

id sub_232E09B40()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)_s11ActivityKit9SingletonCMa_2()), sel_init);
  qword_255FFB410 = (uint64_t)result;
  return result;
}

uint64_t sub_232E09BB0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  objc_class *v12;
  char *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t result;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];
  objc_super v24;

  v22 = sub_232E6F3C0();
  v1 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6F3A8();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v6);
  v21 = OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue;
  v20[0] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v7 = v0;
  sub_232E6F0E4();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8((unint64_t *)&qword_254238620, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v22);
  *(_QWORD *)(v20[1] + v21) = sub_232E6F3F0();
  v8 = OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_connection;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_connection] = 0;
  *(_DWORD *)&v7[OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_serverStartupToken] = -1;
  v9 = OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton__prominencePublisher;
  v10 = MEMORY[0x24BEE4AF8];
  aBlock[0] = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB468);
  swift_allocObject();
  *(_QWORD *)&v7[v9] = sub_232E6F000();
  *(_QWORD *)&v7[OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton__queue_prominentActivityIdentifiers] = v10;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton__queue_predicates] = v10;
  v11 = *(void **)&v7[v8];
  *(_QWORD *)&v7[v8] = 0;

  v12 = (objc_class *)_s11ActivityKit9SingletonCMa_2();
  v24.receiver = v7;
  v24.super_class = v12;
  v13 = (char *)objc_msgSendSuper2(&v24, sel_init);
  v14 = *(NSObject **)&v13[OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_232E0C37C;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_232DDD4AC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_37_0;
  v17 = _Block_copy(aBlock);
  v18 = v13;
  swift_retain();
  swift_release();
  dispatch_sync(v14, v17);

  _Block_release(v17);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v14 & 1) == 0)
    return (uint64_t)v18;
  __break(1u);
  return result;
}

void sub_232E09F68()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x24BEE5610], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232E0C2FC();
    v10 = (void *)sub_232E6F438();
    if (v10)
    {
      v11 = *(void **)&v1[v9];
      *(_QWORD *)&v1[v9] = v10;
      v12 = v10;

      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v1;
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = sub_232E0C364;
      *(_QWORD *)(v14 + 24) = v13;
      aBlock[4] = sub_232DE068C;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_19_1;
      v15 = _Block_copy(aBlock);
      v1;
      swift_retain();
      swift_release();
      objc_msgSend(v12, sel_configureConnection_, v15);
      _Block_release(v15);
      LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v15 & 1) == 0)
      {
        sub_232E0A654();
        swift_release();

        return;
      }
LABEL_8:
      __break(1u);
    }
  }
}

void sub_232E0A190(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256012150);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256013990);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue));
  v18 = sub_232E0A414;
  v19 = 0;
  v10 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_22_1;
  v11 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v18 = sub_232E0A420;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_25_0;
  v12 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  v18 = sub_232E0A42C;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_28_0;
  v13 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInvalidationHandler_, v13);
  _Block_release(v13);

}

void sub_232E0A414(uint64_t a1)
{
  sub_232E0A438(a1, "Prominence observation service: activated");
}

void sub_232E0A420(uint64_t a1)
{
  sub_232E0A438(a1, "Prominence observation service: interrupted");
}

void sub_232E0A42C(uint64_t a1)
{
  sub_232E0A438(a1, "Prominence observation service: invalidated");
}

void sub_232E0A438(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_255FFB670 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_255FFBE70);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232E0A50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _OWORD v10[2];

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    sub_232E09F68();
    v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_connection);
    if (v8)
    {
      v9 = v8;
      if (objc_msgSend(v9, sel_remoteTarget))
      {
        sub_232E6F498();

        swift_unknownObjectRelease();
        sub_232DDD798((uint64_t)v10, &qword_2542382E8);
      }
      else
      {
        memset(v10, 0, sizeof(v10));
        sub_232DDD798((uint64_t)v10, &qword_2542382E8);
        objc_msgSend(v9, sel_activate);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_232E0A654()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232E0C2F4;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_10_1;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_255FFB670 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_255FFBE70);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232E0A828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232E0AE70();

  }
}

uint64_t sub_232E0A878()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue);
  *v5 = v6;
  (*((void (**)(_QWORD *, _QWORD, NSObject *, double))isa + 13))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*((void (**)(_QWORD *, NSObject *))isa + 1))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232E0A50C();
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_connection);
  if (!v8)
  {
    if (qword_255FFB670 != -1)
      swift_once();
    v9 = sub_232E6EF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_255FFBE70);
    v1 = sub_232E6EF10();
    v10 = sub_232E6F384();
    if (os_log_type_enabled(v1, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_232DDB000, v1, v10, "ActivityProminenceObservationClient: Failed to establish a connection", v11, 2u);
      MEMORY[0x23492A1F0](v11, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v8;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_232DE9CF0((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB488);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v17[1];
    }
  }
  else
  {
    sub_232DDD798((uint64_t)v19, &qword_2542382E8);
  }
  if (qword_255FFB670 != -1)
    goto LABEL_20;
LABEL_15:
  v13 = sub_232E6EF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_255FFBE70);
  v14 = sub_232E6EF10();
  v15 = sub_232E6F384();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_232DDB000, v14, v15, "ActivityProminenceObservationClient: Failed to cast connection to server interface protocol", v16, 2u);
    MEMORY[0x23492A1F0](v16, -1, -1);
  }

LABEL_18:
  return 0;
}

uint64_t sub_232E0AB48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v36[3];
  _QWORD v37[5];

  v2 = v1;
  v37[4] = *MEMORY[0x24BDAC8D0];
  v4 = sub_232E6F12C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (id *)((char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue);
  v10 = *a1;
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x24BEE5610], v4, v6);
  v11 = v9;
  LOBYTE(v9) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
    __break(1u);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton__queue_predicates);
  swift_beginAccess();
  v13 = *v12;
  swift_bridgeObjectRetain();
  v14 = sub_232E5BBA8(v10, v13);
  v16 = v15;
  result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    swift_beginAccess();
    sub_232E5BDC0(v14, v37);
    swift_endAccess();
    swift_bridgeObjectRelease();
    result = sub_232E0A878();
    if (result)
    {
      v18 = (void *)result;
      v19 = *v12;
      v20 = (id)MEMORY[0x24BEE4AF8];
      v36[0] = (id)MEMORY[0x24BEE4AF8];
      v21 = *(_QWORD *)(v19 + 16);
      if (v21)
      {
        swift_bridgeObjectRetain();
        v22 = 0;
        while (*(_QWORD *)(v19 + 8 * v22 + 32))
        {
          ++v22;
          v23 = swift_bridgeObjectRetain();
          sub_232E5BEAC(v23);
          if (v21 == v22)
          {
            swift_bridgeObjectRelease();
            v20 = v36[0];
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = 0;
      }
LABEL_10:
      v36[0] = v20;
      sub_232E6EDD8();
      swift_allocObject();
      sub_232E6EDCC();
      sub_232E0C28C();
      v24 = sub_232E6EDC0();
      v26 = v25;
      v27 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v24, v26);
      swift_release();
      swift_bridgeObjectRelease();
      v28 = sub_232E6EE44();
      v30 = v29;

      v31 = (void *)sub_232E6EE2C();
      v36[0] = 0;
      LOBYTE(v24) = objc_msgSend(v18, sel_subscribeToActivityProminenceMatchingPredicate_error_, v31, v36);

      if ((v24 & 1) != 0)
      {
        v32 = v36[0];
        sub_232DE8D98(v28, v30);
      }
      else
      {
        v33 = v36[0];
        v34 = (void *)sub_232E6EDF0();

        swift_willThrow();
        sub_232DE8D98(v28, v30);

      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_232E0AE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v29[5];

  v29[4] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (id *)((char *)&v29[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  v8 = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
    __break(1u);
  result = sub_232E0A878(v8);
  if (result)
  {
    v10 = (void *)result;
    v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton__queue_predicates);
    swift_beginAccess();
    v12 = *v11;
    v13 = (id)MEMORY[0x24BEE4AF8];
    v29[0] = (id)MEMORY[0x24BEE4AF8];
    v14 = *(_QWORD *)(v12 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = 0;
      while (*(_QWORD *)(v12 + 8 * v15 + 32))
      {
        ++v15;
        v16 = swift_bridgeObjectRetain();
        sub_232E5BEAC(v16);
        if (v14 == v15)
        {
          swift_bridgeObjectRelease();
          v13 = v29[0];
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = 0;
    }
LABEL_9:
    v29[0] = v13;
    sub_232E6EDD8();
    swift_allocObject();
    sub_232E6EDCC();
    sub_232E0C28C();
    v17 = sub_232E6EDC0();
    v19 = v18;
    v20 = (void *)sub_232E6EE2C();
    sub_232DE8D98(v17, v19);
    swift_release();
    swift_bridgeObjectRelease();
    v21 = sub_232E6EE44();
    v23 = v22;

    v24 = (void *)sub_232E6EE2C();
    v29[0] = 0;
    LOBYTE(v17) = objc_msgSend(v10, sel_subscribeToActivityProminenceMatchingPredicate_error_, v24, v29);

    if ((v17 & 1) != 0)
    {
      v25 = v29[0];
      sub_232DE8D98(v21, v23);
    }
    else
    {
      v26 = v29[0];
      v27 = (void *)sub_232E6EDF0();

      swift_willThrow();
      sub_232DE8D98(v21, v23);

    }
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_232E0B124()
{
  return sub_232DFC954(0, _s11ActivityKit9SingletonCMa_2);
}

id sub_232E0B19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  id v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  char *v14;
  id v15;
  objc_super v17;
  uint64_t v18;

  type metadata accessor for RetryingCancellable();
  v9 = swift_allocObject();
  v10 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  v11 = sub_232E64568(0, 1, v9, v10, a1, a2, a3, a4);
  v12 = (objc_class *)type metadata accessor for CancellableAssertion();
  v13 = objc_allocWithZone(v12);
  v18 = v11;
  sub_232E6EF64();
  swift_allocObject();
  sub_232DDDAD8(&qword_255FFBE60, (uint64_t (*)(uint64_t))type metadata accessor for RetryingCancellable, (uint64_t)&unk_232E7B8B0);
  swift_retain();
  v14 = (char *)v13;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11ActivityKit20CancellableAssertion_token] = sub_232E6EF70();

  v17.receiver = v14;
  v17.super_class = v12;
  v15 = objc_msgSendSuper2(&v17, sel_init);
  swift_release();
  return v15;
}

uint64_t sub_232E0B2F0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  objc_class *v12;
  id v13;
  char *v14;
  id v15;
  uint64_t result;
  objc_super v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_232E70DA0;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  sub_232E6EF64();
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_232E6F3D8();
  swift_release();
  swift_bridgeObjectRelease();
  v12 = (objc_class *)type metadata accessor for CancellableAssertion();
  v13 = objc_allocWithZone(v12);
  swift_allocObject();
  swift_retain();
  v14 = (char *)v13;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11ActivityKit20CancellableAssertion_token] = sub_232E6EF70();

  v17.receiver = v14;
  v17.super_class = v12;
  v15 = objc_msgSendSuper2(&v17, sel_init);
  a5[3] = v12;
  a5[4] = sub_232DDDAD8(&qword_255FFBE68, (uint64_t (*)(uint64_t))type metadata accessor for CancellableAssertion, (uint64_t)&protocol conformance descriptor for CancellableAssertion);
  result = swift_release();
  *a5 = v15;
  return result;
}

uint64_t sub_232E0B4DC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  BOOL v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t i;
  uint64_t v13;
  BOOL v14;

  v5 = a1[2];
  if (!v5)
    goto LABEL_9;
  v9 = a1[4] == a2 && a1[5] == a3;
  if (v9 || (result = sub_232E6F6E4(), (result & 1) != 0))
  {
LABEL_7:
    result = 1;
    return a4(result);
  }
  if (v5 == 1)
  {
LABEL_9:
    result = 0;
    return a4(result);
  }
  v11 = a1 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1) == a2 && *v11 == a3;
    if (v14 || (sub_232E6F6E4() & 1) != 0)
      goto LABEL_7;
    result = 0;
    v11 += 2;
    if (v13 == v5)
      return a4(result);
  }
  __break(1u);
  return result;
}

uint64_t sub_232E0B65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  _QWORD **v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  id v66;
  id v67[5];

  v65 = a3;
  v67[4] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AE0);
  MEMORY[0x24BDAC7A8](v10);
  v64 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB440);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)sub_232E0A878();
  if (v16)
  {
    v58 = a4;
    v59 = v13;
    v63 = v16;
    v17 = (_QWORD **)(a1 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton__queue_predicates);
    swift_beginAccess();
    v18 = *v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v60 = v12;
    v61 = a5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_232E10278(0, v18[2] + 1, 1, v18);
    v21 = v18[2];
    v20 = v18[3];
    v22 = v21 + 1;
    if (v21 >= v20 >> 1)
      v18 = sub_232E10278((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
    v18[2] = v22;
    v18[v21 + 4] = a2;
    v67[0] = (id)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    v23 = 0;
    v56 = a2;
    v57 = v15;
    while (v18[v23 + 4])
    {
      ++v23;
      v24 = swift_bridgeObjectRetain();
      sub_232E5BEAC(v24);
      if (v22 == v23)
      {
        swift_bridgeObjectRelease();
        v25 = v67[0];
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = 0;
LABEL_12:
    v67[0] = v25;
    sub_232E6EDD8();
    swift_allocObject();
    sub_232E6EDCC();
    sub_232E0C28C();
    v28 = sub_232E6EDC0();
    if (v5)
    {
      result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      v30 = v28;
      v31 = v29;
      v32 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v30, v31);
      swift_release();
      swift_bridgeObjectRelease();
      v33 = sub_232E6EE44();
      v35 = v34;

      v62 = v33;
      v36 = (void *)sub_232E6EE2C();
      v67[0] = 0;
      LOBYTE(v31) = objc_msgSend(v63, sel_subscribeToActivityProminenceMatchingPredicate_error_, v36, v67);

      v37 = v67[0];
      if ((v31 & 1) != 0)
      {
        *v17 = v18;
        v38 = v37;
        swift_bridgeObjectRelease();
        v39 = *(void **)(a1
                       + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton__prominencePublisher);
        v66 = *(id *)(a1 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue);
        v40 = v66;
        v67[0] = v39;
        v41 = sub_232E6F3B4();
        v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
        v55 = v35;
        v43 = (uint64_t)v64;
        v42(v64, 1, 1, v41);
        swift_retain();
        v44 = v40;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB468);
        sub_232DE06B4(0, (unint64_t *)&qword_254238480);
        sub_232DDF49C(&qword_255FFB460, &qword_255FFB468, MEMORY[0x24BDB9D10]);
        sub_232DFDA08();
        v45 = v57;
        sub_232E6F084();
        sub_232DDD798(v43, &qword_254237AE0);

        swift_release();
        v46 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v47 = swift_allocObject();
        v48 = v56;
        *(_QWORD *)(v47 + 16) = v46;
        *(_QWORD *)(v47 + 24) = v48;
        v49 = (_QWORD *)swift_allocObject();
        v50 = v65;
        v49[2] = v48;
        v49[3] = v50;
        v49[4] = v58;
        sub_232DDF49C(&qword_255FFB438, &qword_255FFB440, MEMORY[0x24BDB9A08]);
        swift_bridgeObjectRetain_n();
        swift_retain();
        v51 = v60;
        v52 = sub_232E6F054();
        sub_232DE8D98(v62, v55);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v45, v51);
        *v61 = v52;
      }
      else
      {
        v53 = v67[0];
        swift_bridgeObjectRelease();
        sub_232E6EDF0();

        swift_willThrow();
        sub_232DE8D98(v62, v35);
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    sub_232DF9980();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_232E70D00;
    *(_OWORD *)(v26 + 16) = 0u;
    *(_OWORD *)(v26 + 32) = 0u;
    *(_OWORD *)(v26 + 48) = 0u;
    *(_QWORD *)(v26 + 64) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_232E0BBF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_232E0B65C(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t type metadata accessor for ActivityProminenceObservationClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for ActivityProminenceObservationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityProminenceObservationClient.listenForActivityProminence(activityIdentifier:handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x50))();
}

uint64_t dispatch thunk of ActivityProminenceObservationClient.subscribeToActivityProminence(matching:handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t _s11ActivityKit9SingletonCMa_2()
{
  return objc_opt_self();
}

void sub_232E0BCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x23492A28C](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = a3;
    sub_232E0AB48(&v7);

  }
}

uint64_t sub_232E0BD00(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRetain();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_232E0BE18(v5, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a3(v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E0BE18(uint64_t result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v22 = result + 32;
    v20 = a2 + 9;
    v21 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v4 <= v2)
        v5 = v2;
      else
        v5 = v4;
      v23 = v5;
      while (1)
      {
        if (v4 == v23)
          goto LABEL_39;
        v6 = (uint64_t *)(v22 + 16 * v4);
        v7 = *v6;
        v8 = v6[1];
        ++v4;
        if (!a2)
          break;
        v9 = a2[2];
        if (!v9)
          goto LABEL_7;
        if (a2[4] == v7 && a2[5] == v8)
          break;
        result = sub_232E6F6E4();
        if ((result & 1) != 0)
          break;
        if (v9 != 1)
        {
          if (a2[6] == v7 && a2[7] == v8)
            break;
          result = sub_232E6F6E4();
          if ((result & 1) != 0)
            break;
          if (v9 != 2)
          {
            v11 = v20;
            v12 = 2;
            while (1)
            {
              v13 = v12 + 1;
              if (__OFADD__(v12, 1))
                break;
              if (*(v11 - 1) == v7 && *v11 == v8)
                goto LABEL_30;
              result = sub_232E6F6E4();
              if ((result & 1) != 0)
                goto LABEL_30;
              v11 += 2;
              ++v12;
              if (v13 == v9)
                goto LABEL_7;
            }
            __break(1u);
LABEL_39:
            __break(1u);
            return result;
          }
        }
LABEL_7:
        if (v4 == v2)
          return v21;
      }
LABEL_30:
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      v15 = v21;
      if ((result & 1) == 0)
      {
        result = sub_232E52648(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v15 = v21;
      }
      v16 = v15;
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      if (v18 >= v17 >> 1)
      {
        result = sub_232E52648(v17 > 1, v18 + 1, 1);
        v16 = v21;
      }
      *(_QWORD *)(v16 + 16) = v18 + 1;
      v21 = v16;
      v19 = v16 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v7;
      *(_QWORD *)(v19 + 40) = v8;
      if (v4 == v2)
        return v21;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_232E0C014(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_232E6F12C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)sub_232E6EE2C();
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v11 = sub_232E6EE44();
  v13 = v12;
  sub_232E09350();
  sub_232E6ED9C();
  sub_232DE8D98(v11, v13);
  swift_release();
  v14 = v19;
  if (v19)
  {

    v15 = *(void **)(a3 + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton_queue);
    *v9 = v15;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
    v16 = v15;
    LOBYTE(v15) = sub_232E6F144();
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v15 & 1) != 0)
    {
      *(_QWORD *)(a3
                + OBJC_IVAR____TtC11ActivityKitP33_53EEA475F928A92791709C064B1A8B959Singleton__queue_prominentActivityIdentifiers) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19 = v14;
      swift_bridgeObjectRetain();
      sub_232E6EFD0();
      swift_bridgeObjectRelease();
      a4[2](a4, 0);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  _Block_release(a4);
  __break(1u);
  _Block_release(a4);
  sub_232DE8D98(v11, v13);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E0C21C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_232E0C240(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_232E0C254()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E0C280(_QWORD *a1)
{
  uint64_t v1;

  return sub_232E0B4DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

unint64_t sub_232E0C28C()
{
  unint64_t result;

  result = qword_254236800;
  if (!qword_254236800)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProminencePredicate, &type metadata for ActivityProminencePredicate);
    atomic_store(result, (unint64_t *)&qword_254236800);
  }
  return result;
}

uint64_t sub_232E0C2D0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232E0C2F4(uint64_t a1)
{
  uint64_t v1;

  sub_232E0A828(a1, v1);
}

unint64_t sub_232E0C2FC()
{
  unint64_t result;

  result = qword_255FFB400;
  if (!qword_255FFB400)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProminenceObservationServiceDefinition, &type metadata for ActivityProminenceObservationServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_255FFB400);
  }
  return result;
}

uint64_t sub_232E0C340()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232E0C364(void *a1)
{
  uint64_t v1;

  sub_232E0A190(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232E0C36C()
{
  return swift_deallocObject();
}

void sub_232E0C37C()
{
  sub_232E0A50C();
}

uint64_t sub_232E0C39C()
{
  return swift_deallocObject();
}

uint64_t sub_232E0C3AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_232E0C3D8(uint64_t a1)
{
  uint64_t v1;

  sub_232E0BCA4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_232E0C3E0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E0C40C(uint64_t a1)
{
  uint64_t v1;

  return sub_232E0BD00(a1, *(_QWORD **)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_232E0C430@<X0>(uint64_t *a1@<X8>)
{
  return sub_232E0BBF4(a1);
}

uint64_t sub_232E0C460()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    swift_retain();
    v1 = sub_232DFF5C8();
    swift_release();
    *(_QWORD *)(v0 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_232E0C4D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_232E0C4E4(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_232E0C460();
  return sub_232E0C518;
}

uint64_t sub_232E0C518(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 16) = *a1;
  return swift_release();
}

uint64_t sub_232E0C528()
{
  uint64_t v0;
  _QWORD *v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD **)(v0 + 80);
  v2 = *(os_unfair_lock_s **)(v1[2] + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = v1[10];
  sub_232DF9AE8(v3, v1[11]);
  os_unfair_lock_unlock(v2);
  swift_release();
  swift_release();
  return v3;
}

uint64_t static ActivityManager.shared.getter()
{
  if (qword_254238460 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_232E0C5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  uint64_t v13;
  _BYTE v15[16];
  id v16;
  uint64_t v17;
  char v18;

  v5 = v3;
  v9 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(id *)(v3 + 24);
  v17 = a1;
  v12 = v16;
  sub_232E6F3D8();

  if (!v4)
  {
    v13 = a1 + *(int *)(type metadata accessor for ActivityRequest() + 28);
    v18 = 0;
    v5 = sub_232E0CDFC((uint64_t)v11, v13, (uint64_t)&v18, a2, a3);
    sub_232DF51B8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  }
  return v5;
}

uint64_t sub_232E0C708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DF6DC0(*(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_232E0C720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t result;
  _QWORD aBlock[6];

  v7 = type metadata accessor for OpaqueActivityPayload(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = *(NSObject **)(v3 + 96);
  sub_232DED470(a3, (uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for OpaqueActivityPayload);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v3;
  v12[3] = a1;
  v12[4] = a2;
  sub_232DEDD20((uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v12 + v11, type metadata accessor for OpaqueActivityPayload);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_232E0D04C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_232DDD4B4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_5;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v14);
  _Block_release(v14);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a2 & 1) != 0)
    __break(1u);
  return result;
}

void sub_232E0C8D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;

  v8 = sub_232E6F12C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(a1 + 96);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x24BEE5610], v8, v10);
  v14 = v13;
  LOBYTE(v13) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    v15 = *(id *)(a1 + 24);
    sub_232DF6DE4(a2, a3, a4);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_232E0C9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  dispatch_queue_t v24;
  _QWORD aBlock[6];

  v22 = a1;
  v23 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v24 = *(dispatch_queue_t *)(v4 + 96);
  sub_232DF5040(a3, (uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542379D0);
  sub_232DF5040(a4, (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_254237620);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (v12 + *(unsigned __int8 *)(v8 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v15 = (_QWORD *)swift_allocObject();
  v16 = v22;
  v17 = v23;
  v15[2] = v4;
  v15[3] = v16;
  v15[4] = v17;
  sub_232DE939C((uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v15 + v13, &qword_2542379D0);
  sub_232DE939C((uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v15 + v14, &qword_254237620);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_232E0D2FC;
  *(_QWORD *)(v18 + 24) = v15;
  aBlock[4] = sub_232E0E30C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_13;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v24, v19);
  _Block_release(v19);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v14 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_232E0CBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232DE7918(a1, a2, a3, sub_232DFFE00);
}

uint64_t sub_232E0CBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB478);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB420);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(char **)(v0 + 88);
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC11ActivityKit40ActivityFrequentUpdatesObservationClient_singleton];
  v11 = (uint64_t *)(v10 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activities);
  swift_beginAccess();
  v12 = *v11;
  v13 = MEMORY[0x24BEE4B08];
  if (v12)
    v13 = v12;
  v17 = v13;
  v14 = v9;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB480);
  sub_232E6F018();
  v17 = *(_QWORD *)(v10
                  + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activityDiffPublisher);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D8);
  sub_232DDF49C(&qword_255FFB470, &qword_255FFB478, MEMORY[0x24BDB9DF8]);
  sub_232DDF49C(&qword_255FFB458, &qword_2542382D8, MEMORY[0x24BDB9CB0]);
  sub_232E6F06C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_232DDF49C(&qword_255FFB418, &qword_255FFB420, MEMORY[0x24BDB9798]);
  v15 = sub_232E6F030();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v15;
}

uint64_t sub_232E0CDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  type metadata accessor for Activity(0, a4, a5, a4);
  result = sub_232E6F3D8();
  if (!v5)
    return v7;
  return result;
}

uint64_t sub_232E0CE7C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for OpaqueActivityPayload(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 40) & ~v2);
  v4 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[5];
  v6 = sub_232E6EE74();
  v7 = *(_QWORD *)(v6 - 8);
  v18 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v18(v5, v6);
  sub_232DE8D98(*(_QWORD *)(v3 + v1[6]), *(_QWORD *)(v3 + v1[6] + 8));
  v8 = v3 + v1[7];
  sub_232DE8D98(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
  v9 = v8 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v10(v9, 1, v6))
    v18(v9, v6);
  v11 = v3 + v1[8];
  v12 = type metadata accessor for AlertConfiguration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = sub_232E6EE08();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v11, v13);
    v14(v11 + *(int *)(v12 + 20), v13);
    v15 = v11 + *(int *)(v12 + 24);
    swift_bridgeObjectRelease();

  }
  v16 = v3 + v1[9];
  if (!v10(v16, 1, v6))
    v18(v16, v6);
  return swift_deallocObject();
}

void sub_232E0D04C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OpaqueActivityPayload(0) - 8) + 80);
  sub_232E0C8D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_232E0D080()
{
  return swift_deallocObject();
}

uint64_t sub_232E0D090()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254237620) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  v6 = v0 + v2;
  v7 = (int *)type metadata accessor for OpaqueActivityPayload(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {
    v8 = sub_232E6EE98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = v6 + v7[5];
    v10 = sub_232E6EE74();
    v11 = *(_QWORD *)(v10 - 8);
    v24 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v24(v9, v10);
    sub_232DE8D98(*(_QWORD *)(v6 + v7[6]), *(_QWORD *)(v6 + v7[6] + 8));
    v12 = v6 + v7[7];
    sub_232DE8D98(*(_QWORD *)v12, *(_QWORD *)(v12 + 8));
    v13 = v12 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (!v25(v13, 1, v10))
      v24(v13, v10);
    v14 = v6 + v7[8];
    v15 = type metadata accessor for AlertConfiguration();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      v23 = v5;
      v16 = sub_232E6EE08();
      v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
      v17(v14, v16);
      v17(v14 + *(int *)(v15 + 20), v16);
      v5 = v23;
      v18 = v14 + *(int *)(v15 + 24);
      swift_bridgeObjectRelease();

    }
    v19 = v6 + v7[9];
    if (!v25(v19, 1, v10))
      v24(v19, v10);
  }
  v20 = type metadata accessor for ActivityEndingOptions();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v0 + v5, 1, v20))
  {
    v21 = sub_232E6EE74();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v0 + v5, v21);
  }
  return swift_deallocObject();
}

uint64_t sub_232E0D2FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254237620) - 8) + 80);
  return sub_232E0D914(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_232E0D374()
{
  return swift_deallocObject();
}

uint64_t sub_232E0D384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_232DE80CC(v3 + 32, (uint64_t)v12);
  v8 = v13;
  v9 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
  if (!v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  v10 = type metadata accessor for ActivityDescriptor();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 1, 1, v10);
}

uint64_t sub_232E0D45C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(v1 + 32, (uint64_t)v12);
  v3 = v13;
  v4 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v10[0] = v9;
  v10[1] = v8;
  v10[2] = v7;
  v11 = v2;
  v5 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 16))(v10, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v5;
}

uint64_t sub_232E0D510(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(v1 + 32, (uint64_t)v12);
  v3 = v13;
  v4 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v10[0] = v9;
  v10[1] = v8;
  v10[2] = v7;
  v11 = v2;
  v5 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 24))(v10, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v5;
}

uint64_t sub_232E0D5C4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(v1 + 32, (uint64_t)v12);
  v3 = v13;
  v4 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v10[0] = v9;
  v10[1] = v8;
  v10[2] = v7;
  v11 = v2;
  v5 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 48))(v10, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v5;
}

uint64_t sub_232E0D678(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(v1 + 32, (uint64_t)v12);
  v3 = v13;
  v4 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v10[0] = v9;
  v10[1] = v8;
  v10[2] = v7;
  v11 = v2;
  v5 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 56))(v10, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v5;
}

uint64_t sub_232E0D72C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(v1 + 32, (uint64_t)v12);
  v3 = v13;
  v4 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v10[0] = v9;
  v10[1] = v8;
  v10[2] = v7;
  v11 = v2;
  v5 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 64))(v10, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v5;
}

uint64_t sub_232E0D7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_232DE80CC(v2 + 32, (uint64_t)v9);
  v5 = v10;
  v6 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v7;
}

uint64_t sub_232E0D870(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  char v14;

  v6 = *a3;
  sub_232DE80CC(v3 + 32, (uint64_t)v11);
  v7 = v12;
  v8 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v14 = v6;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v8 + 40))(a1, a2, &v14, v7, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

uint64_t sub_232E0D914(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v27 = a4;
  v30 = a2;
  v31 = a3;
  v29 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActivityEndingOptions();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v15 = sub_232E6F12C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (uint64_t *)((char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = v4;
  v20 = *(void **)(v4 + 96);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v16 + 104))(v19, *MEMORY[0x24BEE5610], v15, v17);
  v21 = v20;
  LOBYTE(v20) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v19, v15);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_4;
  }
  sub_232DF5040(v27, (uint64_t)v7, &qword_254237620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_232DEDD20((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityEndingOptions);
    v24 = *(id *)(v28 + 24);
    sub_232DF78A0(v29, v30, v31, (uint64_t)v14);
    v11 = v14;
    goto LABEL_6;
  }
  sub_232DEE2AC((uint64_t)v7);
  if (qword_255FFB4A8 != -1)
    goto LABEL_8;
LABEL_4:
  v22 = type metadata accessor for ActivityUIDismissalPolicy();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_255FFB360);
  sub_232DED470(v23, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
  v24 = *(id *)(v28 + 24);
  sub_232DF78A0(v29, v30, v31, (uint64_t)v11);
LABEL_6:

  return sub_232DF51B8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActivityEndingOptions);
}

uint64_t sub_232E0DB6C(uint64_t *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v19 = a5;
  v10 = sub_232E6F12C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *a3;
  v15 = *(void **)(v5 + 96);
  *v13 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v16 = v15;
  LOBYTE(v15) = sub_232E6F144();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) != 0)
  {
    v20 = v14;
    swift_retain();
    v18 = sub_232DFFE0C(a1, a2, &v20, a4, v19);
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id *ActivityManager.deinit()
{
  id *v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_release();
  swift_release();

  return v0;
}

uint64_t ActivityManager.__deallocating_deinit()
{
  id *v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t ActivityManager.mockPush(token:channelID:processIdentifier:environmentName:payload:pushPriority:completionHandler:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t result;
  NSObject *queue;
  _QWORD aBlock[6];

  v13 = v12;
  queue = *(NSObject **)(v13 + 96);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v13;
  v20[3] = a1;
  v20[4] = a2;
  v20[5] = a3;
  v20[6] = a4;
  v20[7] = a5;
  v20[8] = a6;
  v20[9] = a7;
  v20[10] = a8;
  v20[11] = a9;
  v20[12] = a10;
  v20[13] = a11;
  v20[14] = a12;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_232E0E0D8;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_232E0E30C;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_23;
  v22 = _Block_copy(aBlock);
  swift_retain();
  sub_232DF9AE8(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queue, v22);
  _Block_release(v22);
  LOBYTE(a6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a6 & 1) != 0)
    __break(1u);
  return result;
}

void sub_232E0DEF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v29 = a2;
  v30 = a3;
  v19 = sub_232E6F12C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (uint64_t *)((char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(void **)(a1 + 96);
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v20 + 104))(v23, *MEMORY[0x24BEE5610], v19, v21);
  v25 = v24;
  LOBYTE(v24) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v23, v19);
  if ((v24 & 1) != 0)
  {
    v28 = a8;
    v26 = *(id *)(a1 + 24);
    sub_232DF8530(v29, v30, a4, a5, a6, a7, v28, a9, a10, a11, a12, a13);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_232E0E028@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  char v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(uint64_t **)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  result = sub_232E0DB6C(v6, v7, &v9, v4, v5);
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_232E0E074()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 60 != 15)
    sub_232DE8D98(*(_QWORD *)(v0 + 24), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_232E0E0D8()
{
  uint64_t v0;

  sub_232E0DEF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_232E0E114()
{
  return swift_deallocObject();
}

uint64_t sub_232E0E124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_232E0C460();
  *a1 = result;
  return result;
}

uint64_t sub_232E0E14C(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t method lookup function for ActivityManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityManager.pushToStartTokenPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ActivityManager.pushToStartTokenPublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ActivityManager.pushToStartTokenPublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ActivityManager.pushToStartToken.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ActivityManager.requestActivity<A>(request:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ActivityManager.update(activityId:payload:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ActivityManager.end(id:payload:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ActivityManager.observeActivities<A>(of:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ActivityManager.observeNewActivities<A>(of:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ActivityManager.observeActivitiesExceedingReducedPushBudget()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ActivityManager.createLocalActivity<A>(for:content:state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of ActivityManager.descriptor(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ActivityManager.descriptors(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ActivityManager.descriptorContentStates(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ActivityManager.observeDescriptors(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of ActivityManager.observeDescriptorStates(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of ActivityManager.observeDescriptorContentStates(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ActivityManager.observePayloads(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ActivityManager.observePayloads(id:feed:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t ActivityPresentationPredicate.init(activityIdentifiers:presenterBundleIdentifiers:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ActivityPresentationPredicate.filter(presentations:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  _QWORD *v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  BOOL v40;
  unint64_t v41;
  unint64_t v42;
  BOOL v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  char isUniquelyReferenced_nonNull_native;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  int64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;

  v2 = a1;
  v4 = (_QWORD *)*v1;
  v3 = (_QWORD *)v1[1];
  if (*(_OWORD *)v1 == 0)
    return swift_bridgeObjectRetain();
  v66 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v73 = v7 & *(_QWORD *)(a1 + 64);
  v67 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  v63 = v3 + 9;
  v64 = (_QWORD *)MEMORY[0x24BEE4B00];
  v65 = v4 + 9;
  v68 = v3;
  v69 = v2;
  while (1)
  {
LABEL_6:
    v9 = v73;
    while (1)
    {
      do
      {
LABEL_7:
        if (v9)
        {
          v10 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v11 = v10 | (v8 << 6);
        }
        else
        {
          v12 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
            goto LABEL_100;
          }
          if (v12 >= v67)
            goto LABEL_95;
          v13 = *(_QWORD *)(v66 + 8 * v12);
          ++v8;
          if (!v13)
          {
            v8 = v12 + 1;
            if (v12 + 1 >= v67)
              goto LABEL_95;
            v13 = *(_QWORD *)(v66 + 8 * v8);
            if (!v13)
            {
              v8 = v12 + 2;
              if (v12 + 2 >= v67)
                goto LABEL_95;
              v13 = *(_QWORD *)(v66 + 8 * v8);
              if (!v13)
              {
                v14 = v12 + 3;
                if (v14 >= v67)
                {
LABEL_95:
                  swift_release();
                  return (uint64_t)v64;
                }
                v13 = *(_QWORD *)(v66 + 8 * v14);
                if (!v13)
                {
                  while (1)
                  {
                    v8 = v14 + 1;
                    if (__OFADD__(v14, 1))
                      goto LABEL_99;
                    if (v8 >= v67)
                      goto LABEL_95;
                    v13 = *(_QWORD *)(v66 + 8 * v8);
                    ++v14;
                    if (v13)
                      goto LABEL_22;
                  }
                }
                v8 = v14;
              }
            }
          }
LABEL_22:
          v9 = (v13 - 1) & v13;
          v11 = __clz(__rbit64(v13)) + (v8 << 6);
        }
        v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v11);
        v17 = *v15;
        v16 = v15[1];
        v74 = *(_QWORD **)(*(_QWORD *)(v2 + 56) + 24 * v11 + 16);
        v73 = v9;
        if (!v3)
          goto LABEL_46;
        v18 = v3[2];
      }
      while (!v18);
      if (v3[4] == v17 && v3[5] == v16)
        break;
      v20 = *v15;
      v21 = v15[1];
      v22 = sub_232E6F6E4();
      v17 = v20;
      v16 = v21;
      v9 = v73;
      if ((v22 & 1) != 0)
        break;
      if (v18 != 1)
      {
        if (v3[6] == v20 && v3[7] == v21)
          break;
        v24 = sub_232E6F6E4();
        v17 = v20;
        v16 = v21;
        v9 = v73;
        if ((v24 & 1) != 0)
          break;
        if (v18 != 2)
        {
          v25 = v63;
          v26 = 2;
          while (1)
          {
            v27 = v26 + 1;
            if (__OFADD__(v26, 1))
              break;
            if (*(v25 - 1) == v17 && *v25 == v16)
              goto LABEL_46;
            v29 = sub_232E6F6E4();
            v17 = v20;
            v16 = v21;
            v9 = v73;
            if ((v29 & 1) != 0)
              goto LABEL_46;
            v25 += 2;
            ++v26;
            if (v27 == v18)
              goto LABEL_7;
          }
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
      }
    }
LABEL_46:
    v71 = v8;
    v72 = v16;
    v70 = v17;
    if (!v4)
    {
      swift_bridgeObjectRetain();
      v32 = v74;
      swift_bridgeObjectRetain();
      if (v74[2])
        goto LABEL_84;
      goto LABEL_82;
    }
    v30 = v74;
    v75 = v74[2];
    if (v75)
      break;
    swift_bridgeObjectRetain();
    v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_84;
LABEL_82:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v68;
    v2 = v69;
    v8 = v71;
  }
  v76 = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = 0;
  v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    if (v31 >= v30[2])
    {
      __break(1u);
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    if (v76)
    {
      v34 = (uint64_t)&v74[3 * v31 + 4];
      v35 = *(_QWORD *)v34;
      v36 = *(_QWORD *)(v34 + 8);
      v37 = *(_BYTE *)(v34 + 16);
      v38 = *(_BYTE *)(v34 + 17);
      v39 = v4;
      v40 = v4[4] == *(_QWORD *)v34 && v4[5] == v36;
      if (!v40 && (sub_232E6F6E4() & 1) == 0)
      {
        if (v76 == 1)
        {
LABEL_50:
          v4 = v39;
          v30 = v74;
          goto LABEL_51;
        }
        v43 = v4[6] == v35 && v4[7] == v36;
        if (!v43 && (sub_232E6F6E4() & 1) == 0)
        {
          if (v76 != 2)
          {
            v44 = v65;
            v45 = 2;
            while (1)
            {
              v46 = v45 + 1;
              if (__OFADD__(v45, 1))
                goto LABEL_97;
              v47 = *(v44 - 1) == v35 && *v44 == v36;
              if (v47 || (sub_232E6F6E4() & 1) != 0)
                goto LABEL_59;
              v44 += 2;
              ++v45;
              if (v46 == v76)
                goto LABEL_50;
            }
          }
          goto LABEL_50;
        }
      }
LABEL_59:
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v32 = sub_232E10060(0, v32[2] + 1, 1, v32);
      v42 = v32[2];
      v41 = v32[3];
      if (v42 >= v41 >> 1)
        v32 = sub_232E10060((_QWORD *)(v41 > 1), v42 + 1, 1, v32);
      v32[2] = v42 + 1;
      v33 = &v32[3 * v42];
      v33[4] = v35;
      v33[5] = v36;
      *((_BYTE *)v33 + 48) = v37;
      *((_BYTE *)v33 + 49) = v38;
      goto LABEL_50;
    }
LABEL_51:
    ++v31;
  }
  while (v31 != v75);
  swift_bridgeObjectRelease();
  if (!v32[2])
    goto LABEL_82;
LABEL_84:
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v50 = sub_232DE0F18(v70, v72);
  v51 = v64[2];
  v52 = (v49 & 1) == 0;
  v53 = v51 + v52;
  if (__OFADD__(v51, v52))
    goto LABEL_101;
  v54 = v49;
  if (v64[3] >= v53)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_232E11F4C(&qword_255FFE630);
LABEL_90:
    if ((v54 & 1) != 0)
    {
      v57 = (uint64_t *)(v64[7] + 24 * v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v57 = v70;
      v57[1] = v72;
      v57[2] = (uint64_t)v32;
    }
    else
    {
      v64[(v50 >> 6) + 8] |= 1 << v50;
      v58 = (uint64_t *)(v64[6] + 16 * v50);
      *v58 = v70;
      v58[1] = v72;
      v59 = (uint64_t *)(v64[7] + 24 * v50);
      *v59 = v70;
      v59[1] = v72;
      v59[2] = (uint64_t)v32;
      v60 = v64[2];
      v61 = __OFADD__(v60, 1);
      v62 = v60 + 1;
      if (v61)
        goto LABEL_102;
      v64[2] = v62;
      swift_bridgeObjectRetain();
    }
    v3 = v68;
    v2 = v69;
    v8 = v71;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_232E10CD4(v53, isUniquelyReferenced_nonNull_native, &qword_255FFE630);
  v55 = sub_232DE0F18(v70, v72);
  if ((v54 & 1) == (v56 & 1))
  {
    v50 = v55;
    goto LABEL_90;
  }
LABEL_103:
  result = sub_232E6F714();
  __break(1u);
  return result;
}

uint64_t sub_232E0E964(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_232E6F6E4();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_232E6F6E4() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_232E0EA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int8x16_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[7];
  char v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  _OWORD v68[3];
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  _QWORD v79[7];
  char v80;
  _QWORD v81[3];
  int8x16_t v82;
  int8x16_t v83;
  char v84;

  sub_232E13418(a1, (uint64_t)v68);
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 0;
  v59 = a1;
  v57 = v68[1];
  v58 = v68[0];
  v56 = v68[2];
  v55 = v69;
  v54 = v70;
  swift_bridgeObjectRetain();
  v5 = a2 + 48;
  for (i = v4 - 1; ; i = v60 - 1)
  {
    v7 = *(_QWORD *)(v5 - 16);
    v8 = *(_QWORD *)(v5 - 8);
    v10 = *(_QWORD *)v5;
    v9 = *(_QWORD *)(v5 + 8);
    v12 = *(_QWORD *)(v5 + 16);
    v11 = *(_QWORD *)(v5 + 24);
    v13 = *(_QWORD *)(v5 + 32);
    v14 = *(unsigned __int8 *)(v5 + 40);
    v61[0] = v7;
    v61[1] = v8;
    v61[2] = v10;
    v61[3] = v9;
    v61[4] = v12;
    v61[5] = v11;
    v61[6] = v13;
    v62 = v14;
    v63 = v58;
    v64 = v57;
    v65 = v56;
    v66 = v55;
    v67 = v54;
    v60 = i;
    if (!v14)
      break;
    if (v14 != 1)
    {
      v15 = v59;
      sub_232E13418(v59, (uint64_t)v81);
      if (v84 == 2)
      {
        v26 = vorrq_s8(v82, v83);
        if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v26.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL)) | v81[2] | v81[1] | v81[0]))
          goto LABEL_47;
      }
LABEL_19:
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, v14);
      sub_232E1362C(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
      sub_232E134F8((uint64_t)v61);
      goto LABEL_20;
    }
    v15 = v59;
    sub_232E13418(v59, (uint64_t)v79);
    if (v80 != 1)
      goto LABEL_19;
    if (v7 == v79[0] && v8 == v79[1])
    {
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 1);
      sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
LABEL_47:
      sub_232E134F8((uint64_t)v61);
      goto LABEL_48;
    }
    v16 = sub_232E6F6E4();
    sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 1);
    sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
    sub_232E134F8((uint64_t)v61);
    if ((v16 & 1) != 0)
      goto LABEL_48;
LABEL_20:
    if (!v60)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v5 += 64;
  }
  v15 = v59;
  sub_232E13418(v59, (uint64_t)&v71);
  if (v78)
    goto LABEL_19;
  v17 = v72;
  v19 = v73;
  v18 = v74;
  v20 = v76;
  v49 = v74;
  v50 = v73;
  if ((_BYTE)v12)
  {
    if (v12 != 1)
    {
      if (v75 != 2 || v72 | v71 | v73 | v74)
      {
LABEL_31:
        v52 = v71;
        v47 = v72;
        v45 = v75;
        sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
        sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
        sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
        sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
        sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
        sub_232E134AC(v52, v17, v50, v49, v45);
        sub_232E134AC(v7, v8, v10, v9, v12);
        sub_232E135E0(v7, v8, v10, v9, v12);
        sub_232E135E0(v52, v47, v50, v49, v45);
        sub_232E134F8((uint64_t)v61);
        sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13588);
        sub_232E13588(v7, v8, v10, v9, v12, v11, v13, 0);
        v28 = v7;
        v29 = v8;
        v30 = v10;
        v31 = v9;
        v32 = v12;
        v33 = v11;
        v34 = v13;
        goto LABEL_32;
      }
      v44 = v77;
      v43 = v76;
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
      sub_232E135E0(v7, v8, v10, v9, 2);
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 2;
      goto LABEL_35;
    }
    if (v75 != 1)
      goto LABEL_31;
    v43 = v76;
    v44 = v77;
    if (v7 == v71 && v8 == v72)
    {
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
      sub_232E134AC(v7, v8, v50, v49, 1);
      sub_232E134AC(v7, v8, v10, v9, 1);
      sub_232E135E0(v7, v8, v10, v9, 1);
      v21 = v7;
      v22 = v8;
      v23 = v50;
      v24 = v49;
      v25 = 1;
LABEL_35:
      sub_232E135E0(v21, v22, v23, v24, v25);
      goto LABEL_38;
    }
    v53 = v71;
    v48 = v72;
    v42 = sub_232E6F6E4();
    sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
    sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
    sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
    sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
    sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
    sub_232E134AC(v53, v48, v50, v49, 1);
    sub_232E134AC(v7, v8, v10, v9, 1);
    sub_232E135E0(v7, v8, v10, v9, 1);
    v35 = v53;
    v36 = v48;
    v37 = v50;
    v38 = v49;
    v39 = 1;
  }
  else
  {
    if (v75)
      goto LABEL_31;
    v44 = v77;
    v51 = v71;
    v46 = v72;
    if (v7 != v71 || v8 != v72)
    {
      v27 = sub_232E6F6E4();
      v18 = v49;
      v19 = v50;
      if ((v27 & 1) == 0)
      {
        sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
        sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
        sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
        sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
        sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
        sub_232E134AC(v51, v46, v50, v49, 0);
        sub_232E134AC(v7, v8, v10, v9, 0);
        sub_232E135E0(v7, v8, v10, v9, 0);
        sub_232E135E0(v51, v46, v50, v49, 0);
LABEL_43:
        sub_232E134F8((uint64_t)v61);
        sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13588);
        sub_232E13588(v7, v8, v10, v9, v12, v11, v13, 0);
        v28 = v7;
        v29 = v8;
        v30 = v10;
        v31 = v9;
        v32 = v12;
        v33 = v11;
        v34 = v13;
LABEL_32:
        sub_232E13588(v28, v29, v30, v31, v32, v33, v34, 0);
        goto LABEL_20;
      }
    }
    v43 = v20;
    if (v10 == v19 && v9 == v18)
    {
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
      sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
      sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
      sub_232E134AC(v51, v46, v10, v9, 0);
      sub_232E134AC(v7, v8, v10, v9, 0);
      sub_232E135E0(v7, v8, v10, v9, 0);
      v21 = v51;
      v22 = v46;
      v23 = v10;
      v24 = v9;
      v25 = 0;
      goto LABEL_35;
    }
    v42 = sub_232E6F6E4();
    sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
    sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
    sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
    sub_232E13454(v7, v8, v10, v9, v12, v11, v13, 0);
    sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13454);
    sub_232E134AC(v51, v46, v50, v49, 0);
    sub_232E134AC(v7, v8, v10, v9, 0);
    sub_232E135E0(v7, v8, v10, v9, 0);
    v35 = v51;
    v36 = v46;
    v37 = v50;
    v38 = v49;
    v39 = 0;
  }
  sub_232E135E0(v35, v36, v37, v38, v39);
  if ((v42 & 1) == 0)
    goto LABEL_43;
LABEL_38:
  if (v11 != v43 || v13 != v44)
  {
    v40 = sub_232E6F6E4();
    sub_232E134F8((uint64_t)v61);
    sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13588);
    sub_232E13588(v7, v8, v10, v9, v12, v11, v13, 0);
    sub_232E13588(v7, v8, v10, v9, v12, v11, v13, 0);
    if ((v40 & 1) != 0)
      goto LABEL_48;
    goto LABEL_20;
  }
  sub_232E134F8((uint64_t)v61);
  sub_232E1362C(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232E13588);
  sub_232E13588(v7, v8, v10, v9, v12, v11, v13, 0);
  sub_232E13588(v7, v8, v10, v9, v12, v11, v13, 0);
LABEL_48:
  swift_bridgeObjectRelease();
  return 1;
}

void static ActivityPresentationPredicate.all.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t ActivityPresentationPredicate.activityIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ActivityPresentationPredicate.presenterBundleIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

Swift::Bool __swiftcall ActivityPresentationPredicate.matches(activityIdentifier:presenterBundleIdentifier:)(Swift::String activityIdentifier, Swift::String presenterBundleIdentifier)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  Swift::Bool result;
  _QWORD *v12;
  uint64_t i;
  uint64_t v14;
  BOOL v15;

  v3 = *v2;
  if (!*v2)
    return 1;
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    return 0;
  object = presenterBundleIdentifier._object;
  countAndFlagsBits = presenterBundleIdentifier._countAndFlagsBits;
  v7 = activityIdentifier._object;
  v8 = activityIdentifier._countAndFlagsBits;
  v9 = (_QWORD *)v2[1];
  v10 = *(_QWORD *)(v3 + 32) == activityIdentifier._countAndFlagsBits
     && *(void **)(v3 + 40) == activityIdentifier._object;
  if (v10 || (result = sub_232E6F6E4()))
  {
LABEL_8:
    if (v9)
      return sub_232E0E964(countAndFlagsBits, (uint64_t)object, v9);
    return 0;
  }
  if (v4 == 1)
    return 0;
  v12 = (_QWORD *)(v3 + 56);
  for (i = 1; ; ++i)
  {
    v14 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v15 = *(v12 - 1) == v8 && *v12 == (_QWORD)v7;
    if (v15 || (sub_232E6F6E4() & 1) != 0)
      goto LABEL_8;
    result = 0;
    v12 += 2;
    if (v14 == v4)
      return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_232E0F720()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0xD000000000000013;
}

uint64_t sub_232E0F760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E13320(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E0F784()
{
  sub_232E12128();
  return sub_232E6F7D4();
}

uint64_t sub_232E0F7AC()
{
  sub_232E12128();
  return sub_232E6F7E0();
}

uint64_t ActivityPresentationPredicate.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD828);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E12128();
  sub_232E6F7C8();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
  sub_232E09294(&qword_254236860, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_232E6F678();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_232E6F678();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ActivityPresentationPredicate.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v13;
  char v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD838);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E12128();
  sub_232E6F7BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
  v14 = 0;
  sub_232E09294((unint64_t *)&qword_254237F10, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_232E6F60C();
  v9 = v15;
  v14 = 1;
  swift_bridgeObjectRetain();
  sub_232E6F60C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v15;
  v11 = v13;
  *v13 = v9;
  v11[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E0FB20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActivityPresentationPredicate.init(from:)(a1, a2);
}

uint64_t sub_232E0FB34(_QWORD *a1)
{
  return ActivityPresentationPredicate.encode(to:)(a1);
}

uint64_t sub_232E0FB48()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DFD8E8();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E0FC14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232E0FC3C(a1, a2, a3, a4, &qword_255FFBFA8, type metadata accessor for ActivityDescriptorState);
}

uint64_t sub_232E0FC28(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232E0FC3C(a1, a2, a3, a4, &qword_2542375F8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
}

uint64_t sub_232E0FC3C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_232E6F570();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_232E12D64(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_232E0FE48(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232E12E7C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_232E0FF54(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD878);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232E12F6C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_232E10060(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD888);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_232E13148(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_232E10180(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254237E40);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_232E1323C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_232E10278(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_232E103BC(a1, a2, a3, a4, &qword_255FFB4A0);
}

_QWORD *sub_232E1028C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD880);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_232E13668(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_232E103A8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_232E103BC(a1, a2, a3, a4, &qword_255FFD868);
}

_QWORD *sub_232E103BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232E1305C(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

unint64_t sub_232E104D4(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_232E6F780();
  sub_232E6F78C();
  v2 = sub_232E6F7B0();
  return sub_232E10530(v1, v2);
}

unint64_t sub_232E10530(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_232E105EC(uint64_t a1, int a2)
{
  return sub_232E10960(a1, a2, type metadata accessor for SubscribedActivity, &qword_254237810);
}

uint64_t sub_232E10600(uint64_t a1, char a2)
{
  return sub_232E10CD4(a1, a2, &qword_254237818);
}

uint64_t sub_232E1060C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;

  v3 = v2;
  v5 = type metadata accessor for OpaqueActivityPayload(0);
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254237800);
  v38 = a2;
  result = sub_232E6F5A0();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v36 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v34 = v2;
    v35 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v36;
        if (v20 >= v35)
          goto LABEL_34;
        v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_34;
          v21 = v36[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v35)
                  goto LABEL_34;
                v21 = v36[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v19);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v38 & 1) != 0)
        sub_232DEDD20(v25, (uint64_t)v7, type metadata accessor for OpaqueActivityPayload);
      else
        sub_232DED470(v25, (uint64_t)v7, type metadata accessor for OpaqueActivityPayload);
      sub_232E6F780();
      sub_232E6F78C();
      result = sub_232E6F7B0();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v10 + 48) + v17) = v23;
      result = sub_232DEDD20((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, type metadata accessor for OpaqueActivityPayload);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_232E1094C(uint64_t a1, int a2)
{
  return sub_232E10960(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest, &qword_255FFC600);
}

uint64_t sub_232E10960(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t (*v48)(_QWORD);

  v6 = v4;
  v48 = a3;
  v8 = a3(0);
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v47 = a2;
  v12 = sub_232E6F5A0();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v4;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v6 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v20 >= v44)
              goto LABEL_34;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v46 + 72);
    v33 = *(_QWORD *)(v11 + 56) + v32 * v24;
    if ((v47 & 1) != 0)
    {
      sub_232DEDD20(v33, (uint64_t)v10, v48);
    }
    else
    {
      sub_232DED470(v33, (uint64_t)v10, v48);
      swift_bridgeObjectRetain();
    }
    sub_232E6F780();
    sub_232E6F21C();
    result = sub_232E6F7B0();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    *v22 = v31;
    v22[1] = v30;
    result = sub_232DEDD20((uint64_t)v10, *(_QWORD *)(v13 + 56) + v32 * v21, v48);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v6 = v43;
  v26 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v11 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_232E10CD4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v40 = a2;
  v7 = sub_232E6F5A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v39 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v37 = v3;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v39 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_33;
      v25 = *(_QWORD *)(v39 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v38)
              goto LABEL_33;
            v25 = *(_QWORD *)(v39 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(v6 + 56) + 24 * v22;
    v35 = *(_QWORD *)v34;
    v41 = *(_OWORD *)(v34 + 8);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_232E6F780();
    sub_232E6F21C();
    result = sub_232E6F7B0();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = *(_QWORD *)(v8 + 56) + 24 * v18;
    *(_QWORD *)v20 = v35;
    *(_OWORD *)(v20 + 8) = v41;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_232E11010(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFE660);
  v6 = a2;
  v7 = sub_232E6F5A0();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
      }
      sub_232E6F780();
      sub_232E6F21C();
      result = sub_232E6F7B0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_232E11318(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD870);
  v6 = a2;
  v7 = sub_232E6F5A0();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_232DE4A2C(v37, *((unint64_t *)&v37 + 1));
      }
      sub_232E6F780();
      sub_232E6F21C();
      result = sub_232E6F7B0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_232E11624(uint64_t a1, int a2)
{
  return sub_232E10960(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState, &qword_254236880);
}

uint64_t sub_232E11638(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE640);
  v6 = sub_232E6F5A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_232E13408(v24, v35);
      }
      else
      {
        sub_232DE4B40((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_232E6F780();
      sub_232E6F21C();
      result = sub_232E6F7B0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_232E13408(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_232E11934()
{
  return sub_232E11D1C(type metadata accessor for SubscribedActivity, &qword_254237810);
}

void *sub_232E11948()
{
  return sub_232E11F4C(&qword_254237818);
}

void *sub_232E11954()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237B78);
  v2 = *v0;
  v3 = sub_232E6F594();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_232E11AE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for OpaqueActivityPayload(0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254237800);
  v5 = *v0;
  v6 = sub_232E6F594();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v19 = *(_QWORD *)(v26 + 72) * v17;
    sub_232DED470(*(_QWORD *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for OpaqueActivityPayload);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)sub_232DEDD20((uint64_t)v4, *(_QWORD *)(v7 + 56) + v19, type metadata accessor for OpaqueActivityPayload);
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_232E11D08()
{
  return sub_232E11D1C((uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest, &qword_255FFC600);
}

void *sub_232E11D1C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = a1(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = v2;
  v8 = *v2;
  v9 = sub_232E6F594();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_232DED470(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v23;
    v25[1] = v22;
    sub_232DEDD20((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_232E11F4C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_232E6F594();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v14)
      goto LABEL_26;
    v28 = *(_QWORD *)(v7 + 8 * v27);
    ++v10;
    if (!v28)
    {
      v10 = v27 + 1;
      if (v27 + 1 >= v14)
        goto LABEL_26;
      v28 = *(_QWORD *)(v7 + 8 * v10);
      if (!v28)
        break;
    }
LABEL_25:
    v13 = (v28 - 1) & v28;
    v16 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 24 * v16;
    v22 = *(_QWORD *)(v3 + 56) + v21;
    v23 = *(_QWORD *)v22;
    v24 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    v25 = *(_OWORD *)(v22 + 8);
    *v24 = v20;
    v24[1] = v19;
    v26 = *(_QWORD *)(v5 + 56) + v21;
    *(_QWORD *)v26 = v23;
    *(_OWORD *)(v26 + 8) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v14)
    goto LABEL_26;
  v28 = *(_QWORD *)(v7 + 8 * v29);
  if (v28)
  {
    v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v28 = *(_QWORD *)(v7 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_232E12128()
{
  unint64_t result;

  result = qword_255FFD830;
  if (!qword_255FFD830)
  {
    result = MEMORY[0x23492A124](&unk_232E72E24, &type metadata for ActivityPresentationPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD830);
  }
  return result;
}

void *sub_232E1216C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFE660);
  v2 = *v0;
  v3 = sub_232E6F594();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_232E1232C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD870);
  v2 = *v0;
  v3 = sub_232E6F594();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_232DE4A2C(v24, *((unint64_t *)&v24 + 1));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_232E124F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237590);
  v2 = *v0;
  v3 = sub_232E6F594();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_232DE80CC(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_232DEAC8C(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_232E126D8()
{
  return sub_232E11D1C((uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState, &qword_254236880);
}

void *sub_232E126EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE640);
  v2 = *v0;
  v3 = sub_232E6F594();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_232DE4B40(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_232E13408(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t _s11ActivityKit0A21PresentationPredicateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t result;
  BOOL v9;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (!v6)
      goto LABEL_4;
    return 0;
  }
  if (!v6 || (sub_232E21218(v4, v6) & 1) == 0)
    return 0;
LABEL_4:
  result = (v5 | v7) == 0;
  if (v5)
    v9 = v7 == 0;
  else
    v9 = 1;
  if (!v9)
    return sub_232E21218((_QWORD *)v5, (_QWORD *)v7);
  return result;
}

unint64_t sub_232E12944(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232E12978();
  a1[2] = sub_232DFD8E8();
  result = sub_232E129BC();
  a1[3] = result;
  return result;
}

unint64_t sub_232E12978()
{
  unint64_t result;

  result = qword_255FFD840;
  if (!qword_255FFD840)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationPredicate, &type metadata for ActivityPresentationPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFD840);
  }
  return result;
}

unint64_t sub_232E129BC()
{
  unint64_t result;

  result = qword_255FFD848;
  if (!qword_255FFD848)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationPredicate, &type metadata for ActivityPresentationPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFD848);
  }
  return result;
}

uint64_t destroy for ActivityPresentationPredicate()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11ActivityKit29ActivityPresentationPredicateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ActivityPresentationPredicate(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for ActivityPresentationPredicate(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPresentationPredicate(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityPresentationPredicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationPredicate()
{
  return &type metadata for ActivityPresentationPredicate;
}

uint64_t storeEnumTagSinglePayload for ActivityPresentationPredicate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E12C0C + 4 * byte_232E72C45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E12C40 + 4 * byte_232E72C40[v4]))();
}

uint64_t sub_232E12C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E12C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E12C50);
  return result;
}

uint64_t sub_232E12C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E12C64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E12C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E12C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationPredicate.CodingKeys()
{
  return &type metadata for ActivityPresentationPredicate.CodingKeys;
}

unint64_t sub_232E12C90()
{
  unint64_t result;

  result = qword_255FFD850;
  if (!qword_255FFD850)
  {
    result = MEMORY[0x23492A124](&unk_232E72DFC, &type metadata for ActivityPresentationPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD850);
  }
  return result;
}

unint64_t sub_232E12CD8()
{
  unint64_t result;

  result = qword_255FFD858;
  if (!qword_255FFD858)
  {
    result = MEMORY[0x23492A124](&unk_232E72D6C, &type metadata for ActivityPresentationPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD858);
  }
  return result;
}

unint64_t sub_232E12D20()
{
  unint64_t result;

  result = qword_255FFD860;
  if (!qword_255FFD860)
  {
    result = MEMORY[0x23492A124](&unk_232E72D94, &type metadata for ActivityPresentationPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD860);
  }
  return result;
}

uint64_t sub_232E12D64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E12E7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E12F6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E1305C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E13148(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

char *sub_232E1323C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E13320(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000232E7E3D0 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000232E7E3F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_OWORD *sub_232E13408(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_232E13418(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

uint64_t sub_232E13454(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a8)
      return result;
    sub_232E134AC(result, a2, a3, a4, a5);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_232E134AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 != 1)
  {
    if (a5)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_232E134F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 120);
  sub_232E13588(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  sub_232E13588(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_232E13588(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (a8)
      return result;
    sub_232E135E0(result, a2, a3, a4, a5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E135E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 != 1)
  {
    if (a5)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E1362C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  return a1;
}

uint64_t sub_232E13668(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.activityAuthorizationEnablementPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.frequentUpdatesEnablementPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.activityAuthorizationLevelPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.areActivitiesEnabledForCurrentProcess()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.areActivitiesEnabled(forBundleId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.setActivitiesAuthorization(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.clearActivitiesAuthorization(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.activityAuthorizationLevel(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.subscribeToActivityAuthorizationStatusUpdates(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.unsubscribeToActivityAuthorizationStatusUpdates(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.areFrequentPushesEnabled(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.setFrequentPushesEnabled(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t dispatch thunk of ActivityAuthorizationManaging.areFrequentPushesEnabledForCurrentProcess()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_232E13814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, &qword_254237620, (unint64_t *)type metadata accessor for ActivityEndingOptions, &qword_255FFBFB0, (uint64_t)&protocol conformance descriptor for ActivityEndingOptions, a2);
}

uint64_t sub_232E13838@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232DEBBB4();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if (v7)
    {
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E13918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v17;
  uint64_t result;
  uint64_t v19[2];

  v19[0] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_254237A40);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v19 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - v12;
  v14 = type metadata accessor for ActivityDescriptor();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v16(v13, 1, 1, v14);
  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v2 = v17;
    sub_232DDDAD8(&qword_254237EA0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
    sub_232E6ED9C();
    sub_232DDD798((uint64_t)v13, qword_254237A40);
    sub_232DE8D98(v3, v2);
    swift_release();
    v16(v11, 0, 1, v14);
    sub_232DE939C((uint64_t)v11, (uint64_t)v13, qword_254237A40);
    sub_232DF5040((uint64_t)v13, (uint64_t)v8, qword_254237A40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) != 1)
    {
      sub_232DDD798((uint64_t)v13, qword_254237A40);
      return sub_232DEDD20((uint64_t)v8, v19[0], (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  sub_232DE8D98(v3, v2);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E13B3C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;
  char v8;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232DFEA54();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if (v7 != 2)
    {
      *a2 = v7 & 1;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E13C34@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232DFE024();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if (v7 != 2)
    {
      *a2 = v7 & 1;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E13D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, &qword_255FFD730, (unint64_t *)type metadata accessor for AlertPayload, &qword_255FFD700, (uint64_t)&protocol conformance descriptor for AlertPayload, a2);
}

uint64_t sub_232E13D44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;

  v27 = a4;
  v28 = a5;
  v26 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - v15;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v25 - v19;
  v21 = ((uint64_t (*)(_QWORD, double))a3)(0, v18);
  v30 = *(_QWORD *)(v21 - 8);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  v29(v20, 1, 1, v21);
  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v6 = sub_232E6EE44();
    v7 = v22;
    v23 = v27;
    v27 = a3;
    sub_232DDDAD8(v23, (uint64_t (*)(uint64_t))a3, v28);
    sub_232E6ED9C();
    sub_232DDD798((uint64_t)v20, a2);
    sub_232DE8D98(v6, v7);
    swift_release();
    v29(v16, 0, 1, v21);
    sub_232DE939C((uint64_t)v16, (uint64_t)v20, a2);
    sub_232DF5040((uint64_t)v20, (uint64_t)v13, a2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v13, 1, v21) != 1)
    {
      sub_232DDD798((uint64_t)v20, a2);
      return sub_232DEDD20((uint64_t)v13, v26, (uint64_t (*)(_QWORD))v27);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  sub_232DE8D98(v6, v7);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E13F64@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E14790(a1, (void (*)(void))sub_232E0422C, a2);
}

uint64_t sub_232E13F78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E14790(a1, (void (*)(void))sub_232DEBBB4, a2);
}

uint64_t sub_232E13F8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E14790(a1, (void (*)(void))sub_232E09350, a2);
}

uint64_t sub_232E13FA0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  __int128 v7;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232E12978();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if ((_QWORD)v7 != 1)
    {
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E1408C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;
  char v8;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232DFEA54();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if (v7 != 2)
    {
      *a2 = v7 & 1;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E14180@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232DEB244();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if (v7 != 2)
    {
      *a2 = v7 & 1;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E1426C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232E16F30();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if (v8)
    {
      *a2 = v7;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E14354@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E145AC(a1, (void (*)(void))sub_232E16EEC, a2);
}

uint64_t sub_232E14368@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232E16EA8();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if (v7 != 4)
    {
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E14450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, &qword_255FFD8E8, (unint64_t *)type metadata accessor for OpaqueActivityContent, &qword_2542379A0, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent, a2);
}

uint64_t sub_232E14474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, &qword_255FFD8E0, (unint64_t *)type metadata accessor for ActivityUIDismissalPolicy, &qword_255FFC488, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy, a2);
}

uint64_t sub_232E14498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v3 = sub_232E6EE44();
    v5 = v4;
    sub_232E16E64();
    sub_232E6ED9C();
    sub_232DE8D98(v3, v5);
    result = swift_release();
    if ((_QWORD)v8 != 1)
    {
      *(_QWORD *)a2 = v7;
      *(_OWORD *)(a2 + 8) = v8;
      *(_OWORD *)(a2 + 24) = v9;
      *(_OWORD *)(a2 + 40) = v10;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E14598@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E145AC(a1, (void (*)(void))sub_232E16E20, a2);
}

uint64_t sub_232E145AC@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v5 = sub_232E6EE44();
    v7 = v6;
    a2();
    sub_232E6ED9C();
    sub_232DE8D98(v5, v7);
    result = swift_release();
    if (v9 != 1)
    {
      *a3 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E146A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, &qword_254237420, (unint64_t *)type metadata accessor for ActivityRequest, &qword_255FFBFD8, (uint64_t)&protocol conformance descriptor for ActivityRequest, a2);
}

uint64_t sub_232E146C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, &qword_255FFD8C0, (unint64_t *)type metadata accessor for ActivityPlatterDismissalPolicy, &qword_255FFD8C8, (uint64_t)&protocol conformance descriptor for ActivityPlatterDismissalPolicy, a2);
}

uint64_t sub_232E146E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E14790(a1, (void (*)(void))sub_232DFD80C, a2);
}

uint64_t sub_232E146FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, &qword_2542379D0, (unint64_t *)type metadata accessor for OpaqueActivityPayload, &qword_2542378A0, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload, a2);
}

uint64_t sub_232E14720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, &qword_254236840, (unint64_t *)type metadata accessor for ActivityDescriptorContentState, &qword_254237AF8, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState, a2);
}

uint64_t sub_232E14744@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E14790(a1, (void (*)(void))sub_232DEBD34, a2);
}

uint64_t sub_232E14758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232E13D44(a1, qword_254237A40, (unint64_t *)type metadata accessor for ActivityDescriptor, &qword_254237EA0, (uint64_t)&protocol conformance descriptor for ActivityDescriptor, a2);
}

uint64_t sub_232E1477C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E14790(a1, (void (*)(void))sub_232DF5174, a2);
}

uint64_t sub_232E14790@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v5 = sub_232E6EE44();
    v7 = v6;
    a2();
    sub_232E6ED9C();
    sub_232DE8D98(v5, v7);
    result = swift_release();
    if (v9)
    {
      *a3 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E14880()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFC758);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC758);
  return sub_232E6EF1C();
}

id sub_232E14900()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActivityAuthorizationClient()), sel_init);
  qword_25600FDD0 = (uint64_t)result;
  return result;
}

uint64_t sub_232E1492C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  objc_class *v13;
  char *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];
  objc_super v26;

  v1 = sub_232E6F3C0();
  v23 = *(_QWORD *)(v1 - 8);
  v24 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v22 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_232E6F3A8();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v3);
  v5 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient__activityAuthorizationPublisher;
  __swift_instantiateConcreteTypeFromMangledName(qword_255FFC160);
  swift_allocObject();
  v7 = v0;
  *(_QWORD *)&v0[v6] = sub_232E6EFAC();
  v8 = OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient__frequentUpdatesPublisher;
  swift_allocObject();
  *(_QWORD *)&v7[v8] = sub_232E6EFAC();
  v9 = OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient__activityAuthorizationLevelPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC158);
  swift_allocObject();
  *(_QWORD *)&v7[v9] = sub_232E6EFAC();
  v10 = OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_connection;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_connection] = 0;
  *(_DWORD *)&v7[OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_serverStartupToken] = -1;
  v11 = OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue;
  sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  sub_232E6F0F0();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8((unint64_t *)&qword_254238620, v4, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v22, *MEMORY[0x24BEE5758], v24);
  *(_QWORD *)&v7[v11] = sub_232E6F3F0();
  v12 = *(void **)&v7[v10];
  *(_QWORD *)&v7[v10] = 0;

  v13 = (objc_class *)type metadata accessor for ActivityAuthorizationClient();
  v26.receiver = v7;
  v26.super_class = v13;
  v14 = (char *)objc_msgSendSuper2(&v26, sel_init);
  v15 = *(NSObject **)&v14[OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue];
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_232E16DF0;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_232DDD4AC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_33;
  v18 = _Block_copy(aBlock);
  v19 = v14;
  swift_retain();
  swift_release();
  dispatch_sync(v15, v18);

  _Block_release(v18);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v15 & 1) == 0)
    return (uint64_t)v19;
  __break(1u);
  return result;
}

void sub_232E14D0C()
{
  char *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v1 = OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_connection;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_connection])
  {
    v2 = v0;
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232E16D70();
    v3 = (void *)sub_232E6F438();
    if (v3)
    {
      v4 = *(void **)&v0[v1];
      *(_QWORD *)&v2[v1] = v3;
      v5 = v3;

      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v2;
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = sub_232E16DB4;
      *(_QWORD *)(v7 + 24) = v6;
      v9[4] = sub_232DE068C;
      v9[5] = v7;
      v9[0] = MEMORY[0x24BDAC760];
      v9[1] = 1107296256;
      v9[2] = sub_232DE0650;
      v9[3] = &block_descriptor_15;
      v8 = _Block_copy(v9);
      v2;
      swift_retain();
      swift_release();
      objc_msgSend(v5, sel_configureConnection_, v8);
      _Block_release(v8);
      LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v8 & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        sub_232E1536C();
        swift_release();

      }
    }
  }
}

void sub_232E14EA8(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256012308);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256013830);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue));
  v18 = sub_232E1512C;
  v19 = 0;
  v10 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_18;
  v11 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v18 = sub_232E15138;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_21;
  v12 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  v18 = sub_232E15144;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_24;
  v13 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInvalidationHandler_, v13);
  _Block_release(v13);

}

void sub_232E1512C(uint64_t a1)
{
  sub_232E15150(a1, "Authorization Service: Activated");
}

void sub_232E15138(uint64_t a1)
{
  sub_232E15150(a1, "Authorization Service: Interrupted");
}

void sub_232E15144(uint64_t a1)
{
  sub_232E15150(a1, "Authorization Service: Invalidated");
}

void sub_232E15150(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_255FFC6D8 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_255FFC758);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232E15224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _OWORD v10[2];

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    sub_232E14D0C();
    v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_connection);
    if (v8)
    {
      v9 = v8;
      if (objc_msgSend(v9, sel_remoteTarget))
      {
        sub_232E6F498();

        swift_unknownObjectRelease();
        sub_232DDD798((uint64_t)v10, &qword_2542382E8);
      }
      else
      {
        memset(v10, 0, sizeof(v10));
        sub_232DDD798((uint64_t)v10, &qword_2542382E8);
        objc_msgSend(v9, sel_activate);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_232E1536C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232E16D68;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_6;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_255FFC6D8 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_255FFC758);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232E15540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232E15224();

  }
}

uint64_t sub_232E15590()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  *v5 = v6;
  (*((void (**)(_QWORD *, _QWORD, NSObject *, double))isa + 13))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*((void (**)(_QWORD *, NSObject *))isa + 1))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232E15224();
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_connection);
  if (!v8)
  {
    if (qword_255FFC6D8 != -1)
      swift_once();
    v9 = sub_232E6EF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_255FFC758);
    v1 = sub_232E6EF10();
    v10 = sub_232E6F384();
    if (os_log_type_enabled(v1, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_232DDB000, v1, v10, "Authorization Service: Failed to establish a connection", v11, 2u);
      MEMORY[0x23492A1F0](v11, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v8;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_232DE939C((uint64_t)v18, (uint64_t)v19, &qword_2542382E8);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3F8);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v17[1];
    }
  }
  else
  {
    sub_232DDD798((uint64_t)v19, &qword_2542382E8);
  }
  if (qword_255FFC6D8 != -1)
    goto LABEL_20;
LABEL_15:
  v13 = sub_232E6EF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_255FFC758);
  v14 = sub_232E6EF10();
  v15 = sub_232E6F384();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_232DDB000, v14, v15, "Autorization Service: Failed to cast connection to server interface protocol", v16, 2u);
    MEMORY[0x23492A1F0](v16, -1, -1);
  }

LABEL_18:
  return 0;
}

id sub_232E15868()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityAuthorizationClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ActivityAuthorizationClient()
{
  return objc_opt_self();
}

uint64_t sub_232E15920(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_232E15FC4(a1, a2, a3, (SEL *)&selRef_setActivitiesAuthorizationForBundleIdentifier_options_error_);
}

uint64_t sub_232E15970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  id v12;
  uint64_t v13;
  id v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (id *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
    __break(1u);
  v8 = sub_232E15590();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (void *)sub_232E6F1E0();
    v16[0] = 0;
    v11 = objc_msgSend(v9, sel_clearActivitiesAuthorizationForBundleIdentifier_error_, v10, v16);

    if ((v11 & 1) != 0)
    {
      v12 = v16[0];
    }
    else
    {
      v15 = v16[0];
      sub_232E6EDF0();

      swift_willThrow();
    }
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_232DF9980();
    swift_allocError();
    *(_OWORD *)v13 = xmmword_232E70D00;
    *(_OWORD *)(v13 + 16) = 0u;
    *(_OWORD *)(v13 + 32) = 0u;
    *(_OWORD *)(v13 + 48) = 0u;
    *(_QWORD *)(v13 + 64) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_232E15B2C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  char v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;

  v3 = sub_232E6F12C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v1 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x24BEE5610], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_232E6F144();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    result = sub_232E15590();
    v11 = 3;
    if (result)
    {
      v12 = (void *)result;
      v13 = (void *)sub_232E6F1E0();
      v14 = objc_msgSend(v12, sel_activityAuthorizationsCountForBundleIdentifier_, v13);

      v15 = objc_msgSend(v14, sel_integerValue);
      result = swift_unknownObjectRelease();
      if (v15 == (id)2)
        v16 = 1;
      else
        v16 = 3;
      if (v15 == (id)1)
        v11 = 0;
      else
        v11 = v16;
    }
    *a1 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_232E15C70(uint64_t a1, uint64_t a2)
{
  return sub_232E15CA8(a1, a2, (SEL *)&selRef_subscribeToAuthorizationLevelChangesForBundleIdentifier_);
}

uint64_t sub_232E15C8C(uint64_t a1, uint64_t a2)
{
  return sub_232E15CA8(a1, a2, (SEL *)&selRef_unsubscribeToAuthorizationLevelChangesForBundleIdentifier_);
}

uint64_t sub_232E15CA8(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = sub_232E6F12C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x24BEE5610], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_232E6F144();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    v13 = sub_232E15590();
    if (v13)
    {
      v14 = (void *)v13;
      v15 = (void *)sub_232E6F1E0();
      v16 = objc_msgSend(v14, *a3, v15);

      if ((v16 & 1) == 0)
      {
        sub_232DF9980();
        swift_allocError();
        *(_OWORD *)v17 = xmmword_232E70D00;
        *(_OWORD *)(v17 + 16) = 0u;
        *(_OWORD *)(v17 + 32) = 0u;
        *(_OWORD *)(v17 + 48) = 0u;
        *(_QWORD *)(v17 + 64) = 0;
        swift_willThrow();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      sub_232DF9980();
      swift_allocError();
      *(_OWORD *)v18 = xmmword_232E70D00;
      *(_OWORD *)(v18 + 16) = 0u;
      *(_OWORD *)(v18 + 32) = 0u;
      *(_OWORD *)(v18 + 48) = 0u;
      *(_QWORD *)(v18 + 64) = 0;
      return swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_232E15E48(uint64_t a1, uint64_t a2)
{
  return sub_232E15E60(a1, a2, (SEL *)&selRef_areActivitiesEnabledForBundleIdentifier_);
}

uint64_t sub_232E15E54(uint64_t a1, uint64_t a2)
{
  return sub_232E15E60(a1, a2, (SEL *)&selRef_areFrequentPushesEnabledForBundleIdentifier_);
}

uint64_t sub_232E15E60(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;

  v5 = sub_232E6F12C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x24BEE5610], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_232E6F144();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    v13 = sub_232E15590();
    if (!v13)
      return 0;
    v14 = (void *)v13;
    v15 = (void *)sub_232E6F1E0();
    v16 = objc_msgSend(v14, *a3, v15);
    swift_unknownObjectRelease();

    return (uint64_t)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_232E15F74(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_232E15FC4(a1, a2, a3, (SEL *)&selRef_setFrequentPushesEnabledForBundleIdentifier_options_error_);
}

uint64_t sub_232E15FC4(uint64_t a1, uint64_t a2, char *a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  void *v13;
  char v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  _QWORD v32[3];
  SEL *v33;
  id v34[2];

  v32[2] = a2;
  v33 = a4;
  v32[1] = a1;
  v34[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_232E6F12C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (_QWORD *)((char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a3;
  v13 = *(void **)(v4 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  v14 = a3[1];
  *v11 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x24BEE5610], v7, v9);
  v15 = v13;
  LOBYTE(a3) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((a3 & 1) == 0)
    __break(1u);
  v16 = sub_232E15590();
  if (v16)
  {
    v17 = (void *)v16;
    LOBYTE(v34[0]) = v12;
    BYTE1(v34[0]) = v14;
    sub_232E6EDD8();
    swift_allocObject();
    sub_232E6EDCC();
    sub_232DFEA98();
    v18 = sub_232E6EDC0();
    if (v5)
    {
      result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      v20 = v18;
      v21 = v19;
      v22 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v20, v21);
      swift_release();
      v23 = sub_232E6EE44();
      v25 = v24;

      v26 = (void *)sub_232E6F1E0();
      v27 = (void *)sub_232E6EE2C();
      v34[0] = 0;
      LOBYTE(v21) = objc_msgSend(v17, *v33, v26, v27, v34);

      if ((v21 & 1) != 0)
      {
        v28 = v34[0];
      }
      else
      {
        v31 = v34[0];
        sub_232E6EDF0();

        swift_willThrow();
      }
      sub_232DE8D98(v23, v25);
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_232DF9980();
    swift_allocError();
    *(_OWORD *)v29 = xmmword_232E70D00;
    *(_OWORD *)(v29 + 16) = 0u;
    *(_OWORD *)(v29 + 32) = 0u;
    *(_OWORD *)(v29 + 48) = 0u;
    *(_QWORD *)(v29 + 64) = 0;
    return swift_willThrow();
  }
  return result;
}

void *sub_232E1625C@<X0>(uint64_t a1@<X0>, SEL *a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  void *result;
  unsigned __int8 v14;
  uint64_t v15;

  v6 = sub_232E6F12C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(a1 + OBJC_IVAR____TtC11ActivityKit27ActivityAuthorizationClient_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x24BEE5610], v6, v8);
  v12 = v11;
  LOBYTE(v11) = sub_232E6F144();
  result = (void *)(*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    result = (void *)sub_232E15590();
    if (result)
    {
      v14 = objc_msgSend(result, *a2);
      result = (void *)swift_unknownObjectRelease();
    }
    else
    {
      v14 = 0;
    }
    *a3 = v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_232E1635C()
{
  return sub_232E16374();
}

uint64_t sub_232E16368()
{
  return sub_232E16374();
}

uint64_t sub_232E16374()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_255FFC160);
  sub_232DDF49C(&qword_255FFB5E8, qword_255FFC160, MEMORY[0x24BDB9CB0]);
  return sub_232E6F030();
}

uint64_t sub_232E163E4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC158);
  sub_232DDF49C(&qword_255FFB5E0, &qword_255FFC158, MEMORY[0x24BDB9CB0]);
  return sub_232E6F030();
}

uint64_t sub_232E16458()
{
  return sub_232E16680();
}

uint64_t sub_232E16464()
{
  return sub_232E16598();
}

uint64_t sub_232E16470()
{
  return sub_232E16614();
}

uint64_t sub_232E1648C()
{
  return sub_232E1653C();
}

uint64_t sub_232E164A8()
{
  return sub_232E6F3D8();
}

uint64_t sub_232E16504()
{
  return sub_232E1653C();
}

uint64_t sub_232E16520()
{
  return sub_232E1653C();
}

uint64_t sub_232E1653C()
{
  return sub_232E6F3D8();
}

uint64_t sub_232E1658C()
{
  return sub_232E16598();
}

uint64_t sub_232E16598()
{
  unsigned __int8 v1;

  sub_232E6F3D8();
  return v1;
}

uint64_t sub_232E165F8()
{
  return sub_232E16614();
}

uint64_t sub_232E16614()
{
  return sub_232E6F3D8();
}

uint64_t sub_232E16674()
{
  return sub_232E16680();
}

uint64_t sub_232E16680()
{
  unsigned __int8 v1;

  sub_232E6F3D8();
  return v1;
}

uint64_t sub_232E166DC(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  char v16;
  char v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD v22[2];
  _QWORD aBlock[6];

  v7 = sub_232E6F0D8();
  v22[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_232E6F108();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a3, sel_integerValue, v12);
  if (v15 == (id)2)
    v16 = 1;
  else
    v16 = 3;
  if (v15 == (id)1)
    v17 = 0;
  else
    v17 = v16;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v3;
  *(_QWORD *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a2;
  *(_BYTE *)(v18 + 40) = v17;
  aBlock[4] = sub_232E16D34;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDE158;
  aBlock[3] = &block_descriptor_6;
  v19 = _Block_copy(aBlock);
  v20 = v3;
  swift_bridgeObjectRetain();
  sub_232E6F0E4();
  v22[1] = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8(&qword_2542382C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D0);
  sub_232DDF49C(&qword_2542383A8, &qword_2542382D0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  MEMORY[0x234929818](0, v14, v9, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v22[0] + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return swift_release();
}

uint64_t sub_232E16908()
{
  swift_retain();
  swift_bridgeObjectRetain();
  sub_232E6EF94();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_232E16B14@<X0>(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  return sub_232E1625C(*(_QWORD *)(v1 + 16), (SEL *)&selRef_areFrequentPushesEnabledForCurrentProcess, a1);
}

uint64_t sub_232E16B34()
{
  return sub_232E16C44((SEL *)&selRef_setFrequentPushesEnabledForBundleIdentifier_options_error_);
}

uint64_t sub_232E16B50@<X0>(_BYTE *a1@<X8>)
{
  return sub_232E16CA0((SEL *)&selRef_areFrequentPushesEnabledForBundleIdentifier_, a1);
}

uint64_t sub_232E16B6C()
{
  return sub_232E16BA4((SEL *)&selRef_unsubscribeToAuthorizationLevelChangesForBundleIdentifier_);
}

uint64_t sub_232E16B88()
{
  return sub_232E16BA4((SEL *)&selRef_subscribeToAuthorizationLevelChangesForBundleIdentifier_);
}

uint64_t sub_232E16BA4(SEL *a1)
{
  uint64_t v1;

  return sub_232E15CA8(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_232E16BD0@<X0>(char *a1@<X8>)
{
  return sub_232E15B2C(a1);
}

uint64_t sub_232E16C00()
{
  return sub_232E15970();
}

uint64_t sub_232E16C28()
{
  return sub_232E16C44((SEL *)&selRef_setActivitiesAuthorizationForBundleIdentifier_options_error_);
}

uint64_t sub_232E16C44(SEL *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7[2];

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 41);
  v7[0] = *(_BYTE *)(v1 + 40);
  v7[1] = v5;
  return sub_232E15FC4(v3, v4, v7, a1);
}

uint64_t sub_232E16C84@<X0>(_BYTE *a1@<X8>)
{
  return sub_232E16CA0((SEL *)&selRef_areActivitiesEnabledForBundleIdentifier_, a1);
}

uint64_t sub_232E16CA0@<X0>(SEL *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_232E15E60(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a1);
  *a2 = result & 1;
  return result;
}

void *sub_232E16CE8@<X0>(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  return sub_232E1625C(*(_QWORD *)(v1 + 16), (SEL *)&selRef_areActivitiesEnabledForCurrentProcess, a1);
}

uint64_t sub_232E16D08()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_232E16D34()
{
  return sub_232E16908();
}

uint64_t sub_232E16D44()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232E16D68(uint64_t a1)
{
  uint64_t v1;

  sub_232E15540(a1, v1);
}

unint64_t sub_232E16D70()
{
  unint64_t result;

  result = qword_255FFC630;
  if (!qword_255FFC630)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationServiceDefinition, &type metadata for ActivityAuthorizationServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_255FFC630);
  }
  return result;
}

void sub_232E16DB4(void *a1)
{
  uint64_t v1;

  sub_232E14EA8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232E16DBC()
{
  return swift_deallocObject();
}

uint64_t sub_232E16DCC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232E16DF0()
{
  sub_232E15224();
}

uint64_t sub_232E16E10()
{
  return swift_deallocObject();
}

unint64_t sub_232E16E20()
{
  unint64_t result;

  result = qword_255FFD8D0;
  if (!qword_255FFD8D0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoSPredicate, &type metadata for ActivityQoSPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFD8D0);
  }
  return result;
}

unint64_t sub_232E16E64()
{
  unint64_t result;

  result = qword_255FFD8D8;
  if (!qword_255FFD8D8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPredicate, &type metadata for ActivityPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFD8D8);
  }
  return result;
}

unint64_t sub_232E16EA8()
{
  unint64_t result;

  result = qword_2542377D8;
  if (!qword_2542377D8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityState, &type metadata for ActivityState);
    atomic_store(result, (unint64_t *)&qword_2542377D8);
  }
  return result;
}

unint64_t sub_232E16EEC()
{
  unint64_t result;

  result = qword_255FFB558;
  if (!qword_255FFB558)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProminencePredicate, &type metadata for ActivityProminencePredicate);
    atomic_store(result, (unint64_t *)&qword_255FFB558);
  }
  return result;
}

unint64_t sub_232E16F30()
{
  unint64_t result;

  result = qword_254238418;
  if (!qword_254238418)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAttributesType, &type metadata for ActivityAttributesType);
    atomic_store(result, (unint64_t *)&qword_254238418);
  }
  return result;
}

id ActivityFrequentUpdatesObservationClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_232E16FC8()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_254238060);
  __swift_project_value_buffer(v0, (uint64_t)qword_254238060);
  return sub_232E6EF1C();
}

id ActivityFrequentUpdatesObservationClient.init()()
{
  void *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  objc_super v6;

  v1 = qword_2542383A0;
  v2 = v0;
  if (v1 != -1)
    swift_once();
  v3 = (void *)qword_2542382C0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11ActivityKit40ActivityFrequentUpdatesObservationClient_singleton] = qword_2542382C0;
  v4 = v3;

  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ActivityFrequentUpdatesObservationClient();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_232E170D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB478);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB420);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11ActivityKit40ActivityFrequentUpdatesObservationClient_singleton);
  v10 = (uint64_t *)(v9 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activities);
  swift_beginAccess();
  v11 = MEMORY[0x24BEE4B08];
  if (*v10)
    v11 = *v10;
  v14 = v11;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB480);
  sub_232E6F018();
  v14 = *(_QWORD *)(v9
                  + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activityDiffPublisher);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D8);
  sub_232DDF49C(&qword_255FFB470, &qword_255FFB478, MEMORY[0x24BDB9DF8]);
  sub_232DDF49C(&qword_255FFB458, &qword_2542382D8, MEMORY[0x24BDB9CB0]);
  sub_232E6F06C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_232DDF49C(&qword_255FFB418, &qword_255FFB420, MEMORY[0x24BDB9798]);
  v12 = sub_232E6F030();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

id ActivityFrequentUpdatesObservationClient.__deallocating_deinit(uint64_t a1)
{
  return sub_232DFC954(a1, type metadata accessor for ActivityFrequentUpdatesObservationClient);
}

uint64_t method lookup function for ActivityFrequentUpdatesObservationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityFrequentUpdatesObservationClient.subscribeToActivitiesExceedingReducedBudget()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t (*sub_232E17300())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_232E17348(uint64_t a1)
{
  sub_232DE17C8(a1, "Frequent updates observation service: interrupted");
}

void sub_232E17354(uint64_t a1)
{
  sub_232DE17C8(a1, "Frequent updates observation service: invalidated");
}

void sub_232E17360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232DE9BB8();

  }
}

id sub_232E173B0()
{
  return sub_232DFC954(0, _s11ActivityKit9SingletonCMa_1);
}

uint64_t sub_232E17418(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)();
  _QWORD *v5;
  uint64_t inited;
  uint64_t v7;
  _QWORD v9[4];
  uint64_t v10;

  v4 = sub_232E17300();
  if (*v5)
  {
    swift_bridgeObjectRetain();
    sub_232E17794(&v10, a1, a2);
    ((void (*)(_QWORD *, _QWORD))v4)(v9, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    ((void (*)(_QWORD *, _QWORD))v4)(v9, 0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232E70DA0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  v7 = sub_232E392E0(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v9[0] = v7;
  sub_232E6EF94();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E1762C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = *v2;
  sub_232E6F780();
  sub_232E6F21C();
  result = sub_232E6F7B0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = result & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v10 = *(_QWORD *)(v5 + 48);
    v11 = (_QWORD *)(v10 + 16 * v8);
    v12 = *v11 == a1 && v11[1] == a2;
    if (v12 || (result = sub_232E6F6E4(), (result & 1) != 0))
    {
LABEL_7:
      v13 = (_QWORD *)(v10 + 16 * v8);
      result = swift_bridgeObjectRelease();
      *v13 = a1;
      v13[1] = a2;
      return result;
    }
    v14 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      v15 = (_QWORD *)(v10 + 16 * v8);
      if (*v15 != a1 || v15[1] != a2)
      {
        result = sub_232E6F6E4();
        if ((result & 1) == 0)
          continue;
      }
      goto LABEL_7;
    }
  }
  if (*(_QWORD *)(v5 + 16) >= *(_QWORD *)(v5 + 24))
  {
    __break(1u);
    goto LABEL_21;
  }
  *(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) |= 1 << v8;
  v17 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v8);
  *v17 = a1;
  v17[1] = a2;
  v18 = *(_QWORD *)(v5 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v5 + 16) = v20;
  return result;
}

uint64_t sub_232E17794(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_232E6F780();
  swift_bridgeObjectRetain();
  sub_232E6F21C();
  v8 = sub_232E6F7B0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_232E6F6E4() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_232E6F6E4() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_232E17C1C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_232E17940()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD920);
  v3 = sub_232E6F4C8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_232E6F780();
      sub_232E6F21C();
      result = sub_232E6F7B0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_232E17C1C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_232E17940();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_232E17DB4();
      goto LABEL_22;
    }
    sub_232E17F64();
  }
  v11 = *v4;
  sub_232E6F780();
  sub_232E6F21C();
  result = sub_232E6F7B0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_232E6F6E4(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_232E6F708();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_232E6F6E4();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_232E17DB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD920);
  v2 = *v0;
  v3 = sub_232E6F4BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_232E17F64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD920);
  v3 = sub_232E6F4C8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_232E6F780();
    swift_bridgeObjectRetain();
    sub_232E6F21C();
    result = sub_232E6F7B0();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_232E18210(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_232E6F780();
  swift_bridgeObjectRetain();
  sub_232E6F21C();
  v6 = sub_232E6F7B0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_232E6F6E4() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_232E6F6E4() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_232E17DB4();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_232E1839C(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_232E1839C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_232E6F4B0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_232E6F780();
        swift_bridgeObjectRetain();
        sub_232E6F21C();
        v10 = sub_232E6F7B0();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_232E18560()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232E18584(uint64_t a1)
{
  uint64_t v1;

  sub_232E17360(a1, v1);
}

uint64_t sub_232E1858C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_232E185B0()
{
  return swift_deallocObject();
}

uint64_t sub_232E185C0()
{
  return swift_deallocObject();
}

uint64_t sub_232E185D0()
{
  return swift_deallocObject();
}

uint64_t sub_232E185E0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_232E1861C()
{
  return swift_release();
}

uint64_t sub_232E1865C()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFB5F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFB5F0);
  return sub_232E6EF1C();
}

uint64_t sub_232E186CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11ActivityKit11AlertClient_delegate;
  swift_beginAccess();
  return MEMORY[0x23492A28C](v1);
}

uint64_t sub_232E18718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC11ActivityKit11AlertClient_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_232E18780(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11ActivityKit11AlertClient_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x23492A28C](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_232E187F4;
}

void sub_232E187F4(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id AlertClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t AlertClient.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  objc_class *v11;
  char *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];
  objc_super v24;

  v1 = v0;
  v2 = sub_232E6F3C0();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_232E6F3A8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OBJC_IVAR____TtC11ActivityKit11AlertClient_connection;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ActivityKit11AlertClient_connection] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11ActivityKit11AlertClient_serverStartupToken] = -1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ActivityKit11AlertClient_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v20 = OBJC_IVAR____TtC11ActivityKit11AlertClient_queue;
  sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v9 = v0;
  sub_232E6F0F0();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8((unint64_t *)&qword_254238620, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DEA598();
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v4, *MEMORY[0x24BEE5758], v22);
  *(_QWORD *)&v0[v20] = sub_232E6F3F0();
  v10 = *(void **)&v0[v8];
  *(_QWORD *)&v1[v8] = 0;

  v11 = (objc_class *)type metadata accessor for AlertClient();
  v24.receiver = v9;
  v24.super_class = v11;
  v12 = (char *)objc_msgSendSuper2(&v24, sel_init);
  v13 = *(NSObject **)&v12[OBJC_IVAR____TtC11ActivityKit11AlertClient_queue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_232E18C08;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_232DDD4AC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_8;
  v16 = _Block_copy(aBlock);
  v17 = v12;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v13 & 1) == 0)
    return (uint64_t)v17;
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AlertClient()
{
  return objc_opt_self();
}

uint64_t sub_232E18BE4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232E18C08()
{
  sub_232E191FC();
}

uint64_t sub_232E18C28()
{
  return swift_deallocObject();
}

void sub_232E18C58()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKit11AlertClient_queue];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x24BEE5610], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = OBJC_IVAR____TtC11ActivityKit11AlertClient_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKit11AlertClient_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232E1A220();
    v10 = (void *)sub_232E6F438();
    if (v10)
    {
      v11 = *(void **)&v1[v9];
      *(_QWORD *)&v1[v9] = v10;
      v12 = v10;

      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v1;
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = sub_232E1A264;
      *(_QWORD *)(v14 + 24) = v13;
      aBlock[4] = sub_232DE068C;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_21_0;
      v15 = _Block_copy(aBlock);
      v1;
      swift_retain();
      swift_release();
      objc_msgSend(v12, sel_configureConnection_, v15);
      _Block_release(v15);
      LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v15 & 1) == 0)
      {
        sub_232E19344();
        swift_release();

        return;
      }
LABEL_8:
      __break(1u);
    }
  }
}

void sub_232E18E80(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256012598);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256013680);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKit11AlertClient_queue));
  v18 = sub_232E19104;
  v19 = 0;
  v10 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_24_0;
  v11 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v18 = sub_232E19110;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_27_0;
  v12 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  v18 = sub_232E1911C;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_30;
  v13 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInvalidationHandler_, v13);
  _Block_release(v13);

}

void sub_232E19104(uint64_t a1)
{
  sub_232E19128(a1, "Alert Service: Activated");
}

void sub_232E19110(uint64_t a1)
{
  sub_232E19128(a1, "Alert Service: Interrupted");
}

void sub_232E1911C(uint64_t a1)
{
  sub_232E19128(a1, "Alert Service: Invalidated");
}

void sub_232E19128(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_255FFB608 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_255FFB5F0);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232E191FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _OWORD v10[2];

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit11AlertClient_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    sub_232E18C58();
    v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit11AlertClient_connection);
    if (v8)
    {
      v9 = v8;
      if (objc_msgSend(v9, sel_remoteTarget))
      {
        sub_232E6F498();

        swift_unknownObjectRelease();
        sub_232DDD798((uint64_t)v10, &qword_2542382E8);
      }
      else
      {
        memset(v10, 0, sizeof(v10));
        sub_232DDD798((uint64_t)v10, &qword_2542382E8);
        objc_msgSend(v9, sel_activate);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_232E19344()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKit11AlertClient_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232E1A218;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_12_0;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKit11AlertClient_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_255FFB608 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_255FFB5F0);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232E19518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232E191FC();

  }
}

uint64_t sub_232E19568()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit11AlertClient_queue);
  *v5 = v6;
  (*((void (**)(_QWORD *, _QWORD, NSObject *, double))isa + 13))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*((void (**)(_QWORD *, NSObject *))isa + 1))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232E191FC();
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit11AlertClient_connection);
  if (!v8)
  {
    if (qword_255FFB608 != -1)
      swift_once();
    v9 = sub_232E6EF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_255FFB5F0);
    v1 = sub_232E6EF10();
    v10 = sub_232E6F384();
    if (os_log_type_enabled(v1, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_232DDB000, v1, v10, "AlertClient: Failed to establish a connection", v11, 2u);
      MEMORY[0x23492A1F0](v11, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v8;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_232DE939C((uint64_t)v18, (uint64_t)v19, &qword_2542382E8);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD958);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v17[1];
    }
  }
  else
  {
    sub_232DDD798((uint64_t)v19, &qword_2542382E8);
  }
  if (qword_255FFB608 != -1)
    goto LABEL_20;
LABEL_15:
  v13 = sub_232E6EF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_255FFB5F0);
  v14 = sub_232E6EF10();
  v15 = sub_232E6F384();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_232DDB000, v14, v15, "AlertClient: Failed to cast connection to server interface protocol", v16, 2u);
    MEMORY[0x23492A1F0](v16, -1, -1);
  }

LABEL_18:
  return 0;
}

id AlertClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlertClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall AlertClient.requestAlertDismissal(activityIdentifier:)(Swift::String activityIdentifier)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD948);
  sub_232E6F3D8();
}

uint64_t sub_232E19920@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;
  void *v3;
  void *v4;

  result = sub_232E19568();
  v3 = (void *)result;
  if (result)
  {
    v4 = (void *)sub_232E6F1E0();
    objc_msgSend(v3, sel_requestAlertDismissalWithActivityIdentifier_, v4);

    result = swift_unknownObjectRelease();
  }
  *a1 = v3 == 0;
  return result;
}

uint64_t sub_232E199A8@<X0>(BOOL *a1@<X8>)
{
  return sub_232E19920(a1);
}

uint64_t AlertClient.presentAlert(withActivityIdentifier:payload:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  _BYTE v46[34];

  v37 = a7;
  v38 = a8;
  v40 = a5;
  v41 = a6;
  v35 = a1;
  v36 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD730);
  MEMORY[0x24BDAC7A8](v8);
  v45 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - v14;
  v16 = type metadata accessor for AlertPayload();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v42 = (uint64_t)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void *)sub_232E6EE2C();
  v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v44(v15, 1, 1, v16);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v39 = v19;
  v20 = sub_232E6EE44();
  v22 = v21;
  sub_232DDDAD8(&qword_255FFD700, (uint64_t (*)(uint64_t))type metadata accessor for AlertPayload, (uint64_t)&protocol conformance descriptor for AlertPayload);
  sub_232E6ED9C();
  sub_232DDD798((uint64_t)v15, &qword_255FFD730);
  sub_232DE8D98(v20, v22);
  swift_release();
  v44(v12, 0, 1, v16);
  sub_232DE939C((uint64_t)v12, (uint64_t)v15, &qword_255FFD730);
  v23 = v45;
  sub_232E19D68((uint64_t)v15, v45);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v23, 1, v16) == 1)
  {
    __break(1u);
    sub_232DE8D98(v20, v22);
    swift_unexpectedError();
    __break(1u);
    sub_232DE8D98((uint64_t)&qword_255FFD730, (unint64_t)v15);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_232DDD798((uint64_t)v15, &qword_255FFD730);
    v24 = v42;
    sub_232E19DB0(v23, v42);

    v25 = (void *)sub_232E6EE2C();
    swift_allocObject();
    sub_232E6EDA8();
    v26 = sub_232E6EE44();
    v28 = v27;
    sub_232E1A064();
    sub_232E6ED9C();
    swift_release();
    sub_232DE8D98(v26, v28);

    v29 = v46[2];
    v30 = v46[3];
    v31 = v43 + OBJC_IVAR____TtC11ActivityKit11AlertClient_delegate;
    swift_beginAccess();
    if (MEMORY[0x23492A28C](v31))
    {
      v32 = *(_QWORD *)(v31 + 8);
      ObjectType = swift_getObjectType();
      v46[0] = v29;
      v46[1] = v30;
      (*(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8))(v35, v36, v24, v46, v37, v38, ObjectType, v32);
      swift_unknownObjectRelease();
    }
    return sub_232E02A9C(v24);
  }
  return result;
}

uint64_t sub_232E19D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E19DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AlertPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall AlertClient.dismissAlert(withActivityIdentifier:)(Swift::String withActivityIdentifier)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  object = withActivityIdentifier._object;
  countAndFlagsBits = withActivityIdentifier._countAndFlagsBits;
  v4 = v1 + OBJC_IVAR____TtC11ActivityKit11AlertClient_delegate;
  swift_beginAccess();
  if (MEMORY[0x23492A28C](v4))
  {
    v5 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 16))(countAndFlagsBits, object, ObjectType, v5);
    swift_unknownObjectRelease();
  }
}

unint64_t sub_232E1A064()
{
  unint64_t result;

  result = qword_255FFD950;
  if (!qword_255FFD950)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for AlertPresentationOptions, &type metadata for AlertPresentationOptions);
    atomic_store(result, (unint64_t *)&qword_255FFD950);
  }
  return result;
}

uint64_t sub_232E1A0A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC11ActivityKit11AlertClient_delegate;
  swift_beginAccess();
  result = MEMORY[0x23492A28C](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_232E1A100(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC11ActivityKit11AlertClient_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of AlertClientDelegate.presentAlert(activityIdentifier:payload:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t dispatch thunk of AlertClientDelegate.dismissAlert(activityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for AlertClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AlertClient.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AlertClient.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AlertClient.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t sub_232E1A1D0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_232E1A1F4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232E1A218(uint64_t a1)
{
  uint64_t v1;

  sub_232E19518(a1, v1);
}

unint64_t sub_232E1A220()
{
  unint64_t result;

  result = qword_255FFB408;
  if (!qword_255FFB408)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for AlertServiceDefinition, &type metadata for AlertServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_255FFB408);
  }
  return result;
}

void sub_232E1A264(void *a1)
{
  uint64_t v1;

  sub_232E18E80(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232E1A26C()
{
  return swift_deallocObject();
}

ActivityKit::ActivitySubscriptionOptions __swiftcall ActivitySubscriptionOptions.init(includePayloads:)(ActivityKit::ActivitySubscriptionOptions includePayloads)
{
  ActivityKit::ActivitySubscriptionOptions *v1;

  v1->includePayloads = includePayloads.includePayloads;
  return includePayloads;
}

uint64_t ActivityDescriptorState.init(descriptor:state:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = *a2;
  sub_232DEDD20(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  result = type metadata accessor for ActivityDescriptorState(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t type metadata accessor for ActivityDescriptorState(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFBF90);
}

uint64_t static ActivityOutputServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254238470 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254238570);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t ActivitySubscriptionOptions.includePayloads.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t ActivitySubscriptionOptions.description.getter()
{
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t sub_232E1A420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x506564756C636E69 && a2 == 0xEF7364616F6C7961)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E1A4D8()
{
  sub_232DEB390();
  return sub_232E6F7D4();
}

uint64_t sub_232E1A500()
{
  sub_232DEB390();
  return sub_232E6F7E0();
}

uint64_t ActivitySubscriptionOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237B90);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232DEB390();
  sub_232E6F7C8();
  sub_232E6F690();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_232E1A610()
{
  sub_232E6F4E0();
  sub_232E6F228();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_232E1A6B0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DEB288();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

void sub_232E1A774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  int64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for OpaqueActivityPayload(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237750);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - v14;
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v16 = *(_QWORD *)(a1 + 64);
  v37 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v38 = (unint64_t)(v17 + 63) >> 6;
  v39 = 0;
  v36 = v38 - 1;
  while (1)
  {
    if (v19)
    {
      v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v21 = v20 | (v39 << 6);
LABEL_8:
      v22 = *(_QWORD *)(a1 + 56);
      *v12 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v21);
      v23 = v22 + *(_QWORD *)(v40 + 72) * v21;
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC868);
      sub_232DED470(v23, (uint64_t)&v12[*(int *)(v24 + 48)], type metadata accessor for OpaqueActivityPayload);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
      goto LABEL_30;
    }
    v25 = v39 + 1;
    if (__OFADD__(v39, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v25 < v38)
    {
      v26 = *(_QWORD *)(v37 + 8 * v25);
      if (v26)
        goto LABEL_12;
      v27 = v39 + 2;
      ++v39;
      if (v25 + 1 < v38)
      {
        v26 = *(_QWORD *)(v37 + 8 * v27);
        if (v26)
          goto LABEL_15;
        v39 = v25 + 1;
        if (v25 + 2 < v38)
        {
          v26 = *(_QWORD *)(v37 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          v39 = v25 + 2;
          if (v25 + 3 < v38)
          {
            v26 = *(_QWORD *)(v37 + 8 * (v25 + 3));
            if (v26)
            {
              v25 += 3;
              goto LABEL_12;
            }
            v27 = v25 + 4;
            v39 = v25 + 3;
            if (v25 + 4 < v38)
              break;
          }
        }
      }
    }
LABEL_29:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC868);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 1, 1, v28);
    v19 = 0;
LABEL_30:
    sub_232E20418((uint64_t)v12, (uint64_t)v15);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC868);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v15, 1, v29) == 1)
      return;
    v30 = (uint64_t)&v15[*(int *)(v29 + 48)];
    v31 = *v15;
    sub_232DEDD20(v30, (uint64_t)v9, type metadata accessor for OpaqueActivityPayload);
    v32 = sub_232E104D4(v31);
    if ((v33 & 1) == 0)
    {
      sub_232DF51B8((uint64_t)v9, type metadata accessor for OpaqueActivityPayload);
      return;
    }
    sub_232DED470(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v40 + 72) * v32, (uint64_t)v6, type metadata accessor for OpaqueActivityPayload);
    v34 = _s11ActivityKit06OpaqueA7PayloadV2eeoiySbAC_ACtFZ_0((uint64_t)v6, (uint64_t)v9);
    sub_232DF51B8((uint64_t)v6, type metadata accessor for OpaqueActivityPayload);
    sub_232DF51B8((uint64_t)v9, type metadata accessor for OpaqueActivityPayload);
    if (!v34)
      return;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_15:
    v25 = v27;
LABEL_12:
    v19 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v25 << 6);
    v39 = v25;
    goto LABEL_8;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v38)
    {
      v39 = v36;
      goto LABEL_29;
    }
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_232E1AB54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E1AB88 + 4 * byte_232E72FA0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_232E1AB88()
{
  return 0x6574617473;
}

uint64_t sub_232E1AB9C()
{
  return 0x7470697263736564;
}

uint64_t sub_232E1ABB4()
{
  return 0x7364616F6C796170;
}

uint64_t sub_232E1ABCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E20004(a1, a2);
  *a3 = result;
  return result;
}

void sub_232E1ABF0(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_232E1ABFC()
{
  sub_232E1C450();
  return sub_232E6F7D4();
}

uint64_t sub_232E1AC24()
{
  sub_232E1C450();
  return sub_232E6F7E0();
}

uint64_t SubscribedActivity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD960);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E1C450();
  sub_232E6F7C8();
  v16 = 0;
  sub_232E6F684();
  if (!v2)
  {
    v15 = *(_BYTE *)(v3 + 16);
    v14 = 1;
    sub_232E1C494();
    sub_232E6F6A8();
    v9 = type metadata accessor for SubscribedActivity(0);
    v13 = 2;
    type metadata accessor for ActivityDescriptor();
    sub_232DDDAD8(&qword_254237400, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
    sub_232E6F6A8();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 28));
    v11[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD970);
    sub_232E1C4D8();
    sub_232E6F6A8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SubscribedActivity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v17 = a2;
  v18 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v18);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD988);
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SubscribedActivity(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v20 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_232E1C450();
  v12 = v21;
  sub_232E6F7BC();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  v13 = v5;
  v27 = 0;
  v14 = v19;
  *(_QWORD *)v10 = sub_232E6F618();
  *((_QWORD *)v10 + 1) = v15;
  v25 = 1;
  sub_232E16EA8();
  sub_232E6F63C();
  v10[16] = v26;
  v24 = 2;
  sub_232DDDAD8(&qword_254237EA0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
  sub_232E6F63C();
  sub_232DEDD20((uint64_t)v4, (uint64_t)&v10[*(int *)(v8 + 24)], (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD970);
  v23 = 3;
  sub_232E1C5A0();
  sub_232E6F63C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  *(_QWORD *)&v10[*(int *)(v8 + 28)] = v22;
  sub_232DED470((uint64_t)v10, v17, type metadata accessor for SubscribedActivity);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_232DF51B8((uint64_t)v10, type metadata accessor for SubscribedActivity);
}

uint64_t sub_232E1B148@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscribedActivity.init(from:)(a1, a2);
}

uint64_t sub_232E1B15C(_QWORD *a1)
{
  return SubscribedActivity.encode(to:)(a1);
}

uint64_t sub_232E1B174()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7470697263736564;
  if (*v0 != 1)
    v1 = 0x64616F6C796170;
  if (*v0)
    return v1;
  else
    return 0x6574617473;
}

uint64_t sub_232E1B1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E201C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_232E1B1F4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_232E1B200()
{
  sub_232E1C668();
  return sub_232E6F7D4();
}

uint64_t sub_232E1B228()
{
  sub_232E1C668();
  return sub_232E6F7E0();
}

uint64_t sub_232E1B250()
{
  return 12383;
}

uint64_t sub_232E1B260()
{
  sub_232E1C6F0();
  return sub_232E6F7D4();
}

uint64_t sub_232E1B288()
{
  sub_232E1C6F0();
  return sub_232E6F7E0();
}

uint64_t sub_232E1B2B0()
{
  sub_232E1C6AC();
  return sub_232E6F7D4();
}

uint64_t sub_232E1B2D8()
{
  sub_232E1C6AC();
  return sub_232E6F7E0();
}

uint64_t sub_232E1B300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E1B37C()
{
  sub_232E1C734();
  return sub_232E6F7D4();
}

uint64_t sub_232E1B3A4()
{
  sub_232E1C734();
  return sub_232E6F7E0();
}

uint64_t ActivityChange.Change.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int EnumCaseMultiPayload;
  uint64_t (*v19)(_QWORD);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5E8);
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for OpaqueActivityPayload(0);
  MEMORY[0x24BDAC7A8](v34);
  v35 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5F0);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v30);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5E0);
  v29 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityChange.Change(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5D8);
  v40 = *(_QWORD *)(v15 - 8);
  v41 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E1C668();
  sub_232E6F7C8();
  sub_232DED470(v39, (uint64_t)v14, type metadata accessor for ActivityChange.Change);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v19 = (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor;
      sub_232DEDD20((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      v44 = 1;
      sub_232E1C6F0();
      v20 = v31;
      v21 = v41;
      sub_232E6F660();
      sub_232DDDAD8(&qword_254237400, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
      v22 = v33;
      sub_232E6F6A8();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v22);
      v23 = (uint64_t)v8;
    }
    else
    {
      v19 = type metadata accessor for OpaqueActivityPayload;
      v25 = v35;
      sub_232DEDD20((uint64_t)v14, v35, type metadata accessor for OpaqueActivityPayload);
      v45 = 2;
      sub_232E1C6AC();
      v26 = v36;
      v21 = v41;
      sub_232E6F660();
      sub_232DDDAD8(qword_255FFC240, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
      v27 = v38;
      sub_232E6F6A8();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v27);
      v23 = v25;
    }
    sub_232DF51B8(v23, v19);
  }
  else
  {
    v24 = *v14;
    v43 = 0;
    sub_232E1C734();
    v21 = v41;
    sub_232E6F660();
    v42 = v24;
    sub_232E1C494();
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v17, v21);
}

uint64_t ActivityChange.Change.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  char v66;

  v55 = a2;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237858);
  v54 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v60 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237860);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237850);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237848);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivityChange.Change(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v45 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v45 - v20;
  v22 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_232E1C668();
  v23 = v62;
  sub_232E6F7BC();
  if (!v23)
  {
    v45 = v18;
    v46 = v15;
    v24 = v57;
    v25 = v58;
    v47 = v12;
    v48 = v21;
    v27 = v59;
    v26 = v60;
    v62 = v10;
    v28 = sub_232E6F648();
    if (*(_QWORD *)(v28 + 16) == 1)
    {
      if (*(_BYTE *)(v28 + 32))
      {
        if (*(_BYTE *)(v28 + 32) == 1)
        {
          v65 = 1;
          sub_232E1C6F0();
          v29 = v27;
          sub_232E6F5DC();
          type metadata accessor for ActivityDescriptor();
          sub_232DDDAD8(&qword_254237EA0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
          v30 = (uint64_t)v46;
          v31 = v53;
          sub_232E6F63C();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v31);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v25);
          v32 = (uint64_t)v61;
          swift_storeEnumTagMultiPayload();
          v33 = (uint64_t)v48;
          sub_232DEDD20(v30, (uint64_t)v48, type metadata accessor for ActivityChange.Change);
LABEL_12:
          sub_232DEDD20(v33, v55, type metadata accessor for ActivityChange.Change);
          return __swift_destroy_boxed_opaque_existential_1(v32);
        }
        v66 = 2;
        sub_232E1C6AC();
        v41 = v26;
        sub_232E6F5DC();
        type metadata accessor for OpaqueActivityPayload(0);
        sub_232DDDAD8(&qword_2542378A0, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
        v42 = (uint64_t)v47;
        v43 = v51;
        sub_232E6F63C();
        v44 = v56;
        (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v43);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v25);
        swift_storeEnumTagMultiPayload();
        v40 = v42;
      }
      else
      {
        v64 = 0;
        sub_232E1C734();
        sub_232E6F5DC();
        sub_232E16EA8();
        v38 = v50;
        sub_232E6F63C();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v38);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v25);
        v39 = v45;
        *v45 = v63;
        swift_storeEnumTagMultiPayload();
        v40 = (uint64_t)v39;
      }
      v33 = (uint64_t)v48;
      sub_232DEDD20(v40, (uint64_t)v48, type metadata accessor for ActivityChange.Change);
      v32 = (uint64_t)v61;
      goto LABEL_12;
    }
    v34 = sub_232E6F51C();
    swift_allocError();
    v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v36 = v62;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x24BEE26D0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v25);
  }
  v32 = (uint64_t)v61;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

uint64_t sub_232E1BE24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityChange.Change.init(from:)(a1, a2);
}

uint64_t sub_232E1BE38(_QWORD *a1)
{
  return ActivityChange.Change.encode(to:)(a1);
}

uint64_t ActivityChange.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityChange.changes.getter()
{
  return swift_bridgeObjectRetain();
}

ActivityKit::ActivityChange __swiftcall ActivityChange.init(identifier:changes:)(Swift::String identifier, Swift::OpaquePointer changes)
{
  uint64_t v2;
  ActivityKit::ActivityChange result;

  *(Swift::String *)v2 = identifier;
  *(Swift::OpaquePointer *)(v2 + 16) = changes;
  result.identifier = identifier;
  result.changes = changes;
  return result;
}

uint64_t sub_232E1BE8C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365676E616863;
  else
    return 0x696669746E656469;
}

uint64_t sub_232E1BECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E2031C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E1BEF0()
{
  sub_232E1C778();
  return sub_232E6F7D4();
}

uint64_t sub_232E1BF18()
{
  sub_232E1C778();
  return sub_232E6F7E0();
}

uint64_t ActivityChange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5F8);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E1C778();
  sub_232E6F7C8();
  v13 = 0;
  sub_232E6F684();
  if (!v2)
  {
    v11 = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237C98);
    sub_232E1C7BC(&qword_255FFC538, &qword_255FFC4E8, (uint64_t)&protocol conformance descriptor for ActivityChange.Change, MEMORY[0x24BEE12A0]);
    sub_232E6F6A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t ActivityChange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237868);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E1C778();
  sub_232E6F7BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_232E6F618();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237C98);
  v15 = 1;
  sub_232E1C7BC(&qword_2542377F0, &qword_2542377E0, (uint64_t)&protocol conformance descriptor for ActivityChange.Change, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_232E6F63C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E1C29C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ActivityChange.init(from:)(a1, a2);
}

uint64_t sub_232E1C2B0(_QWORD *a1)
{
  return ActivityChange.encode(to:)(a1);
}

uint64_t ActivityDescriptorState.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DED470(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
}

uint64_t ActivityDescriptorState.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActivityDescriptorState(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

BOOL static ActivityDescriptorState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((_s11ActivityKit0A10DescriptorV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for ActivityDescriptorState(0);
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

BOOL sub_232E1C364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (_s11ActivityKit0A10DescriptorV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

void _s11ActivityKit010SubscribedA0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if ((v4 || (sub_232E6F6E4() & 1) != 0) && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
  {
    v5 = type metadata accessor for SubscribedActivity(0);
    if ((_s11ActivityKit0A10DescriptorV2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v5 + 24), a2 + *(int *)(v5 + 24)) & 1) != 0)
      sub_232E1A774(*(_QWORD *)(a1 + *(int *)(v5 + 28)), *(_QWORD *)(a2 + *(int *)(v5 + 28)));
  }
}

unint64_t sub_232E1C450()
{
  unint64_t result;

  result = qword_255FFD968;
  if (!qword_255FFD968)
  {
    result = MEMORY[0x23492A124](&unk_232E73A2C, &type metadata for SubscribedActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD968);
  }
  return result;
}

unint64_t sub_232E1C494()
{
  unint64_t result;

  result = qword_255FFC4E0;
  if (!qword_255FFC4E0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityState, &type metadata for ActivityState);
    atomic_store(result, (unint64_t *)&qword_255FFC4E0);
  }
  return result;
}

unint64_t sub_232E1C4D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255FFD978;
  if (!qword_255FFD978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255FFD970);
    v2[0] = sub_232E1C55C();
    v2[1] = sub_232DDDAD8(qword_255FFC240, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255FFD978);
  }
  return result;
}

unint64_t sub_232E1C55C()
{
  unint64_t result;

  result = qword_255FFD980;
  if (!qword_255FFD980)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityUpdateFeed, &type metadata for ActivityUpdateFeed);
    atomic_store(result, (unint64_t *)&qword_255FFD980);
  }
  return result;
}

unint64_t sub_232E1C5A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255FFD990;
  if (!qword_255FFD990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255FFD970);
    v2[0] = sub_232E1C624();
    v2[1] = sub_232DDDAD8(&qword_2542378A0, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255FFD990);
  }
  return result;
}

unint64_t sub_232E1C624()
{
  unint64_t result;

  result = qword_255FFD998;
  if (!qword_255FFD998)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityUpdateFeed, &type metadata for ActivityUpdateFeed);
    atomic_store(result, (unint64_t *)&qword_255FFD998);
  }
  return result;
}

unint64_t sub_232E1C668()
{
  unint64_t result;

  result = qword_254237C08;
  if (!qword_254237C08)
  {
    result = MEMORY[0x23492A124](&unk_232E739DC, &type metadata for ActivityChange.Change.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C08);
  }
  return result;
}

unint64_t sub_232E1C6AC()
{
  unint64_t result;

  result = qword_254237C38;
  if (!qword_254237C38)
  {
    result = MEMORY[0x23492A124](&unk_232E7398C, &type metadata for ActivityChange.Change.PayloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C38);
  }
  return result;
}

unint64_t sub_232E1C6F0()
{
  unint64_t result;

  result = qword_254237C50;
  if (!qword_254237C50)
  {
    result = MEMORY[0x23492A124](&unk_232E7393C, &type metadata for ActivityChange.Change.DescriptorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C50);
  }
  return result;
}

unint64_t sub_232E1C734()
{
  unint64_t result;

  result = qword_254237C20;
  if (!qword_254237C20)
  {
    result = MEMORY[0x23492A124](&unk_232E738EC, &type metadata for ActivityChange.Change.StateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C20);
  }
  return result;
}

unint64_t sub_232E1C778()
{
  unint64_t result;

  result = qword_254237C78;
  if (!qword_254237C78)
  {
    result = MEMORY[0x23492A124](&unk_232E7389C, &type metadata for ActivityChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C78);
  }
  return result;
}

uint64_t sub_232E1C7BC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254237C98);
    v10 = sub_232DDDAD8(a2, type metadata accessor for ActivityChange.Change, a3);
    result = MEMORY[0x23492A124](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232E1C840(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232DEB244();
  a1[2] = sub_232DEB288();
  result = sub_232E1C874();
  a1[3] = result;
  return result;
}

unint64_t sub_232E1C874()
{
  unint64_t result;

  result = qword_255FFC490;
  if (!qword_255FFC490)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivitySubscriptionOptions, &type metadata for ActivitySubscriptionOptions);
    atomic_store(result, (unint64_t *)&qword_255FFC490);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityOutputServiceDefinition()
{
  return &type metadata for ActivityOutputServiceDefinition;
}

uint64_t initializeBufferWithCopyOfBuffer for SubscribedActivity(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v35 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = *(int *)(a3 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *(_QWORD *)v8 = *(uint64_t *)((char *)a2 + v7);
    *(_QWORD *)(v8 + 8) = v10;
    v11 = *(uint64_t *)((char *)a2 + v7 + 24);
    *(_QWORD *)(v8 + 16) = *(uint64_t *)((char *)a2 + v7 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    v12 = *(uint64_t *)((char *)a2 + v7 + 32);
    v13 = *(uint64_t *)((char *)a2 + v7 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v12, v13);
    *(_QWORD *)(v8 + 32) = v12;
    *(_QWORD *)(v8 + 40) = v13;
    v14 = *(_QWORD *)(v9 + 48);
    v15 = *(_QWORD *)(v9 + 56);
    v16 = *(_QWORD *)(v9 + 64);
    v17 = *(_QWORD *)(v9 + 72);
    v18 = *(_QWORD *)(v9 + 80);
    v19 = *(_BYTE *)(v9 + 88);
    sub_232E01E78();
    *(_QWORD *)(v8 + 48) = v14;
    *(_QWORD *)(v8 + 56) = v15;
    *(_QWORD *)(v8 + 64) = v16;
    *(_QWORD *)(v8 + 72) = v17;
    *(_QWORD *)(v8 + 80) = v18;
    *(_BYTE *)(v8 + 88) = v19;
    v20 = *(_QWORD *)(v9 + 104);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = v20;
    *(_DWORD *)(v8 + 112) = *(_DWORD *)(v9 + 112);
    *(_BYTE *)(v8 + 116) = *(_BYTE *)(v9 + 116);
    v21 = *(void **)(v9 + 120);
    *(_QWORD *)(v8 + 120) = v21;
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
    v22 = (int *)type metadata accessor for ActivityDescriptor();
    v23 = v22[12];
    v37 = v9 + v23;
    v38 = v8 + v23;
    v24 = sub_232E6EE74();
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = v21;
    v25(v38, v37, v24);
    v27 = v22[13];
    v28 = (_QWORD *)(v8 + v27);
    v29 = (_QWORD *)(v9 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = v22[14];
    v32 = (_QWORD *)(v8 + v31);
    v33 = (_QWORD *)(v9 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *(_BYTE *)(v8 + v22[15]) = *(_BYTE *)(v9 + v22[15]);
    *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SubscribedActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232DE8D98(*(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
  sub_232E03000();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v5 = v4 + *(int *)(type metadata accessor for ActivityDescriptor() + 48);
  v6 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SubscribedActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = *(_QWORD *)(a2 + v5 + 8);
  *(_QWORD *)v6 = *(_QWORD *)(a2 + v5);
  *(_QWORD *)(v6 + 8) = v8;
  v9 = *(_QWORD *)(a2 + v5 + 24);
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(a2 + v5 + 16);
  *(_QWORD *)(v6 + 24) = v9;
  v10 = *(_QWORD *)(a2 + v5 + 32);
  v11 = *(_QWORD *)(a2 + v5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_232DE4A2C(v10, v11);
  *(_QWORD *)(v6 + 32) = v10;
  *(_QWORD *)(v6 + 40) = v11;
  v12 = *(_QWORD *)(v7 + 48);
  v13 = *(_QWORD *)(v7 + 56);
  v14 = *(_QWORD *)(v7 + 64);
  v15 = *(_QWORD *)(v7 + 72);
  v16 = *(_QWORD *)(v7 + 80);
  v17 = *(_BYTE *)(v7 + 88);
  sub_232E01E78();
  *(_QWORD *)(v6 + 48) = v12;
  *(_QWORD *)(v6 + 56) = v13;
  *(_QWORD *)(v6 + 64) = v14;
  *(_QWORD *)(v6 + 72) = v15;
  *(_QWORD *)(v6 + 80) = v16;
  *(_BYTE *)(v6 + 88) = v17;
  v18 = *(_QWORD *)(v7 + 104);
  *(_QWORD *)(v6 + 96) = *(_QWORD *)(v7 + 96);
  *(_QWORD *)(v6 + 104) = v18;
  *(_DWORD *)(v6 + 112) = *(_DWORD *)(v7 + 112);
  *(_BYTE *)(v6 + 116) = *(_BYTE *)(v7 + 116);
  v19 = *(void **)(v7 + 120);
  *(_QWORD *)(v6 + 120) = v19;
  *(_BYTE *)(v6 + 128) = *(_BYTE *)(v7 + 128);
  *(_BYTE *)(v6 + 129) = *(_BYTE *)(v7 + 129);
  v20 = (int *)type metadata accessor for ActivityDescriptor();
  v21 = v20[12];
  v22 = v6 + v21;
  v23 = v7 + v21;
  v24 = sub_232E6EE74();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v19;
  v25(v22, v23, v24);
  v27 = v20[13];
  v28 = (_QWORD *)(v6 + v27);
  v29 = (_QWORD *)(v7 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = v20[14];
  v32 = (_QWORD *)(v6 + v31);
  v33 = (_QWORD *)(v7 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_BYTE *)(v6 + v20[15]) = *(_BYTE *)(v7 + v20[15]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscribedActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  void *v20;
  id v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)(a2 + v6);
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_QWORD *)(v8 + 40);
  sub_232DE4A2C(v9, v10);
  v11 = *(_QWORD *)(v7 + 32);
  v12 = *(_QWORD *)(v7 + 40);
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  sub_232DE8D98(v11, v12);
  v13 = *(_QWORD *)(v8 + 48);
  v14 = *(_QWORD *)(v8 + 56);
  v15 = *(_QWORD *)(v8 + 64);
  v16 = *(_QWORD *)(v8 + 72);
  v17 = *(_QWORD *)(v8 + 80);
  v18 = *(_BYTE *)(v8 + 88);
  sub_232E01E78();
  *(_QWORD *)(v7 + 48) = v13;
  *(_QWORD *)(v7 + 56) = v14;
  *(_QWORD *)(v7 + 64) = v15;
  *(_QWORD *)(v7 + 72) = v16;
  *(_QWORD *)(v7 + 80) = v17;
  *(_BYTE *)(v7 + 88) = v18;
  sub_232E03000();
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(v8 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + 112) = *(_BYTE *)(v8 + 112);
  *(_BYTE *)(v7 + 113) = *(_BYTE *)(v8 + 113);
  *(_BYTE *)(v7 + 114) = *(_BYTE *)(v8 + 114);
  *(_BYTE *)(v7 + 115) = *(_BYTE *)(v8 + 115);
  *(_BYTE *)(v7 + 116) = *(_BYTE *)(v8 + 116);
  v19 = *(void **)(v7 + 120);
  v20 = *(void **)(v8 + 120);
  *(_QWORD *)(v7 + 120) = v20;
  v21 = v20;

  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  *(_BYTE *)(v7 + 129) = *(_BYTE *)(v8 + 129);
  v22 = (int *)type metadata accessor for ActivityDescriptor();
  v23 = v22[12];
  v24 = v7 + v23;
  v25 = v8 + v23;
  v26 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = v22[13];
  v28 = (_QWORD *)(v7 + v27);
  v29 = (_QWORD *)(v8 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v22[14];
  v31 = (_QWORD *)(v7 + v30);
  v32 = (_QWORD *)(v8 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v22[15]) = *(_BYTE *)(v8 + v22[15]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SubscribedActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = *(_OWORD *)(a2 + v6 + 16);
  *(_OWORD *)v7 = *(_OWORD *)(a2 + v6);
  *(_OWORD *)(v7 + 16) = v9;
  *(_OWORD *)(v7 + 73) = *(_OWORD *)(a2 + v6 + 73);
  v10 = *(_OWORD *)(a2 + v6 + 64);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a2 + v6 + 48);
  *(_OWORD *)(v7 + 64) = v10;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + v6 + 32);
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(a2 + v6 + 96);
  v11 = *(_OWORD *)(a2 + v6 + 104);
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(a2 + v6 + 120);
  *(_OWORD *)(v7 + 104) = v11;
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(a2 + v6 + 128);
  *(_BYTE *)(v7 + 129) = *(_BYTE *)(a2 + v6 + 129);
  v12 = (int *)type metadata accessor for ActivityDescriptor();
  v13 = v12[12];
  v14 = v7 + v13;
  v15 = v8 + v13;
  v16 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_OWORD *)(v7 + v12[13]) = *(_OWORD *)(v8 + v12[13]);
  *(_OWORD *)(v7 + v12[14]) = *(_OWORD *)(v8 + v12[14]);
  *(_BYTE *)(v7 + v12[15]) = *(_BYTE *)(v8 + v12[15]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for SubscribedActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  void *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v8 + 32);
  v13 = *(_QWORD *)(v8 + 40);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  sub_232DE8D98(v12, v13);
  v14 = *(_QWORD *)(v9 + 80);
  v15 = *(_BYTE *)(v9 + 88);
  v16 = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 64) = v16;
  *(_QWORD *)(v8 + 80) = v14;
  *(_BYTE *)(v8 + 88) = v15;
  sub_232E03000();
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  *(_BYTE *)(v8 + 113) = *(_BYTE *)(v9 + 113);
  *(_BYTE *)(v8 + 114) = *(_BYTE *)(v9 + 114);
  *(_BYTE *)(v8 + 115) = *(_BYTE *)(v9 + 115);
  *(_BYTE *)(v8 + 116) = *(_BYTE *)(v9 + 116);
  v17 = *(void **)(v8 + 120);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);

  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  v18 = (int *)type metadata accessor for ActivityDescriptor();
  v19 = v18[12];
  v20 = v8 + v19;
  v21 = v9 + v19;
  v22 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = v18[13];
  v24 = (_QWORD *)(v8 + v23);
  v25 = (uint64_t *)(v9 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = v18[14];
  v29 = (_QWORD *)(v8 + v28);
  v30 = (uint64_t *)(v9 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + v18[15]) = *(_BYTE *)(v9 + v18[15]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribedActivity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E1D280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ActivityDescriptor();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SubscribedActivity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E1D308(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ActivityDescriptor();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t destroy for ActivityPresenter()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11ActivityKit17ActivityPresenterVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ActivityPresenter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ActivityPresenter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPresenter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityPresenter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityChange.Change(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void *v71;
  void (*v72)(char *, _QWORD, uint64_t, uint64_t);
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  int *v81;
  void (*v82)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v35 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v36 = sub_232E6EE98();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
      v37 = (int *)type metadata accessor for OpaqueActivityPayload(0);
      v38 = v37[5];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      v41 = sub_232E6EE74();
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
      v43(v39, v40, v41);
      v44 = v37[6];
      v45 = (_QWORD *)((char *)a1 + v44);
      v46 = (_QWORD *)((char *)a2 + v44);
      v47 = *v46;
      v48 = v46[1];
      sub_232DE4A2C(*v46, v48);
      *v45 = v47;
      v45[1] = v48;
      v81 = v37;
      v49 = v37[7];
      v50 = (_QWORD *)((char *)a1 + v49);
      v51 = (char *)a2 + v49;
      v52 = *(_QWORD *)((char *)a2 + v49);
      v53 = *(_QWORD *)((char *)a2 + v49 + 8);
      sub_232DE4A2C(v52, v53);
      *v50 = v52;
      v50[1] = v53;
      v54 = type metadata accessor for OpaqueActivityContent();
      v55 = *(int *)(v54 + 20);
      v56 = (char *)v50 + v55;
      v57 = &v51[v55];
      v79 = v42;
      v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
      v82 = v43;
      if (v80(&v51[v55], 1, v41))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v43(v56, v57, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v56, 0, 1, v41);
      }
      *(uint64_t *)((char *)v50 + *(int *)(v54 + 24)) = *(_QWORD *)&v51[*(int *)(v54 + 24)];
      v59 = v81[8];
      v60 = (char *)a1 + v59;
      v61 = (char *)a2 + v59;
      v62 = type metadata accessor for AlertConfiguration();
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v65 = sub_232E6EE08();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        v66(v60, v61, v65);
        v66(&v60[*(int *)(v62 + 20)], &v61[*(int *)(v62 + 20)], v65);
        v67 = *(int *)(v62 + 24);
        v68 = &v60[v67];
        v69 = &v61[v67];
        v70 = *((_QWORD *)v69 + 1);
        *(_QWORD *)v68 = *(_QWORD *)v69;
        *((_QWORD *)v68 + 1) = v70;
        v71 = (void *)*((_QWORD *)v69 + 2);
        *((_QWORD *)v68 + 2) = v71;
        v72 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56);
        swift_bridgeObjectRetain();
        v73 = v71;
        v72(v60, 0, 1, v62);
      }
      v74 = v81[9];
      v75 = (char *)a1 + v74;
      v76 = (char *)a2 + v74;
      if (v80(v76, 1, v41))
      {
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        v82(v75, v76, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v41);
      }
      goto LABEL_16;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      v10 = a2[4];
      v11 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_232DE4A2C(v10, v11);
      a1[4] = v10;
      a1[5] = v11;
      v12 = a2[6];
      v13 = a2[7];
      v14 = a2[8];
      v15 = a2[9];
      v16 = a2[10];
      v17 = *((_BYTE *)a2 + 88);
      sub_232E01E78();
      a1[6] = v12;
      a1[7] = v13;
      a1[8] = v14;
      a1[9] = v15;
      a1[10] = v16;
      *((_BYTE *)a1 + 88) = v17;
      v18 = a2[13];
      a1[12] = a2[12];
      a1[13] = v18;
      *((_DWORD *)a1 + 28) = *((_DWORD *)a2 + 28);
      *((_BYTE *)a1 + 116) = *((_BYTE *)a2 + 116);
      v19 = (void *)a2[15];
      a1[15] = v19;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v20 = (int *)type metadata accessor for ActivityDescriptor();
      v21 = v20[12];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_232E6EE74();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = v19;
      v25(v22, v23, v24);
      v27 = v20[13];
      v28 = (_QWORD *)((char *)a1 + v27);
      v29 = (_QWORD *)((char *)a2 + v27);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      v31 = v20[14];
      v32 = (_QWORD *)((char *)a1 + v31);
      v33 = (_QWORD *)((char *)a2 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      *((_BYTE *)a1 + v20[15]) = *((_BYTE *)a2 + v20[15]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for ActivityChange.Change(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v5 = sub_232E6EE98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = (int *)type metadata accessor for OpaqueActivityPayload(0);
    v7 = a1 + v6[5];
    v8 = sub_232E6EE74();
    v9 = *(_QWORD *)(v8 - 8);
    v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v19(v7, v8);
    sub_232DE8D98(*(_QWORD *)(a1 + v6[6]), *(_QWORD *)(a1 + v6[6] + 8));
    v10 = a1 + v6[7];
    sub_232DE8D98(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
    v11 = v10 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v12(v11, 1, v8))
      v19(v11, v8);
    v13 = a1 + v6[8];
    v14 = type metadata accessor for AlertConfiguration();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      v15 = sub_232E6EE08();
      v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
      v16(v13, v15);
      v16(v13 + *(int *)(v14 + 20), v15);
      v17 = v13 + *(int *)(v14 + 24);
      swift_bridgeObjectRelease();

    }
    v18 = a1 + v6[9];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v18, 1, v8);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v19)(v18, v8);
  }
  else if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_232DE8D98(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    sub_232E03000();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v3 = a1 + *(int *)(type metadata accessor for ActivityDescriptor() + 48);
    v4 = sub_232E6EE74();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ActivityChange.Change(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  void (*v70)(char *, _QWORD, uint64_t, uint64_t);
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  int *v79;
  void (*v80)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v34 = sub_232E6EE98();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
    v35 = (int *)type metadata accessor for OpaqueActivityPayload(0);
    v36 = v35[5];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_232E6EE74();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
    v41(v37, v38, v39);
    v42 = v35[6];
    v43 = (_QWORD *)((char *)a1 + v42);
    v44 = (_QWORD *)((char *)a2 + v42);
    v45 = *v44;
    v46 = v44[1];
    sub_232DE4A2C(*v44, v46);
    *v43 = v45;
    v43[1] = v46;
    v79 = v35;
    v47 = v35[7];
    v48 = (_QWORD *)((char *)a1 + v47);
    v49 = (char *)a2 + v47;
    v50 = *(_QWORD *)((char *)a2 + v47);
    v51 = *(_QWORD *)((char *)a2 + v47 + 8);
    sub_232DE4A2C(v50, v51);
    *v48 = v50;
    v48[1] = v51;
    v52 = type metadata accessor for OpaqueActivityContent();
    v53 = *(int *)(v52 + 20);
    v54 = (char *)v48 + v53;
    v55 = &v49[v53];
    v77 = v40;
    v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    v80 = v41;
    if (v78(&v49[v53], 1, v39))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v41(v54, v55, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v54, 0, 1, v39);
    }
    *(uint64_t *)((char *)v48 + *(int *)(v52 + 24)) = *(_QWORD *)&v49[*(int *)(v52 + 24)];
    v57 = v79[8];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    v60 = type metadata accessor for AlertConfiguration();
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = sub_232E6EE08();
      v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
      v64(v58, v59, v63);
      v64(&v58[*(int *)(v60 + 20)], &v59[*(int *)(v60 + 20)], v63);
      v65 = *(int *)(v60 + 24);
      v66 = &v58[v65];
      v67 = &v59[v65];
      v68 = *((_QWORD *)v67 + 1);
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = v68;
      v69 = (void *)*((_QWORD *)v67 + 2);
      *((_QWORD *)v66 + 2) = v69;
      v70 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56);
      swift_bridgeObjectRetain();
      v71 = v69;
      v70(v58, 0, 1, v60);
    }
    v72 = v79[9];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    if (v78(v74, 1, v39))
    {
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      v80(v73, v74, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v73, 0, 1, v39);
    }
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[4];
    v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v9, v10);
    a1[4] = v9;
    a1[5] = v10;
    v11 = a2[6];
    v12 = a2[7];
    v13 = a2[8];
    v14 = a2[9];
    v15 = a2[10];
    v16 = *((_BYTE *)a2 + 88);
    sub_232E01E78();
    a1[6] = v11;
    a1[7] = v12;
    a1[8] = v13;
    a1[9] = v14;
    a1[10] = v15;
    *((_BYTE *)a1 + 88) = v16;
    v17 = a2[13];
    a1[12] = a2[12];
    a1[13] = v17;
    *((_DWORD *)a1 + 28) = *((_DWORD *)a2 + 28);
    *((_BYTE *)a1 + 116) = *((_BYTE *)a2 + 116);
    v18 = (void *)a2[15];
    a1[15] = v18;
    *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v19 = (int *)type metadata accessor for ActivityDescriptor();
    v20 = v19[12];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_232E6EE74();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v18;
    v24(v21, v22, v23);
    v26 = v19[13];
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = v19[14];
    v31 = (_QWORD *)((char *)a1 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *((_BYTE *)a1 + v19[15]) = *((_BYTE *)a2 + v19[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for ActivityChange.Change(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  void *v63;
  void (*v64)(char *, _QWORD, uint64_t, uint64_t);
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  int *v73;
  void (*v74)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_232DF51B8((uint64_t)a1, type metadata accessor for ActivityChange.Change);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v29 = sub_232E6EE98();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a1, a2, v29);
      v30 = (int *)type metadata accessor for OpaqueActivityPayload(0);
      v31 = v30[5];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = sub_232E6EE74();
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      v36(v32, v33, v34);
      v37 = v30[6];
      v38 = (_QWORD *)((char *)a1 + v37);
      v39 = (_QWORD *)((char *)a2 + v37);
      v40 = *v39;
      v41 = v39[1];
      sub_232DE4A2C(*v39, v41);
      *v38 = v40;
      v38[1] = v41;
      v73 = v30;
      v42 = v30[7];
      v43 = (_QWORD *)((char *)a1 + v42);
      v44 = (char *)a2 + v42;
      v45 = *(_QWORD *)((char *)a2 + v42);
      v46 = *(_QWORD *)((char *)a2 + v42 + 8);
      sub_232DE4A2C(v45, v46);
      *v43 = v45;
      v43[1] = v46;
      v47 = type metadata accessor for OpaqueActivityContent();
      v48 = *(int *)(v47 + 20);
      v49 = (char *)v43 + v48;
      v50 = &v44[v48];
      v71 = v35;
      v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      v74 = v36;
      if (v72(&v44[v48], 1, v34))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v36(v49, v50, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v49, 0, 1, v34);
      }
      *(uint64_t *)((char *)v43 + *(int *)(v47 + 24)) = *(_QWORD *)&v44[*(int *)(v47 + 24)];
      v52 = v73[8];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      v55 = type metadata accessor for AlertConfiguration();
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        v58 = sub_232E6EE08();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
        v59(v53, v54, v58);
        v59(&v53[*(int *)(v55 + 20)], &v54[*(int *)(v55 + 20)], v58);
        v60 = *(int *)(v55 + 24);
        v61 = &v53[v60];
        v62 = &v54[v60];
        *(_QWORD *)v61 = *(_QWORD *)v62;
        *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
        v63 = (void *)*((_QWORD *)v62 + 2);
        *((_QWORD *)v61 + 2) = v63;
        v64 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56);
        swift_bridgeObjectRetain();
        v65 = v63;
        v64(v53, 0, 1, v55);
      }
      v66 = v73[9];
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      if (v72(v68, 1, v34))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        v74(v67, v68, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v67, 0, 1, v34);
      }
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v7 = a2[4];
      v8 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_232DE4A2C(v7, v8);
      a1[4] = v7;
      a1[5] = v8;
      v9 = a2[6];
      v10 = a2[7];
      v11 = a2[8];
      v12 = a2[9];
      v13 = a2[10];
      v14 = *((_BYTE *)a2 + 88);
      sub_232E01E78();
      a1[6] = v9;
      a1[7] = v10;
      a1[8] = v11;
      a1[9] = v12;
      a1[10] = v13;
      *((_BYTE *)a1 + 88) = v14;
      a1[12] = a2[12];
      a1[13] = a2[13];
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      *((_BYTE *)a1 + 113) = *((_BYTE *)a2 + 113);
      *((_BYTE *)a1 + 114) = *((_BYTE *)a2 + 114);
      *((_BYTE *)a1 + 115) = *((_BYTE *)a2 + 115);
      *((_BYTE *)a1 + 116) = *((_BYTE *)a2 + 116);
      v15 = (void *)a2[15];
      a1[15] = v15;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v16 = (int *)type metadata accessor for ActivityDescriptor();
      v17 = v16[12];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_232E6EE74();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = v15;
      v21(v18, v19, v20);
      v23 = v16[13];
      v24 = (_QWORD *)((char *)a1 + v23);
      v25 = (_QWORD *)((char *)a2 + v23);
      *v24 = *v25;
      v24[1] = v25[1];
      v26 = v16[14];
      v27 = (_QWORD *)((char *)a1 + v26);
      v28 = (_QWORD *)((char *)a2 + v26);
      *v27 = *v28;
      v27[1] = v28[1];
      *((_BYTE *)a1 + v16[15]) = *((_BYTE *)a2 + v16[15]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for ActivityChange.Change(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  int *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = sub_232E6EE98();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
    v14 = (int *)type metadata accessor for OpaqueActivityPayload(0);
    v15 = v14[5];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_232E6EE74();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v20(v16, v17, v18);
    *(_OWORD *)((char *)a1 + v14[6]) = *(_OWORD *)((char *)a2 + v14[6]);
    v46 = v14;
    v21 = v14[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
    v24 = type metadata accessor for OpaqueActivityContent();
    v25 = *(int *)(v24 + 20);
    v26 = &v22[v25];
    v27 = &v23[v25];
    v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v48 = v18;
    v47 = v20;
    if (v45(&v23[v25], 1, v18))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v20(v26, v27, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v26, 0, 1, v18);
    }
    *(_QWORD *)&v22[*(int *)(v24 + 24)] = *(_QWORD *)&v23[*(int *)(v24 + 24)];
    v29 = v46[8];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = type metadata accessor for AlertConfiguration();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = sub_232E6EE08();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32);
      v36(v30, v31, v35);
      v36(&v30[*(int *)(v32 + 20)], &v31[*(int *)(v32 + 20)], v35);
      v37 = *(int *)(v32 + 24);
      v38 = &v30[v37];
      v39 = &v31[v37];
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v40 = v46[9];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    if (v45(v42, 1, v48))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v47(v41, v42, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v41, 0, 1, v48);
    }
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    *(_OWORD *)((char *)a1 + 73) = *(_OWORD *)((char *)a2 + 73);
    *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
    *((_WORD *)a1 + 64) = *((_WORD *)a2 + 64);
    v8 = (int *)type metadata accessor for ActivityDescriptor();
    v9 = v8[12];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_232E6EE74();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + v8[13]) = *(_OWORD *)((char *)a2 + v8[13]);
    *(_OWORD *)((char *)a1 + v8[14]) = *(_OWORD *)((char *)a2 + v8[14]);
    *((_BYTE *)a1 + v8[15]) = *((_BYTE *)a2 + v8[15]);
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for ActivityChange.Change(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  int *v47;
  uint64_t v48;

  if (a1 != a2)
  {
    sub_232DF51B8((uint64_t)a1, type metadata accessor for ActivityChange.Change);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = sub_232E6EE98();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v15 = (int *)type metadata accessor for OpaqueActivityPayload(0);
      v16 = v15[5];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_232E6EE74();
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v21(v17, v18, v19);
      *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
      v47 = v15;
      v22 = v15[7];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
      v25 = type metadata accessor for OpaqueActivityContent();
      v26 = *(int *)(v25 + 20);
      v27 = &v23[v26];
      v28 = &v24[v26];
      v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      v48 = v19;
      if (v46(&v24[v26], 1, v19))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v21(v27, v28, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v27, 0, 1, v19);
      }
      *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
      v30 = v47[8];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = type metadata accessor for AlertConfiguration();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v36 = sub_232E6EE08();
        v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
        v37(v31, v32, v36);
        v37(&v31[*(int *)(v33 + 20)], &v32[*(int *)(v33 + 20)], v36);
        v38 = *(int *)(v33 + 24);
        v39 = &v31[v38];
        v40 = &v32[v38];
        *(_OWORD *)v39 = *(_OWORD *)v40;
        *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      v41 = v47[9];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v46(v43, 1, v48))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v21(v42, v43, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v42, 0, 1, v48);
      }
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      a1[4] = a2[4];
      *(_OWORD *)((char *)a1 + 73) = *(_OWORD *)((char *)a2 + 73);
      *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_WORD *)a1 + 64) = *((_WORD *)a2 + 64);
      v9 = (int *)type metadata accessor for ActivityDescriptor();
      v10 = v9[12];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_232E6EE74();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)((char *)a1 + v9[13]) = *(_OWORD *)((char *)a2 + v9[13]);
      *(_OWORD *)((char *)a1 + v9[14]) = *(_OWORD *)((char *)a2 + v9[14]);
      *((_BYTE *)a1 + v9[15]) = *((_BYTE *)a2 + v9[15]);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityChange.Change(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ActivityChange.Change(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_232E1EC6C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_232E1EC7C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActivityDescriptor();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for OpaqueActivityPayload(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityDescriptorState(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v33 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[4];
    v9 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v8, v9);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[6];
    v11 = a2[7];
    v12 = a2[8];
    v13 = a2[9];
    v14 = a2[10];
    v15 = *((_BYTE *)a2 + 88);
    sub_232E01E78();
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    *(_QWORD *)(a1 + 80) = v14;
    *(_BYTE *)(a1 + 88) = v15;
    v16 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v16;
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    *(_BYTE *)(a1 + 116) = *((_BYTE *)a2 + 116);
    v17 = (void *)a2[15];
    *(_QWORD *)(a1 + 120) = v17;
    *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
    v18 = (int *)type metadata accessor for ActivityDescriptor();
    v19 = v18[12];
    v20 = a1 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = sub_232E6EE74();
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = v17;
    v23(v20, v21, v22);
    v25 = v18[13];
    v26 = (_QWORD *)(a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v18[14];
    v30 = (_QWORD *)(a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    *(_BYTE *)(a1 + v18[15]) = *((_BYTE *)a2 + v18[15]);
    *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActivityDescriptorState(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232DE8D98(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  sub_232E03000();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v2 = a1 + *(int *)(type metadata accessor for ActivityDescriptor() + 48);
  v3 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActivityDescriptorState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_232DE4A2C(v7, v8);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_BYTE *)(a2 + 88);
  sub_232E01E78();
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_BYTE *)(a1 + 88) = v14;
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v15;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v16 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v16;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v17 = (int *)type metadata accessor for ActivityDescriptor();
  v18 = v17[12];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_232E6EE74();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = v16;
  v22(v19, v20, v21);
  v24 = v17[13];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v17[14];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  *(_BYTE *)(a1 + v17[15]) = *(_BYTE *)(a2 + v17[15]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityDescriptorState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  sub_232DE4A2C(v6, v7);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  sub_232DE8D98(v8, v9);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_BYTE *)(a2 + 88);
  sub_232E01E78();
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 88) = v15;
  sub_232E03000();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_BYTE *)(a1 + 114) = *(_BYTE *)(a2 + 114);
  *(_BYTE *)(a1 + 115) = *(_BYTE *)(a2 + 115);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v16 = *(void **)(a1 + 120);
  v17 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v17;
  v18 = v17;

  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v19 = (int *)type metadata accessor for ActivityDescriptor();
  v20 = v19[12];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  v24 = v19[13];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = v19[14];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v19[15]) = *(_BYTE *)(a2 + v19[15]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for ActivityDescriptorState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  v8 = (int *)type metadata accessor for ActivityDescriptor();
  v9 = v8[12];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)(a1 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
  *(_OWORD *)(a1 + v8[14]) = *(_OWORD *)(a2 + v8[14]);
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ActivityDescriptorState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  void *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_232DE8D98(v8, v9);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_BYTE *)(a2 + 88);
  v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 88) = v11;
  sub_232E03000();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_BYTE *)(a1 + 114) = *(_BYTE *)(a2 + 114);
  *(_BYTE *)(a1 + 115) = *(_BYTE *)(a2 + 115);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v13 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v14 = (int *)type metadata accessor for ActivityDescriptor();
  v15 = v14[12];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = v14[13];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = v14[14];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v14[15]) = *(_BYTE *)(a2 + v14[15]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityDescriptorState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E1F588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for ActivityDescriptor();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityDescriptorState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E1F60C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActivityDescriptor();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t sub_232E1F684()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActivityDescriptor();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityChange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E1F740 + 4 * byte_232E72FB3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E1F774 + 4 * byte_232E72FAE[v4]))();
}

uint64_t sub_232E1F774(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E1F77C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E1F784);
  return result;
}

uint64_t sub_232E1F790(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E1F798);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E1F79C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E1F7A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityChange.CodingKeys()
{
  return &type metadata for ActivityChange.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ActivityChange.Change.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityChange.Change.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E1F89C + 4 * byte_232E72FBD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232E1F8D0 + 4 * byte_232E72FB8[v4]))();
}

uint64_t sub_232E1F8D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E1F8D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E1F8E0);
  return result;
}

uint64_t sub_232E1F8EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E1F8F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232E1F8F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E1F900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityChange.Change.CodingKeys()
{
  return &type metadata for ActivityChange.Change.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityChange.Change.StateCodingKeys()
{
  return &type metadata for ActivityChange.Change.StateCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityChange.Change.DescriptorCodingKeys()
{
  return &type metadata for ActivityChange.Change.DescriptorCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityChange.Change.PayloadCodingKeys()
{
  return &type metadata for ActivityChange.Change.PayloadCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SubscribedActivity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_232E1F9A0 + 4 * byte_232E72FC7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_232E1F9D4 + 4 * byte_232E72FC2[v4]))();
}

uint64_t sub_232E1F9D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E1F9DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E1F9E4);
  return result;
}

uint64_t sub_232E1F9F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E1F9F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_232E1F9FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E1FA04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribedActivity.CodingKeys()
{
  return &type metadata for SubscribedActivity.CodingKeys;
}

uint64_t _s11ActivityKit14ActivityChangeV6ChangeO15StateCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E1FA60 + 4 * byte_232E72FCC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E1FA80 + 4 * byte_232E72FD1[v4]))();
}

_BYTE *sub_232E1FA60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E1FA80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E1FA88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E1FA90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E1FA98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E1FAA0(_DWORD *result)
{
  *result = 0;
  return result;
}

unint64_t sub_232E1FAB0()
{
  unint64_t result;

  result = qword_255FFD9A0;
  if (!qword_255FFD9A0)
  {
    result = MEMORY[0x23492A124](&unk_232E73424, &type metadata for ActivitySubscriptionOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9A0);
  }
  return result;
}

unint64_t sub_232E1FAF8()
{
  unint64_t result;

  result = qword_255FFD9A8;
  if (!qword_255FFD9A8)
  {
    result = MEMORY[0x23492A124](&unk_232E734DC, &type metadata for SubscribedActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9A8);
  }
  return result;
}

unint64_t sub_232E1FB40()
{
  unint64_t result;

  result = qword_255FFD9B0;
  if (!qword_255FFD9B0)
  {
    result = MEMORY[0x23492A124](&unk_232E73594, &type metadata for ActivityChange.Change.PayloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9B0);
  }
  return result;
}

unint64_t sub_232E1FB88()
{
  unint64_t result;

  result = qword_255FFD9B8;
  if (!qword_255FFD9B8)
  {
    result = MEMORY[0x23492A124](&unk_232E7364C, &type metadata for ActivityChange.Change.DescriptorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9B8);
  }
  return result;
}

unint64_t sub_232E1FBD0()
{
  unint64_t result;

  result = qword_255FFD9C0;
  if (!qword_255FFD9C0)
  {
    result = MEMORY[0x23492A124](&unk_232E73704, &type metadata for ActivityChange.Change.StateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9C0);
  }
  return result;
}

unint64_t sub_232E1FC18()
{
  unint64_t result;

  result = qword_255FFD9C8;
  if (!qword_255FFD9C8)
  {
    result = MEMORY[0x23492A124](&unk_232E737BC, &type metadata for ActivityChange.Change.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9C8);
  }
  return result;
}

unint64_t sub_232E1FC60()
{
  unint64_t result;

  result = qword_255FFD9D0;
  if (!qword_255FFD9D0)
  {
    result = MEMORY[0x23492A124](&unk_232E73874, &type metadata for ActivityChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9D0);
  }
  return result;
}

unint64_t sub_232E1FCA8()
{
  unint64_t result;

  result = qword_254237C88;
  if (!qword_254237C88)
  {
    result = MEMORY[0x23492A124](&unk_232E737E4, &type metadata for ActivityChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C88);
  }
  return result;
}

unint64_t sub_232E1FCF0()
{
  unint64_t result;

  result = qword_254237C80;
  if (!qword_254237C80)
  {
    result = MEMORY[0x23492A124](&unk_232E7380C, &type metadata for ActivityChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C80);
  }
  return result;
}

unint64_t sub_232E1FD38()
{
  unint64_t result;

  result = qword_254237C30;
  if (!qword_254237C30)
  {
    result = MEMORY[0x23492A124](&unk_232E73674, &type metadata for ActivityChange.Change.StateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C30);
  }
  return result;
}

unint64_t sub_232E1FD80()
{
  unint64_t result;

  result = qword_254237C28;
  if (!qword_254237C28)
  {
    result = MEMORY[0x23492A124](&unk_232E7369C, &type metadata for ActivityChange.Change.StateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C28);
  }
  return result;
}

unint64_t sub_232E1FDC8()
{
  unint64_t result;

  result = qword_254237C60;
  if (!qword_254237C60)
  {
    result = MEMORY[0x23492A124](&unk_232E735BC, &type metadata for ActivityChange.Change.DescriptorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C60);
  }
  return result;
}

unint64_t sub_232E1FE10()
{
  unint64_t result;

  result = qword_254237C58;
  if (!qword_254237C58)
  {
    result = MEMORY[0x23492A124](&unk_232E735E4, &type metadata for ActivityChange.Change.DescriptorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C58);
  }
  return result;
}

unint64_t sub_232E1FE58()
{
  unint64_t result;

  result = qword_254237C48;
  if (!qword_254237C48)
  {
    result = MEMORY[0x23492A124](&unk_232E73504, &type metadata for ActivityChange.Change.PayloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C48);
  }
  return result;
}

unint64_t sub_232E1FEA0()
{
  unint64_t result;

  result = qword_254237C40;
  if (!qword_254237C40)
  {
    result = MEMORY[0x23492A124](&unk_232E7352C, &type metadata for ActivityChange.Change.PayloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C40);
  }
  return result;
}

unint64_t sub_232E1FEE8()
{
  unint64_t result;

  result = qword_254237C18;
  if (!qword_254237C18)
  {
    result = MEMORY[0x23492A124](&unk_232E7372C, &type metadata for ActivityChange.Change.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C18);
  }
  return result;
}

unint64_t sub_232E1FF30()
{
  unint64_t result;

  result = qword_254237C10;
  if (!qword_254237C10)
  {
    result = MEMORY[0x23492A124](&unk_232E73754, &type metadata for ActivityChange.Change.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C10);
  }
  return result;
}

unint64_t sub_232E1FF78()
{
  unint64_t result;

  result = qword_255FFD9D8;
  if (!qword_255FFD9D8)
  {
    result = MEMORY[0x23492A124](&unk_232E7344C, &type metadata for SubscribedActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9D8);
  }
  return result;
}

unint64_t sub_232E1FFC0()
{
  unint64_t result;

  result = qword_255FFD9E0;
  if (!qword_255FFD9E0)
  {
    result = MEMORY[0x23492A124](&unk_232E73474, &type metadata for SubscribedActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9E0);
  }
  return result;
}

uint64_t sub_232E20004(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7364616F6C796170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_232E201C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_232E2031C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365676E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E20418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ActivityAttributesType.attributesType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityAttributesType.attributesType.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ActivityAttributesType.attributesType.modify())()
{
  return nullsub_1;
}

ActivityKit::ActivityAttributesType __swiftcall ActivityAttributesType.init(attributesType:)(ActivityKit::ActivityAttributesType attributesType)
{
  ActivityKit::ActivityAttributesType *v1;

  *v1 = attributesType;
  return attributesType;
}

uint64_t sub_232E204E0()
{
  return 0x7475626972747461;
}

uint64_t sub_232E20504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7475626972747461 && a2 == 0xEE00657079547365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E205BC()
{
  sub_232E20728();
  return sub_232E6F7D4();
}

uint64_t sub_232E205E4()
{
  sub_232E20728();
  return sub_232E6F7E0();
}

uint64_t ActivityAttributesType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238218);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E20728();
  sub_232E6F7BC();
  if (!v2)
  {
    v9 = sub_232E6F618();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_232E20728()
{
  unint64_t result;

  result = qword_2542384D0;
  if (!qword_2542384D0)
  {
    result = MEMORY[0x23492A124](&unk_232E73D3C, &type metadata for ActivityAttributesType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542384D0);
  }
  return result;
}

uint64_t ActivityAttributesType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238298);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E20728();
  sub_232E6F7C8();
  sub_232E6F684();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_232E20858@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ActivityAttributesType.init(from:)(a1, a2);
}

uint64_t sub_232E2086C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254238298);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E20728();
  sub_232E6F7C8();
  sub_232E6F684();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static ActivityAttributesType.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_232E6F6E4();
}

uint64_t ActivityAttributesType.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_232E6F21C();
  return swift_bridgeObjectRelease();
}

uint64_t ActivityAttributesType.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F21C();
  return sub_232E6F7B0();
}

uint64_t sub_232E20A14()
{
  sub_232E6F780();
  sub_232E6F21C();
  return sub_232E6F7B0();
}

uint64_t sub_232E20A5C()
{
  return sub_232E6F21C();
}

uint64_t sub_232E20A64()
{
  sub_232E6F780();
  sub_232E6F21C();
  return sub_232E6F7B0();
}

uint64_t sub_232E20AA8(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_232E6F6E4();
}

unint64_t ActivityAttributesType.description.getter()
{
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

unint64_t ActivityAttributesType.debugDescription.getter()
{
  swift_bridgeObjectRetain();
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_232E6F228();
  swift_bridgeObjectRelease_n();
  return 0xD000000000000011;
}

unint64_t sub_232E20BF8()
{
  unint64_t result;

  result = qword_255FFB4C8;
  if (!qword_255FFB4C8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAttributesType, &type metadata for ActivityAttributesType);
    atomic_store(result, (unint64_t *)&qword_255FFB4C8);
  }
  return result;
}

unint64_t sub_232E20C44(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232E16F30();
  a1[2] = sub_232E20C78();
  result = sub_232E20CBC();
  a1[3] = result;
  return result;
}

unint64_t sub_232E20C78()
{
  unint64_t result;

  result = qword_2542380E0;
  if (!qword_2542380E0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAttributesType, &type metadata for ActivityAttributesType);
    atomic_store(result, (unint64_t *)&qword_2542380E0);
  }
  return result;
}

unint64_t sub_232E20CBC()
{
  unint64_t result;

  result = qword_255FFC770;
  if (!qword_255FFC770)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAttributesType, &type metadata for ActivityAttributesType);
    atomic_store(result, (unint64_t *)&qword_255FFC770);
  }
  return result;
}

uint64_t sub_232E20D00()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E20C78();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityAttributesType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ActivityAttributesType()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ActivityAttributesType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ActivityAttributesType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityAttributesType(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityAttributesType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityAttributesType.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E20F2C + 4 * byte_232E73AD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E20F4C + 4 * byte_232E73AD5[v4]))();
}

_BYTE *sub_232E20F2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E20F4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E20F54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E20F5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E20F64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E20F6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityAttributesType.CodingKeys()
{
  return &type metadata for ActivityAttributesType.CodingKeys;
}

unint64_t sub_232E20F8C()
{
  unint64_t result;

  result = qword_255FFD9E8;
  if (!qword_255FFD9E8)
  {
    result = MEMORY[0x23492A124](&unk_232E73D14, &type metadata for ActivityAttributesType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9E8);
  }
  return result;
}

unint64_t sub_232E20FD4()
{
  unint64_t result;

  result = qword_254238468;
  if (!qword_254238468)
  {
    result = MEMORY[0x23492A124](&unk_232E73C84, &type metadata for ActivityAttributesType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238468);
  }
  return result;
}

unint64_t sub_232E2101C()
{
  unint64_t result;

  result = qword_2542384D8;
  if (!qword_2542384D8)
  {
    result = MEMORY[0x23492A124](&unk_232E73CAC, &type metadata for ActivityAttributesType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542384D8);
  }
  return result;
}

uint64_t sub_232E21064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *i;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a2 + 49);
    for (i = (unsigned __int8 *)(a1 + 49); ; i += 24)
    {
      v6 = *(i - 1);
      v7 = *i;
      v8 = *(v3 - 1);
      v9 = *v3;
      v10 = *(_QWORD *)(i - 17) == *(_QWORD *)(v3 - 17) && *(_QWORD *)(i - 9) == *(_QWORD *)(v3 - 9);
      if (!v10 && (sub_232E6F6E4() & 1) == 0)
        break;
      if (v7)
      {
        if (v7 == 1)
        {
          if (v9 != 1 || ((v8 ^ v6) & 1) != 0)
            return 0;
        }
        else if (v9 != 2 || v8 != 0)
        {
          return 0;
        }
      }
      else
      {
        if (v9)
          return 0;
        if (v6 == 2)
        {
          if (v8 != 2)
            return 0;
        }
        else
        {
          result = 0;
          if (v8 == 2 || ((v8 ^ v6) & 1) != 0)
            return result;
        }
      }
      v3 += 24;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

BOOL sub_232E21170(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  char v6;
  __int128 v7;
  char v8;
  __int128 v9;
  BOOL v10;
  BOOL v12;
  _OWORD v14[2];
  char v15;
  _OWORD v16[2];
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v3 = v2 - 1;
      v4 = (_BYTE *)(a2 + 64);
      v5 = (_BYTE *)(a1 + 64);
      do
      {
        v6 = *v5;
        v7 = *((_OWORD *)v5 - 1);
        v16[0] = *((_OWORD *)v5 - 2);
        v16[1] = v7;
        v17 = v6;
        v8 = *v4;
        v9 = *((_OWORD *)v4 - 1);
        v14[0] = *((_OWORD *)v4 - 2);
        v14[1] = v9;
        v15 = v8;
        v10 = _s11ActivityKit0A13ContentSourceO7RequestO2eeoiySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v14);
        v12 = v3-- != 0;
        if (!v10)
          break;
        v4 += 40;
        v5 += 40;
      }
      while (v12);
    }
  }
  else
  {
    return 0;
  }
  return v10;
}

uint64_t sub_232E21218(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_232E6F6E4(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_232E6F6E4() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_232E212DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_232E214A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[7];
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = v2 - 1;
  v4 = a1 + 48;
  for (i = a2 + 48; ; i += 64)
  {
    v6 = *(_QWORD *)(v4 - 16);
    v7 = *(_QWORD *)v4;
    v8 = *(_QWORD *)(v4 + 8);
    v9 = *(_QWORD *)(v4 + 16);
    v10 = *(_QWORD *)(v4 + 24);
    v11 = *(_QWORD *)(v4 + 32);
    v12 = *(unsigned __int8 *)(v4 + 40);
    v14 = *(_QWORD *)(i - 16);
    v13 = *(_QWORD *)(i - 8);
    v16 = *(_QWORD *)i;
    v15 = *(_QWORD *)(i + 8);
    v17 = *(_QWORD *)(i + 16);
    v18 = *(_QWORD *)(i + 24);
    v19 = *(_QWORD *)(i + 32);
    v20 = *(unsigned __int8 *)(i + 40);
    v91 = *(_QWORD *)(v4 - 8);
    v92[0] = v6;
    v92[1] = v91;
    v92[2] = v7;
    v87 = v7;
    v88 = v19;
    v92[3] = v8;
    v92[4] = v9;
    v92[5] = v10;
    v92[6] = v11;
    v93 = v12;
    v94 = v14;
    v95 = v13;
    v89 = v17;
    v90 = v16;
    v96 = v16;
    v97 = v15;
    v98 = v17;
    v99 = v18;
    v21 = v18;
    v100 = v19;
    v101 = v20;
    if (!v12)
      break;
    if (v12 != 1)
    {
      if (v20 == 2 && !(v13 | v14 | v16 | v15 | v17 | v18 | v19))
        goto LABEL_20;
      v57 = v14;
      v58 = v13;
      v60 = v17;
      v59 = v16;
      v61 = v18;
      v62 = v19;
LABEL_47:
      sub_232E13454(v57, v58, v59, v15, v60, v61, v62, v20);
      sub_232E134F8((uint64_t)v92);
      return 0;
    }
    if (v20 != 1)
    {
      sub_232E13454(v14, v13, v16, v15, v17, v18, v19, v20);
      v57 = v6;
      v58 = v91;
      v59 = v87;
      v15 = v8;
      v60 = v9;
      v61 = v10;
      v62 = v11;
      LOBYTE(v20) = 1;
      goto LABEL_47;
    }
    v22 = v8;
    v83 = v9;
    if (v6 == v14 && v91 == v13)
    {
      sub_232E13454(v6, v91, v16, v15, v17, v18, v19, 1);
      sub_232E13454(v6, v91, v87, v8, v9, v10, v11, 1);
LABEL_20:
      sub_232E134F8((uint64_t)v92);
      goto LABEL_41;
    }
    v31 = v14;
    v86 = v18;
    v32 = v15;
    v33 = v13;
    v82 = v22;
    v34 = sub_232E6F6E4();
    sub_232E13454(v31, v33, v90, v32, v89, v86, v88, 1);
    sub_232E13454(v6, v91, v87, v82, v83, v10, v11, 1);
    sub_232E134F8((uint64_t)v92);
    if ((v34 & 1) == 0)
      return 0;
LABEL_41:
    if (!v3)
      return 1;
    v4 += 64;
    --v3;
  }
  if (v20)
  {
    sub_232E13454(v14, v13, v16, v15, v17, v18, v19, v20);
    v57 = v6;
    v58 = v91;
    v59 = v87;
    v15 = v8;
    v60 = v9;
    v61 = v10;
    v62 = v11;
    LOBYTE(v20) = 0;
    goto LABEL_47;
  }
  v79 = v10;
  v80 = v11;
  v81 = v8;
  v84 = v9;
  v75 = v15;
  v76 = v13;
  v85 = v18;
  v77 = v3;
  v78 = v14;
  if (!(_BYTE)v9)
  {
    v23 = v17;
    if ((_BYTE)v17)
      goto LABEL_51;
    if (v6 != v14 || v91 != v13)
    {
      v35 = v14;
      v36 = v15;
      v37 = v8;
      v38 = v13;
      v39 = sub_232E6F6E4();
      v14 = v35;
      v13 = v38;
      v8 = v37;
      v15 = v36;
      if ((v39 & 1) == 0)
      {
        v72 = v13;
        sub_232E13454(v35, v13, v90, v36, v89, v21, v88, 0);
        sub_232E13454(v6, v91, v87, v8, v84, v79, v80, 0);
        sub_232E13454(v6, v91, v87, v8, v84, v79, v80, 0);
        sub_232E13454(v78, v72, v90, v36, v89, v85, v88, 0);
        sub_232E13454(v78, v72, v90, v36, v89, v85, v88, 0);
        sub_232E13454(v6, v91, v87, v81, v84, v79, v80, 0);
        sub_232E134AC(v78, v72, v90, v36, 0);
        sub_232E134AC(v6, v91, v87, v81, 0);
        sub_232E135E0(v6, v91, v87, v81, 0);
        sub_232E135E0(v78, v72, v90, v36, 0);
        sub_232E134F8((uint64_t)v92);
        sub_232E13588(v78, v72, v90, v36, v89, v85, v88, 0);
        sub_232E13588(v6, v91, v87, v81, v84, v79, v80, 0);
        sub_232E13588(v78, v76, v90, v36, v89, v85, v88, 0);
        v65 = v6;
        v66 = v91;
        v67 = v87;
        v68 = v81;
        v69 = v84;
        v70 = v79;
        v71 = v80;
        goto LABEL_53;
      }
    }
    if (v87 == v90 && v8 == v15)
    {
      v40 = v21;
      v41 = v13;
      sub_232E13454(v14, v13, v87, v8, v89, v40, v88, 0);
      sub_232E13454(v6, v91, v87, v8, v84, v79, v80, 0);
      sub_232E13454(v6, v91, v87, v8, v84, v79, v80, 0);
      sub_232E13454(v78, v41, v87, v8, v89, v85, v88, 0);
      sub_232E13454(v78, v41, v87, v8, v89, v85, v88, 0);
      sub_232E13454(v6, v91, v87, v8, v84, v79, v80, 0);
      sub_232E134AC(v78, v76, v87, v8, 0);
      sub_232E134AC(v6, v91, v87, v8, 0);
      v26 = v79;
      v21 = v85;
      sub_232E135E0(v6, v91, v87, v8, 0);
      v25 = v78;
      v27 = v76;
      v28 = v87;
      v29 = v8;
      v30 = 0;
      goto LABEL_33;
    }
    v53 = v14;
    v54 = v15;
    v55 = v13;
    v73 = sub_232E6F6E4();
    sub_232E13454(v53, v55, v90, v54, v89, v21, v88, 0);
    sub_232E13454(v6, v91, v87, v8, v84, v79, v80, 0);
    sub_232E13454(v6, v91, v87, v81, v84, v79, v80, 0);
    sub_232E13454(v78, v55, v90, v54, v89, v85, v88, 0);
    sub_232E13454(v78, v55, v90, v54, v89, v85, v88, 0);
    v8 = v81;
    v26 = v79;
    sub_232E13454(v6, v91, v87, v81, v84, v79, v80, 0);
    sub_232E134AC(v78, v76, v90, v54, 0);
    sub_232E134AC(v6, v91, v87, v81, 0);
    v21 = v85;
    sub_232E135E0(v6, v91, v87, v81, 0);
    v48 = v78;
    v49 = v76;
    v50 = v90;
    v51 = v54;
    v52 = 0;
LABEL_36:
    sub_232E135E0(v48, v49, v50, v51, v52);
    if ((v73 & 1) == 0)
    {
      sub_232E134F8((uint64_t)v92);
      sub_232E13588(v78, v76, v90, v75, v89, v21, v88, 0);
      v64 = v80;
      sub_232E13588(v6, v91, v87, v8, v84, v26, v80, 0);
      sub_232E13588(v78, v76, v90, v75, v89, v21, v88, 0);
      v65 = v6;
      v66 = v91;
      v67 = v87;
      v68 = v81;
      v69 = v84;
      v70 = v26;
      goto LABEL_52;
    }
    goto LABEL_37;
  }
  if (v9 == 1)
  {
    v23 = v17;
    if (v17 != 1)
      goto LABEL_51;
    if (v6 == v14 && v91 == v13)
    {
      v24 = v15;
      sub_232E13454(v6, v91, v16, v15, v17, v18, v19, 0);
      sub_232E13454(v6, v91, v87, v8, v9, v79, v80, 0);
      sub_232E13454(v6, v91, v87, v8, v9, v79, v80, 0);
      sub_232E13454(v6, v91, v90, v24, v89, v85, v88, 0);
      sub_232E13454(v6, v91, v90, v24, v89, v85, v88, 0);
      sub_232E13454(v6, v91, v87, v8, v9, v79, v80, 0);
      sub_232E134AC(v6, v91, v90, v24, 1);
      sub_232E134AC(v6, v91, v87, v8, 1);
      sub_232E135E0(v6, v91, v87, v8, 1);
      v25 = v6;
      v26 = v79;
      v27 = v91;
      v21 = v85;
      v28 = v90;
      v29 = v24;
      v30 = 1;
LABEL_33:
      sub_232E135E0(v25, v27, v28, v29, v30);
LABEL_37:
      if (v26 == v21 && v80 == v88)
      {
        sub_232E134F8((uint64_t)v92);
        sub_232E13588(v78, v76, v90, v75, v89, v79, v80, 0);
        sub_232E13588(v6, v91, v87, v8, v84, v79, v80, 0);
        sub_232E13588(v78, v76, v90, v75, v89, v79, v80, 0);
        sub_232E13588(v6, v91, v87, v81, v84, v79, v80, 0);
        v3 = v77;
      }
      else
      {
        v74 = sub_232E6F6E4();
        sub_232E134F8((uint64_t)v92);
        sub_232E13588(v78, v76, v90, v75, v89, v21, v88, 0);
        sub_232E13588(v6, v91, v87, v81, v84, v79, v80, 0);
        sub_232E13588(v78, v76, v90, v75, v89, v85, v88, 0);
        sub_232E13588(v6, v91, v87, v81, v84, v79, v80, 0);
        v3 = v77;
        if ((v74 & 1) == 0)
          return 0;
      }
      goto LABEL_41;
    }
    v45 = v14;
    v46 = v15;
    v47 = v13;
    v73 = sub_232E6F6E4();
    sub_232E13454(v45, v47, v90, v46, v89, v21, v88, 0);
    sub_232E13454(v6, v91, v87, v8, v84, v10, v80, 0);
    sub_232E13454(v6, v91, v87, v8, v84, v10, v80, 0);
    sub_232E13454(v78, v47, v90, v75, v89, v85, v88, 0);
    v26 = v10;
    sub_232E13454(v78, v47, v90, v75, v89, v85, v88, 0);
    sub_232E13454(v6, v91, v87, v8, v84, v10, v80, 0);
    sub_232E134AC(v78, v76, v90, v75, 1);
    sub_232E134AC(v6, v91, v87, v8, 1);
    sub_232E135E0(v6, v91, v87, v8, 1);
    v48 = v78;
    v49 = v76;
    v50 = v90;
    v51 = v75;
    v52 = 1;
    goto LABEL_36;
  }
  v23 = v17;
  if (v17 != 2)
    goto LABEL_51;
  if (!(v13 | v14 | v16 | v15))
  {
    v42 = v8;
    v43 = v9;
    sub_232E13454(0, 0, 0, 0, v17, v18, v19, 0);
    sub_232E13454(v6, v91, v87, v42, v9, v79, v80, 0);
    sub_232E13454(v6, v91, v87, v42, v9, v79, v80, 0);
    sub_232E13454(0, 0, 0, 0, v89, v85, v88, 0);
    v26 = v79;
    sub_232E13454(0, 0, 0, 0, v89, v85, v88, 0);
    v44 = v43;
    v8 = v42;
    sub_232E13454(v6, v91, v87, v42, v44, v79, v80, 0);
    v21 = v85;
    sub_232E135E0(v6, v91, v87, v42, 2);
    v25 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 2;
    goto LABEL_33;
  }
  v23 = 2;
LABEL_51:
  v63 = v13;
  sub_232E13454(v14, v13, v16, v15, v17, v18, v19, 0);
  sub_232E13454(v6, v91, v87, v8, v9, v79, v80, 0);
  sub_232E13454(v6, v91, v87, v8, v9, v79, v80, 0);
  sub_232E13454(v78, v63, v90, v75, v89, v85, v88, 0);
  sub_232E13454(v78, v63, v90, v75, v89, v85, v88, 0);
  sub_232E13454(v6, v91, v87, v8, v9, v79, v80, 0);
  sub_232E134AC(v78, v63, v90, v75, v23);
  sub_232E134AC(v6, v91, v87, v8, v9);
  sub_232E135E0(v6, v91, v87, v8, v9);
  sub_232E135E0(v78, v63, v90, v75, v23);
  sub_232E134F8((uint64_t)v92);
  sub_232E13588(v78, v63, v90, v75, v89, v85, v88, 0);
  v64 = v80;
  sub_232E13588(v6, v91, v87, v8, v9, v79, v80, 0);
  sub_232E13588(v78, v76, v90, v75, v89, v85, v88, 0);
  v65 = v6;
  v66 = v91;
  v67 = v87;
  v68 = v8;
  v69 = v9;
  v70 = v79;
LABEL_52:
  v71 = v64;
LABEL_53:
  sub_232E13588(v65, v66, v67, v68, v69, v70, v71, 0);
  return 0;
}

uint64_t ActivityProminencePredicate.init(activityIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

Swift::Bool __swiftcall ActivityProminencePredicate.matches(activityIdentifier:)(Swift::String activityIdentifier)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  Swift::Bool result;
  _QWORD *v8;
  uint64_t i;
  uint64_t v10;
  BOOL v11;

  v2 = *v1;
  if (!*v1)
    return 1;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  object = activityIdentifier._object;
  countAndFlagsBits = activityIdentifier._countAndFlagsBits;
  if (*(_QWORD *)(v2 + 32) == activityIdentifier._countAndFlagsBits
    && *(void **)(v2 + 40) == activityIdentifier._object)
  {
    return 1;
  }
  result = sub_232E6F6E4();
  if (result)
    return 1;
  if (v3 == 1)
    return 0;
  v8 = (_QWORD *)(v2 + 56);
  for (i = 1; ; ++i)
  {
    v10 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v11 = *(v8 - 1) == countAndFlagsBits && *v8 == (_QWORD)object;
    if (v11 || (sub_232E6F6E4() & 1) != 0)
      return 1;
    result = 0;
    v8 += 2;
    if (v10 == v3)
      return result;
  }
  __break(1u);
  return result;
}

void static ActivityProminencePredicate.all.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ActivityProminencePredicate.activityIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_232E226E8()
{
  return 0xD000000000000013;
}

uint64_t sub_232E22704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E22EB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_232E2272C()
{
  sub_232E2289C();
  return sub_232E6F7D4();
}

uint64_t sub_232E22754()
{
  sub_232E2289C();
  return sub_232E6F7E0();
}

uint64_t ActivityProminencePredicate.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB498);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E2289C();
  sub_232E6F7C8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
  sub_232E09294(&qword_254236860, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_232E6F678();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_232E2289C()
{
  unint64_t result;

  result = qword_254236828;
  if (!qword_254236828)
  {
    result = MEMORY[0x23492A124](&unk_232E73F70, &type metadata for ActivityProminencePredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254236828);
  }
  return result;
}

uint64_t ActivityProminencePredicate.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB578);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E2289C();
  sub_232E6F7BC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
    sub_232E09294((unint64_t *)&qword_254237F10, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_232E6F60C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232E22A20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActivityProminencePredicate.init(from:)(a1, a2);
}

uint64_t sub_232E22A34(_QWORD *a1)
{
  return ActivityProminencePredicate.encode(to:)(a1);
}

uint64_t sub_232E22A48()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E0C28C();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t static ActivityProminencePredicate.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;

  v2 = *a1;
  v3 = *a2;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    return (v2 | v3) == 0;
  else
    return sub_232E21218((_QWORD *)v2, (_QWORD *)v3);
}

unint64_t sub_232E22B38(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232E16EEC();
  a1[2] = sub_232E0C28C();
  result = sub_232E22B6C();
  a1[3] = result;
  return result;
}

unint64_t sub_232E22B6C()
{
  unint64_t result;

  result = qword_255FFB560;
  if (!qword_255FFB560)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProminencePredicate, &type metadata for ActivityProminencePredicate);
    atomic_store(result, (unint64_t *)&qword_255FFB560);
  }
  return result;
}

uint64_t sub_232E22BB0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;

  v2 = *a1;
  v3 = *a2;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    return (v2 | v3) == 0;
  else
    return sub_232E21218((_QWORD *)v2, (_QWORD *)v3);
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityProminencePredicate(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ActivityProminencePredicate()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ActivityProminencePredicate(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for ActivityProminencePredicate(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityProminencePredicate(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityProminencePredicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityProminencePredicate()
{
  return &type metadata for ActivityProminencePredicate;
}

uint64_t storeEnumTagSinglePayload for ActivityProminencePredicate.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E22D80 + 4 * byte_232E73D98[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E22DA0 + 4 * byte_232E73D9D[v4]))();
}

_BYTE *sub_232E22D80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E22DA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E22DA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E22DB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E22DB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E22DC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityProminencePredicate.CodingKeys()
{
  return &type metadata for ActivityProminencePredicate.CodingKeys;
}

unint64_t sub_232E22DE0()
{
  unint64_t result;

  result = qword_255FFD9F0;
  if (!qword_255FFD9F0)
  {
    result = MEMORY[0x23492A124](&unk_232E73F48, &type metadata for ActivityProminencePredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFD9F0);
  }
  return result;
}

unint64_t sub_232E22E28()
{
  unint64_t result;

  result = qword_254236838;
  if (!qword_254236838)
  {
    result = MEMORY[0x23492A124](&unk_232E73EB8, &type metadata for ActivityProminencePredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254236838);
  }
  return result;
}

unint64_t sub_232E22E70()
{
  unint64_t result;

  result = qword_254236830;
  if (!qword_254236830)
  {
    result = MEMORY[0x23492A124](&unk_232E73EE0, &type metadata for ActivityProminencePredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254236830);
  }
  return result;
}

uint64_t sub_232E22EB4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000232E7E3D0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static ActivityFrequentUpdatesObservationServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254238428 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2542383F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

ValueMetadata *type metadata accessor for ActivityFrequentUpdatesObservationServiceDefinition()
{
  return &type metadata for ActivityFrequentUpdatesObservationServiceDefinition;
}

uint64_t RemoteSubscriptionType.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 1819047270;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x737472656C61;
      break;
    case 2:
      result = 0x6168436574617473;
      break;
    case 3:
      result = 1701736302;
      break;
    default:
      result = sub_232E6F6FC();
      __break(1u);
      break;
  }
  return result;
}

uint64_t static RemoteSubscriptionType.mostRestrictive(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(a1 + 32);
    while (2)
    {
      v5 = *v3++;
      v4 = v5;
      switch(v5)
      {
        case 0:
          if (v2 != 1)
            goto LABEL_8;
          v4 = 1;
          goto LABEL_5;
        case 1:
LABEL_8:
          if (v2 != 2)
            goto LABEL_3;
          v4 = 2;
          goto LABEL_5;
        case 2:
LABEL_3:
          if (v2 == 3)
            v4 = 3;
          goto LABEL_5;
        case 3:
LABEL_5:
          v2 = v4;
          if (--v1)
            continue;
          return v4;
        default:
          swift_bridgeObjectRetain();
          result = sub_232E6F6FC();
          __break(1u);
          return result;
      }
    }
  }
  return 0;
}

unint64_t RemoteSubscriptionType.init(rawValue:)(unint64_t a1)
{
  return sub_232E232D0(a1);
}

BOOL sub_232E2312C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_232E23140()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t sub_232E23184()
{
  return sub_232E6F78C();
}

uint64_t sub_232E231AC()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

unint64_t sub_232E231EC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_232E232D0(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_232E2321C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_232E23228()
{
  sub_232E23338();
  return sub_232E6F288();
}

uint64_t sub_232E23284()
{
  sub_232E23338();
  return sub_232E6F264();
}

unint64_t sub_232E232D0(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_232E232E4()
{
  unint64_t result;

  result = qword_255FFD9F8;
  if (!qword_255FFD9F8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for RemoteSubscriptionType, &type metadata for RemoteSubscriptionType);
    atomic_store(result, (unint64_t *)&qword_255FFD9F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteSubscriptionType()
{
  return &type metadata for RemoteSubscriptionType;
}

unint64_t sub_232E23338()
{
  unint64_t result;

  result = qword_255FFDA00;
  if (!qword_255FFDA00)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for RemoteSubscriptionType, &type metadata for RemoteSubscriptionType);
    atomic_store(result, (unint64_t *)&qword_255FFDA00);
  }
  return result;
}

uint64_t dispatch thunk of ActivityStore.descriptor(id:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ActivityStore.descriptors(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityStore.descriptorContentStates(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ActivityStore.observePayloads(id:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ActivityStore.observePayloads(id:feed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ActivityStore.observeDescriptors(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ActivityStore.observeDescriptorStates(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ActivityStore.observeDescriptorContentStates(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ActivityPushTokenStore.subscribeToPushTokenUpdates()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityPushTokenStore.pushToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_232E2344C()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_254238080);
  __swift_project_value_buffer(v0, (uint64_t)qword_254238080);
  return sub_232E6EF1C();
}

void sub_232E234C4(uint64_t a1)
{
  sub_232E234DC(a1, "Push Service: Interrupted");
}

void sub_232E234D0(uint64_t a1)
{
  sub_232E234DC(a1, "Push Service: Invalidated");
}

void sub_232E234DC(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_2542380A0 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_254238080);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232E235B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232DE07D8();

  }
}

uint64_t sub_232E23600@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(result + OBJC_IVAR____TtC11ActivityKit23ActivityPushTokenClient__queue_pushTokens);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_232DE0F18(a2, a3);
    if ((v9 & 1) != 0)
    {
      v10 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v8);
      v11 = *v10;
      v12 = v10[1];
      *a4 = *v10;
      a4[1] = v12;
      sub_232DE4A2C(v11, v12);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  *(_OWORD *)a4 = xmmword_232E70D10;
  return result;
}

id sub_232E236AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityPushTokenClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_232E23734()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFDA30);
  sub_232E6F3D8();
  return v1;
}

uint64_t sub_232E237A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_232E23600(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_232E237BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_232E237E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232E2380C(uint64_t a1)
{
  uint64_t v1;

  sub_232E235B0(a1, v1);
}

uint64_t sub_232E23814()
{
  return swift_deallocObject();
}

uint64_t sub_232E23824()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_232E23848()
{
  return swift_deallocObject();
}

uint64_t static AlertPresentationOptions._unconditionallyBridgeFromObjectiveC(_:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  char v9;
  char v10;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v5 = sub_232E6EE44();
    v7 = v6;
    sub_232E1A064();
    sub_232E6ED9C();
    swift_release();
    result = sub_232DE8D98(v5, v7);
    *a2 = v9;
    a2[1] = v10;
  }
  else
  {
    __break(1u);
    sub_232DE8D98(v3, v2);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t AlertPresentationOptions.optional.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t AlertPresentationOptions.interrupting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

ActivityKit::AlertPresentationOptions __swiftcall AlertPresentationOptions.init(optional:interrupting:)(Swift::Bool optional, Swift::Bool interrupting)
{
  Swift::Bool *v2;
  ActivityKit::AlertPresentationOptions result;

  *v2 = optional;
  v2[1] = interrupting;
  result.optional = optional;
  return result;
}

id AlertPresentationOptions.acAlertPresentationOptions.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = objc_msgSend(objc_allocWithZone((Class)ACAlertPresentationOptions), sel_init);
  objc_msgSend(v3, sel_setInterrupting_, v2);
  objc_msgSend(v3, sel_setOptional_, v1);
  return v3;
}

uint64_t sub_232E239FC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7075727265746E69;
  else
    return 0x6C616E6F6974706FLL;
}

uint64_t sub_232E23A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E24394(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E23A64()
{
  sub_232E23F00();
  return sub_232E6F7D4();
}

uint64_t sub_232E23A8C()
{
  sub_232E23F00();
  return sub_232E6F7E0();
}

uint64_t AlertPresentationOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFDA38);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E23F00();
  sub_232E6F7C8();
  v12 = 0;
  sub_232E6F690();
  if (!v2)
  {
    v11 = 1;
    sub_232E6F690();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AlertPresentationOptions.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFDA48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E23F00();
  sub_232E6F7BC();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_232E6F624();
    v13 = 1;
    v10 = sub_232E6F624();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
    a2[1] = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232E23D28@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AlertPresentationOptions.init(from:)(a1, a2);
}

uint64_t sub_232E23D3C(_QWORD *a1)
{
  return AlertPresentationOptions.encode(to:)(a1);
}

NSData __swiftcall AlertPresentationOptions._bridgeToObjectiveC()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E23F44();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return (NSData)v3;
}

uint64_t static AlertPresentationOptions._forceBridgeFromObjectiveC(_:result:)(uint64_t a1, _WORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  __int16 v7;
  unsigned __int8 v8;
  char v9;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232E1A064();
  sub_232E6ED9C();
  swift_release();
  result = sub_232DE8D98(v3, v5);
  if (v9)
    v7 = 256;
  else
    v7 = 0;
  *a2 = v7 | v8;
  return result;
}

unint64_t sub_232E23F00()
{
  unint64_t result;

  result = qword_255FFDA40;
  if (!qword_255FFDA40)
  {
    result = MEMORY[0x23492A124](&unk_232E7442C, &type metadata for AlertPresentationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDA40);
  }
  return result;
}

unint64_t sub_232E23F44()
{
  unint64_t result;

  result = qword_255FFDA50;
  if (!qword_255FFDA50)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for AlertPresentationOptions, &type metadata for AlertPresentationOptions);
    atomic_store(result, (unint64_t *)&qword_255FFDA50);
  }
  return result;
}

uint64_t sub_232E23F8C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E23F44();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E2404C(uint64_t a1, _WORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  __int16 v7;
  unsigned __int8 v8;
  char v9;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232E1A064();
  sub_232E6ED9C();
  swift_release();
  result = sub_232DE8D98(v3, v5);
  if (v9)
    v7 = 256;
  else
    v7 = 0;
  *a2 = v7 | v8;
  return result;
}

uint64_t sub_232E24144@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  char v9;
  char v10;

  if (a1)
  {
    sub_232E6EDB4();
    swift_allocObject();
    sub_232E6EDA8();
    v5 = sub_232E6EE44();
    v7 = v6;
    sub_232E1A064();
    sub_232E6ED9C();
    swift_release();
    result = sub_232DE8D98(v5, v7);
    *a2 = v9;
    a2[1] = v10;
  }
  else
  {
    __break(1u);
    sub_232DE8D98(v3, v2);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_232E24234()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_254237350);
  __swift_project_value_buffer(v0, (uint64_t)qword_254237350);
  return sub_232E6EEC8();
}

uint64_t static AlertServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254236898 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254237350);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static AlertServiceDefinition.serviceName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_232E24308@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254236898 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254237350);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_232E24378()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_232E24394(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C616E6F6974706FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7075727265746E69 && a2 == 0xEC000000676E6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t _s11ActivityKit24AlertPresentationOptionsV34_conditionallyBridgeFromObjectiveC_6resultSbSo6NSDataC_ACSgztFZ_0(uint64_t a1, _WORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __int16 v6;
  uint64_t result;
  unsigned __int8 v8;
  char v9;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232E1A064();
  sub_232E6ED9C();
  swift_release();
  sub_232DE8D98(v3, v5);
  if (v9)
    v6 = 256;
  else
    v6 = 0;
  result = 1;
  *a2 = v6 | v8;
  return result;
}

uint64_t storeEnumTagSinglePayload for AlertPresentationOptions(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E245D8 + 4 * byte_232E74215[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_232E2460C + 4 * byte_232E74210[v4]))();
}

uint64_t sub_232E2460C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_232E24614(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x232E2461CLL);
  return result;
}

uint64_t sub_232E24628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x232E24630);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E24634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_232E2463C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlertPresentationOptions()
{
  return &type metadata for AlertPresentationOptions;
}

ValueMetadata *type metadata accessor for AlertServiceDefinition()
{
  return &type metadata for AlertServiceDefinition;
}

uint64_t storeEnumTagSinglePayload for AlertPresentationOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E246B4 + 4 * byte_232E7421F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E246E8 + 4 * byte_232E7421A[v4]))();
}

uint64_t sub_232E246E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E246F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E246F8);
  return result;
}

uint64_t sub_232E24704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E2470CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E24710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E24718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlertPresentationOptions.CodingKeys()
{
  return &type metadata for AlertPresentationOptions.CodingKeys;
}

unint64_t sub_232E24738()
{
  unint64_t result;

  result = qword_255FFDA58;
  if (!qword_255FFDA58)
  {
    result = MEMORY[0x23492A124](&unk_232E74404, &type metadata for AlertPresentationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDA58);
  }
  return result;
}

unint64_t sub_232E24780()
{
  unint64_t result;

  result = qword_255FFDA60;
  if (!qword_255FFDA60)
  {
    result = MEMORY[0x23492A124](&unk_232E74374, &type metadata for AlertPresentationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDA60);
  }
  return result;
}

unint64_t sub_232E247C8()
{
  unint64_t result;

  result = qword_255FFDA68;
  if (!qword_255FFDA68)
  {
    result = MEMORY[0x23492A124](&unk_232E7439C, &type metadata for AlertPresentationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDA68);
  }
  return result;
}

void sub_232E2480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v20 = a4;
  v25 = a3;
  v19 = a2;
  v5 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v5);
  v13[4] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v7);
  v18 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedConformanceWitness();
  v21 = AssociatedTypeWitness;
  v22 = AssociatedConformanceWitness;
  v16 = v11;
  v17 = AssociatedConformanceWitness;
  v23 = v11;
  v24 = v12;
  v15 = v12;
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E24954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[96];

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 152) = &v17[-v7];
  v8 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)(v4 - 128);
  *(_DWORD *)(v4 - 136) = **(unsigned __int8 **)(v4 - 136);
  ActivityDescriptor.decodeAttributes<A>(for:)();
  if (!v12)
  {
    *(_QWORD *)(v4 - 208) = a1;
    *(_QWORD *)(v4 - 200) = v11;
    *(_QWORD *)(v4 - 216) = v6;
    *(_QWORD *)(v4 - 128) = v8;
    v13 = *(_QWORD *)(v4 - 144);
    sub_232DED470(*(_QWORD *)(v4 - 72), v13, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
    v14 = *(_QWORD *)(v4 - 152);
    ActivityContent.init(from:)(v13, v1, *(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 176), v14);
    v15 = *(_QWORD *)(v4 - 192);
    sub_232DED470(v2, v15, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
    *(_BYTE *)(v4 - 112) = *(_DWORD *)(v4 - 136);
    sub_232E2A964(v15, *(_QWORD *)(v4 - 200), v4 - 112, v14);
  }
  swift_release();
  sub_232DF51B8(*(_QWORD *)(v4 - 72), (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
  sub_232DF51B8(v2, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  return v1;
}

uint64_t sub_232E24B50()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFC738);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC738);
  return sub_232E6EF1C();
}

void static Activity.request(attributes:contentState:pushType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9[3] = a2;
  v11 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v3);
  v9[2] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9[0] = AssociatedConformanceWitness;
  v7 = swift_getAssociatedConformanceWitness();
  v8 = swift_getAssociatedConformanceWitness();
  v12 = AssociatedTypeWitness;
  v13 = AssociatedConformanceWitness;
  v14 = v7;
  v15 = v8;
  type metadata accessor for ActivityContent();
}

void sub_232E24CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  *(_QWORD *)(v12 - 152) = a1;
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(v9 + 16))(v11, *(_QWORD *)(v12 - 136), v10, v13);
  v16 = sub_232E6EE74();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(*(_QWORD *)(v12 - 144), 1, 1, v16);
  ActivityContent.init(state:staleDate:relevanceScore:)(v11, v10, (uint64_t)v15);
}

void sub_232E24D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v0;
  static Activity.request(attributes:content:pushType:)(*(_QWORD *)(v3 - 120), v1, (uint64_t *)(v3 - 112));
}

uint64_t sub_232E24DA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v2, *(_QWORD *)(v3 - 152));
  return a1;
}

void static Activity.request(attributes:content:pushType:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v3 = a3[1];
  v4 = v3;
  if (v3)
  {
    if (v3 == 1)
      goto LABEL_7;
    v4 = *a3;
  }
  swift_bridgeObjectRetain();
  v5 = sub_232E1028C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_232E1028C((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v8 = &v5[5 * v7];
  v8[4] = v4;
  v8[5] = v3;
  *((_OWORD *)v8 + 3) = xmmword_232E74480;
  *((_BYTE *)v8 + 64) = 0;
LABEL_7:
  static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:)();
}

void static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E25020(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  int v16;
  char v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  _BYTE v32[16];

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v32[-v6];
  v8 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v3 - 72) = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for ActivityRequest();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v16 = *(unsigned __int8 *)(v3 + 16);
    *(_DWORD *)(v3 - 256) = *(unsigned __int8 *)(v3 + 17);
    *(_DWORD *)(v3 - 252) = v16;
    *(_QWORD *)(v3 - 264) = v2[2];
    *(_DWORD *)(v3 - 268) = *((unsigned __int8 *)v2 + 12);
    *(_DWORD *)(v3 - 272) = *((unsigned __int8 *)v2 + 11);
    *(_DWORD *)(v3 - 276) = *((unsigned __int8 *)v2 + 10);
    *(_DWORD *)(v3 - 280) = *((unsigned __int8 *)v2 + 9);
    v17 = *((_BYTE *)v2 + 8);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v8 + 16);
    v19 = *(_QWORD *)(v3 - 72);
    v20 = *(_QWORD *)(v3 - 240);
    *(_QWORD *)(v3 - 240) = v14;
    v18(v19, v20, v1, v12);
    ActivityAttributesType.init<A>(from:)((uint64_t *)(v3 - 136));
    v21 = *(_QWORD *)(v3 - 128);
    *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 136);
    *(_QWORD *)(v3 - 144) = v21;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v3 - 224), a1);
    *(_QWORD *)(v3 - 120) = v15;
    *(_BYTE *)(v3 - 112) = v17;
    *(_BYTE *)(v3 - 111) = *(_DWORD *)(v3 - 280);
    *(_BYTE *)(v3 - 110) = *(_DWORD *)(v3 - 276);
    *(_BYTE *)(v3 - 109) = *(_DWORD *)(v3 - 272);
    *(_BYTE *)(v3 - 108) = *(_DWORD *)(v3 - 268);
    v22 = *(void **)(v3 - 264);
    *(_QWORD *)(v3 - 104) = v22;
    v23 = *(_DWORD *)(v3 - 200) & 1;
    *(_DWORD *)(v3 - 224) = v23;
    *(_QWORD *)(v3 - 200) = v7;
    sub_232DF99C4(*(_QWORD *)(v3 - 184), *(_QWORD *)(v3 - 176), v23);
    swift_bridgeObjectRetain();
    v24 = v22;
    swift_bridgeObjectRetain();
    ActivityRequest.init<A, B>(attributes:attributesType:initialContent:platterTarget:presentationOptions:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:identifier:)();
  }
  if (qword_255FFC750 != -1)
    swift_once();
  v25 = sub_232E6EF28();
  __swift_project_value_buffer(v25, (uint64_t)qword_255FFC738);
  v26 = sub_232E6EF10();
  v27 = sub_232E6F378();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_232DDB000, v26, (os_log_type_t)v28, "Cannot specify presentationOptions with no visual destinations", v29, 2u);
    MEMORY[0x23492A1F0](v29, -1, -1);
  }

  sub_232DF9980();
  swift_allocError();
  *(_OWORD *)v30 = xmmword_232E74480;
  *(_OWORD *)(v30 + 16) = 0u;
  *(_OWORD *)(v30 + 32) = 0u;
  *(_OWORD *)(v30 + 48) = 0u;
  *(_QWORD *)(v30 + 64) = 0;
  swift_willThrow();
  return v28;
}

void static Activity.request(attributes:content:pushType:isMomentary:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v3 = a3[1];
  v4 = v3;
  if (v3)
  {
    if (v3 == 1)
      goto LABEL_7;
    v4 = *a3;
  }
  swift_bridgeObjectRetain();
  v5 = sub_232E1028C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_232E1028C((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v8 = &v5[5 * v7];
  v8[4] = v4;
  v8[5] = v3;
  *((_OWORD *)v8 + 3) = xmmword_232E74480;
  *((_BYTE *)v8 + 64) = 0;
LABEL_7:
  static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:)();
}

void static Activity.request(attributes:content:pushType:style:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v3 = a3[1];
  v4 = v3;
  if (v3)
  {
    if (v3 == 1)
      goto LABEL_7;
    v4 = *a3;
  }
  swift_bridgeObjectRetain();
  v5 = sub_232E1028C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_232E1028C((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v8 = &v5[5 * v7];
  v8[4] = v4;
  v8[5] = v3;
  *((_OWORD *)v8 + 3) = xmmword_232E74480;
  *((_BYTE *)v8 + 64) = 0;
LABEL_7:
  static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:)();
}

void static Activity.request(attributes:contentState:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, int a8)
{
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;

  v8 = *((_BYTE *)a3 + 8);
  v9 = *((_BYTE *)a3 + 9);
  v10 = *((_BYTE *)a3 + 10);
  v11 = *((_BYTE *)a3 + 11);
  v12 = *((_BYTE *)a3 + 12);
  v13 = a3[2];
  v14 = *a3;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  v19 = v12;
  v20 = v13;
  static Activity.request(attributes:contentState:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)(a1, a2, (uint64_t)&v14, a4, a5, a6 & 1, a7, a8, 0);
}

void static Activity.request(attributes:contentState:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, int a8, unsigned __int8 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[8];
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24 = a8;
  v22 = a5;
  v23 = a7;
  v21 = a4;
  v16[7] = a2;
  v19 = a1;
  v18 = a9;
  v20 = a6 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v10);
  v16[6] = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16[3] = AssociatedConformanceWitness;
  v14 = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v25 = AssociatedTypeWitness;
  v26 = AssociatedConformanceWitness;
  v27 = v14;
  v28 = v15;
  type metadata accessor for ActivityContent();
}

void sub_232E258C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v19;

  *(_QWORD *)(v13 - 208) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 200) = a1;
  v14 = MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&a9 - v15;
  v17 = v10[9];
  *(_DWORD *)(v13 - 224) = v10[10];
  *(_DWORD *)(v13 - 220) = v17;
  v18 = v10[11];
  *(_DWORD *)(v13 - 232) = v10[12];
  *(_DWORD *)(v13 - 228) = v18;
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(v9 + 16))(v12, *(_QWORD *)(v13 - 184), v11, v14);
  v19 = sub_232E6EE74();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(*(_QWORD *)(v13 - 192), 1, 1, v19);
  ActivityContent.init(state:staleDate:relevanceScore:)(v12, v11, (uint64_t)v16);
}

void sub_232E25974()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 112) = v2;
  *(_BYTE *)(v3 - 104) = v1;
  *(_BYTE *)(v3 - 103) = *(_DWORD *)(v3 - 220);
  *(_BYTE *)(v3 - 102) = *(_DWORD *)(v3 - 224);
  *(_BYTE *)(v3 - 101) = *(_DWORD *)(v3 - 228);
  *(_BYTE *)(v3 - 100) = *(_DWORD *)(v3 - 232);
  *(_QWORD *)(v3 - 96) = v0;
  static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:)();
}

uint64_t sub_232E259D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 208) + 8))(v1, *(_QWORD *)(v2 - 200));
  return a1;
}

void static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)()
{
  static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:)();
}

void *sub_232E25A84(void *a1)
{
  void *v1;
  id v2;
  _BYTE *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  char v18;
  id v19;
  _BYTE *v21;
  void *v22;
  void *v23;
  void *v24;

  v1 = a1;
  v24 = a1;
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
  if (swift_dynamicCast())
  {
    sub_232E2C490();
    v1 = (void *)swift_allocError();
    *v3 = (_BYTE)v23;
  }
  else
  {
    v4 = (void *)sub_232E6EDE4();
    v5 = objc_msgSend(v4, sel_underlyingErrors);
    v6 = sub_232E6F2B8();

    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v22 = v4;
      swift_bridgeObjectRetain();
      v8 = 0;
      while (1)
      {
        v9 = *(void **)(v6 + 8 * v8 + 32);
        v10 = v9;
        v11 = (void *)sub_232E6EDE4();
        v12 = objc_msgSend(v11, sel_domain);

        v13 = sub_232E6F1EC();
        v15 = v14;

        if (v13 == 0xD00000000000002BLL && v15 == 0x8000000232E7EB90)
          break;
        v16 = sub_232E6F6E4();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          goto LABEL_12;
        ++v8;

        if (v7 == v8)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = v9;
      sub_232DE06B4(0, &qword_255FFDE98);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v17 = v23;
        sub_232E3B5F8((uint64_t)objc_msgSend(v17, sel_code), &v24);
        v18 = (char)v24;
        if (v24 != 12)
        {
          sub_232E2C490();
          v1 = (void *)swift_allocError();
          *v21 = v18;

          return v1;
        }

      }
      else
      {

      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
LABEL_16:
    v19 = v1;
  }
  return v1;
}

void static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:protectionClass:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E25E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned __int8 v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  char v31;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v31 - v6;
  v8 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *((_QWORD *)v3 - 9) = &v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityRequest();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    *((_DWORD *)v3 - 63) = v3[18];
    *((_DWORD *)v3 - 65) = v3[17];
    *((_DWORD *)v3 - 64) = v3[16];
    *((_QWORD *)v3 - 34) = v2[2];
    *((_DWORD *)v3 - 69) = *((unsigned __int8 *)v2 + 12);
    *((_DWORD *)v3 - 70) = *((unsigned __int8 *)v2 + 11);
    *((_DWORD *)v3 - 71) = *((unsigned __int8 *)v2 + 10);
    *((_DWORD *)v3 - 72) = *((unsigned __int8 *)v2 + 9);
    v16 = *((_BYTE *)v2 + 8);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v8 + 16);
    v18 = *((_QWORD *)v3 - 9);
    v19 = *((_QWORD *)v3 - 30);
    *((_QWORD *)v3 - 30) = v14;
    v17(v18, v19, v1, v12);
    ActivityAttributesType.init<A>(from:)((uint64_t *)v3 - 17);
    v20 = *((_QWORD *)v3 - 16);
    *((_QWORD *)v3 - 19) = *((_QWORD *)v3 - 17);
    *((_QWORD *)v3 - 18) = v20;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 16))(v7, *((_QWORD *)v3 - 28), a1);
    *((_QWORD *)v3 - 15) = v15;
    *(v3 - 112) = v16;
    *(v3 - 111) = *((_DWORD *)v3 - 72);
    *(v3 - 110) = *((_DWORD *)v3 - 71);
    *(v3 - 109) = *((_DWORD *)v3 - 70);
    *(v3 - 108) = *((_DWORD *)v3 - 69);
    v21 = (void *)*((_QWORD *)v3 - 34);
    *((_QWORD *)v3 - 13) = v21;
    v22 = *((_DWORD *)v3 - 50) & 1;
    *((_DWORD *)v3 - 56) = v22;
    *((_QWORD *)v3 - 25) = v7;
    sub_232DF99C4(*((_QWORD *)v3 - 23), *((_QWORD *)v3 - 22), v22);
    swift_bridgeObjectRetain();
    v23 = v21;
    swift_bridgeObjectRetain();
    ActivityRequest.init<A, B>(attributes:attributesType:initialContent:platterTarget:presentationOptions:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:identifier:protectionClass:)();
  }
  if (qword_255FFC750 != -1)
    swift_once();
  v24 = sub_232E6EF28();
  __swift_project_value_buffer(v24, (uint64_t)qword_255FFC738);
  v25 = sub_232E6EF10();
  v26 = sub_232E6F378();
  v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_232DDB000, v25, (os_log_type_t)v27, "Cannot specify presentationOptions with no visual destinations", v28, 2u);
    MEMORY[0x23492A1F0](v28, -1, -1);
  }

  sub_232DF9980();
  swift_allocError();
  *(_OWORD *)v29 = xmmword_232E74480;
  *(_OWORD *)(v29 + 16) = 0u;
  *(_OWORD *)(v29 + 32) = 0u;
  *(_OWORD *)(v29 + 48) = 0u;
  *(_QWORD *)(v29 + 64) = 0;
  swift_willThrow();
  return v27;
}

uint64_t sub_232E26224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Activity(0, a2, a3, a4);
  return sub_232E6EEEC();
}

uint64_t Activity.id.getter()
{
  uint64_t v0;

  v0 = sub_232E2AA3C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_232E26290()
{
  swift_retain();
  sub_232E6EFDC();
  return swift_release();
}

uint64_t sub_232E262C4(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;

  v1 = *a1;
  swift_retain();
  sub_232E6EFD0();
  result = swift_release();
  if (v1 == 2)
  {
    swift_retain();
    sub_232E6EFC4();
    return swift_release();
  }
  return result;
}

uint64_t sub_232E26340()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542373A0);
  sub_232DDF49C(&qword_255FFC2E8, &qword_2542373A0, MEMORY[0x24BDB9D10]);
  sub_232E6F030();
  return sub_232E6EEEC();
}

uint64_t sub_232E263C0()
{
  return sub_232E6EEEC();
}

uint64_t sub_232E263CC()
{
  swift_retain();
  sub_232E6EFDC();
  return swift_release();
}

uint64_t sub_232E26400()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  v0 = sub_232E6EFE8();
  MEMORY[0x23492A124](MEMORY[0x24BDB9D10], v0);
  sub_232E6F030();
  swift_getAssociatedTypeWitness();
  return sub_232E6EEEC();
}

uint64_t sub_232E264E0()
{
  swift_getAssociatedTypeWitness();
  return sub_232E6EEEC();
}

uint64_t sub_232E26530()
{
  swift_retain();
  sub_232E6EFDC();
  return swift_release();
}

void sub_232E26564()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

void sub_232E2662C()
{
  uint64_t v0;

  v0 = sub_232E6EFE8();
  MEMORY[0x23492A124](MEMORY[0x24BDB9D10], v0);
  sub_232E6F030();
  sub_232E26698();
}

void sub_232E26698()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2675C()
{
  return sub_232E6EEEC();
}

uint64_t sub_232E26788()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[2];
  v1 = v0[3];
  v3 = *(_QWORD *)(*(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 144)) + 80);
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 16) + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 72);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_232DE0F18(v2, v1);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v5 + 56) + 16 * v6;
      v9 = *(_QWORD *)v8;
      sub_232DE4A2C(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
    }
    else
    {
      v9 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  os_unfair_lock_unlock(v4);
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_232E26894()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v1 = *(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 144));
  v3 = v0[2];
  v2 = v0[3];
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)(v1 + 80) + 16) + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_232DFF738(v3, v2);
  os_unfair_lock_unlock(v4);
  swift_release();
  swift_release();
  return sub_232E6EEEC();
}

uint64_t sub_232E26930()
{
  return sub_232E6EEEC();
}

uint64_t static Activity.pushToStartTokenUpdates.getter()
{
  if (qword_254238460 != -1)
    swift_once();
  sub_232E0C460();
  return sub_232E6EEEC();
}

uint64_t static Activity.pushToStartToken.getter()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  if (qword_254238460 != -1)
    swift_once();
  v0 = (_QWORD *)*((_QWORD *)off_2542385A8 + 10);
  v1 = *(os_unfair_lock_s **)(v0[2] + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1);
  v2 = v0[10];
  sub_232DF9AE8(v2, v0[11]);
  os_unfair_lock_unlock(v1);
  swift_release();
  swift_release();
  return v2;
}

uint64_t Activity.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
}

uint64_t Activity.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DED470(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136), a1, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
}

uint64_t Activity.activityManager.getter()
{
  return swift_retain();
}

void sub_232E26AA0()
{
  uint64_t v0;

  v0 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E26BA8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char v16;
  void (*v17)(_BYTE *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE v28[96];

  *(_QWORD *)(v8 - 176) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v28[-v13];
  sub_232DED470(v2, v5, v1);
  ActivityContent.init(from:)(v5, v3, v4, v6, v7, (uint64_t)v14);
  v15 = *(_QWORD *)(v8 - 168);
  sub_232E26530();
  v16 = static ActivityContent.== infix(_:_:)((uint64_t)v11, (uint64_t)v14, v3, v4, v6, v7);
  v17 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v8 - 176) + 8);
  v17(v11, a1);
  if ((v16 & 1) == 0)
  {
    v18 = v15;
    if (qword_255FFC750 != -1)
      swift_once();
    v19 = sub_232E6EF28();
    __swift_project_value_buffer(v19, (uint64_t)qword_255FFC738);
    swift_retain();
    v20 = sub_232E6EF10();
    v21 = sub_232E6F378();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      *(_QWORD *)(v8 - 176) = v14;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      *(_QWORD *)(v8 - 112) = v24;
      *(_DWORD *)v23 = 136315138;
      *(_QWORD *)(v8 - 184) = v23 + 4;
      v25 = *(_QWORD *)(v18 + 16);
      v26 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v8 - 160) = sub_232DE4A70(v25, v26, (uint64_t *)(v8 - 112));
      sub_232E6F480();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232DDB000, v20, v21, "Updating content for activity %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v24, -1, -1);
      v14 = *(_BYTE **)(v8 - 176);
      MEMORY[0x23492A1F0](v23, -1, -1);

    }
    else
    {

      swift_release();
    }
    sub_232E2A9D4();
    sub_232E2AA08();
  }
  return ((uint64_t (*)(_BYTE *, uint64_t))v17)(v14, a1);
}

void sub_232E26FB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;

  v2[6] = a1;
  v2[7] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  v2[9] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[10] = AssociatedTypeWitness;
  v2[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[12] = swift_task_alloc();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v2[13] = AssociatedConformanceWitness;
  v5 = swift_getAssociatedConformanceWitness();
  v2[14] = v5;
  v6 = swift_getAssociatedConformanceWitness();
  v2[15] = v6;
  v2[2] = AssociatedTypeWitness;
  v2[3] = AssociatedConformanceWitness;
  v2[4] = v5;
  v2[5] = v6;
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E270F0(uint64_t a1)
{
  _QWORD *v1;

  v1[16] = a1;
  v1[17] = *(_QWORD *)(a1 - 8);
  v1[18] = swift_task_alloc();
  return swift_task_switch();
}

void sub_232E27138()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[18];
  v2 = v0[12];
  v3 = v0[10];
  v4 = v0[9];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[11] + 16))(v2, v0[6], v3);
  v5 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  ActivityContent.init(state:staleDate:relevanceScore:)(v2, v3, v1);
}

uint64_t sub_232E271C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = type metadata accessor for AlertConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_232E27234;
  return sub_232E2772C(v0[18], v0[8]);
}

uint64_t sub_232E27234()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc();
  sub_232DDD798(v1, &qword_254237AD8);
  return swift_task_switch();
}

uint64_t sub_232E2729C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_232E27308(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  v2[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_232E27364()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[4];
  v2 = type metadata accessor for AlertConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_232E273DC;
  return sub_232E2772C(v0[2], v0[4]);
}

uint64_t sub_232E273DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 32);
  v3 = *v0;
  swift_task_dealloc();
  sub_232DDD798(v1, &qword_254237AD8);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_232E2743C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  v3[9] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[10] = AssociatedTypeWitness;
  v3[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[12] = swift_task_alloc();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3[13] = AssociatedConformanceWitness;
  v6 = swift_getAssociatedConformanceWitness();
  v3[14] = v6;
  v7 = swift_getAssociatedConformanceWitness();
  v3[15] = v7;
  v3[2] = AssociatedTypeWitness;
  v3[3] = AssociatedConformanceWitness;
  v3[4] = v6;
  v3[5] = v7;
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E27554(uint64_t a1)
{
  _QWORD *v1;

  v1[16] = a1;
  v1[17] = *(_QWORD *)(a1 - 8);
  v1[18] = swift_task_alloc();
  return swift_task_switch();
}

void sub_232E2759C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[18];
  v2 = v0[12];
  v3 = v0[10];
  v4 = v0[9];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[11] + 16))(v2, v0[6], v3);
  v5 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  ActivityContent.init(state:staleDate:relevanceScore:)(v2, v3, v1);
}

uint64_t sub_232E2762C()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_232E27674;
  return sub_232E2772C(v0[18], v0[7]);
}

uint64_t sub_232E27674()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E276C8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_232E2772C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_232E6EE74();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

void sub_232E27790()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_232E6EE68();
  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_232E2C4E4;
  sub_232E277EC(v0[2], v0[3], v0[7]);
}

void sub_232E277EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;

  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  type metadata accessor for OpaqueActivityPayload(0);
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  v4[20] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[21] = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4[22] = AssociatedConformanceWitness;
  v7 = swift_getAssociatedConformanceWitness();
  v4[23] = v7;
  v8 = swift_getAssociatedConformanceWitness();
  v4[24] = v8;
  v4[2] = AssociatedTypeWitness;
  v4[3] = AssociatedConformanceWitness;
  v4[4] = v7;
  v4[5] = v8;
  type metadata accessor for ActivityContent();
}

void sub_232E2790C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[25] = a1;
  v4[26] = *(_QWORD *)(a1 - 8);
  v4[27] = swift_task_alloc();
  v6 = sub_232E6EE74();
  v4[28] = v6;
  v4[29] = *(_QWORD *)(v6 - 8);
  v4[30] = swift_task_alloc();
  v4[6] = v2;
  v4[7] = v1;
  v4[8] = v5;
  v4[9] = v3;
  type metadata accessor for ActivityPayload();
}

uint64_t sub_232E2796C(uint64_t a1)
{
  _QWORD *v1;

  v1[31] = a1;
  v1[32] = *(_QWORD *)(a1 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  return swift_task_switch();
}

void sub_232E279C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[26];
  v2 = v0[27];
  v3 = v0[25];
  v6 = v0[15];
  v4 = v0[20];
  v5 = v0[16];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[29] + 16))(v0[30], v0[17], v0[28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v6, v3);
  sub_232DF5040(v5, v4, &qword_254237AD8);
  ActivityPayload.init(timestamp:content:alertConfiguration:)();
}

void sub_232E27A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(a15 + 16))(a16, v17, a17);
  OpaqueActivityPayload.init<A>(encoding:)();
}

uint64_t sub_232E27AC8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (v0)
  {
    if (qword_255FFC750 != -1)
      swift_once();
    v2 = sub_232E6EF28();
    __swift_project_value_buffer(v2, (uint64_t)qword_255FFC738);
    v3 = v0;
    v4 = v0;
    v5 = sub_232E6EF10();
    v6 = sub_232E6F378();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(_QWORD *)(v1 + 272);
    v9 = *(_QWORD *)(v1 + 248);
    v10 = *(_QWORD *)(v1 + 256);
    if (v7)
    {
      v21 = *(_QWORD *)(v1 + 248);
      v20 = *(_QWORD *)(v1 + 256);
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v22 = v12;
      *(_DWORD *)v11 = 136446210;
      swift_getErrorValue();
      v13 = sub_232E6F738();
      *(_QWORD *)(v1 + 112) = sub_232DE4A70(v13, v14, &v22);
      sub_232E6F480();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232DDB000, v5, v6, "Error updating activity content: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v12, -1, -1);
      MEMORY[0x23492A1F0](v11, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v8, v21);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else
  {
    v15 = *(_QWORD *)(v1 + 272);
    v16 = *(_QWORD *)(v1 + 248);
    v17 = *(_QWORD *)(v1 + 256);
    v18 = *(_QWORD *)(v1 + 152);
    sub_232E0C720(*(_QWORD *)(*(_QWORD *)(v1 + 144) + 16), *(_QWORD *)(*(_QWORD *)(v1 + 144) + 24), v18);
    sub_232DF51B8(v18, type metadata accessor for OpaqueActivityPayload);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_232E27D38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  v3[9] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[10] = AssociatedTypeWitness;
  v5 = sub_232E6F474();
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3[17] = AssociatedConformanceWitness;
  v7 = swift_getAssociatedConformanceWitness();
  v3[18] = v7;
  v8 = swift_getAssociatedConformanceWitness();
  v3[19] = v8;
  v3[2] = AssociatedTypeWitness;
  v3[3] = AssociatedConformanceWitness;
  v3[4] = v7;
  v3[5] = v8;
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E27E8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[20] = a1;
  v2 = sub_232E6F474();
  v1[21] = v2;
  v1[22] = *(_QWORD *)(v2 - 8);
  v1[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_232E27EE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;

  v1 = v0[13];
  v2 = v0[14];
  v3 = v0[11];
  v4 = v0[12];
  v5 = v0[10];
  v6 = v0[6];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0[20] - 8) + 56))(v0[23], 1, 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v5) != 1)
  {
    v7 = v0[23];
    v9 = v0[15];
    v8 = v0[16];
    v11 = v0[13];
    v10 = v0[14];
    v12 = v0[9];
    v13 = v0[10];
    (*(void (**)(uint64_t, _QWORD))(v0[22] + 8))(v7, v0[21]);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    v14(v8, v11, v13);
    v14(v9, v8, v13);
    v15 = sub_232E6EE74();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
    ActivityContent.init(state:staleDate:relevanceScore:)(v9, v13, v7);
  }
  (*(void (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[13], v0[11]);
  v16 = (_QWORD *)swift_task_alloc();
  v0[24] = v16;
  *v16 = v0;
  v16[1] = sub_232E28070;
  return sub_232E28144(v0[23], v0[7]);
}

uint64_t sub_232E28070()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E280C4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_232E28144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_232E6EE74();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_232E281A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  sub_232E6EE68();
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = sub_232E2821C;
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 40) = v2;
  *(_OWORD *)(v1 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_232E2821C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*v0 + 56);
  v2 = *(_QWORD *)(*v0 + 40);
  v3 = *(_QWORD *)(*v0 + 48);
  v5 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_232E28288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

void sub_232E282A4()
{
  uint64_t *v0;

  sub_232E28670(v0[2], v0[3], v0[4]);
}

uint64_t sub_232E282C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_232E282D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[14];

  v13[7] = a1;
  v13[8] = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v2);
  v13[6] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_232E6F474();
  MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v13[5] = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v13[2] = (char *)v13 - v9;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedConformanceWitness();
  v13[10] = AssociatedTypeWitness;
  v13[11] = AssociatedConformanceWitness;
  v13[3] = v11;
  v13[4] = AssociatedConformanceWitness;
  v13[12] = v11;
  v13[13] = v12;
  v13[1] = v12;
  type metadata accessor for ActivityContent();
}

void sub_232E2846C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v16 = sub_232E6F474();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&a9 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(a1 - 8) + 56))((char *)&a9 - v19, 1, 1, a1, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16))(v12, *(_QWORD *)(v14 - 136), v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
    sub_232E285DC((uint64_t)v20, *(_QWORD *)(v14 - 128));
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v22 = *(_QWORD *)(v14 - 176);
  v21(v22, v12, v9);
  v23 = *(_QWORD *)(v14 - 152);
  v21(v23, v22, v9);
  v24 = sub_232E6EE74();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(*(_QWORD *)(v14 - 144), 1, 1, v24);
  ActivityContent.init(state:staleDate:relevanceScore:)(v23, v9, (uint64_t)v20);
}

uint64_t sub_232E285AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void sub_232E285DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = sub_232E6EE74();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EE68();
  sub_232E28670(a1, a2, (uint64_t)v6);
}

uint64_t sub_232E28648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_232E28670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v20 = a3;
  v25 = a2;
  v27 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OpaqueActivityPayload(0);
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v23 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  MEMORY[0x24BDAC7A8](v9);
  v19 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_232E6EE74();
  v16[2] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v18 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v28 = AssociatedTypeWitness;
  v29 = AssociatedConformanceWitness;
  v30 = v14;
  v31 = v15;
  type metadata accessor for ActivityPayload();
}

void sub_232E28888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 192) = a1;
  *(_QWORD *)(v13 - 256) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 312) = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 288) = v10;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v11;
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E288FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[96];

  v3 = sub_232E6F474();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v23[-v5];
  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v1 - 184) = &v23[-v13];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v4 + 16))(v6, *(_QWORD *)(v1 - 176), v3, v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v6, 1, a1) != 1)
  {
    v21 = *(_QWORD *)(v1 - 184);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v21, v6, a1);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 - 304) + 16))(*(_QWORD *)(v1 - 280), *(_QWORD *)(v1 - 264), *(_QWORD *)(v1 - 296));
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v21, a1);
    v22 = type metadata accessor for AlertConfiguration();
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(*(_QWORD *)(v1 - 272), 1, 1, v22);
    ActivityPayload.init(timestamp:content:alertConfiguration:)();
  }
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v14 = *(_QWORD *)(v1 - 248);
  v16 = *(_QWORD *)(v14 + 16);
  v15 = *(_QWORD *)(v14 + 24);
  v17 = *(_QWORD *)(v1 - 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 240) + 56))(v17, 1, 1, *(_QWORD *)(v1 - 232));
  v18 = *(_QWORD *)(v1 - 200);
  sub_232DED470(*(_QWORD *)(v1 - 208), v18, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
  v19 = type metadata accessor for ActivityEndingOptions();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
  sub_232E0C9C0(v16, v15, v17, v18);
  sub_232DDD798(v18, &qword_254237620);
  return sub_232DDD798(v17, &qword_2542379D0);
}

uint64_t sub_232E28E3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  v2[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_232E28E98()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[4];
  v2 = type metadata accessor for ActivityEndingOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_232E28F10;
  return sub_232E28F70(v0[2], v0[4]);
}

uint64_t sub_232E28F10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 32);
  v3 = *v0;
  swift_task_dealloc();
  sub_232DDD798(v1, &qword_254237620);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_232E28F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  v3[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD8E0);
  v3[6] = swift_task_alloc();
  v4 = type metadata accessor for ActivityUIDismissalPolicy();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

void sub_232E2901C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0[5];
  sub_232DF5040(v0[3], v1, &qword_254237620);
  v2 = type metadata accessor for ActivityEndingOptions();
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  v4 = v0[7];
  v5 = v0[8];
  v7 = v0[5];
  v6 = v0[6];
  if (v3 == 1)
  {
    sub_232DDD798(v0[5], &qword_254237620);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
  }
  else
  {
    sub_232DED470(v0[5], v0[6], (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
    sub_232DF51B8(v7, (uint64_t (*)(_QWORD))type metadata accessor for ActivityEndingOptions);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v6, 0, 1, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
    {
      sub_232E2AA44(v0[6], v0[9]);
      goto LABEL_8;
    }
  }
  if (qword_255FFB4A8 != -1)
    swift_once();
  v8 = v0[9];
  v9 = v0[6];
  v10 = __swift_project_value_buffer(v0[7], (uint64_t)qword_255FFB360);
  sub_232DED470(v10, v8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
  sub_232DDD798(v9, &qword_255FFD8E0);
LABEL_8:
  v11 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = sub_232E291B0;
  sub_232E27D38(v0[2], v0[9]);
}

uint64_t sub_232E291B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 72);
  v3 = *v0;
  swift_task_dealloc();
  sub_232DF51B8(v1, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t *Activity.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 128));
  sub_232DF51B8((uint64_t)v0 + *(_QWORD *)(*v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Activity.__deallocating_deinit()
{
  Activity.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_232E292F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_232E2AA3C();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_232E29320@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_232E29328()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E2937C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_232E29384(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *);

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_232E29414;
  v5 = (uint64_t (*)(_QWORD *))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v3 = (_QWORD *)swift_task_alloc();
  v2[3] = v3;
  *v3 = v2;
  v3[1] = sub_232E29328;
  return v5(v2 + 2);
}

uint64_t sub_232E29414(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v5;

  v3 = *(_QWORD **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();
  *v3 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_232E29468()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_232E2C4D4;
  return sub_232E6F348();
}

uint64_t sub_232E294EC(uint64_t a1, uint64_t a2)
{
  return sub_232E29AB0(a1, a2, (void (*)(void))Activity.ActivityUpdates.makeAsyncIterator());
}

uint64_t Activity.ActivityStateUpdates.makeAsyncIterator()@<X0>(uint64_t *a1@<X8>)
{
  return sub_232E29AEC(&qword_255FFC2D8, a1);
}

uint64_t Activity.ActivityStateUpdates.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_232E29570;
  return v5(a1);
}

uint64_t sub_232E29570()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_232E295B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_232E29644;
  v6 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_232E29570;
  return v6(a1);
}

uint64_t sub_232E29644()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_232E29690()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_232E29714;
  return sub_232E6F348();
}

uint64_t sub_232E29714()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_232E29764(uint64_t a1, uint64_t a2)
{
  return sub_232E29AB0(a1, a2, (void (*)(void))Activity.ActivityStateUpdates.makeAsyncIterator());
}

uint64_t Activity.ContentStateUpdates.makeAsyncIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getAssociatedTypeWitness();
  sub_232E6EEF8();
  result = sub_232E6EEE0();
  *a1 = result;
  return result;
}

uint64_t Activity.ContentStateUpdates.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_232E2C4D8;
  return v5(a1);
}

uint64_t sub_232E29828(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_232E2C4DC;
  v6 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_232E2C4D8;
  return v6(a1);
}

uint64_t sub_232E298B4(uint64_t a1, uint64_t a2)
{
  return sub_232E29AB0(a1, a2, (void (*)(void))Activity.ContentStateUpdates.makeAsyncIterator());
}

void Activity.ContentUpdates.makeAsyncIterator()()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2997C()
{
  uint64_t *v0;
  uint64_t result;

  sub_232E6EEF8();
  result = sub_232E6EEE0();
  *v0 = result;
  return result;
}

uint64_t Activity.ContentUpdates.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_232E2C4D8;
  return v5(a1);
}

uint64_t sub_232E29A18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_232E2C4DC;
  v6 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_232E2C4D8;
  return v6(a1);
}

uint64_t sub_232E29AA4(uint64_t a1, uint64_t a2)
{
  return sub_232E29AB0(a1, a2, (void (*)(void))Activity.ContentUpdates.makeAsyncIterator());
}

uint64_t sub_232E29AB0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;

  a3();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
}

uint64_t Activity.PushTokenUpdates.makeAsyncIterator()@<X0>(uint64_t *a1@<X8>)
{
  return sub_232E29AEC(&qword_255FFDAE0, a1);
}

uint64_t sub_232E29AEC@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  result = sub_232E6EEE0();
  *a2 = result;
  return result;
}

uint64_t Activity.PushTokenUpdates.Iterator.next()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_232E29B84;
  return v3(v0 + 16);
}

uint64_t sub_232E29B84()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E29BD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_232E29BE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *);

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_232E29C74;
  v5 = (uint64_t (*)(_QWORD *))((int)*MEMORY[0x24BE854C0] + MEMORY[0x24BE854C0]);
  v3 = (_QWORD *)swift_task_alloc();
  v2[4] = v3;
  *v3 = v2;
  v3[1] = sub_232E29B84;
  return v5(v2 + 2);
}

uint64_t sub_232E29C74(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v7;

  v5 = *(_QWORD **)(*v2 + 16);
  v7 = *v2;
  swift_task_dealloc();
  *v5 = a1;
  v5[1] = a2;
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_232E29CD4(uint64_t a1, uint64_t a2)
{
  return sub_232E29AB0(a1, a2, (void (*)(void))Activity.PushTokenUpdates.makeAsyncIterator());
}

void Activity.mockPush(forProcessIdentifier:payload:environmentName:pushPriority:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD, void *), uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  _BYTE *v28;
  uint64_t v31;

  v9 = v8;
  v16 = sub_232E26788();
  if (v17 >> 60 == 15)
  {
    if (qword_255FFC750 != -1)
      swift_once();
    v18 = sub_232E6EF28();
    __swift_project_value_buffer(v18, (uint64_t)qword_255FFC738);
    swift_retain();
    v19 = sub_232E6EF10();
    v20 = sub_232E6F378();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v31 = v22;
      *(_DWORD *)v21 = 136315394;
      sub_232DE4A70(0xD000000000000024, 0x8000000232E7E0B0, &v31);
      sub_232E6F480();
      *(_WORD *)(v21 + 12) = 2080;
      v23 = *(_QWORD *)(v9 + 16);
      v24 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      sub_232DE4A70(v23, v24, &v31);
      sub_232E6F480();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232DDB000, v19, v20, "%s %s. Ensure that you requested this activity with pushType of PushType.token", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v22, -1, -1);
      MEMORY[0x23492A1F0](v21, -1, -1);

    }
    else
    {

      swift_release();
    }
    sub_232E08210();
    v27 = (void *)swift_allocError();
    *v28 = 0;
    a7(0, v27);

  }
  else
  {
    v25 = v16;
    v26 = v17;
    if (qword_254238460 != -1)
      swift_once();
    sub_232DE4A2C(v25, v26);
    ActivityManager.mockPush(token:channelID:processIdentifier:environmentName:payload:pushPriority:completionHandler:)(v25, v26, 0, 0, a1, a2, a4, a5, a3, a6, (uint64_t)a7, a8);
    sub_232DE4A18(v25, v26);
    sub_232DE4A18(v25, v26);
  }
}

uint64_t Activity.mockPushChannel(forProcessIdentifier:channelID:payload:environmentName:pushPriority:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  v11 = a7;
  if (qword_254238460 != -1)
  {
    swift_once();
    v11 = a7;
  }
  return ActivityManager.mockPush(token:channelID:processIdentifier:environmentName:payload:pushPriority:completionHandler:)(0, 0xF000000000000000, a3, a4, a1, a2, a6, v11, a5, a8, a9, a10);
}

void static Activity.mockPushStart(forProcessIdentifier:payload:environmentName:pushPriority:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD, void *), uint64_t a8)
{
  uint64_t started;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  _BYTE *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;

  started = static Activity.pushToStartToken.getter();
  if (v16 >> 60 == 15)
  {
    if (qword_255FFC750 != -1)
      swift_once();
    v17 = sub_232E6EF28();
    __swift_project_value_buffer(v17, (uint64_t)qword_255FFC738);
    v18 = sub_232E6EF10();
    v19 = sub_232E6F378();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v27 = v21;
      *(_DWORD *)v20 = 136315138;
      sub_232DE4A70(0xD000000000000024, 0x8000000232E7E0B0, &v27);
      sub_232E6F480();
      _os_log_impl(&dword_232DDB000, v18, v19, "%s. Ensure that you requested this activity from an activity that supports push to start.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23492A1F0](v21, -1, -1);
      MEMORY[0x23492A1F0](v20, -1, -1);
    }

    sub_232E08210();
    v22 = (void *)swift_allocError();
    *v23 = 0;
    a7(0, v22);

  }
  else
  {
    v24 = started;
    v25 = v16;
    if (qword_254238460 != -1)
      swift_once();
    sub_232DE4A2C(v24, v25);
    ActivityManager.mockPush(token:channelID:processIdentifier:environmentName:payload:pushPriority:completionHandler:)(v24, v25, 0, 0, a1, a2, a4, a5, a3, a6, (uint64_t)a7, a8);
    sub_232DE4A18(v24, v25);
    sub_232DE4A18(v24, v25);
  }
}

uint64_t sub_232E2A328(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_232E2A35C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_232E2A36C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_232DE4A70(v6, v7, a3);
  v8 = *a1 + 8;
  sub_232E6F480();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_232E2A3DC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542383B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

void sub_232E2A528()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

char *sub_232E2A5FC(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[96];

  *(_QWORD *)(v6 - 144) = a1;
  *(_QWORD *)(v6 - 128) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 152) = &v21[-v7];
  *(_QWORD *)(v6 - 176) = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v6 - 184) = &v21[-v9];
  v10 = sub_232E6F3C0();
  *(_QWORD *)(v6 - 208) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 - 200) = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v14);
  *(_DWORD *)(v6 - 188) = *v4;
  *(_QWORD *)(v6 - 216) = *(_QWORD *)(v3 + 152);
  *(_QWORD *)(v6 - 224) = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  sub_232E6F0F0();
  *(_QWORD *)(v6 - 112) = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(_BYTE *, _QWORD, _QWORD))(*(_QWORD *)(v6 - 208) + 104))(v12, *MEMORY[0x24BEE5758], *(_QWORD *)(v6 - 200));
  *(_QWORD *)&v1[*(_QWORD *)(v6 - 216)] = sub_232E6F3F0();
  *(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 160)] = MEMORY[0x24BEE4B08];
  v15 = *(_QWORD **)(v6 - 168);
  sub_232DED470((uint64_t)v15, (uint64_t)&v1[*(_QWORD *)(*(_QWORD *)v1 + 136)], (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  v16 = v15[1];
  *((_QWORD *)v1 + 2) = *v15;
  *((_QWORD *)v1 + 3) = v16;
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 128)], *(_QWORD *)(v6 - 160), v5);
  *(_QWORD *)&v1[*(_QWORD *)(*(_QWORD *)v1 + 144)] = *(_QWORD *)(v6 - 136);
  *(_BYTE *)(v6 - 112) = *(_DWORD *)(v6 - 188);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542373A0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  *((_QWORD *)v1 + 4) = sub_232E6F000();
  sub_232E6EFE8();
  v17 = *(_QWORD *)(v6 - 120);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 176) + 16))(*(_QWORD *)(v6 - 184), v17, v2);
  *((_QWORD *)v1 + 5) = sub_232E6EFF4();
  v18 = *(_QWORD *)(v6 - 144);
  sub_232E6EFE8();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 128) + 16))(*(_QWORD *)(v6 - 152), v17, v18);
  v19 = sub_232E6EFF4();
  sub_232DF51B8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  *((_QWORD *)v1 + 6) = v19;
  return v1;
}

void sub_232E2A964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for Activity(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  swift_allocObject();
  sub_232E2A528();
}

uint64_t sub_232E2A9D4()
{
  swift_retain();
  sub_232E6EFD0();
  return swift_release();
}

uint64_t sub_232E2AA08()
{
  swift_retain();
  sub_232E6EFD0();
  return swift_release();
}

uint64_t sub_232E2AA3C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_232E2AA44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityUIDismissalPolicy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E2AA88()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_232E2AA94()
{
  return MEMORY[0x24BEE40A8];
}

void sub_232E2AAA0()
{
  JUMPOUT(0x23492A124);
}

void sub_232E2AAB0()
{
  JUMPOUT(0x23492A124);
}

void sub_232E2AAC0()
{
  JUMPOUT(0x23492A124);
}

void sub_232E2AAD0()
{
  JUMPOUT(0x23492A124);
}

void sub_232E2AAE0()
{
  JUMPOUT(0x23492A124);
}

uint64_t sub_232E2AAF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_232E26290();
  *a1 = v3;
  return result;
}

uint64_t sub_232E2AB28(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return sub_232E262C4(&v2);
}

uint64_t sub_232E2AB5C()
{
  return 16;
}

__n128 sub_232E2AB68(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_232E2AB74()
{
  return sub_232E263CC();
}

uint64_t sub_232E2AB94()
{
  return sub_232E2AA08();
}

uint64_t sub_232E2ABB4()
{
  return 16;
}

__n128 sub_232E2ABC0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_232E2ABCC()
{
  return sub_232E26530();
}

uint64_t sub_232E2ABEC()
{
  return sub_232E2A9D4();
}

uint64_t sub_232E2AC0C()
{
  return 16;
}

__n128 sub_232E2AC18(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t method lookup function for Activity()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Activity.activityState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Activity.activityStateUpdates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of Activity.contentState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of Activity.contentStateUpdates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of Activity.content.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of Activity.contentUpdates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of Activity.pushToken.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of Activity.pushTokenUpdates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of Activity.update(using:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 392) + *(_QWORD *)(*(_QWORD *)v1 + 392));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_232E2C4D8;
  return v6(a1);
}

uint64_t dispatch thunk of Activity.update(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 400) + *(_QWORD *)(*(_QWORD *)v1 + 400));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_232E2C4D8;
  return v6(a1);
}

uint64_t dispatch thunk of Activity.update(using:alertConfiguration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 408) + *(_QWORD *)(*(_QWORD *)v2 + 408));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_232E2C4D8;
  return v8(a1, a2);
}

uint64_t dispatch thunk of Activity.update(_:alertConfiguration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 416) + *(_QWORD *)(*(_QWORD *)v2 + 416));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_232E2C4D8;
  return v8(a1, a2);
}

uint64_t dispatch thunk of Activity.update(_:alertConfiguration:timestamp:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 424)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 424));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_232E2C4D8;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of Activity.end(using:dismissalPolicy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 432) + *(_QWORD *)(*(_QWORD *)v2 + 432));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_232E2C4D8;
  return v8(a1, a2);
}

uint64_t dispatch thunk of Activity.end(_:dismissalPolicy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 440) + *(_QWORD *)(*(_QWORD *)v2 + 440));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_232E2C4D8;
  return v8(a1, a2);
}

uint64_t dispatch thunk of Activity.end(_:dismissalPolicy:timestamp:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 448)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 448));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_232E2C4D8;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of Activity.endSync(using:dismissalPolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of Activity.endSync(_:dismissalPolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of Activity.endSync(_:dismissalPolicy:timestamp:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of Activity.end(using:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 480) + *(_QWORD *)(*(_QWORD *)v1 + 480));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_232E2C4D8;
  return v6(a1);
}

uint64_t dispatch thunk of Activity.end(using:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 488) + *(_QWORD *)(*(_QWORD *)v2 + 488));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_232E2C4D8;
  return v8(a1, a2);
}

uint64_t sub_232E2B108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for Activity(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_232E6EEF8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1, a2, v6);
}

uint64_t sub_232E2B154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for Activity(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t sub_232E2B1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for Activity(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t sub_232E2B1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for Activity(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t sub_232E2B250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for Activity(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t sub_232E2B2A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E2B2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for Activity(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_232E2B2FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E2B308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for Activity(255, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a4);
  v6 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a2, v6);
}

void sub_232E2B358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_232E2C158(a1, a2, a3, &qword_255FFC2E0);
}

uint64_t sub_232E2B36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC2D8);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_232E2B3AC(uint64_t a1, uint64_t a2)
{
  return sub_232E2C214(a1, a2, &qword_255FFC2D8);
}

uint64_t sub_232E2B3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C254(a1, a2, a3, &qword_255FFC2D8);
}

uint64_t sub_232E2B3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2A4(a1, a2, a3, &qword_255FFC2D8);
}

uint64_t sub_232E2B3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2F4(a1, a2, a3, &qword_255FFC2D8);
}

uint64_t sub_232E2B3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C344(a1, a2, a3, &qword_255FFC2D8);
}

uint64_t sub_232E2B3E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E2B3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_32Tm(a1, a2, a3, &qword_255FFC2D8);
}

uint64_t sub_232E2B400()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E2B40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_33Tm(a1, a2, a3, a4, &qword_255FFC2D8);
}

uint64_t type metadata accessor for Activity.ActivityStateUpdates(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.ActivityStateUpdates);
}

uint64_t type metadata accessor for Activity.ActivityStateUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.ActivityStateUpdates.Iterator);
}

uint64_t sub_232E2B430()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_232E6EEF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_232E2B4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_232E6EEF8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_232E2B514(uint64_t a1)
{
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v2 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_232E2B56C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_232E2B5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_232E2B634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_232E2B698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_232E2B6FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E2B708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_232E2B764()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E2B770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  v4 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Activity.ContentStateUpdates(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.ContentStateUpdates);
}

uint64_t type metadata accessor for Activity.ContentStateUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.ContentStateUpdates.Iterator);
}

void sub_232E2B7E8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2B8A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_232E6EEF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_232E2B908()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2B9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_232E6EEF8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v2 - 8))(v1, v0, v2);
}

void sub_232E2BA08()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2BAC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void sub_232E2BB00()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2BBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  return v0;
}

void sub_232E2BC04()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2BCC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24))(v0, v1, v2);
  return v0;
}

void sub_232E2BD08()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2BDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  return v0;
}

void sub_232E2BE0C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2BECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_232E6EEF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40))(v0, v1, v2);
  return v0;
}

uint64_t sub_232E2BF10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_232E2BF1C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2BFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, v0, v2);
}

uint64_t sub_232E2C01C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_232E2C028()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2C0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_232E6EEF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, v0, v0, v2);
}

uint64_t type metadata accessor for Activity.ContentUpdates(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.ContentUpdates);
}

uint64_t type metadata accessor for Activity.ContentUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.ContentUpdates.Iterator);
}

void sub_232E2C144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_232E2C158(a1, a2, a3, qword_255FFDE10);
}

void sub_232E2C158(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  unint64_t v4;

  sub_232E2C440(319, a4);
  if (v4 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_232E2C1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFDAE0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_232E2C208(uint64_t a1, uint64_t a2)
{
  return sub_232E2C214(a1, a2, &qword_255FFDAE0);
}

uint64_t sub_232E2C214(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_232E2C248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C254(a1, a2, a3, &qword_255FFDAE0);
}

uint64_t sub_232E2C254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t sub_232E2C298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2A4(a1, a2, a3, &qword_255FFDAE0);
}

uint64_t sub_232E2C2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t sub_232E2C2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2F4(a1, a2, a3, &qword_255FFDAE0);
}

uint64_t sub_232E2C2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t sub_232E2C338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C344(a1, a2, a3, &qword_255FFDAE0);
}

uint64_t sub_232E2C344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t sub_232E2C388()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E2C394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_32Tm(a1, a2, a3, &qword_255FFDAE0);
}

uint64_t __swift_get_extra_inhabitant_index_32Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_232E2C3DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E2C3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_33Tm(a1, a2, a3, a4, &qword_255FFDAE0);
}

uint64_t __swift_store_extra_inhabitant_index_33Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t type metadata accessor for Activity.PushTokenUpdates(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.PushTokenUpdates);
}

void sub_232E2C440(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_232E6EEF8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t type metadata accessor for Activity.PushTokenUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Activity.PushTokenUpdates.Iterator);
}

unint64_t sub_232E2C490()
{
  unint64_t result;

  result = qword_255FFDEA0;
  if (!qword_255FFDEA0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationError, &type metadata for ActivityAuthorizationError);
    atomic_store(result, (unint64_t *)&qword_255FFDEA0);
  }
  return result;
}

BOOL static ActivityState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ActivityState.acActivityState()()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ActivityState.hash(into:)()
{
  return sub_232E6F78C();
}

uint64_t sub_232E2C52C()
{
  sub_232E2CB4C();
  return sub_232E6F7D4();
}

uint64_t sub_232E2C554()
{
  sub_232E2CB4C();
  return sub_232E6F7E0();
}

uint64_t sub_232E2C57C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E2C5A8 + 4 * byte_232E749B0[*v0]))(0x657669746361, 0xE600000000000000);
}

uint64_t sub_232E2C5A8()
{
  return 0x6465646E65;
}

uint64_t sub_232E2C5BC()
{
  return 0x657373696D736964;
}

uint64_t sub_232E2C5D8()
{
  return 0x656C617473;
}

uint64_t sub_232E2C5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E2D6FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E2C610()
{
  sub_232E2CA3C();
  return sub_232E6F7D4();
}

uint64_t sub_232E2C638()
{
  sub_232E2CA3C();
  return sub_232E6F7E0();
}

uint64_t sub_232E2C660()
{
  sub_232E2CAC4();
  return sub_232E6F7D4();
}

uint64_t sub_232E2C688()
{
  sub_232E2CAC4();
  return sub_232E6F7E0();
}

uint64_t sub_232E2C6B0()
{
  sub_232E2CB08();
  return sub_232E6F7D4();
}

uint64_t sub_232E2C6D8()
{
  sub_232E2CB08();
  return sub_232E6F7E0();
}

uint64_t sub_232E2C700()
{
  sub_232E2CA80();
  return sub_232E6F7D4();
}

uint64_t sub_232E2C728()
{
  sub_232E2CA80();
  return sub_232E6F7E0();
}

void ActivityState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB590);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5D0);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5C0);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5C8);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5B8);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E2CA3C();
  sub_232E6F7C8();
  __asm { BR              X9 }
}

uint64_t sub_232E2C908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_232E2CB4C();
  sub_232E6F660();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

unint64_t sub_232E2CA3C()
{
  unint64_t result;

  result = qword_254237BB8;
  if (!qword_254237BB8)
  {
    result = MEMORY[0x23492A124](&unk_232E74EAC, &type metadata for ActivityState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BB8);
  }
  return result;
}

unint64_t sub_232E2CA80()
{
  unint64_t result;

  result = qword_255FFDEA8;
  if (!qword_255FFDEA8)
  {
    result = MEMORY[0x23492A124](&unk_232E74E5C, &type metadata for ActivityState.StaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDEA8);
  }
  return result;
}

unint64_t sub_232E2CAC4()
{
  unint64_t result;

  result = qword_254237AC8;
  if (!qword_254237AC8)
  {
    result = MEMORY[0x23492A124](&unk_232E74E0C, &type metadata for ActivityState.DismissedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237AC8);
  }
  return result;
}

unint64_t sub_232E2CB08()
{
  unint64_t result;

  result = qword_255FFC8B0;
  if (!qword_255FFC8B0)
  {
    result = MEMORY[0x23492A124](&unk_232E74DBC, &type metadata for ActivityState.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFC8B0);
  }
  return result;
}

unint64_t sub_232E2CB4C()
{
  unint64_t result;

  result = qword_254237BE0;
  if (!qword_254237BE0)
  {
    result = MEMORY[0x23492A124](&unk_232E74D6C, &type metadata for ActivityState.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BE0);
  }
  return result;
}

uint64_t ActivityState.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t ActivityState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237830);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237840);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237828);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237838);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237820);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_232E2CA3C();
  v15 = v28;
  sub_232E6F7BC();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_232E6F648();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_232E6F51C();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v19 = &type metadata for ActivityState;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_232E2D058@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityState.init(from:)(a1, a2);
}

void sub_232E2D06C(_QWORD *a1)
{
  ActivityState.encode(to:)(a1);
}

unint64_t sub_232E2D084()
{
  unint64_t result;

  result = qword_255FFDEB0;
  if (!qword_255FFDEB0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityState, &type metadata for ActivityState);
    atomic_store(result, (unint64_t *)&qword_255FFDEB0);
  }
  return result;
}

unint64_t sub_232E2D0C8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232E16EA8();
  a1[2] = sub_232E1C494();
  result = sub_232E2D0FC();
  a1[3] = result;
  return result;
}

unint64_t sub_232E2D0FC()
{
  unint64_t result;

  result = qword_255FFDEB8;
  if (!qword_255FFDEB8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityState, &type metadata for ActivityState);
    atomic_store(result, (unint64_t *)&qword_255FFDEB8);
  }
  return result;
}

uint64_t sub_232E2D140()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E1C494();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E2D1F8(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232E16EA8();
  sub_232E6ED9C();
  sub_232DE8D98(v3, v5);
  result = swift_release();
  *a2 = v7;
  return result;
}

uint64_t sub_232E2D2D8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_232E2D324 + 4 * byte_232E749C1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_232E2D358 + 4 * byte_232E749BC[v4]))();
}

uint64_t sub_232E2D358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E2D360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E2D368);
  return result;
}

uint64_t sub_232E2D374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E2D37CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_232E2D380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E2D388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityState.CodingKeys()
{
  return &type metadata for ActivityState.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityState.ActiveCodingKeys()
{
  return &type metadata for ActivityState.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityState.EndedCodingKeys()
{
  return &type metadata for ActivityState.EndedCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityState.DismissedCodingKeys()
{
  return &type metadata for ActivityState.DismissedCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityState.StaleCodingKeys()
{
  return &type metadata for ActivityState.StaleCodingKeys;
}

unint64_t sub_232E2D3E8()
{
  unint64_t result;

  result = qword_255FFDEC0;
  if (!qword_255FFDEC0)
  {
    result = MEMORY[0x23492A124](&unk_232E74D44, &type metadata for ActivityState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDEC0);
  }
  return result;
}

unint64_t sub_232E2D430()
{
  unint64_t result;

  result = qword_254237BF0;
  if (!qword_254237BF0)
  {
    result = MEMORY[0x23492A124](&unk_232E74C64, &type metadata for ActivityState.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BF0);
  }
  return result;
}

unint64_t sub_232E2D478()
{
  unint64_t result;

  result = qword_254237BE8;
  if (!qword_254237BE8)
  {
    result = MEMORY[0x23492A124](&unk_232E74C8C, &type metadata for ActivityState.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BE8);
  }
  return result;
}

unint64_t sub_232E2D4C0()
{
  unint64_t result;

  result = qword_254237BD8;
  if (!qword_254237BD8)
  {
    result = MEMORY[0x23492A124](&unk_232E74C14, &type metadata for ActivityState.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BD8);
  }
  return result;
}

unint64_t sub_232E2D508()
{
  unint64_t result;

  result = qword_254237BD0;
  if (!qword_254237BD0)
  {
    result = MEMORY[0x23492A124](&unk_232E74C3C, &type metadata for ActivityState.EndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BD0);
  }
  return result;
}

unint64_t sub_232E2D550()
{
  unint64_t result;

  result = qword_254237C00;
  if (!qword_254237C00)
  {
    result = MEMORY[0x23492A124](&unk_232E74BC4, &type metadata for ActivityState.DismissedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237C00);
  }
  return result;
}

unint64_t sub_232E2D598()
{
  unint64_t result;

  result = qword_254237BF8;
  if (!qword_254237BF8)
  {
    result = MEMORY[0x23492A124](&unk_232E74BEC, &type metadata for ActivityState.DismissedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BF8);
  }
  return result;
}

unint64_t sub_232E2D5E0()
{
  unint64_t result;

  result = qword_2542379E8;
  if (!qword_2542379E8)
  {
    result = MEMORY[0x23492A124](&unk_232E74B74, &type metadata for ActivityState.StaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542379E8);
  }
  return result;
}

unint64_t sub_232E2D628()
{
  unint64_t result;

  result = qword_2542379E0;
  if (!qword_2542379E0)
  {
    result = MEMORY[0x23492A124](&unk_232E74B9C, &type metadata for ActivityState.StaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542379E0);
  }
  return result;
}

unint64_t sub_232E2D670()
{
  unint64_t result;

  result = qword_254237BC8;
  if (!qword_254237BC8)
  {
    result = MEMORY[0x23492A124](&unk_232E74CB4, &type metadata for ActivityState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BC8);
  }
  return result;
}

unint64_t sub_232E2D6B8()
{
  unint64_t result;

  result = qword_254237BC0;
  if (!qword_254237BC0)
  {
    result = MEMORY[0x23492A124](&unk_232E74CDC, &type metadata for ActivityState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237BC0);
  }
  return result;
}

uint64_t sub_232E2D6FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657669746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465646E65 && a2 == 0xE500000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657373696D736964 && a2 == 0xE900000000000064 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_232E2D8A8()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_254237470);
  __swift_project_value_buffer(v0, (uint64_t)qword_254237470);
  return sub_232E6EEC8();
}

uint64_t static ActivityAuthorizationServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2542373E8 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254237470);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static ActivityAuthorizationServiceDefinition.serviceName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_232E2D97C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2542373E8 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254237470);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_232E2D9EC()
{
  return 0xD00000000000002CLL;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationServiceDefinition()
{
  return &type metadata for ActivityAuthorizationServiceDefinition;
}

void ActivityContent.init(state:staleDate:relevanceScore:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2DA78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_232DE939C(v1, v2 + *(int *)(a1 + 52), &qword_254237978);
  *(_QWORD *)(v2 + *(int *)(a1 + 56)) = v3;
  return result;
}

uint64_t ActivityContent.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v17 = a5;
  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6ECD0();
  swift_allocObject();
  sub_232E6ECC4();
  sub_232E6ECB8();
  swift_release();
  if (!v6)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v14, a2);
    type metadata accessor for OpaqueActivityContent();
    v18 = a2;
    v19 = a3;
    v20 = a4;
    v21 = v17;
    type metadata accessor for ActivityContent();
  }
  return sub_232E2DC10(a1);
}

uint64_t sub_232E2DC10(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OpaqueActivityContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232E2DC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ActivityContent.state.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ActivityContent.staleDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_232E2DC4C(v2 + *(int *)(a1 + 52), a2);
}

double ActivityContent.relevanceScore.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 56));
}

BOOL sub_232E2DCC8(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_232E2DCD8()
{
  return sub_232E6F78C();
}

uint64_t sub_232E2DCFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144656C617473 && a2 == 0xE900000000000065 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E6176656C6572 && a2 == 0xEE0065726F635365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_232E2DE78()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t sub_232E2DEBC(char a1)
{
  if (!a1)
    return 0x6574617473;
  if (a1 == 1)
    return 0x746144656C617473;
  return 0x636E6176656C6572;
}

BOOL sub_232E2DF20(char *a1, char *a2)
{
  return sub_232E2DCC8(*a1, *a2);
}

uint64_t sub_232E2DF38()
{
  return sub_232E2DE78();
}

uint64_t sub_232E2DF48()
{
  return sub_232E2DCD8();
}

uint64_t sub_232E2DF58()
{
  sub_232E6F780();
  sub_232E2DCD8();
  return sub_232E6F7B0();
}

uint64_t sub_232E2DFA0()
{
  char *v0;

  return sub_232E2DEBC(*v0);
}

uint64_t sub_232E2DFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E2DCFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E2DFE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_232E31690();
  *a1 = result;
  return result;
}

uint64_t sub_232E2E010(uint64_t a1)
{
  MEMORY[0x23492A124](&unk_232E75478, a1);
  return sub_232E6F7D4();
}

uint64_t sub_232E2E044(uint64_t a1)
{
  MEMORY[0x23492A124](&unk_232E75478, a1);
  return sub_232E6F7E0();
}

uint64_t ActivityContent.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BDAC7A8](v8);
  strcpy((char *)v21, "State: ");
  v21[1] = 0xE700000000000000;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v7, v9);
  sub_232E6F1F8();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v12 = v21[0];
  v13 = v21[1];
  strcpy((char *)v21, "Stale date: ");
  BYTE5(v21[1]) = 0;
  HIWORD(v21[1]) = -5120;
  sub_232E2DC4C(v2 + *(int *)(a1 + 52), (uint64_t)v6);
  sub_232E6F1F8();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v14 = v21[0];
  v15 = v21[1];
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v21[0] = 0xD000000000000011;
  v21[1] = 0x8000000232E7EBC0;
  sub_232E6F354();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v16 = v21[0];
  v17 = v21[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_232E74F90;
  *(_QWORD *)(v18 + 32) = v12;
  *(_QWORD *)(v18 + 40) = v13;
  *(_QWORD *)(v18 + 48) = v14;
  *(_QWORD *)(v18 + 56) = v15;
  *(_QWORD *)(v18 + 64) = v16;
  *(_QWORD *)(v18 + 72) = v17;
  v19 = MEMORY[0x2349296F8]();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_232E2E274(uint64_t a1)
{
  MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContent<A>, a1);
  return OpaqueObjectiveCBridgable<>._bridgeToObjectiveC()();
}

uint64_t sub_232E2E2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContent<A>, a3);
  return static OpaqueObjectiveCBridgable<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3);
}

BOOL sub_232E2E2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContent<A>, a3);
  return static OpaqueObjectiveCBridgable<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3);
}

uint64_t sub_232E2E340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContent<A>);
  return static OpaqueObjectiveCBridgable<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, a3);
}

void ActivityContent.encode(to:)()
{
  type metadata accessor for ActivityContent.CodingKeys();
}

uint64_t sub_232E2E3D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x23492A124](&unk_232E75478, a1);
  v3 = sub_232E6F6B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_232E6F7C8();
  *(_BYTE *)(v2 - 112) = 0;
  v7 = *(_QWORD *)(v2 - 72);
  sub_232E6F6A8();
  if (!v7)
  {
    *(_BYTE *)(v2 - 112) = 1;
    sub_232E6EE74();
    sub_232DDDAD8(&qword_254237BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_232E6F678();
    *(_BYTE *)(v2 - 112) = 2;
    sub_232E6F69C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void type metadata accessor for ActivityContent.CodingKeys()
{
  JUMPOUT(0x23492A0B8);
}

void ActivityContent.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[16];

  v13[1] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v9);
  v13[3] = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[7] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13[4] = (char *)v13 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[12] = a1;
  v13[13] = a2;
  v13[14] = a3;
  v13[15] = a4;
  type metadata accessor for ActivityContent.CodingKeys();
}

void sub_232E2E628(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 128) = MEMORY[0x23492A124](&unk_232E75478, a1);
  v6 = sub_232E6F654();
  *(_QWORD *)(v5 - 136) = v6;
  *(_QWORD *)(v5 - 192) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 168) = v3;
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2E698(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v22 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 144) = v2;
  v8 = *(_QWORD *)(v3 - 120);
  sub_232E6F7BC();
  if (v8)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  *(_QWORD *)(v3 - 128) = v5;
  *(_QWORD *)(v3 - 120) = v7;
  v10 = *(_QWORD *)(v3 - 184);
  v9 = *(_QWORD *)(v3 - 176);
  v12 = *(_QWORD *)(v3 - 160);
  v11 = *(_QWORD *)(v3 - 152);
  *(_BYTE *)(v3 - 112) = 0;
  sub_232E6F63C();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v11 + 32))(*(_QWORD *)(v3 - 120), v9, v12);
  sub_232E6EE74();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  *(_BYTE *)(v3 - 112) = 1;
  sub_232DDDAD8(&qword_254238120, v13, MEMORY[0x24BDCE960]);
  v14 = v10;
  sub_232E6F60C();
  v15 = a1;
  v16 = *(int *)(a1 + 52);
  v17 = *(_QWORD *)(v3 - 120);
  sub_232DE939C(v14, v17 + v16, &qword_254237978);
  *(_BYTE *)(v3 - 112) = 2;
  sub_232E6F630();
  v19 = v18;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 192) + 8))(*(_QWORD *)(v3 - 144), *(_QWORD *)(v3 - 136));
  *(_QWORD *)(v17 + *(int *)(v15 + 56)) = v19;
  v20 = *(_QWORD *)(v3 - 128);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v20 + 16))(*(_QWORD *)(v3 - 200), v17, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v17, v15);
}

void sub_232E2E8FC(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  ActivityContent.init(from:)(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_232E2E91C()
{
  ActivityContent.encode(to:)();
}

uint64_t static ActivityContent.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[8];

  v10 = sub_232E6EE74();
  v18[2] = *(_QWORD *)(v10 - 8);
  v18[3] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v18[0] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254237758);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v13);
  v18[1] = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  if ((sub_232E6F1D4() & 1) != 0)
  {
    v18[4] = a3;
    v18[5] = a4;
    v18[6] = a5;
    v18[7] = a6;
    type metadata accessor for ActivityContent();
  }
  return 0;
}

uint64_t sub_232E2EC78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static ActivityContent.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t OpaqueActivityContent.contentState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_232DE4A2C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t OpaqueActivityContent.contentState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_232DE8D98(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*OpaqueActivityContent.contentState.modify())()
{
  return nullsub_1;
}

uint64_t OpaqueActivityContent.staleDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
  return sub_232E2DC4C(v3, a1);
}

uint64_t OpaqueActivityContent.staleDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
  return sub_232E2ED5C(a1, v3);
}

uint64_t sub_232E2ED5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*OpaqueActivityContent.staleDate.modify())()
{
  type metadata accessor for OpaqueActivityContent();
  return nullsub_1;
}

double OpaqueActivityContent.relevanceScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for OpaqueActivityContent() + 24));
}

uint64_t OpaqueActivityContent.init(contentState:staleDate:relevanceScore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v10 = type metadata accessor for OpaqueActivityContent();
  v11 = (uint64_t)a4 + *(int *)(v10 + 20);
  v12 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *a4 = a1;
  a4[1] = a2;
  result = sub_232E2ED5C(a3, v11);
  *(double *)((char *)a4 + *(int *)(v10 + 24)) = a5;
  return result;
}

void OpaqueActivityContent.init<A>(encoding:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
  v2 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E2EF08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  sub_232E2EFE8(v2 + *(int *)(a1 + 52), v3);
  *(uint64_t *)((char *)v1 + *(int *)(v5 + 24)) = *(_QWORD *)(v2 + *(int *)(a1 + 56));
  sub_232E6ECF4();
  swift_allocObject();
  sub_232E6ECE8();
  v7 = sub_232E6ECDC();
  if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
    swift_release();
    return sub_232DDD798(v3, &qword_254237978);
  }
  else
  {
    v10 = v7;
    v11 = v8;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
    result = swift_release();
    *v1 = v10;
    v1[1] = v11;
  }
  return result;
}

uint64_t sub_232E2EFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id OpaqueActivityContent.acActivityContent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E2F2FC(v1, (uint64_t)v7);
  v8 = *(int *)(v5 + 24);
  v9 = (uint64_t)&v7[*(int *)(v5 + 20)];
  v10 = *(double *)&v7[v8];
  v11 = (void *)sub_232E6EE2C();
  sub_232E2DC4C(v9, (uint64_t)v4);
  v12 = sub_232E6EE74();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) != 1)
  {
    v14 = (void *)sub_232E6EE50();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)ACActivityContent), sel_initWithContentData_staleDate_relevanceScore_, v11, v14, v10);

  sub_232E2DC10((uint64_t)v7);
  return v15;
}

id ACActivityContent.init(opaqueContent:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - v6;
  v8 = type metadata accessor for OpaqueActivityContent();
  sub_232E2DC4C(a1 + *(int *)(v8 + 20), (uint64_t)v7);
  v9 = *(double *)(a1 + *(int *)(v8 + 24));
  v10 = (void *)sub_232E6EE2C();
  sub_232E2DC4C((uint64_t)v7, (uint64_t)v4);
  v11 = sub_232E6EE74();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) != 1)
  {
    v13 = (void *)sub_232E6EE50();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v4, v11);
  }
  v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContentData_staleDate_relevanceScore_, v10, v13, v9);

  sub_232DDD798((uint64_t)v7, &qword_254237978);
  sub_232E2DC10(a1);
  return v14;
}

uint64_t sub_232E2F2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OpaqueActivityContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E2F340(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_232E53E4C(*a1, *a2);
}

uint64_t sub_232E2F34C()
{
  sub_232E6F780();
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  return sub_232E6F7B0();
}

uint64_t sub_232E2F404()
{
  sub_232E6F21C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E2F498()
{
  sub_232E6F780();
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  return sub_232E6F7B0();
}

uint64_t sub_232E2F54C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_232E31698();
  *a1 = result;
  return result;
}

void sub_232E2F578(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEC00000065746174;
  v4 = 0xE900000000000065;
  v5 = 0x746144656C617473;
  if (v2 != 1)
  {
    v5 = 0x636E6176656C6572;
    v4 = 0xEE0065726F635365;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x53746E65746E6F63;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_232E2F5F0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746144656C617473;
  if (*v0 != 1)
    v1 = 0x636E6176656C6572;
  if (*v0)
    return v1;
  else
    return 0x53746E65746E6F63;
}

uint64_t sub_232E2F664@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_232E31698();
  *a1 = result;
  return result;
}

uint64_t sub_232E2F688()
{
  sub_232E2F860();
  return sub_232E6F7D4();
}

uint64_t sub_232E2F6B0()
{
  sub_232E2F860();
  return sub_232E6F7E0();
}

uint64_t OpaqueActivityContent.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237428);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E2F860();
  sub_232E6F7C8();
  v11 = *v3;
  v10[15] = 0;
  sub_232E069B0();
  sub_232E6F6A8();
  if (!v2)
  {
    type metadata accessor for OpaqueActivityContent();
    LOBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    sub_232E2F8A4();
    sub_232E6F6A8();
    LOBYTE(v11) = 2;
    sub_232E6F69C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_232E2F860()
{
  unint64_t result;

  result = qword_254237988;
  if (!qword_254237988)
  {
    result = MEMORY[0x23492A124](&unk_232E75428, &type metadata for OpaqueActivityContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237988);
  }
  return result;
}

unint64_t sub_232E2F8A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254237408;
  if (!qword_254237408)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254237978);
    v2 = sub_232DDDAD8(&qword_254237BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254237408);
  }
  return result;
}

uint64_t OpaqueActivityContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237A00);
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_OWORD *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (uint64_t)v10 + *(int *)(v11 + 20);
  v13 = sub_232E6EE74();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v27 = v12;
  v14(v12, 1, 1, v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E2F860();
  v26 = v7;
  v15 = v28;
  sub_232E6F7BC();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_232DDD798(v27, &qword_254237978);
  }
  else
  {
    v16 = (uint64_t)v24;
    v28 = v8;
    v29 = 0;
    sub_232E0683C();
    v17 = v25;
    sub_232E6F63C();
    *v10 = v30;
    LOBYTE(v30) = 1;
    sub_232DDDAD8(&qword_254238120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_232E6F60C();
    sub_232E2ED5C(v16, v27);
    LOBYTE(v30) = 2;
    v18 = v26;
    sub_232E6F630();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v17);
    *(_QWORD *)((char *)v10 + *(int *)(v28 + 24)) = v20;
    sub_232E2F2FC((uint64_t)v10, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_232E2DC10((uint64_t)v10);
  }
}

uint64_t sub_232E2FC0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OpaqueActivityContent.init(from:)(a1, a2);
}

uint64_t sub_232E2FC20(_QWORD *a1)
{
  return OpaqueActivityContent.encode(to:)(a1);
}

uint64_t sub_232E2FC3C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8((unint64_t *)&unk_254237410, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E2FD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD8E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  sub_232DDDAD8(&qword_2542379A0, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
  sub_232E6ED9C();
  sub_232DDD798(a2, &qword_255FFD8E8);
  sub_232DE8D98(v8, v10);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v7, 0, 1, a3);
  return sub_232DE939C((uint64_t)v7, a2, &qword_255FFD8E8);
}

void _s11ActivityKit06OpaqueA7ContentV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[6];

  v2 = sub_232E6EE74();
  v8[3] = *(_QWORD *)(v2 - 8);
  v8[4] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v8[2] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254237758);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  __asm { BR              X11 }
}

uint64_t sub_232E2FFB8()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_232E2FFEC + dword_232E3028C[v0 >> 62]))();
}

BOOL sub_232E2FFFC@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(uint64_t, uint64_t);

  if (a1 != BYTE6(v6))
    return 0;
  *(_QWORD *)(v12 - 120) = v1;
  if (a1 >= 1)
  {
    sub_232DE4A2C(v3, v6);
    sub_232E668B0(v4, v5);
    if ((v13 & 1) == 0)
      return 0;
  }
  v14 = type metadata accessor for OpaqueActivityContent();
  if (*(double *)(v10 + *(int *)(v14 + 24)) != *(double *)(v9 + *(int *)(v14 + 24)))
    return 0;
  v15 = v14;
  sub_232E2DC4C(v10 + *(int *)(v14 + 20), v7);
  sub_232E2DC4C(v9 + *(int *)(v15 + 20), v8);
  v16 = v2 + *(int *)(v11 + 48);
  sub_232E2DC4C(v7, v2);
  sub_232E2DC4C(v8, v16);
  v17 = *(_QWORD *)(v12 - 104);
  v18 = *(_QWORD *)(v12 - 96);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v19(v2, 1, v18) == 1)
  {
    sub_232DDD798(v8, &qword_254237978);
    sub_232DDD798(v7, &qword_254237978);
    if (v19(v16, 1, v18) == 1)
    {
      sub_232DDD798(v2, &qword_254237978);
      return 1;
    }
    goto LABEL_10;
  }
  v20 = *(_QWORD *)(v12 - 120);
  sub_232E2DC4C(v2, v20);
  if (v19(v16, 1, v18) == 1)
  {
    sub_232DDD798(v8, &qword_254237978);
    sub_232DDD798(v7, &qword_254237978);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v18);
LABEL_10:
    sub_232DDD798(v2, (uint64_t *)&unk_254237758);
    return 0;
  }
  v21 = *(_QWORD *)(v12 - 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v21, v16, v18);
  sub_232DDDAD8(&qword_255FFDEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v22 = sub_232E6F1D4();
  v23 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v23(v21, v18);
  sub_232DDD798(v8, &qword_254237978);
  sub_232DDD798(v7, &qword_254237978);
  v23(v20, v18);
  sub_232DDD798(v2, &qword_254237978);
  return (v22 & 1) != 0;
}

uint64_t sub_232E3029C(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContent<A>);
  a1[2] = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContent<A>, a2);
  result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContent<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_232E302F4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_232DDDAD8(&qword_2542379A0, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
  a1[2] = sub_232DDDAD8((unint64_t *)&unk_254237410, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
  result = sub_232DDDAD8(qword_255FFDED0, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
  a1[3] = result;
  return result;
}

uint64_t *sub_232E3036C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_232E6EE74();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (v7 + v10) & ~v10;
  if (*(_DWORD *)(v9 + 84))
    v13 = *(_QWORD *)(v9 + 64);
  else
    v13 = *(_QWORD *)(v9 + 64) + 1;
  v14 = ((v13 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v15 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v15 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    v19 = v8;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v21 = (const void *)(((unint64_t)a2 + v11) & v20);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v21, 1, v19))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v20), v21, v13);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v11) & v20, 0, 1, v19);
    }
    *(_QWORD *)(((((unint64_t)a1 + v11) & v20) + v13 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v13 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_232E304DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_232E6EE74();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

uint64_t sub_232E30568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_232E6EE74();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  *(_QWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_232E3066C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_232E6EE74();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  *(_QWORD *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_232E307BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_232E6EE74();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  *(_QWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_232E308C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_232E6EE74();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  *(_QWORD *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_232E30A10(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_232E6EE74() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = v10;
  if (v9)
    v12 = 7;
  else
    v12 = 8;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v6 + 64) + v13;
  if (v11 < a2)
  {
    if (((((v12 + *(_QWORD *)(v8 + 64) + (v14 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v11 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    __asm { BR              X17 }
  }
  if (!v11)
    return 0;
  if (v7 >= v10)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v18 = (*(uint64_t (**)(uint64_t))(v8 + 48))((v14 + a1) & ~v13);
  if (v18 >= 2)
    return v18 - 1;
  else
    return 0;
}

void sub_232E30B94(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(sub_232E6EE74() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  v14 = *(unsigned __int8 *)(v10 + 80);
  if (v11)
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  v15 = *(_QWORD *)(v7 + 64) + v14;
  if (v13 < a3)
  {
    if ((((_DWORD)v16 + (v15 & ~(_DWORD)v14) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v17 = a3 - v13 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v9 = v18;
    else
      v9 = 0;
  }
  if (a2 > v13)
  {
    if ((((_DWORD)v16 + (v15 & ~(_DWORD)v14) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v19 = ~v13 + a2;
      bzero(a1, ((v16 + (v15 & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_232E30CBC(size_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unsigned int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  int v14;

  *(_BYTE *)(v8 + v11) = 0;
  if ((_DWORD)v7)
  {
    if (v10 >= a4)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, v7, v10, v9);
    }
    else
    {
      v13 = (void *)((v5 + v8) & v6);
      if (a4 >= v7)
      {
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, (v7 + 1), a2, a3);
      }
      else if ((_DWORD)a1)
      {
        if (a1 <= 3)
          v14 = a1;
        else
          v14 = 4;
        bzero(v13, a1);
        __asm { BR              X10 }
      }
    }
  }
}

void sub_232E30D9C()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
}

void sub_232E30DAC()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
}

uint64_t *initializeBufferWithCopyOfBuffer for OpaqueActivityContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_232DE4A2C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_232E6EE74();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for OpaqueActivityContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_232DE8D98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_232E6EE74();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t *initializeWithCopy for OpaqueActivityContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_232DE4A2C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_232E6EE74();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *assignWithCopy for OpaqueActivityContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = *a2;
  v7 = a2[1];
  sub_232DE4A2C(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_232DE8D98(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_232E6EE74();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for OpaqueActivityContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_232E6EE74();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *assignWithTake for OpaqueActivityContent(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_232DE8D98(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_232E6EE74();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for OpaqueActivityContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E31394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for OpaqueActivityContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_232E3142C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaqueActivityContent.CodingKeys()
{
  return &type metadata for OpaqueActivityContent.CodingKeys;
}

uint64_t sub_232E314C4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t _s11ActivityKit21OpaqueActivityContentV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E31518 + 4 * byte_232E74FB8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232E3154C + 4 * byte_232E74FB3[v4]))();
}

uint64_t sub_232E3154C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E31554(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E3155CLL);
  return result;
}

uint64_t sub_232E31568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E31570);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232E31574(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E3157C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_232E31588()
{
  JUMPOUT(0x23492A124);
}

unint64_t sub_232E3159C()
{
  unint64_t result;

  result = qword_255FFDF58;
  if (!qword_255FFDF58)
  {
    result = MEMORY[0x23492A124](&unk_232E75400, &type metadata for OpaqueActivityContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDF58);
  }
  return result;
}

unint64_t sub_232E315E4()
{
  unint64_t result;

  result = qword_254237998;
  if (!qword_254237998)
  {
    result = MEMORY[0x23492A124](&unk_232E75338, &type metadata for OpaqueActivityContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237998);
  }
  return result;
}

unint64_t sub_232E3162C()
{
  unint64_t result;

  result = qword_254237990;
  if (!qword_254237990)
  {
    result = MEMORY[0x23492A124](&unk_232E75360, &type metadata for OpaqueActivityContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237990);
  }
  return result;
}

void sub_232E31670()
{
  JUMPOUT(0x23492A124);
}

void sub_232E31680()
{
  JUMPOUT(0x23492A124);
}

uint64_t sub_232E31690()
{
  return 3;
}

uint64_t sub_232E31698()
{
  unint64_t v0;

  v0 = sub_232E6F5D0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

id sub_232E316E0(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_232E6EEA4() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

uint64_t sub_232E31734()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFB610);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFB610);
  return sub_232E6EF1C();
}

uint64_t sub_232E317B0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB378);
  sub_232DDF49C((unint64_t *)&qword_255FFB528, &qword_255FFB378, MEMORY[0x24BDB9D10]);
  return sub_232E6F030();
}

id SubscriptionPreferencesObservationClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t SubscriptionPreferencesObservationClient.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  char *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t result;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t aBlock;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;
  objc_super v27;

  v20 = sub_232E6F3C0();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v5);
  v19 = OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue;
  v18[0] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v6 = v0;
  sub_232E6F0E4();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v20);
  *(_QWORD *)(v18[1] + v19) = sub_232E6F3F0();
  v7 = OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_connection;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_connection] = 0;
  *(_DWORD *)&v6[OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_serverStartupToken] = -1;
  v8 = OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient__subscriptionTypePublisher;
  aBlock = 0;
  LOBYTE(v22) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB378);
  swift_allocObject();
  *(_QWORD *)&v6[v8] = sub_232E6F000();
  v9 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = 0;

  v10 = (objc_class *)type metadata accessor for SubscriptionPreferencesObservationClient();
  v27.receiver = v6;
  v27.super_class = v10;
  v11 = (char *)objc_msgSendSuper2(&v27, sel_init);
  v12 = *(NSObject **)&v11[OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue];
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_232E31BE8;
  *(_QWORD *)(v14 + 24) = v13;
  v25 = sub_232DDD4AC;
  v26 = v14;
  aBlock = MEMORY[0x24BDAC760];
  v22 = 1107296256;
  v23 = sub_232DDD48C;
  v24 = &block_descriptor_10;
  v15 = _Block_copy(&aBlock);
  v16 = v11;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);

  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v12 & 1) == 0)
    return (uint64_t)v16;
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SubscriptionPreferencesObservationClient()
{
  return objc_opt_self();
}

uint64_t sub_232E31BC4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232E31BE8()
{
  sub_232E32334();
}

uint64_t sub_232E31C08()
{
  return swift_deallocObject();
}

void sub_232E31C38()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x24BEE5610], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232E32F58();
    v10 = (void *)sub_232E6F438();
    if (v10)
    {
      v11 = *(void **)&v1[v9];
      *(_QWORD *)&v1[v9] = v10;
      v12 = v10;

      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v1;
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = sub_232E32F9C;
      *(_QWORD *)(v14 + 24) = v13;
      aBlock[4] = sub_232DE068C;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_18_1;
      v15 = _Block_copy(aBlock);
      v1;
      swift_retain();
      swift_release();
      objc_msgSend(v12, sel_configureConnection_, v15);
      _Block_release(v15);
      LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v15 & 1) == 0)
      {
        sub_232E3246C();
        swift_release();

        return;
      }
LABEL_8:
      __break(1u);
    }
  }
}

void sub_232E31E60(void *a1, char *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v22 = sub_232E316E0;
  v23 = 0;
  v6 = MEMORY[0x24BDAC760];
  v18 = MEMORY[0x24BDAC760];
  v19 = 1107296256;
  v20 = sub_232DE1148;
  v21 = &block_descriptor_21_1;
  v7 = _Block_copy(&v18);
  v8 = &unk_256012750;
  swift_release();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_protocolForProtocol_interpreter_, v8, v7);

  _Block_release(v7);
  objc_msgSend(v5, sel_setClient_, v10);

  v11 = objc_msgSend(v9, sel_protocolForProtocol_, &unk_256013A60);
  objc_msgSend(v5, sel_setServer_, v11);

  v12 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v12);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)&a2[OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue]);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  v22 = sub_232E32FB4;
  v23 = v13;
  v18 = v6;
  v19 = 1107296256;
  v20 = sub_232DE3170;
  v21 = &block_descriptor_27_1;
  v14 = _Block_copy(&v18);
  v15 = a2;
  swift_release();
  objc_msgSend(a1, sel_setActivationHandler_, v14);
  _Block_release(v14);
  v22 = sub_232E32248;
  v23 = 0;
  v18 = v6;
  v19 = 1107296256;
  v20 = sub_232DE3170;
  v21 = &block_descriptor_30_0;
  v16 = _Block_copy(&v18);
  objc_msgSend(a1, sel_setInterruptionHandler_, v16);
  _Block_release(v16);
  v22 = sub_232E32254;
  v23 = 0;
  v18 = v6;
  v19 = 1107296256;
  v20 = sub_232DE3170;
  v21 = &block_descriptor_33_0;
  v17 = _Block_copy(&v18);
  objc_msgSend(a1, sel_setInvalidationHandler_, v17);
  _Block_release(v17);

}

void sub_232E32170()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_255FFB630 != -1)
    swift_once();
  v0 = sub_232E6EF28();
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFB610);
  v1 = sub_232E6EF10();
  v2 = sub_232E6F36C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_232DDB000, v1, v2, "Subscription preferences observation: activated", v3, 2u);
    MEMORY[0x23492A1F0](v3, -1, -1);
  }

  sub_232E32958();
}

void sub_232E32248(uint64_t a1)
{
  sub_232E32260(a1, "Subscription preferences observation: interrupted");
}

void sub_232E32254(uint64_t a1)
{
  sub_232E32260(a1, "Subscription preferences observation: invalidated");
}

void sub_232E32260(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_255FFB630 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_255FFB610);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232E32334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _OWORD v10[2];

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    sub_232E31C38();
    v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_connection);
    if (v8)
    {
      v9 = v8;
      if (objc_msgSend(v9, sel_remoteTarget))
      {
        sub_232E6F498();

        swift_unknownObjectRelease();
        sub_232DDE4F0((uint64_t)v10);
      }
      else
      {
        memset(v10, 0, sizeof(v10));
        sub_232DDE4F0((uint64_t)v10);
        objc_msgSend(v9, sel_activate);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_232E3246C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232E32F50;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_9_0;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_255FFB630 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_255FFB610);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232E32640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232E32958();

  }
}

uint64_t sub_232E32690()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD v18[2];
  _OWORD v19[2];
  _BYTE v20[24];
  uint64_t v21;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue);
  *v5 = v6;
  (*((void (**)(_QWORD *, _QWORD, NSObject *, double))isa + 13))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  v8 = (*((uint64_t (**)(_QWORD *, NSObject *))isa + 1))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232E32334(v8);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_connection);
  if (!v9)
  {
    if (qword_255FFB630 != -1)
      swift_once();
    v10 = sub_232E6EF28();
    __swift_project_value_buffer(v10, (uint64_t)qword_255FFB610);
    v1 = sub_232E6EF10();
    v11 = sub_232E6F384();
    if (os_log_type_enabled(v1, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_232DDB000, v1, v11, "SubscriptionPreferencesObservationClient: Failed to establish a connection", v12, 2u);
      MEMORY[0x23492A1F0](v12, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v9;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_232DE9CF0((uint64_t)v19, (uint64_t)v20);
  if (v21)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB638);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v18[1];
    }
  }
  else
  {
    sub_232DDE4F0((uint64_t)v20);
  }
  if (qword_255FFB630 != -1)
    goto LABEL_20;
LABEL_15:
  v14 = sub_232E6EF28();
  __swift_project_value_buffer(v14, (uint64_t)qword_255FFB610);
  v15 = sub_232E6EF10();
  v16 = sub_232E6F384();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_232DDB000, v15, v16, "SubscriptionPreferencesObservationClient: Failed to cast connection to server interface protocol", v17, 2u);
    MEMORY[0x23492A1F0](v17, -1, -1);
  }

LABEL_18:
  return 0;
}

void sub_232E32958()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  unsigned int v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  id v24[2];

  v24[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (_QWORD *)sub_232E6F12C();
  v2 = *(v1 - 1);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, _QWORD *))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  v8 = (void *)sub_232E32690();
  if (!v8)
    return;
  v24[0] = 0;
  v9 = objc_msgSend(v8, sel_registerForSubscriptionPreferencesWithError_, v24);
  swift_unknownObjectRelease();
  if (v9)
  {
    v10 = v24[0];
    return;
  }
  v22[1] = v24[0];
  v11 = v24[0];
  v1 = (_QWORD *)sub_232E6EDF0();

  swift_willThrow();
  if (qword_255FFB630 != -1)
    goto LABEL_11;
LABEL_6:
  v12 = sub_232E6EF28();
  __swift_project_value_buffer(v12, (uint64_t)qword_255FFB610);
  v13 = v1;
  v14 = v1;
  v15 = sub_232E6EF10();
  v16 = sub_232E6F378();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = (void *)swift_slowAlloc();
    v24[0] = v18;
    *(_DWORD *)v17 = 136446210;
    v23 = (uint64_t)v1;
    v19 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254238108);
    v20 = sub_232E6F1F8();
    v23 = sub_232DE4A70(v20, v21, (uint64_t *)v24);
    sub_232E6F480();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_232DDB000, v15, v16, "Could not register for push tokens: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v18, -1, -1);
    MEMORY[0x23492A1F0](v17, -1, -1);

  }
  else
  {

  }
}

id SubscriptionPreferencesObservationClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SubscriptionPreferencesObservationClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SubscriptionPreferencesObservationClient.subscriptionPreferencesDidChange(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  _BYTE v10[32];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(void **)(v1 + OBJC_IVAR____TtC11ActivityKit40SubscriptionPreferencesObservationClient_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x24BEE5610], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_232E6F144();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) != 0)
  {
    sub_232E6ECD0();
    swift_allocObject();
    sub_232E6ECC4();
    sub_232E32E4C();
    sub_232E6ECB8();
    v10[16] = 0;
    sub_232E6EFD0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_232E32E4C()
{
  unint64_t result;

  result = qword_255FFDF80;
  if (!qword_255FFDF80)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for RemoteSubscriptionType, &type metadata for RemoteSubscriptionType);
    atomic_store(result, (unint64_t *)&qword_255FFDF80);
  }
  return result;
}

uint64_t method lookup function for SubscriptionPreferencesObservationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SubscriptionPreferencesObservationClient.subscriptionTypePublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t sub_232E32F2C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232E32F50(uint64_t a1)
{
  uint64_t v1;

  sub_232E32640(a1, v1);
}

unint64_t sub_232E32F58()
{
  unint64_t result;

  result = qword_255FFB4D0;
  if (!qword_255FFB4D0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityRemoteSubscriptionPreferencesObservationServiceDefinition, &type metadata for ActivityRemoteSubscriptionPreferencesObservationServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_255FFB4D0);
  }
  return result;
}

void sub_232E32F9C(void *a1)
{
  uint64_t v1;

  sub_232E31E60(a1, *(char **)(v1 + 16));
}

uint64_t sub_232E32FA4()
{
  return swift_deallocObject();
}

void sub_232E32FB4()
{
  sub_232E32170();
}

uint64_t AlertConfiguration.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_232E6EE08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AlertConfiguration.title.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_232E6EE08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AlertConfiguration.title.modify())()
{
  return nullsub_1;
}

uint64_t AlertConfiguration.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AlertConfiguration() + 20);
  v4 = sub_232E6EE08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AlertConfiguration()
{
  uint64_t result;

  result = qword_254237E28;
  if (!qword_254237E28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AlertConfiguration.body.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AlertConfiguration() + 20);
  v4 = sub_232E6EE08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AlertConfiguration.body.modify())()
{
  type metadata accessor for AlertConfiguration();
  return nullsub_1;
}

void static AlertConfiguration.AlertSound.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t AlertConfiguration.sound.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AlertConfiguration() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = (void *)v3[2];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  v7 = v6;
  return swift_bridgeObjectRetain();
}

__n128 AlertConfiguration.sound.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  __n128 *v3;
  void *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for AlertConfiguration() + 24));
  v4 = (void *)v3[1].n128_u64[0];
  swift_bridgeObjectRelease();

  result = v6;
  *v3 = v6;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*AlertConfiguration.sound.modify())()
{
  type metadata accessor for AlertConfiguration();
  return nullsub_1;
}

__n128 AlertConfiguration.init(title:body:sound:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v7;
  uint64_t v8;
  __n128 *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  __n128 result;
  __n128 v13;

  v13 = *a3;
  v7 = a3[1].n128_u64[0];
  v8 = type metadata accessor for AlertConfiguration();
  v9 = (__n128 *)(a4 + *(int *)(v8 + 24));
  v10 = sub_232E6EE08();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(a4, a1, v10);
  v11(a4 + *(int *)(v8 + 20), a2, v10);
  result = v13;
  *v9 = v13;
  v9[1].n128_u64[0] = v7;
  return result;
}

uint64_t static AlertConfiguration.AlertSound.named(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return swift_bridgeObjectRetain();
}

uint64_t AlertConfiguration.AlertSound.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlertConfiguration.AlertSound.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AlertConfiguration.AlertSound.name.modify())()
{
  return nullsub_1;
}

id static AlertConfiguration.AlertSound.withToneLibraryConfig(_:)@<X0>(id a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = a1;
  return a1;
}

void *AlertConfiguration.AlertSound.toneLibraryConfig.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void AlertConfiguration.AlertSound.toneLibraryConfig.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*AlertConfiguration.AlertSound.toneLibraryConfig.modify())()
{
  return nullsub_1;
}

uint64_t static AlertConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  if ((MEMORY[0x234929230]() & 1) != 0
    && (v4 = type metadata accessor for AlertConfiguration(),
        (MEMORY[0x234929230](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0))
  {
    v5 = *(int *)(v4 + 24);
    v6 = *(_QWORD *)(a1 + v5 + 16);
    v13 = *(_OWORD *)(a1 + v5);
    v14 = v6;
    v7 = (__int128 *)(a2 + v5);
    v8 = *((_QWORD *)v7 + 2);
    v11 = *v7;
    v12 = v8;
    v9 = _s11ActivityKit18AlertConfigurationV0C5SoundV2eeoiySbAE_AEtFZ_0(&v13, &v11);
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_232E33470()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 2036625250;
  if (*v0 != 1)
    v1 = 0x646E756F73;
  if (*v0)
    return v1;
  else
    return 0x656C746974;
}

uint64_t sub_232E334BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E34CB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E334E0()
{
  sub_232E34130();
  return sub_232E6F7D4();
}

uint64_t sub_232E33508()
{
  sub_232E34130();
  return sub_232E6F7E0();
}

uint64_t sub_232E33530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  if ((MEMORY[0x234929230]() & 1) != 0
    && (MEMORY[0x234929230](a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) != 0)
  {
    v6 = *(int *)(a3 + 24);
    v7 = *(_QWORD *)(a1 + v6 + 16);
    v14 = *(_OWORD *)(a1 + v6);
    v15 = v7;
    v8 = (__int128 *)(a2 + v6);
    v9 = *((_QWORD *)v8 + 2);
    v12 = *v8;
    v13 = v9;
    v10 = _s11ActivityKit18AlertConfigurationV0C5SoundV2eeoiySbAE_AEtFZ_0(&v14, &v12);
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t AlertConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFDF88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E34130();
  sub_232E6F7C8();
  LOBYTE(v13) = 0;
  sub_232E6EE08();
  sub_232E34174(&qword_255FFDF98, MEMORY[0x24BDCD390]);
  sub_232E6F6A8();
  if (!v2)
  {
    v9 = type metadata accessor for AlertConfiguration();
    LOBYTE(v13) = 1;
    sub_232E6F6A8();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 24));
    v11 = *((_QWORD *)v10 + 2);
    v13 = *v10;
    v14 = v11;
    v15 = 2;
    sub_232E023EC();
    sub_232E6F6A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void AlertConfiguration.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;

  v28 = a2;
  v32 = sub_232E6EE08();
  v29 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v30 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v25 - v5;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFDFA0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AlertConfiguration();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v11[*(int *)(v12 + 24)];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E34130();
  v34 = v8;
  v14 = v35;
  sub_232E6F7BC();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v19 = (void *)*((_QWORD *)v13 + 2);
    swift_bridgeObjectRelease();

  }
  else
  {
    v15 = v30;
    *(_QWORD *)&v35 = v6;
    v25 = v9;
    v26 = v11;
    v27 = a1;
    LOBYTE(v36) = 0;
    sub_232E34174(&qword_255FFDFA8, MEMORY[0x24BDCD3A0]);
    v16 = v31;
    v17 = v32;
    v18 = v33;
    sub_232E6F63C();
    v31 = *(char **)(v29 + 32);
    ((void (*)(char *, char *, uint64_t))v31)(v26, v16, v17);
    LOBYTE(v36) = 1;
    v20 = v15;
    sub_232E6F63C();
    v21 = (uint64_t)v26;
    ((void (*)(char *, char *, uint64_t))v31)(&v26[*(int *)(v25 + 20)], v20, v17);
    v38 = 2;
    sub_232E0298C();
    sub_232E6F63C();
    v22 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v18);
    v35 = v36;
    v23 = v37;
    v24 = (void *)*((_QWORD *)v13 + 2);
    swift_bridgeObjectRelease();

    *(_OWORD *)v13 = v35;
    *((_QWORD *)v13 + 2) = v23;
    sub_232E341B4(v21, v28);
    __swift_destroy_boxed_opaque_existential_1(v22);
    sub_232E341F8(v21);
  }
}

void sub_232E33AEC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  AlertConfiguration.init(from:)(a1, a2);
}

uint64_t sub_232E33B00(_QWORD *a1)
{
  return AlertConfiguration.encode(to:)(a1);
}

uint64_t sub_232E33B14()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 1701667182;
}

uint64_t sub_232E33B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E34DE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E33B70()
{
  sub_232E34234();
  return sub_232E6F7D4();
}

uint64_t sub_232E33B98()
{
  sub_232E34234();
  return sub_232E6F7E0();
}

uint64_t AlertConfiguration.AlertSound.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFDFB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E34234();
  sub_232E6F7BC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v19) = 0;
    v10 = sub_232E6F5F4();
    v12 = v11;
    v21 = 1;
    sub_232E0683C();
    swift_bridgeObjectRetain();
    sub_232E6F60C();
    v18 = v20;
    if (v20 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v13 = 0;
    }
    else
    {
      v15 = v19;
      v16[1] = sub_232DE06B4(0, &qword_255FFD7A8);
      sub_232DE06B4(0, &qword_255FFDFC0);
      v17 = v15;
      v13 = (void *)sub_232E6F39C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_232DE4A18(v17, v18);
    }
    *a2 = v10;
    a2[1] = v12;
    a2[2] = (uint64_t)v13;
    v14 = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  }
  return swift_bridgeObjectRelease();
}

uint64_t AlertConfiguration.AlertSound.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v20[2];
  char v21;
  id v22[3];

  v22[2] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFDFC8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E34234();
  sub_232E6F7C8();
  LOBYTE(v22[0]) = 0;
  v7 = v20[1];
  sub_232E6F66C();
  if (v7)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v9 = (void *)v20[0];
  if (!v20[0])
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v10 = (void *)objc_opt_self();
  v22[0] = 0;
  v11 = v9;
  v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, v22);
  v13 = v22[0];
  v14 = v4;
  if (v12)
  {
    v15 = (void *)sub_232E6EE44();
    v16 = v3;
    v18 = v17;

    v22[0] = v15;
    v22[1] = v18;
    v21 = 1;
    sub_232E069B0();
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v16);

    return sub_232DE8D98((uint64_t)v15, (unint64_t)v18);
  }
  else
  {
    v19 = v13;
    sub_232E6EDF0();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_232E34048@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AlertConfiguration.AlertSound.init(from:)(a1, a2);
}

uint64_t sub_232E3405C(_QWORD *a1)
{
  return AlertConfiguration.AlertSound.encode(to:)(a1);
}

uint64_t _s11ActivityKit18AlertConfigurationV0C5SoundV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  BOOL v7;
  char v8;
  uint64_t result;
  id v10;
  id v11;
  char v12;

  v3 = a1[1];
  v4 = (void *)a1[2];
  v5 = a2[1];
  v6 = (void *)a2[2];
  if (!v3)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v7 = *a1 == *a2 && v3 == v5;
  if (v7 || (v8 = sub_232E6F6E4(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    if (v4)
    {
      if (v6)
      {
        sub_232DE06B4(0, &qword_255FFDFC0);
        v10 = v6;
        v11 = v4;
        v12 = sub_232E6F45C();

        if ((v12 & 1) != 0)
          return 1;
      }
    }
    else if (!v6)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_232E34130()
{
  unint64_t result;

  result = qword_255FFDF90;
  if (!qword_255FFDF90)
  {
    result = MEMORY[0x23492A124](&unk_232E75868, &type metadata for AlertConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDF90);
  }
  return result;
}

uint64_t sub_232E34174(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_232E6EE08();
    result = MEMORY[0x23492A124](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232E341B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AlertConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E341F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AlertConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_232E34234()
{
  unint64_t result;

  result = qword_255FFDFB8;
  if (!qword_255FFDFB8)
  {
    result = MEMORY[0x23492A124](&unk_232E75818, &type metadata for AlertConfiguration.AlertSound.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDFB8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AlertConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_232E6EE08();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (void *)v11[2];
    v10[2] = v13;
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  return a1;
}

void destroy for AlertConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_232E6EE08();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for AlertConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;

  v6 = sub_232E6EE08();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (void *)v10[2];
  v9[2] = v12;
  swift_bridgeObjectRetain();
  v13 = v12;
  return a1;
}

uint64_t assignWithCopy for AlertConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  id v13;

  v6 = sub_232E6EE08();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (void *)v9[2];
  v12 = (void *)v10[2];
  v9[2] = v12;
  v13 = v12;

  return a1;
}

uint64_t initializeWithTake for AlertConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_232E6EE08();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  return a1;
}

uint64_t assignWithTake for AlertConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;

  v6 = sub_232E6EE08();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v12 = (void *)v9[2];
  v9[2] = v10[2];

  return a1;
}

uint64_t getEnumTagSinglePayload for AlertConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E3461C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_232E6EE08();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E346B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_232E6EE08();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t sub_232E34730()
{
  uint64_t result;
  unint64_t v1;

  result = sub_232E6EE08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for AlertConfiguration.AlertSound(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s11ActivityKit18AlertConfigurationV10AlertSoundVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for AlertConfiguration.AlertSound(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for AlertConfiguration.AlertSound(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for AlertConfiguration.AlertSound(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertConfiguration.AlertSound(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertConfiguration.AlertSound()
{
  return &type metadata for AlertConfiguration.AlertSound;
}

uint64_t storeEnumTagSinglePayload for AlertConfiguration.AlertSound.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E349B8 + 4 * byte_232E75535[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E349EC + 4 * byte_232E75530[v4]))();
}

uint64_t sub_232E349EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E349F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E349FCLL);
  return result;
}

uint64_t sub_232E34A08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E34A10);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E34A14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E34A1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlertConfiguration.AlertSound.CodingKeys()
{
  return &type metadata for AlertConfiguration.AlertSound.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AlertConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E34A84 + 4 * byte_232E7553F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232E34AB8 + 4 * byte_232E7553A[v4]))();
}

uint64_t sub_232E34AB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E34AC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E34AC8);
  return result;
}

uint64_t sub_232E34AD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E34ADCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232E34AE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E34AE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlertConfiguration.CodingKeys()
{
  return &type metadata for AlertConfiguration.CodingKeys;
}

unint64_t sub_232E34B08()
{
  unint64_t result;

  result = qword_255FFDFD0;
  if (!qword_255FFDFD0)
  {
    result = MEMORY[0x23492A124](&unk_232E75738, &type metadata for AlertConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDFD0);
  }
  return result;
}

unint64_t sub_232E34B50()
{
  unint64_t result;

  result = qword_255FFDFD8;
  if (!qword_255FFDFD8)
  {
    result = MEMORY[0x23492A124](&unk_232E757F0, &type metadata for AlertConfiguration.AlertSound.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDFD8);
  }
  return result;
}

unint64_t sub_232E34B98()
{
  unint64_t result;

  result = qword_255FFDFE0;
  if (!qword_255FFDFE0)
  {
    result = MEMORY[0x23492A124](&unk_232E75760, &type metadata for AlertConfiguration.AlertSound.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDFE0);
  }
  return result;
}

unint64_t sub_232E34BE0()
{
  unint64_t result;

  result = qword_255FFDFE8;
  if (!qword_255FFDFE8)
  {
    result = MEMORY[0x23492A124](&unk_232E75788, &type metadata for AlertConfiguration.AlertSound.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDFE8);
  }
  return result;
}

unint64_t sub_232E34C28()
{
  unint64_t result;

  result = qword_255FFDFF0;
  if (!qword_255FFDFF0)
  {
    result = MEMORY[0x23492A124](&unk_232E756A8, &type metadata for AlertConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDFF0);
  }
  return result;
}

unint64_t sub_232E34C70()
{
  unint64_t result;

  result = qword_255FFDFF8;
  if (!qword_255FFDFF8)
  {
    result = MEMORY[0x23492A124](&unk_232E756D0, &type metadata for AlertConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFDFF8);
  }
  return result;
}

uint64_t sub_232E34CB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646E756F73 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_232E34DE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000232E7ECC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t static ActivityUIDismissalPolicy.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_232E3508C(&qword_255FFB4A8, (uint64_t)qword_255FFB360, a1);
}

uint64_t ActivityUIDismissalPolicy.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_232E34F1C(uint64_t a1)
{
  return sub_232E34FC4(a1, qword_255FFB360, MEMORY[0x24BDCE2F8]);
}

uint64_t type metadata accessor for ActivityUIDismissalPolicy()
{
  uint64_t result;

  result = qword_254237D30;
  if (!qword_254237D30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232E34F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityUIDismissalPolicy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E34FB0(uint64_t a1)
{
  return sub_232E34FC4(a1, qword_254237640, MEMORY[0x24BDCE2D8]);
}

uint64_t sub_232E34FC4(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_232E6EE74();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActivityUIDismissalPolicy();
  __swift_allocate_value_buffer(v9, a2);
  v10 = __swift_project_value_buffer(v9, (uint64_t)a2);
  a3();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v10, v8, v5);
}

uint64_t static ActivityUIDismissalPolicy.immediate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_232E3508C(&qword_2542374C0, (uint64_t)qword_254237640, a1);
}

uint64_t sub_232E3508C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for ActivityUIDismissalPolicy();
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_232E34F6C(v6, a3);
}

uint64_t static ActivityUIDismissalPolicy.after(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_232E35114()
{
  return 1702125924;
}

uint64_t sub_232E35124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E351A8()
{
  sub_232E35308();
  return sub_232E6F7D4();
}

uint64_t sub_232E351D0()
{
  sub_232E35308();
  return sub_232E6F7E0();
}

uint64_t ActivityUIDismissalPolicy.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542373E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E35308();
  sub_232E6F7C8();
  sub_232E6EE74();
  sub_232DDDAD8(&qword_254237BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_232E35308()
{
  unint64_t result;

  result = qword_254237628;
  if (!qword_254237628)
  {
    result = MEMORY[0x23492A124](&unk_232E75AA0, &type metadata for ActivityUIDismissalPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237628);
  }
  return result;
}

uint64_t ActivityUIDismissalPolicy.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v15 = a2;
  v17 = sub_232E6EE74();
  v14 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v16 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC570);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActivityUIDismissalPolicy();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E35308();
  sub_232E6F7BC();
  if (!v2)
  {
    sub_232DDDAD8(&qword_254238120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v16, v17);
    sub_232E2AA44((uint64_t)v11, v15);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232E35510@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityUIDismissalPolicy.init(from:)(a1, a2);
}

uint64_t sub_232E35524(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542373E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E35308();
  sub_232E6F7C8();
  sub_232E6EE74();
  sub_232DDDAD8(&qword_254237BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_232E35634(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_232DDDAD8(&qword_255FFC488, (uint64_t (*)(uint64_t))type metadata accessor for ActivityUIDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy);
  a1[2] = sub_232DDDAD8(&qword_254237390, (uint64_t (*)(uint64_t))type metadata accessor for ActivityUIDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy);
  result = sub_232DDDAD8(&qword_255FFE000, (uint64_t (*)(uint64_t))type metadata accessor for ActivityUIDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy);
  a1[3] = result;
  return result;
}

uint64_t sub_232E356AC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8(&qword_254237390, (uint64_t (*)(uint64_t))type metadata accessor for ActivityUIDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy);
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E35778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD8E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  sub_232DDDAD8(&qword_255FFC488, (uint64_t (*)(uint64_t))type metadata accessor for ActivityUIDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityUIDismissalPolicy);
  sub_232E6ED9C();
  sub_232E35AE8(a2);
  sub_232DE8D98(v8, v10);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v7, 0, 1, a3);
  return sub_232E35B28((uint64_t)v7, a2);
}

uint64_t getEnumTagSinglePayload for ActivityUIDismissalPolicy()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E358EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ActivityUIDismissalPolicy()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E35934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ActivityUIDismissalPolicy.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E359B4 + 4 * byte_232E758C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E359D4 + 4 * byte_232E758C5[v4]))();
}

_BYTE *sub_232E359B4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E359D4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E359DC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E359E4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E359EC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E359F4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityUIDismissalPolicy.CodingKeys()
{
  return &type metadata for ActivityUIDismissalPolicy.CodingKeys;
}

unint64_t sub_232E35A14()
{
  unint64_t result;

  result = qword_255FFE008;
  if (!qword_255FFE008)
  {
    result = MEMORY[0x23492A124](&unk_232E75A78, &type metadata for ActivityUIDismissalPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE008);
  }
  return result;
}

unint64_t sub_232E35A5C()
{
  unint64_t result;

  result = qword_254237638;
  if (!qword_254237638)
  {
    result = MEMORY[0x23492A124](&unk_232E759E8, &type metadata for ActivityUIDismissalPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237638);
  }
  return result;
}

unint64_t sub_232E35AA4()
{
  unint64_t result;

  result = qword_254237630;
  if (!qword_254237630)
  {
    result = MEMORY[0x23492A124](&unk_232E75A10, &type metadata for ActivityUIDismissalPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237630);
  }
  return result;
}

uint64_t sub_232E35AE8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD8E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232E35B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD8E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E35B70()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_255FFC4B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC4B8);
  return sub_232E6EEC8();
}

uint64_t static ActivityPresentationObservationServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255FFC4D8 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255FFC4B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static ActivityPresentationObservationServiceDefinition.serviceName.getter()
{
  return 0xD000000000000037;
}

uint64_t sub_232E35C44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255FFC4D8 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255FFC4B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_232E35CB4()
{
  return 0xD000000000000037;
}

ValueMetadata *type metadata accessor for ActivityPresentationObservationServiceDefinition()
{
  return &type metadata for ActivityPresentationObservationServiceDefinition;
}

uint64_t sub_232E35CE0()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFE010);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFE010);
  return sub_232E6EF1C();
}

id StateCaptureClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t StateCaptureClient.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  objc_class *v10;
  char *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t result;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];
  objc_super v22;

  v1 = v0;
  v20 = sub_232E6F3C0();
  v2 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_connection;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_connection] = 0;
  v19 = OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_queue;
  v18[1] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v8 = v0;
  sub_232E6F0FC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DEA598();
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5758], v20);
  *(_QWORD *)&v0[v19] = sub_232E6F3F0();
  v9 = *(void **)&v0[v7];
  *(_QWORD *)&v1[v7] = 0;

  v10 = (objc_class *)type metadata accessor for StateCaptureClient();
  v22.receiver = v8;
  v22.super_class = v10;
  v11 = (char *)objc_msgSendSuper2(&v22, sel_init);
  v12 = *(NSObject **)&v11[OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_queue];
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_232E360B8;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_232DDD4AC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_11;
  v15 = _Block_copy(aBlock);
  v16 = v11;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);

  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v12 & 1) == 0)
    return (uint64_t)v16;
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StateCaptureClient()
{
  return objc_opt_self();
}

uint64_t sub_232E36094()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232E360B8()
{
  sub_232E366A0();
}

uint64_t sub_232E360D8()
{
  return swift_deallocObject();
}

void *sub_232E36108()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  void *result;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_queue];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x24BEE5610], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_232E6F144();
  result = (void *)(*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v10 = OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232E36CEC();
    result = (void *)sub_232E6F438();
    if (result)
    {
      v11 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = result;
      v12 = result;

      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v1;
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = sub_232E36D30;
      *(_QWORD *)(v14 + 24) = v13;
      aBlock[4] = sub_232DE068C;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_12_1;
      v15 = _Block_copy(aBlock);
      v16 = v1;
      swift_retain();
      swift_release();
      objc_msgSend(v12, sel_configureConnection_, v15);

      _Block_release(v15);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      result = (void *)swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        goto LABEL_7;
    }
  }
  return result;
}

void sub_232E36324(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256013408);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_256013390);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_utility);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_queue));
  v18 = sub_232E365A8;
  v19 = 0;
  v10 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_15_1;
  v11 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v18 = sub_232E365B4;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_18_2;
  v12 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  v18 = sub_232E365C0;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_21_2;
  v13 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInvalidationHandler_, v13);
  _Block_release(v13);

}

void sub_232E365A8(uint64_t a1)
{
  sub_232E365CC(a1, "StateCapture Service: Activated");
}

void sub_232E365B4(uint64_t a1)
{
  sub_232E365CC(a1, "StateCapture Service: Interrupted");
}

void sub_232E365C0(uint64_t a1)
{
  sub_232E365CC(a1, "StateCapture Service: Invalidated");
}

void sub_232E365CC(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_255FFC930 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_255FFE010);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232E366A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _OWORD v10[2];

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    sub_232E36108();
    v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_connection);
    if (v8)
    {
      v9 = v8;
      if (objc_msgSend(v9, sel_remoteTarget))
      {
        sub_232E6F498();

        swift_unknownObjectRelease();
        sub_232DDE4F0((uint64_t)v10);
      }
      else
      {
        memset(v10, 0, sizeof(v10));
        sub_232DDE4F0((uint64_t)v10);
        objc_msgSend(v9, sel_activate);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_232E367D8()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_queue);
  *v5 = v6;
  (*((void (**)(_QWORD *, _QWORD, NSObject *, double))isa + 13))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*((void (**)(_QWORD *, NSObject *))isa + 1))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232E366A0();
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKit18StateCaptureClient_connection);
  if (!v8)
  {
    if (qword_255FFC930 != -1)
      swift_once();
    v9 = sub_232E6EF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_255FFE010);
    v1 = sub_232E6EF10();
    v10 = sub_232E6F384();
    if (os_log_type_enabled(v1, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_232DDB000, v1, v10, "StateCaptureClient: Failed to establish a connection", v11, 2u);
      MEMORY[0x23492A1F0](v11, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v8;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_232DE9CF0((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE040);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v17[1];
    }
  }
  else
  {
    sub_232DDE4F0((uint64_t)v19);
  }
  if (qword_255FFC930 != -1)
    goto LABEL_20;
LABEL_15:
  v13 = sub_232E6EF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_255FFE010);
  v14 = sub_232E6EF10();
  v15 = sub_232E6F384();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_232DDB000, v14, v15, "StateCaptureClient: Failed to cast connection to server interface protocol", v16, 2u);
    MEMORY[0x23492A1F0](v16, -1, -1);
  }

LABEL_18:
  return 0;
}

id StateCaptureClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateCaptureClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t StateCaptureClient.state(identifier:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE038);
  result = sub_232E6F3D8();
  if (!v0)
    return v2;
  return result;
}

void sub_232E36B80(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_232E367D8();
  if (v4)
  {
    v5 = (void *)v4;
    if (a1)
      v6 = (void *)sub_232E6F1E0();
    else
      v6 = 0;
    v12[0] = 0;
    v7 = objc_msgSend(v5, sel_stateForIdentifier_error_, v6, v12);
    swift_unknownObjectRelease();

    v8 = v12[0];
    if (v7)
    {
      v9 = sub_232E6F168();
      v10 = v8;

      *a2 = v9;
    }
    else
    {
      v11 = v12[0];
      sub_232E6EDF0();

      swift_willThrow();
    }
  }
  else
  {
    *a2 = sub_232E4F118(MEMORY[0x24BEE4AF8]);
  }
}

void sub_232E36CC4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_232E36B80(*(_QWORD *)(v1 + 32), a1);
}

uint64_t method lookup function for StateCaptureClient()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_232E36CEC()
{
  unint64_t result;

  result = qword_255FFE048;
  if (!qword_255FFE048)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for StateCaptureServiceDefinition, &type metadata for StateCaptureServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_255FFE048);
  }
  return result;
}

void sub_232E36D30(void *a1)
{
  uint64_t v1;

  sub_232E36324(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232E36D38()
{
  return swift_deallocObject();
}

uint64_t sub_232E36D6C()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_254237330);
  __swift_project_value_buffer(v0, (uint64_t)qword_254237330);
  return sub_232E6EEC8();
}

uint64_t static ActivityProminenceObservationServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254237348 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254237330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static ActivityProminenceObservationServiceDefinition.serviceName.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_232E36E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254237348 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254237330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_232E36EB0()
{
  return 0xD000000000000035;
}

ValueMetadata *type metadata accessor for ActivityProminenceObservationServiceDefinition()
{
  return &type metadata for ActivityProminenceObservationServiceDefinition;
}

uint64_t Logger.init(category:)(uint64_t a1)
{
  return sub_232E375E8(a1, (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))MEMORY[0x24BEE78C0]);
}

unint64_t static ActivityCategory.subsystem.getter()
{
  return 0xD000000000000015;
}

ActivityKit::ActivityCategory_optional __swiftcall ActivityCategory.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ActivityKit::ActivityCategory_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_232E6F6F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 20;
  switch(v3)
  {
    case 0:
      goto LABEL_22;
    case 1:
      v5 = 1;
      goto LABEL_22;
    case 2:
      v5 = 2;
      goto LABEL_22;
    case 3:
      v5 = 3;
      goto LABEL_22;
    case 4:
      v5 = 4;
      goto LABEL_22;
    case 5:
      v5 = 5;
      goto LABEL_22;
    case 6:
      v5 = 6;
      goto LABEL_22;
    case 7:
      v5 = 7;
      goto LABEL_22;
    case 8:
      v5 = 8;
      goto LABEL_22;
    case 9:
      v5 = 9;
      goto LABEL_22;
    case 10:
      v5 = 10;
      goto LABEL_22;
    case 11:
      v5 = 11;
      goto LABEL_22;
    case 12:
      v5 = 12;
      goto LABEL_22;
    case 13:
      v5 = 13;
      goto LABEL_22;
    case 14:
      v5 = 14;
      goto LABEL_22;
    case 15:
      v5 = 15;
      goto LABEL_22;
    case 16:
      v5 = 16;
      goto LABEL_22;
    case 17:
      v5 = 17;
      goto LABEL_22;
    case 18:
      v5 = 18;
      goto LABEL_22;
    case 19:
      v5 = 19;
LABEL_22:
      v6 = v5;
      break;
    case 20:
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    case 36:
      v6 = 36;
      break;
    case 37:
      v6 = 37;
      break;
    default:
      v6 = 38;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t ActivityCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E370E4 + 4 * byte_232E75C86[*v0]))(0x7974697669746361, 0xEF726567616E614DLL);
}

uint64_t sub_232E370F8()
{
  return 6910049;
}

uint64_t sub_232E37108()
{
  return 0x7A69726F68747561;
}

uint64_t sub_232E37140()
{
  return 0x726573624F736F71;
}

unint64_t sub_232E37164()
{
  return 0xD000000000000017;
}

uint64_t sub_232E37450()
{
  return 0x7069726373627573;
}

uint64_t sub_232E3748C()
{
  return sub_232E53A6C();
}

uint64_t sub_232E37498()
{
  sub_232E6F780();
  ActivityCategory.rawValue.getter();
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  return sub_232E6F7B0();
}

uint64_t sub_232E374FC()
{
  ActivityCategory.rawValue.getter();
  sub_232E6F21C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E3754C()
{
  sub_232E6F780();
  ActivityCategory.rawValue.getter();
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  return sub_232E6F7B0();
}

ActivityKit::ActivityCategory_optional sub_232E375AC(Swift::String *a1)
{
  return ActivityCategory.init(rawValue:)(*a1);
}

uint64_t sub_232E375B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ActivityCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t OSSignposter.init(category:)(uint64_t a1)
{
  return sub_232E375E8(a1, MEMORY[0x24BEE77C8]);
}

uint64_t sub_232E375E8(uint64_t a1, uint64_t (*a2)(unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v2 = ActivityCategory.rawValue.getter();
  return a2(0xD000000000000015, 0x8000000232E7D440, v2, v3);
}

unint64_t sub_232E3764C()
{
  unint64_t result;

  result = qword_255FFE050;
  if (!qword_255FFE050)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityCategory, &type metadata for ActivityCategory);
    atomic_store(result, (unint64_t *)&qword_255FFE050);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDB)
    goto LABEL_17;
  if (a2 + 37 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 37) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 37;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 37;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 37;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x26;
  v8 = v6 - 38;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 37 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 37) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDA)
    return ((uint64_t (*)(void))((char *)&loc_232E3776C + 4 * byte_232E75CB1[v4]))();
  *a1 = a2 + 37;
  return ((uint64_t (*)(void))((char *)sub_232E377A0 + 4 * byte_232E75CAC[v4]))();
}

uint64_t sub_232E377A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E377A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E377B0);
  return result;
}

uint64_t sub_232E377BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E377C4);
  *(_BYTE *)result = a2 + 37;
  return result;
}

uint64_t sub_232E377C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E377D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityCategory()
{
  return &type metadata for ActivityCategory;
}

uint64_t ActivityAuthorizationInfo.ActivityEnablementUpdates.makeAsyncIterator()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3E0);
  return sub_232E6EF7C();
}

uint64_t ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator.next()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE060);
  *v1 = v0;
  v1[1] = sub_232E37884;
  return sub_232E6EF88();
}

uint64_t sub_232E37884()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E378D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_232E378E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE060);
  *v2 = v1;
  v2[1] = sub_232E37954;
  return sub_232E6EF88();
}

uint64_t sub_232E37954()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E379A8()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_232E379C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[5] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE060);
  *v4 = v3;
  v4[1] = sub_232E37A34;
  return sub_232E6EF88();
}

uint64_t sub_232E37A34()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E37A88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 49) = *(_BYTE *)(v0 + 48);
  if (v1)
  {
    swift_getObjectType();
    sub_232E6F33C();
  }
  return swift_task_switch();
}

uint64_t sub_232E37AF0()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_232E37B08(uint64_t a1, uint64_t a2)
{
  return sub_232E37FE8(a1, a2, &qword_255FFB3E0, type metadata accessor for ActivityAuthorizationInfo.ActivityEnablementUpdates);
}

uint64_t ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator.next()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE060);
  *v1 = v0;
  v1[1] = sub_232E37B88;
  return sub_232E6EF88();
}

uint64_t sub_232E37B88()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E37BDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE060);
  *v2 = v1;
  v2[1] = sub_232E37C4C;
  return sub_232E6EF88();
}

uint64_t sub_232E37C4C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E37CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[5] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE060);
  *v4 = v3;
  v4[1] = sub_232E37D14;
  return sub_232E6EF88();
}

uint64_t sub_232E37D14()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_232E37D68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 49) = *(_BYTE *)(v0 + 48);
  if (v1)
  {
    swift_getObjectType();
    sub_232E6F33C();
  }
  return swift_task_switch();
}

uint64_t sub_232E37DD0(uint64_t a1, uint64_t a2)
{
  return sub_232E37FE8(a1, a2, &qword_255FFB3E0, type metadata accessor for ActivityAuthorizationInfo.FrequentPushEnablementUpdates);
}

BOOL static ActivityAuthorizationInfo.ActivityAuthorizationStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ActivityAuthorizationInfo.ActivityAuthorizationStatus.hash(into:)()
{
  return sub_232E6F78C();
}

uint64_t ActivityAuthorizationInfo.ActivityAuthorizationStatus.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.makeAsyncIterator()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3D0);
  return sub_232E6EF7C();
}

uint64_t ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator.next()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_255FFE078);
  *v1 = v0;
  v1[1] = sub_232E29570;
  return sub_232E6EF88();
}

uint64_t sub_232E37EFC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_255FFE078);
  *v1 = v0;
  v1[1] = sub_232E29644;
  return sub_232E6EF88();
}

uint64_t sub_232E37F68()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_255FFE078);
  *v1 = v0;
  v1[1] = sub_232E2C4DC;
  return sub_232E6EF88();
}

uint64_t sub_232E37FD4(uint64_t a1, uint64_t a2)
{
  return sub_232E37FE8(a1, a2, &qword_255FFB3D0, type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates);
}

uint64_t sub_232E37FE8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_232E6EF7C();
  return sub_232DF51B8(v4, a4);
}

uint64_t ActivityAuthorizationInfo.areFrequentPushesEnabled.getter()
{
  uint64_t v0;
  char *v1;
  os_unfair_lock_s *v2;
  char *v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization);
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v3 = v1;
  os_unfair_lock_lock(v2);
  v4 = &v3[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  result = MEMORY[0x23492A28C](&v3[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  if (result)
  {
    v6 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType();
    LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 104))(ObjectType, v6);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v2);

    return v6 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ActivityAuthorizationInfo.frequentPushesEnabled.getter()
{
  uint64_t v0;
  char *v1;
  os_unfair_lock_s *v2;
  char *v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization);
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v3 = v1;
  os_unfair_lock_lock(v2);
  v4 = &v3[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  result = MEMORY[0x23492A28C](&v3[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  if (result)
  {
    v6 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType();
    LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 104))(ObjectType, v6);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v2);

    return v6 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ActivityAuthorizationInfo.areActivitiesEnabled.getter()
{
  uint64_t v0;
  char *v1;
  os_unfair_lock_s *v2;
  char *v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization);
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v3 = v1;
  os_unfair_lock_lock(v2);
  v4 = &v3[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  result = MEMORY[0x23492A28C](&v3[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  if (result)
  {
    v6 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType();
    LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v2);

    return v6 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ActivityAuthorizationInfo.activityEnablementUpdates.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DED470(v1 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityEnablementUpdates, a1, type metadata accessor for ActivityAuthorizationInfo.ActivityEnablementUpdates);
}

uint64_t type metadata accessor for ActivityAuthorizationInfo.ActivityEnablementUpdates(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFE0D0);
}

uint64_t ActivityAuthorizationInfo.frequentPushEnablementUpdates.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DED470(v1 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_frequentPushEnablementUpdates, a1, type metadata accessor for ActivityAuthorizationInfo.FrequentPushEnablementUpdates);
}

uint64_t type metadata accessor for ActivityAuthorizationInfo.FrequentPushEnablementUpdates(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFE0F8);
}

ActivityKit::ActivityAuthorizationInfo::ActivityAuthorizationStatus __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ActivityAuthorizationInfo.activityAuthorizationStatus(for:)(Swift::String a1)
{
  char *v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  char *v5;
  char *v6;
  os_unfair_lock_s *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  char v13;
  uint64_t v15;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = v1;
  v6 = *(char **)(v2 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization);
  v7 = *(os_unfair_lock_s **)(*(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v8 = v6;
  os_unfair_lock_lock(v7);
  v9 = &v8[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  v10 = MEMORY[0x23492A28C](&v8[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  if (v10)
  {
    v11 = *((_QWORD *)v9 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, void *, uint64_t, uint64_t))(v11 + 64))(&v15, countAndFlagsBits, object, ObjectType, v11);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v7);

    if ((_BYTE)v15)
      v13 = 2 * (v15 == 1);
    else
      v13 = 1;
    *v5 = v13;
  }
  else
  {
    __break(1u);
  }
  return (char)v10;
}

uint64_t ActivityAuthorizationInfo.activityAuthorizationStatusUpdates.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DED470(v1 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorizationStatusUpdates, a1, type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates);
}

uint64_t type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFE118);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ActivityAuthorizationInfo.subscribeToActivityAuthorizationStatusUpdates(for:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  char *v4;
  os_unfair_lock_s *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjectType;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = *(char **)(v1 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization);
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)&v4[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v6 = v4;
  os_unfair_lock_lock(v5);
  v7 = &v6[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  if (MEMORY[0x23492A28C](&v6[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]))
  {
    v8 = *((_QWORD *)v7 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v8 + 72))(countAndFlagsBits, object, ObjectType, v8);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v5);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ActivityAuthorizationInfo.unsubscribeToActivityAuthorizationStatusUpdates(for:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  char *v4;
  os_unfair_lock_s *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjectType;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = *(char **)(v1 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization);
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)&v4[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v6 = v4;
  os_unfair_lock_lock(v5);
  v7 = &v6[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  if (MEMORY[0x23492A28C](&v6[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]))
  {
    v8 = *((_QWORD *)v7 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v8 + 80))(countAndFlagsBits, object, ObjectType, v8);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t ActivityAuthorizationInfo.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ActivityAuthorizationInfo.init()();
  return v0;
}

uint64_t ActivityAuthorizationInfo.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, _QWORD *);
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  os_unfair_lock_s *v32;
  char *v33;
  char *v34;
  uint64_t result;
  uint64_t v36;
  uint64_t ObjectType;
  char *v38;
  os_unfair_lock_s *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;

  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB398);
  v1 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AE0);
  MEMORY[0x24BDAC7A8](v3);
  v86 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3A8);
  v84 = *(_QWORD *)(v5 - 8);
  v85 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v82 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v83 = (char *)&v78 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3D0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v91 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3E0);
  v93 = *(v90 - 1);
  MEMORY[0x24BDAC7A8](v90);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityEnablementUpdatesPublisher;
  __swift_instantiateConcreteTypeFromMangledName(qword_255FFC160);
  swift_allocObject();
  v15 = sub_232E6EFAC();
  *(_QWORD *)(v0 + v14) = v15;
  v16 = OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_frequentPushEnablementUpdatesPublisher;
  swift_allocObject();
  v17 = sub_232E6EFAC();
  v87 = (void (*)(char *, uint64_t))v16;
  *(_QWORD *)(v0 + v16) = v17;
  v18 = OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorizationStatusUpdatesPublisher;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3F0);
  swift_allocObject();
  v19 = sub_232E6EFAC();
  v88 = v18;
  *(_QWORD *)(v0 + v18) = v19;
  v80 = v1;
  v94 = v9;
  v92 = v10;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_232E6F588())
    v20 = sub_232E39480(MEMORY[0x24BEE4AF8]);
  else
    v20 = MEMORY[0x24BEE4B08];
  v21 = v93;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_cancellableSet) = v20;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActivityAuthorization()), sel_init);
  v95 = v15;
  sub_232DDF49C(&qword_255FFB5E8, qword_255FFC160, MEMORY[0x24BDB9CB0]);
  v95 = sub_232E6F030();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3C8);
  v23 = sub_232DDF49C(&qword_255FFB5D0, &qword_255FFB3C8, MEMORY[0x24BDB9AF8]);
  MEMORY[0x2349294DC](v22, v23);
  swift_release();
  v24 = *(void (**)(uint64_t, char *, _QWORD *))(v21 + 32);
  v25 = v90;
  v24(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityEnablementUpdates, v13, v90);
  v95 = *(_QWORD *)((char *)v87 + v0);
  v95 = sub_232E6F030();
  v93 = v23;
  MEMORY[0x2349294DC](v22, v23);
  swift_release();
  v26 = v25;
  v27 = v0;
  v24(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_frequentPushEnablementUpdates, v13, v26);
  v95 = *(_QWORD *)(v0 + v88);
  sub_232DDF49C(&qword_255FFB5D8, &qword_255FFB3F0, MEMORY[0x24BDB9CB0]);
  v95 = sub_232E6F030();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3B8);
  v29 = sub_232DDF49C(&qword_255FFB3B0, &qword_255FFB3B8, MEMORY[0x24BDB9AF8]);
  v30 = v91;
  MEMORY[0x2349294DC](v28, v29);
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v92 + 32))(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorizationStatusUpdates, v30, v94);
  v94 = OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization;
  v31 = *(char **)(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorization);
  v32 = *(os_unfair_lock_s **)(*(_QWORD *)&v31[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v33 = v31;
  os_unfair_lock_lock(v32);
  v34 = &v33[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  result = MEMORY[0x23492A28C](&v33[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v36 = *((_QWORD *)v34 + 1);
  ObjectType = swift_getObjectType();
  LOBYTE(v36) = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 32))(ObjectType, v36);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v32);

  LOBYTE(v95) = v36 & 1;
  sub_232E6EF94();
  v38 = *(char **)(v0 + v94);
  v39 = *(os_unfair_lock_s **)(*(_QWORD *)&v38[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  v40 = v38;
  os_unfair_lock_lock(v39);
  v41 = &v40[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  result = MEMORY[0x23492A28C](&v40[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  v42 = (uint64_t)v86;
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v43 = *((_QWORD *)v41 + 1);
  v44 = swift_getObjectType();
  LOBYTE(v43) = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 104))(v44, v43);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v39);

  LOBYTE(v95) = v43 & 1;
  sub_232E6EF94();
  v45 = *(char **)(v0 + v94);
  v46 = &v45[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  result = MEMORY[0x23492A28C](&v45[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  v47 = v85;
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v48 = *((_QWORD *)v46 + 1);
  v49 = swift_getObjectType();
  v50 = *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8);
  v51 = v45;
  v52 = v50(v49, v48);

  swift_unknownObjectRelease();
  v95 = v52;
  v53 = sub_232DEA514();
  v96 = (id)sub_232E6F3CC();
  v54 = sub_232E6F3B4();
  v90 = *(_QWORD **)(*(_QWORD *)(v54 - 8) + 56);
  v91 = (char *)v54;
  ((void (*)(uint64_t, uint64_t, uint64_t))v90)(v42, 1, 1);
  v55 = sub_232DDDAD8((unint64_t *)&qword_254237AE8, (uint64_t (*)(uint64_t))sub_232DEA514, MEMORY[0x24BEE5670]);
  v56 = v83;
  v89 = v53;
  v92 = v55;
  sub_232E6F084();
  sub_232E38FFC(v42);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  v88 = sub_232DDF49C(&qword_255FFB3A0, &qword_255FFB3A8, MEMORY[0x24BDB9A08]);
  sub_232E6F09C();
  swift_release();
  v87 = *(void (**)(char *, uint64_t))(v84 + 8);
  v87(v56, v47);
  v57 = v47;
  swift_beginAccess();
  sub_232E6EF4C();
  swift_endAccess();
  swift_release();
  v58 = v42;
  v59 = *(char **)(v0 + v94);
  v60 = &v59[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  result = MEMORY[0x23492A28C](&v59[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v61 = *((_QWORD *)v60 + 1);
  v62 = swift_getObjectType();
  v63 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 16);
  v64 = v59;
  v65 = v63(v62, v61);

  swift_unknownObjectRelease();
  v95 = v65;
  v96 = (id)sub_232E6F3CC();
  ((void (*)(uint64_t, uint64_t, uint64_t, char *))v90)(v58, 1, 1, v91);
  v66 = v82;
  sub_232E6F084();
  sub_232E38FFC(v58);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_232E6F09C();
  swift_release();
  v87(v66, v57);
  swift_beginAccess();
  sub_232E6EF4C();
  swift_endAccess();
  swift_release();
  v67 = *(char **)(v0 + v94);
  v68 = &v67[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  result = MEMORY[0x23492A28C](&v67[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]);
  if (result)
  {
    v69 = *((_QWORD *)v68 + 1);
    v70 = swift_getObjectType();
    v71 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 24);
    v72 = v67;
    v73 = v71(v70, v69);

    swift_unknownObjectRelease();
    v95 = v73;
    v96 = (id)sub_232E6F3CC();
    ((void (*)(uint64_t, uint64_t, uint64_t, char *))v90)(v58, 1, 1, v91);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3C0);
    sub_232DDF49C(&qword_255FFB5C8, &qword_255FFB3C0, MEMORY[0x24BDB9AF8]);
    v74 = v79;
    sub_232E6F084();
    sub_232E38FFC(v58);

    swift_release();
    v75 = swift_allocObject();
    swift_weakInit();
    v76 = swift_allocObject();
    *(_QWORD *)(v76 + 16) = sub_232E391B8;
    *(_QWORD *)(v76 + 24) = v75;
    sub_232DDF49C(&qword_255FFB5C0, &qword_255FFB398, MEMORY[0x24BDB9A08]);
    v77 = v81;
    sub_232E6F09C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v74, v77);
    swift_beginAccess();
    sub_232E6EF4C();
    swift_endAccess();
    swift_release();
    return v27;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_232E38FFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232E3903C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232E39060()
{
  return sub_232E39080();
}

uint64_t sub_232E39080()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_232E6EF94();
    return swift_release();
  }
  return result;
}

uint64_t sub_232E390F4()
{
  return sub_232E39080();
}

uint64_t sub_232E39114()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_bridgeObjectRetain();
    sub_232E6EF94();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_232E391B8()
{
  return sub_232E39114();
}

uint64_t sub_232E391C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E391E4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD *))(v1 + 16))(*a1, a1[1], a1 + 2);
}

uint64_t ActivityAuthorizationInfo.deinit()
{
  uint64_t v0;

  sub_232DF51B8(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityEnablementUpdates, type metadata accessor for ActivityAuthorizationInfo.ActivityEnablementUpdates);
  sub_232DF51B8(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_frequentPushEnablementUpdates, type metadata accessor for ActivityAuthorizationInfo.FrequentPushEnablementUpdates);
  sub_232DF51B8(v0 + OBJC_IVAR____TtC11ActivityKit25ActivityAuthorizationInfo_activityAuthorizationStatusUpdates, type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates);

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ActivityAuthorizationInfo.__deallocating_deinit()
{
  ActivityAuthorizationInfo.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_232E392E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD920);
    v3 = sub_232E6F4D4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_232E6F780();
      swift_bridgeObjectRetain();
      sub_232E6F21C();
      result = sub_232E6F7B0();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_232E6F6E4(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_232E6F6E4();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

unint64_t sub_232E39480(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_232E6F588();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE140);
      result = sub_232E6F4D4();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_232E6F588();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x234929938](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_232E6EF64();
    sub_232DDDAD8(&qword_255FFE148, v8, MEMORY[0x24BDB9B70]);
    result = sub_232E6F1BC();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_232DDDAD8(&qword_255FFE150, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_232E6F1D4();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_232E39714()
{
  return sub_232DDDAD8(qword_255FFE090, type metadata accessor for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator, (uint64_t)&protocol conformance descriptor for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator);
}

uint64_t type metadata accessor for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFE0E0);
}

uint64_t sub_232E39754()
{
  return sub_232DDDAD8(&qword_255FFE0A8, type metadata accessor for ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator, (uint64_t)&protocol conformance descriptor for ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator);
}

uint64_t type metadata accessor for ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFE108);
}

unint64_t sub_232E39798()
{
  unint64_t result;

  result = qword_255FFE0B0[0];
  if (!qword_255FFE0B0[0])
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationInfo.ActivityAuthorizationStatus, &type metadata for ActivityAuthorizationInfo.ActivityAuthorizationStatus);
    atomic_store(result, qword_255FFE0B0);
  }
  return result;
}

uint64_t sub_232E397DC()
{
  return sub_232DDDAD8(&qword_255FFE0C8, type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator, (uint64_t)&protocol conformance descriptor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator);
}

uint64_t type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFE128);
}

uint64_t sub_232E3981C()
{
  return type metadata accessor for ActivityAuthorizationInfo(0);
}

uint64_t type metadata accessor for ActivityAuthorizationInfo(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFB388);
}

void sub_232E39838()
{
  unint64_t v0;
  unint64_t v1;

  sub_232E3993C(319, &qword_255FFB3E8, &qword_255FFB3C8, &qword_255FFB5D0, MEMORY[0x24BDB9BC8]);
  if (v0 <= 0x3F)
  {
    sub_232E3993C(319, &qword_255FFB3D8, &qword_255FFB3B8, &qword_255FFB3B0, MEMORY[0x24BDB9BC8]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ActivityAuthorizationInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityAuthorizationInfo.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_232E3993C(uint64_t a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (!*a2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v11 = sub_232DDF49C(a4, a3, MEMORY[0x24BDB9AF8]);
    v12 = a5(a1, v10, v11);
    if (!v13)
      atomic_store(v12, a2);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityAuthorizationInfo.ActivityEnablementUpdates(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3E0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ActivityAuthorizationInfo.ActivityEnablementUpdates(uint64_t a1, uint64_t a2)
{
  return sub_232E2C214(a1, a2, &qword_255FFB3E0);
}

uint64_t initializeWithCopy for ActivityAuthorizationInfo.ActivityEnablementUpdates(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C254(a1, a2, a3, &qword_255FFB3E0);
}

uint64_t assignWithCopy for ActivityAuthorizationInfo.ActivityEnablementUpdates(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2A4(a1, a2, a3, &qword_255FFB3E0);
}

uint64_t initializeWithTake for ActivityAuthorizationInfo.ActivityEnablementUpdates(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2F4(a1, a2, a3, &qword_255FFB3E0);
}

uint64_t assignWithTake for ActivityAuthorizationInfo.ActivityEnablementUpdates(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C344(a1, a2, a3, &qword_255FFB3E0);
}

uint64_t getEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityEnablementUpdates()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_32Tm(a1, a2, a3, &qword_255FFB3E0);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityEnablementUpdates()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_33Tm(a1, a2, a3, a4, &qword_255FFB3E0);
}

void sub_232E39A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_232E39E2C(a1, a2, a3, &qword_255FFB3E8, &qword_255FFB3C8, &qword_255FFB5D0, MEMORY[0x24BDB9BC8]);
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE060);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator(uint64_t a1, uint64_t a2)
{
  return sub_232E2C214(a1, a2, &qword_255FFE060);
}

uint64_t initializeWithCopy for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C254(a1, a2, a3, &qword_255FFE060);
}

uint64_t assignWithCopy for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2A4(a1, a2, a3, &qword_255FFE060);
}

uint64_t initializeWithTake for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2F4(a1, a2, a3, &qword_255FFE060);
}

uint64_t assignWithTake for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C344(a1, a2, a3, &qword_255FFE060);
}

uint64_t getEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_32Tm(a1, a2, a3, &qword_255FFE060);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_33Tm(a1, a2, a3, a4, &qword_255FFE060);
}

void sub_232E39B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_232E39E2C(a1, a2, a3, &qword_255FFE0F0, &qword_255FFB3C8, &qword_255FFB5D0, MEMORY[0x24BDB9BB0]);
}

uint64_t getEnumTagSinglePayload for ActivityAuthorizationInfo.FrequentPushEnablementUpdates()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_32Tm(a1, a2, a3, &qword_255FFB3E0);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationInfo.FrequentPushEnablementUpdates()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_33Tm(a1, a2, a3, a4, &qword_255FFB3E0);
}

uint64_t getEnumTagSinglePayload for ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_32Tm(a1, a2, a3, &qword_255FFE060);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_33Tm(a1, a2, a3, a4, &qword_255FFE060);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityAuthorizationStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E39C0C + 4 * byte_232E75E25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232E39C40 + 4 * byte_232E75E20[v4]))();
}

uint64_t sub_232E39C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E39C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E39C50);
  return result;
}

uint64_t sub_232E39C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E39C64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232E39C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E39C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatus()
{
  return &type metadata for ActivityAuthorizationInfo.ActivityAuthorizationStatus;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB3D0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates(uint64_t a1, uint64_t a2)
{
  return sub_232E2C214(a1, a2, &qword_255FFB3D0);
}

uint64_t initializeWithCopy for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C254(a1, a2, a3, &qword_255FFB3D0);
}

uint64_t assignWithCopy for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2A4(a1, a2, a3, &qword_255FFB3D0);
}

uint64_t initializeWithTake for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2F4(a1, a2, a3, &qword_255FFB3D0);
}

uint64_t assignWithTake for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C344(a1, a2, a3, &qword_255FFB3D0);
}

uint64_t getEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_32Tm(a1, a2, a3, &qword_255FFB3D0);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_33Tm(a1, a2, a3, a4, &qword_255FFB3D0);
}

void sub_232E39D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_232E39E2C(a1, a2, a3, &qword_255FFB3D8, &qword_255FFB3B8, &qword_255FFB3B0, MEMORY[0x24BDB9BC8]);
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255FFE078);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator(uint64_t a1, uint64_t a2)
{
  return sub_232E2C214(a1, a2, qword_255FFE078);
}

uint64_t initializeWithCopy for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C254(a1, a2, a3, qword_255FFE078);
}

uint64_t assignWithCopy for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2A4(a1, a2, a3, qword_255FFE078);
}

uint64_t initializeWithTake for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C2F4(a1, a2, a3, qword_255FFE078);
}

uint64_t assignWithTake for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232E2C344(a1, a2, a3, qword_255FFE078);
}

uint64_t getEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_32Tm(a1, a2, a3, qword_255FFE078);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E39DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_33Tm(a1, a2, a3, a4, qword_255FFE078);
}

void sub_232E39E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_232E39E2C(a1, a2, a3, &qword_255FFE138, &qword_255FFB3B8, &qword_255FFB3B0, MEMORY[0x24BDB9BB0]);
}

void sub_232E39E2C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5, unint64_t *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v7;

  sub_232E3993C(319, a4, a5, a6, a7);
  if (v7 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t ActivityPredicate.matches(descriptor:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = a1;
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[3];
  if (!v5)
  {
    v17 = 1;
    goto LABEL_19;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 16);
  if (!v6)
  {
    v17 = 0;
    goto LABEL_19;
  }
  v21 = *v1;
  v24 = v1[2];
  v22 = v1[1];
  v7 = swift_bridgeObjectRetain() + 48;
  v23 = v5;
  while (1)
  {
    if (*(_BYTE *)(v7 + 40) != 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_232DDDF74(0, 0);
      sub_232DDDF74(v24, v5);
      goto LABEL_5;
    }
    v9 = *(_QWORD *)(v7 - 16);
    v8 = *(_QWORD *)(v7 - 8);
    v10 = *(_QWORD *)v7;
    v11 = *(_QWORD *)(v7 + 8);
    v13 = *(_QWORD *)(v7 + 16);
    v12 = *(_QWORD *)(v7 + 24);
    v14 = *(_QWORD *)(v7 + 32);
    if (v9 == v24 && v8 == v5)
      break;
    v16 = sub_232E6F6E4();
    sub_232E13454(v9, v8, v10, v11, v13, v12, v14, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      goto LABEL_17;
LABEL_5:
    v7 += 64;
    --v6;
    v5 = v23;
    if (!v6)
    {
      swift_bridgeObjectRelease();
      v17 = 0;
      goto LABEL_18;
    }
  }
  sub_232E13454(v24, v5, *(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease();
  v17 = 1;
LABEL_18:
  v3 = v21;
  v4 = v22;
  v2 = a1;
LABEL_19:
  if (v4)
  {
    if (*(_QWORD *)(v2 + 16) != v3 || v4 != *(_QWORD *)(v2 + 24))
      return v17 & sub_232E6F6E4();
  }
  return v17;
}

void __swiftcall ActivityPredicate.init(attributesType:owner:)(ActivityKit::ActivityPredicate *__return_ptr retstr, ActivityKit::ActivityAttributesType_optional attributesType, ActivityKit::ProcessDescriptor_optional *owner)
{
  void *v3;
  Swift::String v4;
  __int128 v5;

  v3 = (void *)*((_QWORD *)attributesType.value.attributesType._object + 4);
  v4 = *(Swift::String *)attributesType.value.attributesType._object;
  v5 = *((_OWORD *)attributesType.value.attributesType._object + 1);
  retstr->attributesType = *(ActivityKit::ActivityAttributesType_optional *)attributesType.value.attributesType._countAndFlagsBits;
  retstr->owner.value.bundleIdentifier = v4;
  *(_OWORD *)&retstr->owner.value.canEndAllActivities = v5;
  retstr->owner.value.appIntentExtensionBundleIdentifier.value._object = v3;
}

double static ActivityPredicate.allAuthorizedForRequester.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t ActivityPredicate.attributesType.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ActivityPredicate.attributesType.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*ActivityPredicate.attributesType.modify())()
{
  return nullsub_1;
}

uint64_t ActivityPredicate.owner.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_232DDFFD4(v2, v3);
}

__n128 ActivityPredicate.owner.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  __n128 result;
  __n128 v4;
  __n128 v5;

  v4 = a1[1];
  v5 = *a1;
  v2 = a1[2].n128_u64[0];
  sub_232DDDF74(v1[1].n128_i64[0], v1[1].n128_i64[1]);
  result = v4;
  v1[1] = v5;
  v1[2] = v4;
  v1[3].n128_u64[0] = v2;
  return result;
}

uint64_t (*ActivityPredicate.owner.modify())()
{
  return nullsub_1;
}

uint64_t ActivityPredicate.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_232E6F798();
    swift_bridgeObjectRetain();
    sub_232E6F21C();
    swift_bridgeObjectRelease();
    if (v1)
    {
LABEL_3:
      sub_232E6F798();
      return ProcessDescriptor.hash(into:)();
    }
  }
  else
  {
    sub_232E6F798();
    if (v1)
      goto LABEL_3;
  }
  return sub_232E6F798();
}

uint64_t sub_232E3A298()
{
  _BYTE *v0;

  if (*v0)
    return 0x72656E776FLL;
  else
    return 0x7475626972747461;
}

uint64_t sub_232E3A2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E3B290(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E3A300()
{
  sub_232E3AB78();
  return sub_232E6F7D4();
}

uint64_t sub_232E3A328()
{
  sub_232E3AB78();
  return sub_232E6F7E0();
}

uint64_t ActivityPredicate.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_232E6F780();
  if (!v1)
  {
    sub_232E6F798();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_232E6F798();
    return sub_232E6F7B0();
  }
  sub_232E6F798();
  swift_bridgeObjectRetain();
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_232E6F798();
  ProcessDescriptor.hash(into:)();
  return sub_232E6F7B0();
}

uint64_t sub_232E3A444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_232E6F780();
  if (!v1)
  {
    sub_232E6F798();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_232E6F798();
    return sub_232E6F7B0();
  }
  sub_232E6F798();
  swift_bridgeObjectRetain();
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_232E6F798();
  ProcessDescriptor.hash(into:)();
  return sub_232E6F7B0();
}

uint64_t ActivityPredicate.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE158);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v17 = v1[3];
  v18 = v9;
  v10 = v1[4];
  v15 = v1[5];
  v16 = v10;
  v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E3AB78();
  sub_232E6F7C8();
  v20 = v8;
  v21 = v7;
  v25 = 0;
  sub_232E20C78();
  v11 = v19;
  sub_232E6F678();
  if (!v11)
  {
    v20 = v18;
    v21 = v17;
    v22 = v16;
    v23 = v15;
    v24 = v14;
    v25 = 1;
    sub_232E3ABBC();
    sub_232E6F678();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ActivityPredicate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE168);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E3AB78();
  sub_232E6F7BC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 0;
  }
  else
  {
    v25 = 0;
    sub_232E16F30();
    sub_232E6F60C();
    v10 = v20;
    v9 = v21;
    v25 = 1;
    sub_232E3AC00();
    swift_bridgeObjectRetain();
    sub_232E6F60C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v20;
    v13 = v21;
    v19 = v10;
    v14 = v22;
    v15 = v23;
    v16 = v24;
    sub_232DDFFD4(v20, v21);
    sub_232DDDF74(0, 0);
    swift_bridgeObjectRetain();
    sub_232DDFFD4(v12, v13);
    sub_232DDDF74(v12, v13);
    swift_bridgeObjectRelease();
    *a2 = v19;
    a2[1] = v9;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v14;
    a2[5] = v15;
    a2[6] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v17 = v12;
    v18 = v13;
  }
  return sub_232DDDF74(v17, v18);
}

uint64_t sub_232E3A920@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ActivityPredicate.init(from:)(a1, a2);
}

uint64_t sub_232E3A934(_QWORD *a1)
{
  return ActivityPredicate.encode(to:)(a1);
}

uint64_t sub_232E3A948()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E3ACC0();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

BOOL _s11ActivityKit0A9PredicateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BOOL8 result;

  v3 = a1[1];
  v2 = a1[2];
  v4 = a1[3];
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  if (!v3)
  {
    if (!v5)
    {
LABEL_8:
      if (v4)
      {
        if (v7)
          return v2 == v6 && v4 == v7 || (sub_232E6F6E4() & 1) != 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else if (!v7)
      {
        return 1;
      }
      sub_232DDFFD4(v6, v7);
      sub_232DDDF74(v2, v4);
      sub_232DDDF74(v6, v7);
      return 0;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v5)
  {
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  if (*a1 == *a2 && v3 == v5)
    goto LABEL_8;
  v8 = sub_232E6F6E4();
  result = 0;
  if ((v8 & 1) != 0)
    goto LABEL_8;
  return result;
}

unint64_t sub_232E3AB78()
{
  unint64_t result;

  result = qword_255FFE160;
  if (!qword_255FFE160)
  {
    result = MEMORY[0x23492A124](&unk_232E76358, &type metadata for ActivityPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE160);
  }
  return result;
}

unint64_t sub_232E3ABBC()
{
  unint64_t result;

  result = qword_2542375A8;
  if (!qword_2542375A8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ProcessDescriptor, &type metadata for ProcessDescriptor);
    atomic_store(result, (unint64_t *)&qword_2542375A8);
  }
  return result;
}

unint64_t sub_232E3AC00()
{
  unint64_t result;

  result = qword_254237D80;
  if (!qword_254237D80)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ProcessDescriptor, &type metadata for ProcessDescriptor);
    atomic_store(result, (unint64_t *)&qword_254237D80);
  }
  return result;
}

unint64_t sub_232E3AC48()
{
  unint64_t result;

  result = qword_255FFE170;
  if (!qword_255FFE170)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPredicate, &type metadata for ActivityPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFE170);
  }
  return result;
}

unint64_t sub_232E3AC8C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232E16E64();
  a1[2] = sub_232E3ACC0();
  result = sub_232E3AD04();
  a1[3] = result;
  return result;
}

unint64_t sub_232E3ACC0()
{
  unint64_t result;

  result = qword_255FFE178;
  if (!qword_255FFE178)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPredicate, &type metadata for ActivityPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFE178);
  }
  return result;
}

unint64_t sub_232E3AD04()
{
  unint64_t result;

  result = qword_255FFE180;
  if (!qword_255FFE180)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPredicate, &type metadata for ActivityPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFE180);
  }
  return result;
}

uint64_t destroy for ActivityPredicate(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ActivityPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    v6 = *(_QWORD *)(a2 + 40);
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for ActivityPredicate(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
      *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
      *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_232E07D88(a1 + 16);
      v7 = *(_QWORD *)(a2 + 48);
      v8 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 48) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
    *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
    *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *v4 = v9;
    *(_OWORD *)(a1 + 32) = v10;
  }
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ActivityPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    sub_232E07D88(a1 + 16);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    return a1;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPredicate(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityPredicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPredicate()
{
  return &type metadata for ActivityPredicate;
}

uint64_t storeEnumTagSinglePayload for ActivityPredicate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E3B138 + 4 * byte_232E76145[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E3B16C + 4 * asc_232E76140[v4]))();
}

uint64_t sub_232E3B16C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E3B174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E3B17CLL);
  return result;
}

uint64_t sub_232E3B188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E3B190);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E3B194(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E3B19C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPredicate.CodingKeys()
{
  return &type metadata for ActivityPredicate.CodingKeys;
}

unint64_t sub_232E3B1BC()
{
  unint64_t result;

  result = qword_255FFE188;
  if (!qword_255FFE188)
  {
    result = MEMORY[0x23492A124](&unk_232E76330, &type metadata for ActivityPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE188);
  }
  return result;
}

unint64_t sub_232E3B204()
{
  unint64_t result;

  result = qword_255FFE190;
  if (!qword_255FFE190)
  {
    result = MEMORY[0x23492A124](&unk_232E762A0, &type metadata for ActivityPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE190);
  }
  return result;
}

unint64_t sub_232E3B24C()
{
  unint64_t result;

  result = qword_255FFE198;
  if (!qword_255FFE198)
  {
    result = MEMORY[0x23492A124](&unk_232E762C8, &type metadata for ActivityPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE198);
  }
  return result;
}

uint64_t sub_232E3B290(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7475626972747461 && a2 == 0xEE00657079547365;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656E776FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E3B39C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB378);
  sub_232E3B3FC();
  return sub_232E6F030();
}

unint64_t sub_232E3B3FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FFB528;
  if (!qword_255FFB528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255FFB378);
    result = MEMORY[0x23492A124](MEMORY[0x24BDB9D10], v1);
    atomic_store(result, (unint64_t *)&qword_255FFB528);
  }
  return result;
}

id ActivityRemoteSubscriptionPreferencesListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ActivityRemoteSubscriptionPreferencesListener.init()()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  objc_super v5;

  v1 = objc_allocWithZone((Class)type metadata accessor for SubscriptionPreferencesObservationClient());
  v2 = v0;
  v3 = objc_msgSend(v1, sel_init);
  *(_QWORD *)&v2[OBJC_IVAR____TtC11ActivityKit45ActivityRemoteSubscriptionPreferencesListener_client] = v3;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for ActivityRemoteSubscriptionPreferencesListener();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for ActivityRemoteSubscriptionPreferencesListener()
{
  return objc_opt_self();
}

id ActivityRemoteSubscriptionPreferencesListener.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityRemoteSubscriptionPreferencesListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ActivityRemoteSubscriptionPreferencesListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityRemoteSubscriptionPreferencesListener.subscriptionPreferencesPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

unint64_t static ActivityAuthorizationError.errorDomain.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_232E3B5F8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if ((unint64_t)(result - 1) > 0xB)
    *a2 = 12;
  else
    *a2 = byte_232E765BE[result - 1];
  return result;
}

uint64_t ActivityAuthorizationError.errorCode.getter()
{
  char *v0;

  return qword_232E765D0[*v0];
}

uint64_t ActivityAuthorizationError.failureReason.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E3B66C + 4 * byte_232E76400[*v0]))(0x100000000000004BLL, 0x8000000232E7F150);
}

unint64_t sub_232E3B66C()
{
  return 0xD00000000000003ALL;
}

unint64_t sub_232E3B6DC()
{
  return 0xD000000000000018;
}

unint64_t sub_232E3B6F4()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_232E3B70C()
{
  return 0xD00000000000002BLL;
}

unint64_t sub_232E3B724()
{
  return 0xD000000000000037;
}

unint64_t sub_232E3B73C()
{
  return 0xD000000000000029;
}

void sub_232E3B754()
{
  JUMPOUT(0x232E3B768);
}

unint64_t ActivityAuthorizationError.recoverySuggestion.getter()
{
  _BYTE *v0;
  unint64_t result;

  result = 0;
  switch(*v0)
  {
    case 0:
      result = 0xD00000000000002ELL;
      break;
    case 3:
    case 4:
      result = 0xD000000000000020;
      break;
    case 5:
      result = 0xD00000000000004BLL;
      break;
    case 7:
      result = 0xD00000000000002CLL;
      break;
    case 0xA:
      result = 0xD00000000000002BLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static ActivityAuthorizationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ActivityAuthorizationError.hash(into:)()
{
  return sub_232E6F78C();
}

uint64_t ActivityAuthorizationError.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

unint64_t sub_232E3B8B4()
{
  unint64_t result;

  result = qword_255FFE1A8;
  if (!qword_255FFE1A8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationError, &type metadata for ActivityAuthorizationError);
    atomic_store(result, (unint64_t *)&qword_255FFE1A8);
  }
  return result;
}

unint64_t sub_232E3B8FC()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_232E3B918()
{
  char *v0;

  return qword_232E765D0[*v0];
}

uint64_t sub_232E3B934()
{
  sub_232E3BAE0();
  return sub_232E6F72C();
}

uint64_t sub_232E3B95C()
{
  sub_232E3BAE0();
  return sub_232E6F720();
}

uint64_t getEnumTagSinglePayload for ActivityAuthorizationError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityAuthorizationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_232E3BA60 + 4 * byte_232E7641C[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_232E3BA94 + 4 * byte_232E76417[v4]))();
}

uint64_t sub_232E3BA94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E3BA9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E3BAA4);
  return result;
}

uint64_t sub_232E3BAB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E3BAB8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_232E3BABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E3BAC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityAuthorizationError()
{
  return &type metadata for ActivityAuthorizationError;
}

unint64_t sub_232E3BAE0()
{
  unint64_t result;

  result = qword_255FFE1B0;
  if (!qword_255FFE1B0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityAuthorizationError, &type metadata for ActivityAuthorizationError);
    atomic_store(result, (unint64_t *)&qword_255FFE1B0);
  }
  return result;
}

uint64_t sub_232E3BB24()
{
  uint64_t v0;

  v0 = sub_232E6EED4();
  __swift_allocate_value_buffer(v0, qword_255FFC330);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC330);
  return sub_232E6EEC8();
}

uint64_t static ActivityRemoteSubscriptionPreferencesObservationServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255FFBFD0 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255FFC330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static ActivityRemoteSubscriptionPreferencesObservationServiceDefinition.serviceName.getter()
{
  return 0xD000000000000041;
}

uint64_t sub_232E3BBF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255FFBFD0 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255FFC330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_232E3BC68()
{
  return 0xD000000000000041;
}

ValueMetadata *type metadata accessor for ActivityRemoteSubscriptionPreferencesObservationServiceDefinition()
{
  return &type metadata for ActivityRemoteSubscriptionPreferencesObservationServiceDefinition;
}

double ActivityContentSource.target.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  if (*(_BYTE *)(v1 + 56) && *(_BYTE *)(v1 + 56) == 1)
  {
    v3 = *(_QWORD *)(v1 + 24);
    v2 = *(_QWORD *)(v1 + 32);
    v4 = *(_QWORD *)(v1 + 8);
    v5 = *(_QWORD *)(v1 + 16) & 0x1010101;
    *a1 = *(_QWORD *)v1;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v3;
    a1[4] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    a1[4] = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

void static PushActivityContentSource.pushRequest.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t static ActivityContentSource.pushRequest(using:target:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  *(_QWORD *)a4 = *a1;
  *(_QWORD *)(a4 + 8) = v6;
  *(_QWORD *)(a4 + 16) = a2;
  *(_QWORD *)(a4 + 24) = a3;
  *(_BYTE *)(a4 + 32) = 0;
  sub_232DF99C8(v7, v6);
  return sub_232DF99C8(a2, a3);
}

uint64_t static ActivityContentSource.processRequest(using:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 1;
  return sub_232DF99C8(a1, a2);
}

uint64_t sub_232E3BD60()
{
  _BYTE *v0;

  if (*v0)
    return 0x737365636F7270;
  else
    return 1752397168;
}

uint64_t sub_232E3BD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E4215C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E3BDB8()
{
  sub_232E3FC10();
  return sub_232E6F7D4();
}

uint64_t sub_232E3BDE0()
{
  sub_232E3FC10();
  return sub_232E6F7E0();
}

uint64_t sub_232E3BE08()
{
  return 0x746567726174;
}

uint64_t sub_232E3BE20()
{
  sub_232E3FC54();
  return sub_232E6F7D4();
}

uint64_t sub_232E3BE48()
{
  sub_232E3FC54();
  return sub_232E6F7E0();
}

uint64_t sub_232E3BE70()
{
  _BYTE *v0;

  if (*v0)
    return 0x746567726174;
  else
    return 0x74736575716572;
}

uint64_t sub_232E3BEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E4223C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E3BECC()
{
  sub_232E3FCDC();
  return sub_232E6F7D4();
}

uint64_t sub_232E3BEF4()
{
  sub_232E3FCDC();
  return sub_232E6F7E0();
}

uint64_t ActivityContentSource.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542374A0);
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237498);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237490);
  v9 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[1];
  v26 = *v1;
  v27 = v12;
  v13 = v1[2];
  v20 = v1[3];
  v21 = v13;
  v14 = *((_BYTE *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E3FC10();
  sub_232E6F7C8();
  if ((v14 & 1) != 0)
  {
    LOBYTE(v30) = 1;
    sub_232E3FC54();
    v15 = v29;
    sub_232E6F660();
    v30 = v26;
    v31 = v27;
    sub_232E3FC98();
    v16 = v23;
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v16);
  }
  else
  {
    LOBYTE(v30) = 0;
    sub_232E3FCDC();
    v15 = v29;
    sub_232E6F660();
    v30 = v26;
    v31 = v27;
    v32 = 0;
    sub_232E3FD20();
    v17 = v25;
    v18 = v28;
    sub_232E6F6A8();
    if (!v18)
    {
      v30 = v21;
      v31 = v20;
      v32 = 1;
      sub_232E3FC98();
      sub_232E6F6A8();
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v15);
}

uint64_t ActivityContentSource.Request.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFBFE8);
  v4 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  v36 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC550);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC548);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_232E3FC10();
  v15 = v39;
  sub_232E6F7BC();
  if (v15)
    goto LABEL_7;
  v16 = v37;
  v39 = v11;
  v17 = sub_232E6F648();
  v18 = v17;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v25 = sub_232E6F51C();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v27 = &type metadata for ActivityContentSource.Request;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
LABEL_7:
    v24 = (uint64_t)v38;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  if ((*(_BYTE *)(v17 + 32) & 1) != 0)
  {
    v19 = *(_BYTE *)(v17 + 32);
    LOBYTE(v41) = 1;
    sub_232E3FC54();
    sub_232E6F5DC();
    sub_232E3FD64();
    v20 = v35;
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
    v22 = v41;
    v21 = v42;
    v23 = 0uLL;
    v24 = (uint64_t)v38;
  }
  else
  {
    v28 = *(unsigned __int8 *)(v17 + 32);
    LOBYTE(v41) = 0;
    sub_232E3FCDC();
    sub_232E6F5DC();
    LODWORD(v37) = v28;
    LOBYTE(v40) = 0;
    sub_232E3FDA8();
    sub_232E6F63C();
    v36 = v18;
    v30 = v6;
    v31 = v9;
    v22 = v41;
    v21 = v42;
    v43 = 1;
    sub_232E3FD64();
    sub_232E6F63C();
    v32 = v39;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
    v23 = v40;
    v24 = (uint64_t)v38;
    v19 = (char)v37;
  }
  v33 = v34;
  *v34 = v22;
  v33[1] = v21;
  *((_OWORD *)v33 + 1) = v23;
  *((_BYTE *)v33 + 32) = v19;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_232E3C614@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActivityContentSource.Request.init(from:)(a1, a2);
}

uint64_t sub_232E3C628(_QWORD *a1)
{
  return ActivityContentSource.Request.encode(to:)(a1);
}

BOOL ActivityContentSource.isPushSource.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 56) == 0;
}

BOOL ActivityContentSource.isProcessSource.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 56) == 1;
}

BOOL ActivityContentSource.isSyncSource.getter()
{
  int8x16_t *v0;
  int8x16_t v1;
  uint64_t v2;

  v1 = vorrq_s8(*v0, v0[1]);
  v2 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v0[2].i64[0] | v0[2].i64[1] | v0[3].i64[0];
  return v0[3].i8[8] == 2 && v2 == 0;
}

uint64_t ActivityContentSource.castToPushSource.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  if (*(_BYTE *)(v1 + 56))
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v1 + 40);
    v9 = *(_QWORD *)(v1 + 48);
    v7 = *(unsigned __int8 *)(v1 + 32);
    v5 = *(_QWORD *)(v1 + 16);
    v6 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)v1;
    v4 = *(_QWORD *)(v1 + 8);
    sub_232E134AC(*(_QWORD *)v1, v4, v5, v6, *(_BYTE *)(v1 + 32));
    result = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

uint64_t ActivityContentSource.canEndAllActivities.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 56) == 1)
    return *(_BYTE *)(v0 + 16) & 1;
  else
    return 0;
}

uint64_t ActivityContentSource.canContributeToAllActivities.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 56) == 1)
    return *(_BYTE *)(v0 + 17) & 1;
  else
    return 0;
}

Swift::Bool __swiftcall ActivityContentSource.contained(in:)(Swift::OpaquePointer in)
{
  uint64_t v1;
  _BYTE v4[64];

  sub_232E13418(v1, (uint64_t)v4);
  return sub_232E0EA28((uint64_t)v4, (uint64_t)in._rawValue) & 1;
}

uint64_t sub_232E3C7C8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x737365636F7270;
  if (*v0 != 1)
    v1 = 1668184435;
  if (*v0)
    return v1;
  else
    return 1752397168;
}

uint64_t sub_232E3C814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E42324(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E3C838()
{
  sub_232E401A8();
  return sub_232E6F7D4();
}

uint64_t sub_232E3C860()
{
  sub_232E401A8();
  return sub_232E6F7E0();
}

uint64_t sub_232E3C888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746567726174 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E3C914()
{
  sub_232E40230();
  return sub_232E6F7D4();
}

uint64_t sub_232E3C93C()
{
  sub_232E40230();
  return sub_232E6F7E0();
}

uint64_t sub_232E3C964()
{
  sub_232E40274();
  return sub_232E6F7D4();
}

uint64_t sub_232E3C98C()
{
  sub_232E40274();
  return sub_232E6F7E0();
}

uint64_t sub_232E3C9B4()
{
  sub_232E401EC();
  return sub_232E6F7D4();
}

uint64_t sub_232E3C9DC()
{
  sub_232E401EC();
  return sub_232E6F7E0();
}

uint64_t ActivityContentSource.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542375C8);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542375D0);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542375C0);
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542374D0);
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[1];
  v15 = v1[2];
  v34 = *v1;
  v35 = v14;
  v16 = v1[4];
  v36 = v1[3];
  v37 = v16;
  v26 = v1[5];
  v25 = v1[6];
  v17 = *((unsigned __int8 *)v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E401A8();
  sub_232E6F7C8();
  if (v17)
  {
    if (v17 == 1)
    {
      LOBYTE(v40) = 1;
      sub_232E40230();
      v18 = v39;
      sub_232E6F660();
      v40 = v34;
      v41 = v35;
      LOWORD(v42) = v15 & 0x101;
      BYTE2(v42) = BYTE2(v15) & 1;
      BYTE3(v42) = BYTE3(v15) & 1;
      v43 = v36;
      v44 = v37;
      sub_232E3ABBC();
      v19 = v33;
      sub_232E6F6A8();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v19);
    }
    else
    {
      LOBYTE(v40) = 2;
      sub_232E401EC();
      v23 = v29;
      v18 = v39;
      sub_232E6F660();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v31);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v13, v18);
  }
  else
  {
    LOBYTE(v40) = 0;
    sub_232E40274();
    v21 = v39;
    sub_232E6F660();
    v40 = v34;
    v41 = v35;
    v42 = v15;
    v43 = v36;
    LOBYTE(v44) = v37;
    v45 = v26;
    v46 = v25;
    sub_232E402B8();
    v22 = v28;
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v13, v21);
  }
}

uint64_t ActivityContentSource.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237DA0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237DA8);
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237D98);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237D90);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_232E401A8();
  v16 = v58;
  sub_232E6F7BC();
  if (!v16)
  {
    v42 = v8;
    v17 = v7;
    v18 = v48;
    v19 = v49;
    v58 = v12;
    v20 = sub_232E6F648();
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      if (*(_BYTE *)(v20 + 32))
      {
        if (*(_BYTE *)(v20 + 32) != 1)
        {
          v27 = *(_BYTE *)(v20 + 32);
          LOBYTE(v51) = 2;
          sub_232E401EC();
          sub_232E6F5DC();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v46);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v11);
          v29 = 0;
          v30 = 0;
          v31 = 0;
          v32 = 0;
          v33 = 0;
          v34 = 0;
          v35 = 0;
          v36 = (uint64_t)v50;
          v26 = v47;
LABEL_19:
          *(_QWORD *)v26 = v29;
          *(_QWORD *)(v26 + 8) = v30;
          *(_QWORD *)(v26 + 16) = v31;
          *(_QWORD *)(v26 + 24) = v32;
          *(_QWORD *)(v26 + 32) = v33;
          *(_QWORD *)(v26 + 40) = v34;
          *(_QWORD *)(v26 + 48) = v35;
          *(_BYTE *)(v26 + 56) = v27;
          return __swift_destroy_boxed_opaque_existential_1(v36);
        }
        LODWORD(v49) = 1;
        LOBYTE(v51) = 1;
        sub_232E40230();
        sub_232E6F5DC();
        sub_232E3AC00();
        v21 = v44;
        sub_232E6F63C();
        v22 = v58;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v21);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v11);
        v34 = 0;
        v35 = 0;
        v29 = v51;
        v30 = v52;
        v37 = 256;
        if (!BYTE1(v53))
          v37 = 0;
        v38 = v37 | v53;
        v39 = 0x10000;
        if (!BYTE2(v53))
          v39 = 0;
        v40 = 0x1000000;
        if (!BYTE3(v53))
          v40 = 0;
        v41 = v39 | v40;
        v32 = v54;
        v33 = v55;
        v31 = v38 | v41;
        v36 = (uint64_t)v50;
        v26 = v47;
      }
      else
      {
        LODWORD(v49) = *(unsigned __int8 *)(v20 + 32);
        v48 = (char *)v20;
        LOBYTE(v51) = 0;
        sub_232E40274();
        sub_232E6F5DC();
        v26 = v47;
        sub_232E402FC();
        sub_232E6F63C();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v17);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v11);
        v29 = v51;
        v30 = v52;
        v31 = v53;
        v32 = v54;
        v33 = v55;
        v34 = v56;
        v35 = v57;
        v36 = (uint64_t)v50;
      }
      v27 = (char)v49;
      goto LABEL_19;
    }
    v23 = sub_232E6F51C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v25 = &type metadata for ActivityContentSource;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v11);
  }
  v36 = (uint64_t)v50;
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

uint64_t sub_232E3D2D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityContentSource.init(from:)(a1, a2);
}

uint64_t sub_232E3D2E4(_QWORD *a1)
{
  return ActivityContentSource.encode(to:)(a1);
}

double static PushActivityContentSource.externalRequest.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_232E74480;
  return result;
}

uint64_t static PushActivityContentSource.broadcastPushRequest(channel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_232E3D318()
{
  return 0x6C656E6E616863;
}

uint64_t sub_232E3D330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E3D3C4()
{
  sub_232E4040C();
  return sub_232E6F7D4();
}

uint64_t sub_232E3D3EC()
{
  sub_232E4040C();
  return sub_232E6F7E0();
}

uint64_t sub_232E3D414()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1752397168;
  if (*v0 != 1)
    v1 = 0x6C616E7265747865;
  if (*v0)
    return v1;
  else
    return 0x73616364616F7262;
}

uint64_t sub_232E3D474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E42458(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E3D498()
{
  sub_232E40340();
  return sub_232E6F7D4();
}

uint64_t sub_232E3D4C0()
{
  sub_232E40340();
  return sub_232E6F7E0();
}

uint64_t sub_232E3D4E8()
{
  sub_232E40384();
  return sub_232E6F7D4();
}

uint64_t sub_232E3D510()
{
  sub_232E40384();
  return sub_232E6F7E0();
}

uint64_t sub_232E3D538()
{
  sub_232E403C8();
  return sub_232E6F7D4();
}

uint64_t sub_232E3D560()
{
  sub_232E403C8();
  return sub_232E6F7E0();
}

uint64_t PushActivityContentSource.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE1E8);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE1F0);
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE1F8);
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE200);
  v25 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v2;
  v15 = v2[1];
  v18[1] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E40340();
  sub_232E6F7C8();
  if (!v15)
  {
    v27 = 1;
    sub_232E403C8();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v11);
  }
  if (v15 == 1)
  {
    v28 = 2;
    sub_232E40384();
    v16 = v22;
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v11);
  }
  v26 = 0;
  sub_232E4040C();
  sub_232E6F660();
  sub_232E6F684();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v11);
}

uint64_t PushActivityContentSource.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;

  v35 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE228);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE230);
  v31 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE238);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE240);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_232E40340();
  v15 = v39;
  sub_232E6F7BC();
  if (!v15)
  {
    v30 = v7;
    v17 = v36;
    v16 = v37;
    v39 = v11;
    v18 = sub_232E6F648();
    if (*(_QWORD *)(v18 + 16) == 1)
    {
      if (*(_BYTE *)(v18 + 32))
      {
        if (*(_BYTE *)(v18 + 32) == 1)
        {
          v41 = 1;
          sub_232E403C8();
          sub_232E6F5DC();
          (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
          v19 = 0;
          v20 = 0;
        }
        else
        {
          v42 = 2;
          sub_232E40384();
          sub_232E6F5DC();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
          v19 = 0;
          v20 = 1;
        }
      }
      else
      {
        v40 = 0;
        sub_232E4040C();
        sub_232E6F5DC();
        v24 = v6;
        v25 = sub_232E6F618();
        v26 = v39;
        v19 = v25;
        v20 = v28;
        (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
      }
      v29 = v35;
      *v35 = v19;
      v29[1] = v20;
    }
    else
    {
      v21 = sub_232E6F51C();
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
      *v23 = &type metadata for PushActivityContentSource.Request;
      sub_232E6F5E8();
      sub_232E6F510();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_232E3DC84@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PushActivityContentSource.Request.init(from:)(a1, a2);
}

uint64_t sub_232E3DC98(_QWORD *a1)
{
  return PushActivityContentSource.Request.encode(to:)(a1);
}

uint64_t sub_232E3DCB4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C656E6E616863;
  else
    return 0x6D6E6F7269766E65;
}

uint64_t sub_232E3DCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E425C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E3DD1C()
{
  sub_232E4051C();
  return sub_232E6F7D4();
}

uint64_t sub_232E3DD44()
{
  sub_232E4051C();
  return sub_232E6F7E0();
}

uint64_t sub_232E3DD6C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E656B6F74;
  if (*v0 != 1)
    v1 = 0x6C616E7265747865;
  if (*v0)
    return v1;
  else
    return 0x6C656E6E616863;
}

uint64_t sub_232E3DDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E426C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E3DDE8()
{
  sub_232E40450();
  return sub_232E6F7D4();
}

uint64_t sub_232E3DE10()
{
  sub_232E40450();
  return sub_232E6F7E0();
}

uint64_t sub_232E3DE38()
{
  sub_232E40494();
  return sub_232E6F7D4();
}

uint64_t sub_232E3DE60()
{
  sub_232E40494();
  return sub_232E6F7E0();
}

uint64_t sub_232E3DE88()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_232E3DEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E3DF54()
{
  sub_232E404D8();
  return sub_232E6F7D4();
}

uint64_t sub_232E3DF7C()
{
  sub_232E404D8();
  return sub_232E6F7E0();
}

uint64_t PushActivityContentSource.PushType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE248);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE250);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE258);
  v7 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v27 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE260);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v34 = v1[1];
  v35 = v12;
  v13 = v1[3];
  v14 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E40450();
  sub_232E6F7C8();
  if (v14)
  {
    if (v14 == 1)
    {
      v42 = 1;
      sub_232E404D8();
      v15 = v26;
      v16 = v37;
      sub_232E6F660();
      v17 = v30;
      sub_232E6F684();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v17);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v11, v16);
    }
    else
    {
      v43 = 2;
      sub_232E40494();
      v23 = v28;
      v24 = v37;
      sub_232E6F660();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v32);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v11, v24);
    }
  }
  else
  {
    v32 = v13;
    v41 = 0;
    sub_232E4051C();
    v19 = v27;
    v20 = v37;
    sub_232E6F660();
    v40 = 0;
    v21 = v33;
    v22 = v38;
    sub_232E6F684();
    if (!v22)
    {
      v39 = 1;
      sub_232E6F684();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v11, v20);
  }
}

uint64_t PushActivityContentSource.PushType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;

  v48 = a2;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE288);
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE290);
  v5 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v46 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE298);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE2A0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_232E40450();
  v16 = v52;
  sub_232E6F7BC();
  if (v16)
    goto LABEL_7;
  v17 = v50;
  v43 = v12;
  v52 = v14;
  v18 = sub_232E6F648();
  v19 = (char *)v18;
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v24 = sub_232E6F51C();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v26 = &type metadata for PushActivityContentSource.PushType;
    v27 = v52;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v11);
LABEL_7:
    v28 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  v20 = *(unsigned __int8 *)(v18 + 32);
  if (*(_BYTE *)(v18 + 32))
  {
    if (v20 == 1)
    {
      v56 = 1;
      sub_232E404D8();
      v21 = v49;
      sub_232E6F5DC();
      v22 = v45;
      v23 = sub_232E6F618();
      v34 = v33;
      v35 = v23;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v52, v11);
      v36 = (char *)v35;
    }
    else
    {
      v57 = 2;
      sub_232E40494();
      v32 = v52;
      sub_232E6F5DC();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v11);
      v36 = 0;
      v34 = 0;
    }
    v39 = 0;
    v41 = 0;
    v28 = (uint64_t)v51;
    v42 = v48;
  }
  else
  {
    v55 = 0;
    sub_232E4051C();
    sub_232E6F5DC();
    v54 = 0;
    v30 = sub_232E6F618();
    v31 = v10;
    v34 = v37;
    v49 = (char *)v30;
    v50 = v19;
    v53 = 1;
    v38 = v7;
    v39 = sub_232E6F618();
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v38);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v52, v11);
    v28 = (uint64_t)v51;
    v42 = v48;
    v36 = v49;
  }
  *(_QWORD *)v42 = v36;
  *(_QWORD *)(v42 + 8) = v34;
  *(_QWORD *)(v42 + 16) = v39;
  *(_QWORD *)(v42 + 24) = v41;
  *(_BYTE *)(v42 + 32) = v20;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_232E3E7B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PushActivityContentSource.PushType.init(from:)(a1, a2);
}

uint64_t sub_232E3E7CC(_QWORD *a1)
{
  return PushActivityContentSource.PushType.encode(to:)(a1);
}

uint64_t PushActivityContentSource.pushType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_232E134AC(v2, v3, v4, v5, v6);
}

__n128 PushActivityContentSource.pushType.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  sub_232E135E0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  result = v6;
  *(__n128 *)v1 = v6;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  return result;
}

uint64_t (*PushActivityContentSource.pushType.modify())()
{
  return nullsub_1;
}

uint64_t PushActivityContentSource.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushActivityContentSource.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*PushActivityContentSource.topic.modify())()
{
  return nullsub_1;
}

BOOL PushActivityContentSource.isBroadcastPush.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 32) == 0;
}

__n128 PushActivityContentSource.init(topic:pushType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  __n128 result;
  __int128 v6;

  v4 = *(_BYTE *)(a3 + 32);
  result = *(__n128 *)a3;
  v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 16) = v6;
  *(_BYTE *)(a4 + 32) = v4;
  *(_QWORD *)(a4 + 40) = a1;
  *(_QWORD *)(a4 + 48) = a2;
  return result;
}

uint64_t sub_232E3E900()
{
  _BYTE *v0;

  if (*v0)
    return 0x6369706F74;
  else
    return 0x6570795468737570;
}

uint64_t sub_232E3E938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E42814(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E3E95C()
{
  sub_232E40560();
  return sub_232E6F7D4();
}

uint64_t sub_232E3E984()
{
  sub_232E40560();
  return sub_232E6F7E0();
}

uint64_t PushActivityContentSource.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE2A8);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v8 = *((_BYTE *)v1 + 32);
  v9 = *((_QWORD *)v1 + 5);
  v12[0] = *((_QWORD *)v1 + 6);
  v12[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E40560();
  sub_232E6F7C8();
  v16 = v13;
  v17 = v7;
  v18 = v6;
  v19 = v8;
  v20 = 0;
  sub_232E405A4();
  v10 = v14;
  sub_232E6F6A8();
  if (!v10)
  {
    LOBYTE(v16) = 1;
    sub_232E6F684();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t PushActivityContentSource.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  int v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE2C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E40560();
  sub_232E6F7BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  sub_232E405E8();
  sub_232E6F63C();
  v9 = v22;
  v10 = v23;
  LOBYTE(v22) = 1;
  v20 = v25;
  v21 = v24;
  v27 = v26;
  sub_232E134AC(v9, v23, v24, v25, v26);
  v11 = sub_232E6F618();
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19 = v11;
  v14(v8, v5);
  v16 = v20;
  v15 = v21;
  v17 = v27;
  sub_232E134AC(v9, v10, v21, v20, v27);
  swift_bridgeObjectRetain();
  sub_232E135E0(v9, v10, v15, v16, v17);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v15;
  *(_QWORD *)(a2 + 24) = v16;
  *(_BYTE *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_232E135E0(v9, v10, v15, v16, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E3ED58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PushActivityContentSource.init(from:)(a1, a2);
}

uint64_t sub_232E3ED6C(_QWORD *a1)
{
  return PushActivityContentSource.encode(to:)(a1);
}

uint64_t static ActivityContentSource.broadcastPush(environmentName:topic:channel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a5;
  *(_QWORD *)(a7 + 24) = a6;
  *(_QWORD *)(a7 + 32) = 0;
  *(_QWORD *)(a7 + 40) = a3;
  *(_QWORD *)(a7 + 48) = a4;
  *(_BYTE *)(a7 + 56) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ActivityContentSource.push(environmentName:topic:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0;
  *(_QWORD *)(a5 + 32) = 1;
  *(_QWORD *)(a5 + 40) = a3;
  *(_QWORD *)(a5 + 48) = a4;
  *(_BYTE *)(a5 + 56) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ActivityContentSource.external(topic:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_QWORD *)(a3 + 32) = 2;
  *(_QWORD *)(a3 + 40) = a1;
  *(_QWORD *)(a3 + 48) = a2;
  *(_BYTE *)(a3 + 56) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t _s11ActivityKit04PushA13ContentSourceV0C4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v13;
  BOOL v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v8 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(unsigned __int8 *)(a2 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    if (v6 == 1)
    {
      if (v11 == 1)
      {
        if (v3 == v8 && v2 == v7)
          v13 = 1;
        else
          v13 = sub_232E6F6E4();
        sub_232E134AC(v8, v7, v10, v9, 1);
        sub_232E134AC(v3, v2, v5, v4, 1);
        sub_232E135E0(v3, v2, v5, v4, 1);
        sub_232E135E0(v8, v7, v10, v9, 1);
        return v13 & 1;
      }
    }
    else if (v11 == 2 && (v7 | v8 | v10 | v9) == 0)
    {
      sub_232E135E0(*(_QWORD *)a1, v2, v5, v4, 2);
      sub_232E135E0(0, 0, 0, 0, 2);
      v13 = 1;
      return v13 & 1;
    }
    goto LABEL_24;
  }
  if (*(_BYTE *)(a2 + 32))
  {
LABEL_24:
    sub_232E134AC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v10, v9, v11);
    sub_232E134AC(v3, v2, v5, v4, v6);
    sub_232E135E0(v3, v2, v5, v4, v6);
    v17 = v8;
    v18 = v7;
    v19 = v10;
    v20 = v9;
    v21 = v11;
LABEL_25:
    sub_232E135E0(v17, v18, v19, v20, v21);
    v13 = 0;
    return v13 & 1;
  }
  v14 = v3 == v8 && v2 == v7;
  if (!v14 && (sub_232E6F6E4() & 1) == 0)
  {
    sub_232E134AC(v8, v7, v10, v9, 0);
    sub_232E134AC(v3, v2, v5, v4, 0);
    sub_232E135E0(v3, v2, v5, v4, 0);
    v17 = v8;
    v18 = v7;
    v19 = v10;
    v20 = v9;
    v21 = 0;
    goto LABEL_25;
  }
  if (v5 == v10 && v4 == v9)
    v13 = 1;
  else
    v13 = sub_232E6F6E4();
  sub_232E134AC(v8, v7, v10, v9, 0);
  sub_232E134AC(v3, v2, v5, v4, 0);
  sub_232E135E0(v3, v2, v5, v4, 0);
  sub_232E135E0(v8, v7, v10, v9, 0);
  return v13 & 1;
}

uint64_t _s11ActivityKit04PushA13ContentSourceV7RequestO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      v3 = 0;
      v6 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2 == v4 && v3 == v5)
        v6 = 1;
      else
        v6 = sub_232E6F6E4();
      goto LABEL_9;
    }
LABEL_8:
    v6 = 0;
LABEL_9:
    sub_232DF99C8(v4, v5);
    sub_232DF99C8(v2, v3);
    goto LABEL_10;
  }
  if (v5 != 1)
    goto LABEL_8;
  v3 = 1;
  v6 = 1;
LABEL_10:
  sub_232E3FDEC(v2, v3);
  sub_232E3FDEC(v4, v5);
  return v6 & 1;
}

uint64_t _s11ActivityKit04PushA13ContentSourceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[2];
  char v12;
  _OWORD v13[2];
  char v14;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v8;
  v14 = v2;
  v9 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v9;
  v12 = v5;
  if ((_s11ActivityKit04PushA13ContentSourceV0C4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v11) & 1) == 0)
    return 0;
  if (v3 == v6 && v4 == v7)
    return 1;
  return sub_232E6F6E4();
}

BOOL _s11ActivityKit0A13ContentSourceO7RequestO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  if ((v6 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
      goto LABEL_8;
    if (v3)
    {
      if (v3 == 1)
      {
        if (v8 == 1)
        {
          sub_232E40900(*(_QWORD *)a2, 1, v9, v10, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
          sub_232E40900(v2, 1, v4, v5, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
          sub_232E3FDEC(v2, 1uLL);
          v18 = v7;
          v19 = 1;
LABEL_32:
          sub_232E3FDEC(v18, v19);
          goto LABEL_33;
        }
      }
      else if (v8 >= 2)
      {
        if (v2 == v7 && v3 == v8)
        {
          sub_232E40900(*(_QWORD *)a1, v3, v9, v10, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
          sub_232E40900(v2, v3, v4, v5, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
          sub_232DF99C8(v2, v3);
          sub_232DF99C8(v2, v3);
          sub_232E3FDEC(v2, v3);
          v18 = v2;
          v19 = v3;
          goto LABEL_32;
        }
        v27 = sub_232E6F6E4();
        sub_232E40900(v7, v8, v9, v10, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
        sub_232E40900(v2, v3, v4, v5, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
        sub_232DF99C8(v7, v8);
        sub_232DF99C8(v2, v3);
        sub_232E3FDEC(v2, v3);
        sub_232E3FDEC(v7, v8);
        if ((v27 & 1) != 0)
        {
LABEL_33:
          if (v5)
          {
            if (v5 == 1)
            {
              sub_232E40900(v2, v3, v4, 1, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
              if (v10 == 1)
              {
                v12 = 1;
                sub_232E40900(v7, v8, v9, 1, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
                return v12;
              }
              goto LABEL_41;
            }
            if (v10 < 2)
            {
              sub_232E40900(v2, v3, v4, v5, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
              goto LABEL_41;
            }
            if (v4 != v9 || v5 != v10)
            {
              v25 = sub_232E6F6E4();
              sub_232E40900(v2, v3, v4, v5, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
              sub_232E40900(v7, v8, v9, v10, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
              return (v25 & 1) != 0;
            }
            sub_232E40900(v2, v3, v4, v5, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
            v21 = v7;
            v22 = v8;
            v23 = v4;
            v24 = v5;
          }
          else
          {
            sub_232E40900(v2, v3, v4, 0, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
            if (v10)
            {
LABEL_41:
              v13 = v7;
              v14 = v8;
              v15 = v9;
              v16 = v10;
              v17 = 0;
              goto LABEL_26;
            }
            v21 = v7;
            v22 = v8;
            v23 = v9;
            v24 = 0;
          }
          sub_232E40900(v21, v22, v23, v24, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
          return 1;
        }
LABEL_23:
        sub_232E40900(v2, v3, v4, v5, 0, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
        v13 = v7;
        v14 = v8;
        v15 = v9;
        v16 = v10;
        v17 = 0;
        goto LABEL_26;
      }
    }
    else if (!v8)
    {
      sub_232E40900(*(_QWORD *)a2, 0, v9, v10, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
      sub_232E40900(v2, 0, v4, v5, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
      sub_232E3FDEC(v2, 0);
      v18 = v7;
      v19 = 0;
      goto LABEL_32;
    }
    sub_232E40900(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v9, v10, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
    sub_232E40900(v2, v3, v4, v5, 0, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
    sub_232DF99C8(v7, v8);
    sub_232DF99C8(v2, v3);
    sub_232E3FDEC(v2, v3);
    sub_232E3FDEC(v7, v8);
    goto LABEL_23;
  }
  if (!*(_BYTE *)(a2 + 32))
  {
LABEL_8:
    sub_232E40900(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v9, v10, v11, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
    sub_232E40900(v2, v3, v4, v5, v6, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
    sub_232E40900(v2, v3, v4, v5, v6, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
    v13 = v7;
    v14 = v8;
    v15 = v9;
    v16 = v10;
    v17 = v11;
LABEL_26:
    sub_232E40900(v13, v14, v15, v16, v17, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
    return 0;
  }
  if (!v3)
  {
    if (!v8)
    {
      v12 = 1;
      sub_232E40900(*(_QWORD *)a2, 0, v9, v10, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
      sub_232E40900(v2, 0, v4, v5, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
      sub_232E40900(v2, 0, v4, v5, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
      sub_232E40900(v7, 0, v9, v10, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
      return v12;
    }
    v3 = 0;
    goto LABEL_25;
  }
  if (v3 != 1)
  {
    if (v8 >= 2)
    {
      if (v2 == v7 && v3 == v8)
      {
        v12 = 1;
        sub_232E40900(*(_QWORD *)a1, v3, v9, v10, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
        sub_232E40900(v2, v3, v4, v5, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
        sub_232E40900(v2, v3, v4, v5, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
        sub_232E40900(v2, v3, v9, v10, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
        return v12;
      }
      v26 = sub_232E6F6E4();
      v12 = 1;
      sub_232E40900(v7, v8, v9, v10, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
      sub_232E40900(v2, v3, v4, v5, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
      sub_232E40900(v2, v3, v4, v5, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
      sub_232E40900(v7, v8, v9, v10, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
      if ((v26 & 1) != 0)
        return v12;
      return 0;
    }
    goto LABEL_25;
  }
  if (v8 != 1)
  {
    v3 = 1;
LABEL_25:
    sub_232E40900(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v9, v10, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
    sub_232E40900(v2, v3, v4, v5, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
    sub_232E40900(v2, v3, v4, v5, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
    v13 = v7;
    v14 = v8;
    v15 = v9;
    v16 = v10;
    v17 = 1;
    goto LABEL_26;
  }
  v12 = 1;
  sub_232E40900(*(_QWORD *)a2, 1, v9, v10, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
  sub_232E40900(v2, 1, v4, v5, 1, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
  sub_232E40900(v2, 1, v4, v5, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
  sub_232E40900(v7, 1, v9, v10, 1, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
  return v12;
}

unint64_t sub_232E3FC10()
{
  unint64_t result;

  result = qword_254237430;
  if (!qword_254237430)
  {
    result = MEMORY[0x23492A124](&unk_232E77934, &type metadata for ActivityContentSource.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237430);
  }
  return result;
}

unint64_t sub_232E3FC54()
{
  unint64_t result;

  result = qword_254237458;
  if (!qword_254237458)
  {
    result = MEMORY[0x23492A124](&unk_232E778E4, &type metadata for ActivityContentSource.Request.ProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237458);
  }
  return result;
}

unint64_t sub_232E3FC98()
{
  unint64_t result;

  result = qword_2542376F8;
  if (!qword_2542376F8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ProcessDescriptor.Request, &type metadata for ProcessDescriptor.Request);
    atomic_store(result, (unint64_t *)&qword_2542376F8);
  }
  return result;
}

unint64_t sub_232E3FCDC()
{
  unint64_t result;

  result = qword_255FFE1B8;
  if (!qword_255FFE1B8)
  {
    result = MEMORY[0x23492A124](&unk_232E77894, &type metadata for ActivityContentSource.Request.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE1B8);
  }
  return result;
}

unint64_t sub_232E3FD20()
{
  unint64_t result;

  result = qword_255FFE1C0;
  if (!qword_255FFE1C0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for PushActivityContentSource.Request, &type metadata for PushActivityContentSource.Request);
    atomic_store(result, (unint64_t *)&qword_255FFE1C0);
  }
  return result;
}

unint64_t sub_232E3FD64()
{
  unint64_t result;

  result = qword_255FFC508;
  if (!qword_255FFC508)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ProcessDescriptor.Request, &type metadata for ProcessDescriptor.Request);
    atomic_store(result, (unint64_t *)&qword_255FFC508);
  }
  return result;
}

unint64_t sub_232E3FDA8()
{
  unint64_t result;

  result = qword_255FFE1C8;
  if (!qword_255FFE1C8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for PushActivityContentSource.Request, &type metadata for PushActivityContentSource.Request);
    atomic_store(result, (unint64_t *)&qword_255FFE1C8);
  }
  return result;
}

uint64_t sub_232E3FDEC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s11ActivityKit0A13ContentSourceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  _QWORD v32[4];
  char v33;
  _QWORD v34[4];
  char v35;
  _QWORD v36[7];
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(unsigned __int8 *)(a1 + 56);
  v11 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(unsigned __int8 *)(a2 + 56);
  v36[0] = *(_QWORD *)a1;
  v36[1] = v2;
  v36[2] = v4;
  v36[3] = v5;
  v36[4] = v6;
  v36[5] = v7;
  v36[6] = v8;
  v37 = v9;
  v38 = v11;
  v39 = v10;
  v40 = v13;
  v41 = v12;
  v42 = v15;
  v43 = v14;
  v44 = v16;
  v45 = v17;
  if (!v9)
  {
    if (!v17)
    {
      v34[0] = v3;
      v34[1] = v2;
      v34[2] = v4;
      v34[3] = v5;
      v35 = v6;
      v32[0] = v11;
      v32[1] = v10;
      v32[2] = v13;
      v32[3] = v12;
      v33 = v15;
      v26 = v4;
      v28 = v5;
      v30 = v6;
      v25 = v7;
      v19 = v8;
      sub_232E13454(v11, v10, v13, v12, v15, v14, v16, 0);
      sub_232E13454(v3, v2, v26, v28, v30, v25, v19, 0);
      sub_232E13454(v3, v2, v26, v28, v30, v25, v19, 0);
      sub_232E13454(v11, v10, v13, v12, v15, v14, v16, 0);
      if ((_s11ActivityKit04PushA13ContentSourceV0C4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v34, (uint64_t)v32) & 1) != 0)
      {
        if (v25 == v14 && v19 == v16)
        {
          sub_232E134F8((uint64_t)v36);
          sub_232E13588(v11, v10, v13, v12, v15, v25, v19, 0);
          sub_232E13588(v3, v2, v26, v28, v30, v25, v19, 0);
          v18 = 1;
          return v18 & 1;
        }
        v23 = sub_232E6F6E4();
        sub_232E134F8((uint64_t)v36);
        sub_232E13588(v11, v10, v13, v12, v15, v14, v16, 0);
        sub_232E13588(v3, v2, v26, v28, v30, v25, v19, 0);
        if ((v23 & 1) != 0)
        {
          v18 = 1;
          return v18 & 1;
        }
      }
      else
      {
        sub_232E134F8((uint64_t)v36);
        sub_232E13588(v11, v10, v13, v12, v15, v14, v16, 0);
        sub_232E13588(v3, v2, v26, v28, v30, v25, v19, 0);
      }
LABEL_15:
      v18 = 0;
      return v18 & 1;
    }
    goto LABEL_14;
  }
  if (v9 != 1)
  {
    if (v17 == 2 && !(v10 | v11 | v13 | v12 | v15 | v14 | v16))
    {
      sub_232E134F8((uint64_t)v36);
      v18 = 1;
      return v18 & 1;
    }
    goto LABEL_14;
  }
  if (v17 != 1)
  {
LABEL_14:
    sub_232E13454(v3, v2, v4, v5, v6, v7, v8, v9);
    sub_232E13454(v11, v10, v13, v12, v15, v14, v16, v17);
    sub_232E134F8((uint64_t)v36);
    goto LABEL_15;
  }
  if (v3 == v11 && v2 == v10)
  {
    v18 = 1;
  }
  else
  {
    v27 = v4;
    v29 = v5;
    v31 = v6;
    v24 = v8;
    v21 = v7;
    v22 = sub_232E6F6E4();
    v4 = v27;
    v5 = v29;
    LOBYTE(v6) = v31;
    v7 = v21;
    v8 = v24;
    v18 = v22;
  }
  sub_232E13454(v3, v2, v4, v5, v6, v7, v8, 1);
  sub_232E13454(v11, v10, v13, v12, v15, v14, v16, 1);
  sub_232E134F8((uint64_t)v36);
  return v18 & 1;
}

unint64_t sub_232E401A8()
{
  unint64_t result;

  result = qword_254238140;
  if (!qword_254238140)
  {
    result = MEMORY[0x23492A124](&unk_232E77844, &type metadata for ActivityContentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238140);
  }
  return result;
}

unint64_t sub_232E401EC()
{
  unint64_t result;

  result = qword_254238168;
  if (!qword_254238168)
  {
    result = MEMORY[0x23492A124](&unk_232E777F4, &type metadata for ActivityContentSource.SyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238168);
  }
  return result;
}

unint64_t sub_232E40230()
{
  unint64_t result;

  result = qword_254238180;
  if (!qword_254238180)
  {
    result = MEMORY[0x23492A124](&unk_232E777A4, &type metadata for ActivityContentSource.ProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238180);
  }
  return result;
}

unint64_t sub_232E40274()
{
  unint64_t result;

  result = qword_255FFE1D0;
  if (!qword_255FFE1D0)
  {
    result = MEMORY[0x23492A124](&unk_232E77754, &type metadata for ActivityContentSource.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE1D0);
  }
  return result;
}

unint64_t sub_232E402B8()
{
  unint64_t result;

  result = qword_255FFE1D8;
  if (!qword_255FFE1D8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for PushActivityContentSource, &type metadata for PushActivityContentSource);
    atomic_store(result, (unint64_t *)&qword_255FFE1D8);
  }
  return result;
}

unint64_t sub_232E402FC()
{
  unint64_t result;

  result = qword_255FFE1E0;
  if (!qword_255FFE1E0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for PushActivityContentSource, &type metadata for PushActivityContentSource);
    atomic_store(result, (unint64_t *)&qword_255FFE1E0);
  }
  return result;
}

unint64_t sub_232E40340()
{
  unint64_t result;

  result = qword_255FFE208;
  if (!qword_255FFE208)
  {
    result = MEMORY[0x23492A124](&unk_232E77704, &type metadata for PushActivityContentSource.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE208);
  }
  return result;
}

unint64_t sub_232E40384()
{
  unint64_t result;

  result = qword_255FFE210;
  if (!qword_255FFE210)
  {
    result = MEMORY[0x23492A124](&unk_232E776B4, &type metadata for PushActivityContentSource.Request.ExternalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE210);
  }
  return result;
}

unint64_t sub_232E403C8()
{
  unint64_t result;

  result = qword_255FFE218;
  if (!qword_255FFE218)
  {
    result = MEMORY[0x23492A124](&unk_232E77664, &type metadata for PushActivityContentSource.Request.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE218);
  }
  return result;
}

unint64_t sub_232E4040C()
{
  unint64_t result;

  result = qword_255FFE220;
  if (!qword_255FFE220)
  {
    result = MEMORY[0x23492A124](&unk_232E77614, &type metadata for PushActivityContentSource.Request.BroadcastPushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE220);
  }
  return result;
}

unint64_t sub_232E40450()
{
  unint64_t result;

  result = qword_255FFE268;
  if (!qword_255FFE268)
  {
    result = MEMORY[0x23492A124](&unk_232E775C4, &type metadata for PushActivityContentSource.PushType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE268);
  }
  return result;
}

unint64_t sub_232E40494()
{
  unint64_t result;

  result = qword_255FFE270;
  if (!qword_255FFE270)
  {
    result = MEMORY[0x23492A124](&unk_232E77574, &type metadata for PushActivityContentSource.PushType.ExternalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE270);
  }
  return result;
}

unint64_t sub_232E404D8()
{
  unint64_t result;

  result = qword_255FFE278;
  if (!qword_255FFE278)
  {
    result = MEMORY[0x23492A124](&unk_232E77524, &type metadata for PushActivityContentSource.PushType.TokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE278);
  }
  return result;
}

unint64_t sub_232E4051C()
{
  unint64_t result;

  result = qword_255FFE280;
  if (!qword_255FFE280)
  {
    result = MEMORY[0x23492A124](&unk_232E774D4, &type metadata for PushActivityContentSource.PushType.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE280);
  }
  return result;
}

unint64_t sub_232E40560()
{
  unint64_t result;

  result = qword_255FFE2B0;
  if (!qword_255FFE2B0)
  {
    result = MEMORY[0x23492A124](&unk_232E77484, &type metadata for PushActivityContentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE2B0);
  }
  return result;
}

unint64_t sub_232E405A4()
{
  unint64_t result;

  result = qword_255FFE2B8;
  if (!qword_255FFE2B8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for PushActivityContentSource.PushType, &type metadata for PushActivityContentSource.PushType);
    atomic_store(result, (unint64_t *)&qword_255FFE2B8);
  }
  return result;
}

unint64_t sub_232E405E8()
{
  unint64_t result;

  result = qword_255FFE2C8;
  if (!qword_255FFE2C8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for PushActivityContentSource.PushType, &type metadata for PushActivityContentSource.PushType);
    atomic_store(result, (unint64_t *)&qword_255FFE2C8);
  }
  return result;
}

uint64_t destroy for ActivityContentSource(uint64_t a1)
{
  return sub_232E13588(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for ActivityContentSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_232E13454(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for ActivityContentSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_232E13454(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  v18 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v10;
  sub_232E13588(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ActivityContentSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v4;
  sub_232E13588(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityContentSource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityContentSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_232E4088C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 56) <= 1u)
    return *(unsigned __int8 *)(a1 + 56);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_232E408A4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

uint64_t destroy for ActivityContentSource.Request(uint64_t a1)
{
  return sub_232E40900(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32), (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
}

uint64_t sub_232E40900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(void), uint64_t (*a7)(void))
{
  if ((a5 & 1) != 0)
    return a7();
  a6();
  return ((uint64_t (*)(uint64_t, uint64_t))a7)(a3, a4);
}

uint64_t initializeWithCopy for ActivityContentSource.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_232E40900(*(_QWORD *)a2, v4, v5, v6, v7, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ActivityContentSource.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_232E40900(*(_QWORD *)a2, v4, v5, v6, v7, (void (*)(void))sub_232DF99C8, (uint64_t (*)(void))sub_232DF99C8);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_232E40900(v8, v9, v10, v11, v12, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ActivityContentSource.Request(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_232E40900(v4, v6, v5, v7, v8, (void (*)(void))sub_232E3FDEC, (uint64_t (*)(void))sub_232E428FC);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityContentSource.Request(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityContentSource.Request(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_232E40B40(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_232E40B48(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityContentSource.Request()
{
  return &type metadata for ActivityContentSource.Request;
}

uint64_t destroy for PushActivityContentSource(uint64_t a1)
{
  sub_232E135E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushActivityContentSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_232E134AC(*(_QWORD *)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PushActivityContentSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_232E134AC(*(_QWORD *)a2, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_232E135E0(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PushActivityContentSource(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_232E135E0(v5, v6, v7, v8, v10);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushActivityContentSource(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushActivityContentSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushActivityContentSource()
{
  return &type metadata for PushActivityContentSource;
}

unint64_t destroy for ProcessDescriptor.Request(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s11ActivityKit17ProcessDescriptorV7RequestOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for ProcessDescriptor.Request(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ProcessDescriptor.Request(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProcessDescriptor.Request(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ProcessDescriptor.Request(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

_QWORD *sub_232E40FBC(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.Request()
{
  return &type metadata for PushActivityContentSource.Request;
}

uint64_t destroy for PushActivityContentSource.PushType(uint64_t a1)
{
  return sub_232E135E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PushActivityContentSource.PushType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_232E134AC(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PushActivityContentSource.PushType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_232E134AC(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_232E135E0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PushActivityContentSource.PushType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_232E135E0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushActivityContentSource.PushType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PushActivityContentSource.PushType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_232E411A8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_232E411C0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.PushType()
{
  return &type metadata for PushActivityContentSource.PushType;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.CodingKeys()
{
  return &type metadata for PushActivityContentSource.CodingKeys;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.PushType.CodingKeys()
{
  return &type metadata for PushActivityContentSource.PushType.CodingKeys;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.PushType.ChannelCodingKeys()
{
  return &type metadata for PushActivityContentSource.PushType.ChannelCodingKeys;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.PushType.TokenCodingKeys()
{
  return &type metadata for PushActivityContentSource.PushType.TokenCodingKeys;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.PushType.ExternalCodingKeys()
{
  return &type metadata for PushActivityContentSource.PushType.ExternalCodingKeys;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.Request.CodingKeys()
{
  return &type metadata for PushActivityContentSource.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.Request.BroadcastPushCodingKeys()
{
  return &type metadata for PushActivityContentSource.Request.BroadcastPushCodingKeys;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.Request.PushCodingKeys()
{
  return &type metadata for PushActivityContentSource.Request.PushCodingKeys;
}

ValueMetadata *type metadata accessor for PushActivityContentSource.Request.ExternalCodingKeys()
{
  return &type metadata for PushActivityContentSource.Request.ExternalCodingKeys;
}

uint64_t _s11ActivityKit25PushActivityContentSourceV8PushTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E412D4 + 4 * byte_232E766E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232E41308 + 4 * asc_232E766E0[v4]))();
}

uint64_t sub_232E41308(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E41310(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E41318);
  return result;
}

uint64_t sub_232E41324(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E4132CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232E41330(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E41338(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityContentSource.CodingKeys()
{
  return &type metadata for ActivityContentSource.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityContentSource.PushCodingKeys()
{
  return &type metadata for ActivityContentSource.PushCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityContentSource.ProcessCodingKeys()
{
  return &type metadata for ActivityContentSource.ProcessCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityContentSource.SyncCodingKeys()
{
  return &type metadata for ActivityContentSource.SyncCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityContentSource.Request.CodingKeys()
{
  return &type metadata for ActivityContentSource.Request.CodingKeys;
}

uint64_t _s11ActivityKit25PushActivityContentSourceV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E413E0 + 4 * byte_232E766EF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E41414 + 4 * byte_232E766EA[v4]))();
}

uint64_t sub_232E41414(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E4141C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E41424);
  return result;
}

uint64_t sub_232E41430(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E41438);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E4143C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E41444(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityContentSource.Request.PushCodingKeys()
{
  return &type metadata for ActivityContentSource.Request.PushCodingKeys;
}

uint64_t _s11ActivityKit25PushActivityContentSourceV8PushTypeO15TokenCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E414A0 + 4 * byte_232E766F4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E414C0 + 4 * byte_232E766F9[v4]))();
}

_BYTE *sub_232E414A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E414C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E414C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E414D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E414D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E414E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityContentSource.Request.ProcessCodingKeys()
{
  return &type metadata for ActivityContentSource.Request.ProcessCodingKeys;
}

unint64_t sub_232E41500()
{
  unint64_t result;

  result = qword_255FFE2D0;
  if (!qword_255FFE2D0)
  {
    result = MEMORY[0x23492A124](&unk_232E76B34, &type metadata for ActivityContentSource.Request.ProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE2D0);
  }
  return result;
}

unint64_t sub_232E41548()
{
  unint64_t result;

  result = qword_255FFE2D8;
  if (!qword_255FFE2D8)
  {
    result = MEMORY[0x23492A124](&unk_232E76BEC, &type metadata for ActivityContentSource.Request.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE2D8);
  }
  return result;
}

unint64_t sub_232E41590()
{
  unint64_t result;

  result = qword_255FFE2E0;
  if (!qword_255FFE2E0)
  {
    result = MEMORY[0x23492A124](&unk_232E76CA4, &type metadata for ActivityContentSource.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE2E0);
  }
  return result;
}

unint64_t sub_232E415D8()
{
  unint64_t result;

  result = qword_255FFE2E8;
  if (!qword_255FFE2E8)
  {
    result = MEMORY[0x23492A124](&unk_232E76DAC, &type metadata for ActivityContentSource.ProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE2E8);
  }
  return result;
}

unint64_t sub_232E41620()
{
  unint64_t result;

  result = qword_255FFE2F0;
  if (!qword_255FFE2F0)
  {
    result = MEMORY[0x23492A124](&unk_232E76E64, &type metadata for ActivityContentSource.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE2F0);
  }
  return result;
}

unint64_t sub_232E41668()
{
  unint64_t result;

  result = qword_255FFE2F8;
  if (!qword_255FFE2F8)
  {
    result = MEMORY[0x23492A124](&unk_232E76F1C, &type metadata for ActivityContentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE2F8);
  }
  return result;
}

unint64_t sub_232E416B0()
{
  unint64_t result;

  result = qword_255FFE300;
  if (!qword_255FFE300)
  {
    result = MEMORY[0x23492A124](&unk_232E77074, &type metadata for PushActivityContentSource.Request.BroadcastPushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE300);
  }
  return result;
}

unint64_t sub_232E416F8()
{
  unint64_t result;

  result = qword_255FFE308;
  if (!qword_255FFE308)
  {
    result = MEMORY[0x23492A124](&unk_232E7712C, &type metadata for PushActivityContentSource.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE308);
  }
  return result;
}

unint64_t sub_232E41740()
{
  unint64_t result;

  result = qword_255FFE310;
  if (!qword_255FFE310)
  {
    result = MEMORY[0x23492A124](&unk_232E77234, &type metadata for PushActivityContentSource.PushType.TokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE310);
  }
  return result;
}

unint64_t sub_232E41788()
{
  unint64_t result;

  result = qword_255FFE318;
  if (!qword_255FFE318)
  {
    result = MEMORY[0x23492A124](&unk_232E772EC, &type metadata for PushActivityContentSource.PushType.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE318);
  }
  return result;
}

unint64_t sub_232E417D0()
{
  unint64_t result;

  result = qword_255FFE320;
  if (!qword_255FFE320)
  {
    result = MEMORY[0x23492A124](&unk_232E773A4, &type metadata for PushActivityContentSource.PushType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE320);
  }
  return result;
}

unint64_t sub_232E41818()
{
  unint64_t result;

  result = qword_255FFE328;
  if (!qword_255FFE328)
  {
    result = MEMORY[0x23492A124](&unk_232E7745C, &type metadata for PushActivityContentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE328);
  }
  return result;
}

unint64_t sub_232E41860()
{
  unint64_t result;

  result = qword_255FFE330;
  if (!qword_255FFE330)
  {
    result = MEMORY[0x23492A124](&unk_232E773CC, &type metadata for PushActivityContentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE330);
  }
  return result;
}

unint64_t sub_232E418A8()
{
  unint64_t result;

  result = qword_255FFE338;
  if (!qword_255FFE338)
  {
    result = MEMORY[0x23492A124](&unk_232E773F4, &type metadata for PushActivityContentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE338);
  }
  return result;
}

unint64_t sub_232E418F0()
{
  unint64_t result;

  result = qword_255FFE340;
  if (!qword_255FFE340)
  {
    result = MEMORY[0x23492A124](&unk_232E7725C, &type metadata for PushActivityContentSource.PushType.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE340);
  }
  return result;
}

unint64_t sub_232E41938()
{
  unint64_t result;

  result = qword_255FFE348;
  if (!qword_255FFE348)
  {
    result = MEMORY[0x23492A124](&unk_232E77284, &type metadata for PushActivityContentSource.PushType.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE348);
  }
  return result;
}

unint64_t sub_232E41980()
{
  unint64_t result;

  result = qword_255FFE350;
  if (!qword_255FFE350)
  {
    result = MEMORY[0x23492A124](&unk_232E771A4, &type metadata for PushActivityContentSource.PushType.TokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE350);
  }
  return result;
}

unint64_t sub_232E419C8()
{
  unint64_t result;

  result = qword_255FFE358;
  if (!qword_255FFE358)
  {
    result = MEMORY[0x23492A124](&unk_232E771CC, &type metadata for PushActivityContentSource.PushType.TokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE358);
  }
  return result;
}

unint64_t sub_232E41A10()
{
  unint64_t result;

  result = qword_255FFE360;
  if (!qword_255FFE360)
  {
    result = MEMORY[0x23492A124](&unk_232E77154, &type metadata for PushActivityContentSource.PushType.ExternalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE360);
  }
  return result;
}

unint64_t sub_232E41A58()
{
  unint64_t result;

  result = qword_255FFE368;
  if (!qword_255FFE368)
  {
    result = MEMORY[0x23492A124](&unk_232E7717C, &type metadata for PushActivityContentSource.PushType.ExternalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE368);
  }
  return result;
}

unint64_t sub_232E41AA0()
{
  unint64_t result;

  result = qword_255FFE370;
  if (!qword_255FFE370)
  {
    result = MEMORY[0x23492A124](&unk_232E77314, &type metadata for PushActivityContentSource.PushType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE370);
  }
  return result;
}

unint64_t sub_232E41AE8()
{
  unint64_t result;

  result = qword_255FFE378;
  if (!qword_255FFE378)
  {
    result = MEMORY[0x23492A124](&unk_232E7733C, &type metadata for PushActivityContentSource.PushType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE378);
  }
  return result;
}

unint64_t sub_232E41B30()
{
  unint64_t result;

  result = qword_255FFE380;
  if (!qword_255FFE380)
  {
    result = MEMORY[0x23492A124](&unk_232E76FE4, &type metadata for PushActivityContentSource.Request.BroadcastPushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE380);
  }
  return result;
}

unint64_t sub_232E41B78()
{
  unint64_t result;

  result = qword_255FFE388;
  if (!qword_255FFE388)
  {
    result = MEMORY[0x23492A124](&unk_232E7700C, &type metadata for PushActivityContentSource.Request.BroadcastPushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE388);
  }
  return result;
}

unint64_t sub_232E41BC0()
{
  unint64_t result;

  result = qword_255FFE390;
  if (!qword_255FFE390)
  {
    result = MEMORY[0x23492A124](&unk_232E76F94, &type metadata for PushActivityContentSource.Request.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE390);
  }
  return result;
}

unint64_t sub_232E41C08()
{
  unint64_t result;

  result = qword_255FFE398;
  if (!qword_255FFE398)
  {
    result = MEMORY[0x23492A124](&unk_232E76FBC, &type metadata for PushActivityContentSource.Request.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE398);
  }
  return result;
}

unint64_t sub_232E41C50()
{
  unint64_t result;

  result = qword_255FFE3A0;
  if (!qword_255FFE3A0)
  {
    result = MEMORY[0x23492A124](&unk_232E76F44, &type metadata for PushActivityContentSource.Request.ExternalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE3A0);
  }
  return result;
}

unint64_t sub_232E41C98()
{
  unint64_t result;

  result = qword_255FFE3A8;
  if (!qword_255FFE3A8)
  {
    result = MEMORY[0x23492A124](&unk_232E76F6C, &type metadata for PushActivityContentSource.Request.ExternalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE3A8);
  }
  return result;
}

unint64_t sub_232E41CE0()
{
  unint64_t result;

  result = qword_255FFE3B0;
  if (!qword_255FFE3B0)
  {
    result = MEMORY[0x23492A124](&unk_232E7709C, &type metadata for PushActivityContentSource.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE3B0);
  }
  return result;
}

unint64_t sub_232E41D28()
{
  unint64_t result;

  result = qword_255FFE3B8;
  if (!qword_255FFE3B8)
  {
    result = MEMORY[0x23492A124](&unk_232E770C4, &type metadata for PushActivityContentSource.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE3B8);
  }
  return result;
}

unint64_t sub_232E41D70()
{
  unint64_t result;

  result = qword_254238160;
  if (!qword_254238160)
  {
    result = MEMORY[0x23492A124](&unk_232E76DD4, &type metadata for ActivityContentSource.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238160);
  }
  return result;
}

unint64_t sub_232E41DB8()
{
  unint64_t result;

  result = qword_254238158;
  if (!qword_254238158)
  {
    result = MEMORY[0x23492A124](&unk_232E76DFC, &type metadata for ActivityContentSource.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238158);
  }
  return result;
}

unint64_t sub_232E41E00()
{
  unint64_t result;

  result = qword_254238190;
  if (!qword_254238190)
  {
    result = MEMORY[0x23492A124](&unk_232E76D1C, &type metadata for ActivityContentSource.ProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238190);
  }
  return result;
}

unint64_t sub_232E41E48()
{
  unint64_t result;

  result = qword_254238188;
  if (!qword_254238188)
  {
    result = MEMORY[0x23492A124](&unk_232E76D44, &type metadata for ActivityContentSource.ProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238188);
  }
  return result;
}

unint64_t sub_232E41E90()
{
  unint64_t result;

  result = qword_254238178;
  if (!qword_254238178)
  {
    result = MEMORY[0x23492A124](&unk_232E76CCC, &type metadata for ActivityContentSource.SyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238178);
  }
  return result;
}

unint64_t sub_232E41ED8()
{
  unint64_t result;

  result = qword_254238170;
  if (!qword_254238170)
  {
    result = MEMORY[0x23492A124](&unk_232E76CF4, &type metadata for ActivityContentSource.SyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238170);
  }
  return result;
}

unint64_t sub_232E41F20()
{
  unint64_t result;

  result = qword_254238150;
  if (!qword_254238150)
  {
    result = MEMORY[0x23492A124](&unk_232E76E8C, &type metadata for ActivityContentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238150);
  }
  return result;
}

unint64_t sub_232E41F68()
{
  unint64_t result;

  result = qword_254238148;
  if (!qword_254238148)
  {
    result = MEMORY[0x23492A124](&unk_232E76EB4, &type metadata for ActivityContentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238148);
  }
  return result;
}

unint64_t sub_232E41FB0()
{
  unint64_t result;

  result = qword_254237450;
  if (!qword_254237450)
  {
    result = MEMORY[0x23492A124](&unk_232E76B5C, &type metadata for ActivityContentSource.Request.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237450);
  }
  return result;
}

unint64_t sub_232E41FF8()
{
  unint64_t result;

  result = qword_254237448;
  if (!qword_254237448)
  {
    result = MEMORY[0x23492A124](&unk_232E76B84, &type metadata for ActivityContentSource.Request.PushCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237448);
  }
  return result;
}

unint64_t sub_232E42040()
{
  unint64_t result;

  result = qword_254237468;
  if (!qword_254237468)
  {
    result = MEMORY[0x23492A124](&unk_232E76AA4, &type metadata for ActivityContentSource.Request.ProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237468);
  }
  return result;
}

unint64_t sub_232E42088()
{
  unint64_t result;

  result = qword_254237460;
  if (!qword_254237460)
  {
    result = MEMORY[0x23492A124](&unk_232E76ACC, &type metadata for ActivityContentSource.Request.ProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237460);
  }
  return result;
}

unint64_t sub_232E420D0()
{
  unint64_t result;

  result = qword_254237440;
  if (!qword_254237440)
  {
    result = MEMORY[0x23492A124](&unk_232E76C14, &type metadata for ActivityContentSource.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237440);
  }
  return result;
}

unint64_t sub_232E42118()
{
  unint64_t result;

  result = qword_254237438;
  if (!qword_254237438)
  {
    result = MEMORY[0x23492A124](&unk_232E76C3C, &type metadata for ActivityContentSource.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237438);
  }
  return result;
}

uint64_t sub_232E4215C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1752397168 && a2 == 0xE400000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737365636F7270 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E4223C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746567726174 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E42324(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1752397168 && a2 == 0xE400000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737365636F7270 && a2 == 0xE700000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1668184435 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_232E42458(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73616364616F7262 && a2 == 0xED00006873755074;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752397168 && a2 == 0xE400000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C616E7265747865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_232E425C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E426C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C616E7265747865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_232E42814(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6570795468737570 && a2 == 0xE800000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369706F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t static ActivityProtectionClass.defaultClass.getter()
{
  return 2;
}

uint64_t ActivityProtectionClass.hash(into:)()
{
  return sub_232E6F78C();
}

BOOL static ActivityProtectionClass.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_232E42940()
{
  sub_232E42F0C();
  return sub_232E6F7D4();
}

uint64_t sub_232E42968()
{
  sub_232E42F0C();
  return sub_232E6F7E0();
}

uint64_t sub_232E42990()
{
  sub_232E42EC8();
  return sub_232E6F7D4();
}

uint64_t sub_232E429B8()
{
  sub_232E42EC8();
  return sub_232E6F7E0();
}

uint64_t sub_232E429E0()
{
  sub_232E42E84();
  return sub_232E6F7D4();
}

uint64_t sub_232E42A08()
{
  sub_232E42E84();
  return sub_232E6F7E0();
}

uint64_t sub_232E42A30()
{
  sub_232E42E40();
  return sub_232E6F7D4();
}

uint64_t sub_232E42A58()
{
  sub_232E42E40();
  return sub_232E6F7E0();
}

unint64_t sub_232E42A80()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 40) + 0x417373616C63;
}

uint64_t sub_232E42A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E42FE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E42AC0()
{
  sub_232E42DFC();
  return sub_232E6F7D4();
}

uint64_t sub_232E42AE8()
{
  sub_232E42DFC();
  return sub_232E6F7E0();
}

void ActivityProtectionClass.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;

  v11 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE3C0);
  v10[7] = *(_QWORD *)(v3 - 8);
  v10[8] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v10[6] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE3C8);
  v10[4] = *(_QWORD *)(v5 - 8);
  v10[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[3] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE3D0);
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE3D8);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE3E0);
  v10[9] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E42DFC();
  sub_232E6F7C8();
  __asm { BR              X10 }
}

uint64_t sub_232E42CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_232E42F0C();
  sub_232E6F660();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

unint64_t sub_232E42DFC()
{
  unint64_t result;

  result = qword_255FFE3E8;
  if (!qword_255FFE3E8)
  {
    result = MEMORY[0x23492A124](&unk_232E77E4C, &type metadata for ActivityProtectionClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE3E8);
  }
  return result;
}

unint64_t sub_232E42E40()
{
  unint64_t result;

  result = qword_255FFE3F0;
  if (!qword_255FFE3F0)
  {
    result = MEMORY[0x23492A124](&unk_232E77DFC, &type metadata for ActivityProtectionClass.ClassDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE3F0);
  }
  return result;
}

unint64_t sub_232E42E84()
{
  unint64_t result;

  result = qword_255FFE3F8;
  if (!qword_255FFE3F8)
  {
    result = MEMORY[0x23492A124](&unk_232E77DAC, &type metadata for ActivityProtectionClass.ClassCCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE3F8);
  }
  return result;
}

unint64_t sub_232E42EC8()
{
  unint64_t result;

  result = qword_255FFE400;
  if (!qword_255FFE400)
  {
    result = MEMORY[0x23492A124](&unk_232E77D5C, &type metadata for ActivityProtectionClass.ClassBCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE400);
  }
  return result;
}

unint64_t sub_232E42F0C()
{
  unint64_t result;

  result = qword_255FFE408;
  if (!qword_255FFE408)
  {
    result = MEMORY[0x23492A124](&unk_232E77D0C, &type metadata for ActivityProtectionClass.ClassACodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE408);
  }
  return result;
}

uint64_t ActivityProtectionClass.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  return sub_232E6F7B0();
}

uint64_t ActivityProtectionClass.init(from:)(_QWORD *a1)
{
  return sub_232E43180(a1);
}

uint64_t sub_232E42FA8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_232E43180(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_232E42FD0(_QWORD *a1)
{
  unsigned __int8 *v1;

  ActivityProtectionClass.encode(to:)(a1, *v1);
}

uint64_t sub_232E42FE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x417373616C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x427373616C63 && a2 == 0xE600000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x437373616C63 && a2 == 0xE600000000000000 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x447373616C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_232E43180(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[12];
  _QWORD *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE470);
  v23[10] = *(_QWORD *)(v2 - 8);
  v23[11] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23[9] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE478);
  v23[5] = *(_QWORD *)(v4 - 8);
  v23[6] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE480);
  v23[3] = *(_QWORD *)(v6 - 8);
  v23[4] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23[7] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE488);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE490);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_232E42DFC();
  v17 = v25;
  sub_232E6F7BC();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v25 = v13;
    v18 = sub_232E6F648();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X9 }
    v19 = sub_232E6F51C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v21 = &type metadata for ActivityProtectionClass;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v12;
}

void sub_232E434A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_232E42EC8();
  sub_232E6F5DC();
  if (!v0)
    JUMPOUT(0x232E43578);
  JUMPOUT(0x232E43458);
}

void sub_232E434E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_232E42E84();
  sub_232E6F5DC();
  if (!v0)
    JUMPOUT(0x232E43528);
  JUMPOUT(0x232E43458);
}

void sub_232E43534()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_232E42E40();
  sub_232E6F5DC();
  if (!v0)
    JUMPOUT(0x232E43578);
  JUMPOUT(0x232E43458);
}

unint64_t sub_232E435A8()
{
  unint64_t result;

  result = qword_255FFE410;
  if (!qword_255FFE410)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProtectionClass, &type metadata for ActivityProtectionClass);
    atomic_store(result, (unint64_t *)&qword_255FFE410);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityProtectionClass()
{
  return &type metadata for ActivityProtectionClass;
}

uint64_t _s11ActivityKit23ActivityProtectionClassOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_232E4364C + 4 * byte_232E7799D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_232E43680 + 4 * byte_232E77998[v4]))();
}

uint64_t sub_232E43680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E43688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E43690);
  return result;
}

uint64_t sub_232E4369C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E436A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_232E436A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E436B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityProtectionClass.CodingKeys()
{
  return &type metadata for ActivityProtectionClass.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityProtectionClass.ClassACodingKeys()
{
  return &type metadata for ActivityProtectionClass.ClassACodingKeys;
}

ValueMetadata *type metadata accessor for ActivityProtectionClass.ClassBCodingKeys()
{
  return &type metadata for ActivityProtectionClass.ClassBCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityProtectionClass.ClassCCodingKeys()
{
  return &type metadata for ActivityProtectionClass.ClassCCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityProtectionClass.ClassDCodingKeys()
{
  return &type metadata for ActivityProtectionClass.ClassDCodingKeys;
}

unint64_t sub_232E43710()
{
  unint64_t result;

  result = qword_255FFE418;
  if (!qword_255FFE418)
  {
    result = MEMORY[0x23492A124](&unk_232E77CE4, &type metadata for ActivityProtectionClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE418);
  }
  return result;
}

unint64_t sub_232E43758()
{
  unint64_t result;

  result = qword_255FFE420;
  if (!qword_255FFE420)
  {
    result = MEMORY[0x23492A124](&unk_232E77C04, &type metadata for ActivityProtectionClass.ClassACodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE420);
  }
  return result;
}

unint64_t sub_232E437A0()
{
  unint64_t result;

  result = qword_255FFE428;
  if (!qword_255FFE428)
  {
    result = MEMORY[0x23492A124](&unk_232E77C2C, &type metadata for ActivityProtectionClass.ClassACodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE428);
  }
  return result;
}

unint64_t sub_232E437E8()
{
  unint64_t result;

  result = qword_255FFE430;
  if (!qword_255FFE430)
  {
    result = MEMORY[0x23492A124](&unk_232E77BB4, &type metadata for ActivityProtectionClass.ClassBCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE430);
  }
  return result;
}

unint64_t sub_232E43830()
{
  unint64_t result;

  result = qword_255FFE438;
  if (!qword_255FFE438)
  {
    result = MEMORY[0x23492A124](&unk_232E77BDC, &type metadata for ActivityProtectionClass.ClassBCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE438);
  }
  return result;
}

unint64_t sub_232E43878()
{
  unint64_t result;

  result = qword_255FFE440;
  if (!qword_255FFE440)
  {
    result = MEMORY[0x23492A124](&unk_232E77B64, &type metadata for ActivityProtectionClass.ClassCCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE440);
  }
  return result;
}

unint64_t sub_232E438C0()
{
  unint64_t result;

  result = qword_255FFE448;
  if (!qword_255FFE448)
  {
    result = MEMORY[0x23492A124](&unk_232E77B8C, &type metadata for ActivityProtectionClass.ClassCCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE448);
  }
  return result;
}

unint64_t sub_232E43908()
{
  unint64_t result;

  result = qword_255FFE450;
  if (!qword_255FFE450)
  {
    result = MEMORY[0x23492A124](&unk_232E77B14, &type metadata for ActivityProtectionClass.ClassDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE450);
  }
  return result;
}

unint64_t sub_232E43950()
{
  unint64_t result;

  result = qword_255FFE458;
  if (!qword_255FFE458)
  {
    result = MEMORY[0x23492A124](&unk_232E77B3C, &type metadata for ActivityProtectionClass.ClassDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE458);
  }
  return result;
}

unint64_t sub_232E43998()
{
  unint64_t result;

  result = qword_255FFE460;
  if (!qword_255FFE460)
  {
    result = MEMORY[0x23492A124](&unk_232E77C54, &type metadata for ActivityProtectionClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE460);
  }
  return result;
}

unint64_t sub_232E439E0()
{
  unint64_t result;

  result = qword_255FFE468;
  if (!qword_255FFE468)
  {
    result = MEMORY[0x23492A124](&unk_232E77C7C, &type metadata for ActivityProtectionClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE468);
  }
  return result;
}

uint64_t ActivityQoS.description.getter(uint64_t a1)
{
  uint64_t result;

  if (!a1)
    return 1751607656;
  if (a1 == 1)
    return 7827308;
  result = sub_232E6F6FC();
  __break(1u);
  return result;
}

uint64_t static ActivityQoS.< infix(_:_:)(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE498);
  if (!a1)
  {
    if (a2 >= 2)
      goto LABEL_9;
    return 0;
  }
  if (a1 == 1)
  {
    if (a2 == 1)
      return 0;
    if (!a2)
      return 1;
  }
LABEL_9:
  result = sub_232E6F6D8();
  __break(1u);
  return result;
}

BOOL ActivityQoS.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_232E43B10()
{
  unint64_t result;

  result = qword_255FFE4A0;
  if (!qword_255FFE4A0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoS, &type metadata for ActivityQoS);
    atomic_store(result, (unint64_t *)&qword_255FFE4A0);
  }
  return result;
}

uint64_t sub_232E43B54()
{
  sub_232E6F780();
  sub_232E6F7A4();
  return sub_232E6F7B0();
}

uint64_t sub_232E43B98()
{
  return sub_232E6F7A4();
}

uint64_t sub_232E43BC0()
{
  sub_232E6F780();
  sub_232E6F7A4();
  return sub_232E6F7B0();
}

_QWORD *sub_232E43C00@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_232E43C30()
{
  sub_232E43EE8();
  return sub_232E6F294();
}

uint64_t sub_232E43C8C()
{
  sub_232E43EE8();
  return sub_232E6F270();
}

uint64_t sub_232E43CD8(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE498);
  if (v2)
  {
    if (v2 != 1)
      goto LABEL_9;
    if (!v3)
      return 1;
    if (v3 != 1)
      goto LABEL_9;
    return 0;
  }
  if (v3 < 2)
    return 0;
LABEL_9:
  result = sub_232E6F6D8();
  __break(1u);
  return result;
}

uint64_t sub_232E43D40(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE498);
  if (v3)
  {
    if (v3 != 1)
      goto LABEL_9;
    if (!v2)
      return 0;
    if (v2 != 1)
      goto LABEL_9;
    return 1;
  }
  if (v2 < 2)
    return 1;
LABEL_9:
  result = sub_232E6F6D8();
  __break(1u);
  return result;
}

uint64_t sub_232E43DA8(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE498);
  if (v2)
  {
    if (v2 != 1)
      goto LABEL_9;
    if (!v3)
      return 0;
    if (v3 != 1)
      goto LABEL_9;
    return 1;
  }
  if (v3 < 2)
    return 1;
LABEL_9:
  result = sub_232E6F6D8();
  __break(1u);
  return result;
}

uint64_t sub_232E43E10(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE498);
  if (v3)
  {
    if (v3 != 1)
      goto LABEL_9;
    if (!v2)
      return 1;
    if (v2 != 1)
      goto LABEL_9;
    return 0;
  }
  if (v2 < 2)
    return 0;
LABEL_9:
  result = sub_232E6F6D8();
  __break(1u);
  return result;
}

uint64_t sub_232E43E78()
{
  _QWORD *v0;
  uint64_t result;

  if (!*v0)
    return 1751607656;
  if (*v0 == 1)
    return 7827308;
  result = sub_232E6F6FC();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for ActivityQoS()
{
  return &type metadata for ActivityQoS;
}

unint64_t sub_232E43EE8()
{
  unint64_t result;

  result = qword_255FFE4A8;
  if (!qword_255FFE4A8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoS, &type metadata for ActivityQoS);
    atomic_store(result, (unint64_t *)&qword_255FFE4A8);
  }
  return result;
}

uint64_t sub_232E43F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v0 = sub_232E6F3C0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v5);
  sub_232DEA514();
  sub_232E6F0E4();
  v7[1] = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DEA598();
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v0);
  result = sub_232E6F3F0();
  qword_25423F4C0 = result;
  return result;
}

uint64_t sub_232E440BC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StuckClientReporter()
{
  return objc_opt_self();
}

uint64_t sub_232E440EC()
{
  uint64_t v0;
  uint64_t result;
  int v2;
  unsigned int v3;
  uint64_t v4;
  int out_token;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  out_token = -1;
  sub_232E6EEB0();
  v0 = sub_232E6F204();
  swift_bridgeObjectRelease();
  notify_register_check((const char *)(v0 + 32), &out_token);
  result = swift_release();
  v2 = out_token;
  if (out_token != -1)
  {
    v3 = getpid();
    if ((v3 & 0x80000000) != 0)
    {
      result = sub_232E6F570();
      __break(1u);
    }
    else
    {
      notify_set_state(v2, v3);
      sub_232E6EEB0();
      v4 = sub_232E6F204();
      swift_bridgeObjectRelease();
      notify_post((const char *)(v4 + 32));
      swift_release();
      return notify_cancel(v2);
    }
  }
  return result;
}

uint64_t ProcessDescriptor.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static ProcessDescriptor.Request.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
    return !a4;
  if (a2 == 1)
    return a4 == 1;
  if (a4 < 2)
    return 0;
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_232E6F6E4();
}

uint64_t static ProcessDescriptor.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_232E6F6E4();
}

unint64_t SceneTarget.Request.description.getter(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v5;
  unint64_t v6;

  if ((a3 & 1) != 0)
  {
    v6 = 0xD00000000000001FLL;
    if (a2 != 1)
      v6 = a1;
    if (a2)
      v5 = v6;
    else
      v5 = 0xD000000000000010;
    sub_232DF99C8(a1, a2);
  }
  else
  {
    sub_232E6F4E0();
    swift_bridgeObjectRelease();
    sub_232DF99C8(a1, a2);
    sub_232E6F228();
    swift_bridgeObjectRelease();
    sub_232E6F228();
    return 0xD00000000000001ALL;
  }
  return v5;
}

unint64_t ProcessDescriptor.Request.description.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD00000000000001FLL;
  if (a2 != 1)
    v2 = a1;
  if (a2)
    v3 = v2;
  else
    v3 = 0xD000000000000010;
  sub_232DF99C8(a1, a2);
  return v3;
}

unint64_t SceneTarget.Request.debugDescription.getter(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6;

  if ((a3 & 1) != 0)
  {
    sub_232E6F4E0();
    swift_bridgeObjectRelease();
    v6 = 0xD000000000000015;
  }
  else
  {
    sub_232E6F4E0();
    swift_bridgeObjectRelease();
    v6 = 0xD00000000000002FLL;
  }
  sub_232DF99C8(a1, a2);
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  return v6;
}

uint64_t SceneTarget.Request.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    sub_232E6F78C();
    if (a3)
      goto LABEL_3;
    return sub_232E6F78C();
  }
  sub_232E6F78C();
  if (!a3)
    return sub_232E6F78C();
LABEL_3:
  if (a3 == 1)
    return sub_232E6F78C();
  sub_232E6F78C();
  return sub_232E6F21C();
}

uint64_t static SceneTarget.Request.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  return sub_232E46AD4(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

uint64_t sub_232E44684()
{
  sub_232E46B74();
  return sub_232E6F7D4();
}

uint64_t sub_232E446AC()
{
  sub_232E46B74();
  return sub_232E6F7E0();
}

uint64_t sub_232E446D4()
{
  sub_232E46BB8();
  return sub_232E6F7D4();
}

uint64_t sub_232E446FC()
{
  sub_232E46BB8();
  return sub_232E6F7E0();
}

unint64_t sub_232E44724()
{
  return 0xD000000000000011;
}

uint64_t sub_232E44740()
{
  sub_232E46BFC();
  return sub_232E6F7D4();
}

uint64_t sub_232E44768()
{
  sub_232E46BFC();
  return sub_232E6F7E0();
}

uint64_t SceneTarget.Request.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;

  v22 = a4;
  v17 = a2;
  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542374D8);
  v16 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237720);
  v15 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237718);
  v19 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E46B74();
  sub_232E6F7C8();
  if ((v22 & 1) != 0)
  {
    LOBYTE(v20) = 1;
    sub_232E46BB8();
    sub_232E6F660();
    v20 = v17;
    v21 = v18;
    sub_232E3FC98();
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v5);
  }
  else
  {
    LOBYTE(v20) = 0;
    sub_232E46BFC();
    sub_232E6F660();
    v20 = v17;
    v21 = v18;
    sub_232E3FC98();
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v13, v11);
}

uint64_t SceneTarget.Request.hashValue.getter(uint64_t a1, unint64_t a2)
{
  sub_232E6F780();
  sub_232E6F78C();
  sub_232E6F78C();
  if (a2 > 1)
    sub_232E6F21C();
  return sub_232E6F7B0();
}

_QWORD *SceneTarget.Request.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  result = sub_232E46DC0(a1);
  if (v1)
    return (_QWORD *)v3;
  return result;
}

_QWORD *sub_232E44AA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;

  result = sub_232E46DC0(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_232E44AD8(_QWORD *a1)
{
  uint64_t v1;

  return SceneTarget.Request.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_232E44AF4()
{
  uint64_t v0;

  return SceneTarget.Request.hashValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_232E44B00(uint64_t a1)
{
  uint64_t v1;

  return SceneTarget.Request.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_232E44B0C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_232E6F780();
  sub_232E6F78C();
  sub_232E6F78C();
  if (v1 > 1)
    sub_232E6F21C();
  return sub_232E6F7B0();
}

unint64_t sub_232E44BA4()
{
  uint64_t v0;

  return SceneTarget.Request.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

unint64_t sub_232E44BB0()
{
  uint64_t v0;

  return SceneTarget.Request.debugDescription.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_232E44BBC(uint64_t a1, uint64_t a2)
{
  return sub_232E46AD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t SceneTarget.targetProcess.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  int v11;
  uint64_t result;

  if (*(_BYTE *)(v1 + 40) == 1)
  {
    v4 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)(v1 + 32);
    v5 = *(_DWORD *)(v1 + 16);
    v6 = (v5 >> 8) & 1;
    v8 = *(_QWORD *)v1;
    v7 = *(_QWORD *)(v1 + 8);
    v9 = v5 & 1;
    v10 = HIWORD(v5) & 1;
    v11 = HIBYTE(v5) & 1;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
    LOBYTE(v6) = 0;
    LOBYTE(v10) = 0;
    LOBYTE(v11) = 0;
    v4 = 0;
    v3 = 0;
    v7 = 0x8000000232E7F410;
    v8 = 0xD000000000000011;
  }
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 17) = v6;
  *(_BYTE *)(a1 + 18) = v10;
  *(_BYTE *)(a1 + 19) = v11;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t SceneTarget.containingAppProcess.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3 & 1;
  *(_BYTE *)(a1 + 17) = BYTE1(v3) & 1;
  *(_BYTE *)(a1 + 18) = BYTE2(v3) & 1;
  *(_BYTE *)(a1 + 19) = BYTE3(v3) & 1;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  return sub_232E01E78();
}

unint64_t SceneTarget.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if ((v0[5] & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_232E6F4E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_232E6F228();
    swift_bridgeObjectRelease();
    sub_232E6F228();
    return 0xD00000000000001ALL;
  }
  return v1;
}

uint64_t SceneTarget.hash(into:)()
{
  sub_232E6F78C();
  return ProcessDescriptor.hash(into:)();
}

uint64_t sub_232E44E2C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D6F74737563;
  else
    return 0x746567646977;
}

uint64_t sub_232E44E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E473B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E44E7C()
{
  sub_232E471D4();
  return sub_232E6F7D4();
}

uint64_t sub_232E44EA4()
{
  sub_232E471D4();
  return sub_232E6F7E0();
}

uint64_t sub_232E44ECC()
{
  sub_232E47218();
  return sub_232E6F7D4();
}

uint64_t sub_232E44EF4()
{
  sub_232E47218();
  return sub_232E6F7E0();
}

uint64_t sub_232E44F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E47490(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_232E44F44()
{
  sub_232E4725C();
  return sub_232E6F7D4();
}

uint64_t sub_232E44F6C()
{
  sub_232E4725C();
  return sub_232E6F7E0();
}

uint64_t SceneTarget.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  int v15;
  char v16;
  int v17;
  int v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542375E0);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542375E8);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542375D8);
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1[1];
  v29 = *v1;
  v30 = v11;
  v12 = *((_DWORD *)v1 + 4);
  v13 = v1[4];
  v31 = v1[3];
  v32 = v13;
  v14 = *((_BYTE *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E471D4();
  sub_232E6F7C8();
  v15 = (v12 >> 8) & 1;
  v16 = v12 & 1;
  v17 = HIWORD(v12) & 1;
  v18 = HIBYTE(v12) & 1;
  if ((v14 & 1) != 0)
  {
    LOBYTE(v35) = 1;
    sub_232E47218();
    v19 = v26;
    v20 = v34;
    sub_232E6F660();
    v35 = v29;
    v36 = v30;
    LOBYTE(v37) = v16;
    HIBYTE(v37) = v15;
    v38 = v17;
    v39 = v18;
    v40 = v31;
    v41 = v32;
    sub_232E3ABBC();
    v21 = v28;
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
  }
  else
  {
    LOBYTE(v35) = 0;
    sub_232E4725C();
    v20 = v34;
    sub_232E6F660();
    v35 = v29;
    v36 = v30;
    v37 = v12 & 0x101;
    v38 = BYTE2(v12) & 1;
    v39 = HIBYTE(v12) & 1;
    v40 = v31;
    v41 = v32;
    sub_232E3ABBC();
    v22 = v25;
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v10, v20);
}

uint64_t SceneTarget.hashValue.getter()
{
  sub_232E6F780();
  sub_232E6F78C();
  ProcessDescriptor.hash(into:)();
  return sub_232E6F7B0();
}

uint64_t SceneTarget.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  char v42;
  char v43;
  char v44;
  __int128 v45;
  uint64_t v46;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237DB8);
  v4 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  v36 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v37 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237DC0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237DB0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_232E471D4();
  v15 = v46;
  sub_232E6F7BC();
  if (!v15)
  {
    v33 = v7;
    v16 = v37;
    v46 = v11;
    v17 = sub_232E6F648();
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      v32 = *(unsigned __int8 *)(v17 + 32);
      if ((v32 & 1) != 0)
      {
        LOBYTE(v39) = 1;
        sub_232E47218();
        sub_232E6F5DC();
        sub_232E3AC00();
        v18 = v35;
        sub_232E6F63C();
        (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v16, v18);
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v13, v10);
      }
      else
      {
        LOBYTE(v39) = 0;
        sub_232E4725C();
        sub_232E6F5DC();
        sub_232E3AC00();
        sub_232E6F63C();
        v23 = v46;
        (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v9, v6);
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v13, v10);
      }
      v24 = v40;
      v25 = v45;
      v26 = 256;
      if (!v42)
        v26 = 0;
      v27 = v26 | v41;
      v28 = 0x10000;
      if (!v43)
        v28 = 0;
      v29 = 0x1000000;
      if (!v44)
        v29 = 0;
      v30 = v34;
      *v34 = v39;
      v30[1] = v24;
      v30[2] = v27 | v28 | v29;
      *(_OWORD *)(v30 + 3) = v25;
      *((_BYTE *)v30 + 40) = v32;
    }
    else
    {
      v19 = sub_232E6F51C();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
      *v21 = &type metadata for SceneTarget;
      sub_232E6F5E8();
      sub_232E6F510();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v13, v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_232E45728@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SceneTarget.init(from:)(a1, a2);
}

uint64_t sub_232E4573C(_QWORD *a1)
{
  return SceneTarget.encode(to:)(a1);
}

uint64_t sub_232E45754()
{
  sub_232E6F78C();
  return ProcessDescriptor.hash(into:)();
}

uint64_t sub_232E457F4()
{
  sub_232E6F780();
  sub_232E6F78C();
  ProcessDescriptor.hash(into:)();
  return sub_232E6F7B0();
}

void static ProcessDescriptor.chronod.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0xD000000000000011;
  *(_QWORD *)(a1 + 8) = 0x8000000232E7F410;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
}

unint64_t ProcessDescriptor.Request.debugDescription.getter(uint64_t a1, unint64_t a2)
{
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  sub_232DF99C8(a1, a2);
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  return 0xD00000000000001BLL;
}

uint64_t ProcessDescriptor.Request.hash(into:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 <= 1)
    return sub_232E6F78C();
  sub_232E6F78C();
  return sub_232E6F21C();
}

uint64_t sub_232E45A28()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001DLL;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x50746E6572727563;
}

uint64_t sub_232E45A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E47514(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E45AC0()
{
  sub_232E472A0();
  return sub_232E6F7D4();
}

uint64_t sub_232E45AE8()
{
  sub_232E472A0();
  return sub_232E6F7E0();
}

uint64_t sub_232E45B10()
{
  sub_232E47328();
  return sub_232E6F7D4();
}

uint64_t sub_232E45B38()
{
  sub_232E47328();
  return sub_232E6F7E0();
}

uint64_t sub_232E45B60()
{
  sub_232E4736C();
  return sub_232E6F7D4();
}

uint64_t sub_232E45B88()
{
  sub_232E4736C();
  return sub_232E6F7E0();
}

uint64_t sub_232E45BB0()
{
  sub_232E472E4();
  return sub_232E6F7D4();
}

uint64_t sub_232E45BD8()
{
  sub_232E472E4();
  return sub_232E6F7E0();
}

uint64_t ProcessDescriptor.Request.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;

  v27 = a3;
  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237730);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237738);
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237728);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237740);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E472A0();
  v16 = v27;
  sub_232E6F7C8();
  if (!v16)
  {
    v29 = 0;
    sub_232E4736C();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
  }
  if (v16 == 1)
  {
    v30 = 1;
    sub_232E47328();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
  }
  v31 = 2;
  sub_232E472E4();
  v18 = v23;
  sub_232E6F660();
  v19 = v26;
  sub_232E6F684();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t ProcessDescriptor.Request.hashValue.getter(uint64_t a1, unint64_t a2)
{
  sub_232E6F780();
  sub_232E6F78C();
  if (a2 > 1)
    sub_232E6F21C();
  return sub_232E6F7B0();
}

uint64_t ProcessDescriptor.Request.init(from:)(_QWORD *a1)
{
  return sub_232E47680(a1);
}

uint64_t sub_232E45F3C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_232E47680(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_232E45F64(_QWORD *a1)
{
  uint64_t *v1;

  return ProcessDescriptor.Request.encode(to:)(a1, *v1, v1[1]);
}

uint64_t sub_232E45F7C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_232E6F780();
  sub_232E6F78C();
  if (v1 > 1)
    sub_232E6F21C();
  return sub_232E6F7B0();
}

uint64_t sub_232E45FF8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8) <= 1uLL)
    return sub_232E6F78C();
  sub_232E6F78C();
  return sub_232E6F21C();
}

uint64_t sub_232E4606C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_232E6F780();
  sub_232E6F78C();
  if (v1 > 1)
    sub_232E6F21C();
  return sub_232E6F7B0();
}

unint64_t sub_232E460E4()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = v0[1];
  v2 = 0xD00000000000001FLL;
  if (v1 != 1)
    v2 = *v0;
  if (v1)
    v3 = v2;
  else
    v3 = 0xD000000000000010;
  sub_232DF99C8(*v0, v1);
  return v3;
}

unint64_t sub_232E46150()
{
  uint64_t v0;

  return ProcessDescriptor.Request.debugDescription.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_232E46158(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (!v3)
    return !v4;
  if (v3 == 1)
    return v4 == 1;
  if (v4 < 2)
    return 0;
  if (*a1 != *a2 || v3 != v4)
    return sub_232E6F6E4();
  return 1;
}

uint64_t ProcessDescriptor.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ProcessDescriptor.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ProcessDescriptor.canEndAllActivities.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t (*ProcessDescriptor.canEndAllActivities.modify())()
{
  return nullsub_1;
}

uint64_t ProcessDescriptor.canContributeToAllActivities.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t (*ProcessDescriptor.canContributeToAllActivities.modify())()
{
  return nullsub_1;
}

uint64_t ProcessDescriptor.canBypassActivityCountLimits.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t (*ProcessDescriptor.canBypassActivityCountLimits.modify())()
{
  return nullsub_1;
}

uint64_t ProcessDescriptor.isAppIntentsExtension.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t (*ProcessDescriptor.isAppIntentsExtension.modify())()
{
  return nullsub_1;
}

uint64_t ProcessDescriptor.appIntentExtensionBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ProcessDescriptor.appIntentExtensionBundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ProcessDescriptor.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  sub_232E6F798();
  sub_232E6F798();
  sub_232E6F798();
  sub_232E6F798();
  if (!v1)
    return sub_232E6F798();
  sub_232E6F798();
  swift_bridgeObjectRetain();
  sub_232E6F21C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E4637C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_232E463B8 + 4 * byte_232E78050[a1]))(0xD000000000000010, 0x8000000232E7DC30);
}

uint64_t sub_232E463B8()
{
  uint64_t v0;

  return v0 - 9;
}

uint64_t sub_232E46418()
{
  unsigned __int8 *v0;

  return sub_232E4637C(*v0);
}

uint64_t sub_232E46420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E48F60(a1, a2);
  *a3 = result;
  return result;
}

void sub_232E46444(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_232E46450()
{
  sub_232E47B10();
  return sub_232E6F7D4();
}

uint64_t sub_232E46478()
{
  sub_232E47B10();
  return sub_232E6F7E0();
}

uint64_t ProcessDescriptor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  int v17;
  int v18;
  int v19;
  int v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542375F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 16);
  v19 = *(unsigned __int8 *)(v1 + 17);
  v20 = v8;
  v9 = *(unsigned __int8 *)(v1 + 18);
  v17 = *(unsigned __int8 *)(v1 + 19);
  v18 = v9;
  v10 = *(_QWORD *)(v1 + 24);
  v16[0] = *(_QWORD *)(v1 + 32);
  v16[1] = v10;
  v11 = a1[3];
  v12 = a1;
  v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_232E47B10();
  sub_232E6F7C8();
  v26 = 0;
  sub_232E6F684();
  if (!v2)
  {
    v25 = 1;
    sub_232E6F690();
    v24 = 2;
    sub_232E6F690();
    v23 = 3;
    sub_232E6F690();
    v22 = 4;
    sub_232E6F690();
    v21 = 5;
    sub_232E6F66C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t ProcessDescriptor.hashValue.getter()
{
  sub_232E6F780();
  ProcessDescriptor.hash(into:)();
  return sub_232E6F7B0();
}

uint64_t ProcessDescriptor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237DC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E47B10();
  sub_232E6F7BC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v27 = 0;
    v10 = sub_232E6F618();
    v12 = v11;
    v26 = 1;
    swift_bridgeObjectRetain();
    v21 = sub_232E6F624();
    v25 = 2;
    v20 = sub_232E6F624();
    v24 = 3;
    v19 = sub_232E6F624();
    v23 = 4;
    v18 = sub_232E6F624();
    v22 = 5;
    v13 = sub_232E6F5F4();
    v15 = v14;
    v20 &= 1u;
    v21 &= 1u;
    v18 &= 1u;
    v19 &= 1u;
    v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17 = v13;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v21;
    *(_BYTE *)(a2 + 17) = v20;
    *(_BYTE *)(a2 + 18) = v19;
    *(_BYTE *)(a2 + 19) = v18;
    *(_QWORD *)(a2 + 24) = v17;
    *(_QWORD *)(a2 + 32) = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E469A0()
{
  sub_232E6F780();
  ProcessDescriptor.hash(into:)();
  return sub_232E6F7B0();
}

uint64_t sub_232E46A14()
{
  sub_232E6F780();
  ProcessDescriptor.hash(into:)();
  return sub_232E6F7B0();
}

uint64_t sub_232E46A80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ProcessDescriptor.init(from:)(a1, a2);
}

uint64_t sub_232E46A94(_QWORD *a1)
{
  return ProcessDescriptor.encode(to:)(a1);
}

uint64_t sub_232E46AA8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_232E46AD4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  if ((a3 & 1) == 0)
  {
    if ((a6 & 1) != 0)
      return 0;
    if (a2)
    {
      if (a2 != 1)
      {
        if (a5 < 2)
          return 0;
        if (a1 == a4 && a2 == a5)
          return 1;
        return (sub_232E6F6E4() & 1) != 0;
      }
      return a5 == 1;
    }
    return !a5;
  }
  if ((a6 & 1) == 0)
    return 0;
  if (!a2)
    return !a5;
  if (a2 == 1)
    return a5 == 1;
  if (a5 < 2)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return (sub_232E6F6E4() & 1) != 0;
}

unint64_t sub_232E46B74()
{
  unint64_t result;

  result = qword_254237670;
  if (!qword_254237670)
  {
    result = MEMORY[0x23492A124](&unk_232E78F8C, &type metadata for SceneTarget.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237670);
  }
  return result;
}

unint64_t sub_232E46BB8()
{
  unint64_t result;

  result = qword_2542373F0;
  if (!qword_2542373F0)
  {
    result = MEMORY[0x23492A124](&unk_232E78F3C, &type metadata for SceneTarget.Request.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542373F0);
  }
  return result;
}

unint64_t sub_232E46BFC()
{
  unint64_t result;

  result = qword_255FFBF60;
  if (!qword_255FFBF60)
  {
    result = MEMORY[0x23492A124](&unk_232E78EEC, &type metadata for SceneTarget.Request.WidgetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFBF60);
  }
  return result;
}

uint64_t _s11ActivityKit11SceneTargetO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  if ((a1[5] & 1) == 0)
  {
    if ((a2[5] & 1) == 0)
    {
      if (v3 == v5 && v2 == v4)
      {
        v7 = 1;
        goto LABEL_12;
      }
LABEL_11:
      v7 = sub_232E6F6E4();
      goto LABEL_12;
    }
LABEL_7:
    v7 = 0;
    goto LABEL_12;
  }
  if ((a2[5] & 1) == 0)
    goto LABEL_7;
  if (v3 != v5 || v2 != v4)
    goto LABEL_11;
  v7 = 1;
LABEL_12:
  sub_232E01E78();
  sub_232E01E78();
  sub_232E03000();
  sub_232E03000();
  return v7 & 1;
}

_QWORD *sub_232E46DC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC588);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC590);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC580);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v29 = a1;
  v12 = __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_232E46B74();
  v13 = v31;
  sub_232E6F7BC();
  if (v13)
    goto LABEL_6;
  v25 = v4;
  v15 = v27;
  v14 = v28;
  v31 = v8;
  v12 = v10;
  v16 = sub_232E6F648();
  if (*(_QWORD *)(v16 + 16) != 1)
  {
    v19 = sub_232E6F51C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v21 = &type metadata for SceneTarget.Request;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v7);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return v12;
  }
  v24 = v7;
  if ((*(_BYTE *)(v16 + 32) & 1) != 0)
  {
    LOBYTE(v30) = 1;
    sub_232E46BB8();
    v17 = v15;
    v18 = v24;
    sub_232E6F5DC();
    sub_232E3FD64();
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v18);
  }
  else
  {
    LOBYTE(v30) = 0;
    sub_232E46BFC();
    sub_232E6F5DC();
    v28 = (uint64_t)v10;
    sub_232E3FD64();
    sub_232E6F63C();
    v23 = v31;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v28, v24);
  }
  v12 = v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v12;
}

unint64_t sub_232E471D4()
{
  unint64_t result;

  result = qword_2542381B8;
  if (!qword_2542381B8)
  {
    result = MEMORY[0x23492A124](&unk_232E78E9C, &type metadata for SceneTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381B8);
  }
  return result;
}

unint64_t sub_232E47218()
{
  unint64_t result;

  result = qword_254237D70;
  if (!qword_254237D70)
  {
    result = MEMORY[0x23492A124](&unk_232E78E4C, &type metadata for SceneTarget.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237D70);
  }
  return result;
}

unint64_t sub_232E4725C()
{
  unint64_t result;

  result = qword_254237748;
  if (!qword_254237748)
  {
    result = MEMORY[0x23492A124](&unk_232E78DFC, &type metadata for SceneTarget.WidgetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237748);
  }
  return result;
}

unint64_t sub_232E472A0()
{
  unint64_t result;

  result = qword_2542376E0;
  if (!qword_2542376E0)
  {
    result = MEMORY[0x23492A124](&unk_232E78DAC, &type metadata for ProcessDescriptor.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376E0);
  }
  return result;
}

unint64_t sub_232E472E4()
{
  unint64_t result;

  result = qword_254237488;
  if (!qword_254237488)
  {
    result = MEMORY[0x23492A124](&unk_232E78D5C, &type metadata for ProcessDescriptor.Request.ProcessIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237488);
  }
  return result;
}

unint64_t sub_232E47328()
{
  unint64_t result;

  result = qword_255FFC2D0;
  if (!qword_255FFC2D0)
  {
    result = MEMORY[0x23492A124](&unk_232E78D0C, &type metadata for ProcessDescriptor.Request.ContainerAppForCurrentProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFC2D0);
  }
  return result;
}

unint64_t sub_232E4736C()
{
  unint64_t result;

  result = qword_254236890;
  if (!qword_254236890)
  {
    result = MEMORY[0x23492A124](&unk_232E78CBC, &type metadata for ProcessDescriptor.Request.CurrentProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254236890);
  }
  return result;
}

uint64_t sub_232E473B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746567646977 && a2 == 0xE600000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6F74737563 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E47490(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000232E7F450)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_232E47514(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x50746E6572727563 && a2 == 0xEE00737365636F72;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000232E7F470 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000232E7F490)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_232E47680(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC598);
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5A0);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC008);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC5A8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v34 = a1;
  v13 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v12);
  sub_232E472A0();
  v14 = v35;
  sub_232E6F7BC();
  if (!v14)
  {
    v15 = v5;
    v27 = v4;
    v17 = v32;
    v16 = v33;
    v35 = v9;
    v18 = sub_232E6F648();
    if (*(_QWORD *)(v18 + 16) == 1)
    {
      if (*(_BYTE *)(v18 + 32))
      {
        if (*(_BYTE *)(v18 + 32) == 1)
        {
          v37 = 1;
          sub_232E47328();
          sub_232E6F5DC();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v30);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
          v13 = 0;
        }
        else
        {
          v38 = 2;
          sub_232E472E4();
          v22 = v8;
          sub_232E6F5DC();
          v24 = v29;
          v13 = sub_232E6F618();
          v25 = v35;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v24);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v22);
        }
      }
      else
      {
        v36 = 0;
        sub_232E4736C();
        sub_232E6F5DC();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v27);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
        v13 = 0;
      }
    }
    else
    {
      v13 = (uint64_t)v11;
      v19 = sub_232E6F51C();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
      *v21 = &type metadata for ProcessDescriptor.Request;
      sub_232E6F5E8();
      sub_232E6F510();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return v13;
}

unint64_t sub_232E47B10()
{
  unint64_t result;

  result = qword_2542381F0;
  if (!qword_2542381F0)
  {
    result = MEMORY[0x23492A124](&unk_232E78C6C, &type metadata for ProcessDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381F0);
  }
  return result;
}

unint64_t sub_232E47B58()
{
  unint64_t result;

  result = qword_255FFE4B0;
  if (!qword_255FFE4B0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for SceneTarget.Request, &type metadata for SceneTarget.Request);
    atomic_store(result, (unint64_t *)&qword_255FFE4B0);
  }
  return result;
}

unint64_t sub_232E47BA0()
{
  unint64_t result;

  result = qword_255FFE4B8;
  if (!qword_255FFE4B8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for SceneTarget, &type metadata for SceneTarget);
    atomic_store(result, (unint64_t *)&qword_255FFE4B8);
  }
  return result;
}

unint64_t sub_232E47BE8()
{
  unint64_t result;

  result = qword_255FFE4C0;
  if (!qword_255FFE4C0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ProcessDescriptor.Request, &type metadata for ProcessDescriptor.Request);
    atomic_store(result, (unint64_t *)&qword_255FFE4C0);
  }
  return result;
}

unint64_t sub_232E47C30()
{
  unint64_t result;

  result = qword_255FFE4C8;
  if (!qword_255FFE4C8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ProcessDescriptor, &type metadata for ProcessDescriptor);
    atomic_store(result, (unint64_t *)&qword_255FFE4C8);
  }
  return result;
}

uint64_t initializeWithCopy for SceneTarget(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(unsigned __int8 *)(a2 + 40);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  v5 = v4 == 1;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v8 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for SceneTarget(uint64_t a1, uint64_t a2)
{
  unsigned int v4;

  if (a1 != a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
    *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
    *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4 == 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SceneTarget(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;

  if (a1 != a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SceneTarget(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SceneTarget(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_232E47EA4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_232E47EC0(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

uint64_t destroy for SceneTarget.Request(uint64_t a1)
{
  return sub_232E47EFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t _s11ActivityKit11SceneTargetO7RequestOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((unsigned __int8 *)a2 + 16);
  sub_232DF99C4(*a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t *assignWithCopy for SceneTarget.Request(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((unsigned __int8 *)a2 + 16);
  sub_232DF99C4(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = *((unsigned __int8 *)a1 + 16);
  *a1 = v3;
  a1[1] = v4;
  *((_BYTE *)a1 + 16) = v5;
  sub_232E47EFC(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for SceneTarget.Request(uint64_t *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_BYTE *)a1 + 16) = v3;
  sub_232E47EFC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SceneTarget.Request(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SceneTarget.Request(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_232E48080(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_232E48088(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SceneTarget.Request()
{
  return &type metadata for SceneTarget.Request;
}

uint64_t _s11ActivityKit17ProcessDescriptorVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ProcessDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ProcessDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ProcessDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProcessDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProcessDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessDescriptor.Request()
{
  return &type metadata for ProcessDescriptor.Request;
}

uint64_t getEnumTagSinglePayload for ProcessDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProcessDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_232E4837C + 4 * byte_232E7805B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_232E483B0 + 4 * byte_232E78056[v4]))();
}

uint64_t sub_232E483B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E483B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E483C0);
  return result;
}

uint64_t sub_232E483CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E483D4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_232E483D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E483E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProcessDescriptor.CodingKeys()
{
  return &type metadata for ProcessDescriptor.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ProcessDescriptor.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E48448 + 4 * byte_232E78065[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232E4847C + 4 * byte_232E78060[v4]))();
}

uint64_t sub_232E4847C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E48484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E4848CLL);
  return result;
}

uint64_t sub_232E48498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E484A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232E484A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E484AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProcessDescriptor.Request.CodingKeys()
{
  return &type metadata for ProcessDescriptor.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for ProcessDescriptor.Request.CurrentProcessCodingKeys()
{
  return &type metadata for ProcessDescriptor.Request.CurrentProcessCodingKeys;
}

ValueMetadata *type metadata accessor for ProcessDescriptor.Request.ContainerAppForCurrentProcessCodingKeys()
{
  return &type metadata for ProcessDescriptor.Request.ContainerAppForCurrentProcessCodingKeys;
}

ValueMetadata *type metadata accessor for ProcessDescriptor.Request.ProcessIdentifierCodingKeys()
{
  return &type metadata for ProcessDescriptor.Request.ProcessIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for SceneTarget.CodingKeys()
{
  return &type metadata for SceneTarget.CodingKeys;
}

ValueMetadata *type metadata accessor for SceneTarget.WidgetCodingKeys()
{
  return &type metadata for SceneTarget.WidgetCodingKeys;
}

ValueMetadata *type metadata accessor for SceneTarget.CustomCodingKeys()
{
  return &type metadata for SceneTarget.CustomCodingKeys;
}

uint64_t _s11ActivityKit11SceneTargetO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E4857C + 4 * byte_232E7806F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E485B0 + 4 * byte_232E7806A[v4]))();
}

uint64_t sub_232E485B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E485B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E485C0);
  return result;
}

uint64_t sub_232E485CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E485D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E485D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E485E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SceneTarget.Request.CodingKeys()
{
  return &type metadata for SceneTarget.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SceneTarget.Request.WidgetCodingKeys()
{
  return &type metadata for SceneTarget.Request.WidgetCodingKeys;
}

uint64_t _s11ActivityKit17ProcessDescriptorV7RequestO27ProcessIdentifierCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E4864C + 4 * byte_232E78074[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E4866C + 4 * byte_232E78079[v4]))();
}

_BYTE *sub_232E4864C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E4866C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E48674(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E4867C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E48684(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E4868C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SceneTarget.Request.CustomCodingKeys()
{
  return &type metadata for SceneTarget.Request.CustomCodingKeys;
}

unint64_t sub_232E486AC()
{
  unint64_t result;

  result = qword_255FFE4D0;
  if (!qword_255FFE4D0)
  {
    result = MEMORY[0x23492A124](&unk_232E785E4, &type metadata for SceneTarget.Request.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE4D0);
  }
  return result;
}

unint64_t sub_232E486F4()
{
  unint64_t result;

  result = qword_255FFE4D8;
  if (!qword_255FFE4D8)
  {
    result = MEMORY[0x23492A124](&unk_232E7869C, &type metadata for SceneTarget.Request.WidgetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE4D8);
  }
  return result;
}

unint64_t sub_232E4873C()
{
  unint64_t result;

  result = qword_255FFE4E0;
  if (!qword_255FFE4E0)
  {
    result = MEMORY[0x23492A124](&unk_232E78754, &type metadata for SceneTarget.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE4E0);
  }
  return result;
}

unint64_t sub_232E48784()
{
  unint64_t result;

  result = qword_255FFE4E8;
  if (!qword_255FFE4E8)
  {
    result = MEMORY[0x23492A124](&unk_232E7880C, &type metadata for SceneTarget.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE4E8);
  }
  return result;
}

unint64_t sub_232E487CC()
{
  unint64_t result;

  result = qword_255FFE4F0;
  if (!qword_255FFE4F0)
  {
    result = MEMORY[0x23492A124](&unk_232E788C4, &type metadata for SceneTarget.WidgetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE4F0);
  }
  return result;
}

unint64_t sub_232E48814()
{
  unint64_t result;

  result = qword_255FFE4F8;
  if (!qword_255FFE4F8)
  {
    result = MEMORY[0x23492A124](&unk_232E7897C, &type metadata for SceneTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE4F8);
  }
  return result;
}

unint64_t sub_232E4885C()
{
  unint64_t result;

  result = qword_255FFE500;
  if (!qword_255FFE500)
  {
    result = MEMORY[0x23492A124](&unk_232E78A34, &type metadata for ProcessDescriptor.Request.ProcessIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE500);
  }
  return result;
}

unint64_t sub_232E488A4()
{
  unint64_t result;

  result = qword_255FFE508;
  if (!qword_255FFE508)
  {
    result = MEMORY[0x23492A124](&unk_232E78B8C, &type metadata for ProcessDescriptor.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE508);
  }
  return result;
}

unint64_t sub_232E488EC()
{
  unint64_t result;

  result = qword_255FFE510;
  if (!qword_255FFE510)
  {
    result = MEMORY[0x23492A124](&unk_232E78C44, &type metadata for ProcessDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE510);
  }
  return result;
}

unint64_t sub_232E48934()
{
  unint64_t result;

  result = qword_254238200;
  if (!qword_254238200)
  {
    result = MEMORY[0x23492A124](&unk_232E78BB4, &type metadata for ProcessDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254238200);
  }
  return result;
}

unint64_t sub_232E4897C()
{
  unint64_t result;

  result = qword_2542381F8;
  if (!qword_2542381F8)
  {
    result = MEMORY[0x23492A124](&unk_232E78BDC, &type metadata for ProcessDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381F8);
  }
  return result;
}

unint64_t sub_232E489C4()
{
  unint64_t result;

  result = qword_2542376C8;
  if (!qword_2542376C8)
  {
    result = MEMORY[0x23492A124](&unk_232E78AAC, &type metadata for ProcessDescriptor.Request.CurrentProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376C8);
  }
  return result;
}

unint64_t sub_232E48A0C()
{
  unint64_t result;

  result = qword_2542376C0;
  if (!qword_2542376C0)
  {
    result = MEMORY[0x23492A124](&unk_232E78AD4, &type metadata for ProcessDescriptor.Request.CurrentProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376C0);
  }
  return result;
}

unint64_t sub_232E48A54()
{
  unint64_t result;

  result = qword_2542376B8;
  if (!qword_2542376B8)
  {
    result = MEMORY[0x23492A124](&unk_232E78A5C, &type metadata for ProcessDescriptor.Request.ContainerAppForCurrentProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376B8);
  }
  return result;
}

unint64_t sub_232E48A9C()
{
  unint64_t result;

  result = qword_2542376B0;
  if (!qword_2542376B0)
  {
    result = MEMORY[0x23492A124](&unk_232E78A84, &type metadata for ProcessDescriptor.Request.ContainerAppForCurrentProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376B0);
  }
  return result;
}

unint64_t sub_232E48AE4()
{
  unint64_t result;

  result = qword_2542376D8;
  if (!qword_2542376D8)
  {
    result = MEMORY[0x23492A124](&unk_232E789A4, &type metadata for ProcessDescriptor.Request.ProcessIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376D8);
  }
  return result;
}

unint64_t sub_232E48B2C()
{
  unint64_t result;

  result = qword_2542376D0;
  if (!qword_2542376D0)
  {
    result = MEMORY[0x23492A124](&unk_232E789CC, &type metadata for ProcessDescriptor.Request.ProcessIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376D0);
  }
  return result;
}

unint64_t sub_232E48B74()
{
  unint64_t result;

  result = qword_2542376F0;
  if (!qword_2542376F0)
  {
    result = MEMORY[0x23492A124](&unk_232E78AFC, &type metadata for ProcessDescriptor.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376F0);
  }
  return result;
}

unint64_t sub_232E48BBC()
{
  unint64_t result;

  result = qword_2542376E8;
  if (!qword_2542376E8)
  {
    result = MEMORY[0x23492A124](&unk_232E78B24, &type metadata for ProcessDescriptor.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376E8);
  }
  return result;
}

unint64_t sub_232E48C04()
{
  unint64_t result;

  result = qword_2542381E8;
  if (!qword_2542381E8)
  {
    result = MEMORY[0x23492A124](&unk_232E78834, &type metadata for SceneTarget.WidgetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381E8);
  }
  return result;
}

unint64_t sub_232E48C4C()
{
  unint64_t result;

  result = qword_2542381E0;
  if (!qword_2542381E0)
  {
    result = MEMORY[0x23492A124](&unk_232E7885C, &type metadata for SceneTarget.WidgetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381E0);
  }
  return result;
}

unint64_t sub_232E48C94()
{
  unint64_t result;

  result = qword_2542381D8;
  if (!qword_2542381D8)
  {
    result = MEMORY[0x23492A124](&unk_232E7877C, &type metadata for SceneTarget.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381D8);
  }
  return result;
}

unint64_t sub_232E48CDC()
{
  unint64_t result;

  result = qword_2542381D0;
  if (!qword_2542381D0)
  {
    result = MEMORY[0x23492A124](&unk_232E787A4, &type metadata for SceneTarget.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381D0);
  }
  return result;
}

unint64_t sub_232E48D24()
{
  unint64_t result;

  result = qword_2542381C8;
  if (!qword_2542381C8)
  {
    result = MEMORY[0x23492A124](&unk_232E788EC, &type metadata for SceneTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381C8);
  }
  return result;
}

unint64_t sub_232E48D6C()
{
  unint64_t result;

  result = qword_2542381C0;
  if (!qword_2542381C0)
  {
    result = MEMORY[0x23492A124](&unk_232E78914, &type metadata for SceneTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542381C0);
  }
  return result;
}

unint64_t sub_232E48DB4()
{
  unint64_t result;

  result = qword_2542376A0;
  if (!qword_2542376A0)
  {
    result = MEMORY[0x23492A124](&unk_232E7860C, &type metadata for SceneTarget.Request.WidgetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542376A0);
  }
  return result;
}

unint64_t sub_232E48DFC()
{
  unint64_t result;

  result = qword_254237698;
  if (!qword_254237698)
  {
    result = MEMORY[0x23492A124](&unk_232E78634, &type metadata for SceneTarget.Request.WidgetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237698);
  }
  return result;
}

unint64_t sub_232E48E44()
{
  unint64_t result;

  result = qword_254237690;
  if (!qword_254237690)
  {
    result = MEMORY[0x23492A124](&unk_232E78554, &type metadata for SceneTarget.Request.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237690);
  }
  return result;
}

unint64_t sub_232E48E8C()
{
  unint64_t result;

  result = qword_254237688;
  if (!qword_254237688)
  {
    result = MEMORY[0x23492A124](&unk_232E7857C, &type metadata for SceneTarget.Request.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237688);
  }
  return result;
}

unint64_t sub_232E48ED4()
{
  unint64_t result;

  result = qword_254237680;
  if (!qword_254237680)
  {
    result = MEMORY[0x23492A124](&unk_232E786C4, &type metadata for SceneTarget.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237680);
  }
  return result;
}

unint64_t sub_232E48F1C()
{
  unint64_t result;

  result = qword_254237678;
  if (!qword_254237678)
  {
    result = MEMORY[0x23492A124](&unk_232E786EC, &type metadata for SceneTarget.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237678);
  }
  return result;
}

uint64_t sub_232E48F60(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000232E7DC30 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000232E7F4B0 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000232E7F4D0 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000232E7F4F0 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000232E7F510 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000232E7F530)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t ActivityQoSPredicate.init(activityIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static ActivityQoSPredicate.all.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ActivityQoSPredicate.activityIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

Swift::Bool __swiftcall ActivityQoSPredicate.matches(activityIdentifier:)(Swift::String activityIdentifier)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  Swift::Bool result;
  _QWORD *v8;
  uint64_t i;
  uint64_t v10;
  BOOL v11;

  v2 = *v1;
  if (!*v1)
    return 1;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  object = activityIdentifier._object;
  countAndFlagsBits = activityIdentifier._countAndFlagsBits;
  if (*(_QWORD *)(v2 + 32) == activityIdentifier._countAndFlagsBits
    && *(void **)(v2 + 40) == activityIdentifier._object)
  {
    return 1;
  }
  result = sub_232E6F6E4();
  if (result)
    return 1;
  if (v3 == 1)
    return 0;
  v8 = (_QWORD *)(v2 + 56);
  for (i = 1; ; ++i)
  {
    v10 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v11 = *(v8 - 1) == countAndFlagsBits && *v8 == (_QWORD)object;
    if (v11 || (sub_232E6F6E4() & 1) != 0)
      return 1;
    result = 0;
    v8 += 2;
    if (v10 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_232E49294()
{
  sub_232E49404();
  return sub_232E6F7D4();
}

uint64_t sub_232E492BC()
{
  sub_232E49404();
  return sub_232E6F7E0();
}

uint64_t ActivityQoSPredicate.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE518);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E49404();
  sub_232E6F7C8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
  sub_232E09294(&qword_254236860, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_232E6F678();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_232E49404()
{
  unint64_t result;

  result = qword_255FFE520;
  if (!qword_255FFE520)
  {
    result = MEMORY[0x23492A124](&unk_232E791B8, &type metadata for ActivityQoSPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE520);
  }
  return result;
}

uint64_t ActivityQoSPredicate.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE528);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E49404();
  sub_232E6F7BC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237F08);
    sub_232E09294((unint64_t *)&qword_254237F10, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_232E6F60C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232E49588@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActivityQoSPredicate.init(from:)(a1, a2);
}

uint64_t sub_232E4959C(_QWORD *a1)
{
  return ActivityQoSPredicate.encode(to:)(a1);
}

uint64_t sub_232E495B0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E496D4();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t static ActivityQoSPredicate.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;

  v2 = *a1;
  v3 = *a2;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    return (v2 | v3) == 0;
  else
    return sub_232E21218((_QWORD *)v2, (_QWORD *)v3);
}

unint64_t sub_232E496A0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232E16E20();
  a1[2] = sub_232E496D4();
  result = sub_232E49718();
  a1[3] = result;
  return result;
}

unint64_t sub_232E496D4()
{
  unint64_t result;

  result = qword_255FFE530;
  if (!qword_255FFE530)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoSPredicate, &type metadata for ActivityQoSPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFE530);
  }
  return result;
}

unint64_t sub_232E49718()
{
  unint64_t result;

  result = qword_255FFE538;
  if (!qword_255FFE538)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoSPredicate, &type metadata for ActivityQoSPredicate);
    atomic_store(result, (unint64_t *)&qword_255FFE538);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityQoSPredicate()
{
  return &type metadata for ActivityQoSPredicate;
}

uint64_t storeEnumTagSinglePayload for ActivityQoSPredicate.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E497AC + 4 * byte_232E78FE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E497CC + 4 * byte_232E78FE5[v4]))();
}

_BYTE *sub_232E497AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E497CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E497D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E497DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E497E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E497EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityQoSPredicate.CodingKeys()
{
  return &type metadata for ActivityQoSPredicate.CodingKeys;
}

unint64_t sub_232E4980C()
{
  unint64_t result;

  result = qword_255FFE540;
  if (!qword_255FFE540)
  {
    result = MEMORY[0x23492A124](&unk_232E79190, &type metadata for ActivityQoSPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE540);
  }
  return result;
}

unint64_t sub_232E49854()
{
  unint64_t result;

  result = qword_255FFE548;
  if (!qword_255FFE548)
  {
    result = MEMORY[0x23492A124](&unk_232E79100, &type metadata for ActivityQoSPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE548);
  }
  return result;
}

unint64_t sub_232E4989C()
{
  unint64_t result;

  result = qword_255FFE550;
  if (!qword_255FFE550)
  {
    result = MEMORY[0x23492A124](&unk_232E79128, &type metadata for ActivityQoSPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE550);
  }
  return result;
}

unint64_t sub_232E498E0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6;

  if ((a3 & 1) != 0)
  {
    v6 = 0xD00000000000001FLL;
    if (a2 != 1)
      v6 = a1;
    if (a2)
      return v6;
    else
      return 0xD000000000000010;
  }
  else
  {
    sub_232E6F4E0();
    swift_bridgeObjectRelease();
    sub_232DF99C8(a1, a2);
    sub_232E6F228();
    swift_bridgeObjectRelease();
    sub_232E6F228();
    sub_232E47EFC(a1, a2, 0);
    return 0xD00000000000001ALL;
  }
}

uint64_t ActivityRequest.init(attributesType:attributesData:initialOpaqueContent:platterTarget:presentationOptions:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:identifier:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t *a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  int *v25;
  uint64_t result;
  char *v27;
  char *v28;

  v17 = a1[1];
  v18 = *a8;
  v19 = *((_BYTE *)a8 + 8);
  v20 = *((_BYTE *)a8 + 9);
  v21 = *((_BYTE *)a8 + 10);
  v22 = *((_BYTE *)a8 + 11);
  v23 = *((_BYTE *)a8 + 12);
  v24 = a8[2];
  a9[2] = *a1;
  a9[3] = v17;
  a9[4] = a2;
  a9[5] = a3;
  v25 = (int *)type metadata accessor for ActivityRequest();
  result = sub_232E4A714(a4, (uint64_t)a9 + v25[7]);
  v27 = (char *)a9 + v25[8];
  *(_QWORD *)v27 = a5;
  *((_QWORD *)v27 + 1) = a6;
  v27[16] = a7 & 1;
  v28 = (char *)a9 + v25[9];
  *(_QWORD *)v28 = v18;
  v28[8] = v19;
  v28[9] = v20;
  v28[10] = v21;
  v28[11] = v22;
  v28[12] = v23;
  *((_QWORD *)v28 + 2) = v24;
  *(_QWORD *)((char *)a9 + v25[10]) = a10;
  *((_BYTE *)a9 + v25[11]) = a11;
  *((_BYTE *)a9 + v25[12]) = a12;
  *((_BYTE *)a9 + v25[13]) = a13;
  *a9 = a14;
  a9[1] = a15;
  *((_BYTE *)a9 + v25[14]) = 4;
  return result;
}

void ActivityRequest.init<A, B>(attributes:attributesType:initialContent:platterTarget:presentationOptions:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:identifier:)()
{
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E49BE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[96];

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = &v22[-v8];
  v10 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v5 - 216) = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v4[1];
  *(_QWORD *)(v5 - 264) = *v4;
  v13 = *v2;
  v14 = *((unsigned __int8 *)v2 + 8);
  *(_DWORD *)(v5 - 240) = *((unsigned __int8 *)v2 + 9);
  *(_DWORD *)(v5 - 236) = v14;
  v15 = *((unsigned __int8 *)v2 + 10);
  *(_DWORD *)(v5 - 248) = *((unsigned __int8 *)v2 + 11);
  *(_DWORD *)(v5 - 244) = v15;
  *(_DWORD *)(v5 - 252) = *((unsigned __int8 *)v2 + 12);
  v16 = (void *)v2[2];
  sub_232E6ECF4();
  swift_allocObject();
  sub_232E6ECE8();
  *(_QWORD *)(v5 - 152) = v1;
  v17 = *(_QWORD *)(v5 - 176);
  v18 = sub_232E6ECDC();
  if (!v3)
  {
    *(_QWORD *)(v5 - 296) = v18;
    *(_QWORD *)(v5 - 288) = v19;
    *(_QWORD *)(v5 - 280) = v12;
    *(_QWORD *)(v5 - 272) = v13;
    *(_QWORD *)(v5 - 184) = v16;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 16))(v9, *(_QWORD *)(v5 - 160), a1);
    OpaqueActivityContent.init<A>(encoding:)(*(_QWORD *)(v5 - 216));
  }
  v20 = *(_QWORD *)(v5 - 160);
  swift_bridgeObjectRelease();
  swift_release();
  sub_232E47EFC(*(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 136), *(_DWORD *)(v5 - 140) & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, a1);
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(*(_QWORD *)(v5 - 152), v17);
}

void ActivityRequest.init<A, B>(attributes:attributesType:initialContent:platterTarget:presentationOptions:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:identifier:protectionClass:)()
{
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E49FCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[96];

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = &v24[-v8];
  v10 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v5 - 208) = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v4[1];
  *(_QWORD *)(v5 - 264) = *v4;
  v13 = *v2;
  v14 = *((unsigned __int8 *)v2 + 8);
  *(_DWORD *)(v5 - 240) = *((unsigned __int8 *)v2 + 9);
  *(_DWORD *)(v5 - 236) = v14;
  v15 = *((unsigned __int8 *)v2 + 10);
  *(_DWORD *)(v5 - 248) = *((unsigned __int8 *)v2 + 11);
  *(_DWORD *)(v5 - 244) = v15;
  *(_DWORD *)(v5 - 252) = *((unsigned __int8 *)v2 + 12);
  v16 = (void *)v2[2];
  sub_232E6ECF4();
  swift_allocObject();
  sub_232E6ECE8();
  *(_QWORD *)(v5 - 152) = v1;
  v17 = *(_QWORD *)(v5 - 176);
  v18 = sub_232E6ECDC();
  if (!v3)
  {
    *(_QWORD *)(v5 - 296) = v18;
    *(_QWORD *)(v5 - 288) = v19;
    *(_QWORD *)(v5 - 280) = v12;
    *(_QWORD *)(v5 - 272) = v13;
    *(_QWORD *)(v5 - 184) = v16;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 16))(v9, *(_QWORD *)(v5 - 160), a1);
    OpaqueActivityContent.init<A>(encoding:)(*(_QWORD *)(v5 - 208));
  }
  v20 = v7;
  v21 = a1;
  v22 = *(_QWORD *)(v5 - 160);
  swift_bridgeObjectRelease();
  swift_release();
  sub_232E47EFC(*(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 136), *(_DWORD *)(v5 - 140) & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(*(_QWORD *)(v5 - 152), v17);
}

uint64_t ActivityRequest.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityRequest.attributesType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ActivityRequest.attributesData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_232DE4A2C(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t ActivityRequest.initialOpaqueContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActivityRequest();
  return sub_232DED470(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
}

uint64_t ActivityRequest.platterTarget.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ActivityRequest() + 32));
  v2 = *v1;
  sub_232DF99C4(*v1, v1[1], *((unsigned __int8 *)v1 + 16));
  return v2;
}

uint64_t ActivityRequest.presentationOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  void *v10;
  id v11;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ActivityRequest() + 36));
  v4 = *v3;
  v5 = *((_BYTE *)v3 + 8);
  v6 = *((_BYTE *)v3 + 9);
  v7 = *((_BYTE *)v3 + 10);
  v8 = *((_BYTE *)v3 + 11);
  v9 = *((_BYTE *)v3 + 12);
  v10 = (void *)v3[2];
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = v6;
  *(_BYTE *)(a1 + 10) = v7;
  *(_BYTE *)(a1 + 11) = v8;
  *(_BYTE *)(a1 + 12) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  v11 = v10;
  return swift_bridgeObjectRetain();
}

uint64_t ActivityRequest.contentSourceRequests.getter()
{
  type metadata accessor for ActivityRequest();
  return swift_bridgeObjectRetain();
}

uint64_t ActivityRequest.isEphemeral.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActivityRequest() + 44));
}

uint64_t ActivityRequest.isUnbounded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActivityRequest() + 48));
}

uint64_t ActivityRequest.isMomentary.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActivityRequest() + 52));
}

uint64_t ActivityRequest.protectionClass.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActivityRequest() + 56));
}

uint64_t ActivityRequest.isCustomSceneBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActivityRequest() + 32) + 16);
}

uint64_t ActivityRequest.init(attributesType:attributesData:initialOpaqueContent:platterTarget:presentationOptions:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:identifier:protectionClass:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t *a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  int *v26;
  uint64_t result;
  char *v28;
  char *v29;

  v18 = a1[1];
  v19 = *a8;
  v20 = *((_BYTE *)a8 + 8);
  v21 = *((_BYTE *)a8 + 9);
  v22 = *((_BYTE *)a8 + 10);
  v23 = *((_BYTE *)a8 + 11);
  v24 = *((_BYTE *)a8 + 12);
  v25 = a8[2];
  a9[2] = *a1;
  a9[3] = v18;
  a9[4] = a2;
  a9[5] = a3;
  v26 = (int *)type metadata accessor for ActivityRequest();
  result = sub_232E4A714(a4, (uint64_t)a9 + v26[7]);
  v28 = (char *)a9 + v26[8];
  *(_QWORD *)v28 = a5;
  *((_QWORD *)v28 + 1) = a6;
  v28[16] = a7 & 1;
  v29 = (char *)a9 + v26[9];
  *(_QWORD *)v29 = v19;
  v29[8] = v20;
  v29[9] = v21;
  v29[10] = v22;
  v29[11] = v23;
  v29[12] = v24;
  *((_QWORD *)v29 + 2) = v25;
  *(_QWORD *)((char *)a9 + v26[10]) = a10;
  *((_BYTE *)a9 + v26[11]) = a11;
  *((_BYTE *)a9 + v26[12]) = a12;
  *((_BYTE *)a9 + v26[13]) = a13;
  *a9 = a14;
  a9[1] = a15;
  *((_BYTE *)a9 + v26[14]) = a16;
  return result;
}

uint64_t type metadata accessor for ActivityRequest()
{
  uint64_t result;

  result = qword_2542382A8;
  if (!qword_2542382A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232E4A714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OpaqueActivityContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E4A75C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E4A794 + 4 * byte_232E79208[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_232E4A794()
{
  return 0x7475626972747461;
}

unint64_t sub_232E4A7C8()
{
  return 0xD000000000000014;
}

uint64_t sub_232E4A840()
{
  return 0x656D656870457369;
}

uint64_t sub_232E4A860()
{
  return 0x746E656D6F4D7369;
}

uint64_t sub_232E4A880()
{
  return 0x69746365746F7270;
}

uint64_t sub_232E4A8A4()
{
  return 0x6E756F626E557369;
}

uint64_t sub_232E4A8C4()
{
  unsigned __int8 *v0;

  return sub_232E4A75C(*v0);
}

uint64_t sub_232E4A8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E4D068(a1, a2);
  *a3 = result;
  return result;
}

void sub_232E4A8F0(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_232E4A8FC()
{
  sub_232E4BE40();
  return sub_232E6F7D4();
}

uint64_t sub_232E4A924()
{
  sub_232E4BE40();
  return sub_232E6F7E0();
}

uint64_t ActivityRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  __int128 *v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  char v24;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237710);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E4BE40();
  sub_232E6F7C8();
  LOBYTE(v22) = 0;
  sub_232E6F66C();
  if (!v2)
  {
    v9 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + 16);
    *((_QWORD *)&v22 + 1) = v9;
    v24 = 1;
    sub_232E20C78();
    sub_232E6F6A8();
    v22 = *(_OWORD *)(v3 + 32);
    v24 = 2;
    sub_232E069B0();
    sub_232E6F6A8();
    v10 = (int *)type metadata accessor for ActivityRequest();
    LOBYTE(v22) = 3;
    type metadata accessor for OpaqueActivityContent();
    sub_232DDDAD8((unint64_t *)&unk_254237410, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
    sub_232E6F6A8();
    v11 = (__int128 *)(v3 + v10[8]);
    v12 = *((_BYTE *)v11 + 16);
    v22 = *v11;
    LOBYTE(v23) = v12;
    v24 = 4;
    sub_232E4BE84();
    sub_232E6F6A8();
    v13 = (uint64_t *)(v3 + v10[9]);
    v14 = *v13;
    v15 = *((_BYTE *)v13 + 8);
    v16 = *((_BYTE *)v13 + 9);
    v17 = *((_BYTE *)v13 + 10);
    v18 = *((_BYTE *)v13 + 11);
    v19 = *((_BYTE *)v13 + 12);
    v20 = v13[2];
    *(_QWORD *)&v22 = v14;
    BYTE8(v22) = v15;
    BYTE9(v22) = v16;
    BYTE10(v22) = v17;
    BYTE11(v22) = v18;
    BYTE12(v22) = v19;
    v23 = v20;
    v24 = 5;
    sub_232E4BEC8();
    sub_232E6F6A8();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v10[10]);
    v24 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237700);
    sub_232E4C01C(&qword_254237708, (uint64_t (*)(void))sub_232E4BF0C, MEMORY[0x24BEE12A0]);
    sub_232E6F6A8();
    LOBYTE(v22) = 7;
    sub_232E6F690();
    LOBYTE(v22) = 8;
    sub_232E6F690();
    LOBYTE(v22) = 9;
    sub_232E6F690();
    LOBYTE(v22) = *(_BYTE *)(v3 + v10[14]);
    v24 = 10;
    sub_232E4BF50();
    sub_232E6F678();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void ActivityRequest.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  char v18;
  char *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int *v32;
  uint64_t *v33;
  __int128 v34;
  uint64_t v35;
  char v36;

  v5 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC578);
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (int *)type metadata accessor for ActivityRequest();
  MEMORY[0x24BDAC7A8](v32);
  v33 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_232E4BE40();
  sub_232E6F7BC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    v28 = a2;
    v29 = v8;
    LOBYTE(v34) = 0;
    v13 = sub_232E6F5F4();
    v14 = v33;
    *v33 = v13;
    v14[1] = v15;
    v36 = 1;
    sub_232E16F30();
    sub_232E6F63C();
    v16 = *((_QWORD *)&v34 + 1);
    v14[2] = v34;
    v14[3] = v16;
    v36 = 2;
    sub_232E0683C();
    sub_232E6F63C();
    *((_OWORD *)v14 + 2) = v34;
    LOBYTE(v34) = 3;
    sub_232DDDAD8(&qword_2542379A0, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
    sub_232E6F63C();
    v17 = v32;
    sub_232E4A714((uint64_t)v7, (uint64_t)v14 + v32[7]);
    v36 = 4;
    sub_232E4BF94();
    sub_232E6F63C();
    v18 = v35;
    v19 = (char *)v14 + v17[8];
    *(_OWORD *)v19 = v34;
    v19[16] = v18;
    v36 = 5;
    sub_232E4BFD8();
    sub_232E6F63C();
    v20 = BYTE8(v34);
    v21 = BYTE9(v34);
    v22 = BYTE10(v34);
    v23 = BYTE11(v34);
    v24 = BYTE12(v34);
    v25 = v35;
    v26 = (char *)v14 + v17[9];
    *(_QWORD *)v26 = v34;
    v26[8] = v20;
    v26[9] = v21;
    v26[10] = v22;
    v26[11] = v23;
    v26[12] = v24;
    *((_QWORD *)v26 + 2) = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237700);
    v36 = 6;
    sub_232E4C01C(&qword_255FFC528, (uint64_t (*)(void))sub_232E4C084, MEMORY[0x24BEE12D0]);
    sub_232E6F63C();
    *(uint64_t *)((char *)v14 + v17[10]) = v34;
    LOBYTE(v34) = 7;
    *((_BYTE *)v14 + v17[11]) = sub_232E6F624() & 1;
    LOBYTE(v34) = 8;
    *((_BYTE *)v14 + v17[12]) = sub_232E6F624() & 1;
    LOBYTE(v34) = 9;
    *((_BYTE *)v33 + v32[13]) = sub_232E6F624() & 1;
    v36 = 10;
    sub_232E4C0C8();
    sub_232E6F60C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
    v27 = (uint64_t)v33;
    *((_BYTE *)v33 + v32[14]) = v34;
    sub_232DED470(v27, v28, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    sub_232DF51B8(v27, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
  }
}

void sub_232E4B3D4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ActivityRequest.init(from:)(a1, a2);
}

uint64_t sub_232E4B3E8(_QWORD *a1)
{
  return ActivityRequest.encode(to:)(a1);
}

uint64_t ActivityRequest.description.getter()
{
  unint64_t *v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  unint64_t v52;
  unint64_t v53;

  v1 = v0;
  v2 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v51, "Identifier: ");
  BYTE5(v51[1]) = 0;
  HIWORD(v51[1]) = -5120;
  v5 = v0[1];
  v52 = *v0;
  v53 = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542373A8);
  sub_232E6F1F8();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v49 = v51[1];
  v50 = v51[0];
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v51[0] = 0xD000000000000011;
  v51[1] = 0x8000000232E7E820;
  v52 = 0;
  v53 = 0xE000000000000000;
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v52 = 0xD000000000000011;
  v53 = 0x8000000232E7E820;
  swift_bridgeObjectRetain();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v47 = v51[1];
  v48 = v51[0];
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v51[0] = 0xD000000000000024;
  v51[1] = 0x8000000232E7F560;
  v6 = (int *)type metadata accessor for ActivityRequest();
  sub_232DED470((uint64_t)v0 + v6[7], (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
  sub_232E6F1F8();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v45 = v51[1];
  v46 = v51[0];
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v51[0] = 0xD000000000000010;
  v51[1] = 0x8000000232E7F590;
  v7 = (unint64_t *)((char *)v0 + v6[8]);
  v8 = *v7;
  v9 = v7[1];
  v10 = *((_BYTE *)v7 + 16);
  sub_232DF99C4(*v7, v9, v10);
  sub_232E498E0(v8, v9, v10);
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v43 = v51[1];
  v44 = v51[0];
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v52 = 0xD000000000000016;
  v53 = 0x8000000232E7F5B0;
  v11 = (char *)v1 + v6[9];
  v12 = *(_QWORD *)v11;
  v13 = v11[8];
  v14 = v11[9];
  v15 = v11[10];
  v16 = v11[11];
  v17 = v11[12];
  v18 = *((_QWORD *)v11 + 2);
  v51[0] = v12;
  LOBYTE(v51[1]) = v13;
  BYTE1(v51[1]) = v14;
  BYTE2(v51[1]) = v15;
  BYTE3(v51[1]) = v16;
  BYTE4(v51[1]) = v17;
  v51[2] = v18;
  ActivityPresentationOptions.description.getter();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v41 = v53;
  v42 = v52;
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v51[0] = 0xD000000000000019;
  v51[1] = 0x8000000232E7F5D0;
  v19 = swift_bridgeObjectRetain();
  MEMORY[0x2349296F8](v19, &type metadata for ActivityContentSource.Request);
  swift_bridgeObjectRelease();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v39 = v51[1];
  v40 = v51[0];
  strcpy((char *)v51, "Ephemeral: ");
  HIDWORD(v51[1]) = -352321536;
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v37 = v51[1];
  v38 = v51[0];
  strcpy((char *)v51, "Unbounded: ");
  HIDWORD(v51[1]) = -352321536;
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v20 = v51[1];
  v36 = v51[0];
  strcpy((char *)v51, "Momentary: ");
  HIDWORD(v51[1]) = -352321536;
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v21 = v51[0];
  v22 = v51[1];
  v51[0] = 0;
  v51[1] = 0xE000000000000000;
  sub_232E6F4E0();
  swift_bridgeObjectRelease();
  v51[0] = 0xD000000000000012;
  v51[1] = 0x8000000232E7F5F0;
  LOBYTE(v52) = *((_BYTE *)v1 + v6[14]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFC838);
  sub_232E6F1F8();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v23 = v51[0];
  v24 = v51[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_232E79550;
  v26 = v47;
  *(_QWORD *)(v25 + 32) = v48;
  *(_QWORD *)(v25 + 40) = v26;
  v27 = v45;
  *(_QWORD *)(v25 + 48) = v46;
  *(_QWORD *)(v25 + 56) = v27;
  v28 = v43;
  *(_QWORD *)(v25 + 64) = v44;
  *(_QWORD *)(v25 + 72) = v28;
  v29 = v41;
  *(_QWORD *)(v25 + 80) = v42;
  *(_QWORD *)(v25 + 88) = v29;
  v30 = v39;
  *(_QWORD *)(v25 + 96) = v40;
  *(_QWORD *)(v25 + 104) = v30;
  v31 = v37;
  *(_QWORD *)(v25 + 112) = v38;
  *(_QWORD *)(v25 + 120) = v31;
  *(_QWORD *)(v25 + 128) = v36;
  *(_QWORD *)(v25 + 136) = v20;
  v32 = v49;
  *(_QWORD *)(v25 + 144) = v50;
  *(_QWORD *)(v25 + 152) = v32;
  *(_QWORD *)(v25 + 160) = v21;
  *(_QWORD *)(v25 + 168) = v22;
  *(_QWORD *)(v25 + 176) = v23;
  *(_QWORD *)(v25 + 184) = v24;
  v33 = MEMORY[0x2349296F8]();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_232E4B9B4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8(&qword_2542374C8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityRequest, (uint64_t)&protocol conformance descriptor for ActivityRequest);
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E4BA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237420);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  sub_232DDDAD8(&qword_255FFBFD8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityRequest, (uint64_t)&protocol conformance descriptor for ActivityRequest);
  sub_232E6ED9C();
  sub_232E4D598(a2);
  sub_232DE8D98(v8, v10);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v7, 0, 1, a3);
  return sub_232E4D5D8((uint64_t)v7, a2);
}

BOOL _s11ActivityKit0A7RequestV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  char v10;
  char v11;
  int *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = sub_232E6F6E4(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    if (a1[2] != a2[2] || a1[3] != a2[3])
    {
      v10 = sub_232E6F6E4();
      result = 0;
      if ((v10 & 1) == 0)
        return result;
    }
    sub_232E66B88(a1[4], a1[5]);
    if ((v11 & 1) == 0)
      return 0;
    v12 = (int *)type metadata accessor for ActivityRequest();
    static OpaqueActivityContent.== infix(_:_:)((uint64_t)a1 + v12[7]);
    if ((v13 & 1) == 0)
      return 0;
    v14 = v12[8];
    v15 = *(_QWORD *)((char *)a1 + v14);
    v16 = *(_QWORD *)((char *)a1 + v14 + 8);
    v17 = *((_BYTE *)a1 + v14 + 16);
    v18 = (char *)a2 + v14;
    v19 = *(_QWORD *)v18;
    v20 = *((_QWORD *)v18 + 1);
    v21 = v18[16];
    if ((v17 & 1) != 0)
    {
      if ((v21 & 1) == 0)
        return 0;
      if (v16)
        goto LABEL_20;
    }
    else
    {
      if ((v21 & 1) != 0)
        return 0;
      if (v16)
      {
LABEL_20:
        if (v16 == 1)
        {
          if (v20 != 1)
            return 0;
        }
        else
        {
          if (v20 < 2)
            return 0;
          if (v15 != v19 || v16 != v20)
          {
            v22 = sub_232E6F6E4();
            result = 0;
            if ((v22 & 1) == 0)
              return result;
          }
        }
LABEL_31:
        v23 = v12[9];
        v24 = *((_BYTE *)a1 + v23 + 8);
        v25 = *((_BYTE *)a1 + v23 + 9);
        v26 = *((_BYTE *)a1 + v23 + 10);
        v27 = *((_BYTE *)a1 + v23 + 11);
        v28 = *((_BYTE *)a1 + v23 + 12);
        v29 = *(_QWORD *)((char *)a1 + v23 + 16);
        v48 = *(_QWORD *)((char *)a1 + v23);
        v49 = v24;
        v50 = v25;
        v51 = v26;
        v52 = v27;
        v53 = v28;
        v54 = v29;
        v30 = (char *)a2 + v23;
        v31 = *(_QWORD *)v30;
        v32 = v30[8];
        v33 = v30[9];
        v34 = v30[10];
        v35 = v30[11];
        v36 = v30[12];
        v37 = *((_QWORD *)v30 + 2);
        v41 = v31;
        v42 = v32;
        v43 = v33;
        v44 = v34;
        v45 = v35;
        v46 = v36;
        v47 = v37;
        if ((_s11ActivityKit0A19PresentationOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v48, (uint64_t)&v41) & 1) == 0
          || !sub_232E21170(*(_QWORD *)((char *)a1 + v12[10]), *(_QWORD *)((char *)a2 + v12[10]))
          || *((unsigned __int8 *)a1 + v12[11]) != *((unsigned __int8 *)a2 + v12[11])
          || *((unsigned __int8 *)a1 + v12[12]) != *((unsigned __int8 *)a2 + v12[12])
          || *((unsigned __int8 *)a1 + v12[13]) != *((unsigned __int8 *)a2 + v12[13]))
        {
          return 0;
        }
        v38 = v12[14];
        v39 = *((unsigned __int8 *)a1 + v38);
        v40 = *((unsigned __int8 *)a2 + v38);
        if (v39 != 4)
          return v40 != 4 && v39 == v40;
        return v40 == 4;
      }
    }
    if (v20)
      return 0;
    goto LABEL_31;
  }
  return result;
}

unint64_t sub_232E4BE40()
{
  unint64_t result;

  result = qword_254237658;
  if (!qword_254237658)
  {
    result = MEMORY[0x23492A124](&unk_232E794FC, &type metadata for ActivityRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237658);
  }
  return result;
}

unint64_t sub_232E4BE84()
{
  unint64_t result;

  result = qword_2542376A8;
  if (!qword_2542376A8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for SceneTarget.Request, &type metadata for SceneTarget.Request);
    atomic_store(result, (unint64_t *)&qword_2542376A8);
  }
  return result;
}

unint64_t sub_232E4BEC8()
{
  unint64_t result;

  result = qword_254237BB0;
  if (!qword_254237BB0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationOptions, &type metadata for ActivityPresentationOptions);
    atomic_store(result, (unint64_t *)&qword_254237BB0);
  }
  return result;
}

unint64_t sub_232E4BF0C()
{
  unint64_t result;

  result = qword_254237600;
  if (!qword_254237600)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContentSource.Request, &type metadata for ActivityContentSource.Request);
    atomic_store(result, (unint64_t *)&qword_254237600);
  }
  return result;
}

unint64_t sub_232E4BF50()
{
  unint64_t result;

  result = qword_254237A38;
  if (!qword_254237A38)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProtectionClass, &type metadata for ActivityProtectionClass);
    atomic_store(result, (unint64_t *)&qword_254237A38);
  }
  return result;
}

unint64_t sub_232E4BF94()
{
  unint64_t result;

  result = qword_255FFC500;
  if (!qword_255FFC500)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for SceneTarget.Request, &type metadata for SceneTarget.Request);
    atomic_store(result, (unint64_t *)&qword_255FFC500);
  }
  return result;
}

unint64_t sub_232E4BFD8()
{
  unint64_t result;

  result = qword_2542381B0;
  if (!qword_2542381B0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationOptions, &type metadata for ActivityPresentationOptions);
    atomic_store(result, (unint64_t *)&qword_2542381B0);
  }
  return result;
}

uint64_t sub_232E4C01C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254237700);
    v8 = a2();
    result = MEMORY[0x23492A124](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232E4C084()
{
  unint64_t result;

  result = qword_255FFC470;
  if (!qword_255FFC470)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityContentSource.Request, &type metadata for ActivityContentSource.Request);
    atomic_store(result, (unint64_t *)&qword_255FFC470);
  }
  return result;
}

unint64_t sub_232E4C0C8()
{
  unint64_t result;

  result = qword_2542380B0;
  if (!qword_2542380B0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityProtectionClass, &type metadata for ActivityProtectionClass);
    atomic_store(result, (unint64_t *)&qword_2542380B0);
  }
  return result;
}

uint64_t sub_232E4C10C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_232DDDAD8(&qword_255FFBFD8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityRequest, (uint64_t)&protocol conformance descriptor for ActivityRequest);
  a1[2] = sub_232DDDAD8(&qword_2542374C8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityRequest, (uint64_t)&protocol conformance descriptor for ActivityRequest);
  result = sub_232DDDAD8(&qword_255FFC4F8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityRequest, (uint64_t)&protocol conformance descriptor for ActivityRequest);
  a1[3] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[4];
    v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v9, v10);
    a1[4] = v9;
    a1[5] = v10;
    v11 = a3[7];
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)((char *)a2 + v11);
    v15 = *(_QWORD *)((char *)a2 + v11 + 8);
    sub_232DE4A2C(v14, v15);
    *v12 = v14;
    v12[1] = v15;
    v16 = type metadata accessor for OpaqueActivityContent();
    v17 = *(int *)(v16 + 20);
    v18 = (char *)v12 + v17;
    v19 = &v13[v17];
    v20 = sub_232E6EE74();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(uint64_t *)((char *)v12 + *(int *)(v16 + 24)) = *(_QWORD *)&v13[*(int *)(v16 + 24)];
    v24 = a3[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *(_QWORD *)v26;
    v28 = *((_QWORD *)v26 + 1);
    v29 = v26[16];
    sub_232DF99C4(*(_QWORD *)v26, v28, v29);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v28;
    v25[16] = v29;
    v30 = a3[9];
    v31 = a3[10];
    v32 = (char *)a1 + v30;
    v33 = (char *)a2 + v30;
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_DWORD *)v32 + 2) = *((_DWORD *)v33 + 2);
    v32[12] = v33[12];
    v34 = (void *)*((_QWORD *)v33 + 2);
    *((_QWORD *)v32 + 2) = v34;
    *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
    v35 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v35) = *((_BYTE *)a2 + v35);
    v36 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
    swift_bridgeObjectRetain();
    v37 = v34;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActivityRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232DE8D98(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v4 = a1 + a2[7];
  sub_232DE8D98(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  v5 = v4 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
  v6 = sub_232E6EE74();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  sub_232E47EFC(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8), *(unsigned __int8 *)(a1 + a2[8] + 16));
  v8 = a1 + a2[9];
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ActivityRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[4];
  v9 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_232DE4A2C(v8, v9);
  a1[4] = v8;
  a1[5] = v9;
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)((char *)a2 + v10);
  v14 = *(_QWORD *)((char *)a2 + v10 + 8);
  sub_232DE4A2C(v13, v14);
  *v11 = v13;
  v11[1] = v14;
  v15 = type metadata accessor for OpaqueActivityContent();
  v16 = *(int *)(v15 + 20);
  v17 = (char *)v11 + v16;
  v18 = &v12[v16];
  v19 = sub_232E6EE74();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(uint64_t *)((char *)v11 + *(int *)(v15 + 24)) = *(_QWORD *)&v12[*(int *)(v15 + 24)];
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)v24;
  v26 = *((_QWORD *)v24 + 1);
  v27 = v24[16];
  sub_232DF99C4(*(_QWORD *)v24, v26, v27);
  *(_QWORD *)v23 = v25;
  *((_QWORD *)v23 + 1) = v26;
  v23[16] = v27;
  v28 = a3[9];
  v29 = a3[10];
  v30 = (char *)a1 + v28;
  v31 = (char *)a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_DWORD *)v30 + 2) = *((_DWORD *)v31 + 2);
  v30[12] = v31[12];
  v32 = (void *)*((_QWORD *)v31 + 2);
  *((_QWORD *)v30 + 2) = v32;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  v33 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
  v34 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v34) = *((_BYTE *)a2 + v34);
  swift_bridgeObjectRetain();
  v35 = v32;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ActivityRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void *v38;
  void *v39;
  id v40;
  int *v42;
  uint64_t v43;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[4];
  v7 = a2[5];
  sub_232DE4A2C(v6, v7);
  v8 = a1[4];
  v9 = a1[5];
  a1[4] = v6;
  a1[5] = v7;
  sub_232DE8D98(v8, v9);
  v42 = a3;
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)((char *)a2 + v10);
  v14 = *(_QWORD *)((char *)a2 + v10 + 8);
  sub_232DE4A2C(v13, v14);
  v15 = *v11;
  v16 = v11[1];
  *v11 = v13;
  v11[1] = v14;
  sub_232DE8D98(v15, v16);
  v43 = type metadata accessor for OpaqueActivityContent();
  v17 = *(int *)(v43 + 20);
  v18 = (char *)v11 + v17;
  v19 = &v12[v17];
  v20 = sub_232E6EE74();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  *(uint64_t *)((char *)v11 + *(int *)(v43 + 24)) = *(_QWORD *)&v12[*(int *)(v43 + 24)];
  v26 = v42[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *((_QWORD *)v28 + 1);
  v31 = v28[16];
  sub_232DF99C4(*(_QWORD *)v28, v30, v31);
  v32 = *(_QWORD *)v27;
  v33 = *((_QWORD *)v27 + 1);
  v34 = v27[16];
  *(_QWORD *)v27 = v29;
  *((_QWORD *)v27 + 1) = v30;
  v27[16] = v31;
  sub_232E47EFC(v32, v33, v34);
  v35 = v42[9];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  *(_QWORD *)((char *)a1 + v35) = *(_QWORD *)((char *)a2 + v35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36[8] = v37[8];
  v36[9] = v37[9];
  v36[10] = v37[10];
  v36[11] = v37[11];
  v36[12] = v37[12];
  v38 = (void *)*((_QWORD *)v36 + 2);
  v39 = (void *)*((_QWORD *)v37 + 2);
  *((_QWORD *)v36 + 2) = v39;
  v40 = v39;

  *(_QWORD *)((char *)a1 + v42[10]) = *(_QWORD *)((char *)a2 + v42[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v42[11]) = *((_BYTE *)a2 + v42[11]);
  *((_BYTE *)a1 + v42[12]) = *((_BYTE *)a2 + v42[12]);
  *((_BYTE *)a1 + v42[13]) = *((_BYTE *)a2 + v42[13]);
  *((_BYTE *)a1 + v42[14]) = *((_BYTE *)a2 + v42[14]);
  return a1;
}

_OWORD *initializeWithTake for ActivityRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for OpaqueActivityContent();
  v11 = *(int *)(v10 + 20);
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_232E6EE74();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(_QWORD *)&v8[*(int *)(v10 + 24)] = *(_QWORD *)&v9[*(int *)(v10 + 24)];
  v17 = a3[8];
  v18 = a3[9];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  v21 = (char *)a1 + v18;
  v22 = (char *)a2 + v18;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  v23 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  v24 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  return a1;
}

_QWORD *assignWithTake for ActivityRequest(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a1[4];
  v9 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_232DE8D98(v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)((char *)a1 + v10);
  v14 = *(_QWORD *)((char *)a1 + v10 + 8);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)(a2 + v10);
  sub_232DE8D98(v13, v14);
  v38 = type metadata accessor for OpaqueActivityContent();
  v39 = v12;
  v15 = *(int *)(v38 + 20);
  v16 = &v11[v15];
  v17 = (char *)(v12 + v15);
  v18 = sub_232E6EE74();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  *(_QWORD *)&v11[*(int *)(v38 + 24)] = *(_QWORD *)(v39 + *(int *)(v38 + 24));
  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = a2 + v24;
  v27 = *(_BYTE *)(v26 + 16);
  v28 = *(_QWORD *)v25;
  v29 = *((_QWORD *)v25 + 1);
  v30 = v25[16];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v25[16] = v27;
  sub_232E47EFC(v28, v29, v30);
  v31 = a3[9];
  v32 = (char *)a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)(a2 + v31);
  swift_bridgeObjectRelease();
  v32[8] = *(_BYTE *)(v33 + 8);
  v32[9] = *(_BYTE *)(v33 + 9);
  v32[10] = *(_BYTE *)(v33 + 10);
  v32[11] = *(_BYTE *)(v33 + 11);
  v32[12] = *(_BYTE *)(v33 + 12);
  v34 = (void *)*((_QWORD *)v32 + 2);
  *((_QWORD *)v32 + 2) = *(_QWORD *)(v33 + 16);

  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v35 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *((_BYTE *)a1 + v35) = *(_BYTE *)(a2 + v35);
  v36 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *((_BYTE *)a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E4CC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for OpaqueActivityContent();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E4CD00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for OpaqueActivityContent();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_232E4CD74()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for OpaqueActivityContent();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_232E4CF10 + 4 * byte_232E79218[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_232E4CF44 + 4 * byte_232E79213[v4]))();
}

uint64_t sub_232E4CF44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E4CF4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E4CF54);
  return result;
}

uint64_t sub_232E4CF60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E4CF68);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_232E4CF6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E4CF74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityRequest.CodingKeys()
{
  return &type metadata for ActivityRequest.CodingKeys;
}

unint64_t sub_232E4CF94()
{
  unint64_t result;

  result = qword_255FFE558;
  if (!qword_255FFE558)
  {
    result = MEMORY[0x23492A124](&unk_232E794D4, &type metadata for ActivityRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE558);
  }
  return result;
}

unint64_t sub_232E4CFDC()
{
  unint64_t result;

  result = qword_254237668;
  if (!qword_254237668)
  {
    result = MEMORY[0x23492A124](&unk_232E79444, &type metadata for ActivityRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237668);
  }
  return result;
}

unint64_t sub_232E4D024()
{
  unint64_t result;

  result = qword_254237660;
  if (!qword_254237660)
  {
    result = MEMORY[0x23492A124](&unk_232E7946C, &type metadata for ActivityRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237660);
  }
  return result;
}

uint64_t sub_232E4D068(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEE00657079547365 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEE00617461447365 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000232E7F610 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5472657474616C70 && a2 == 0xED00007465677261 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000232E7F630 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000232E7F650 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656D656870457369 && a2 == 0xEB000000006C6172 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E756F626E557369 && a2 == 0xEB00000000646564 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x746E656D6F4D7369 && a2 == 0xEB00000000797261 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x69746365746F7270 && a2 == 0xEF7373616C436E6FLL)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_232E4D598(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237420);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232E4D5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E4D624()
{
  sub_232E4E3C0();
  return sub_232E6F7D4();
}

uint64_t sub_232E4D64C()
{
  sub_232E4E3C0();
  return sub_232E6F7E0();
}

uint64_t sub_232E4D674()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265746661;
  else
    return 0x74616964656D6D69;
}

uint64_t sub_232E4D6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E4EE94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E4D6D4()
{
  sub_232E4E338();
  return sub_232E6F7D4();
}

uint64_t sub_232E4D6FC()
{
  sub_232E4E338();
  return sub_232E6F7E0();
}

uint64_t sub_232E4D724()
{
  sub_232E4E404();
  return sub_232E6F7D4();
}

uint64_t sub_232E4D74C()
{
  sub_232E4E404();
  return sub_232E6F7E0();
}

uint64_t ActivityPlatterDismissalPolicy.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE560);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6EE74();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE568);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivityPlatterDismissalPolicy();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE570);
  v13 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E4E338();
  sub_232E6F7C8();
  sub_232E4E37C(v29, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v31 = 0;
    sub_232E4E404();
    v16 = v30;
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  }
  else
  {
    v29 = v13;
    v18 = v25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v12, v4);
    v32 = 1;
    sub_232E4E3C0();
    v19 = v26;
    v20 = v30;
    sub_232E6F660();
    sub_232DDDAD8(&qword_254237BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    v21 = v28;
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v20);
  }
}

uint64_t ActivityPlatterDismissalPolicy.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;

  v42 = a1;
  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE590);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE598);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE5A0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityPlatterDismissalPolicy();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E4E338();
  v18 = v41;
  sub_232E6F7BC();
  if (!v18)
  {
    v33 = v12;
    v19 = v38;
    v20 = v39;
    v41 = v9;
    v21 = v40;
    v22 = sub_232E6F648();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v38 = (char *)v22;
        v44 = 1;
        sub_232E4E3C0();
        sub_232E6F5DC();
        v27 = sub_232E6EE74();
        sub_232DDDAD8(&qword_254238120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
        v28 = v14;
        v29 = v27;
        v35 = (uint64_t)v28;
        v30 = v36;
        sub_232E6F63C();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v31 = v35;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 0, 1, v29);
        sub_232E4E448(v31, (uint64_t)v17);
      }
      else
      {
        v43 = 0;
        sub_232E4E404();
        sub_232E6F5DC();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v32 = sub_232E6EE74();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
      }
      sub_232E4E448((uint64_t)v17, v21);
    }
    else
    {
      v23 = sub_232E6F51C();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
      *v25 = v33;
      sub_232E6F5E8();
      sub_232E6F510();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_232E4DEB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityPlatterDismissalPolicy.init(from:)(a1, a2);
}

uint64_t sub_232E4DECC(_QWORD *a1)
{
  return ActivityPlatterDismissalPolicy.encode(to:)(a1);
}

uint64_t sub_232E4DEE4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8(&qword_255FFE5A8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityPlatterDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityPlatterDismissalPolicy);
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E4DFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD8C0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  sub_232DDDAD8(&qword_255FFD8C8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityPlatterDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityPlatterDismissalPolicy);
  sub_232E6ED9C();
  sub_232DDD798(a2, &qword_255FFD8C0);
  sub_232DE8D98(v8, v10);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v7, 0, 1, a3);
  return sub_232E4EF88((uint64_t)v7, a2);
}

uint64_t _s11ActivityKit0A22PlatterDismissalPolicyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_232E6EE74();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActivityPlatterDismissalPolicy();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFE5F8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v13[*(int *)(v14 + 48)];
  sub_232E4E37C(a1, (uint64_t)v13);
  sub_232E4E37C(a2, v15);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) != 1)
  {
    sub_232E4E37C((uint64_t)v13, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = _s11ActivityKit0A13EndingOptionsV2eeoiySbAC_ACtFZ_0();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_232DEDC64((uint64_t)v13);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_232DDD798((uint64_t)v13, (uint64_t *)&unk_255FFE5F8);
    v17 = 0;
    return v17 & 1;
  }
  sub_232DEDC64((uint64_t)v13);
  v17 = 1;
  return v17 & 1;
}

uint64_t type metadata accessor for ActivityPlatterDismissalPolicy()
{
  uint64_t result;

  result = qword_255FFB640;
  if (!qword_255FFB640)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_232E4E338()
{
  unint64_t result;

  result = qword_255FFE578;
  if (!qword_255FFE578)
  {
    result = MEMORY[0x23492A124](&unk_232E79924, &type metadata for ActivityPlatterDismissalPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE578);
  }
  return result;
}

uint64_t sub_232E4E37C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityPlatterDismissalPolicy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_232E4E3C0()
{
  unint64_t result;

  result = qword_255FFE580;
  if (!qword_255FFE580)
  {
    result = MEMORY[0x23492A124](&unk_232E798D4, &type metadata for ActivityPlatterDismissalPolicy.AfterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE580);
  }
  return result;
}

unint64_t sub_232E4E404()
{
  unint64_t result;

  result = qword_255FFE588;
  if (!qword_255FFE588)
  {
    result = MEMORY[0x23492A124](&unk_232E79884, &type metadata for ActivityPlatterDismissalPolicy.ImmediateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE588);
  }
  return result;
}

uint64_t sub_232E4E448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityPlatterDismissalPolicy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E4E48C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_232DDDAD8(&qword_255FFD8C8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityPlatterDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityPlatterDismissalPolicy);
  a1[2] = sub_232DDDAD8(&qword_255FFE5A8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityPlatterDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityPlatterDismissalPolicy);
  result = sub_232DDDAD8(&qword_255FFE5B0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityPlatterDismissalPolicy, (uint64_t)&protocol conformance descriptor for ActivityPlatterDismissalPolicy);
  a1[3] = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActivityPlatterDismissalPolicy(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_232E6EE74();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ActivityPlatterDismissalPolicy(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_232E6EE74();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for ActivityPlatterDismissalPolicy(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_232E6EE74();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for ActivityPlatterDismissalPolicy(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_232E6EE74();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for ActivityPlatterDismissalPolicy(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_232E6EE74();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for ActivityPlatterDismissalPolicy(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_232E6EE74();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPlatterDismissalPolicy()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E4E968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_232E6EE74();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityPlatterDismissalPolicy()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E4E9C0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_232E4EA10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_232E4EA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_232E4EA88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_232E6EE74();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityPlatterDismissalPolicy.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E4EB28 + 4 * byte_232E79565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E4EB5C + 4 * byte_232E79560[v4]))();
}

uint64_t sub_232E4EB5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E4EB64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E4EB6CLL);
  return result;
}

uint64_t sub_232E4EB78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E4EB80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E4EB84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E4EB8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPlatterDismissalPolicy.CodingKeys()
{
  return &type metadata for ActivityPlatterDismissalPolicy.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPlatterDismissalPolicy.ImmediateCodingKeys()
{
  return &type metadata for ActivityPlatterDismissalPolicy.ImmediateCodingKeys;
}

uint64_t storeEnumTagSinglePayload for ActivityPlatterDismissalPolicy.AfterCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E4EBF8 + 4 * byte_232E7956A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E4EC18 + 4 * byte_232E7956F[v4]))();
}

_BYTE *sub_232E4EBF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E4EC18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E4EC20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E4EC28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E4EC30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E4EC38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPlatterDismissalPolicy.AfterCodingKeys()
{
  return &type metadata for ActivityPlatterDismissalPolicy.AfterCodingKeys;
}

unint64_t sub_232E4EC58()
{
  unint64_t result;

  result = qword_255FFE5B8;
  if (!qword_255FFE5B8)
  {
    result = MEMORY[0x23492A124](&unk_232E79754, &type metadata for ActivityPlatterDismissalPolicy.AfterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE5B8);
  }
  return result;
}

unint64_t sub_232E4ECA0()
{
  unint64_t result;

  result = qword_255FFE5C0;
  if (!qword_255FFE5C0)
  {
    result = MEMORY[0x23492A124](&unk_232E7985C, &type metadata for ActivityPlatterDismissalPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE5C0);
  }
  return result;
}

unint64_t sub_232E4ECE8()
{
  unint64_t result;

  result = qword_255FFE5C8;
  if (!qword_255FFE5C8)
  {
    result = MEMORY[0x23492A124](&unk_232E7977C, &type metadata for ActivityPlatterDismissalPolicy.ImmediateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE5C8);
  }
  return result;
}

unint64_t sub_232E4ED30()
{
  unint64_t result;

  result = qword_255FFE5D0;
  if (!qword_255FFE5D0)
  {
    result = MEMORY[0x23492A124](&unk_232E797A4, &type metadata for ActivityPlatterDismissalPolicy.ImmediateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE5D0);
  }
  return result;
}

unint64_t sub_232E4ED78()
{
  unint64_t result;

  result = qword_255FFE5D8;
  if (!qword_255FFE5D8)
  {
    result = MEMORY[0x23492A124](&unk_232E796C4, &type metadata for ActivityPlatterDismissalPolicy.AfterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE5D8);
  }
  return result;
}

unint64_t sub_232E4EDC0()
{
  unint64_t result;

  result = qword_255FFE5E0;
  if (!qword_255FFE5E0)
  {
    result = MEMORY[0x23492A124](&unk_232E796EC, &type metadata for ActivityPlatterDismissalPolicy.AfterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE5E0);
  }
  return result;
}

unint64_t sub_232E4EE08()
{
  unint64_t result;

  result = qword_255FFE5E8;
  if (!qword_255FFE5E8)
  {
    result = MEMORY[0x23492A124](&unk_232E797CC, &type metadata for ActivityPlatterDismissalPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE5E8);
  }
  return result;
}

unint64_t sub_232E4EE50()
{
  unint64_t result;

  result = qword_255FFE5F0;
  if (!qword_255FFE5F0)
  {
    result = MEMORY[0x23492A124](&unk_232E797F4, &type metadata for ActivityPlatterDismissalPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE5F0);
  }
  return result;
}

uint64_t sub_232E4EE94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74616964656D6D69 && a2 == 0xE900000000000065;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265746661 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E4EF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD8C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_232E4EFD0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE630);
  v2 = (_QWORD *)sub_232E6F5AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v15 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_232DE0F18(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v2[7] + 24 * result;
    *(_QWORD *)v11 = v7;
    *(_OWORD *)(v11 + 8) = v15;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 = (_OWORD *)((char *)v4 + 40);
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_232E4F118(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE640);
  v2 = sub_232E6F5AC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_232DF5040(v6, (uint64_t)&v15, (uint64_t *)&unk_255FFE648);
    v7 = v15;
    v8 = v16;
    result = sub_232DE0F18(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_232E13408(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_232E4F24C(uint64_t a1)
{
  return sub_232DDFDE0(a1, &qword_254237368, &qword_254236880, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
}

unint64_t sub_232E4F268(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFE620);
  v2 = (_QWORD *)sub_232E6F5AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_232DE0F18(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static ActivityInputServiceDefinition.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254238560 != -1)
    swift_once();
  v2 = sub_232E6EED4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254238540);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

ActivityKit::ActivityInputServerError::Code_optional __swiftcall ActivityInputServerError.Code.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (ActivityKit::ActivityInputServerError::Code_optional)rawValue;
}

uint64_t ActivityInputServerError.Code.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ActivityKit::ActivityInputServerError::Code_optional sub_232E4F404(Swift::Int *a1)
{
  return ActivityInputServerError.Code.init(rawValue:)(*a1);
}

void sub_232E4F40C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

_BYTE *ActivityInputServerError.init(code:underlyingError:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

unint64_t static ActivityInputServerError.errorDomain.getter()
{
  return 0xD000000000000023;
}

uint64_t ActivityInputServerError.errorCode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t ActivityInputServerError.errorUserInfo.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v5;

  if (!*(_QWORD *)(v0 + 8))
    return sub_232E4F118(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE608);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232E70DA0;
  *(_QWORD *)(inited + 32) = sub_232E6F1EC();
  *(_QWORD *)(inited + 40) = v2;
  swift_getErrorValue();
  *(_QWORD *)(inited + 72) = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_1);
  return sub_232E4F118(inited);
}

unint64_t sub_232E4F514()
{
  unint64_t result;

  result = qword_255FFE610;
  if (!qword_255FFE610)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityInputServerError.Code, &type metadata for ActivityInputServerError.Code);
    atomic_store(result, (unint64_t *)&qword_255FFE610);
  }
  return result;
}

unint64_t sub_232E4F55C()
{
  unint64_t result;

  result = qword_255FFE618;
  if (!qword_255FFE618)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityInputServerError, &type metadata for ActivityInputServerError);
    atomic_store(result, (unint64_t *)&qword_255FFE618);
  }
  return result;
}

unint64_t sub_232E4F5A0()
{
  return 0xD000000000000023;
}

uint64_t sub_232E4F5BC()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_232E4F5C4()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v5;

  if (!*(_QWORD *)(v0 + 8))
    return sub_232E4F118(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE608);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232E70DA0;
  *(_QWORD *)(inited + 32) = sub_232E6F1EC();
  *(_QWORD *)(inited + 40) = v2;
  swift_getErrorValue();
  *(_QWORD *)(inited + 72) = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_1);
  return sub_232E4F118(inited);
}

uint64_t sub_232E4F688()
{
  sub_232E4F94C();
  return sub_232E6F72C();
}

uint64_t sub_232E4F6B0()
{
  sub_232E4F94C();
  return sub_232E6F720();
}

ValueMetadata *type metadata accessor for ActivityInputServiceDefinition()
{
  return &type metadata for ActivityInputServiceDefinition;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityInputServerError(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  return a1;
}

void destroy for ActivityInputServerError(uint64_t a1)
{

}

uint64_t assignWithCopy for ActivityInputServerError(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a2 + 8);
  v5 = v4;
  *(_QWORD *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for ActivityInputServerError(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityInputServerError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityInputServerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityInputServerError()
{
  return &type metadata for ActivityInputServerError;
}

uint64_t storeEnumTagSinglePayload for ActivityInputServerError.Code(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_232E4F8B4 + 4 * byte_232E79985[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_232E4F8E8 + 4 * byte_232E79980[v4]))();
}

uint64_t sub_232E4F8E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E4F8F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E4F8F8);
  return result;
}

uint64_t sub_232E4F904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E4F90CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_232E4F910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E4F918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityInputServerError.Code()
{
  return &type metadata for ActivityInputServerError.Code;
}

uint64_t dispatch thunk of RegistrationCenter.requestActivity(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

unint64_t sub_232E4F94C()
{
  unint64_t result;

  result = qword_255FFE638;
  if (!qword_255FFE638)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityInputServerError, &type metadata for ActivityInputServerError);
    atomic_store(result, (unint64_t *)&qword_255FFE638);
  }
  return result;
}

uint64_t sub_232E4F994()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFC638);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFC638);
  return sub_232E6EF1C();
}

uint64_t sub_232E4FA14()
{
  void *v0;
  uint64_t v1;

  if (qword_254238460 != -1)
    swift_once();
  v0 = off_2542385A8;
  type metadata accessor for ActivityCenter();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v0;
  qword_2542378A8 = v1;
  return swift_retain();
}

uint64_t static ActivityCenter.shared.getter()
{
  if (qword_2542379F0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_232E4FABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  sub_232DE80CC(*(_QWORD *)(v3 + 16) + 32, (uint64_t)v13);
  v8 = v14;
  v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
  swift_retain();
  v10(a1, a2, v8, v9);
  if (v4)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    v11 = type metadata accessor for ActivityDescriptor();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 1, 1, v11);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  return swift_release();
}

uint64_t sub_232E4FBB8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_OWORD *, uint64_t, uint64_t);
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[3];
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v9 = a1[1];
  v10 = *a1;
  v8 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(*(_QWORD *)(v1 + 16) + 32, (uint64_t)v13);
  v3 = v14;
  v4 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v11[0] = v10;
  v11[1] = v9;
  v11[2] = v8;
  v12 = v2;
  v5 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v6 = v5(v11, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  swift_release();
  return v6;
}

uint64_t sub_232E4FC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OpaqueActivityPayload(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = qword_2542374C0;
  swift_retain();
  if (v11 != -1)
    swift_once();
  v12 = type metadata accessor for ActivityUIDismissalPolicy();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_254237640);
  sub_232DED470(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
  v14 = type metadata accessor for ActivityEndingOptions();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
  sub_232E0C9C0(a1, a2, (uint64_t)v9, (uint64_t)v6);
  swift_release();
  sub_232DDD798((uint64_t)v6, &qword_254237620);
  return sub_232DDD798((uint64_t)v9, &qword_2542379D0);
}

uint64_t sub_232E4FE10(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_OWORD *, uint64_t, uint64_t);
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[3];
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v9 = a1[1];
  v10 = *a1;
  v8 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(*(_QWORD *)(v1 + 16) + 32, (uint64_t)v13);
  v3 = v14;
  v4 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v11[0] = v10;
  v11[1] = v9;
  v11[2] = v8;
  v12 = v2;
  v5 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 48);
  swift_retain();
  v6 = v5(v11, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  swift_release();
  return v6;
}

uint64_t sub_232E4FED8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_OWORD *, uint64_t, uint64_t);
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[3];
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v9 = a1[1];
  v10 = *a1;
  v8 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(*(_QWORD *)(v1 + 16) + 32, (uint64_t)v13);
  v3 = v14;
  v4 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v11[0] = v10;
  v11[1] = v9;
  v11[2] = v8;
  v12 = v2;
  v5 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 56);
  swift_retain();
  v6 = v5(v11, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  swift_release();
  return v6;
}

uint64_t sub_232E4FFA0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_OWORD *, uint64_t, uint64_t);
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[3];
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v9 = a1[1];
  v10 = *a1;
  v8 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_232DE80CC(*(_QWORD *)(v1 + 16) + 32, (uint64_t)v13);
  v3 = v14;
  v4 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v11[0] = v10;
  v11[1] = v9;
  v11[2] = v8;
  v12 = v2;
  v5 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 64);
  swift_retain();
  v6 = v5(v11, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  swift_release();
  return v6;
}

uint64_t sub_232E50068(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, char *, uint64_t, uint64_t);
  uint64_t v10;
  char v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v6 = *a3;
  sub_232DE80CC(*(_QWORD *)(v3 + 16) + 32, (uint64_t)v13);
  v7 = v14;
  v8 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v12 = v6;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v8 + 40);
  swift_retain();
  v10 = v9(a1, a2, &v12, v7, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  swift_release();
  return v10;
}

id sub_232E50120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  id v29;
  char *v30;
  id v31;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_super v40;
  id v41;
  uint64_t v42;

  v38 = a1;
  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AE0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB478);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB420);
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB430);
  v14 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  v37 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v35 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(char **)(*(_QWORD *)(v2 + 16) + 88);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC11ActivityKit40ActivityFrequentUpdatesObservationClient_singleton];
  v18 = (uint64_t *)(v17 + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activities);
  swift_beginAccess();
  v19 = *v18;
  v20 = MEMORY[0x24BEE4B08];
  if (v19)
    v20 = v19;
  v42 = v20;
  swift_retain();
  v33 = v16;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB480);
  sub_232E6F018();
  v42 = *(_QWORD *)(v17
                  + OBJC_IVAR____TtC11ActivityKitP33_D074D31B035C9B27F4F7807A7D21110D9Singleton_activityDiffPublisher);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D8);
  sub_232DDF49C(&qword_255FFB470, &qword_255FFB478, MEMORY[0x24BDB9DF8]);
  sub_232DDF49C(&qword_255FFB458, &qword_2542382D8, MEMORY[0x24BDB9CB0]);
  sub_232E6F06C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_232DDF49C(&qword_255FFB418, &qword_255FFB420, MEMORY[0x24BDB9798]);
  v21 = sub_232E6F030();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
  swift_release();

  v42 = v21;
  sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v41 = (id)sub_232E6F3CC();
  v22 = sub_232E6F3B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB450);
  sub_232DDF49C(&qword_255FFB448, &qword_255FFB450, MEMORY[0x24BDB9AF8]);
  sub_232DFDA08();
  v23 = v35;
  sub_232E6F084();
  sub_232DDD798((uint64_t)v5, &qword_254237AE0);

  swift_release();
  v24 = swift_allocObject();
  v25 = v39;
  *(_QWORD *)(v24 + 16) = v38;
  *(_QWORD *)(v24 + 24) = v25;
  sub_232DDF49C(&qword_255FFB428, &qword_255FFB430, MEMORY[0x24BDB9A08]);
  swift_retain();
  v26 = v36;
  v27 = sub_232E6F09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v26);
  v28 = (objc_class *)type metadata accessor for CancellableAssertion();
  v29 = objc_allocWithZone(v28);
  v42 = v27;
  sub_232E6EF64();
  swift_allocObject();
  swift_retain();
  v30 = (char *)v29;
  *(_QWORD *)&v30[OBJC_IVAR____TtC11ActivityKit20CancellableAssertion_token] = sub_232E6EF70();

  v40.receiver = v30;
  v40.super_class = v28;
  v31 = objc_msgSendSuper2(&v40, sel_init);
  swift_release();
  return v31;
}

uint64_t sub_232E505A0(uint64_t *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v3 = *a1;
  v4 = *a1 + 56;
  v5 = 1 << *(_BYTE *)(*a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v16 >= v8)
      return swift_release();
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v8)
        return swift_release();
      v17 = *(_QWORD *)(v4 + 8 * v10);
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v8)
          return swift_release();
        v17 = *(_QWORD *)(v4 + 8 * v10);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v7 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain();
    a2(v14, v15);
    result = swift_bridgeObjectRelease();
  }
  v18 = v16 + 3;
  if (v18 >= v8)
    return swift_release();
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v10 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v17 = *(_QWORD *)(v4 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t ActivityCenter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ActivityCenter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

id sub_232E50744()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActivityCenterObjcBridge()), sel_init);
  qword_2542372D0 = (uint64_t)result;
  return result;
}

id static ActivityCenterObjcBridge.shared.getter()
{
  if (qword_2542372D8 != -1)
    swift_once();
  return (id)qword_2542372D0;
}

id sub_232E507F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v12 = sub_232E6F3C0();
  v1 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v5);
  v11 = OBJC_IVAR____TtC11ActivityKit24ActivityCenterObjcBridge_queue;
  v10[1] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v6 = v0;
  sub_232E6F0F0();
  v14 = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5758], v12);
  *(_QWORD *)(v10[2] + v11) = sub_232E6F3F0();
  v7 = OBJC_IVAR____TtC11ActivityKit24ActivityCenterObjcBridge_latestActivityContentUpdateByIdentifier;
  *(_QWORD *)&v6[v7] = sub_232E4F24C(MEMORY[0x24BEE4AF8]);
  if (qword_2542379F0 != -1)
    swift_once();
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKit24ActivityCenterObjcBridge__activityCenter] = qword_2542378A8;
  swift_retain();

  v8 = (objc_class *)type metadata accessor for ActivityCenterObjcBridge();
  v13.receiver = v6;
  v13.super_class = v8;
  return objc_msgSendSuper2(&v13, sel_init);
}

id sub_232E50A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_OWORD *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v19;
  objc_super v20;
  _OWORD v21[3];
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v19 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE670);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DE80CC(*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11ActivityKit24ActivityCenterObjcBridge__activityCenter) + 16) + 32, (uint64_t)v23);
  v8 = v24;
  v9 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  v10 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  v11 = v10(v21, v8, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  swift_release();
  *(_QWORD *)&v21[0] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD388);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD3B8);
  sub_232DDF49C(&qword_255FFD390, &qword_255FFD388, MEMORY[0x24BDB9AF8]);
  sub_232DDF49C(&qword_255FFE680, &qword_255FFD3B8, MEMORY[0x24BDB9DF8]);
  sub_232E6F060();
  swift_release();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v19;
  *(_QWORD *)(v12 + 24) = a2;
  sub_232DDF49C(&qword_255FFE688, &qword_255FFE670, MEMORY[0x24BDB9740]);
  swift_retain();
  v13 = sub_232E6F09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = (objc_class *)type metadata accessor for CancellableAssertion();
  v15 = objc_allocWithZone(v14);
  *(_QWORD *)&v21[0] = v13;
  sub_232E6EF64();
  swift_allocObject();
  swift_retain();
  v16 = (char *)v15;
  *(_QWORD *)&v16[OBJC_IVAR____TtC11ActivityKit20CancellableAssertion_token] = sub_232E6EF70();

  v20.receiver = v16;
  v20.super_class = v14;
  v17 = objc_msgSendSuper2(&v20, sel_init);
  swift_release();
  return v17;
}

uint64_t sub_232E50D20@<X0>(uint64_t a1@<X8>)
{
  return sub_232E517BC(0xD000000000000041, 0x8000000232E7F800, &qword_255FFD358, a1);
}

uint64_t sub_232E50D44(uint64_t *a1, void (*a2)(_QWORD, __n128), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  void (*v21)(_QWORD, __n128);
  uint64_t v22;

  v6 = type metadata accessor for ActivityDescriptor();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11.n128_f64[0] = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v20 - v12;
  v14 = *a1;
  v15 = *(_QWORD *)(*a1 + 16);
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v20[1] = a3;
    v21 = a2;
    v22 = MEMORY[0x24BEE4AF8];
    sub_232E6F54C();
    sub_232DE06B4(0, &qword_254236868);
    v17 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v18 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_232DED470(v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      sub_232DED470((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      ACActivityDescriptor.init(descriptor:)((uint64_t)v9);
      sub_232DF51B8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      sub_232E6F534();
      sub_232E6F558();
      sub_232E6F564();
      sub_232E6F540();
      v17 += v18;
      --v15;
    }
    while (v15);
    a2 = v21;
    v16 = v22;
  }
  a2(v16, v11);
  return swift_bridgeObjectRelease();
}

void sub_232E50EE8(uint64_t a1, uint64_t a2)
{
  id v3;

  sub_232DE06B4(0, &qword_254236868);
  v3 = (id)sub_232E6F2AC();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);

}

uint64_t sub_232E50F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254236840);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC11ActivityKit24ActivityCenterObjcBridge_latestActivityContentUpdateByIdentifier);
  swift_beginAccess();
  v9 = *v8;
  if (!*(_QWORD *)(v9 + 16))
  {
    v16 = type metadata accessor for ActivityDescriptorContentState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
LABEL_7:
    v17 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_232DE0F18(a1, a2);
  if ((v11 & 1) != 0)
  {
    v12 = v10;
    v13 = *(_QWORD *)(v9 + 56);
    v14 = type metadata accessor for ActivityDescriptorContentState();
    v15 = *(_QWORD *)(v14 - 8);
    sub_232DED470(v13 + *(_QWORD *)(v15 + 72) * v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  else
  {
    v14 = type metadata accessor for ActivityDescriptorContentState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ActivityDescriptorContentState();
  v17 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v7, 1, v14) == 1)
    goto LABEL_7;
LABEL_8:
  sub_232DDD798((uint64_t)v7, &qword_254236840);
  return v17;
}

uint64_t sub_232E51154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237620);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OpaqueActivityPayload(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = qword_2542374C0;
  swift_retain();
  if (v11 != -1)
    swift_once();
  v12 = type metadata accessor for ActivityUIDismissalPolicy();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_254237640);
  sub_232DED470(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActivityUIDismissalPolicy);
  v14 = type metadata accessor for ActivityEndingOptions();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
  sub_232E0C9C0(a1, a2, (uint64_t)v9, (uint64_t)v6);
  swift_release();
  sub_232DDD798((uint64_t)v6, &qword_254237620);
  return sub_232DDD798((uint64_t)v9, &qword_2542379D0);
}

id sub_232E51390(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_OWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  id v24;
  char *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  objc_super v35;
  _OWORD v36[3];
  uint64_t v37;
  id v38[3];
  uint64_t v39;
  uint64_t v40;

  v34 = a2;
  v32 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AE0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237888);
  v29 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254236850);
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v2;
  sub_232DE80CC(*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC11ActivityKit24ActivityCenterObjcBridge__activityCenter] + 16) + 32, (uint64_t)v38);
  v12 = v39;
  v13 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  v37 = 0;
  memset(v36, 0, sizeof(v36));
  v14 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v13 + 64);
  swift_retain();
  v15 = v14(v36, v12, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  swift_release();
  *(_QWORD *)&v36[0] = v15;
  sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v38[0] = (id)sub_232E6F3CC();
  v16 = sub_232E6F3B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237920);
  sub_232DDF49C(&qword_254237918, &qword_254237920, MEMORY[0x24BDB9AF8]);
  sub_232DFDA08();
  sub_232E6F084();
  sub_232DDD798((uint64_t)v5, &qword_254237AE0);

  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254237938);
  sub_232DDF49C(&qword_254237910, &qword_254237888, MEMORY[0x24BDB9A08]);
  sub_232DDF49C(&qword_254236858, &qword_254237938, MEMORY[0x24BDB9DF8]);
  sub_232E6F060();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
  v17 = (_QWORD *)swift_allocObject();
  v18 = v32;
  v19 = v33;
  v17[2] = v33;
  v17[3] = v18;
  v17[4] = v34;
  sub_232DDF49C(&qword_254236848, &qword_254236850, MEMORY[0x24BDB9740]);
  v20 = v19;
  swift_retain();
  v21 = v31;
  v22 = sub_232E6F09C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v21);
  v23 = (objc_class *)type metadata accessor for CancellableAssertion();
  v24 = objc_allocWithZone(v23);
  *(_QWORD *)&v36[0] = v22;
  sub_232E6EF64();
  swift_allocObject();
  swift_retain();
  v25 = (char *)v24;
  *(_QWORD *)&v25[OBJC_IVAR____TtC11ActivityKit20CancellableAssertion_token] = sub_232E6EF70();

  v35.receiver = v25;
  v35.super_class = v23;
  v26 = objc_msgSendSuper2(&v35, sel_init);
  swift_release();
  return v26;
}

uint64_t sub_232E51798@<X0>(uint64_t a1@<X8>)
{
  return sub_232E517BC(0xD00000000000003DLL, 0x8000000232E7F7C0, &qword_254238450, a1);
}

uint64_t sub_232E517BC@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  v37 = (uint64_t *)a2;
  v7 = sub_232E6EF28();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255FFC658 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_255FFC638);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = (void *)sub_232E6EDE4();
  v13 = objc_msgSend(v12, sel_localizedDescription);
  v14 = sub_232E6F1EC();
  v16 = v15;

  v17 = v12;
  swift_bridgeObjectRetain();
  v18 = sub_232E6EF10();
  v19 = sub_232E6F378();
  v38 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v35 = v8;
    v21 = v20;
    v34 = swift_slowAlloc();
    v40 = v34;
    *(_DWORD *)v21 = 136446978;
    v36 = a4;
    v39 = sub_232DE4A70(a1, (unint64_t)v37, &v40);
    sub_232E6F480();
    *(_WORD *)(v21 + 12) = 2082;
    v22 = objc_msgSend(v17, sel_domain);
    v33 = v7;
    v23 = v22;
    v24 = sub_232E6F1EC();
    v32 = v14;
    v25 = v24;
    v37 = a3;
    v27 = v26;

    v39 = sub_232DE4A70(v25, v27, &v40);
    sub_232E6F480();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2048;
    v28 = objc_msgSend(v17, sel_code);

    v39 = (uint64_t)v28;
    a3 = v37;
    sub_232E6F480();

    *(_WORD *)(v21 + 32) = 2082;
    swift_bridgeObjectRetain();
    v39 = sub_232DE4A70(v32, v16, &v40);
    sub_232E6F480();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_232DDB000, v18, (os_log_type_t)v38, "%{public}s: %{public}s (%ld) %{public}s", (uint8_t *)v21, 0x2Au);
    v29 = v34;
    swift_arrayDestroy();
    MEMORY[0x23492A1F0](v29, -1, -1);
    MEMORY[0x23492A1F0](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v33);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v40 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_232E6F018();
}

void sub_232E51B54(uint64_t *a1, uint64_t a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  _BOOL4 v27;
  uint8_t *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char *v71;
  double v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  void *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  void (*v92)(id);
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  os_log_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[4];

  v92 = a3;
  v93 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v6);
  v98 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254236840);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v14);
  v91 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v84 - v17);
  v19 = type metadata accessor for ActivityDescriptorContentState();
  v87 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v90 = (uint64_t *)((char *)&v84 - v23);
  v24 = *a1;
  if (qword_255FFC658 != -1)
    swift_once();
  v25 = sub_232E6EF28();
  __swift_project_value_buffer(v25, (uint64_t)qword_255FFC638);
  swift_bridgeObjectRetain_n();
  v26 = sub_232E6EF10();
  LODWORD(v102) = sub_232E6F390();
  v27 = os_log_type_enabled(v26, (os_log_type_t)v102);
  v96 = v21;
  v86 = v13;
  v94 = v19;
  v95 = v18;
  v85 = v24;
  if (!v27)
  {
    v40 = (uint64_t)v21;

    swift_bridgeObjectRelease_n();
    v41 = *(_QWORD *)(v24 + 16);
    if (!v41)
      return;
    goto LABEL_15;
  }
  v100 = v26;
  v101 = a2;
  v28 = (uint8_t *)swift_slowAlloc();
  v99 = swift_slowAlloc();
  v104[0] = v99;
  *(_DWORD *)v28 = 136446210;
  v29 = *(_QWORD *)(v24 + 16);
  v30 = MEMORY[0x24BEE4AF8];
  if (v29)
  {
    v89 = (uint64_t)v28;
    v97 = v10;
    v31 = v8;
    v103 = MEMORY[0x24BEE4AF8];
    sub_232E52648(0, v29, 0);
    v32 = v24 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
    v33 = *(_QWORD *)(v87 + 72);
    v30 = v103;
    do
    {
      v34 = v90;
      sub_232DED470(v32, (uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      v36 = *v34;
      v35 = v34[1];
      swift_bridgeObjectRetain();
      sub_232DF51B8((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_232E52648(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = v103;
      }
      v38 = *(_QWORD *)(v30 + 16);
      v37 = *(_QWORD *)(v30 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_232E52648(v37 > 1, v38 + 1, 1);
        v30 = v103;
      }
      *(_QWORD *)(v30 + 16) = v38 + 1;
      v39 = v30 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v36;
      *(_QWORD *)(v39 + 40) = v35;
      v32 += v33;
      --v29;
    }
    while (v29);
    v8 = v31;
    v10 = v97;
    v19 = v94;
    v18 = v95;
    v24 = v85;
    v28 = (uint8_t *)v89;
  }
  v42 = MEMORY[0x2349296F8](v30, MEMORY[0x24BEE0D00]);
  v44 = v43;
  swift_bridgeObjectRelease();
  v103 = sub_232DE4A70(v42, v44, v104);
  sub_232E6F480();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v45 = v100;
  _os_log_impl(&dword_232DDB000, v100, (os_log_type_t)v102, "Activity Content update: %{public}s", v28, 0xCu);
  v46 = v99;
  swift_arrayDestroy();
  MEMORY[0x23492A1F0](v46, -1, -1);
  MEMORY[0x23492A1F0](v28, -1, -1);

  v40 = (uint64_t)v96;
  a2 = v101;
  v41 = *(_QWORD *)(v24 + 16);
  if (v41)
  {
LABEL_15:
    v89 = sub_232DE06B4(0, &qword_254236868);
    v47 = (uint64_t *)(a2
                    + OBJC_IVAR____TtC11ActivityKit24ActivityCenterObjcBridge_latestActivityContentUpdateByIdentifier);
    v48 = v24 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
    v97 = *(char **)(v87 + 72);
    swift_bridgeObjectRetain();
    v49 = v48;
    v88 = v47;
    do
    {
      v101 = v49;
      v102 = v41;
      sub_232DED470(v49, v40, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      sub_232DED470(v40, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      v54 = *v18;
      v55 = v18[1];
      v100 = (os_log_t)*(unsigned __int8 *)(v40 + *(int *)(v19 + 20));
      if (v100 == (os_log_t)2)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v56 = sub_232DE0F18(v54, v55);
        v58 = v57;
        swift_bridgeObjectRelease();
        if ((v58 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v60 = *v47;
          v103 = *v47;
          *v47 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_232E126D8();
            v60 = v103;
          }
          swift_bridgeObjectRelease();
          v61 = (uint64_t)v86;
          sub_232E5300C(*(_QWORD *)(v60 + 56) + v56 * (_QWORD)v97, (uint64_t)v86);
          sub_232DF9474(v56, v60);
          *v47 = v60;
          swift_bridgeObjectRelease();
          v62 = 0;
        }
        else
        {
          v62 = 1;
          v61 = (uint64_t)v86;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v61, v62, 1, v19);
        sub_232DDD798(v61, &qword_254236840);
        swift_endAccess();
        swift_bridgeObjectRelease();
        v40 = (uint64_t)v96;
      }
      else
      {
        swift_beginAccess();
        v63 = v19;
        v64 = v10;
        v65 = v8;
        v66 = (uint64_t)v90;
        sub_232DED470(v40, (uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
        swift_bridgeObjectRetain();
        v67 = swift_isUniquelyReferenced_nonNull_native();
        v103 = *v47;
        *v47 = 0x8000000000000000;
        v68 = v66;
        v8 = v65;
        v10 = v64;
        v19 = v63;
        sub_232E570C4(v68, v54, v55, v67);
        *v47 = v103;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
      }
      v99 = *v18;
      v69 = v91;
      sub_232DED470((uint64_t)v18, v91, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      swift_bridgeObjectRetain();
      v70 = ACActivityDescriptor.init(descriptor:)(v69);
      sub_232DED470(v40 + *(int *)(v19 + 28), (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
      v71 = &v10[*(int *)(v8 + 20)];
      v72 = *(double *)&v10[*(int *)(v8 + 24)];
      v73 = (void *)sub_232E6EE2C();
      v74 = (uint64_t)v71;
      v75 = v98;
      sub_232E2DC4C(v74, v98);
      v76 = sub_232E6EE74();
      v77 = *(_QWORD *)(v76 - 8);
      v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76);
      v79 = 0;
      if (v78 != 1)
      {
        v80 = v10;
        v81 = v8;
        v82 = v98;
        v79 = (void *)sub_232E6EE50();
        v83 = v82;
        v8 = v81;
        v10 = v80;
        v40 = (uint64_t)v96;
        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v83, v76);
      }
      v50 = objc_msgSend(objc_allocWithZone((Class)ACActivityContent), sel_initWithContentData_staleDate_relevanceScore_, v73, v79, v72);

      sub_232DF51B8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
      v51 = objc_allocWithZone((Class)ACActivityContentUpdate);
      v52 = (void *)sub_232E6F1E0();
      swift_bridgeObjectRelease();
      v53 = objc_msgSend(v51, sel_initWithIdentifier_descriptor_state_content_, v52, v70, v100, v50);

      v92(v53);
      v18 = v95;
      sub_232DF51B8((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
      sub_232DF51B8(v40, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
      v49 = (uint64_t)&v97[v101];
      v41 = v102 - 1;
      v19 = v94;
      v47 = v88;
    }
    while (v102 != 1);
    swift_bridgeObjectRelease();
  }
}

id sub_232E52418(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;

  v9 = _Block_copy(aBlock);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  v11 = a1;
  v12 = (void *)a6(a5, v10);

  swift_release();
  return v12;
}

id sub_232E524A0(uint64_t a1, uint64_t a2)
{
  return sub_232E50120(a1, a2);
}

id ActivityCenterObjcBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityCenterObjcBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_232E525C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_232E52664(a1, a2, a3, (_QWORD *)*v3, &qword_255FFE6A0, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  *v3 = result;
  return result;
}

uint64_t sub_232E525F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_232E52664(a1, a2, a3, (_QWORD *)*v3, &qword_2542375F8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
  *v3 = result;
  return result;
}

uint64_t sub_232E5261C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_232E52664(a1, a2, a3, (_QWORD *)*v3, &qword_255FFBFA8, type metadata accessor for ActivityDescriptorState);
  *v3 = result;
  return result;
}

uint64_t sub_232E52648(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_232E52844(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_232E52664(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E52844(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t _s11ActivityKit0A6CenterC23liveActivitiesSupportedSbvgZ_0()
{
  id v0;
  void *v1;
  unsigned int deviceClassNumber;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    v1 = v0;
    deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    if (deviceClassNumber >= 7)
      return 0;
    else
      return (0x4Au >> deviceClassNumber) & 1;
  }
  else
  {
    if (qword_255FFC658 != -1)
      swift_once();
    v4 = sub_232E6EF28();
    __swift_project_value_buffer(v4, (uint64_t)qword_255FFC638);
    v5 = sub_232E6EF10();
    v6 = sub_232E6F378();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_232DDB000, v5, v6, "Unable to determine device class from MobileGestalt - defaulting to live activities not supported", v7, 2u);
      MEMORY[0x23492A1F0](v7, -1, -1);
    }

    return 0;
  }
}

uint64_t sub_232E52AB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E52AD8(uint64_t *a1)
{
  uint64_t v1;

  return sub_232E505A0(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_232E52AE0(uint64_t *a1)
{
  uint64_t v1;

  return sub_232E50D44(a1, *(void (**)(_QWORD, __n128))(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_232E52AE8(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v4;
  char *v5;
  uint64_t v6;
  uint64_t ObjectType;
  char *v8;
  uint64_t v9;

  v8 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActivityAuthorization()), sel_init);
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)&v8[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_lock] + 16);
  os_unfair_lock_lock(v4);
  v5 = &v8[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient];
  if (MEMORY[0x23492A28C](&v8[OBJC_IVAR____TtC11ActivityKit21ActivityAuthorization_authorizationClient]))
  {
    v6 = *((_QWORD *)v5 + 1);
    ObjectType = swift_getObjectType();
    LOWORD(v9) = 512;
    (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v6 + 48))(a1, a2, &v9, ObjectType, v6);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v4);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_232E52D68()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_232E52D94(uint64_t *a1)
{
  uint64_t v1;

  sub_232E51B54(a1, *(_QWORD *)(v1 + 16), *(void (**)(id))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t type metadata accessor for ActivityCenterObjcBridge()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ActivityCenter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ActivityCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityCenter.descriptor(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ActivityCenter.descriptors(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ActivityCenter.isActivityEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ActivityCenter.areActivitiesEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ActivityCenter.areWidgetActivitiesEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ActivityCenter.endActivity(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ActivityCenter.observeDescriptors(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ActivityCenter.observeDescriptorStates(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ActivityCenter.observeDescriptorContentStates(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ActivityCenter.observePayloads(id:feed:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ActivityCenter.observeActivitiesExceedingReducedPushBudget(handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t method lookup function for ActivityCenterObjcBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityCenterObjcBridge.areActivitiesEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ActivityCenterObjcBridge.observeDescriptors(handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ActivityCenterObjcBridge.isActivityActive(identifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ActivityCenterObjcBridge.endActivity(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ActivityCenterObjcBridge.disableActivities(bundleIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ActivityCenterObjcBridge.observeActivityContentUpdates(handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ActivityCenterObjcBridge.observeActivitiesExceedingReducedPushBudget(handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

void sub_232E52FA0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_232E6F1E0();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_232E52FE0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_232E53004(uint64_t a1)
{
  uint64_t v1;

  sub_232E50EE8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232E5300C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityDescriptorContentState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ActivityPresentationMap.map.getter()
{
  return swift_bridgeObjectRetain();
}

ActivityKit::ActivityPresentationMap __swiftcall ActivityPresentationMap.init(map:)(ActivityKit::ActivityPresentationMap map)
{
  ActivityKit::ActivityPresentationMap *v1;

  v1->map._rawValue = map.map._rawValue;
  return map;
}

uint64_t sub_232E53074()
{
  sub_232E531EC();
  return sub_232E6F7D4();
}

uint64_t sub_232E5309C()
{
  sub_232E531EC();
  return sub_232E6F7E0();
}

uint64_t ActivityPresentationMap.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE6A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E531EC();
  sub_232E6F7C8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE6B8);
  sub_232E533BC(&qword_255FFE6C0, (uint64_t (*)(void))sub_232E53230, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_232E531EC()
{
  unint64_t result;

  result = qword_255FFE6B0;
  if (!qword_255FFE6B0)
  {
    result = MEMORY[0x23492A124](&unk_232E79DAC, &type metadata for ActivityPresentationMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE6B0);
  }
  return result;
}

unint64_t sub_232E53230()
{
  unint64_t result;

  result = qword_255FFE6C8;
  if (!qword_255FFE6C8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresenter, &type metadata for ActivityPresenter);
    atomic_store(result, (unint64_t *)&qword_255FFE6C8);
  }
  return result;
}

uint64_t ActivityPresentationMap.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE6D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E531EC();
  sub_232E6F7BC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE6B8);
    sub_232E533BC(&qword_255FFE6D8, (uint64_t (*)(void))sub_232E53430, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_232E533BC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255FFE6B8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23492A124](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232E53430()
{
  unint64_t result;

  result = qword_255FFE6E0;
  if (!qword_255FFE6E0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresenter, &type metadata for ActivityPresenter);
    atomic_store(result, (unint64_t *)&qword_255FFE6E0);
  }
  return result;
}

uint64_t sub_232E53474@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActivityPresentationMap.init(from:)(a1, a2);
}

uint64_t sub_232E53488(_QWORD *a1)
{
  return ActivityPresentationMap.encode(to:)(a1);
}

unint64_t sub_232E5349C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232DFD80C();
  a1[2] = sub_232E534D0();
  result = sub_232E53514();
  a1[3] = result;
  return result;
}

unint64_t sub_232E534D0()
{
  unint64_t result;

  result = qword_255FFE6E8;
  if (!qword_255FFE6E8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationMap, &type metadata for ActivityPresentationMap);
    atomic_store(result, (unint64_t *)&qword_255FFE6E8);
  }
  return result;
}

unint64_t sub_232E53514()
{
  unint64_t result;

  result = qword_255FFE6F0;
  if (!qword_255FFE6F0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationMap, &type metadata for ActivityPresentationMap);
    atomic_store(result, (unint64_t *)&qword_255FFE6F0);
  }
  return result;
}

uint64_t sub_232E53558()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E534D0();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

ValueMetadata *type metadata accessor for ActivityPresentationMap()
{
  return &type metadata for ActivityPresentationMap;
}

uint64_t storeEnumTagSinglePayload for ActivityPresentationMap.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E5366C + 4 * byte_232E79C00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E5368C + 4 * byte_232E79C05[v4]))();
}

_BYTE *sub_232E5366C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E5368C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E53694(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E5369C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E536A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E536AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationMap.CodingKeys()
{
  return &type metadata for ActivityPresentationMap.CodingKeys;
}

unint64_t sub_232E536CC()
{
  unint64_t result;

  result = qword_255FFE6F8;
  if (!qword_255FFE6F8)
  {
    result = MEMORY[0x23492A124](&unk_232E79D84, &type metadata for ActivityPresentationMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE6F8);
  }
  return result;
}

unint64_t sub_232E53714()
{
  unint64_t result;

  result = qword_255FFE700;
  if (!qword_255FFE700)
  {
    result = MEMORY[0x23492A124](&unk_232E79CF4, &type metadata for ActivityPresentationMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE700);
  }
  return result;
}

unint64_t sub_232E5375C()
{
  unint64_t result;

  result = qword_255FFE708;
  if (!qword_255FFE708)
  {
    result = MEMORY[0x23492A124](&unk_232E79D1C, &type metadata for ActivityPresentationMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE708);
  }
  return result;
}

void sub_232E537A0(char a1)
{
  sub_232E6F780();
  __asm { BR              X10 }
}

uint64_t sub_232E537F8()
{
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  return sub_232E6F7B0();
}

void sub_232E5389C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_232E538E4()
{
  sub_232E6F21C();
  return swift_bridgeObjectRelease();
}

void sub_232E53974(uint64_t a1, char a2)
{
  sub_232E6F780();
  __asm { BR              X10 }
}

uint64_t sub_232E539C8()
{
  sub_232E6F21C();
  swift_bridgeObjectRelease();
  return sub_232E6F7B0();
}

uint64_t sub_232E53A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = ActivityCategory.rawValue.getter();
  v2 = v1;
  if (v0 == ActivityCategory.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_232E6F6E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_232E53B00(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_232E53B5C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_232E53BC4 + 4 * byte_232E79E16[a2]))(0x72656E6E6162);
}

uint64_t sub_232E53BC4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x72656E6E6162 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_232E6F6E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_232E53C74(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_232E53CCC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_232E53D64 + 4 * byte_232E79E20[a2]))(0x53746E65746E6F63);
}

uint64_t sub_232E53D64(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x53746E65746E6F63 && v1 == 0xEC00000065746174)
    v2 = 1;
  else
    v2 = sub_232E6F6E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_232E53E4C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEC00000065746174;
  v3 = 0x53746E65746E6F63;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x746144656C617473;
    else
      v5 = 0x636E6176656C6572;
    if (v4 == 1)
      v6 = 0xE900000000000065;
    else
      v6 = 0xEE0065726F635365;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x53746E65746E6F63;
  v6 = 0xEC00000065746174;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x746144656C617473;
    else
      v3 = 0x636E6176656C6572;
    if (v7 == 1)
      v2 = 0xE900000000000065;
    else
      v2 = 0xEE0065726F635365;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_232E6F6E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void ActivityPayload.init(timestamp:content:alertConfiguration:)()
{
  type metadata accessor for ActivityPayload();
}

void sub_232E53FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = v2 + *(int *)(a1 + 60);
  v5 = type metadata accessor for AlertConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_232E6EE8C();
  v6 = v2 + *(int *)(a1 + 52);
  v7 = sub_232E6EE74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v1, v7);
  type metadata accessor for ActivityContent();
}

uint64_t sub_232E5405C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
  return sub_232E57210(v5, v3, &qword_254237AD8);
}

void type metadata accessor for ActivityPayload()
{
  JUMPOUT(0x23492A0B8);
}

void OpaqueActivityPayload.init<A>(encoding:)()
{
  type metadata accessor for ActivityContent();
}

void sub_232E54104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v13 - 152) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 144) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 160) = (char *)&a9 - v14;
  v15 = type metadata accessor for OpaqueActivityContent();
  *(_QWORD *)(v13 - 224) = v15;
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 168) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for OpaqueActivityPayload(0);
  v18 = v9 + *(int *)(v17 + 32);
  v19 = type metadata accessor for AlertConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = v9 + *(int *)(v17 + 36);
  v21 = sub_232E6EE74();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  *(_QWORD *)(v13 - 128) = v20;
  v22(v20, 1, 1, v21);
  v23 = sub_232E6EE98();
  v24 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v13 - 200) = v24;
  *(_QWORD *)(v13 - 192) = v23;
  (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v9, v11);
  v25 = *(_QWORD *)(v13 - 120);
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 104) = v25;
  *(_QWORD *)(v13 - 96) = *(_QWORD *)(v13 - 72);
  *(_QWORD *)(v13 - 88) = v10;
  type metadata accessor for ActivityPayload();
}

void sub_232E54220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = v1 + *(int *)(v5 + 20);
  *(_QWORD *)(v7 - 184) = v3;
  v10 = *(void (**)(void))(v3 + 16);
  *(_QWORD *)(v7 - 216) = v9;
  *(_QWORD *)(v7 - 208) = v2;
  v10();
  v11 = v4 + *(int *)(a1 + 60);
  *(_QWORD *)(v7 - 176) = v6;
  v12 = v6;
  v13 = *(_QWORD *)(v7 - 168);
  sub_232E54428(v11, v12, &qword_254237AD8);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v7 - 152) + 16))(*(_QWORD *)(v7 - 160), v4 + *(int *)(a1 + 56), *(_QWORD *)(v7 - 144));
  OpaqueActivityContent.init<A>(encoding:)(v13);
}

uint64_t sub_232E542A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v3, v2);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 200) + 8))(v0, *(_QWORD *)(v6 - 192));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 184) + 8))(*(_QWORD *)(v6 - 216), *(_QWORD *)(v6 - 208));
    v14 = *(_QWORD *)(v6 - 128);
    sub_232DDD798(*(_QWORD *)(v6 - 176), &qword_254237AD8);
    return sub_232DDD798(v14, &qword_254237978);
  }
  else
  {
    v7 = (uint64_t *)(v0 + *(int *)(v4 + 28));
    sub_232DEDD20(v5, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
    v8 = *v7;
    v9 = v7[1];
    v10 = (uint64_t *)(v0 + *(int *)(v4 + 24));
    *v10 = *v7;
    v10[1] = v9;
    v11 = (uint64_t)v7 + *(int *)(*(_QWORD *)(v6 - 224) + 20);
    sub_232DE4A2C(v8, v9);
    sub_232E54428(v11, *(_QWORD *)(v6 - 128), &qword_254237978);
    v12 = *v7;
    v13 = v7[1];
    sub_232DE4A2C(*v7, v13);
    sub_232E55298(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v3, v2);
    return sub_232DE8D98(v12, v13);
  }
}

uint64_t type metadata accessor for OpaqueActivityPayload(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_2542379C0);
}

uint64_t sub_232E54428(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

unint64_t ActivityPayloadError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v1 = type metadata accessor for ActivityPayloadError(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DED470(v0, (uint64_t)v3, v4);
  v5 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710) + 48)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v7 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v3, v6);
  return 0xD00000000000001ELL;
}

uint64_t ActivityPayloadError.failureReason.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE718);
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE720);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE728);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE730);
  v38 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v32 = *(_QWORD *)(v12 - 8);
  v13 = v32;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v15;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v31 - v17;
  v19 = type metadata accessor for ActivityPayloadError(0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DED470(v1, (uint64_t)v21, v22);
  v23 = &v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710) + 48)];
  v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v24(v18, v21, v12);
  v24(v15, v23, v12);
  sub_232E55500();
  sub_232E6ED0C();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE738);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
  sub_232E6EE14();
  sub_232E6ECAC();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v37);
  sub_232DDD798((uint64_t)v7, &qword_255FFE720);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v35);
  sub_232DDF49C(&qword_255FFE740, &qword_255FFE730, MEMORY[0x24BDCB518]);
  v26 = v34;
  sub_232E6ED18();
  v41 = v39;
  v42 = v40;
  sub_232E6F228();
  v27 = v31;
  sub_232E6ED18();
  sub_232E6F228();
  swift_bridgeObjectRelease();
  v28 = v41;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v26);
  v29 = *(void (**)(char *, uint64_t))(v32 + 8);
  v29(v27, v12);
  v29(v18, v12);
  return v28;
}

unint64_t ActivityPayloadError.errorUserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v40;
  unint64_t v41;
  _OWORD v42[2];
  __int128 v43;
  uint64_t v44;

  v1 = v0;
  v2 = type metadata accessor for ActivityPayloadError(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_232E4F118(MEMORY[0x24BEE4AF8]);
  sub_232DED470(v1, (uint64_t)v4, type metadata accessor for ActivityPayloadError);
  v6 = &v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710) + 48)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v4, v7);
  v9 = sub_232E6F1EC();
  v11 = v10;
  v12 = MEMORY[0x24BEE0D00];
  v44 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v43 = 0xD00000000000001ELL;
  *((_QWORD *)&v43 + 1) = 0x8000000232E7F850;
  sub_232E13408(&v43, v42);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41 = v5;
  sub_232E570E0(v42, v9, v11, isUniquelyReferenced_nonNull_native);
  v14 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = ActivityPayloadError.failureReason.getter();
  if (v16)
  {
    v17 = v15;
    v18 = v16;
    v19 = sub_232E6F1EC();
    v21 = v20;
    v44 = v12;
    *(_QWORD *)&v43 = v17;
    *((_QWORD *)&v43 + 1) = v18;
    sub_232E13408(&v43, v42);
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v41 = v14;
    sub_232E570E0(v42, v19, v21, v22);
    v14 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_232DDDAD8(&qword_255FFE748, type metadata accessor for ActivityPayloadError, (uint64_t)&protocol conformance descriptor for ActivityPayloadError);
  v23 = sub_232E6ED90();
  if (v24)
  {
    v25 = v23;
    v26 = v24;
    v27 = sub_232E6F1EC();
    v29 = v28;
    v44 = v12;
    *(_QWORD *)&v43 = v25;
    *((_QWORD *)&v43 + 1) = v26;
    sub_232E13408(&v43, v42);
    v30 = swift_isUniquelyReferenced_nonNull_native();
    v41 = v14;
    sub_232E570E0(v42, v27, v29, v30);
    v14 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v31 = sub_232E6ED6C();
  if (v32)
  {
    v33 = v31;
    v34 = v32;
    v35 = sub_232E6F1EC();
    v37 = v36;
    v44 = v12;
    *(_QWORD *)&v43 = v33;
    *((_QWORD *)&v43 + 1) = v34;
    sub_232E13408(&v43, v42);
    v38 = swift_isUniquelyReferenced_nonNull_native();
    v41 = v14;
    sub_232E570E0(v42, v35, v37, v38);
    v14 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v14;
}

unint64_t sub_232E54BC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v8;

  MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232DED470(v1, (uint64_t)v3, type metadata accessor for ActivityPayloadError);
  v4 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710) + 48)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v3, v5);
  return 0xD00000000000001ELL;
}

uint64_t sub_232E54C98()
{
  sub_232DDDAD8(&qword_255FFE788, type metadata accessor for ActivityPayloadError, (uint64_t)&protocol conformance descriptor for ActivityPayloadError);
  return sub_232E6F72C();
}

uint64_t sub_232E54CD8()
{
  sub_232DDDAD8(&qword_255FFE788, type metadata accessor for ActivityPayloadError, (uint64_t)&protocol conformance descriptor for ActivityPayloadError);
  return sub_232E6F720();
}

uint64_t static OpaqueActivityPayload.maximumContentStateSize.getter()
{
  return 4096;
}

uint64_t OpaqueActivityPayload.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_232E6EE98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t OpaqueActivityPayload.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OpaqueActivityPayload(0) + 20);
  v4 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t OpaqueActivityPayload.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OpaqueActivityPayload(0) + 20);
  v4 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OpaqueActivityPayload.timestamp.modify())()
{
  type metadata accessor for OpaqueActivityPayload(0);
  return nullsub_1;
}

uint64_t OpaqueActivityPayload.contentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for OpaqueActivityPayload(0) + 24);
  v2 = *(_QWORD *)v1;
  sub_232DE4A2C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t OpaqueActivityPayload.contentState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for OpaqueActivityPayload(0) + 24);
  result = sub_232DE8D98(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*OpaqueActivityPayload.contentState.modify())()
{
  type metadata accessor for OpaqueActivityPayload(0);
  return nullsub_1;
}

uint64_t OpaqueActivityPayload.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for OpaqueActivityPayload(0);
  return sub_232DED470(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
}

uint64_t OpaqueActivityPayload.content.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for OpaqueActivityPayload(0);
  return sub_232E5B36C(a1, v1 + *(int *)(v3 + 28), (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
}

uint64_t (*OpaqueActivityPayload.content.modify())()
{
  type metadata accessor for OpaqueActivityPayload(0);
  return nullsub_1;
}

uint64_t OpaqueActivityPayload.alertConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for OpaqueActivityPayload(0);
  return sub_232DF5040(v1 + *(int *)(v3 + 32), a1, &qword_254237AD8);
}

uint64_t OpaqueActivityPayload.alertConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for OpaqueActivityPayload(0);
  return sub_232E57210(a1, v1 + *(int *)(v3 + 32), &qword_254237AD8);
}

uint64_t (*OpaqueActivityPayload.alertConfiguration.modify())()
{
  type metadata accessor for OpaqueActivityPayload(0);
  return nullsub_1;
}

uint64_t OpaqueActivityPayload.staleDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for OpaqueActivityPayload(0);
  return sub_232DF5040(v1 + *(int *)(v3 + 36), a1, &qword_254237978);
}

uint64_t OpaqueActivityPayload.staleDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for OpaqueActivityPayload(0);
  return sub_232E57210(a1, v1 + *(int *)(v3 + 36), &qword_254237978);
}

uint64_t (*OpaqueActivityPayload.staleDate.modify())()
{
  type metadata accessor for OpaqueActivityPayload(0);
  return nullsub_1;
}

uint64_t OpaqueActivityPayload.init(timestamp:content:alertConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;

  v7 = (int *)type metadata accessor for OpaqueActivityPayload(0);
  v8 = a4 + v7[8];
  v9 = type metadata accessor for AlertConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a4 + v7[9];
  v11 = sub_232E6EE74();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  sub_232E6EE8C();
  v23 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a4 + v7[5], a1, v11);
  v14 = *a2;
  v13 = a2[1];
  v15 = (uint64_t *)(a4 + v7[6]);
  *v15 = *a2;
  v15[1] = v13;
  v16 = (uint64_t *)(a4 + v7[7]);
  sub_232DED470((uint64_t)a2, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
  sub_232DE4A2C(v14, v13);
  sub_232E54428(a3, v8, &qword_254237AD8);
  v17 = type metadata accessor for OpaqueActivityContent();
  sub_232E54428((uint64_t)a2 + *(int *)(v17 + 20), v10, &qword_254237978);
  v18 = *v16;
  v19 = v16[1];
  sub_232DE4A2C(*v16, v19);
  sub_232E55298(v18, v19);
  sub_232DE8D98(v18, v19);
  sub_232DDD798(a3, &qword_254237AD8);
  sub_232DF51B8((uint64_t)a2, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
  if (!v22)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v23, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v11);
  return sub_232DF51B8(a4, type metadata accessor for OpaqueActivityPayload);
}

void sub_232E55298(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X11 }
}

uint64_t sub_232E5533C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t);

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_bytes);
  sub_232E55500();
  sub_232E6ED00();
  v6 = objc_msgSend(v4, sel_bytes);
  sub_232E6ED00();
  sub_232DDF49C(&qword_254237968, &qword_254237970, MEMORY[0x24BDCB5C0]);
  if ((sub_232E6F1C8() & 1) != 0)
  {
    type metadata accessor for ActivityPayloadError(0);
    sub_232DDDAD8(&qword_255FFE760, type metadata accessor for ActivityPayloadError, (uint64_t)&protocol conformance descriptor for ActivityPayloadError);
    swift_allocError();
    v8 = v7;
    v9 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710) + 48);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v10(v8, v1, v0);
    v10(v9, v2, v0);
    swift_willThrow();
  }
  v11 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v11(v2, v0);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v1, v0);
}

uint64_t type metadata accessor for ActivityPayloadError(uint64_t a1)
{
  return sub_232DDDB18(a1, (uint64_t *)&unk_255FFE768);
}

unint64_t sub_232E55500()
{
  unint64_t result;

  result = qword_2542379F8;
  if (!qword_2542379F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542379F8);
  }
  return result;
}

uint64_t sub_232E5553C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_232E5557C(char *a1)
{
  sub_232E53C74(*a1);
}

void sub_232E55588()
{
  char *v0;

  sub_232E537A0(*v0);
}

void sub_232E55590(uint64_t a1)
{
  char *v1;

  sub_232E5389C(a1, *v1);
}

void sub_232E55598(uint64_t a1)
{
  char *v1;

  sub_232E53974(a1, *v1);
}

uint64_t sub_232E555A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_232E5B324();
  *a1 = result;
  return result;
}

uint64_t sub_232E555CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_232E55604 + 4 * byte_232E79E26[*v0]))();
}

void sub_232E55604(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "contentState");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_232E55628(_QWORD *a1@<X8>)
{
  *a1 = 0x746E65746E6F63;
  a1[1] = 0xE700000000000000;
}

void sub_232E55644(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000232E7D070;
}

void sub_232E55664(_QWORD *a1@<X8>)
{
  *a1 = 25705;
  a1[1] = 0xE200000000000000;
}

void sub_232E55674(_QWORD *a1@<X8>)
{
  *a1 = 0x746144656C617473;
  a1[1] = 0xE900000000000065;
}

uint64_t sub_232E55694()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E556CC + 4 * byte_232E79E2C[*v0]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_232E556CC()
{
  return 0x53746E65746E6F63;
}

uint64_t sub_232E556EC()
{
  return 0x746E65746E6F63;
}

unint64_t sub_232E55704()
{
  return 0xD000000000000012;
}

uint64_t sub_232E55720()
{
  return 25705;
}

uint64_t sub_232E5572C()
{
  return 0x746144656C617473;
}

uint64_t sub_232E55748@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_232E5B324();
  *a1 = result;
  return result;
}

uint64_t sub_232E5576C()
{
  sub_232E57254();
  return sub_232E6F7D4();
}

uint64_t sub_232E55794()
{
  sub_232E57254();
  return sub_232E6F7E0();
}

uint64_t OpaqueActivityPayload.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[3];
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  char v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for AlertConfiguration();
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC2F8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E57254();
  sub_232E6F7C8();
  LOBYTE(v31) = 4;
  sub_232E6EE98();
  sub_232DDDAD8(&qword_255FFC238, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  v13 = v2;
  v14 = v30;
  sub_232E6F6A8();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v26 = v8;
  v27 = v6;
  v30 = v10;
  v16 = type metadata accessor for OpaqueActivityPayload(0);
  LOBYTE(v31) = 0;
  v17 = sub_232E6EE74();
  sub_232DDDAD8(&qword_254237BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_232E6F6A8();
  v25[2] = v17;
  v31 = *(_OWORD *)(v13 + *(int *)(v16 + 24));
  v32 = 1;
  v18 = sub_232E069B0();
  sub_232E6F6A8();
  v19 = v30;
  v25[1] = v18;
  LOBYTE(v31) = 2;
  type metadata accessor for OpaqueActivityContent();
  sub_232DDDAD8((unint64_t *)&unk_254237410, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
  sub_232E6F6A8();
  LOBYTE(v31) = 5;
  sub_232E6F678();
  v20 = v29;
  sub_232DF5040(v13 + *(int *)(v16 + 32), v29, &qword_254237AD8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v20, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v9);
    return sub_232DDD798(v20, &qword_254237AD8);
  }
  else
  {
    v21 = (uint64_t)v26;
    sub_232DEDD20(v20, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
    sub_232E6ECF4();
    swift_allocObject();
    sub_232E6ECE8();
    sub_232DDDAD8(&qword_255FFE750, (uint64_t (*)(uint64_t))type metadata accessor for AlertConfiguration, (uint64_t)&protocol conformance descriptor for AlertConfiguration);
    v22 = sub_232E6ECDC();
    v24 = v23;
    *(_QWORD *)&v31 = v22;
    *((_QWORD *)&v31 + 1) = v23;
    v32 = 3;
    sub_232E6F6A8();
    swift_release();
    sub_232DF51B8(v21, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v9);
    return sub_232DE8D98(v22, v24);
  }
}

uint64_t OpaqueActivityPayload.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(void);
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  _QWORD *v64;
  __int128 v65;
  char v66;

  v50 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v52);
  v53 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_232E6EE74();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_232E6EE98();
  v56 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v59 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237A08);
  v60 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OpaqueActivityPayload(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v16[*(int *)(v17 + 32)];
  v19 = type metadata accessor for AlertConfiguration();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v63 = v18;
  v20(v18, 1, 1, v19);
  v21 = (uint64_t)&v16[*(int *)(v14 + 36)];
  v55 = v9;
  v22 = *(void (**)(void))(v9 + 56);
  v64 = (_QWORD *)v21;
  v58 = v8;
  v22();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E57254();
  v23 = v62;
  sub_232E6F7BC();
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_232DDD798(v63, &qword_254237AD8);
    return sub_232DDD798((uint64_t)v64, &qword_254237978);
  }
  else
  {
    v47 = v20;
    v48 = v19;
    v62 = (int *)v14;
    v24 = v58;
    LOBYTE(v65) = 4;
    sub_232DDDAD8(&qword_254237980, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v25 = v59;
    v26 = v61;
    v27 = v57;
    sub_232E6F63C();
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v16, v25, v26);
    LOBYTE(v65) = 0;
    sub_232DDDAD8(&qword_254238120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v29 = v54;
    sub_232E6F63C();
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v16[v62[5]], v29, v24);
    v66 = 1;
    v30 = sub_232E0683C();
    v59 = v16;
    v31 = v30;
    v54 = 0;
    sub_232E6F63C();
    v45 = v31;
    v32 = (uint64_t)v59;
    v46 = (uint64_t *)&v59[v62[6]];
    *(_OWORD *)v46 = v65;
    LOBYTE(v65) = 2;
    sub_232DDDAD8(&qword_2542379A0, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
    v33 = (uint64_t)v53;
    sub_232E6F63C();
    sub_232DEDD20(v33, v32 + v62[7], (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
    LOBYTE(v65) = 5;
    v34 = v51;
    sub_232E6F60C();
    v53 = v13;
    v35 = (uint64_t)v34;
    v36 = v27;
    sub_232E57210(v35, (uint64_t)v64, &qword_254237978);
    v38 = *v46;
    v37 = v46[1];
    sub_232DE4A2C(*v46, v37);
    sub_232E55298(v38, v37);
    sub_232DE8D98(v38, v37);
    v66 = 3;
    sub_232E6F60C();
    v39 = *((_QWORD *)&v65 + 1);
    if (*((_QWORD *)&v65 + 1) >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v36);
      v40 = v63;
      sub_232DDD798(v63, &qword_254237AD8);
      v47(v40, 1, 1, v48);
      v41 = v50;
    }
    else
    {
      v64 = a1;
      v42 = v65;
      sub_232E6ECD0();
      swift_allocObject();
      sub_232E6ECC4();
      sub_232DDDAD8(&qword_255FFE758, (uint64_t (*)(uint64_t))type metadata accessor for AlertConfiguration, (uint64_t)&protocol conformance descriptor for AlertConfiguration);
      v44 = v48;
      v43 = (uint64_t)v49;
      sub_232E6ECB8();
      v41 = v50;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v36);
      swift_release();
      sub_232DE4A18(v42, v39);
      v47(v43, 0, 1, v44);
      sub_232E57210(v43, v63, &qword_254237AD8);
      a1 = v64;
    }
    sub_232DED470(v32, v41, type metadata accessor for OpaqueActivityPayload);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_232DF51B8(v32, type metadata accessor for OpaqueActivityPayload);
  }
}

uint64_t sub_232E56488@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OpaqueActivityPayload.init(from:)(a1, a2);
}

uint64_t sub_232E5649C(_QWORD *a1)
{
  return OpaqueActivityPayload.encode(to:)(a1);
}

uint64_t sub_232E564B8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8(qword_255FFC240, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E56584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  sub_232DDDAD8(&qword_2542378A0, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
  sub_232E6ED9C();
  sub_232DDD798(a2, &qword_2542379D0);
  sub_232DE8D98(v8, v10);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v7, 0, 1, a3);
  return sub_232E5B3B0((uint64_t)v7, a2);
}

uint64_t ActivityPayload.timestamp.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = sub_232E6EE74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void ActivityPayload.init(timestamp:contentState:alertConfiguration:staleDate:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[20];

  v19[4] = a6;
  v19[13] = a4;
  v19[14] = a2;
  v19[11] = a3;
  v19[12] = a9;
  v19[9] = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  MEMORY[0x24BDAC7A8](v13);
  v19[10] = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_232E6EE74();
  v19[7] = *(_QWORD *)(v15 - 8);
  v19[8] = v15;
  MEMORY[0x24BDAC7A8](v15);
  v19[6] = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v17);
  v19[5] = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v19[15] = a5;
  v19[16] = a6;
  v19[17] = a7;
  v19[18] = a8;
  v19[1] = a7;
  v19[2] = a8;
  type metadata accessor for ActivityContent();
}

void sub_232E56870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v19;

  *(_QWORD *)(v13 - 216) = a1;
  MEMORY[0x24BDAC7A8](a1);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&a9 - v16;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v11 + 16);
  v19 = *(_QWORD *)(v13 - 128);
  *(_QWORD *)(v13 - 240) = v12;
  v18(v10, v19, v12, v15);
  sub_232DF5040(*(_QWORD *)(v13 - 136), v9, &qword_254237978);
  ActivityContent.init(state:staleDate:relevanceScore:)(v10, v12, (uint64_t)v17);
}

void sub_232E56914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v4 - 184) + 16))(*(_QWORD *)(v4 - 192), *(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 176));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v1, v3);
  sub_232DF5040(*(_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 160), &qword_254237AD8);
  ActivityPayload.init(timestamp:content:alertConfiguration:)();
}

uint64_t sub_232E56980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_232DDD798(*(_QWORD *)(v7 - 136), &qword_254237978);
  sub_232DDD798(v5, &qword_254237AD8);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v7 - 200) + 8))(*(_QWORD *)(v7 - 128), v6);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v2);
  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v3, *(_QWORD *)(v7 - 216));
}

void ActivityPayload.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[12];

  v12[5] = a5;
  v12[4] = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  MEMORY[0x24BDAC7A8](v9);
  v12[3] = (char *)v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v11);
  v12[8] = a2;
  v12[9] = a3;
  v12[10] = a4;
  v12[11] = a5;
  type metadata accessor for ActivityContent();
}

void sub_232E56AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 168) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 160) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for ActivityPayload();
}

uint64_t sub_232E56AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v7 - 176) = a1;
  v8 = v1 + *(int *)(a1 + 60);
  v9 = type metadata accessor for AlertConfiguration();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  *(_QWORD *)(v7 - 120) = v8;
  v10(v8, 1, 1, v9);
  v11 = sub_232E6EE98();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  *(_QWORD *)(v7 - 72) = v1;
  v13(v1, v4, v11);
  v14 = (int *)type metadata accessor for OpaqueActivityPayload(0);
  v15 = v4;
  sub_232DED470(v4 + v14[7], v3, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
  v16 = *(_QWORD *)(v7 - 128);
  ActivityContent.init(from:)(v3, v6, v5, *(_QWORD *)(v7 - 144), *(_QWORD *)(v7 - 136), v2);
  if (v16)
  {
    sub_232DF51B8(v4, type metadata accessor for OpaqueActivityPayload);
    (*(void (**)(_QWORD, uint64_t))(v12 + 8))(*(_QWORD *)(v7 - 72), v11);
    return sub_232DDD798(*(_QWORD *)(v7 - 120), &qword_254237AD8);
  }
  else
  {
    v18 = *(_QWORD *)(v7 - 176);
    v19 = *(_QWORD *)(v7 - 72);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 168) + 32))(v19 + *(int *)(v18 + 56), v2, *(_QWORD *)(v7 - 160));
    v20 = v15 + v14[5];
    v21 = v19 + *(int *)(v18 + 52);
    v22 = sub_232E6EE74();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, v20, v22);
    v23 = *(_QWORD *)(v7 - 152);
    sub_232DF5040(v15 + v14[8], v23, &qword_254237AD8);
    sub_232DF51B8(v15, type metadata accessor for OpaqueActivityPayload);
    return sub_232E57210(v23, *(_QWORD *)(v7 - 120), &qword_254237AD8);
  }
}

uint64_t sub_232E56C8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_232E56DEC(a1, a2, a3, a4, (void (*)(void))sub_232E11934, (void (*)(void))sub_232E105EC, type metadata accessor for SubscribedActivity);
}

uint64_t sub_232E56CA8(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  char v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v7 = a2 & 1;
  v8 = (_QWORD *)*v3;
  v10 = sub_232E104D4(a2 & 1);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for OpaqueActivityPayload(0);
        return sub_232E5B36C(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, type metadata accessor for OpaqueActivityPayload);
      }
      return sub_232E572A4(v10, v7, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_232E11AE0();
      goto LABEL_7;
    }
    sub_232E1060C(v13, a3 & 1);
    v20 = sub_232E104D4(v7);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_232E572A4(v10, v7, a1, v16);
    }
  }
  result = sub_232E6F714();
  __break(1u);
  return result;
}

uint64_t sub_232E56DD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_232E56DEC(a1, a2, a3, a4, (void (*)(void))sub_232E11D08, (void (*)(void))sub_232E1094C, (uint64_t (*)(_QWORD))type metadata accessor for ActivityRequest);
}

uint64_t sub_232E56DEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), uint64_t (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD **v11;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_232DE0F18(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = a7(0);
        return sub_232E5B36C(a1, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a7);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v27 = sub_232DE0F18(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_232E57334(v17, a2, a3, a1, v23, a7);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_232E6F714();
  __break(1u);
  return result;
}

uint64_t sub_232E56F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_232DE0F18(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_232E1216C();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_unknownObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_232E11010(v17, a5 & 1);
  v23 = sub_232DE0F18(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_232E6F714();
  __break(1u);
  return result;
}

uint64_t sub_232E570C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_232E56DEC(a1, a2, a3, a4, (void (*)(void))sub_232E126D8, (void (*)(void))sub_232E11624, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
}

_OWORD *sub_232E570E0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_232DE0F18(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_232E13408(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_232E126EC();
      goto LABEL_7;
    }
    sub_232E11638(v15, a4 & 1);
    v21 = sub_232DE0F18(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_232E573CC(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_232E6F714();
  __break(1u);
  return result;
}

uint64_t sub_232E57210(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_232E57254()
{
  unint64_t result;

  result = qword_2542379A8;
  if (!qword_2542379A8)
  {
    result = MEMORY[0x23492A124](&unk_232E7A1EC, &type metadata for OpaqueActivityPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542379A8);
  }
  return result;
}

uint64_t sub_232E57298(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_232E57334(a1, a2, a3, a4, a5, type metadata accessor for SubscribedActivity);
}

uint64_t sub_232E572A4(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2 & 1;
  v7 = a4[7];
  v8 = type metadata accessor for OpaqueActivityPayload(0);
  result = sub_232DEDD20(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, type metadata accessor for OpaqueActivityPayload);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_232E57334(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  v11 = a5[7];
  v12 = a6(0);
  result = sub_232DEDD20(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

_OWORD *sub_232E573CC(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_232E13408(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

BOOL _s11ActivityKit06OpaqueA7PayloadV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char *v56;
  char v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;

  v74 = a2;
  v68 = sub_232E6EE74();
  v72 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v66 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254237758);
  MEMORY[0x24BDAC7A8](v69);
  v73 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
  MEMORY[0x24BDAC7A8](v5);
  v67 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v70 = (uint64_t)&v59 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v71 = (uint64_t)&v59 - v10;
  v11 = type metadata accessor for AlertConfiguration();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542377C0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v59 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v59 - v25;
  v27 = a1;
  v28 = v74;
  if ((sub_232E6EE80() & 1) == 0)
    return 0;
  v62 = v12;
  v64 = v23;
  v65 = v26;
  v60 = v14;
  v61 = v20;
  v63 = v17;
  v29 = (int *)type metadata accessor for OpaqueActivityPayload(0);
  if ((_s11ActivityKit0A13EndingOptionsV2eeoiySbAC_ACtFZ_0() & 1) == 0)
    return 0;
  sub_232E66B88(*(_QWORD *)(v27 + v29[6]), *(_QWORD *)(v27 + v29[6] + 8));
  if ((v30 & 1) == 0)
    return 0;
  _s11ActivityKit06OpaqueA7ContentV2eeoiySbAC_ACtFZ_0(v27 + v29[7]);
  if ((v31 & 1) == 0)
    return 0;
  v32 = (uint64_t)v65;
  sub_232DF5040(v27 + v29[8], (uint64_t)v65, &qword_254237AD8);
  v33 = (uint64_t)v64;
  sub_232DF5040(v28 + v29[8], (uint64_t)v64, &qword_254237AD8);
  v34 = (uint64_t)v63;
  v35 = (uint64_t)&v63[*(int *)(v15 + 48)];
  sub_232DF5040(v32, (uint64_t)v63, &qword_254237AD8);
  sub_232DF5040(v33, v35, &qword_254237AD8);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  v37 = v11;
  if (v36(v34, 1, v11) == 1)
  {
    sub_232DDD798(v33, &qword_254237AD8);
    sub_232DDD798(v32, &qword_254237AD8);
    if (v36(v35, 1, v11) == 1)
    {
      sub_232DDD798(v34, &qword_254237AD8);
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  v45 = (uint64_t)v61;
  sub_232DF5040(v34, (uint64_t)v61, &qword_254237AD8);
  if (v36(v35, 1, v11) == 1)
  {
    sub_232DDD798((uint64_t)v64, &qword_254237AD8);
    sub_232DDD798((uint64_t)v65, &qword_254237AD8);
    sub_232DF51B8(v45, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
LABEL_13:
    v46 = &qword_2542377C0;
    v47 = v34;
LABEL_22:
    sub_232DDD798(v47, v46);
    return 0;
  }
  v48 = (uint64_t)v60;
  sub_232DEDD20(v35, (uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
  if ((MEMORY[0x234929230](v45, v48) & 1) == 0
    || (MEMORY[0x234929230](v45 + *(int *)(v37 + 20), v48 + *(int *)(v37 + 20)) & 1) == 0)
  {
    sub_232DF51B8(v48, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
    sub_232DDD798((uint64_t)v64, &qword_254237AD8);
    sub_232DDD798((uint64_t)v65, &qword_254237AD8);
    sub_232DF51B8(v45, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
    v47 = v34;
    v46 = &qword_254237AD8;
    goto LABEL_22;
  }
  v49 = *(int *)(v37 + 24);
  v50 = *(_QWORD *)(v45 + v49 + 16);
  v77 = *(_OWORD *)(v45 + v49);
  v78 = v50;
  v51 = (__int128 *)(v48 + v49);
  v52 = *((_QWORD *)v51 + 2);
  v75 = *v51;
  v76 = v52;
  v53 = _s11ActivityKit18AlertConfigurationV0C5SoundV2eeoiySbAE_AEtFZ_0(&v77, &v75);
  sub_232DF51B8(v48, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
  sub_232DDD798((uint64_t)v64, &qword_254237AD8);
  sub_232DDD798((uint64_t)v65, &qword_254237AD8);
  sub_232DF51B8(v45, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
  sub_232DDD798(v34, &qword_254237AD8);
  if ((v53 & 1) == 0)
    return 0;
LABEL_8:
  v38 = v71;
  sub_232DF5040(v27 + v29[9], v71, &qword_254237978);
  v39 = v70;
  sub_232DF5040(v28 + v29[9], v70, &qword_254237978);
  v40 = v73;
  v41 = v73 + *(int *)(v69 + 48);
  sub_232DF5040(v38, v73, &qword_254237978);
  sub_232DF5040(v39, v41, &qword_254237978);
  v42 = v72;
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  v44 = v68;
  if (v43(v40, 1, v68) == 1)
  {
    sub_232DDD798(v39, &qword_254237978);
    sub_232DDD798(v38, &qword_254237978);
    if (v43(v41, 1, v44) == 1)
    {
      sub_232DDD798(v40, &qword_254237978);
      return 1;
    }
    goto LABEL_21;
  }
  v54 = v67;
  sub_232DF5040(v40, v67, &qword_254237978);
  if (v43(v41, 1, v44) == 1)
  {
    sub_232DDD798(v39, &qword_254237978);
    sub_232DDD798(v38, &qword_254237978);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v54, v44);
LABEL_21:
    v46 = (uint64_t *)&unk_254237758;
    v47 = v40;
    goto LABEL_22;
  }
  v56 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v66, v41, v44);
  sub_232DDDAD8(&qword_255FFDEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v57 = sub_232E6F1D4();
  v58 = *(void (**)(char *, uint64_t))(v42 + 8);
  v58(v56, v44);
  sub_232DDD798(v39, &qword_254237978);
  sub_232DDD798(v38, &qword_254237978);
  v58((char *)v54, v44);
  sub_232DDD798(v40, &qword_254237978);
  return (v57 & 1) != 0;
}

uint64_t sub_232E57B24()
{
  return sub_232DDDAD8(&qword_255FFE760, type metadata accessor for ActivityPayloadError, (uint64_t)&protocol conformance descriptor for ActivityPayloadError);
}

uint64_t sub_232E57B50(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_232DDDAD8(&qword_2542378A0, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
  a1[2] = sub_232DDDAD8(qword_255FFC240, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
  result = sub_232DDDAD8(&qword_255FFB380, type metadata accessor for OpaqueActivityPayload, (uint64_t)&protocol conformance descriptor for OpaqueActivityPayload);
  a1[3] = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActivityPayloadError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
    v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710);
    v7((uint64_t *)((char *)a1 + *(int *)(v8 + 48)), (uint64_t *)((char *)a2 + *(int *)(v8 + 48)), v6);
  }
  return a1;
}

uint64_t destroy for ActivityPayloadError(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v5)(uint64_t, uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v5(a1, v2);
  v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710) + 48);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v3, v2);
}

uint64_t initializeWithCopy for ActivityPayloadError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t assignWithCopy for ActivityPayloadError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24);
  v5(a1, a2, v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t initializeWithTake for ActivityPayloadError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t assignWithTake for ActivityPayloadError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237970);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40);
  v5(a1, a2, v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPayloadError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ActivityPayloadError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

void sub_232E57F34(uint64_t a1)
{
  unint64_t v2;
  int v3;

  sub_232E59514(319, &qword_255FFE778, (uint64_t (*)(uint64_t))sub_232E55500, MEMORY[0x24BDCB588]);
  if (v2 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v3;
  }
}

uint64_t dispatch thunk of AnyActivityPayload.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

_QWORD *initializeBufferWithCopyOfBuffer for OpaqueActivityPayload(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  void (*v56)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_232E6EE98();
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = a2;
    v12 = sub_232E6EE74();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v9, v10, v12);
    v15 = a3[6];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (uint64_t *)&v11[v15];
    v18 = *v17;
    v19 = v17[1];
    sub_232DE4A2C(*v17, v19);
    *v16 = v18;
    v16[1] = v19;
    v20 = a3[7];
    v21 = (_QWORD *)((char *)a1 + v20);
    v55 = v11;
    v22 = (uint64_t *)&v11[v20];
    v23 = *v22;
    v24 = v22[1];
    sub_232DE4A2C(*v22, v24);
    *v21 = v23;
    v21[1] = v24;
    v25 = type metadata accessor for OpaqueActivityContent();
    v26 = *(int *)(v25 + 20);
    v27 = (char *)v21 + v26;
    v28 = (char *)v22 + v26;
    v53 = v13;
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v30 = v12;
    v54 = v29;
    v56 = v14;
    if (v29(v28, 1, v12))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v14(v27, v28, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v27, 0, 1, v12);
    }
    *(uint64_t *)((char *)v21 + *(int *)(v25 + 24)) = *(uint64_t *)((char *)v22 + *(int *)(v25 + 24));
    v33 = a3[8];
    v34 = (char *)a1 + v33;
    v35 = &v55[v33];
    v36 = type metadata accessor for AlertConfiguration();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = sub_232E6EE08();
      v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
      v40(v34, v35, v39);
      v40(&v34[*(int *)(v36 + 20)], &v35[*(int *)(v36 + 20)], v39);
      v41 = *(int *)(v36 + 24);
      v42 = &v34[v41];
      v43 = &v35[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v45 = (void *)*((_QWORD *)v43 + 2);
      *((_QWORD *)v42 + 2) = v45;
      v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56);
      swift_bridgeObjectRetain();
      v47 = v45;
      v46(v34, 0, 1, v36);
    }
    v48 = a3[9];
    v49 = (char *)a1 + v48;
    v50 = &v55[v48];
    if (v54(&v55[v48], 1, v30))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v56(v49, v50, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v49, 0, 1, v30);
    }
  }
  return a1;
}

uint64_t destroy for OpaqueActivityPayload(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(uint64_t, uint64_t);

  v4 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_232E6EE74();
  v7 = *(_QWORD *)(v6 - 8);
  v18 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v18(v5, v6);
  sub_232DE8D98(*(_QWORD *)(a1 + a2[6]), *(_QWORD *)(a1 + a2[6] + 8));
  v8 = a1 + a2[7];
  sub_232DE8D98(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
  v9 = v8 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v10(v9, 1, v6))
    v18(v9, v6);
  v11 = a1 + a2[8];
  v12 = type metadata accessor for AlertConfiguration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = sub_232E6EE08();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v11, v13);
    v14(v11 + *(int *)(v12 + 20), v13);
    v15 = v11 + *(int *)(v12 + 24);
    swift_bridgeObjectRelease();

  }
  v16 = a1 + a2[9];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v16, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v18)(v16, v6);
  return result;
}

uint64_t initializeWithCopy for OpaqueActivityPayload(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  id v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  int *v50;
  void (*v51)(void *, const void *, uint64_t);

  v6 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_232E6EE74();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (uint64_t *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  v17 = v15[1];
  sub_232DE4A2C(*v15, v17);
  *v14 = v16;
  v14[1] = v17;
  v50 = a3;
  v18 = a3[7];
  v19 = (uint64_t *)(a1 + v18);
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a2 + v18);
  v22 = *(_QWORD *)(a2 + v18 + 8);
  sub_232DE4A2C(v21, v22);
  *v19 = v21;
  v19[1] = v22;
  v23 = type metadata accessor for OpaqueActivityContent();
  v24 = *(int *)(v23 + 20);
  v25 = (char *)v19 + v24;
  v26 = (const void *)(v20 + v24);
  v48 = v11;
  v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v51 = (void (*)(void *, const void *, uint64_t))v12;
  if (v49(v20 + v24, 1, v10))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v25, (uint64_t)v26, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  }
  *(uint64_t *)((char *)v19 + *(int *)(v23 + 24)) = *(_QWORD *)(v20 + *(int *)(v23 + 24));
  v28 = v50[8];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  v31 = type metadata accessor for AlertConfiguration();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = sub_232E6EE08();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    v35(v29, v30, v34);
    v35(&v29[*(int *)(v31 + 20)], &v30[*(int *)(v31 + 20)], v34);
    v36 = *(int *)(v31 + 24);
    v37 = &v29[v36];
    v38 = &v30[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = (void *)*((_QWORD *)v38 + 2);
    *((_QWORD *)v37 + 2) = v40;
    v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
    swift_bridgeObjectRetain();
    v42 = v40;
    v41(v29, 0, 1, v31);
  }
  v43 = v50[9];
  v44 = (void *)(a1 + v43);
  v45 = (const void *)(a2 + v43);
  if (v49((uint64_t)v45, 1, v10))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v51(v44, v45, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for OpaqueActivityPayload(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  void *v62;
  void *v63;
  id v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  int *v67;

  v6 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_232E6EE74();
  v11 = *(_QWORD *)(v10 - 8);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v65(v8, v9, v10);
  v12 = a3[6];
  v13 = (uint64_t *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  sub_232DE4A2C(*v14, v16);
  v17 = *v13;
  v18 = v13[1];
  *v13 = v15;
  v13[1] = v16;
  sub_232DE8D98(v17, v18);
  v67 = a3;
  v19 = a3[7];
  v20 = (uint64_t *)(a1 + v19);
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a2 + v19);
  v23 = *(_QWORD *)(a2 + v19 + 8);
  sub_232DE4A2C(v22, v23);
  v24 = *v20;
  v25 = v20[1];
  *v20 = v22;
  v20[1] = v23;
  sub_232DE8D98(v24, v25);
  v26 = type metadata accessor for OpaqueActivityContent();
  v27 = *(int *)(v26 + 20);
  v28 = (char *)v20 + v27;
  v29 = (char *)(v21 + v27);
  v66 = v11;
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v11) = v30((char *)v20 + v27, 1, v10);
  v31 = v30(v29, 1, v10);
  if ((_DWORD)v11)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v28, v29, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v28, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v28, v10);
LABEL_6:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  v65((uint64_t)v28, (uint64_t)v29, v10);
LABEL_7:
  *(uint64_t *)((char *)v20 + *(int *)(v26 + 24)) = *(_QWORD *)(v21 + *(int *)(v26 + 24));
  v33 = v67[8];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = type metadata accessor for AlertConfiguration();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      v41 = sub_232E6EE08();
      v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
      v42(v34, v35, v41);
      v42(&v34[*(int *)(v36 + 20)], &v35[*(int *)(v36 + 20)], v41);
      v43 = *(int *)(v36 + 24);
      v44 = &v34[v43];
      v45 = &v35[v43];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
      v46 = (void *)*((_QWORD *)v45 + 2);
      *((_QWORD *)v44 + 2) = v46;
      v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56);
      swift_bridgeObjectRetain();
      v48 = v46;
      v47(v34, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    sub_232DF51B8((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
LABEL_12:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_13;
  }
  v57 = sub_232E6EE08();
  v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24);
  v58(v34, v35, v57);
  v58(&v34[*(int *)(v36 + 20)], &v35[*(int *)(v36 + 20)], v57);
  v59 = *(int *)(v36 + 24);
  v60 = &v34[v59];
  v61 = &v35[v59];
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62 = (void *)*((_QWORD *)v60 + 2);
  v63 = (void *)*((_QWORD *)v61 + 2);
  *((_QWORD *)v60 + 2) = v63;
  v64 = v63;

LABEL_13:
  v50 = v67[9];
  v51 = (void *)(a1 + v50);
  v52 = (char *)(a2 + v50);
  v53 = v30((char *)(a1 + v50), 1, v10);
  v54 = v30(v52, 1, v10);
  if (!v53)
  {
    if (!v54)
    {
      v65((uint64_t)v51, (uint64_t)v52, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v66 + 8))(v51, v10);
    goto LABEL_18;
  }
  if (v54)
  {
LABEL_18:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v51, v52, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v51, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for OpaqueActivityPayload(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  int *v39;
  void (*v40)(void *, const void *, uint64_t);

  v6 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_232E6EE74();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  v39 = a3;
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v16 = type metadata accessor for OpaqueActivityContent();
  v17 = *(int *)(v16 + 20);
  v18 = (void *)(v14 + v17);
  v19 = (const void *)(v15 + v17);
  v37 = v11;
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v40 = (void (*)(void *, const void *, uint64_t))v12;
  if (v38(v15 + v17, 1, v10))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v18, (uint64_t)v19, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
  }
  *(_QWORD *)(v14 + *(int *)(v16 + 24)) = *(_QWORD *)(v15 + *(int *)(v16 + 24));
  v21 = v39[8];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = type metadata accessor for AlertConfiguration();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = sub_232E6EE08();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
    v28(v22, v23, v27);
    v28(&v22[*(int *)(v24 + 20)], &v23[*(int *)(v24 + 20)], v27);
    v29 = *(int *)(v24 + 24);
    v30 = &v22[v29];
    v31 = &v23[v29];
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v32 = v39[9];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v38((uint64_t)v34, 1, v10))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v40(v33, v34, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for OpaqueActivityPayload(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  int *v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);

  v6 = sub_232E6EE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_232E6EE74();
  v11 = *(_QWORD *)(v10 - 8);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v55(v8, v9, v10);
  v12 = a3[6];
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_232DE8D98(v13, v14);
  v57 = a3;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15);
  v19 = *(_QWORD *)(a1 + v15 + 8);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  sub_232DE8D98(v18, v19);
  v20 = type metadata accessor for OpaqueActivityContent();
  v21 = *(int *)(v20 + 20);
  v22 = (void *)(v16 + v21);
  v23 = (const void *)(v17 + v21);
  v56 = v11;
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v11) = v24(v16 + v21, 1, v10);
  v58 = v24;
  v25 = v24((uint64_t)v23, 1, v10);
  if ((_DWORD)v11)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v22, v23, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v22, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v56 + 8))(v22, v10);
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  v55((uint64_t)v22, (uint64_t)v23, v10);
LABEL_7:
  *(_QWORD *)(v16 + *(int *)(v20 + 24)) = *(_QWORD *)(v17 + *(int *)(v20 + 24));
  v27 = v57[8];
  v28 = (char *)(a1 + v27);
  v29 = (char *)(a2 + v27);
  v30 = type metadata accessor for AlertConfiguration();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      v35 = sub_232E6EE08();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32);
      v36(v28, v29, v35);
      v36(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v35);
      v37 = *(int *)(v30 + 24);
      v38 = &v28[v37];
      v39 = &v29[v37];
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    sub_232DF51B8((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for AlertConfiguration);
LABEL_12:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  v48 = sub_232E6EE08();
  v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40);
  v49(v28, v29, v48);
  v49(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v48);
  v50 = *(int *)(v30 + 24);
  v51 = &v28[v50];
  v52 = &v29[v50];
  v53 = *((_QWORD *)v52 + 1);
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = v53;
  swift_bridgeObjectRelease();
  v54 = (void *)*((_QWORD *)v51 + 2);
  *((_QWORD *)v51 + 2) = *((_QWORD *)v52 + 2);

LABEL_13:
  v41 = v57[9];
  v42 = (void *)(a1 + v41);
  v43 = (const void *)(a2 + v41);
  v44 = v58(a1 + v41, 1, v10);
  v45 = v58((uint64_t)v43, 1, v10);
  if (!v44)
  {
    if (!v45)
    {
      v55((uint64_t)v42, (uint64_t)v43, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v56 + 8))(v42, v10);
    goto LABEL_18;
  }
  if (v45)
  {
LABEL_18:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v42, v43, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v42, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpaqueActivityPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E591A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_232E6EE98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_232E6EE74();
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 12)
  {
    v14 = type metadata accessor for OpaqueActivityContent();
    v10 = *(_QWORD *)(v14 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v14;
      v12 = a3[7];
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
      v10 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v15;
        v12 = a3[8];
      }
      else
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
        v10 = *(_QWORD *)(v11 - 8);
        v12 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[6] + 8) >> 60;
  if (((4 * (_DWORD)v13) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v13) & 0xC | (v13 >> 2));
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OpaqueActivityPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232E592E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v8 = sub_232E6EE98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_232E6EE74();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 12)
      {
        v16 = (_QWORD *)(a1 + a4[6]);
        *v16 = 0;
        v16[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
        return result;
      }
      v17 = type metadata accessor for OpaqueActivityContent();
      v14 = *(_QWORD *)(v17 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v17;
        v15 = a4[7];
      }
      else
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AD8);
        v14 = *(_QWORD *)(v18 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v18;
          v15 = a4[8];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[9];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_232E59404()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_232E6EE98();
  if (v0 <= 0x3F)
  {
    sub_232E6EE74();
    if (v1 <= 0x3F)
    {
      type metadata accessor for OpaqueActivityContent();
      if (v2 <= 0x3F)
      {
        sub_232E59514(319, &qword_254237E38, (uint64_t (*)(uint64_t))type metadata accessor for AlertConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        if (v3 <= 0x3F)
        {
          sub_232E59514(319, (unint64_t *)&qword_2542383D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_232E59514(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_232E5956C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_232E6EE98();
  if (v1 <= 0x3F)
  {
    result = sub_232E6EE74();
    if (v2 <= 0x3F)
      type metadata accessor for ActivityContent();
  }
  return result;
}

uint64_t *sub_232E5964C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  void (*v49)(void *, const void *, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  void *v53;
  id v54;
  size_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  size_t __n;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(unint64_t, unint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;

  v70 = sub_232E6EE98();
  v4 = *(_QWORD *)(v70 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v74 = sub_232E6EE74();
  v6 = *(_QWORD *)(v74 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v66 = v5 + v7;
  v9 = (v5 + v8) & ~v8;
  v73 = v6;
  v10 = *(_QWORD *)(v6 + 64);
  v68 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v68 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 & 0xF8 | 7;
  v14 = v13 | v7;
  v15 = (v10 + v9 + v14) & ~v14;
  v67 = v11;
  v69 = *(_QWORD *)(v11 + 64) + v7;
  v16 = v69 & ~(unint64_t)v7;
  v72 = *(_DWORD *)(v6 + 84);
  if (v72)
    v17 = *(_QWORD *)(v6 + 64);
  else
    v17 = v10 + 1;
  v18 = sub_232E6EE08();
  v19 = v4;
  v20 = *(_QWORD *)(v18 - 8);
  v21 = *(_DWORD *)(v20 + 80);
  v22 = *(_QWORD *)(v20 + 64);
  v23 = v22 + v21;
  v24 = v22 + 7;
  v25 = ((v22 + 7 + ((v22 + v21) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 24;
  __n = v17;
  v26 = *(_DWORD *)(v19 + 80) | v7;
  v27 = v13 | v26 & 0xF8 | v21;
  if ((_DWORD)v27 == 7
    && ((v26 | *(_DWORD *)(v20 + 80) | v12) & 0x100000) == 0
    && v25 + ((v15 + ((v16 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + (v21 | 7) + 8) & ~(v21 | 7)) <= 0x18)
  {
    v63 = (v16 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = v21 | 7;
    v56 = v25;
    v57 = *(_QWORD *)(v18 - 8);
    v59 = v24;
    v60 = v23;
    v58 = v18;
    v31 = ~(unint64_t)v7;
    v61 = ~(v21 | 7);
    v62 = *(_DWORD *)(v20 + 84);
    v32 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v19 + 16))(a1, a2, v70);
    v33 = ((unint64_t)a1 + v66) & ~v8;
    v34 = ((unint64_t)a2 + v66) & v31;
    v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v73 + 16);
    v71(v33, v34, v74);
    v35 = (v33 + v10 + v14) & ~v14;
    v36 = (v34 + v10 + v14) & ~v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v67 + 16))(v35, v36, v68);
    v37 = (void *)((v69 + v35) & v31);
    v38 = (const void *)((v69 + v36) & v31);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48))(v38, 1, v74))
    {
      memcpy(v37, v38, __n);
    }
    else
    {
      v71((unint64_t)v37, (unint64_t)v38, v74);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v37, 0, 1, v74);
    }
    v40 = ~v21;
    v41 = 7;
    if (!v72)
      v41 = 8;
    *(_QWORD *)(((unint64_t)v37 + v10 + v41) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v38
                                                                                       + v10
                                                                                       + v41) & 0xFFFFFFFFFFFFF8);
    v42 = (void *)((v64 + v35 + v63 + 8) & v61);
    v43 = (const void *)((v64 + v36 + v63 + 8) & v61);
    if (v62 < 0x7FFFFFFE)
    {
      v46 = v59;
      v45 = v60;
      v47 = *(_QWORD *)(((v59 + (((unint64_t)v43 + v60) & v40)) & 0xFFFFFFFFFFFFF8) + 8);
      if (v47 >= 0xFFFFFFFF)
        LODWORD(v47) = -1;
      v48 = v47 - 1;
      if (v48 < 0)
        v48 = -1;
      if (v48 != -1)
        goto LABEL_20;
    }
    else
    {
      v44 = (*(uint64_t (**)(const void *))(v57 + 48))(v43);
      v46 = v59;
      v45 = v60;
      if (v44)
      {
LABEL_20:
        memcpy(v42, v43, v56);
        return v32;
      }
    }
    v49 = *(void (**)(void *, const void *, uint64_t))(v57 + 16);
    v50 = v45;
    v49(v42, v43, v58);
    v49((void *)(((unint64_t)v42 + v50) & v40), (const void *)(((unint64_t)v43 + v50) & v40), v58);
    v51 = (_QWORD *)((v46 + (((unint64_t)v42 + v50) & v40)) & 0xFFFFFFFFFFFFFFF8);
    v52 = (_QWORD *)((v46 + (((unint64_t)v43 + v50) & v40)) & 0xFFFFFFFFFFFFFFF8);
    *v51 = *v52;
    v51[1] = v52[1];
    v53 = (void *)v52[2];
    v51[2] = v53;
    swift_bridgeObjectRetain();
    v54 = v53;
    return v32;
  }
  v30 = *a2;
  *a1 = *a2;
  v32 = (uint64_t *)(v30 + ((v27 + 16) & ~v27));
  swift_retain();
  return v32;
}

void sub_232E59A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;

  v4 = sub_232E6EE98();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = sub_232E6EE74();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9) & ~v9;
  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v10, v7);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = v10 + v12;
  v14 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v15 = v9 | *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = (v13 + v15) & ~v15;
  (*(void (**)(uint64_t))(v14 + 8))(v16);
  v17 = *(_QWORD *)(v14 + 64) + v9;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v17 + v16) & ~v9, 1, v7))
    v11((v17 + v16) & ~v9, v7);
  v18 = v12 + (v17 & ~v9);
  if (!*(_DWORD *)(v8 + 84))
    ++v18;
  v19 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = sub_232E6EE08();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v16 + v19 + (v22 | 7) + 8) & ~(v22 | 7);
  v24 = *(_QWORD *)(v21 + 64);
  v25 = ~v22;
  if (*(_DWORD *)(v21 + 84) >= 0x7FFFFFFEu)
  {
    if ((*(unsigned int (**)(uint64_t))(v21 + 48))(v23))
      return;
LABEL_13:
    v28 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v28(v23, v20);
    v29 = (v24 + v22 + v23) & v25;
    v28(v29, v20);
    swift_bridgeObjectRelease();

    return;
  }
  v26 = *(_QWORD *)(((v24 + ((v24 + v22 + v23) & v25) + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v26 >= 0xFFFFFFFF)
    LODWORD(v26) = -1;
  v27 = v26 - 1;
  if (v27 < 0)
    v27 = -1;
  if (v27 == -1)
    goto LABEL_13;
}

uint64_t sub_232E59C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  size_t v25;
  size_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  void (*v42)(void *, const void *, uint64_t);
  unint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  void *v46;
  id v47;
  uint64_t v49;

  v6 = sub_232E6EE98();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_232E6EE74();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v49 = a1;
  v12 = ~v11;
  v13 = (v8 + v11 + a1) & ~v11;
  v14 = (v8 + v11 + a2) & ~v11;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v15(v13, v14, v9);
  v16 = *(_QWORD *)(v10 + 64);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v18 = v11 | *(_DWORD *)(v17 + 80) & 0xF8 | 7;
  v19 = (v16 + v18 + v13) & ~v18;
  v20 = (v16 + v18 + v14) & ~v18;
  (*(void (**)(size_t, size_t))(v17 + 16))(v19, v20);
  v21 = *(_QWORD *)(v17 + 64) + v11;
  v22 = (void *)((v21 + v19) & ~v11);
  v23 = (const void *)((v21 + v20) & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v23, 1, v9))
  {
    v24 = *(_DWORD *)(v10 + 84);
    if (v24)
      v25 = v16;
    else
      v25 = v16 + 1;
    memcpy(v22, v23, v25);
  }
  else
  {
    v15((uint64_t)v22, (uint64_t)v23, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
    v24 = *(_DWORD *)(v10 + 84);
  }
  if (v24)
    v26 = v16;
  else
    v26 = v16 + 1;
  *(_QWORD *)(((unint64_t)v22 + v26 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + v26 + 7) & 0xFFFFFFFFFFFFF8);
  v27 = (v26 + (v21 & v12) + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = sub_232E6EE08();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_DWORD *)(v29 + 80);
  v31 = v27 + v30 + 8;
  v32 = *(_DWORD *)(v29 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v33 = (void *)((v31 + v19) & v32);
  v34 = (const void *)((v31 + v20) & v32);
  v35 = *(_QWORD *)(v29 + 64);
  v36 = ~v30;
  v37 = v35 + v30;
  v38 = v35 + 7;
  if (*(_DWORD *)(v29 + 84) < 0x7FFFFFFEu)
  {
    v40 = *(_QWORD *)(((v38 + (((unint64_t)v34 + v37) & v36)) & 0xFFFFFFFFFFFFF8) + 8);
    if (v40 >= 0xFFFFFFFF)
      LODWORD(v40) = -1;
    v41 = v40 - 1;
    if (v41 < 0)
      v41 = -1;
    v39 = v49;
    if (v41 != -1)
      goto LABEL_12;
LABEL_18:
    v42 = *(void (**)(void *, const void *, uint64_t))(v29 + 16);
    v42(v33, v34, v28);
    v43 = ((unint64_t)v34 + v37) & v36;
    v42((void *)(((unint64_t)v33 + v37) & v36), (const void *)v43, v28);
    v44 = (_QWORD *)((v38 + (((unint64_t)v33 + v37) & v36)) & 0xFFFFFFFFFFFFFFF8);
    v45 = (_QWORD *)((v38 + v43) & 0xFFFFFFFFFFFFFFF8);
    *v44 = *v45;
    v44[1] = v45[1];
    v46 = (void *)v45[2];
    v44[2] = v46;
    swift_bridgeObjectRetain();
    v47 = v46;
    return v39;
  }
  v39 = v49;
  if (!(*(unsigned int (**)(const void *))(v29 + 48))(v34))
    goto LABEL_18;
LABEL_12:
  memcpy(v33, v34, ((v38 + (v37 & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 24);
  return v39;
}

uint64_t sub_232E59EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  size_t v25;
  size_t v26;
  size_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  size_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  int v44;
  void (*v45)(void *, const void *, uint64_t);
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  void *v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  unint64_t v55;
  void (*v56)(void *, uint64_t);
  void (*v58)(void *, const void *, uint64_t);
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  void *v62;
  void *v63;
  id v64;
  size_t v65;
  size_t __n;
  size_t __na;
  uint64_t v68;

  v6 = sub_232E6EE98();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_232E6EE74();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  __n = ~v11;
  v68 = a1;
  v12 = (v8 + v11 + a1) & ~v11;
  v13 = (v8 + v11 + a2) & ~v11;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v14(v12, v13, v9);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = v11 | *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v65 = *(_QWORD *)(v10 + 64);
  v17 = (v65 + v16 + v12) & ~v16;
  v18 = (v65 + v16 + v13) & ~v16;
  (*(void (**)(size_t, size_t))(v15 + 24))(v17, v18);
  v19 = *(_QWORD *)(v15 + 64) + v11;
  v20 = (void *)((v19 + v17) & ~v11);
  v21 = (void *)((v19 + v18) & ~v11);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v23 = v22(v20, 1, v9);
  v24 = v22(v21, 1, v9);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v20, v21, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      v25 = v65;
      goto LABEL_10;
    }
  }
  else
  {
    if (!v24)
    {
      v14((uint64_t)v20, (uint64_t)v21, v9);
      v25 = v65;
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v20, v9);
  }
  v25 = v65;
  if (*(_DWORD *)(v10 + 84))
    v26 = v65;
  else
    v26 = v65 + 1;
  memcpy(v20, v21, v26);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v27 = v25;
  else
    v27 = v25 + 1;
  *(_QWORD *)(((unint64_t)v20 + v27 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v27 + 7) & 0xFFFFFFFFFFFFF8);
  v28 = (v27 + (v19 & __n) + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = sub_232E6EE08();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int *)(v30 + 84);
  v32 = *(_DWORD *)(v30 + 80);
  v33 = v28 + v32 + 8;
  v34 = *(_DWORD *)(v30 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v35 = (void *)((v33 + v17) & v34);
  v36 = (void *)((v33 + v18) & v34);
  v37 = *(_QWORD *)(v30 + 64);
  v38 = ~v32;
  v39 = v37 + v32;
  v40 = v37 + 7;
  v41 = ((v37 + 7 + ((v37 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v31 >= 0x7FFFFFFE)
  {
    __na = ((v37 + 7 + ((v37 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 24;
    v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
    v43 = v42(v35, v31, v29);
    v44 = v42(v36, v31, v29);
    v41 = __na;
    if (v43)
      goto LABEL_15;
LABEL_24:
    v55 = ((unint64_t)v35 + v39) & v38;
    if (!v44)
    {
      v58 = *(void (**)(void *, const void *, uint64_t))(v30 + 24);
      v58(v35, v36, v29);
      v59 = ((unint64_t)v36 + v39) & v38;
      v58((void *)(((unint64_t)v35 + v39) & v38), (const void *)v59, v29);
      v60 = (_QWORD *)((v40 + v55) & 0xFFFFFFFFFFFFFFF8);
      v61 = (_QWORD *)((v40 + v59) & 0xFFFFFFFFFFFFFFF8);
      *v60 = *v61;
      v60[1] = v61[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62 = (void *)v60[2];
      v63 = (void *)v61[2];
      v60[2] = v63;
      v64 = v63;

      return v68;
    }
    v56 = *(void (**)(void *, uint64_t))(v30 + 8);
    v56(v35, v29);
    v56((void *)(((unint64_t)v35 + v39) & v38), v29);
    swift_bridgeObjectRelease();

    goto LABEL_26;
  }
  v51 = *(_QWORD *)(((v40 + (((unint64_t)v35 + v39) & v38)) & 0xFFFFFFFFFFFFF8) + 8);
  LODWORD(v52) = -1;
  if (v51 >= 0xFFFFFFFF)
    LODWORD(v51) = -1;
  v53 = v51 - 1;
  if (*(_QWORD *)(((v40 + (((unint64_t)v36 + v39) & v38)) & 0xFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL)
    v52 = *(_QWORD *)(((v40 + (((unint64_t)v36 + v39) & v38)) & 0xFFFFFFFFFFFFF8) + 8);
  v54 = v52 - 1;
  if (v54 < 0)
    v54 = -1;
  v44 = v54 + 1;
  if (v53 < 0)
    goto LABEL_24;
LABEL_15:
  if (v44)
  {
LABEL_26:
    memcpy(v35, v36, v41);
    return v68;
  }
  v45 = *(void (**)(void *, const void *, uint64_t))(v30 + 16);
  v45(v35, v36, v29);
  v46 = ((unint64_t)v36 + v39) & v38;
  v45((void *)(((unint64_t)v35 + v39) & v38), (const void *)v46, v29);
  v47 = (_QWORD *)((v40 + (((unint64_t)v35 + v39) & v38)) & 0xFFFFFFFFFFFFFFF8);
  v48 = (_QWORD *)((v40 + v46) & 0xFFFFFFFFFFFFFFF8);
  *v47 = *v48;
  v47[1] = v48[1];
  v49 = (void *)v48[2];
  v47[2] = v49;
  swift_bridgeObjectRetain();
  v50 = v49;
  return v68;
}

uint64_t sub_232E5A310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  size_t v25;
  size_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  void (*v42)(void *, const void *, uint64_t);
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;

  v6 = sub_232E6EE98();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_232E6EE74();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v48 = a1;
  v12 = ~v11;
  v13 = (v8 + v11 + a1) & ~v11;
  v14 = (v8 + v11 + a2) & ~v11;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v15(v13, v14, v9);
  v16 = *(_QWORD *)(v10 + 64);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v18 = v11 | *(_DWORD *)(v17 + 80) & 0xF8 | 7;
  v19 = (v16 + v18 + v13) & ~v18;
  v20 = (v16 + v18 + v14) & ~v18;
  (*(void (**)(size_t, size_t))(v17 + 32))(v19, v20);
  v21 = *(_QWORD *)(v17 + 64) + v11;
  v22 = (void *)((v21 + v19) & ~v11);
  v23 = (const void *)((v21 + v20) & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v23, 1, v9))
  {
    v24 = *(_DWORD *)(v10 + 84);
    if (v24)
      v25 = v16;
    else
      v25 = v16 + 1;
    memcpy(v22, v23, v25);
  }
  else
  {
    v15((uint64_t)v22, (uint64_t)v23, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
    v24 = *(_DWORD *)(v10 + 84);
  }
  if (v24)
    v26 = v16;
  else
    v26 = v16 + 1;
  *(_QWORD *)(((unint64_t)v22 + v26 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + v26 + 7) & 0xFFFFFFFFFFFFF8);
  v27 = (v26 + (v21 & v12) + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = sub_232E6EE08();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_DWORD *)(v29 + 80);
  v31 = v27 + v30 + 8;
  v32 = *(_DWORD *)(v29 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v33 = (void *)((v31 + v19) & v32);
  v34 = (const void *)((v31 + v20) & v32);
  v35 = *(_QWORD *)(v29 + 64);
  v36 = ~v30;
  v37 = v35 + v30;
  v38 = v35 + 7;
  if (*(_DWORD *)(v29 + 84) < 0x7FFFFFFEu)
  {
    v40 = *(_QWORD *)(((v38 + (((unint64_t)v34 + v37) & v36)) & 0xFFFFFFFFFFFFF8) + 8);
    if (v40 >= 0xFFFFFFFF)
      LODWORD(v40) = -1;
    v41 = v40 - 1;
    if (v41 < 0)
      v41 = -1;
    v39 = v48;
    if (v41 != -1)
      goto LABEL_12;
LABEL_18:
    v42 = *(void (**)(void *, const void *, uint64_t))(v29 + 32);
    v42(v33, v34, v28);
    v43 = ((unint64_t)v34 + v37) & v36;
    v42((void *)(((unint64_t)v33 + v37) & v36), (const void *)v43, v28);
    v44 = (v38 + v43) & 0xFFFFFFFFFFFFFFF8;
    v45 = *(_QWORD *)(v44 + 16);
    v46 = (v38 + (((unint64_t)v33 + v37) & v36)) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)v46 = *(_OWORD *)v44;
    *(_QWORD *)(v46 + 16) = v45;
    return v39;
  }
  v39 = v48;
  if (!(*(unsigned int (**)(const void *))(v29 + 48))(v34))
    goto LABEL_18;
LABEL_12:
  memcpy(v33, v34, ((v38 + (v37 & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 24);
  return v39;
}

uint64_t sub_232E5A5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  size_t v25;
  size_t v26;
  size_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  size_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  int v44;
  void (*v45)(void *, const void *, uint64_t);
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  unint64_t v54;
  void (*v55)(void *, uint64_t);
  void (*v57)(void *, const void *, uint64_t);
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  void *v61;
  size_t v62;
  size_t __n;
  size_t __na;
  uint64_t v65;

  v6 = sub_232E6EE98();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_232E6EE74();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  __n = ~v11;
  v65 = a1;
  v12 = (v8 + v11 + a1) & ~v11;
  v13 = (v8 + v11 + a2) & ~v11;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v14(v12, v13, v9);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = v11 | *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v62 = *(_QWORD *)(v10 + 64);
  v17 = (v62 + v16 + v12) & ~v16;
  v18 = (v62 + v16 + v13) & ~v16;
  (*(void (**)(size_t, size_t))(v15 + 40))(v17, v18);
  v19 = *(_QWORD *)(v15 + 64) + v11;
  v20 = (void *)((v19 + v17) & ~v11);
  v21 = (void *)((v19 + v18) & ~v11);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v23 = v22(v20, 1, v9);
  v24 = v22(v21, 1, v9);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v20, v21, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      v25 = v62;
      goto LABEL_10;
    }
  }
  else
  {
    if (!v24)
    {
      v14((uint64_t)v20, (uint64_t)v21, v9);
      v25 = v62;
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v20, v9);
  }
  v25 = v62;
  if (*(_DWORD *)(v10 + 84))
    v26 = v62;
  else
    v26 = v62 + 1;
  memcpy(v20, v21, v26);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v27 = v25;
  else
    v27 = v25 + 1;
  *(_QWORD *)(((unint64_t)v20 + v27 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v27 + 7) & 0xFFFFFFFFFFFFF8);
  v28 = (v27 + (v19 & __n) + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = sub_232E6EE08();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int *)(v30 + 84);
  v32 = *(_DWORD *)(v30 + 80);
  v33 = v28 + v32 + 8;
  v34 = *(_DWORD *)(v30 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v35 = (void *)((v33 + v17) & v34);
  v36 = (void *)((v33 + v18) & v34);
  v37 = *(_QWORD *)(v30 + 64);
  v38 = ~v32;
  v39 = v37 + v32;
  v40 = v37 + 7;
  v41 = ((v37 + 7 + ((v37 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v31 >= 0x7FFFFFFE)
  {
    __na = ((v37 + 7 + ((v37 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 24;
    v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
    v43 = v42(v35, v31, v29);
    v44 = v42(v36, v31, v29);
    v41 = __na;
    if (v43)
      goto LABEL_15;
LABEL_24:
    v54 = ((unint64_t)v35 + v39) & v38;
    if (!v44)
    {
      v57 = *(void (**)(void *, const void *, uint64_t))(v30 + 40);
      v57(v35, v36, v29);
      v58 = ((unint64_t)v36 + v39) & v38;
      v57((void *)(((unint64_t)v35 + v39) & v38), (const void *)v58, v29);
      v59 = (_QWORD *)((v40 + v54) & 0xFFFFFFFFFFFFFFF8);
      v60 = (_QWORD *)((v40 + v58) & 0xFFFFFFFFFFFFFFF8);
      *v59 = *v60;
      v59[1] = v60[1];
      swift_bridgeObjectRelease();
      v61 = (void *)v59[2];
      v59[2] = v60[2];

      return v65;
    }
    v55 = *(void (**)(void *, uint64_t))(v30 + 8);
    v55(v35, v29);
    v55((void *)(((unint64_t)v35 + v39) & v38), v29);
    swift_bridgeObjectRelease();

    goto LABEL_26;
  }
  v50 = *(_QWORD *)(((v40 + (((unint64_t)v35 + v39) & v38)) & 0xFFFFFFFFFFFFF8) + 8);
  LODWORD(v51) = -1;
  if (v50 >= 0xFFFFFFFF)
    LODWORD(v50) = -1;
  v52 = v50 - 1;
  if (*(_QWORD *)(((v40 + (((unint64_t)v36 + v39) & v38)) & 0xFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL)
    v51 = *(_QWORD *)(((v40 + (((unint64_t)v36 + v39) & v38)) & 0xFFFFFFFFFFFFF8) + 8);
  v53 = v51 - 1;
  if (v53 < 0)
    v53 = -1;
  v44 = v53 + 1;
  if (v52 < 0)
    goto LABEL_24;
LABEL_15:
  if (v44)
  {
LABEL_26:
    memcpy(v35, v36, v41);
    return v65;
  }
  v45 = *(void (**)(void *, const void *, uint64_t))(v30 + 32);
  v45(v35, v36, v29);
  v46 = ((unint64_t)v36 + v39) & v38;
  v45((void *)(((unint64_t)v35 + v39) & v38), (const void *)v46, v29);
  v47 = (v40 + v46) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(_QWORD *)(v47 + 16);
  v49 = (v40 + (((unint64_t)v35 + v39) & v38)) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v49 = *(_OWORD *)v47;
  *(_QWORD *)(v49 + 16) = v48;
  return v65;
}

uint64_t sub_232E5A9D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = sub_232E6EE98();
  v5 = *(_QWORD *)(v49 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = sub_232E6EE74();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v47 = *(_QWORD *)(a3 + 16);
  v48 = v7;
  v11 = *(_QWORD *)(v47 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if ((_DWORD)v9)
    v13 = v9 - 1;
  else
    v13 = 0;
  if (v13 <= v12)
    v14 = *(_DWORD *)(v11 + 84);
  else
    v14 = v13;
  if (v14 <= v10)
    v15 = v10;
  else
    v15 = v14;
  v16 = *(_QWORD *)(sub_232E6EE08() - 8);
  v17 = *(_DWORD *)(v16 + 84);
  if (v17 <= 0x7FFFFFFE)
    v18 = 2147483646;
  else
    v18 = *(_DWORD *)(v16 + 84);
  v19 = v18 - 1;
  if (v19 <= v15)
    v19 = v15;
  v20 = *(unsigned __int8 *)(v8 + 80);
  v21 = *(_QWORD *)(v11 + 64) + v20;
  v22 = v21 & ~v20;
  v23 = v22 + 7;
  v24 = v22 + 8;
  if ((_DWORD)v9)
    v25 = v23;
  else
    v25 = v24;
  if (!a2)
    return 0;
  v26 = *(_QWORD *)(v5 + 64) + v20;
  v27 = *(_QWORD *)(v8 + 64);
  v28 = v20 | *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v29 = *(unsigned __int8 *)(v16 + 80);
  v30 = v29 | 7;
  v31 = *(_QWORD *)(v16 + 64);
  v32 = v31 + v29;
  v33 = v31 + 7;
  if (v19 < a2)
  {
    if (((((v33 + (v32 & ~v29)) & 0xFFFFFFFFFFFFFFF8)
         + ((v29 + ((v25 + v27) & 0xFFFFFFFFFFFFFFF8) + ((v27 + (v26 & ~v20) + v28) & ~v28) + 8) & ~v30)
         + 24) & 0xFFFFFFF8) != 0)
      v34 = 2;
    else
      v34 = a2 - v19 + 1;
    if (v34 >= 0x10000)
      v35 = 4;
    else
      v35 = 2;
    if (v34 < 0x100)
      v35 = 1;
    if (v34 >= 2)
      v36 = v35;
    else
      v36 = 0;
    __asm { BR              X26 }
  }
  if ((_DWORD)v6 == v19)
  {
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v40 = v49;
    v39 = a1;
    v41 = v6;
    return v38(v39, v41, v40);
  }
  v42 = ~v20;
  v39 = (v26 + a1) & v42;
  if ((_DWORD)v9 == v19)
  {
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v41 = v9;
    v40 = v48;
    return v38(v39, v41, v40);
  }
  v39 = (v39 + v27 + v28) & ~v28;
  if (v14 == v19)
  {
    if (v12 >= v13)
    {
      v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      v41 = v12;
      v40 = v47;
      return v38(v39, v41, v40);
    }
    v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))((v21 + v39) & v42, v9, v48, v30);
  }
  else
  {
    v44 = (v30 + v39 + ((v23 + v27 + ((_DWORD)v9 == 0)) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v30;
    if (v17 < 0x7FFFFFFE)
    {
      v45 = *(_QWORD *)(((v33 + ((v32 + v44) & ~v29)) & 0xFFFFFFFFFFFFF8) + 8);
      if (v45 >= 0xFFFFFFFF)
        LODWORD(v45) = -1;
      v46 = v45 - 1;
      if (v46 < 0)
        v46 = -1;
      v43 = v46 + 1;
    }
    else
    {
      v43 = (*(uint64_t (**)(unint64_t))(v16 + 48))(v44);
    }
  }
  if (v43 >= 2)
    return v43 - 1;
  else
    return 0;
}

void sub_232E5AD00(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  unsigned int v26;
  int v27;
  unsigned int v28;

  v6 = *(_QWORD *)(sub_232E6EE98() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(sub_232E6EE74() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v12 = v9 - 1;
  if (!v9)
    v12 = 0;
  if (v12 <= *(_DWORD *)(v11 + 84))
    v13 = *(_DWORD *)(v11 + 84);
  else
    v13 = v12;
  if (v13 <= v10)
    v14 = v10;
  else
    v14 = v13;
  v15 = 0;
  v16 = *(_QWORD *)(sub_232E6EE08() - 8);
  if (*(_DWORD *)(v16 + 84) <= 0x7FFFFFFEu)
    v17 = 2147483646;
  else
    v17 = *(_DWORD *)(v16 + 84);
  if (v17 - 1 <= v14)
    v18 = v14;
  else
    v18 = v17 - 1;
  v19 = *(unsigned __int8 *)(v8 + 80);
  v21 = (*(_QWORD *)(v11 + 64) + v19) & ~v19;
  v23 = v21 + 7;
  v24 = v21 + 8;
  if (v9)
    v24 = v23;
  v20 = v19 | *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v22 = *(unsigned __int8 *)(v16 + 80);
  v25 = ((*(_QWORD *)(v16 + 64) + 7 + ((*(_QWORD *)(v16 + 64) + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8)
      + 24
      + ((v22
        + ((v24 + *(_QWORD *)(v8 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + ((*(_QWORD *)(v8 + 64) + ((*(_QWORD *)(v6 + 64) + v19) & ~v19) + v20) & ~v20)
        + 8) & ~(v22 | 7));
  if (v18 < a3)
  {
    if ((_DWORD)v25)
      v26 = 2;
    else
      v26 = a3 - v18 + 1;
    if (v26 >= 0x10000)
      v27 = 4;
    else
      v27 = 2;
    if (v26 < 0x100)
      v27 = 1;
    if (v26 >= 2)
      v15 = v27;
    else
      v15 = 0;
  }
  if (a2 > v18)
  {
    if ((_DWORD)v25)
    {
      v28 = ~v18 + a2;
      bzero(a1, v25);
      *a1 = v28;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_232E5AF14(uint64_t a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, size_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43)
{
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(_DWORD *, uint64_t, uint64_t, uint64_t);
  _DWORD *v61;
  uint64_t v62;
  unsigned int v63;
  _DWORD *v64;
  unsigned int v65;
  int v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  _DWORD *v75;
  unsigned int v76;

  *((_BYTE *)v75 + v59) = 0;
  if (v76)
  {
    if ((_DWORD)v57 == v46)
    {
      v60 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v56 + 56);
      a4 = v74;
      v61 = v75;
      v62 = v76;
      a3 = v57;
LABEL_7:
      v60(v61, v62, a3, a4);
      return;
    }
    v61 = (_DWORD *)(((unint64_t)v75 + a1) & v58);
    if ((_DWORD)v53 == v46)
    {
      v60 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v62 = v76;
LABEL_6:
      a3 = v53;
      a4 = v73;
      goto LABEL_7;
    }
    v61 = (_DWORD *)(((unint64_t)v61 + a2 + v50) & a7);
    if (v54 == v46)
    {
      if ((_DWORD)v53)
      {
        v63 = v72;
        if (v55 >= v72)
          goto LABEL_25;
      }
      else
      {
        v63 = v72;
        if (v55 >= v72)
        {
LABEL_25:
          v60 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v51 + 56);
          v62 = v76;
          a3 = v55;
          a4 = v70;
          goto LABEL_7;
        }
        ++a2;
      }
      if (v63 >= v76)
      {
        v62 = v76 + 1;
        v60 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v52 + 56);
        v61 = (_DWORD *)(((unint64_t)v61 + v48) & v58);
        goto LABEL_6;
      }
      if ((_DWORD)a2)
      {
        if (a2 <= 3)
          v66 = a2;
        else
          v66 = 4;
        bzero((void *)(((unint64_t)v61 + v48) & v58), a2);
        __asm { BR              X10 }
      }
    }
    else
    {
      v64 = (_DWORD *)(((unint64_t)v61 + a5 + ((a6 + a2 + v71) & 0xFFFFFFFFFFFFFFF8) + 8) & v69);
      if (v45 >= v76 && (v62 = v76 + 1, v62 <= v44))
      {
        if (v76 != -1)
        {
          if (a3 > 0x7FFFFFFD)
          {
            v60 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v43 + 56);
            v61 = v64;
            goto LABEL_7;
          }
          v67 = (_QWORD *)((v49 + (((unint64_t)v64 + v47) & v68)) & 0xFFFFFFFFFFFFFFF8);
          if (v62 > 0x7FFFFFFE)
          {
            v67[1] = 0;
            v67[2] = 0;
            *v67 = v76 - 2147483646;
          }
          else
          {
            v67[1] = v62;
          }
        }
      }
      else if ((_DWORD)a8)
      {
        v65 = v76 - v44;
        bzero(v64, a8);
        *v64 = v65;
      }
    }
  }
}

void sub_232E5B0D4()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
}

void sub_232E5B148()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
}

void sub_232E5B150()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
}

void sub_232E5B160()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

uint64_t storeEnumTagSinglePayload for OpaqueActivityPayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_232E5B1CC + 4 * byte_232E79E4A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_232E5B200 + 4 * byte_232E79E45[v4]))();
}

uint64_t sub_232E5B200(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E5B208(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E5B210);
  return result;
}

uint64_t sub_232E5B21C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E5B224);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_232E5B228(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E5B230(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OpaqueActivityPayload.CodingKeys()
{
  return &type metadata for OpaqueActivityPayload.CodingKeys;
}

unint64_t sub_232E5B250()
{
  unint64_t result;

  result = qword_255FFE780;
  if (!qword_255FFE780)
  {
    result = MEMORY[0x23492A124](&unk_232E7A1C4, &type metadata for OpaqueActivityPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE780);
  }
  return result;
}

unint64_t sub_232E5B298()
{
  unint64_t result;

  result = qword_2542379B8;
  if (!qword_2542379B8)
  {
    result = MEMORY[0x23492A124](&unk_232E7A0FC, &type metadata for OpaqueActivityPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542379B8);
  }
  return result;
}

unint64_t sub_232E5B2E0()
{
  unint64_t result;

  result = qword_2542379B0;
  if (!qword_2542379B0)
  {
    result = MEMORY[0x23492A124](&unk_232E7A124, &type metadata for OpaqueActivityPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542379B0);
  }
  return result;
}

uint64_t sub_232E5B324()
{
  unint64_t v0;

  v0 = sub_232E6F5D0();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_232E5B36C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_232E5B3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542379D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E5B3F8(uint64_t a1, _QWORD *a2)
{
  return sub_232E5B764(a1, a2, (void (*)(void))sub_232DF5174);
}

uint64_t sub_232E5B40C(uint64_t a1, _QWORD *a2)
{
  return sub_232E5B764(a1, a2, (void (*)(void))sub_232DEBD34);
}

uint64_t sub_232E5B420(uint64_t a1, _QWORD *a2)
{
  return sub_232E5B764(a1, a2, (void (*)(void))sub_232DEBBB4);
}

uint64_t sub_232E5B434(uint64_t a1, _QWORD *a2)
{
  return sub_232E5B764(a1, a2, (void (*)(void))sub_232E09350);
}

uint64_t sub_232E5B448(uint64_t a1, _QWORD *a2)
{
  return sub_232E5B578(a1, a2, (void (*)(void))sub_232E16E20, (uint64_t)&type metadata for ActivityQoSPredicate, (void (*)(_QWORD))sub_232E5EFDC);
}

double sub_232E5B464(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  double result;
  __int128 v7;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232E16F30();
  sub_232E6ED9C();
  swift_bridgeObjectRelease();
  sub_232DE8D98(v3, v5);
  swift_release();
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_232E5B548(uint64_t a1, _QWORD *a2)
{
  return sub_232E5B764(a1, a2, (void (*)(void))sub_232DFD80C);
}

uint64_t sub_232E5B55C(uint64_t a1, _QWORD *a2)
{
  return sub_232E5B578(a1, a2, (void (*)(void))sub_232E16EEC, (uint64_t)&type metadata for ActivityProminencePredicate, (void (*)(_QWORD))sub_232E5F0EC);
}

uint64_t sub_232E5B578(uint64_t a1, _QWORD *a2, void (*a3)(void), uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  a3();
  sub_232E6ED9C();
  a5(*a2);
  sub_232DE8D98(v8, v10);
  result = swift_release();
  *a2 = v12;
  return result;
}

double sub_232E5B66C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  double result;
  __int128 v7;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232E12978();
  sub_232E6ED9C();
  sub_232E5F050(*a2);
  sub_232DE8D98(v3, v5);
  swift_release();
  result = *(double *)&v7;
  *(_OWORD *)a2 = v7;
  return result;
}

uint64_t sub_232E5B750(uint64_t a1, _QWORD *a2)
{
  return sub_232E5B764(a1, a2, (void (*)(void))sub_232E0422C);
}

uint64_t sub_232E5B764(uint64_t a1, _QWORD *a2, void (*a3)(void))
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v5 = sub_232E6EE44();
  v7 = v6;
  a3();
  sub_232E6ED9C();
  swift_bridgeObjectRelease();
  sub_232DE8D98(v5, v7);
  result = swift_release();
  *a2 = v9;
  return result;
}

double sub_232E5B84C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v3 = sub_232E6EE44();
  v5 = v4;
  sub_232E16E64();
  sub_232E6ED9C();
  sub_232E5EFEC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  sub_232DE8D98(v3, v5);
  swift_release();
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v8;
  result = *(double *)&v9;
  *(_OWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  return result;
}

void sub_232E5B94C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_232E6EDE4();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t sub_232E5B998(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *i;
  BOOL v25;
  BOOL v26;
  _QWORD *v28;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v6 = 0;
    v7 = a3 + 32;
    v28 = a1 + 9;
    v8 = a2 + 9;
    do
    {
      v9 = (_QWORD *)(v7 + 16 * v6);
      v11 = (_QWORD *)*v9;
      v10 = (_QWORD *)v9[1];
      if (*v9)
      {
        if (!a1)
          goto LABEL_4;
        v12 = v11[2];
        if (v12 != a1[2])
          goto LABEL_4;
        if (v12)
          v13 = v11 == a1;
        else
          v13 = 1;
        if (!v13)
        {
          v14 = v11[4] == a1[4] && v11[5] == a1[5];
          if (!v14 && (sub_232E6F6E4() & 1) == 0)
            goto LABEL_4;
          if (v12 != 1)
          {
            v15 = v11[6] == a1[6] && v11[7] == a1[7];
            if (!v15 && (sub_232E6F6E4() & 1) == 0)
              goto LABEL_4;
            v16 = v12 - 2;
            if (v16)
            {
              v17 = v11 + 9;
              v18 = v28;
              do
              {
                v26 = *(v17 - 1) == *(v18 - 1) && *v17 == *v18;
                if (!v26 && (sub_232E6F6E4() & 1) == 0)
                  goto LABEL_4;
                v18 += 2;
                v17 += 2;
              }
              while (--v16);
            }
          }
        }
      }
      else if (a1)
      {
        goto LABEL_4;
      }
      if (v10)
      {
        if (a2)
        {
          v19 = v10[2];
          if (v19 == a2[2])
          {
            if (!v19 || v10 == a2)
              return v6;
            v20 = v10[4] == a2[4] && v10[5] == a2[5];
            if (v20 || (sub_232E6F6E4() & 1) != 0)
            {
              if (v19 == 1)
                return v6;
              v21 = v10[6] == a2[6] && v10[7] == a2[7];
              if (v21 || (sub_232E6F6E4() & 1) != 0)
              {
                v22 = v19 - 2;
                if (!v22)
                  return v6;
                v23 = v10 + 9;
                for (i = v8; ; i += 2)
                {
                  v25 = *(v23 - 1) == *(i - 1) && *v23 == *i;
                  if (!v25 && (sub_232E6F6E4() & 1) == 0)
                    break;
                  v23 += 2;
                  if (!--v22)
                    return v6;
                }
              }
            }
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
LABEL_4:
      ++v6;
    }
    while (v6 != v3);
  }
  return 0;
}

uint64_t sub_232E5BBAC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *i;
  BOOL v14;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v4 = 0;
    v5 = a2 + 32;
    v6 = a1 + 9;
    do
    {
      v7 = *(_QWORD **)(v5 + 8 * v4);
      if (v7)
      {
        if (a1)
        {
          v8 = v7[2];
          if (v8 == a1[2])
          {
            if (!v8 || v7 == a1)
              return v4;
            v9 = v7[4] == a1[4] && v7[5] == a1[5];
            if (v9 || (sub_232E6F6E4() & 1) != 0)
            {
              if (v8 == 1)
                return v4;
              v10 = v7[6] == a1[6] && v7[7] == a1[7];
              if (v10 || (sub_232E6F6E4() & 1) != 0)
              {
                v11 = v8 - 2;
                if (!v11)
                  return v4;
                v12 = v7 + 9;
                for (i = v6; ; i += 2)
                {
                  v14 = *(v12 - 1) == *(i - 1) && *v12 == *i;
                  if (!v14 && (sub_232E6F6E4() & 1) == 0)
                    break;
                  v12 += 2;
                  if (!--v11)
                    return v4;
                }
              }
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (!a1)
          return v4;
      }
      ++v4;
    }
    while (v4 != v2);
  }
  return 0;
}

uint64_t sub_232E5BCE4@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_232E5E584(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[2 * a1];
    v10 = *((_OWORD *)v8 + 2);
    v9 = v8 + 4;
    *a2 = v10;
    v11 = v6 - 1 - a1;
    if (v11 >= 0)
    {
      result = (uint64_t)memmove(v9, v9 + 2, 16 * v11);
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E5BDC0@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_232E5BDCC(a1, (uint64_t (*)(uint64_t))sub_232E5E598, a2);
}

uint64_t sub_232E5BDCC@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v7 = *v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = a2(v7);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    v9 = v8 - 1;
    v10 = v7 + 8 * a1;
    v12 = *(_QWORD *)(v10 + 32);
    v11 = v10 + 32;
    *a3 = v12;
    v13 = v8 - 1 - a1;
    if (v13 >= 0)
    {
      result = (uint64_t)memmove((void *)v11, (const void *)(v11 + 8), 8 * v13);
      *(_QWORD *)(v7 + 16) = v9;
      *v3 = v7;
      return result;
    }
  }
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E5BEAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_232E0FE48(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_232E6F5B8();
  __break(1u);
  return result;
}

uint64_t sub_232E5BFFC()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_255FFE790);
  __swift_project_value_buffer(v0, (uint64_t)qword_255FFE790);
  return sub_232E6EF1C();
}

id sub_232E5C07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  if (qword_255FFC948 != -1)
    swift_once();
  v6 = (void *)qword_255FFE7A8;
  v7 = (void *)sub_232E6F1E0();
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_232DFAF90;
  v11[3] = &block_descriptor_12;
  v8 = _Block_copy(v11);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v6, sel_listenForActivityQoSWithActivityIdentifier_handler_, v7, v8);
  _Block_release(v8);

  return v9;
}

uint64_t sub_232E5C2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (qword_255FFC948 != -1)
    a1 = swift_once();
  MEMORY[0x24BDAC7A8](a1);
  sub_232E6EF64();
  result = sub_232E6F3D8();
  if (!v1)
    return v3;
  return result;
}

id ActivityQoSObservationClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ActivityQoSObservationClient.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityQoSObservationClient();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ActivityQoSObservationClient.__deallocating_deinit(uint64_t a1)
{
  return sub_232DFC954(a1, type metadata accessor for ActivityQoSObservationClient);
}

id sub_232E5C454()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)_s11ActivityKit9SingletonCMa_3()), sel_init);
  qword_255FFE7A8 = (uint64_t)result;
  return result;
}

uint64_t sub_232E5C4C4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  objc_class *v11;
  char *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t result;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];
  objc_super v23;

  v21 = sub_232E6F3C0();
  v1 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v5);
  v20 = OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue;
  v19[0] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v6 = v0;
  sub_232E6F0E4();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232DEA550();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  sub_232DDF49C((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0, MEMORY[0x24BEE12C8]);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v21);
  *(_QWORD *)(v19[1] + v20) = sub_232E6F3F0();
  v7 = OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_connection;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_connection] = 0;
  *(_DWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_serverStartupToken] = -1;
  v8 = OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton__qosPublisher;
  v9 = MEMORY[0x24BEE4AF8];
  aBlock[0] = sub_232E4F268(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE7F0);
  swift_allocObject();
  *(_QWORD *)&v6[v8] = sub_232E6F000();
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton__queue_qos] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton__queue_predicates] = v9;
  v10 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = 0;

  v11 = (objc_class *)_s11ActivityKit9SingletonCMa_3();
  v23.receiver = v6;
  v23.super_class = v11;
  v12 = (char *)objc_msgSendSuper2(&v23, sel_init);
  v13 = *(NSObject **)&v12[OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_232E5EFAC;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_232DDD4AC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDD48C;
  aBlock[3] = &block_descriptor_37_2;
  v16 = _Block_copy(aBlock);
  v17 = v12;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v13 & 1) == 0)
    return (uint64_t)v17;
  __break(1u);
  return result;
}

void sub_232E5C870()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_232E6F12C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)&v1[OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x24BEE5610], v2, v4);
  v8 = v7;
  LOBYTE(v7) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_connection;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_connection])
  {
    sub_232DE06B4(0, &qword_2542384C0);
    sub_232E5EF2C();
    v10 = (void *)sub_232E6F438();
    if (v10)
    {
      v11 = *(void **)&v1[v9];
      *(_QWORD *)&v1[v9] = v10;
      v12 = v10;

      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v1;
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = sub_232E5EF94;
      *(_QWORD *)(v14 + 24) = v13;
      aBlock[4] = sub_232DDD4B4;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232DE0650;
      aBlock[3] = &block_descriptor_19_3;
      v15 = _Block_copy(aBlock);
      v1;
      swift_retain();
      swift_release();
      objc_msgSend(v12, sel_configureConnection_, v15);
      _Block_release(v15);
      LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v15 & 1) == 0)
      {
        sub_232E5CF5C();
        swift_release();

        return;
      }
LABEL_8:
      __break(1u);
    }
  }
}

void sub_232E5CA98(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;

  v4 = (void *)sub_232E6F1E0();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_2560128C8);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_2560132E8);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a2 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue));
  v18 = sub_232E5CD1C;
  v19 = 0;
  v10 = MEMORY[0x24BDAC760];
  v14 = MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_22_2;
  v11 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v18 = sub_232E5CD28;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_25_2;
  v12 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  v18 = sub_232E5CD34;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_232DE3170;
  v17 = &block_descriptor_28_2;
  v13 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInvalidationHandler_, v13);
  _Block_release(v13);

}

void sub_232E5CD1C(uint64_t a1)
{
  sub_232E5CD40(a1, "QoS observation service: activated");
}

void sub_232E5CD28(uint64_t a1)
{
  sub_232E5CD40(a1, "QoS observation service: interrupted");
}

void sub_232E5CD34(uint64_t a1)
{
  sub_232E5CD40(a1, "QoS observation service: invalidated");
}

void sub_232E5CD40(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_255FFC940 != -1)
    swift_once();
  v3 = sub_232E6EF28();
  __swift_project_value_buffer(v3, (uint64_t)qword_255FFE790);
  oslog = sub_232E6EF10();
  v4 = sub_232E6F36C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_232DDB000, oslog, v4, a2, v5, 2u);
    MEMORY[0x23492A1F0](v5, -1, -1);
  }

}

void sub_232E5CE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _OWORD v10[2];

  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    sub_232E5C870();
    v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_connection);
    if (v8)
    {
      v9 = v8;
      if (objc_msgSend(v9, sel_remoteTarget))
      {
        sub_232E6F498();

        swift_unknownObjectRelease();
        sub_232DDD798((uint64_t)v10, &qword_2542382E8);
      }
      else
      {
        memset(v10, 0, sizeof(v10));
        sub_232DDD798((uint64_t)v10, &qword_2542382E8);
        objc_msgSend(v9, sel_activate);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_232E5CF5C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v10[6];

  sub_232E6EEBC();
  v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_232E5EF24;
  v10[5] = v2;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_232DFAF90;
  v10[3] = &block_descriptor_10_2;
  v3 = _Block_copy(v10);
  swift_release();
  v4 = sub_232E6F204();
  swift_bridgeObjectRelease();
  v5 = (int *)(v0 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_serverStartupToken);
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), v5, v1, v3);
  swift_endAccess();
  _Block_release(v3);
  swift_release();
  if ((_DWORD)v1)
  {
    if (qword_255FFC940 != -1)
      swift_once();
    v6 = sub_232E6EF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_255FFE790);
    v7 = sub_232E6EF10();
    v8 = sub_232E6F378();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_232DDB000, v7, v8, "Could not register for daemon startup notifications", v9, 2u);
      MEMORY[0x23492A1F0](v9, -1, -1);
    }

  }
}

void sub_232E5D130(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x23492A28C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_232E5D780();

  }
}

uint64_t sub_232E5D180()
{
  uint64_t v0;
  NSObject *v1;
  Class isa;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v1 = sub_232E6F12C();
  isa = v1[-1].isa;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (_QWORD *)((char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue);
  *v5 = v6;
  (*((void (**)(_QWORD *, _QWORD, NSObject *, double))isa + 13))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  (*((void (**)(_QWORD *, NSObject *))isa + 1))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_15;
  }
  sub_232E5CE14();
  v8 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_connection);
  if (!v8)
  {
    if (qword_255FFC940 != -1)
      swift_once();
    v9 = sub_232E6EF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_255FFE790);
    v1 = sub_232E6EF10();
    v10 = sub_232E6F384();
    if (os_log_type_enabled(v1, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_232DDB000, v1, v10, "ActivityQoSObservationClient: Failed to establish a connection", v11, 2u);
      MEMORY[0x23492A1F0](v11, -1, -1);
    }
    goto LABEL_18;
  }
  v1 = v8;
  if (-[NSObject remoteTarget](v1, sel_remoteTarget))
  {
    sub_232E6F498();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_232DE9CF0((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE7E0);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v17[1];
    }
  }
  else
  {
    sub_232DDD798((uint64_t)v19, &qword_2542382E8);
  }
  if (qword_255FFC940 != -1)
    goto LABEL_20;
LABEL_15:
  v13 = sub_232E6EF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_255FFE790);
  v14 = sub_232E6EF10();
  v15 = sub_232E6F384();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_232DDB000, v14, v15, "ActivityQoSObservationClient: Failed to cast connection to server interface protocol", v16, 2u);
    MEMORY[0x23492A1F0](v16, -1, -1);
  }

LABEL_18:
  return 0;
}

uint64_t sub_232E5D450(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v36[3];
  _QWORD v37[5];

  v2 = v1;
  v37[4] = *MEMORY[0x24BDAC8D0];
  v4 = sub_232E6F12C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (id *)((char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue);
  v10 = *a1;
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x24BEE5610], v4, v6);
  v11 = v9;
  LOBYTE(v9) = sub_232E6F144();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
    __break(1u);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton__queue_predicates);
  swift_beginAccess();
  v13 = *v12;
  swift_bridgeObjectRetain();
  v14 = sub_232E5BBAC(v10, v13);
  v16 = v15;
  result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    swift_beginAccess();
    sub_232E5BDCC(v14, (uint64_t (*)(uint64_t))sub_232E5E5AC, v37);
    swift_endAccess();
    swift_bridgeObjectRelease();
    result = sub_232E5D180();
    if (result)
    {
      v18 = (void *)result;
      v19 = *v12;
      v20 = (id)MEMORY[0x24BEE4AF8];
      v36[0] = (id)MEMORY[0x24BEE4AF8];
      v21 = *(_QWORD *)(v19 + 16);
      if (v21)
      {
        swift_bridgeObjectRetain();
        v22 = 0;
        while (*(_QWORD *)(v19 + 8 * v22 + 32))
        {
          ++v22;
          v23 = swift_bridgeObjectRetain();
          sub_232E5BEAC(v23);
          if (v21 == v22)
          {
            swift_bridgeObjectRelease();
            v20 = v36[0];
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = 0;
      }
LABEL_10:
      v36[0] = v20;
      sub_232E6EDD8();
      swift_allocObject();
      sub_232E6EDCC();
      sub_232E496D4();
      v24 = sub_232E6EDC0();
      v26 = v25;
      v27 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v24, v26);
      swift_release();
      swift_bridgeObjectRelease();
      v28 = sub_232E6EE44();
      v30 = v29;

      v31 = (void *)sub_232E6EE2C();
      v36[0] = 0;
      LOBYTE(v24) = objc_msgSend(v18, sel_subscribeToActivityQoSMatchingPredicate_error_, v31, v36);

      if ((v24 & 1) != 0)
      {
        v32 = v36[0];
        sub_232DE8D98(v28, v30);
      }
      else
      {
        v33 = v36[0];
        v34 = (void *)sub_232E6EDF0();

        swift_willThrow();
        sub_232DE8D98(v28, v30);

      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_232E5D780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v29[5];

  v29[4] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_232E6F12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (id *)((char *)&v29[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x24BEE5610], v1, v3);
  v7 = v6;
  LOBYTE(v6) = sub_232E6F144();
  v8 = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
    __break(1u);
  result = sub_232E5D180(v8);
  if (result)
  {
    v10 = (void *)result;
    v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton__queue_predicates);
    swift_beginAccess();
    v12 = *v11;
    v13 = (id)MEMORY[0x24BEE4AF8];
    v29[0] = (id)MEMORY[0x24BEE4AF8];
    v14 = *(_QWORD *)(v12 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = 0;
      while (*(_QWORD *)(v12 + 8 * v15 + 32))
      {
        ++v15;
        v16 = swift_bridgeObjectRetain();
        sub_232E5BEAC(v16);
        if (v14 == v15)
        {
          swift_bridgeObjectRelease();
          v13 = v29[0];
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = 0;
    }
LABEL_9:
    v29[0] = v13;
    sub_232E6EDD8();
    swift_allocObject();
    sub_232E6EDCC();
    sub_232E496D4();
    v17 = sub_232E6EDC0();
    v19 = v18;
    v20 = (void *)sub_232E6EE2C();
    sub_232DE8D98(v17, v19);
    swift_release();
    swift_bridgeObjectRelease();
    v21 = sub_232E6EE44();
    v23 = v22;

    v24 = (void *)sub_232E6EE2C();
    v29[0] = 0;
    LOBYTE(v17) = objc_msgSend(v10, sel_subscribeToActivityQoSMatchingPredicate_error_, v24, v29);

    if ((v17 & 1) != 0)
    {
      v25 = v29[0];
      sub_232DE8D98(v21, v23);
    }
    else
    {
      v26 = v29[0];
      v27 = (void *)sub_232E6EDF0();

      swift_willThrow();
      sub_232DE8D98(v21, v23);

    }
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_232E5DA34()
{
  return sub_232DFC954(0, _s11ActivityKit9SingletonCMa_3);
}

id sub_232E5DAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  objc_class *v10;
  id v11;
  char *v12;
  id v13;
  objc_super v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254237870);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_232E70DA0;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  sub_232E6EF64();
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_232E6F3D8();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = (objc_class *)type metadata accessor for CancellableAssertion();
  v11 = objc_allocWithZone(v10);
  swift_allocObject();
  swift_retain();
  v12 = (char *)v11;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11ActivityKit20CancellableAssertion_token] = sub_232E6EF70();

  v15.receiver = v12;
  v15.super_class = v10;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_release();
  return v13;
}

uint64_t sub_232E5DC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v8;
  char v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_232DE0F18(a2, a3);
    if ((v9 & 1) != 0)
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v8);
    else
      v10 = 1;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 1;
  }
  return a4(v10);
}

uint64_t sub_232E5DDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  _QWORD **v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  id v66;
  id v67[5];

  v65 = a3;
  v67[4] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237AE0);
  MEMORY[0x24BDAC7A8](v10);
  v64 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE7F8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)sub_232E5D180();
  if (v16)
  {
    v58 = a4;
    v59 = v13;
    v63 = v16;
    v17 = (_QWORD **)(a1 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton__queue_predicates);
    swift_beginAccess();
    v18 = *v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v60 = v12;
    v61 = a5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_232E103A8(0, v18[2] + 1, 1, v18);
    v21 = v18[2];
    v20 = v18[3];
    v22 = v21 + 1;
    if (v21 >= v20 >> 1)
      v18 = sub_232E103A8((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
    v18[2] = v22;
    v18[v21 + 4] = a2;
    v67[0] = (id)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    v23 = 0;
    v56 = a2;
    v57 = v15;
    while (v18[v23 + 4])
    {
      ++v23;
      v24 = swift_bridgeObjectRetain();
      sub_232E5BEAC(v24);
      if (v22 == v23)
      {
        swift_bridgeObjectRelease();
        v25 = v67[0];
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = 0;
LABEL_12:
    v67[0] = v25;
    sub_232E6EDD8();
    swift_allocObject();
    sub_232E6EDCC();
    sub_232E496D4();
    v28 = sub_232E6EDC0();
    if (v5)
    {
      result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      v30 = v28;
      v31 = v29;
      v32 = (void *)sub_232E6EE2C();
      sub_232DE8D98(v30, v31);
      swift_release();
      swift_bridgeObjectRelease();
      v33 = sub_232E6EE44();
      v35 = v34;

      v62 = v33;
      v36 = (void *)sub_232E6EE2C();
      v67[0] = 0;
      LOBYTE(v31) = objc_msgSend(v63, sel_subscribeToActivityQoSMatchingPredicate_error_, v36, v67);

      v37 = v67[0];
      if ((v31 & 1) != 0)
      {
        *v17 = v18;
        v38 = v37;
        swift_bridgeObjectRelease();
        v39 = *(void **)(a1 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton__qosPublisher);
        v66 = *(id *)(a1 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue);
        v40 = v66;
        v67[0] = v39;
        v41 = sub_232E6F3B4();
        v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
        v55 = v35;
        v43 = (uint64_t)v64;
        v42(v64, 1, 1, v41);
        swift_retain();
        v44 = v40;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE7F0);
        sub_232DE06B4(0, (unint64_t *)&qword_254238480);
        sub_232DDF49C(&qword_255FFE800, &qword_255FFE7F0, MEMORY[0x24BDB9D10]);
        sub_232DFDA08();
        v45 = v57;
        sub_232E6F084();
        sub_232DDD798(v43, &qword_254237AE0);

        swift_release();
        v46 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v47 = swift_allocObject();
        v48 = v56;
        *(_QWORD *)(v47 + 16) = v46;
        *(_QWORD *)(v47 + 24) = v48;
        v49 = (_QWORD *)swift_allocObject();
        v50 = v65;
        v49[2] = v48;
        v49[3] = v50;
        v49[4] = v58;
        sub_232DDF49C(&qword_255FFE808, &qword_255FFE7F8, MEMORY[0x24BDB9A08]);
        swift_bridgeObjectRetain_n();
        swift_retain();
        v51 = v60;
        v52 = sub_232E6F054();
        sub_232DE8D98(v62, v55);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v45, v51);
        *v61 = v52;
      }
      else
      {
        v53 = v67[0];
        swift_bridgeObjectRelease();
        sub_232E6EDF0();

        swift_willThrow();
        sub_232DE8D98(v62, v35);
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    sub_232DF9980();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_232E70D00;
    *(_OWORD *)(v26 + 16) = 0u;
    *(_OWORD *)(v26 + 32) = 0u;
    *(_OWORD *)(v26 + 48) = 0u;
    *(_QWORD *)(v26 + 64) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_232E5E360@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_232E5DDC8(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t type metadata accessor for ActivityQoSObservationClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for ActivityQoSObservationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityQoSObservationClient.listenForActivityQoS(activityIdentifier:handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x50))();
}

uint64_t dispatch thunk of ActivityQoSObservationClient.subscribeToActivityQoS(matching:handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t _s11ActivityKit9SingletonCMa_3()
{
  return objc_opt_self();
}

void sub_232E5E410(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x23492A28C](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = a3;
    sub_232E5D450(&v7);

  }
}

uint64_t sub_232E5E46C(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRetain();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_232E5EAE8(v5, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a3(v6);
  return swift_release();
}

_QWORD *sub_232E5E584(_QWORD *a1)
{
  return sub_232E0FF54(0, a1[2], 0, a1);
}

_QWORD *sub_232E5E598(_QWORD *a1)
{
  return sub_232E10278(0, a1[2], 0, a1);
}

_QWORD *sub_232E5E5AC(_QWORD *a1)
{
  return sub_232E103A8(0, a1[2], 0, a1);
}

uint64_t sub_232E5E5C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFE620);
  result = sub_232E6F5AC();
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    sub_232E6F780();
    swift_bridgeObjectRetain();
    sub_232E6F21C();
    result = sub_232E6F7B0();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    *v29 = v19;
    v29[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_232E5E864(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v27;
  _QWORD *v29;
  unint64_t *v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;

  v5 = a3;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 64);
  v32 = (unint64_t)(v9 + 63) >> 6;
  v29 = a4 + 9;
  v30 = (unint64_t *)result;
  v27 = a3 + 64;
  while (1)
  {
LABEL_6:
    while (!v11)
    {
      v12 = __OFADD__(v7++, 1);
      if (v12)
        goto LABEL_48;
      if (v7 >= v32)
        return sub_232E5E5C0(v30, a2, v6, v5);
      v14 = *(_QWORD *)(v8 + 8 * v7);
      if (!v14)
      {
        v15 = v7 + 1;
        if (v7 + 1 >= v32)
          return sub_232E5E5C0(v30, a2, v6, v5);
        v14 = *(_QWORD *)(v8 + 8 * v15);
        if (!v14)
        {
          v15 = v7 + 2;
          if (v7 + 2 >= v32)
            return sub_232E5E5C0(v30, a2, v6, v5);
          v14 = *(_QWORD *)(v8 + 8 * v15);
          if (!v14)
          {
            v15 = v7 + 3;
            if (v7 + 3 >= v32)
              return sub_232E5E5C0(v30, a2, v6, v5);
            v14 = *(_QWORD *)(v8 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                v7 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_50;
                if (v7 >= v32)
                  return sub_232E5E5C0(v30, a2, v6, v5);
                v14 = *(_QWORD *)(v8 + 8 * v7);
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
          }
        }
        v7 = v15;
      }
LABEL_19:
      v11 = (v14 - 1) & v14;
      v33 = __clz(__rbit64(v14)) + (v7 << 6);
      if (a4)
        goto LABEL_20;
LABEL_5:
      *(unint64_t *)((char *)v30 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
      v12 = __OFADD__(v6++, 1);
      if (v12)
        goto LABEL_49;
    }
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v33 = v13 | (v7 << 6);
    if (!a4)
      goto LABEL_5;
LABEL_20:
    v16 = a4[2];
    if (v16)
    {
      v17 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v33);
      v18 = *v17;
      v19 = v17[1];
      result = a4[4];
      if (result == *v17 && a4[5] == v19)
        goto LABEL_5;
      result = sub_232E6F6E4();
      if ((result & 1) != 0)
        goto LABEL_5;
      if (v16 != 1)
      {
        result = a4[6];
        if (result == v18 && a4[7] == v19)
          goto LABEL_5;
        result = sub_232E6F6E4();
        if ((result & 1) != 0)
          goto LABEL_5;
        if (v16 != 2)
          break;
      }
    }
  }
  v31 = v6;
  v22 = v29;
  v23 = 2;
  while (1)
  {
    v24 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    result = *(v22 - 1);
    v25 = result == v18 && *v22 == v19;
    if (v25 || (result = sub_232E6F6E4(), (result & 1) != 0))
    {
      v8 = v27;
      v5 = a3;
      v6 = v31;
      goto LABEL_5;
    }
    v22 += 2;
    ++v23;
    if (v24 == v16)
    {
      v8 = v27;
      v5 = a3;
      v6 = v31;
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_232E5EAE8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_232E5E864((uint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_232E5E864((uint64_t)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x23492A1F0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_232E5EC9C(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_232E6F12C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)sub_232E6EE2C();
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v11 = sub_232E6EE44();
  v13 = v12;
  sub_232E0422C();
  sub_232E6ED9C();
  sub_232DE8D98(v11, v13);
  swift_release();
  v14 = v19;
  if (v19)
  {

    v15 = *(void **)(a3 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton_queue);
    *v9 = v15;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
    v16 = v15;
    LOBYTE(v15) = sub_232E6F144();
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v15 & 1) != 0)
    {
      *(_QWORD *)(a3 + OBJC_IVAR____TtC11ActivityKitP33_6DC02F3CDAFEFBE600E2E479E61466209Singleton__queue_qos) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19 = v14;
      swift_bridgeObjectRetain();
      sub_232E6EFD0();
      swift_bridgeObjectRelease();
      a4[2](a4, 0);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  _Block_release(a4);
  __break(1u);
  _Block_release(a4);
  sub_232DE8D98(v11, v13);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_232E5EEA4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_232E5EEC8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E5EEF4(uint64_t a1)
{
  uint64_t v1;

  return sub_232E5DC9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_232E5EF00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_232E5EF24(uint64_t a1)
{
  uint64_t v1;

  sub_232E5D130(a1, v1);
}

unint64_t sub_232E5EF2C()
{
  unint64_t result;

  result = qword_255FFE7E8;
  if (!qword_255FFE7E8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityQoSObservationServiceDefinition, &type metadata for ActivityQoSObservationServiceDefinition);
    atomic_store(result, (unint64_t *)&qword_255FFE7E8);
  }
  return result;
}

uint64_t sub_232E5EF70()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232E5EF94(void *a1)
{
  uint64_t v1;

  sub_232E5CA98(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232E5EF9C()
{
  return swift_deallocObject();
}

void sub_232E5EFAC()
{
  sub_232E5CE14();
}

uint64_t sub_232E5EFCC()
{
  return swift_deallocObject();
}

uint64_t sub_232E5EFDC(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_232E5EFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return sub_232DDDF74(a3, a4);
  }
  return result;
}

uint64_t sub_232E5F050(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_232E5F080()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_232E5F0AC(uint64_t a1)
{
  uint64_t v1;

  sub_232E5E410(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_232E5F0B4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E5F0E0(uint64_t a1)
{
  uint64_t v1;

  return sub_232E5E46C(a1, *(_QWORD **)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_232E5F108@<X0>(uint64_t *a1@<X8>)
{
  return sub_232E5E360(a1);
}

uint64_t PushType.contentSourceRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  if (v2)
    v3 = *v1;
  else
    v3 = 0;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = xmmword_232E74480;
  *(_BYTE *)(a1 + 32) = 0;
  return swift_bridgeObjectRetain();
}

void static PushType.token.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t static PushType.channel(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_232E5F174(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v17 = a3;
  v15[1] = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE850);
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE858);
  v7 = *(_QWORD *)(v15[0] - 8);
  MEMORY[0x24BDAC7A8](v15[0]);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE860);
  v18 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E5FB78();
  v13 = v17;
  sub_232E6F7C8();
  if (v13)
  {
    v20 = 1;
    sub_232E5FBBC();
    sub_232E6F660();
    sub_232E6F684();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v4);
  }
  else
  {
    v19 = 0;
    sub_232E5FC00();
    sub_232E6F660();
    (*(void (**)(char *, _QWORD))(v7 + 8))(v9, v15[0]);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v10);
}

uint64_t sub_232E5F390()
{
  sub_232E5FBBC();
  return sub_232E6F7D4();
}

uint64_t sub_232E5F3B8()
{
  sub_232E5FBBC();
  return sub_232E6F7E0();
}

uint64_t sub_232E5F3E0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C656E6E616863;
  else
    return 0x6E656B6F74;
}

uint64_t sub_232E5F418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E5FC44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E5F43C()
{
  sub_232E5FB78();
  return sub_232E6F7D4();
}

uint64_t sub_232E5F464()
{
  sub_232E5FB78();
  return sub_232E6F7E0();
}

uint64_t sub_232E5F48C()
{
  sub_232E5FC00();
  return sub_232E6F7D4();
}

uint64_t sub_232E5F4B4()
{
  sub_232E5FC00();
  return sub_232E6F7E0();
}

_QWORD *sub_232E5F4DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_232E5FD2C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_232E5F504(_QWORD *a1)
{
  uint64_t *v1;

  return sub_232E5F174(a1, *v1, v1[1]);
}

uint64_t static PushType.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_232E6F6E4() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_232E5F578()
{
  return 0x74736575716572;
}

uint64_t sub_232E5F590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E5F624()
{
  sub_232E5F7C0();
  return sub_232E6F7D4();
}

uint64_t sub_232E5F64C()
{
  sub_232E5F7C0();
  return sub_232E6F7E0();
}

uint64_t sub_232E5F674(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (!v3)
    return v4 == 0;
  if (!v4)
    return 0;
  if (*a1 == *a2 && v3 == v4)
    return 1;
  else
    return sub_232E6F6E4();
}

uint64_t PushType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE810);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E5F7C0();
  sub_232E6F7C8();
  v10[0] = v8;
  v10[1] = v7;
  sub_232E5F804();
  sub_232E6F6A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_232E5F7C0()
{
  unint64_t result;

  result = qword_255FFE818;
  if (!qword_255FFE818)
  {
    result = MEMORY[0x23492A124](&unk_232E7A478, &type metadata for PushType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE818);
  }
  return result;
}

unint64_t sub_232E5F804()
{
  unint64_t result;

  result = qword_255FFE820;
  if (!qword_255FFE820)
  {
    result = MEMORY[0x23492A124](&unk_232E7A450, &type metadata for PushType.Request);
    atomic_store(result, (unint64_t *)&qword_255FFE820);
  }
  return result;
}

uint64_t PushType.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE828);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E5F7C0();
  sub_232E6F7BC();
  if (!v2)
  {
    sub_232E5F968();
    sub_232E6F63C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_232E5F968()
{
  unint64_t result;

  result = qword_255FFE830;
  if (!qword_255FFE830)
  {
    result = MEMORY[0x23492A124](&unk_232E7A428, &type metadata for PushType.Request);
    atomic_store(result, (unint64_t *)&qword_255FFE830);
  }
  return result;
}

uint64_t sub_232E5F9AC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return PushType.init(from:)(a1, a2);
}

uint64_t sub_232E5F9C0(_QWORD *a1)
{
  return PushType.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for DeviceIdentifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DeviceIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushType.Request()
{
  return &type metadata for PushType.Request;
}

ValueMetadata *type metadata accessor for PushType.CodingKeys()
{
  return &type metadata for PushType.CodingKeys;
}

unint64_t sub_232E5FAA4()
{
  unint64_t result;

  result = qword_255FFE838;
  if (!qword_255FFE838)
  {
    result = MEMORY[0x23492A124](&unk_232E7A3D8, &type metadata for PushType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE838);
  }
  return result;
}

unint64_t sub_232E5FAEC()
{
  unint64_t result;

  result = qword_255FFE840;
  if (!qword_255FFE840)
  {
    result = MEMORY[0x23492A124](&unk_232E7A348, &type metadata for PushType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE840);
  }
  return result;
}

unint64_t sub_232E5FB34()
{
  unint64_t result;

  result = qword_255FFE848;
  if (!qword_255FFE848)
  {
    result = MEMORY[0x23492A124](&unk_232E7A370, &type metadata for PushType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE848);
  }
  return result;
}

unint64_t sub_232E5FB78()
{
  unint64_t result;

  result = qword_255FFE868;
  if (!qword_255FFE868)
  {
    result = MEMORY[0x23492A124](&unk_232E7A754, &type metadata for PushType.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE868);
  }
  return result;
}

unint64_t sub_232E5FBBC()
{
  unint64_t result;

  result = qword_255FFE870;
  if (!qword_255FFE870)
  {
    result = MEMORY[0x23492A124](&unk_232E7A704, &type metadata for PushType.Request.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE870);
  }
  return result;
}

unint64_t sub_232E5FC00()
{
  unint64_t result;

  result = qword_255FFE878;
  if (!qword_255FFE878)
  {
    result = MEMORY[0x23492A124](&unk_232E7A6B4, &type metadata for PushType.Request.TokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE878);
  }
  return result;
}

uint64_t sub_232E5FC44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_232E5FD2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  char v29;
  char v30;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE880);
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE888);
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE890);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E5FB78();
  v11 = (uint64_t)v28;
  sub_232E6F7BC();
  if (v11)
    goto LABEL_9;
  v12 = v5;
  v13 = v27;
  v23 = v7;
  v28 = a1;
  v14 = sub_232E6F648();
  v15 = v14;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_232E6F51C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v21 = &type metadata for PushType.Request;
    v10 = v9;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
    a1 = v28;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  if ((*(_BYTE *)(v14 + 32) & 1) != 0)
  {
    v30 = 1;
    sub_232E5FBBC();
    sub_232E6F5DC();
    v25 = v15;
    v16 = v24;
    v17 = sub_232E6F618();
    v18 = v23;
    v10 = (_QWORD *)v17;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v6);
  }
  else
  {
    v29 = 0;
    sub_232E5FC00();
    sub_232E6F5DC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
    v10 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v10;
}

uint64_t storeEnumTagSinglePayload for PushType.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E60104 + 4 * byte_232E7A295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E60138 + 4 * asc_232E7A290[v4]))();
}

uint64_t sub_232E60138(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E60140(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E60148);
  return result;
}

uint64_t sub_232E60154(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E6015CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E60160(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E60168(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PushType.Request.CodingKeys()
{
  return &type metadata for PushType.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for PushType.Request.TokenCodingKeys()
{
  return &type metadata for PushType.Request.TokenCodingKeys;
}

uint64_t _s11ActivityKit8PushTypeV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E601D4 + 4 * byte_232E7A29A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E601F4 + 4 * byte_232E7A29F[v4]))();
}

_BYTE *sub_232E601D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E601F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E601FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E60204(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E6020C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E60214(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PushType.Request.ChannelCodingKeys()
{
  return &type metadata for PushType.Request.ChannelCodingKeys;
}

unint64_t sub_232E60234()
{
  unint64_t result;

  result = qword_255FFE898;
  if (!qword_255FFE898)
  {
    result = MEMORY[0x23492A124](&unk_232E7A584, &type metadata for PushType.Request.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE898);
  }
  return result;
}

unint64_t sub_232E6027C()
{
  unint64_t result;

  result = qword_255FFE8A0;
  if (!qword_255FFE8A0)
  {
    result = MEMORY[0x23492A124](&unk_232E7A68C, &type metadata for PushType.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8A0);
  }
  return result;
}

unint64_t sub_232E602C4()
{
  unint64_t result;

  result = qword_255FFE8A8;
  if (!qword_255FFE8A8)
  {
    result = MEMORY[0x23492A124](&unk_232E7A5AC, &type metadata for PushType.Request.TokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8A8);
  }
  return result;
}

unint64_t sub_232E6030C()
{
  unint64_t result;

  result = qword_255FFE8B0;
  if (!qword_255FFE8B0)
  {
    result = MEMORY[0x23492A124](&unk_232E7A5D4, &type metadata for PushType.Request.TokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8B0);
  }
  return result;
}

unint64_t sub_232E60354()
{
  unint64_t result;

  result = qword_255FFE8B8;
  if (!qword_255FFE8B8)
  {
    result = MEMORY[0x23492A124](&unk_232E7A4F4, &type metadata for PushType.Request.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8B8);
  }
  return result;
}

unint64_t sub_232E6039C()
{
  unint64_t result;

  result = qword_255FFE8C0;
  if (!qword_255FFE8C0)
  {
    result = MEMORY[0x23492A124](&unk_232E7A51C, &type metadata for PushType.Request.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8C0);
  }
  return result;
}

unint64_t sub_232E603E4()
{
  unint64_t result;

  result = qword_255FFE8C8;
  if (!qword_255FFE8C8)
  {
    result = MEMORY[0x23492A124](&unk_232E7A5FC, &type metadata for PushType.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8C8);
  }
  return result;
}

unint64_t sub_232E6042C()
{
  unint64_t result;

  result = qword_255FFE8D0;
  if (!qword_255FFE8D0)
  {
    result = MEMORY[0x23492A124](&unk_232E7A624, &type metadata for PushType.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8D0);
  }
  return result;
}

ActivityKit::ActivityPresenter __swiftcall ActivityPresenter.init(bundleIdentifier:presentations:)(Swift::String bundleIdentifier, Swift::OpaquePointer presentations)
{
  uint64_t v2;
  ActivityKit::ActivityPresenter result;

  *(Swift::String *)v2 = bundleIdentifier;
  *(Swift::OpaquePointer *)(v2 + 16) = presentations;
  result.bundleIdentifier = bundleIdentifier;
  result.presentations = presentations;
  return result;
}

uint64_t sub_232E60484()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x6E656E696D6F7270;
}

uint64_t sub_232E604C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E62C80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E604EC()
{
  sub_232E607B0();
  return sub_232E6F7D4();
}

uint64_t sub_232E60514()
{
  sub_232E607B0();
  return sub_232E6F7E0();
}

uint64_t sub_232E6053C()
{
  sub_232E60838();
  return sub_232E6F7D4();
}

uint64_t sub_232E60564()
{
  sub_232E60838();
  return sub_232E6F7E0();
}

uint64_t sub_232E6058C()
{
  sub_232E607F4();
  return sub_232E6F7D4();
}

uint64_t sub_232E605B4()
{
  sub_232E607F4();
  return sub_232E6F7E0();
}

uint64_t ActivityPresentationState.ForegroundModifier.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE8D8);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE8E0);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE8E8);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E607B0();
  sub_232E6F7C8();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_232E607F4();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_232E60838();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_232E607B0()
{
  unint64_t result;

  result = qword_255FFE8F0;
  if (!qword_255FFE8F0)
  {
    result = MEMORY[0x23492A124](&unk_232E7B734, &type metadata for ActivityPresentationState.ForegroundModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8F0);
  }
  return result;
}

unint64_t sub_232E607F4()
{
  unint64_t result;

  result = qword_255FFE8F8;
  if (!qword_255FFE8F8)
  {
    result = MEMORY[0x23492A124](&unk_232E7B6E4, &type metadata for ActivityPresentationState.ForegroundModifier.RestrictedUpdatesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE8F8);
  }
  return result;
}

unint64_t sub_232E60838()
{
  unint64_t result;

  result = qword_255FFE900;
  if (!qword_255FFE900)
  {
    result = MEMORY[0x23492A124](&unk_232E7B694, &type metadata for ActivityPresentationState.ForegroundModifier.ProminentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE900);
  }
  return result;
}

uint64_t ActivityPresentationState.ForegroundModifier.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE908);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE910);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE918);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E607B0();
  v11 = v33;
  sub_232E6F7BC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_232E6F648();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_232E6F51C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v21 = &type metadata for ActivityPresentationState.ForegroundModifier;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_232E607F4();
    sub_232E6F5DC();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_232E60838();
    v22 = v6;
    sub_232E6F5DC();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_232E60BD8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActivityPresentationState.ForegroundModifier.init(from:)(a1, a2);
}

uint64_t sub_232E60BEC(_QWORD *a1)
{
  return ActivityPresentationState.ForegroundModifier.encode(to:)(a1);
}

BOOL static ActivityPresentationState.DisplacementReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ActivityPresentationState.DisplacementReason.hash(into:)()
{
  return sub_232E6F78C();
}

uint64_t sub_232E60C40()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D6574737973;
  else
    return 0x65746E4972657375;
}

uint64_t sub_232E60C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E62D78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E60CA8()
{
  sub_232E60F6C();
  return sub_232E6F7D4();
}

uint64_t sub_232E60CD0()
{
  sub_232E60F6C();
  return sub_232E6F7E0();
}

uint64_t sub_232E60CF8()
{
  sub_232E60FB0();
  return sub_232E6F7D4();
}

uint64_t sub_232E60D20()
{
  sub_232E60FB0();
  return sub_232E6F7E0();
}

uint64_t sub_232E60D48()
{
  sub_232E60FF4();
  return sub_232E6F7D4();
}

uint64_t sub_232E60D70()
{
  sub_232E60FF4();
  return sub_232E6F7E0();
}

uint64_t ActivityPresentationState.DisplacementReason.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE920);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE928);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE930);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E60F6C();
  sub_232E6F7C8();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_232E60FB0();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_232E60FF4();
    sub_232E6F660();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_232E60F6C()
{
  unint64_t result;

  result = qword_255FFE938;
  if (!qword_255FFE938)
  {
    result = MEMORY[0x23492A124](&unk_232E7B644, &type metadata for ActivityPresentationState.DisplacementReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE938);
  }
  return result;
}

unint64_t sub_232E60FB0()
{
  unint64_t result;

  result = qword_255FFE940;
  if (!qword_255FFE940)
  {
    result = MEMORY[0x23492A124](&unk_232E7B5F4, &type metadata for ActivityPresentationState.DisplacementReason.SystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE940);
  }
  return result;
}

unint64_t sub_232E60FF4()
{
  unint64_t result;

  result = qword_255FFE948;
  if (!qword_255FFE948)
  {
    result = MEMORY[0x23492A124](&unk_232E7B5A4, &type metadata for ActivityPresentationState.DisplacementReason.UserInteractionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE948);
  }
  return result;
}

uint64_t ActivityPresentationState.DisplacementReason.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE950);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE958);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE960);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E60F6C();
  v11 = v33;
  sub_232E6F7BC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_232E6F648();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_232E6F51C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v21 = &type metadata for ActivityPresentationState.DisplacementReason;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_232E60FB0();
    sub_232E6F5DC();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_232E60FF4();
    v22 = v6;
    sub_232E6F5DC();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_232E61394@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActivityPresentationState.DisplacementReason.init(from:)(a1, a2);
}

uint64_t sub_232E613A8(_QWORD *a1)
{
  return ActivityPresentationState.DisplacementReason.encode(to:)(a1);
}

uint64_t sub_232E613C0()
{
  sub_232E62B2C();
  return sub_232E6F7D4();
}

uint64_t sub_232E613E8()
{
  sub_232E62B2C();
  return sub_232E6F7E0();
}

uint64_t sub_232E61410()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x756F72676B636162;
  if (*v0 != 1)
    v1 = 0x6563616C70736964;
  if (*v0)
    return v1;
  else
    return 0x756F726765726F66;
}

uint64_t sub_232E61470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E62E84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E61494()
{
  sub_232E62A60();
  return sub_232E6F7D4();
}

uint64_t sub_232E614BC()
{
  sub_232E62A60();
  return sub_232E6F7E0();
}

uint64_t sub_232E614E4()
{
  return 0x6E6F73616572;
}

uint64_t sub_232E614F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E61584()
{
  sub_232E62AA4();
  return sub_232E6F7D4();
}

uint64_t sub_232E615AC()
{
  sub_232E62AA4();
  return sub_232E6F7E0();
}

uint64_t sub_232E615D4()
{
  return 0x7265696669646F6DLL;
}

uint64_t sub_232E615EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7265696669646F6DLL && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232E6F6E4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_232E61680()
{
  sub_232E62B70();
  return sub_232E6F7D4();
}

uint64_t sub_232E616A8()
{
  sub_232E62B70();
  return sub_232E6F7E0();
}

uint64_t ActivityPresentationState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237378);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237380);
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237388);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237370);
  v28 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v2;
  v15 = v2[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E62A60();
  sub_232E6F7C8();
  if (!v15)
  {
    v30 = 0;
    sub_232E62B70();
    sub_232E6F660();
    v29 = v27;
    sub_232E62BB4();
    sub_232E6F678();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v12);
  }
  if (v15 == 1)
  {
    v16 = v27 & 1;
    v33 = 2;
    sub_232E62AA4();
    v17 = v24;
    sub_232E6F660();
    v32 = v16;
    sub_232E62AE8();
    v18 = v26;
    sub_232E6F6A8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v12);
  }
  v31 = 1;
  sub_232E62B2C();
  sub_232E6F660();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v12);
}

uint64_t ActivityPresentationState.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v41 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFBFF8);
  v4 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v40 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC560);
  v38 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC568);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC558);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_232E62A60();
  v16 = v46;
  sub_232E6F7BC();
  if (v16)
    goto LABEL_9;
  v36 = v7;
  v37 = v8;
  v18 = v42;
  v17 = v43;
  v19 = v44;
  v46 = v12;
  v20 = sub_232E6F648();
  v21 = v11;
  if (*(_QWORD *)(v20 + 16) != 1)
  {
    v24 = sub_232E6F51C();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFD5B0);
    *v26 = &type metadata for ActivityPresentationState;
    sub_232E6F5E8();
    sub_232E6F510();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v11);
LABEL_9:
    v29 = (uint64_t)v45;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  if (*(_BYTE *)(v20 + 32))
  {
    if (*(_BYTE *)(v20 + 32) == 1)
    {
      v49 = 1;
      sub_232E62B2C();
      sub_232E6F5DC();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v11);
      v22 = 0;
      v23 = 2;
    }
    else
    {
      v51 = 2;
      sub_232E62AA4();
      v27 = v19;
      v28 = v21;
      sub_232E6F5DC();
      sub_232E62BF8();
      v32 = v39;
      sub_232E6F63C();
      v33 = v46;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v28);
      v22 = v50;
      v23 = 1;
    }
  }
  else
  {
    v48 = 0;
    sub_232E62B70();
    sub_232E6F5DC();
    sub_232E62C3C();
    v31 = v36;
    sub_232E6F60C();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v11);
    v23 = 0;
    v22 = v47;
  }
  v29 = (uint64_t)v45;
  v34 = v41;
  *v41 = v22;
  v34[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_232E61EA0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActivityPresentationState.init(from:)(a1, a2);
}

uint64_t sub_232E61EB4(_QWORD *a1)
{
  return ActivityPresentationState.encode(to:)(a1);
}

unint64_t ActivityPresentationFlattenedState.init(rawValue:)(unint64_t a1)
{
  return sub_232E62FFC(a1);
}

unint64_t sub_232E61EE8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_232E62FFC(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unsigned __int8 *ActivityPresentationState.resolving(state:)@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  v5 = v2[1];
  if (v2[1])
  {
    if (!result[1])
    {
      *(_WORD *)a2 = v3;
      return result;
    }
    if (result[1] == 1)
    {
      if (v5 != 1 || (v4 & 1) != 0 && (v3 &= 1u) != 0)
      {
        *(_BYTE *)a2 = v3;
LABEL_13:
        *(_BYTE *)(a2 + 1) = 1;
        return result;
      }
      *(_WORD *)a2 = 256;
    }
    else
    {
      if (v5 == 1)
      {
        *(_BYTE *)a2 = v4;
        goto LABEL_13;
      }
      *(_WORD *)a2 = 512;
    }
  }
  else if (result[1])
  {
    *(_WORD *)a2 = v4;
  }
  else if (((v4 | v3) & 1) != 0)
  {
    *(_WORD *)a2 = 1;
  }
  else if (v3 == 2 && v4 == 2)
  {
    *(_WORD *)a2 = 2;
  }
  else
  {
    *(_WORD *)a2 = 0;
  }
  return result;
}

uint64_t ActivityPresentation.activityIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void ActivityPresentation.state.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 16);
}

uint64_t ActivityPresentation.init(activityIdentifier:state:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  __int16 v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_WORD *)(a4 + 16) = v4;
  return result;
}

uint64_t sub_232E62020()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617473;
  else
    return 0xD000000000000012;
}

uint64_t sub_232E6205C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E641B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E62080()
{
  sub_232E6300C();
  return sub_232E6F7D4();
}

uint64_t sub_232E620A8()
{
  sub_232E6300C();
  return sub_232E6F7E0();
}

uint64_t ActivityPresentation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE988);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  HIDWORD(v8) = *(unsigned __int8 *)(v1 + 17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E6300C();
  sub_232E6F7C8();
  v14 = 0;
  sub_232E6F684();
  if (!v2)
  {
    v12 = v10;
    v13 = BYTE4(v8);
    v11 = 1;
    sub_232E63050();
    sub_232E6F6A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t ActivityPresentation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v14;
  char v15;
  __int16 v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE9A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E6300C();
  sub_232E6F7BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v9 = sub_232E6F618();
  v11 = v10;
  v15 = 1;
  sub_232E63094();
  swift_bridgeObjectRetain();
  sub_232E6F63C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v16;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_WORD *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E623C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityPresentation.init(from:)(a1, a2);
}

uint64_t sub_232E623DC(_QWORD *a1)
{
  return ActivityPresentation.encode(to:)(a1);
}

uint64_t ActivityPresenter.bundleIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityPresenter.presentations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static ActivityPresenter.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_232E6F6E4() & 1) != 0)
    return sub_232E21064(v2, v3);
  else
    return 0;
}

uint64_t sub_232E62488()
{
  _BYTE *v0;

  if (*v0)
    return 0x61746E6573657270;
  else
    return 0xD000000000000010;
}

uint64_t sub_232E624D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E64294(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E624F8()
{
  sub_232E630D8();
  return sub_232E6F7D4();
}

uint64_t sub_232E62520()
{
  sub_232E630D8();
  return sub_232E6F7E0();
}

uint64_t ActivityPresenter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE9B0);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E630D8();
  sub_232E6F7C8();
  v13 = 0;
  sub_232E6F684();
  if (!v2)
  {
    v11 = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE9C0);
    sub_232E63160(&qword_255FFE9C8, (uint64_t (*)(void))sub_232E6311C, MEMORY[0x24BEE12A0]);
    sub_232E6F6A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t ActivityPresenter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE9D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E630D8();
  sub_232E6F7BC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_232E6F618();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255FFE9C0);
  v15 = 1;
  sub_232E63160(&qword_255FFE9E0, (uint64_t (*)(void))sub_232E631C8, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_232E6F63C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232E62894@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ActivityPresenter.init(from:)(a1, a2);
}

uint64_t sub_232E628A8(_QWORD *a1)
{
  return ActivityPresenter.encode(to:)(a1);
}

uint64_t sub_232E628BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_232E6F6E4() & 1) != 0)
    return sub_232E21064(v2, v3);
  else
    return 0;
}

uint64_t _s11ActivityKit0A12PresentationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 17);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_232E6F6E4(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v3 == 1)
      {
        if (v5 != 1 || ((v4 ^ v2) & 1) != 0)
          return 0;
      }
      else if (v5 != 2 || v4 != 0)
      {
        return 0;
      }
      return 1;
    }
    if (!v5)
    {
      if (v2 == 2)
      {
        if (v4 != 2)
          return 0;
      }
      else if (v4 == 2 || ((v4 ^ v2) & 1) != 0)
      {
        return 0;
      }
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s11ActivityKit0A17PresentationStateO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  int v7;

  v2 = *a1;
  v3 = *a2;
  v4 = a2[1];
  if (a1[1])
  {
    if (a1[1] == 1)
    {
      if (v4 == 1)
        return ((v3 ^ v2) & 1) == 0;
      return 0;
    }
    if (v4 != 2 || v3 != 0)
      return 0;
  }
  else
  {
    if (a2[1])
      return 0;
    if (v2 == 2)
    {
      if (v3 != 2)
        return 0;
    }
    else
    {
      v7 = (v3 ^ v2) & 1;
      if (v3 == 2 || v7 != 0)
        return 0;
    }
  }
  return 1;
}

unint64_t sub_232E62A60()
{
  unint64_t result;

  result = qword_2542372E0;
  if (!qword_2542372E0)
  {
    result = MEMORY[0x23492A124](&unk_232E7B554, &type metadata for ActivityPresentationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542372E0);
  }
  return result;
}

unint64_t sub_232E62AA4()
{
  unint64_t result;

  result = qword_255FFE968;
  if (!qword_255FFE968)
  {
    result = MEMORY[0x23492A124](&unk_232E7B504, &type metadata for ActivityPresentationState.DisplacedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE968);
  }
  return result;
}

unint64_t sub_232E62AE8()
{
  unint64_t result;

  result = qword_255FFE970;
  if (!qword_255FFE970)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationState.DisplacementReason, &type metadata for ActivityPresentationState.DisplacementReason);
    atomic_store(result, (unint64_t *)&qword_255FFE970);
  }
  return result;
}

unint64_t sub_232E62B2C()
{
  unint64_t result;

  result = qword_255FFE978;
  if (!qword_255FFE978)
  {
    result = MEMORY[0x23492A124](&unk_232E7B4B4, &type metadata for ActivityPresentationState.BackgroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE978);
  }
  return result;
}

unint64_t sub_232E62B70()
{
  unint64_t result;

  result = qword_254237318;
  if (!qword_254237318)
  {
    result = MEMORY[0x23492A124](&unk_232E7B464, &type metadata for ActivityPresentationState.ForegroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237318);
  }
  return result;
}

unint64_t sub_232E62BB4()
{
  unint64_t result;

  result = qword_2542372F8;
  if (!qword_2542372F8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationState.ForegroundModifier, &type metadata for ActivityPresentationState.ForegroundModifier);
    atomic_store(result, (unint64_t *)&qword_2542372F8);
  }
  return result;
}

unint64_t sub_232E62BF8()
{
  unint64_t result;

  result = qword_255FFE980;
  if (!qword_255FFE980)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationState.DisplacementReason, &type metadata for ActivityPresentationState.DisplacementReason);
    atomic_store(result, (unint64_t *)&qword_255FFE980);
  }
  return result;
}

unint64_t sub_232E62C3C()
{
  unint64_t result;

  result = qword_255FFC480;
  if (!qword_255FFC480)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationState.ForegroundModifier, &type metadata for ActivityPresentationState.ForegroundModifier);
    atomic_store(result, (unint64_t *)&qword_255FFC480);
  }
  return result;
}

uint64_t sub_232E62C80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656E696D6F7270 && a2 == 0xE900000000000074;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000232E7FA50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E62D78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65746E4972657375 && a2 == 0xEF6E6F6974636172;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6574737973 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E62E84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F726765726F66 && a2 == 0xEA0000000000646ELL;
  if (v2 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6563616C70736964 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_232E62FFC(unint64_t result)
{
  if (result > 6)
    return 0;
  return result;
}

unint64_t sub_232E6300C()
{
  unint64_t result;

  result = qword_255FFE990;
  if (!qword_255FFE990)
  {
    result = MEMORY[0x23492A124](&unk_232E7B414, &type metadata for ActivityPresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE990);
  }
  return result;
}

unint64_t sub_232E63050()
{
  unint64_t result;

  result = qword_255FFE998;
  if (!qword_255FFE998)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationState, &type metadata for ActivityPresentationState);
    atomic_store(result, (unint64_t *)&qword_255FFE998);
  }
  return result;
}

unint64_t sub_232E63094()
{
  unint64_t result;

  result = qword_255FFE9A8;
  if (!qword_255FFE9A8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationState, &type metadata for ActivityPresentationState);
    atomic_store(result, (unint64_t *)&qword_255FFE9A8);
  }
  return result;
}

unint64_t sub_232E630D8()
{
  unint64_t result;

  result = qword_255FFE9B8;
  if (!qword_255FFE9B8)
  {
    result = MEMORY[0x23492A124](&unk_232E7B3C4, &type metadata for ActivityPresenter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFE9B8);
  }
  return result;
}

unint64_t sub_232E6311C()
{
  unint64_t result;

  result = qword_255FFE9D0;
  if (!qword_255FFE9D0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentation, &type metadata for ActivityPresentation);
    atomic_store(result, (unint64_t *)&qword_255FFE9D0);
  }
  return result;
}

uint64_t sub_232E63160(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255FFE9C0);
    v8 = a2();
    result = MEMORY[0x23492A124](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232E631C8()
{
  unint64_t result;

  result = qword_255FFE9E8;
  if (!qword_255FFE9E8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentation, &type metadata for ActivityPresentation);
    atomic_store(result, (unint64_t *)&qword_255FFE9E8);
  }
  return result;
}

unint64_t sub_232E63210()
{
  unint64_t result;

  result = qword_255FFE9F0;
  if (!qword_255FFE9F0)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationState.ForegroundModifier, &type metadata for ActivityPresentationState.ForegroundModifier);
    atomic_store(result, (unint64_t *)&qword_255FFE9F0);
  }
  return result;
}

unint64_t sub_232E63258()
{
  unint64_t result;

  result = qword_255FFE9F8;
  if (!qword_255FFE9F8)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationState.DisplacementReason, &type metadata for ActivityPresentationState.DisplacementReason);
    atomic_store(result, (unint64_t *)&qword_255FFE9F8);
  }
  return result;
}

unint64_t sub_232E632A0()
{
  unint64_t result;

  result = qword_255FFEA00;
  if (!qword_255FFEA00)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for ActivityPresentationFlattenedState, &type metadata for ActivityPresentationFlattenedState);
    atomic_store(result, (unint64_t *)&qword_255FFEA00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityPresentationState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 65282 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65282 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65282;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65282;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65282;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  if (v6 <= 2)
    v7 = -1;
  else
    v7 = v6 ^ 0xFF;
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityPresentationState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E633C8 + 4 * byte_232E7A7B5[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_232E633FC + 4 * byte_232E7A7B0[v4]))();
}

uint64_t sub_232E633FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_232E63404(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x232E6340CLL);
  return result;
}

uint64_t sub_232E63418(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x232E63420);
  *(_BYTE *)(result + 1) = -(char)a2;
  return result;
}

uint64_t sub_232E63424(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_232E6342C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_232E63438(unsigned __int8 *a1)
{
  if (a1[1] <= 1u)
    return a1[1];
  else
    return *a1 + 2;
}

_BYTE *sub_232E63450(_BYTE *result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  result[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationState()
{
  return &type metadata for ActivityPresentationState;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.ForegroundModifier()
{
  return &type metadata for ActivityPresentationState.ForegroundModifier;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.DisplacementReason()
{
  return &type metadata for ActivityPresentationState.DisplacementReason;
}

ValueMetadata *type metadata accessor for ActivityPresentationFlattenedState()
{
  return &type metadata for ActivityPresentationFlattenedState;
}

uint64_t sub_232E634B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityPresentation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ActivityPresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPresentation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityPresentation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentation()
{
  return &type metadata for ActivityPresentation;
}

ValueMetadata *type metadata accessor for ActivityPresenter()
{
  return &type metadata for ActivityPresenter;
}

ValueMetadata *type metadata accessor for ActivityPresenter.CodingKeys()
{
  return &type metadata for ActivityPresenter.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPresentation.CodingKeys()
{
  return &type metadata for ActivityPresentation.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ActivityPresentationState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E6369C + 4 * byte_232E7A7BF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232E636D0 + 4 * byte_232E7A7BA[v4]))();
}

uint64_t sub_232E636D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E636D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E636E0);
  return result;
}

uint64_t sub_232E636EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E636F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232E636F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E63700(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.CodingKeys()
{
  return &type metadata for ActivityPresentationState.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.ForegroundCodingKeys()
{
  return &type metadata for ActivityPresentationState.ForegroundCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.BackgroundCodingKeys()
{
  return &type metadata for ActivityPresentationState.BackgroundCodingKeys;
}

uint64_t _s11ActivityKit25ActivityPresentationStateO20ForegroundCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E63780 + 4 * byte_232E7A7C4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E637A0 + 4 * byte_232E7A7C9[v4]))();
}

_BYTE *sub_232E63780(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E637A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E637A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E637B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232E637B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232E637C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.DisplacedCodingKeys()
{
  return &type metadata for ActivityPresentationState.DisplacedCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.DisplacementReason.CodingKeys()
{
  return &type metadata for ActivityPresentationState.DisplacementReason.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.DisplacementReason.UserInteractionCodingKeys()
{
  return &type metadata for ActivityPresentationState.DisplacementReason.UserInteractionCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.DisplacementReason.SystemCodingKeys()
{
  return &type metadata for ActivityPresentationState.DisplacementReason.SystemCodingKeys;
}

uint64_t _s11ActivityKit25ActivityPresentationStateO18ForegroundModifierOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232E63858 + 4 * byte_232E7A7D3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232E6388C + 4 * byte_232E7A7CE[v4]))();
}

uint64_t sub_232E6388C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E63894(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E6389CLL);
  return result;
}

uint64_t sub_232E638A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E638B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232E638B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E638BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.ForegroundModifier.CodingKeys()
{
  return &type metadata for ActivityPresentationState.ForegroundModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.ForegroundModifier.ProminentCodingKeys()
{
  return &type metadata for ActivityPresentationState.ForegroundModifier.ProminentCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityPresentationState.ForegroundModifier.RestrictedUpdatesCodingKeys()
{
  return &type metadata for ActivityPresentationState.ForegroundModifier.RestrictedUpdatesCodingKeys;
}

unint64_t sub_232E638FC()
{
  unint64_t result;

  result = qword_255FFEA08;
  if (!qword_255FFEA08)
  {
    result = MEMORY[0x23492A124](&unk_232E7AE5C, &type metadata for ActivityPresentationState.ForegroundModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA08);
  }
  return result;
}

unint64_t sub_232E63944()
{
  unint64_t result;

  result = qword_255FFEA10;
  if (!qword_255FFEA10)
  {
    result = MEMORY[0x23492A124](&unk_232E7AFB4, &type metadata for ActivityPresentationState.DisplacementReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA10);
  }
  return result;
}

unint64_t sub_232E6398C()
{
  unint64_t result;

  result = qword_255FFEA18;
  if (!qword_255FFEA18)
  {
    result = MEMORY[0x23492A124](&unk_232E7B06C, &type metadata for ActivityPresentationState.DisplacedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA18);
  }
  return result;
}

unint64_t sub_232E639D4()
{
  unint64_t result;

  result = qword_255FFEA20;
  if (!qword_255FFEA20)
  {
    result = MEMORY[0x23492A124](&unk_232E7B174, &type metadata for ActivityPresentationState.ForegroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA20);
  }
  return result;
}

unint64_t sub_232E63A1C()
{
  unint64_t result;

  result = qword_255FFEA28;
  if (!qword_255FFEA28)
  {
    result = MEMORY[0x23492A124](&unk_232E7B22C, &type metadata for ActivityPresentationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA28);
  }
  return result;
}

unint64_t sub_232E63A64()
{
  unint64_t result;

  result = qword_255FFEA30;
  if (!qword_255FFEA30)
  {
    result = MEMORY[0x23492A124](&unk_232E7B2E4, &type metadata for ActivityPresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA30);
  }
  return result;
}

unint64_t sub_232E63AAC()
{
  unint64_t result;

  result = qword_255FFEA38;
  if (!qword_255FFEA38)
  {
    result = MEMORY[0x23492A124](&unk_232E7B39C, &type metadata for ActivityPresenter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA38);
  }
  return result;
}

unint64_t sub_232E63AF4()
{
  unint64_t result;

  result = qword_255FFEA40;
  if (!qword_255FFEA40)
  {
    result = MEMORY[0x23492A124](&unk_232E7B30C, &type metadata for ActivityPresenter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA40);
  }
  return result;
}

unint64_t sub_232E63B3C()
{
  unint64_t result;

  result = qword_255FFEA48;
  if (!qword_255FFEA48)
  {
    result = MEMORY[0x23492A124](&unk_232E7B334, &type metadata for ActivityPresenter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA48);
  }
  return result;
}

unint64_t sub_232E63B84()
{
  unint64_t result;

  result = qword_255FFEA50;
  if (!qword_255FFEA50)
  {
    result = MEMORY[0x23492A124](&unk_232E7B254, &type metadata for ActivityPresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA50);
  }
  return result;
}

unint64_t sub_232E63BCC()
{
  unint64_t result;

  result = qword_255FFEA58;
  if (!qword_255FFEA58)
  {
    result = MEMORY[0x23492A124](&unk_232E7B27C, &type metadata for ActivityPresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA58);
  }
  return result;
}

unint64_t sub_232E63C14()
{
  unint64_t result;

  result = qword_254237328;
  if (!qword_254237328)
  {
    result = MEMORY[0x23492A124](&unk_232E7B0E4, &type metadata for ActivityPresentationState.ForegroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237328);
  }
  return result;
}

unint64_t sub_232E63C5C()
{
  unint64_t result;

  result = qword_254237320;
  if (!qword_254237320)
  {
    result = MEMORY[0x23492A124](&unk_232E7B10C, &type metadata for ActivityPresentationState.ForegroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237320);
  }
  return result;
}

unint64_t sub_232E63CA4()
{
  unint64_t result;

  result = qword_254237310;
  if (!qword_254237310)
  {
    result = MEMORY[0x23492A124](&unk_232E7B094, &type metadata for ActivityPresentationState.BackgroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237310);
  }
  return result;
}

unint64_t sub_232E63CEC()
{
  unint64_t result;

  result = qword_254237308;
  if (!qword_254237308)
  {
    result = MEMORY[0x23492A124](&unk_232E7B0BC, &type metadata for ActivityPresentationState.BackgroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237308);
  }
  return result;
}

unint64_t sub_232E63D34()
{
  unint64_t result;

  result = qword_254236888;
  if (!qword_254236888)
  {
    result = MEMORY[0x23492A124](&unk_232E7AFDC, &type metadata for ActivityPresentationState.DisplacedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254236888);
  }
  return result;
}

unint64_t sub_232E63D7C()
{
  unint64_t result;

  result = qword_254237300;
  if (!qword_254237300)
  {
    result = MEMORY[0x23492A124](&unk_232E7B004, &type metadata for ActivityPresentationState.DisplacedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254237300);
  }
  return result;
}

unint64_t sub_232E63DC4()
{
  unint64_t result;

  result = qword_2542372F0;
  if (!qword_2542372F0)
  {
    result = MEMORY[0x23492A124](&unk_232E7B19C, &type metadata for ActivityPresentationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542372F0);
  }
  return result;
}

unint64_t sub_232E63E0C()
{
  unint64_t result;

  result = qword_2542372E8;
  if (!qword_2542372E8)
  {
    result = MEMORY[0x23492A124](&unk_232E7B1C4, &type metadata for ActivityPresentationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542372E8);
  }
  return result;
}

unint64_t sub_232E63E54()
{
  unint64_t result;

  result = qword_255FFEA60;
  if (!qword_255FFEA60)
  {
    result = MEMORY[0x23492A124](&unk_232E7AED4, &type metadata for ActivityPresentationState.DisplacementReason.UserInteractionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA60);
  }
  return result;
}

unint64_t sub_232E63E9C()
{
  unint64_t result;

  result = qword_255FFEA68;
  if (!qword_255FFEA68)
  {
    result = MEMORY[0x23492A124](&unk_232E7AEFC, &type metadata for ActivityPresentationState.DisplacementReason.UserInteractionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA68);
  }
  return result;
}

unint64_t sub_232E63EE4()
{
  unint64_t result;

  result = qword_255FFEA70;
  if (!qword_255FFEA70)
  {
    result = MEMORY[0x23492A124](&unk_232E7AE84, &type metadata for ActivityPresentationState.DisplacementReason.SystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA70);
  }
  return result;
}

unint64_t sub_232E63F2C()
{
  unint64_t result;

  result = qword_255FFEA78;
  if (!qword_255FFEA78)
  {
    result = MEMORY[0x23492A124](&unk_232E7AEAC, &type metadata for ActivityPresentationState.DisplacementReason.SystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA78);
  }
  return result;
}

unint64_t sub_232E63F74()
{
  unint64_t result;

  result = qword_255FFEA80;
  if (!qword_255FFEA80)
  {
    result = MEMORY[0x23492A124](&unk_232E7AF24, &type metadata for ActivityPresentationState.DisplacementReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA80);
  }
  return result;
}

unint64_t sub_232E63FBC()
{
  unint64_t result;

  result = qword_255FFEA88;
  if (!qword_255FFEA88)
  {
    result = MEMORY[0x23492A124](&unk_232E7AF4C, &type metadata for ActivityPresentationState.DisplacementReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA88);
  }
  return result;
}

unint64_t sub_232E64004()
{
  unint64_t result;

  result = qword_255FFEA90;
  if (!qword_255FFEA90)
  {
    result = MEMORY[0x23492A124](&unk_232E7AD7C, &type metadata for ActivityPresentationState.ForegroundModifier.ProminentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA90);
  }
  return result;
}

unint64_t sub_232E6404C()
{
  unint64_t result;

  result = qword_255FFEA98;
  if (!qword_255FFEA98)
  {
    result = MEMORY[0x23492A124](&unk_232E7ADA4, &type metadata for ActivityPresentationState.ForegroundModifier.ProminentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEA98);
  }
  return result;
}

unint64_t sub_232E64094()
{
  unint64_t result;

  result = qword_255FFEAA0;
  if (!qword_255FFEAA0)
  {
    result = MEMORY[0x23492A124](&unk_232E7AD2C, &type metadata for ActivityPresentationState.ForegroundModifier.RestrictedUpdatesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEAA0);
  }
  return result;
}

unint64_t sub_232E640DC()
{
  unint64_t result;

  result = qword_255FFEAA8;
  if (!qword_255FFEAA8)
  {
    result = MEMORY[0x23492A124](&unk_232E7AD54, &type metadata for ActivityPresentationState.ForegroundModifier.RestrictedUpdatesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEAA8);
  }
  return result;
}

unint64_t sub_232E64124()
{
  unint64_t result;

  result = qword_255FFEAB0;
  if (!qword_255FFEAB0)
  {
    result = MEMORY[0x23492A124](&unk_232E7ADCC, &type metadata for ActivityPresentationState.ForegroundModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEAB0);
  }
  return result;
}

unint64_t sub_232E6416C()
{
  unint64_t result;

  result = qword_255FFEAB8;
  if (!qword_255FFEAB8)
  {
    result = MEMORY[0x23492A124](&unk_232E7ADF4, &type metadata for ActivityPresentationState.ForegroundModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFEAB8);
  }
  return result;
}

uint64_t sub_232E641B0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000232E7FA70 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E64294(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000232E7DC30 || (sub_232E6F6E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746E6573657270 && a2 == 0xED0000736E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_232E6F6E4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_232E643AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BEE5418];
  v3 = sub_232E6F0CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_232E643F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x24BEE5400];
  v3 = sub_232E6F0CC();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_232E6443C()
{
  sub_232E6F0D8();
  sub_232DDDAD8(&qword_2542382C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542382D0);
  sub_232E65A64(&qword_2542383A8, &qword_2542382D0);
  return sub_232E6F4A4();
}

uint64_t sub_232E644E8()
{
  uint64_t v0;

  v0 = sub_232E6EF28();
  __swift_allocate_value_buffer(v0, qword_25600FDB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25600FDB8);
  return sub_232E6EF1C();
}

uint64_t sub_232E64568(uint64_t a1, int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  uint64_t result;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  __int128 aBlock;
  uint64_t (*v40)(uint64_t);
  void *v41;
  uint64_t (*v42)();
  uint64_t v43;
  __int128 v44;
  uint64_t v45;

  v33 = a5;
  v34 = a7;
  v38 = a2;
  v37 = a1;
  v14 = sub_232E6F3C0();
  v35 = *(_QWORD *)(v14 - 8);
  v36 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v32 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_232E6F3A8();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_232E6F108();
  MEMORY[0x24BDAC7A8](v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a5;
  v31[0] = a6;
  v18[4] = a6;
  v18[5] = a7;
  v18[6] = a8;
  v31[1] = sub_232DE06B4(0, (unint64_t *)&qword_254238480);
  v19 = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_232E6F0E4();
  *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8((unint64_t *)&qword_254238620, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542384B0);
  v20 = a8;
  sub_232E65A64((unint64_t *)&qword_254238610, (uint64_t *)&unk_2542384B0);
  sub_232E6F4A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v32, *MEMORY[0x24BEE5750], v36);
  v21 = v31[0];
  v22 = sub_232E6F3F0();
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + 104) = xmmword_232E7B790;
  *(_BYTE *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = 0;
  *(_QWORD *)(a3 + 16) = v22;
  *(_QWORD *)(a3 + 24) = sub_232E65A54;
  *(_QWORD *)(a3 + 32) = v18;
  swift_retain();
  sub_232DF5030(0);
  *(_QWORD *)(a3 + 40) = v37;
  *(_BYTE *)(a3 + 48) = v38 & 1;
  sub_232E0B2F0(v33, v21, v34, v20, &v44);
  if (v45)
  {
    sub_232DEAC8C(&v44, (uint64_t)&aBlock);
    if (qword_255FFBE90 != -1)
      swift_once();
    v23 = sub_232E6EF28();
    __swift_project_value_buffer(v23, (uint64_t)qword_25600FDB8);
    v24 = sub_232E6EF10();
    v25 = sub_232E6F390();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_232DDB000, v24, v25, "Created inner cancellable on the first attempt", v26, 2u);
      MEMORY[0x23492A1F0](v26, -1, -1);
    }

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a3 + 120) = 1;
    sub_232DEAC8C(&aBlock, (uint64_t)&v44);
    swift_beginAccess();
    sub_232E65990((uint64_t)&v44, a3 + 64);
    swift_endAccess();
    return a3;
  }
  sub_232E657FC((uint64_t)&v44);
  v27 = *(NSObject **)(a3 + 16);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_232E65AA4;
  *(_QWORD *)(v28 + 24) = a3;
  v42 = sub_232DDD4AC;
  v43 = v28;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v40 = sub_232DDD48C;
  v41 = &block_descriptor_9_1;
  v29 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v27, v29);
  _Block_release(v29);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  result = swift_release();
  if ((v27 & 1) == 0)
    return a3;
  __break(1u);
  return result;
}

uint64_t sub_232E64A48()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[4];
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  if (v0[7])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_232E6F420();
    swift_unknownObjectRelease();
  }
  v0[7] = 0;
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_232E659D8((uint64_t)(v0 + 8), (uint64_t)&v4);
  if (*((_QWORD *)&v5 + 1))
  {
    sub_232DE80CC((uint64_t)&v4, (uint64_t)v3);
    sub_232E657FC((uint64_t)&v4);
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_232E6EF34();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_232E657FC((uint64_t)&v4);
  }
  v6 = 0;
  v4 = 0u;
  v5 = 0u;
  swift_beginAccess();
  sub_232E65990((uint64_t)&v4, (uint64_t)(v0 + 8));
  swift_endAccess();
  v1 = v0[3];
  v0[3] = 0;
  v0[4] = 0;
  return sub_232DF5030(v1);
}

uint64_t sub_232E64B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  char v25;
  uint64_t result;
  double v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, _QWORD, uint64_t);
  char *v35;
  uint64_t ObjectType;
  char *v37;
  void (*v38)(uint64_t *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD aBlock[7];

  v1 = sub_232E6F0D8();
  v53 = *(_QWORD *)(v1 - 8);
  v54 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v52 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_232E6F108();
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_232E6F120();
  v46 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)&v44 - v8;
  v56 = sub_232E6F0CC();
  v48 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)&v44 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v55 = (uint64_t *)((char *)&v44 - v14);
  v15 = sub_232E6F3FC();
  v45 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_232E6F12C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (uint64_t *)((char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(void **)(v0 + 16);
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v19 + 104))(v22, *MEMORY[0x24BEE5610], v18, v20);
  v24 = v23;
  v25 = sub_232E6F144();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v19 + 8))(v22, v18);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v27 = *(double *)(v0 + 104) * 1000000.0;
  if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v28 = (uint64_t *)v10;
  if ((uint64_t)v27 >= 0x7FFFFFFF)
    v29 = 0x7FFFFFFFLL;
  else
    v29 = (uint64_t)v27;
  sub_232DE06B4(0, (unint64_t *)&qword_2542373D0);
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_232DDDAD8((unint64_t *)&qword_2542373C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
  v44 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254236920);
  sub_232E65A64((unint64_t *)&qword_2542373B0, &qword_254236920);
  sub_232E6F4A4();
  v30 = sub_232E6F408();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v15);
  v31 = v55;
  v32 = v56;
  *v55 = v29;
  v33 = v48;
  v34 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v48 + 104);
  v34(v31, *MEMORY[0x24BEE5408], v32);
  sub_232E6F114();
  v35 = v57;
  MEMORY[0x23492956C](v6, v31);
  v46 = *(_QWORD *)(v46 + 8);
  ((void (*)(char *, uint64_t))v46)(v6, v58);
  ObjectType = swift_getObjectType();
  v37 = v47;
  v34((uint64_t *)v47, *MEMORY[0x24BEE5418], v32);
  *v28 = 0;
  v34(v28, *MEMORY[0x24BEE5400], v32);
  MEMORY[0x234929878](v35, v37, v28, ObjectType);
  v38 = *(void (**)(uint64_t *, uint64_t))(v33 + 8);
  v38(v28, v32);
  v38((uint64_t *)v37, v32);
  v39 = swift_allocObject();
  v40 = v44;
  swift_weakInit();
  aBlock[4] = sub_232E657F4;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232DDE158;
  aBlock[3] = &block_descriptor_13;
  v41 = _Block_copy(aBlock);
  swift_retain();
  v42 = v49;
  sub_232E6F0E4();
  v43 = v52;
  sub_232E6443C();
  sub_232E6F414();
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v43, v54);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v51);
  swift_release();
  swift_release();
  *(_QWORD *)(v40 + 56) = v30;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (*(_QWORD *)(v40 + 56))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_232E6F42C();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  ((void (*)(char *, uint64_t))v46)(v57, v58);
  return ((uint64_t (*)(uint64_t *, uint64_t))v38)(v55, v56);
}

uint64_t sub_232E65100()
{
  uint64_t result;
  uint64_t v1;
  void (*v2)(__int128 *__return_ptr, uint64_t);
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _BYTE v22[40];
  __int128 v23;
  uint64_t v24;
  _QWORD v25[5];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v3 = (_QWORD *)(result + 24);
    v2 = *(void (**)(__int128 *__return_ptr, uint64_t))(result + 24);
    if (v2)
    {
      swift_retain();
      v2(&v23, v1);
      if (v24)
      {
        sub_232DEAC8C(&v23, (uint64_t)v25);
        sub_232DE80CC((uint64_t)v25, (uint64_t)&v23);
        sub_232E65948((uint64_t)&v23, (uint64_t)v22);
        swift_beginAccess();
        sub_232E65990((uint64_t)v22, v1 + 64);
        swift_endAccess();
        *(_BYTE *)(v1 + 120) = 1;
        if (qword_255FFBE90 != -1)
          swift_once();
        v4 = sub_232E6EF28();
        __swift_project_value_buffer(v4, (uint64_t)qword_25600FDB8);
        swift_retain();
        v5 = sub_232E6EF10();
        v6 = sub_232E6F390();
        if (os_log_type_enabled(v5, v6))
        {
          v7 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v7 = 134349056;
          *(_QWORD *)&v23 = *(_QWORD *)(v1 + 128);
          sub_232E6F480();
          swift_release();
          _os_log_impl(&dword_232DDB000, v5, v6, "Created inner cancellable after %{public}ld attempts", v7, 0xCu);
          MEMORY[0x23492A1F0](v7, -1, -1);

          if (*(_QWORD *)(v1 + 56))
          {
LABEL_8:
            swift_getObjectType();
            swift_unknownObjectRetain();
            sub_232E6F420();
            sub_232DF5030((uint64_t)v2);
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
LABEL_22:
            *(_QWORD *)(v1 + 56) = 0;
            swift_unknownObjectRelease();
            v17 = *(_QWORD *)(v1 + 24);
            *v3 = 0;
            v3[1] = 0;
            sub_232DF5030(v17);
            return swift_release();
          }
        }
        else
        {

          swift_release();
          if (*(_QWORD *)(v1 + 56))
            goto LABEL_8;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        sub_232DF5030((uint64_t)v2);
        goto LABEL_22;
      }
      sub_232E657FC((uint64_t)&v23);
      v8 = *(_QWORD *)(v1 + 128);
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v1 + 128) = v10;
        v11 = *(double *)(v1 + 104) + *(double *)(v1 + 104);
        if (*(double *)(v1 + 112) < v11)
          v11 = *(double *)(v1 + 112);
        *(double *)(v1 + 104) = v11;
        if ((*(_BYTE *)(v1 + 48) & 1) == 0 && v10 >= *(_QWORD *)(v1 + 40))
        {
          if (qword_255FFBE90 != -1)
            swift_once();
          v18 = sub_232E6EF28();
          __swift_project_value_buffer(v18, (uint64_t)qword_25600FDB8);
          swift_retain();
          v19 = sub_232E6EF10();
          v20 = sub_232E6F378();
          if (os_log_type_enabled(v19, v20))
          {
            v21 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v21 = 134349056;
            v25[0] = *(_QWORD *)(v1 + 128);
            sub_232E6F480();
            swift_release();
            _os_log_impl(&dword_232DDB000, v19, v20, "Failed to create inner cancellable after %{public}ld attempts; giving up as maximum reached",
              v21,
              0xCu);
            MEMORY[0x23492A1F0](v21, -1, -1);
            sub_232DF5030((uint64_t)v2);

          }
          else
          {
            sub_232DF5030((uint64_t)v2);

            swift_release();
          }
          *(_BYTE *)(v1 + 120) = 2;
          return swift_release();
        }
        if (qword_255FFBE90 == -1)
          goto LABEL_18;
      }
      swift_once();
LABEL_18:
      v12 = sub_232E6EF28();
      __swift_project_value_buffer(v12, (uint64_t)qword_25600FDB8);
      swift_retain();
      v13 = sub_232E6EF10();
      v14 = sub_232E6F390();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        *(_DWORD *)v15 = 134349312;
        v25[0] = *(_QWORD *)(v1 + 128);
        sub_232E6F480();
        *(_WORD *)(v15 + 12) = 2050;
        v25[0] = *(_QWORD *)(v1 + 104);
        sub_232E6F480();
        swift_release();
        _os_log_impl(&dword_232DDB000, v13, v14, "Failed to create inner cancellable after %{public}ld attempts; trying again in %{public}fs",
          (uint8_t *)v15,
          0x16u);
        MEMORY[0x23492A1F0](v15, -1, -1);

      }
      else
      {

        v16 = swift_release();
      }
      sub_232E64B70(v16);
      sub_232DF5030((uint64_t)v2);
      return swift_release();
    }
    if (*(_QWORD *)(result + 56))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_232E6F420();
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v1 + 56) = 0;
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_232E65640()
{
  uint64_t v0;

  sub_232DF5030(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease();
  sub_232E657FC(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RetryingCancellable()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for RetryingCancellable.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232E656E8 + 4 * byte_232E7B7B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232E6571C + 4 * byte_232E7B7B0[v4]))();
}

uint64_t sub_232E6571C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E65724(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232E6572CLL);
  return result;
}

uint64_t sub_232E65738(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232E65740);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232E65744(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232E6574C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RetryingCancellable.State()
{
  return &type metadata for RetryingCancellable.State;
}

unint64_t sub_232E6576C()
{
  unint64_t result;

  result = qword_255FFEAC0;
  if (!qword_255FFEAC0)
  {
    result = MEMORY[0x23492A124](&unk_232E7B888, &type metadata for RetryingCancellable.State);
    atomic_store(result, (unint64_t *)&qword_255FFEAC0);
  }
  return result;
}

uint64_t sub_232E657B0()
{
  return sub_232E64A48();
}

uint64_t sub_232E657D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232E657F4()
{
  return sub_232E65100();
}

uint64_t sub_232E657FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFBEA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_232E6583C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_232E6F5B8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_232E658D0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_232E658F8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_232E6F480();
  *a1 = v5;
  return result;
}

uint64_t sub_232E65948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFBEA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E65990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFBEA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E659D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255FFBEA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232E65A20()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232E65A54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_232E0B2F0(v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_232E65A64(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23492A124](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232E65AA8()
{
  return swift_deallocObject();
}

uint64_t ActivityDescriptorContentState.init(descriptor:state:contentState:content:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  int *v11;
  _QWORD *v12;

  v10 = *a2;
  sub_232DEDD20(a1, a6, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  v11 = (int *)type metadata accessor for ActivityDescriptorContentState();
  *(_BYTE *)(a6 + v11[5]) = v10;
  v12 = (_QWORD *)(a6 + v11[6]);
  *v12 = a3;
  v12[1] = a4;
  return sub_232DEDD20(a5, a6 + v11[7], (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
}

uint64_t ActivityDescriptorContentState.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232DED470(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
}

uint64_t ActivityDescriptorContentState.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActivityDescriptorContentState();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t ActivityDescriptorContentState.contentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ActivityDescriptorContentState() + 24);
  v2 = *(_QWORD *)v1;
  sub_232DE4A2C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t ActivityDescriptorContentState.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActivityDescriptorContentState();
  return sub_232DED470(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
}

uint64_t sub_232E65C14()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232E65C48 + 4 * byte_232E7B8E0[*v0]))(0x7470697263736564, 0xEA0000000000726FLL);
}

uint64_t sub_232E65C48()
{
  return 0x6574617473;
}

uint64_t sub_232E65C5C()
{
  return 0x53746E65746E6F63;
}

uint64_t sub_232E65C7C()
{
  return 0x746E65746E6F63;
}

uint64_t sub_232E65C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E68038(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232E65CB8()
{
  sub_232E66D5C();
  return sub_232E6F7D4();
}

uint64_t sub_232E65CE0()
{
  sub_232E66D5C();
  return sub_232E6F7E0();
}

uint64_t ActivityDescriptorContentState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFB588);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_232E66D5C();
  sub_232E6F7C8();
  LOBYTE(v11) = 0;
  type metadata accessor for ActivityDescriptor();
  sub_232DDDAD8(&qword_254237400, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
  sub_232E6F6A8();
  if (!v2)
  {
    v9 = type metadata accessor for ActivityDescriptorContentState();
    LOBYTE(v11) = *(_BYTE *)(v3 + *(int *)(v9 + 20));
    v12 = 1;
    sub_232E1C494();
    sub_232E6F6A8();
    v11 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    v12 = 2;
    sub_232E069B0();
    sub_232E6F6A8();
    LOBYTE(v11) = 3;
    type metadata accessor for OpaqueActivityContent();
    sub_232DDDAD8((unint64_t *)&unk_254237410, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
    sub_232E6F6A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ActivityDescriptorContentState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  __int128 v29;
  char v30;

  v22 = a2;
  v23 = type metadata accessor for OpaqueActivityContent();
  MEMORY[0x24BDAC7A8](v23);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActivityDescriptor();
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255FFC2F0);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for ActivityDescriptorContentState();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_232E66D5C();
  v25 = v9;
  v14 = v28;
  sub_232E6F7BC();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  v15 = v7;
  v28 = v4;
  LOBYTE(v29) = 0;
  sub_232DDDAD8(&qword_254237EA0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptor, (uint64_t)&protocol conformance descriptor for ActivityDescriptor);
  v17 = (uint64_t)v24;
  v16 = v25;
  v18 = v26;
  sub_232E6F63C();
  sub_232DEDD20(v17, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptor);
  v30 = 1;
  sub_232E16EA8();
  sub_232E6F63C();
  v12[v10[5]] = v29;
  v30 = 2;
  sub_232E0683C();
  sub_232E6F63C();
  *(_OWORD *)&v12[v10[6]] = v29;
  LOBYTE(v29) = 3;
  sub_232DDDAD8(&qword_2542379A0, (uint64_t (*)(uint64_t))type metadata accessor for OpaqueActivityContent, (uint64_t)&protocol conformance descriptor for OpaqueActivityContent);
  v19 = (uint64_t)v28;
  sub_232E6F63C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v18);
  sub_232DEDD20(v19, (uint64_t)&v12[v10[7]], (uint64_t (*)(_QWORD))type metadata accessor for OpaqueActivityContent);
  sub_232DED470((uint64_t)v12, v22, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_232DF51B8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ActivityDescriptorContentState);
}

uint64_t sub_232E662AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityDescriptorContentState.init(from:)(a1, a2);
}

uint64_t sub_232E662C0(_QWORD *a1)
{
  return ActivityDescriptorContentState.encode(to:)(a1);
}

uint64_t sub_232E662D8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232DDDAD8(&qword_255FFC498, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptorContentState, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState);
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

uint64_t sub_232E663A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254236840);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232E6EDB4();
  swift_allocObject();
  sub_232E6EDA8();
  v8 = sub_232E6EE44();
  v10 = v9;
  sub_232DDDAD8(&qword_254237AF8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptorContentState, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState);
  sub_232E6ED9C();
  sub_232E68290(a2);
  sub_232DE8D98(v8, v10);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v7, 0, 1, a3);
  return sub_232E682D0((uint64_t)v7, a2);
}

uint64_t sub_232E6650C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232E6820C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_232E66534()
{
  sub_232DEBE34();
  return sub_232E6F7D4();
}

uint64_t sub_232E6655C()
{
  sub_232DEBE34();
  return sub_232E6F7E0();
}

uint64_t sub_232E66584()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_232E6EDD8();
  swift_allocObject();
  sub_232E6EDCC();
  sub_232E66E4C();
  v0 = sub_232E6EDC0();
  v2 = v1;
  v3 = sub_232E6EE2C();
  sub_232DE8D98(v0, v2);
  swift_release();
  return v3;
}

void sub_232E66648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_232E666A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x232E6688CLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_232E668B0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_232E6690C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_232E66648((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_232DE8D98(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_232E66AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_232E6ED48();
  v11 = result;
  if (result)
  {
    result = sub_232E6ED60();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_232E6ED54();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_232E66648(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_232E66B88(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_232E66BCC()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_232E66C00 + *((int *)qword_232E66CC0 + (v0 >> 62))))();
}

uint64_t sub_232E66C10@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_232DE4A2C(v2, v1);
      sub_232E668B0(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

void _s11ActivityKit0A22DescriptorContentStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if ((_s11ActivityKit0A10DescriptorV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) != 0)
  {
    v4 = type metadata accessor for ActivityDescriptorContentState();
    if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    {
      v5 = v4;
      sub_232E66B88(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a1 + *(int *)(v4 + 24) + 8));
      if ((v6 & 1) != 0)
        static OpaqueActivityContent.== infix(_:_:)(a1 + *(int *)(v5 + 28));
    }
  }
}

unint64_t sub_232E66D5C()
{
  unint64_t result;

  result = qword_255FFC7C8;
  if (!qword_255FFC7C8)
  {
    result = MEMORY[0x23492A124](&unk_232E7BD08, &type metadata for ActivityDescriptorContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255FFC7C8);
  }
  return result;
}

uint64_t sub_232E66DA0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_232DDDAD8(&qword_254237AF8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptorContentState, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState);
  a1[2] = sub_232DDDAD8(&qword_255FFC498, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptorContentState, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState);
  result = sub_232DDDAD8(&qword_255FFEAC8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDescriptorContentState, (uint64_t)&protocol conformance descriptor for ActivityDescriptorContentState);
  a1[3] = result;
  return result;
}

unint64_t sub_232E66E18(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_232DEBD34();
  a1[2] = sub_232E66E4C();
  result = sub_232E66E90();
  a1[3] = result;
  return result;
}

unint64_t sub_232E66E4C()
{
  unint64_t result;

  result = qword_255FFC450;
  if (!qword_255FFC450)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for XPCCodableActivityDescriptorContentStates, &type metadata for XPCCodableActivityDescriptorContentStates);
    atomic_store(result, (unint64_t *)&qword_255FFC450);
  }
  return result;
}

unint64_t sub_232E66E90()
{
  unint64_t result;

  result = qword_255FFC458;
  if (!qword_255FFC458)
  {
    result = MEMORY[0x23492A124](&protocol conformance descriptor for XPCCodableActivityDescriptorContentStates, &type metadata for XPCCodableActivityDescriptorContentStates);
    atomic_store(result, (unint64_t *)&qword_255FFC458);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityDescriptorContentState(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v48 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[4];
    v9 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v8, v9);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[6];
    v11 = a2[7];
    v12 = a2[8];
    v13 = a2[9];
    v14 = a2[10];
    v15 = *((_BYTE *)a2 + 88);
    sub_232E01E78();
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    *(_QWORD *)(a1 + 80) = v14;
    *(_BYTE *)(a1 + 88) = v15;
    v16 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v16;
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    *(_BYTE *)(a1 + 116) = *((_BYTE *)a2 + 116);
    v17 = (void *)a2[15];
    *(_QWORD *)(a1 + 120) = v17;
    *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
    v18 = (int *)type metadata accessor for ActivityDescriptor();
    v19 = v18[12];
    v20 = a1 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = sub_232E6EE74();
    v50 = *(_QWORD *)(v22 - 8);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = v17;
    v23(v20, v21, v22);
    v25 = v18[13];
    v26 = (_QWORD *)(a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v18[14];
    v30 = (_QWORD *)(a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    *(_BYTE *)(a1 + v18[15]) = *((_BYTE *)a2 + v18[15]);
    v33 = a3[6];
    *(_BYTE *)(a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v34 = (uint64_t *)(a1 + v33);
    v35 = *(uint64_t *)((char *)a2 + v33);
    v36 = *(uint64_t *)((char *)a2 + v33 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_232DE4A2C(v35, v36);
    *v34 = v35;
    v34[1] = v36;
    v37 = v22;
    v38 = a3[7];
    v39 = (uint64_t *)(a1 + v38);
    v40 = (uint64_t)a2 + v38;
    v41 = *(uint64_t *)((char *)a2 + v38);
    v42 = *(_QWORD *)(v40 + 8);
    sub_232DE4A2C(v41, v42);
    *v39 = v41;
    v39[1] = v42;
    v43 = type metadata accessor for OpaqueActivityContent();
    v44 = *(int *)(v43 + 20);
    v45 = (char *)v39 + v44;
    v46 = (const void *)(v40 + v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v40 + v44, 1, v37))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v23((uint64_t)v45, (uint64_t)v46, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v45, 0, 1, v37);
    }
    *(uint64_t *)((char *)v39 + *(int *)(v43 + 24)) = *(_QWORD *)(v40 + *(int *)(v43 + 24));
  }
  return a1;
}

uint64_t destroy for ActivityDescriptorContentState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232DE8D98(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  sub_232E03000();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(type metadata accessor for ActivityDescriptor() + 48);
  v5 = sub_232E6EE74();
  v6 = *(_QWORD *)(v5 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232DE8D98(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
  v7 = a1 + *(int *)(a2 + 28);
  sub_232DE8D98(*(_QWORD *)v7, *(_QWORD *)(v7 + 8));
  v8 = v7 + *(int *)(type metadata accessor for OpaqueActivityContent() + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v5);
  return result;
}

uint64_t initializeWithCopy for ActivityDescriptorContentState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v47;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_232DE4A2C(v7, v8);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_BYTE *)(a2 + 88);
  sub_232E01E78();
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_BYTE *)(a1 + 88) = v14;
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v15;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v16 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v16;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v17 = (int *)type metadata accessor for ActivityDescriptor();
  v18 = v17[12];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_232E6EE74();
  v47 = *(_QWORD *)(v21 - 8);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = v16;
  v22(v19, v20, v21);
  v24 = v17[13];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v17[14];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  *(_BYTE *)(a1 + v17[15]) = *(_BYTE *)(a2 + v17[15]);
  v32 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v33 = (uint64_t *)(a1 + v32);
  v34 = *(_QWORD *)(a2 + v32);
  v35 = *(_QWORD *)(a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_232DE4A2C(v34, v35);
  *v33 = v34;
  v33[1] = v35;
  v36 = a3[7];
  v37 = (uint64_t *)(a1 + v36);
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a2 + v36);
  v40 = *(_QWORD *)(v38 + 8);
  sub_232DE4A2C(v39, v40);
  *v37 = v39;
  v37[1] = v40;
  v41 = type metadata accessor for OpaqueActivityContent();
  v42 = *(int *)(v41 + 20);
  v43 = (char *)v37 + v42;
  v44 = (const void *)(v38 + v42);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v38 + v42, 1, v21))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v22((uint64_t)v43, (uint64_t)v44, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v43, 0, 1, v21);
  }
  *(uint64_t *)((char *)v37 + *(int *)(v41 + 24)) = *(_QWORD *)(v38 + *(int *)(v41 + 24));
  return a1;
}

uint64_t assignWithCopy for ActivityDescriptorContentState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  uint64_t v51;
  void (*v53)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  sub_232DE4A2C(v6, v7);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  sub_232DE8D98(v8, v9);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_BYTE *)(a2 + 88);
  sub_232E01E78();
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 88) = v15;
  sub_232E03000();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_BYTE *)(a1 + 114) = *(_BYTE *)(a2 + 114);
  *(_BYTE *)(a1 + 115) = *(_BYTE *)(a2 + 115);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v16 = *(void **)(a1 + 120);
  v17 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v17;
  v18 = v17;

  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v19 = (int *)type metadata accessor for ActivityDescriptor();
  v20 = v19[12];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_232E6EE74();
  v24 = *(_QWORD *)(v23 - 8);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24);
  v53(v21, v22, v23);
  v25 = v19[13];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v19[14];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v19[15]) = *(_BYTE *)(a2 + v19[15]);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v31 = a3[6];
  v32 = (uint64_t *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  v35 = v33[1];
  sub_232DE4A2C(*v33, v35);
  v36 = *v32;
  v37 = v32[1];
  *v32 = v34;
  v32[1] = v35;
  sub_232DE8D98(v36, v37);
  v38 = a3[7];
  v39 = (uint64_t *)(a1 + v38);
  v40 = a2 + v38;
  v41 = *(_QWORD *)(a2 + v38);
  v42 = *(_QWORD *)(v40 + 8);
  sub_232DE4A2C(v41, v42);
  v43 = *v39;
  v44 = v39[1];
  *v39 = v41;
  v39[1] = v42;
  sub_232DE8D98(v43, v44);
  v45 = type metadata accessor for OpaqueActivityContent();
  v46 = *(int *)(v45 + 20);
  v47 = (char *)v39 + v46;
  v48 = (char *)(v40 + v46);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v35) = v49((char *)v39 + v46, 1, v23);
  v50 = v49(v48, 1, v23);
  if (!(_DWORD)v35)
  {
    if (!v50)
    {
      v53((uint64_t)v47, (uint64_t)v48, v23);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v47, v23);
    goto LABEL_6;
  }
  if (v50)
  {
LABEL_6:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v47, v48, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v47, 0, 1, v23);
LABEL_7:
  *(uint64_t *)((char *)v39 + *(int *)(v45 + 24)) = *(_QWORD *)(v40 + *(int *)(v45 + 24));
  return a1;
}

uint64_t initializeWithTake for ActivityDescriptorContentState(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  v8 = (int *)type metadata accessor for ActivityDescriptor();
  v9 = v8[12];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_232E6EE74();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 32);
  v14(v10, v11, v12);
  *(_OWORD *)(a1 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
  *(_OWORD *)(a1 + v8[14]) = *(_OWORD *)(a2 + v8[14]);
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  v15 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  v19 = type metadata accessor for OpaqueActivityContent();
  v20 = *(int *)(v19 + 20);
  v21 = (void *)(v17 + v20);
  v22 = (const void *)(v18 + v20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v18 + v20, 1, v12))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v14(v21, v22, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  *(_QWORD *)(v17 + *(int *)(v19 + 24)) = *(_QWORD *)(v18 + *(int *)(v19 + 24));
  return a1;
}

uint64_t assignWithTake for ActivityDescriptorContentState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  void *v13;
  int *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t (*v42)(const void *, uint64_t, uint64_t);
  int v43;
  uint64_t v44;
  void (*v46)(void *, const void *, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_232DE8D98(v8, v9);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_BYTE *)(a2 + 88);
  v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 88) = v11;
  sub_232E03000();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_BYTE *)(a1 + 114) = *(_BYTE *)(a2 + 114);
  *(_BYTE *)(a1 + 115) = *(_BYTE *)(a2 + 115);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v13 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v14 = (int *)type metadata accessor for ActivityDescriptor();
  v15 = v14[12];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_232E6EE74();
  v19 = *(_QWORD *)(v18 - 8);
  v46 = *(void (**)(void *, const void *, uint64_t))(v19 + 40);
  v46(v16, v17, v18);
  v20 = v14[13];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = v14[14];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v14[15]) = *(_BYTE *)(a2 + v14[15]);
  v30 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v31 = *(_QWORD *)(a1 + v30);
  v32 = *(_QWORD *)(a1 + v30 + 8);
  *(_OWORD *)(a1 + v30) = *(_OWORD *)(a2 + v30);
  sub_232DE8D98(v31, v32);
  v33 = a3[7];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a1 + v33);
  v37 = *(_QWORD *)(a1 + v33 + 8);
  *(_OWORD *)(a1 + v33) = *(_OWORD *)(a2 + v33);
  sub_232DE8D98(v36, v37);
  v38 = type metadata accessor for OpaqueActivityContent();
  v39 = *(int *)(v38 + 20);
  v40 = (void *)(v34 + v39);
  v41 = (const void *)(v35 + v39);
  v42 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v16) = v42((const void *)(v34 + v39), 1, v18);
  v43 = v42(v41, 1, v18);
  if (!(_DWORD)v16)
  {
    if (!v43)
    {
      v46(v40, v41, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v40, v18);
    goto LABEL_6;
  }
  if (v43)
  {
LABEL_6:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254237978);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v40, v41, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v40, 0, 1, v18);
LABEL_7:
  *(_QWORD *)(v34 + *(int *)(v38 + 24)) = *(_QWORD *)(v35 + *(int *)(v38 + 24));
  return a1;
}

uint64_t sub_232E67C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = type metadata accessor for ActivityDescriptor();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 252)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 4)
      return v9 - 3;
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for OpaqueActivityContent();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v10);
  }
}

uint64_t sub_232E67D20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for ActivityDescriptor();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 252)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
      return result;
    }
    v10 = type metadata accessor for OpaqueActivityContent();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t storeEnumTagSinglePayload for XPCCodableActivityDescriptorContentStates.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232E67E00 + 4 * byte_232E7B8E4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232E67E20 + 4 * byte_232E7B8E9[v4]))();
}

_BYTE *sub_232E67E00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232E67E20(_BYTE *result)
{
  *result = 0;
  return result;
}

