uint64_t sub_22AA13354()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v1 + 360));
  OUTLINED_FUNCTION_4_22();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AA133C4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

void sub_22AA134BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[17] = a7;
  v8[18] = v7;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[11] = a1;
  v8[12] = a2;
  v8[19] = *(_QWORD *)(a5 + 32);
  v8[20] = *(_QWORD *)(a5 + 16);
  v8[21] = OUTLINED_FUNCTION_74_6();
  v8[22] = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v8[23] = sub_22ABDF0F8();
  v8[24] = OUTLINED_FUNCTION_74_6();
  v8[25] = OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_76_6();
}

void sub_22AA135C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1[26] = a1;
  v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v3);
  v1[27] = v5;
  v1[2] = v2;
  v1[3] = v3;
  v1[4] = a1;
  v1[28] = OUTLINED_FUNCTION_71_6(v5);
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AA13604(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[29] = a1;
  v7 = sub_22ABDF7B8();
  v2[30] = v7;
  v2[31] = *(_QWORD *)(v7 - 8);
  v2[32] = OUTLINED_FUNCTION_0_0();
  v2[33] = *(_QWORD *)(v1 - 8);
  v2[34] = OUTLINED_FUNCTION_0_0();
  v2[35] = type metadata accessor for AnnotatedFeature(255, v5, v6, v8);
  OUTLINED_FUNCTION_115();
  v9 = sub_22ABDFA10();
  v2[36] = v9;
  v2[37] = *(_QWORD *)(v9 - 8);
  v2[38] = OUTLINED_FUNCTION_0_0();
  v10 = *(_QWORD *)(v3 + 24);
  v2[39] = v10;
  v2[40] = *(_QWORD *)(v10 - 8);
  v2[41] = OUTLINED_FUNCTION_0_0();
  v2[42] = *(_QWORD *)(v4 - 8);
  v2[43] = OUTLINED_FUNCTION_0_0();
  v11 = sub_22ABDF7B8();
  v2[44] = v11;
  v2[45] = *(_QWORD *)(v11 - 8);
  v2[46] = OUTLINED_FUNCTION_0_0();
  v2[47] = swift_getAssociatedTypeWitness();
  v12 = sub_22ABDFA10();
  v2[48] = v12;
  v2[49] = *(_QWORD *)(v12 - 8);
  v2[50] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_52_4();
  return swift_task_switch();
}

void sub_22AA13734()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = v0[39];
  v2 = v0[19];
  v3 = v0[20];
  v11 = v2;
  v5 = v0[16];
  v4 = v0[17];
  v6 = v0[15];
  OUTLINED_FUNCTION_109_2();
  v7 = (_QWORD *)OUTLINED_FUNCTION_100();
  *v7 = v3;
  v7[1] = v1;
  v7[2] = v5;
  v7[3] = v2;
  v8 = *(_QWORD *)(v6 + 40);
  v0[51] = v8;
  v7[4] = v8;
  v7[5] = v4;
  v9 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v10[2] = v3;
  v10[3] = v1;
  v10[4] = v5;
  v10[5] = v11;
  v10[6] = v8;
  v10[7] = v4;
  v10[8] = v9;
  OUTLINED_FUNCTION_76_6();
}

uint64_t sub_22AA13810()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t (*v16)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  sub_22ABDFBC0();
  swift_release();
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  OUTLINED_FUNCTION_28_4(v0, v15);
  sub_22ABDEEB8();
  v7 = (_QWORD *)OUTLINED_FUNCTION_100();
  *v7 = v13;
  v7[1] = v6;
  v7[2] = v5;
  v7[3] = v3;
  v7[4] = v1;
  v7[5] = v4;
  v8 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v9 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v9[2] = v13;
  v9[3] = v6;
  v9[4] = v5;
  v9[5] = v3;
  v9[6] = v1;
  v9[7] = v4;
  v9[8] = v8;
  sub_22ABDFBC0();
  swift_release();
  v10 = OUTLINED_FUNCTION_122_1();
  ((void (*)(uint64_t))v15)(v10);
  v11 = (_QWORD *)OUTLINED_FUNCTION_69_6();
  v2[52] = v11;
  *v11 = v2;
  v11[1] = sub_22AA13948;
  return v16(v2[11], v2[12], v2[13], v2[14], v2[16], v2[17], v2[20], v2[19]);
}

uint64_t sub_22AA13948()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 424) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AA13998()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[53];
  sub_22ABDF1DC();
  if (v2)
  {
    OUTLINED_FUNCTION_56_9();
    OUTLINED_FUNCTION_57_6(v3);
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_52_4();
    __asm { BR              X0 }
  }
  v0[54] = swift_task_alloc();
  OUTLINED_FUNCTION_117_0();
  v0[55] = swift_checkMetadataState();
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AA13A50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *v0 = v1;
  v0[1] = sub_22AA13A90;
  OUTLINED_FUNCTION_52_4();
  return Transformer.applied<A>(to:eventHandler:)(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22AA13A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v2 + 448) = v1;
  *(_QWORD *)(v2 + 456) = v0;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA13ADC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_15_19();
  v2 = v0[57];
  sub_22ABDF1DC();
  if (!v2)
  {
    v6 = v0[56];
    v19 = v0[51];
    v7 = v0[39];
    v8 = v0[34];
    v14 = v0[33];
    v18 = v0[19];
    v16 = v0[20];
    v17 = v0[17];
    v15 = v0[16];
    OUTLINED_FUNCTION_93_2();
    OUTLINED_FUNCTION_79(v9, v10, v11);
    v0[10] = v6;
    sub_22ABE0178();
    OUTLINED_FUNCTION_3_8();
    sub_22ABDEEB8();
    OUTLINED_FUNCTION_66_6(v8, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    v12 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v12[2] = v16;
    v12[3] = v7;
    v12[4] = v15;
    v12[5] = v18;
    v12[6] = v19;
    v12[7] = v17;
    v13 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v13[2] = v16;
    v13[3] = v7;
    v13[4] = v15;
    v13[5] = v18;
    v13[6] = v19;
    v13[7] = v17;
    v13[8] = sub_22AA169D4;
    v13[9] = v12;
    OUTLINED_FUNCTION_106();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_56_9();
  OUTLINED_FUNCTION_57_6(v3);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_48_8();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_2_34(v4);
}

void sub_22AA13C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_48_2(v22, *(uint64_t (**)(uint64_t, uint64_t))(a20 + 8));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_122_1();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v21[6] = *(_QWORD *)(v23 - 96);
  v21[7] = AssociatedTypeWitness;
  v21[8] = a21;
  v21[9] = AssociatedConformanceWitness;
  type metadata accessor for ComposedTransformer();
}

uint64_t sub_22AA13D20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = v9 + *(int *)(a1 + 52);
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v3 - 96) = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v1[58] = v6;
  v7 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], *(_QWORD *)(v3 - 88));
  *v6 = v1;
  v6[1] = sub_22AA13DA4;
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(v3 - 96))(v4, v1[38], v1[13], v1[14], v1[36], v7, v1[39], v1[51]);
}

uint64_t sub_22AA13DA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 472) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 320);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 296));
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t sub_22AA13E1C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 392);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 200));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA13E9C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 392);
  OUTLINED_FUNCTION_57_6(*(_QWORD *)(v0 + 336));
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA13F18()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 392);
  OUTLINED_FUNCTION_57_6(*(_QWORD *)(v0 + 336));
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA13F94()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 392);
  OUTLINED_FUNCTION_57_6(*(_QWORD *)(v0 + 336));
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

#error "22AA140A8: call analysis failed (funcsize=41)"

void sub_22AA140CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_53_9();
  v27[21] = a26;
  v27[22] = v26;
  v27[19] = v28;
  v27[20] = a25;
  v27[17] = v29;
  v27[18] = v30;
  v27[15] = v31;
  v27[16] = v32;
  v27[13] = v33;
  v27[14] = v34;
  v27[12] = v35;
  v36 = *(_QWORD *)(v29 + 32);
  v27[23] = v36;
  v27[24] = *(_QWORD *)(v36 + 8);
  v27[25] = *(_QWORD *)(v29 + 16);
  OUTLINED_FUNCTION_75_5();
  v27[26] = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v27[27] = sub_22ABDF0F8();
  v27[28] = OUTLINED_FUNCTION_75_5();
  v27[29] = OUTLINED_FUNCTION_85_5();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA141DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v2[30] = a1;
  v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v3);
  v2[31] = v5;
  v2[2] = v1;
  v2[3] = v3;
  v2[4] = a1;
  v2[32] = OUTLINED_FUNCTION_71_6(v5);
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA1421C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[33] = a1;
  v7 = OUTLINED_FUNCTION_91_3();
  v4[34] = v7;
  v4[35] = *(_QWORD *)(v7 - 8);
  v4[36] = OUTLINED_FUNCTION_0_0();
  v4[37] = *(_QWORD *)(v3 - 8);
  v4[38] = OUTLINED_FUNCTION_0_0();
  v4[39] = type metadata accessor for AnnotatedFeature(255, v5, v6, v8);
  v9 = OUTLINED_FUNCTION_85_5();
  v4[40] = v9;
  v4[41] = *(_QWORD *)(v9 - 8);
  v4[42] = OUTLINED_FUNCTION_0_0();
  v10 = OUTLINED_FUNCTION_85_5();
  v4[43] = v10;
  v11 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v10);
  v4[44] = v11;
  v4[6] = v2;
  v4[7] = v10;
  v4[8] = v1;
  v4[9] = v11;
  v4[45] = sub_22ABDF7E8();
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AA142E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2[46] = a1;
  OUTLINED_FUNCTION_115();
  v6 = sub_22ABDF7B8();
  v2[47] = v6;
  v2[48] = *(_QWORD *)(v6 - 8);
  v2[49] = OUTLINED_FUNCTION_0_0();
  v2[50] = *(_QWORD *)(v1 - 8);
  v2[51] = OUTLINED_FUNCTION_0_0();
  v7 = OUTLINED_FUNCTION_101_2();
  v2[52] = v7;
  v2[53] = *(_QWORD *)(v7 - 8);
  v2[54] = OUTLINED_FUNCTION_0_0();
  v8 = *(_QWORD *)(v4 + 24);
  v2[55] = v8;
  v2[56] = *(_QWORD *)(v8 - 8);
  v2[57] = OUTLINED_FUNCTION_0_0();
  v9 = *(_QWORD *)(v4 + 40);
  v2[58] = v9;
  v2[59] = *(_QWORD *)(v9 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[60] = AssociatedTypeWitness;
  v2[61] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[62] = OUTLINED_FUNCTION_23_0();
  v2[63] = OUTLINED_FUNCTION_38_0();
  v2[64] = OUTLINED_FUNCTION_38_0();
  v11 = swift_checkMetadataState();
  v2[65] = v11;
  v2[66] = *(_QWORD *)(v11 - 8);
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  v2[69] = *(_QWORD *)(v3 - 8);
  v2[70] = OUTLINED_FUNCTION_0_0();
  v12 = sub_22ABDF7B8();
  v2[71] = v12;
  v2[72] = *(_QWORD *)(v12 - 8);
  v2[73] = OUTLINED_FUNCTION_0_0();
  v2[74] = swift_getAssociatedTypeWitness();
  v13 = OUTLINED_FUNCTION_101_2();
  v2[75] = v13;
  v2[76] = *(_QWORD *)(v13 - 8);
  v2[77] = OUTLINED_FUNCTION_0_0();
  v2[78] = *(_QWORD *)(v5 - 8);
  v2[79] = OUTLINED_FUNCTION_0_0();
  v14 = OUTLINED_FUNCTION_91_3();
  v2[80] = v14;
  v2[81] = *(_QWORD *)(v14 - 8);
  v2[82] = OUTLINED_FUNCTION_0_0();
  v15 = OUTLINED_FUNCTION_85_5();
  v2[83] = v15;
  v2[84] = *(_QWORD *)(v15 - 8);
  v2[85] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AA144E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = v0[58];
  v2 = v0[55];
  v3 = v0[25];
  v4 = v0[23];
  v5 = v0[21];
  v7 = v0[18];
  v6 = v0[19];
  v8 = v0[20];
  sub_22ABDEEB8();
  v9 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  *v9 = v3;
  v9[1] = v2;
  v9[2] = v7;
  v9[3] = v6;
  v9[4] = v4;
  v9[5] = v1;
  v9[6] = v8;
  v9[7] = v5;
  v11 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v10[2] = v3;
  v10[3] = v2;
  v10[4] = v7;
  v10[5] = v6;
  v10[6] = v4;
  v10[7] = v1;
  v10[8] = v8;
  v10[9] = v5;
  v10[10] = v11;
  OUTLINED_FUNCTION_76_6();
}

void sub_22AA14610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_18_10();
  v45 = *(uint64_t (**)(uint64_t, uint64_t))(a15 + 8);
  OUTLINED_FUNCTION_23_17(v45);
  sub_22ABDEEB8();
  v28 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  *v28 = v23;
  v28[1] = v24;
  v29 = v23;
  v43 = v23;
  v30 = v24;
  v28[2] = v26;
  v28[3] = v25;
  v31 = v22;
  v46 = v22;
  v28[4] = v22;
  v32 = *(_QWORD *)(v27 + 40);
  v28[5] = v32;
  v28[6] = v21;
  v33 = v21;
  v34 = *(_QWORD *)(v27 - 96);
  v28[7] = v34;
  v44 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v35 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v35[2] = v29;
  v35[3] = v30;
  v35[4] = v26;
  v35[5] = a21;
  v35[6] = v31;
  v35[7] = v32;
  v35[8] = v21;
  v35[9] = v34;
  v35[10] = v44;
  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  v36 = OUTLINED_FUNCTION_122_1();
  ((void (*)(uint64_t))v45)(v36);
  v37 = v34;
  sub_22ABDEEB8();
  v38 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v39 = *(_QWORD *)(v27 - 104);
  *v38 = v43;
  v38[1] = v39;
  v38[2] = v26;
  v38[3] = a21;
  v40 = *(_QWORD *)(v27 + 40);
  v38[4] = v46;
  v38[5] = v40;
  v38[6] = v33;
  v38[7] = v37;
  v41 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v42 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v42[2] = v43;
  v42[3] = v39;
  v42[4] = v26;
  v42[5] = a21;
  v42[6] = v46;
  v42[7] = *(_QWORD *)(v27 + 40);
  v42[8] = v33;
  v42[9] = *(_QWORD *)(v27 - 96);
  v42[10] = v41;
  OUTLINED_FUNCTION_76_6();
}

uint64_t sub_22AA147B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_18_10();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
  *(v6 - 16) = v7;
  OUTLINED_FUNCTION_23_17(v7);
  sub_22ABDEEB8();
  v8 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v9 = *(v6 - 13);
  *v8 = v3;
  v8[1] = v9;
  v8[2] = v2;
  v8[3] = v5;
  v8[4] = v30;
  v8[5] = v1;
  v8[6] = v31;
  v8[7] = v4;
  v10 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v11 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v11[2] = v3;
  v11[3] = v9;
  v11[4] = v2;
  v11[5] = v5;
  v12 = v6[5];
  v11[6] = v30;
  v11[7] = v12;
  v13 = *(v6 - 12);
  v14 = *(v6 - 11);
  v11[8] = v31;
  v11[9] = v13;
  v11[10] = v10;
  sub_22ABDFBC0();
  swift_release();
  ((void (*)(uint64_t))*(v6 - 16))(v14);
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v29 + 48));
  v6[5] = v15;
  v16 = (_QWORD *)swift_task_alloc();
  v0[86] = v16;
  *v16 = v0;
  v16[1] = sub_22AA14924;
  v17 = v0[68];
  v18 = v0[24];
  v19 = v0[21];
  v20 = v0[19];
  v21 = v0[20];
  v22 = v0[18];
  v23 = v0[15];
  v24 = v0[16];
  v25 = v0[13];
  v26 = v0[14];
  v6[3] = v0[25];
  v6[4] = v18;
  v6[2] = v19;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v6[5])(v17, v25, v26, v23, v24, v22, v20, v21);
}

uint64_t sub_22AA14924()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 696) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

#error "22AA149B4: call analysis failed (funcsize=48)"

uint64_t sub_22AA14A38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *v0 = v1;
  v0[1] = sub_22AA14A5C;
  OUTLINED_FUNCTION_90_5();
  return OUTLINED_FUNCTION_32_11(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22AA14A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v2 + 712) = v1;
  *(_QWORD *)(v2 + 720) = v0;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

#error "22AA14B04: call analysis failed (funcsize=54)"

uint64_t sub_22AA14B88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *v0 = v1;
  v0[1] = sub_22AA14BAC;
  OUTLINED_FUNCTION_90_5();
  return OUTLINED_FUNCTION_32_11(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22AA14BAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 736) = a1;
  *(_QWORD *)(v3 + 744) = v1;
  OUTLINED_FUNCTION_62_2();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA14C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 744);
  sub_22ABDF1DC();
  if (!v1)
  {
    v12 = *(_QWORD *)(v0 + 712);
    v33 = *(_QWORD *)(v0 + 736);
    v35 = *(_QWORD *)(v0 + 464);
    v13 = *(_QWORD *)(v0 + 440);
    v26 = *(_QWORD *)(v0 + 400);
    v31 = *(_QWORD *)(v0 + 384);
    v28 = *(_QWORD *)(v0 + 376);
    v30 = *(_QWORD *)(v0 + 304);
    v32 = *(_QWORD *)(v0 + 296);
    v27 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 144);
    OUTLINED_FUNCTION_93_2();
    v14 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 160);
    v34 = *(_QWORD *)(v0 + 152);
    OUTLINED_FUNCTION_79(v15, v16, v17);
    *(_QWORD *)(v0 + 80) = v12;
    sub_22ABE0178();
    swift_bridgeObjectRelease();
    sub_22ABDEEB8();
    OUTLINED_FUNCTION_23_17(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    v18 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v18[2] = v14;
    v18[3] = v13;
    v18[4] = v25;
    v18[5] = v34;
    v18[6] = v23;
    v18[7] = v35;
    v18[8] = v24;
    v18[9] = v27;
    v19 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v19[2] = v14;
    v19[3] = v13;
    v19[4] = v25;
    v19[5] = v34;
    v19[6] = v23;
    v19[7] = v35;
    v19[8] = v24;
    v19[9] = v27;
    v19[10] = sub_22AA16A30;
    v19[11] = v18;
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v28);
    sub_22ABDFBC0();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    *(_QWORD *)(v0 + 88) = v33;
    sub_22ABE0178();
    OUTLINED_FUNCTION_3_8();
    sub_22ABDEEB8();
    OUTLINED_FUNCTION_66_6(v30, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    v20 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    OUTLINED_FUNCTION_82_4(v20);
    v21 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v22 = OUTLINED_FUNCTION_82_4(v21);
    v22[10] = sub_22AA16A30;
    v22[11] = v20;
    OUTLINED_FUNCTION_76_6();
  }
  v2 = *(_QWORD *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 528);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_48_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v4 = *(_QWORD *)(v0 + 680);
  v5 = *(_QWORD *)(v0 + 672);
  v29 = *(_QWORD *)(v0 + 664);
  v6 = *(_QWORD *)(v0 + 624);
  v7 = *(_QWORD *)(v0 + 616);
  v8 = *(_QWORD *)(v0 + 608);
  v9 = *(_QWORD *)(v0 + 560);
  OUTLINED_FUNCTION_105_2();
  (*(void (**)(uint64_t, _QWORD))(v10 + 8))(v9, *(_QWORD *)(v0 + 232));
  OUTLINED_FUNCTION_48_2(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_23_17(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v29);
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_174();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA15068()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_23_17(*(uint64_t (**)(uint64_t, uint64_t))(*(v1 - 19) + 8));
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(*(v1 - 18) + 48));
  *(v1 - 11) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[94] = v3;
  v4 = MEMORY[0x24BEE2B40];
  v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], *(v1 - 16));
  v6 = MEMORY[0x22E2E4D80](v4, *(v1 - 17));
  *v3 = v0;
  v3[1] = sub_22AA1513C;
  v7 = v0[63];
  v8 = v0[59];
  v9 = v0[54];
  v10 = v0[52];
  v11 = v0[42];
  v12 = v0[40];
  v13 = v0[15];
  v14 = v0[16];
  v1[3] = v0[55];
  v1[4] = v8;
  v1[2] = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(v1 - 11))(v7, v9, v11, v13, v14, v10, v12, v5);
}

uint64_t sub_22AA1513C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  (*v1)[95] = v0;
  swift_task_dealloc();
  v3 = v2[56];
  v4 = v2[54];
  v5 = v2[53];
  OUTLINED_FUNCTION_30_0(v2[41]);
  OUTLINED_FUNCTION_28_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA151DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = v0[85];
  v12 = v0[84];
  v13 = v0[83];
  v1 = v0[79];
  v2 = v0[78];
  v3 = v0[77];
  v4 = v0[76];
  v19 = v0[68];
  v16 = v0[67];
  v11 = v0[66];
  v14 = v0[65];
  v5 = v0[64];
  v20 = v0[63];
  v6 = v0[61];
  v17 = v0[62];
  v7 = v0[60];
  OUTLINED_FUNCTION_105_2();
  v8 = v0[43];
  v18 = v0[12];
  (*(void (**)(void))(v9 + 8))();
  OUTLINED_FUNCTION_66_6(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v13);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v10(v5, v20, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v16, v19, v14);
  v10(v17, v5, v7);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v16, v14, v18);
}

uint64_t sub_22AA1537C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_48_8();
  OUTLINED_FUNCTION_12_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_174();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "22AA15444: call analysis failed (funcsize=34)"

#error "22AA154D0: call analysis failed (funcsize=35)"

#error "22AA1555C: call analysis failed (funcsize=35)"

#error "22AA155E8: call analysis failed (funcsize=35)"

uint64_t sub_22AA15640(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

#error "22AA157D0: call analysis failed (funcsize=41)"

uint64_t sub_22AA157F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 32) + 8) + 56))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    OUTLINED_FUNCTION_74();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTransformer();
  }
  return result;
}

void sub_22AA15944(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a3;
  v7 = *(_QWORD *)(a2[5] + 8);
  v37 = a2[3];
  v38 = v7;
  v8 = OUTLINED_FUNCTION_32_0();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87();
  v34 = v9;
  v11 = MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_75(v11, v12, v13, v14, v15, v16, v17, v18, v29);
  v19 = a2[2];
  OUTLINED_FUNCTION_117_0();
  v20 = OUTLINED_FUNCTION_32_0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v29 - v23;
  v36 = a1;
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    v29 = v19;
    v30 = v4;
    v39 = v20;
    v26 = v34;
    v25 = v35;
    (*(void (**)(uint64_t, uint64_t))(v38 + 64))(v36, v37);
    v27 = v30;
    v28 = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v30, v24, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v26, v25, v32);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_80();
    ComposedTransformer.init(_:_:)(v27, v28, v33);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA15B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTransformer();
  }
  return result;
}

void sub_22AA15C88(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v35 = a3;
  v40 = a2[5];
  v7 = a2[3];
  v34 = *(_QWORD *)(v40 + 8);
  v41 = v7;
  v33 = OUTLINED_FUNCTION_32_0();
  v37 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_87();
  v36 = v8;
  v10 = MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_75(v10, v11, v12, v13, v14, v15, v16, v17, v30);
  v18 = a2[2];
  v32 = *(_QWORD *)(a2[4] + 8);
  v19 = OUTLINED_FUNCTION_32_0();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v30 - v22;
  v39 = a1;
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    v31 = v4;
    v42 = v18;
    v24 = v19;
    v26 = v36;
    v25 = v37;
    v27 = v38;
    (*(void (**)(uint64_t, uint64_t))(v40 + 40))(v39, v41);
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v31, v23, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v26, v27, v33);
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_86();
    v28 = OUTLINED_FUNCTION_74();
    ComposedTransformer.init(_:_:)(v28, v24, v29);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA15E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9AFDDC;
  sub_22AA134BC(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22AA15F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA15B30(a1, a2, a3);
}

void sub_22AA15F24(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_22AA15C88(a1, a2, a3);
}

void sub_22AA15F38()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22AA16B30;
  sub_22AA12720();
}

void sub_22AA15FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;

  v34 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v26 + 16) = v34;
  *v34 = v26;
  v34[1] = sub_22AA16B30;
  sub_22AA140CC(a1, a2, a3, a4, a5, v37, a6, a7, a8, v36, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

uint64_t sub_22AA16080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA157F4(a1, a2, a3);
}

void sub_22AA16094(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_22AA15944(a1, a2, a3);
}

void sub_22AA16158()
{
  OUTLINED_FUNCTION_3();
}

void UpdatableSupervisedEstimator.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_4();
  type metadata accessor for TransformerToUpdatableEstimatorAdaptor(0, v0, v2, v1);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_60_8();
  OUTLINED_FUNCTION_106();
}

{
  sub_22AA16324();
}

{
  sub_22AA16324();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_4_4();
  v1 = OUTLINED_FUNCTION_61_17(v0);
  type metadata accessor for TemporalTransformerToUpdatableEstimatorAdaptor(v1, v2, v3, v4);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_86_4();
}

{
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_150_1();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_33_34();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_4_4();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_9_15();
  type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(0, v9, v10, v10);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_89_7();
  UpdatableSupervisedEstimator<>.adaptedAsTemporal()(v4, v2);
  OUTLINED_FUNCTION_79(v0, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  OUTLINED_FUNCTION_115_0();
}

void sub_22AA16200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 112) = v1;
  *(_QWORD *)(v3 - 104) = v2;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = AssociatedConformanceWitness;
  type metadata accessor for UpdatableEstimatorToSupervisedAdaptor();
}

void sub_22AA16238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_13_0();
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_33();
  v14 = v13 - v12;
  OUTLINED_FUNCTION_79(v13 - v12, *(_QWORD *)(v8 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  Transformer.adaptedAsUpdatableEstimator()(v1, *(_QWORD *)(v8 - 160));
  UpdatableEstimator.adaptedAsSupervised<A>(annotationType:)(v7, v3, v7, v4, v5);
  OUTLINED_FUNCTION_48_2(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 136) + 8));
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableEstimatorToSupervisedAdaptor<A, B>, a1);
  sub_22AA12394(v14, v2, *(_QWORD *)(v8 - 120));
}

void sub_22AA16300()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA16324()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_4();
  v19 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_23_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v17 = v16 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16 - v15, v0, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v1, v12, v8);
  v19(v17, v1, v10, v8, v6, v4);
  OUTLINED_FUNCTION_3();
}

void sub_22AA163F0()
{
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_38_12();
}

void sub_22AA16448()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA16458()
{
  OUTLINED_FUNCTION_83_5();
}

void type metadata accessor for ComposedUpdatableSupervisedEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA16488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TransformerToUpdatableEstimatorAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA164F0()
{
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_38_12();
}

void sub_22AA1651C()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA1652C()
{
  OUTLINED_FUNCTION_83_5();
}

void sub_22AA16550()
{
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_38_12();
}

void sub_22AA165A8()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA165B8()
{
  OUTLINED_FUNCTION_83_5();
}

void sub_22AA165DC()
{
  OUTLINED_FUNCTION_83_5();
}

uint64_t sub_22AA16610(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA166EC + 4 * byte_22ABEEDB0[v21 - 1]))();
}

void sub_22AA16760(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_22AA16954()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22AA16978(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&unk_22ABEEDF8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AA169A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AA169C8()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22AA169D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AA16A00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AA16A24()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22AA16A34()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AA16A5C()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22AA16A68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return sub_22AA15738(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9]);
}

uint64_t sub_22AA16A98(uint64_t a1)
{
  uint64_t v1;

  return sub_22AA15640(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 80));
}

uint64_t sub_22AA16AD4()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22AA16AE0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return sub_22AA14010(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_22AA16B00(uint64_t a1)
{
  uint64_t v1;

  return sub_22AA133C4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 64));
}

uint64_t OUTLINED_FUNCTION_0_25@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 80) = a1;
  v3 = v1[70];
  v4 = v1[69];
  v5 = v1[36];
  *(_QWORD *)(v2 - 96) = v1[38];
  *(_QWORD *)(v2 - 88) = v5;
  return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 8))(v3, v1[29]);
}

uint64_t OUTLINED_FUNCTION_2_34(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_3_33()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 88) = v0;
  v3 = v1[70];
  v4 = v1[69];
  *(_QWORD *)(v2 - 96) = v1[36];
  return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 8))(v3, v1[29]);
}

uint64_t OUTLINED_FUNCTION_4_22()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[48] + 8))(v0[49], v0[21]);
}

uint64_t OUTLINED_FUNCTION_19_17()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[66] + 8))(v0[68], v0[65]);
}

uint64_t OUTLINED_FUNCTION_23_17@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_32_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return Transformer.applied<A>(to:eventHandler:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_34_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v11, a10);
}

uint64_t OUTLINED_FUNCTION_35_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_36_10()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_37_12()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_38_12()
{
  type metadata accessor for UpdatableEstimatorToSupervisedAdaptor();
}

uint64_t OUTLINED_FUNCTION_43_7()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_46_9@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a1 + 16))((char *)&a2 - v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_48_8()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_60_8()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_61_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return AnnotatedFeature.init(feature:annotation:)(v4, v2, v3, v1, v0);
}

uint64_t OUTLINED_FUNCTION_69_6()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_71_6(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_22ABDF7E8();
}

uint64_t OUTLINED_FUNCTION_72_5()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_74_6()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_75_5()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_76_6()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_80_5()
{
  return swift_getAssociatedConformanceWitness();
}

_QWORD *OUTLINED_FUNCTION_82_4(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result[2] = v3;
  result[3] = v4;
  result[4] = v2;
  result[5] = v1;
  v9 = *(_QWORD *)(v8 - 88);
  result[6] = v7;
  result[7] = v9;
  result[8] = v5;
  result[9] = v6;
  return result;
}

void OUTLINED_FUNCTION_83_5()
{
  type metadata accessor for ComposedUpdatableSupervisedEstimator();
}

uint64_t OUTLINED_FUNCTION_85_5()
{
  return sub_22ABDFA10();
}

uint64_t OUTLINED_FUNCTION_89_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, a9);
}

uint64_t OUTLINED_FUNCTION_91_3()
{
  return sub_22ABDF7B8();
}

uint64_t OUTLINED_FUNCTION_101_2()
{
  return sub_22ABDFA10();
}

void OUTLINED_FUNCTION_105_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 408);
  *(_QWORD *)(v1 - 136) = *(_QWORD *)(v0 + 432);
  *(_QWORD *)(v1 - 128) = v2;
}

uint64_t OUTLINED_FUNCTION_109_2()
{
  return sub_22ABDEEB8();
}

uint64_t OUTLINED_FUNCTION_110_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_115()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_116_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_117_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_122_1()
{
  uint64_t v0;

  return v0;
}

uint64_t ChooseRandomly.init<A>(_:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[5];

  v14[0] = a2;
  v14[1] = a2;
  swift_getExtendedExistentialTypeMetadata();
  *a5 = sub_22ABDF068();
  v14[3] = a3;
  v14[4] = a4;
  __swift_allocate_boxed_opaque_existential_1(v14);
  a1();
  v12 = type metadata accessor for ChooseRandomly(0, a2, v10, v11);
  sub_22AA170D4((uint64_t)v14, v12);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_22AA170D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  __int128 v11;
  uint64_t v12[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  sub_22A9A1A28(a1, (uint64_t)v12);
  swift_getExtendedExistentialTypeMetadata();
  swift_getExtendedExistentialTypeMetadata_unique();
  if (swift_dynamicCast())
  {
    sub_22A9A1880(&v11, (uint64_t)v15);
    v4 = v16;
    v5 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v6 = *(void (**)(uint64_t, uint64_t))(v5 + 64);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1(v12);
    v6(v4, v5);
    sub_22AA170D4(v12, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    v7 = v16;
    v8 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 88);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1(v12);
    v9(v7, v8);
    sub_22AA170D4(v12, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_22A9A1A28(a1, (uint64_t)v15);
    sub_22ABDF0F8();
    return sub_22ABDF0C8();
  }
}

uint64_t ChooseRandomly.applied<A>(to:generator:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;

  v9[21] = a7;
  v9[22] = a8;
  v9[19] = a5;
  v9[20] = a6;
  v9[17] = a3;
  v9[18] = a4;
  v9[15] = a1;
  v9[16] = a2;
  v9[23] = *v8;
  return swift_task_switch();
}

uint64_t sub_22AA172F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 16);
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 104) = v1;
  swift_getExtendedExistentialTypeMetadata();
  v2 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v2);
  sub_22ABDF3B0();
  if (*(_QWORD *)(v0 + 80))
  {
    sub_22A9A1880((__int128 *)(v0 + 56), v0 + 16);
    v3 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v6 = **(int **)(v3 + 24) + *(_QWORD *)(v3 + 24);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v4;
    *v4 = v0;
    v4[1] = sub_22AA17460;
    __asm { BR              X8 }
  }
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA17460()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22AA174C4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA174F0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA1751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_22A9B24D4;
  return ChooseRandomly.applied<A>(to:generator:eventHandler:)(a1, a2, a3, a4, a5, a8, a6, a7);
}

uint64_t type metadata accessor for ChooseRandomly(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ChooseRandomly);
}

BOOL sub_22AA175D4(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_22AA175E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_22ABDED50();
  v2 = v1;
  if (v0 == sub_22ABDED50() && v2 == v3)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA17644(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v2 = 0xEA0000000000746ELL;
  v3 = 0x756F437373616C63;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6963696666656F63;
    else
      v5 = 0x657A696D6974706FLL;
    if (v4 == 1)
      v6 = 0xEC00000073746E65;
    else
      v6 = 0xEE00657461745372;
  }
  else
  {
    v5 = 0x756F437373616C63;
    v6 = 0xEA0000000000746ELL;
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 0x6963696666656F63;
    else
      v3 = 0x657A696D6974706FLL;
    if (a2 == 1)
      v2 = 0xEC00000073746E65;
    else
      v2 = 0xEE00657461745372;
  }
  if (v5 != v3 || v6 != v2)
    OUTLINED_FUNCTION_24_17();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_21();
}

void sub_22AA1775C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x656372756F73;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x65676E6172;
    else
      v4 = 0x6C616373656D6974;
    if (v3 == 1)
      v5 = 0xE500000000000000;
    else
      v5 = 0xE900000000000065;
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x656372756F73;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x65676E6172;
    else
      v2 = 0x6C616373656D6974;
    if (a2 == 1)
      v6 = 0xE500000000000000;
    else
      v6 = 0xE900000000000065;
  }
  else
  {
    v6 = 0xE600000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA1783C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x657A696D6974706FLL;
  else
    v3 = 0x6963696666656F63;
  if (v2)
    v4 = 0xEC00000073746E65;
  else
    v4 = 0xEE00657461745372;
  if ((a2 & 1) != 0)
    v5 = 0x657A696D6974706FLL;
  else
    v5 = 0x6963696666656F63;
  if ((a2 & 1) != 0)
    v6 = 0xEE00657461745372;
  else
    v6 = 0xEC00000073746E65;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA178D0(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 0x79614C65736E6564;
  v3 = 0xEA00000000007265;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000012;
    else
      v5 = 0x65536D6F646E6172;
    if (v4 == 1)
      v6 = 0x800000022ABE0DB0;
    else
      v6 = 0xEA00000000006465;
  }
  else
  {
    v5 = 0x79614C65736E6564;
    v6 = 0xEA00000000007265;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_23_18();
    if (v9 == 1)
      v2 = v10;
    else
      v2 = v11;
    if (v9 == 1)
      v3 = v8;
    else
      v3 = v7;
  }
  if (v5 != v2 || v6 != v3)
    OUTLINED_FUNCTION_24_17();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_21();
}

void sub_22AA179A4(char a1, char a2)
{
  unint64_t v2;
  const char *v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2 = 0x73726579616CLL;
  v3 = "dropoutProbability";
  if (a1)
  {
    OUTLINED_FUNCTION_23_18();
    if (v4 == 1)
      v8 = v6;
    else
      v8 = v7;
    if (v4 == 1)
      v9 = v5;
    else
      v9 = 0xEA00000000006465;
  }
  else
  {
    v9 = 0xE600000000000000;
    v8 = 0x73726579616CLL;
  }
  if (a2)
  {
    v10 = (unint64_t)(v3 - 32) | 0x8000000000000000;
    if (a2 == 1)
      v2 = 0xD000000000000012;
    else
      v2 = 0x65536D6F646E6172;
    if (a2 == 1)
      v11 = v10;
    else
      v11 = 0xEA00000000006465;
  }
  else
  {
    v11 = 0xE600000000000000;
  }
  if (v8 == v2 && v9 == v11)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA17A78(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v3 = 0x74616F6C66;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x656C62756F64;
    else
      v5 = 0x3233746E69;
    if (v4 == 1)
      v2 = 0xE600000000000000;
    else
      v2 = 0xE500000000000000;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_27_18();
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 0x656C62756F64;
    else
      v3 = 0x3233746E69;
    if (a2 == 1)
      v6 = 0xE600000000000000;
    else
      v6 = 0xE500000000000000;
  }
  else
  {
    v6 = 0xE500000000000000;
  }
  if (v5 == v3 && v2 == v6)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA17B3C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22AA17B9C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_22AA17C4C + 4 * byte_22ABEEF17[a2]))(0xD000000000000012);
}

void sub_22AA17C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0xD000000000000012 && v2 == ((v1 - 32) | 0x8000000000000000))
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA17D0C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E6F697369766572;
  else
    v3 = 0x53646E41706F7263;
  if (v2)
    v4 = 0xEC000000656C6163;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6E6F697369766572;
  else
    v5 = 0x53646E41706F7263;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEC000000656C6163;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA17D94(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1702521203;
  else
    v3 = 0x54746E656D656C65;
  if (v2)
    v4 = 0xEB00000000657079;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1702521203;
  else
    v5 = 0x54746E656D656C65;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xEB00000000657079;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA17E14(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22AA17E6C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22AA17F14 + 4 * byte_22ABEEF26[a2]))(0x363174616F6C66);
}

void sub_22AA17F14(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x363174616F6C66 && v1 == 0xE700000000000000)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

void sub_22AA17FD8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x746567726174;
  else
    v3 = 0x6953746567726174;
  if (v2)
    v4 = 0xEA0000000000657ALL;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x746567726174;
  else
    v5 = 0x6953746567726174;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xEA0000000000657ALL;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_14_22();
  else
    OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21();
}

uint64_t sub_22AA18058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_22ABDFF68();
}

uint64_t VideoReader.AsyncFrames.count.getter()
{
  return 0;
}

uint64_t VideoReader.AsyncFrames.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_18_15();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t VideoReader.AsyncFrames.timescale.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(OUTLINED_FUNCTION_20_22() + 32));
}

uint64_t type metadata accessor for VideoReader.AsyncFrames(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_255B11540);
}

float VideoReader.AsyncFrames.nominalFrameRate.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(OUTLINED_FUNCTION_20_22() + 36));
}

double VideoReader.AsyncFrames.frameSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_20_22() + 40));
}

uint64_t VideoReader.AsyncFrames.videoDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_20_22() + 48));
}

uint64_t sub_22AA18144(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[40] = a1;
  v2[41] = a2;
  v3 = OUTLINED_FUNCTION_18_15();
  v2[42] = v3;
  v2[43] = *(_QWORD *)(v3 - 8);
  v2[44] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA18188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 360) = *(_QWORD *)(*(_QWORD *)(v0 + 344) + 16);
  OUTLINED_FUNCTION_28_12(v2);
  sub_22A9BEDCC(0, &qword_255B11640);
  OUTLINED_FUNCTION_28_12(v1);
  v3 = sub_22AA18CE0(v1);
  *(_QWORD *)(v0 + 368) = v3;
  v4 = OUTLINED_FUNCTION_20_22();
  *(_QWORD *)(v0 + 376) = v4;
  v5 = *(int *)(v4 + 20);
  *(_DWORD *)(v0 + 528) = v5;
  *(_QWORD *)(v2 + v5) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11648);
  v3;
  *(_QWORD *)(v0 + 384) = sub_22ABDD43C();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v6;
  *v6 = v0;
  v6[1] = sub_22AA18290;
  return sub_22ABDF518();
}

uint64_t sub_22AA18290()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_21_22();

  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA182EC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (void *)v0[46];
  v2 = v0[36];
  v3 = (_QWORD *)(v0[40] + *(int *)(v0[47] + 48));
  v4 = v0[35];
  *v3 = v0[34];
  v3[1] = v4;
  v3[2] = v2;
  v5 = *MEMORY[0x24BDB1D50];
  v0[7] = v0 + 39;
  v0[2] = v0;
  v0[3] = sub_22AA183BC;
  v6 = swift_continuation_init();
  v0[29] = MEMORY[0x24BDAC760];
  v7 = v0 + 29;
  v7[1] = 0x40000000;
  v7[2] = sub_22AA18D60;
  v7[3] = &block_descriptor_0;
  v7[4] = v6;
  objc_msgSend(v1, sel_loadTracksWithMediaType_completionHandler_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_22AA183BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 408) = v2;
  if (v2)

  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA18418()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 312);
  if (v1 >> 62)
  {
    sub_22ABDEAEC();
    v8 = sub_22ABDFB60();
    OUTLINED_FUNCTION_3_8();
    if (v8)
      goto LABEL_3;
LABEL_7:
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
    v9 = *(void **)(v0 + 368);
    v11 = *(_QWORD *)(v0 + 336);
    v12 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 328);
    OUTLINED_FUNCTION_3_8();

    type metadata accessor for VideoReaderError();
    sub_22A9BED8C((unint64_t *)&qword_255B11678, (uint64_t (*)(uint64_t))type metadata accessor for VideoReaderError, (uint64_t)&protocol conformance descriptor for VideoReaderError);
    OUTLINED_FUNCTION_53();
    v10(v14, v13, v11);
    v15 = swift_storeEnumTagMultiPayload();
    swift_willThrow(v15);

    v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v13, v11);
    v17 = *(int *)(v0 + 528);
    v18 = *(_QWORD *)(v0 + 320);
    v16(v18, *(_QWORD *)(v0 + 336));

    OUTLINED_FUNCTION_15_20();
    return OUTLINED_FUNCTION_13_28(*(uint64_t (**)(void))(v0 + 8));
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_7;
LABEL_3:
  sub_22A9B8810(0, (v1 & 0xC000000000000001) == 0, v1);
  if ((v1 & 0xC000000000000001) != 0)
    v2 = (id)MEMORY[0x22E2E3A9C](0, v1);
  else
    v2 = *(id *)(v1 + 32);
  v3 = v2;
  *(_QWORD *)(v0 + 416) = v2;
  v4 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 320);
  OUTLINED_FUNCTION_3_8();
  *(_QWORD *)(v5 + *(int *)(v4 + 28)) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11650);
  v3;
  *(_QWORD *)(v0 + 424) = sub_22ABDD424();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 432) = v6;
  *v6 = v0;
  v6[1] = sub_22AA18600;
  return sub_22ABDF518();
}

uint64_t sub_22AA18600()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_21_22();

  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA1865C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_DWORD *)(*(_QWORD *)(v0 + 320) + *(int *)(*(_QWORD *)(v0 + 376) + 36)) = *(_DWORD *)(v0 + 520);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11658);
  *(_QWORD *)(v0 + 448) = sub_22ABDD40C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v1;
  OUTLINED_FUNCTION_16_21(v1);
  return OUTLINED_FUNCTION_7_29();
}

uint64_t sub_22AA186D4()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 464) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_21_22();

  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA18730()
{
  uint64_t v0;
  _QWORD *v1;

  *(_OWORD *)(*(_QWORD *)(v0 + 320) + *(int *)(*(_QWORD *)(v0 + 376) + 40)) = *(_OWORD *)(v0 + 296);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11660);
  *(_QWORD *)(v0 + 472) = sub_22ABDD430();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 480) = v1;
  OUTLINED_FUNCTION_16_21(v1);
  return OUTLINED_FUNCTION_7_29();
}

uint64_t sub_22AA187AC()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 488) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_21_22();

  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA18808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_OWORD *)(v0 + 200);
  v4 = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 152) = v3;
  *(_OWORD *)(v0 + 168) = v4;
  *(_BYTE *)(v2 + *(int *)(v1 + 52)) = !CGAffineTransformIsIdentity((CGAffineTransform *)(v0 + 136));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11668);
  *(_QWORD *)(v0 + 496) = sub_22ABDD418();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v5;
  OUTLINED_FUNCTION_16_21(v5);
  return OUTLINED_FUNCTION_7_29();
}

uint64_t sub_22AA188A0()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 512) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_21_22();

  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA188FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void (*v19)(uint64_t, _QWORD);
  uint64_t v20;
  uint64_t v21;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v1 = *(_QWORD *)(v0 + 512);
  v2 = *(void **)(v0 + 416);
  v3 = *(void **)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 320);
  *(_DWORD *)(v5 + *(int *)(v4 + 32)) = *(_DWORD *)(v0 + 524);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11670);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(inited + 32) = sub_22ABDED50();
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = 1111970369;
  v8 = sub_22ABDEAC8();
  v9 = v2;
  sub_22A9C2984(v8);
  v11 = v10;
  OUTLINED_FUNCTION_3_8();
  v12 = objc_allocWithZone(MEMORY[0x24BDB23D0]);
  v13 = sub_22AA1937C(v9, v11);
  *(_QWORD *)(v5 + *(int *)(v4 + 44)) = v13;
  v14 = v13;
  objc_msgSend(v14, sel_setSupportsRandomAccess_, 0);
  objc_msgSend(v14, sel_setAlwaysCopiesSampleData_, 0);
  objc_msgSend(v14, sel_markConfigurationAsFinal);
  v15 = objc_allocWithZone(MEMORY[0x24BDB23B8]);
  v16 = sub_22AA19408(v3);
  v17 = *(void **)(v0 + 416);
  if (v1)
  {
    v18 = *(void **)(v0 + 368);
    v19 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 344) + 8);
    v19(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 336));

    v20 = *(int *)(v0 + 528);
    v21 = *(_QWORD *)(v0 + 320);
    v19(v21, *(_QWORD *)(v0 + 336));

    OUTLINED_FUNCTION_5_25();
    OUTLINED_FUNCTION_15_20();
  }
  else
  {
    v23 = *(void **)(v0 + 368);
    v24 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 328);
    v25 = *(_QWORD *)(v0 + 336);
    *(_QWORD *)(*(_QWORD *)(v0 + 320) + *(int *)(*(_QWORD *)(v0 + 376) + 24)) = v16;
    v27 = v16;
    objc_msgSend(v27, sel_addOutput_, v14);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
    swift_task_dealloc();
  }
  return OUTLINED_FUNCTION_13_28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA18B0C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_30();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_18_21();
  OUTLINED_FUNCTION_15_20();
  return OUTLINED_FUNCTION_2_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA18B58(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 368);
  swift_willThrow(a1);

  OUTLINED_FUNCTION_11_30();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_18_21();
  OUTLINED_FUNCTION_15_20();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22AA18BC0()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_8_26();

  OUTLINED_FUNCTION_11_30();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_18_21();
  OUTLINED_FUNCTION_5_25();
  OUTLINED_FUNCTION_15_20();
  return OUTLINED_FUNCTION_2_9(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AA18C08()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_8_26();

  OUTLINED_FUNCTION_11_30();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_18_21();
  OUTLINED_FUNCTION_5_25();
  OUTLINED_FUNCTION_15_20();
  return OUTLINED_FUNCTION_2_9(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AA18C50()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_8_26();

  OUTLINED_FUNCTION_11_30();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_18_21();
  OUTLINED_FUNCTION_5_25();
  OUTLINED_FUNCTION_15_20();
  return OUTLINED_FUNCTION_2_9(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AA18C98()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_8_26();

  OUTLINED_FUNCTION_11_30();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_18_21();
  OUTLINED_FUNCTION_5_25();
  OUTLINED_FUNCTION_15_20();
  return OUTLINED_FUNCTION_2_9(*(uint64_t (**)(void))(v1 + 8));
}

id sub_22AA18CE0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_22ABDD070();
  v4 = objc_msgSend(v2, sel_initWithURL_options_, v3, 0);

  v5 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t sub_22AA18D60(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
    return sub_22AA18DC8(v3, (uint64_t)a3);
  sub_22A9BEDCC(0, &qword_255B11680);
  v5 = sub_22ABDEFF0();
  return sub_22AA18E18(v3, v5);
}

uint64_t sub_22AA18DC8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_22AA18E18(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

uint64_t VideoReader.AsyncFrames.makeAsyncIterator()@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  int *v9;
  void *v10;
  void *v11;
  int v12;
  char v13;
  int *v14;
  id v15;
  id v16;
  uint64_t v18;

  v2 = v1;
  v4 = OUTLINED_FUNCTION_18_15();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, v2, v4);
  v9 = (int *)OUTLINED_FUNCTION_20_22();
  v10 = *(void **)(v2 + v9[6]);
  v11 = *(void **)(v2 + v9[11]);
  v12 = *(_DWORD *)(v2 + v9[8]);
  v13 = *(_BYTE *)(v2 + v9[13]);
  v14 = (int *)type metadata accessor for VideoReader.AsyncFrames.Iterator(0);
  *(_QWORD *)&a1[v14[9]] = 0;
  v8(a1, (uint64_t)v7, v4);
  *(_QWORD *)&a1[v14[5]] = v10;
  *(_QWORD *)&a1[v14[6]] = v11;
  *(_DWORD *)&a1[v14[7]] = v12;
  a1[v14[8]] = v13;
  v15 = v10;
  v16 = v11;
  objc_msgSend(v15, sel_startReading);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t type metadata accessor for VideoReader.AsyncFrames.Iterator(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_255B115F0);
}

uint64_t sub_22AA18F5C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  VideoReader.AsyncFrames.makeAsyncIterator()(a1);
  return sub_22AA19FE0(v1);
}

uint64_t VideoReader.AsyncFrames.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = OUTLINED_FUNCTION_18_15();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA18FB8()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  opaqueCMSampleBuffer *v3;
  opaqueCMSampleBuffer *v4;
  __CVBuffer *v5;
  __CVBuffer *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CVPixelBufferRef v21;
  CVPixelBufferRef v22;
  uint64_t *v23;
  id v24;
  _OWORD *v25;
  uint64_t (*v26)(void);
  uint64_t *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0[3];
  v2 = (int *)type metadata accessor for VideoReader.AsyncFrames.Iterator(0);
  if (objc_msgSend(*(id *)(v1 + v2[5]), sel_status) != (id)1)
    goto LABEL_10;
  v3 = (opaqueCMSampleBuffer *)objc_msgSend(*(id *)(v0[3] + v2[6]), sel_copyNextSampleBuffer);
  if (!v3)
    goto LABEL_10;
  v4 = v3;
  v5 = CMSampleBufferGetImageBuffer(v3);
  if (!v5)
  {

LABEL_10:
    v25 = (_OWORD *)v0[2];
    v25[1] = 0u;
    v25[2] = 0u;
    *v25 = 0u;
    goto LABEL_11;
  }
  v6 = v5;
  v7 = v0[5];
  v8 = v0[6];
  v9 = v0[3];
  v10 = v0[4];
  sub_22ABDD028();
  v11 = sub_22ABDD0C4();
  v13 = v12;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v10);
  v15 = v2[9];
  v16 = *(_QWORD *)(v9 + v15);
  v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
  }
  else
  {
    v36 = v13;
    if (v17 >= v16)
    {
      v18 = v11;
      v19 = v0[3];
      v20 = *(int *)(v19 + v2[7]);
      *(_QWORD *)(v9 + v15) = v17;
      if (*(_BYTE *)(v19 + v2[8]) == 1)
      {
        v21 = sub_22ABA7F9C();
        if (!v21)
        {
          v29 = v0[5];
          v31 = v0[3];
          v30 = v0[4];
          swift_bridgeObjectRelease();
          type metadata accessor for DatasetError();
          sub_22A9BED8C((unint64_t *)&qword_255B11498, (uint64_t (*)(uint64_t))type metadata accessor for DatasetError, (uint64_t)&protocol conformance descriptor for DatasetError);
          OUTLINED_FUNCTION_53();
          v33 = v32;
          v34 = (_QWORD *)(v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B114A0) + 48));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v33, v31, v30);
          *v34 = 0xD00000000000001DLL;
          v34[1] = 0x800000022ABE2B30;
          v35 = swift_storeEnumTagMultiPayload();
          swift_willThrow(v35);

          swift_task_dealloc();
          v26 = (uint64_t (*)(void))v0[1];
          return v26();
        }
        v22 = v21;
        v23 = (uint64_t *)v0[2];
        v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v21);

        *v23 = v18;
        v23[1] = v36;
        v23[2] = v16;
        v23[3] = v17;
        v23[4] = v20;
        v23[5] = (uint64_t)v24;
      }
      else
      {
        v27 = (uint64_t *)v0[2];
        v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v6);

        *v27 = v18;
        v27[1] = v36;
        v27[2] = v16;
        v27[3] = v17;
        v27[4] = v20;
        v27[5] = (uint64_t)v28;
      }
LABEL_11:
      swift_task_dealloc();
      v26 = (uint64_t (*)(void))v0[1];
      return v26();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA19258(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A99DE80;
  return VideoReader.AsyncFrames.Iterator.next()(a1);
}

uint64_t sub_22AA192A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_255B161A8 + dword_255B161A8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_22AA1932C;
  return v10(a1, a2, a3);
}

uint64_t sub_22AA1932C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v3);
  swift_task_dealloc();
  if (v1)
    **(_QWORD **)(v0 + 16) = v1;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id sub_22AA1937C(void *a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;

  if (a2)
  {
    v4 = (void *)sub_22ABDEAA4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(v2, sel_initWithTrack_outputSettings_, a1, v4);

  return v5;
}

id sub_22AA19408(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8[0] = 0;
  v3 = objc_msgSend(v1, sel_initWithAsset_error_, a1, v8);
  if (v3)
  {
    v4 = v8[0];
  }
  else
  {
    v5 = v8[0];
    sub_22ABDD004();

    swift_willThrow(v6);
  }

  return v3;
}

uint64_t sub_22AA194C8(uint64_t a1)
{
  uint64_t result;

  result = sub_22A9BED8C(&qword_255B114C8, type metadata accessor for VideoReader.AsyncFrames, (uint64_t)&protocol conformance descriptor for VideoReader.AsyncFrames);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AA19504()
{
  return sub_22A9BED8C(qword_255B114D0, type metadata accessor for VideoReader.AsyncFrames.Iterator, (uint64_t)&protocol conformance descriptor for VideoReader.AsyncFrames.Iterator);
}

_QWORD *_s11AsyncFramesVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD0E8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    v11 = *(void **)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + v9) = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)a1 + v12) = v14;
    *(_DWORD *)((char *)a1 + v13) = *(_DWORD *)((char *)a2 + v13);
    v15 = a3[10];
    *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
    *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
    v16 = a3[11];
    v17 = a3[12];
    v18 = *(void **)((char *)a2 + v16);
    *(_QWORD *)((char *)a1 + v16) = v18;
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v21 = v10;
    v22 = v11;
    v23 = v14;
    v24 = v18;
  }
  return a1;
}

void _s11AsyncFramesVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t _s11AsyncFramesVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v14 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[11];
  v16 = a3[12];
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v20 = v9;
  v21 = v10;
  v22 = v13;
  v23 = v17;
  return a1;
}

uint64_t _s11AsyncFramesVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[7];
  v16 = *(void **)(a2 + v15);
  v17 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v18 = v16;

  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  v19 = a3[10];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v22 = a3[11];
  v23 = *(void **)(a2 + v22);
  v24 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  v25 = v23;

  v26 = a3[12];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_DWORD *)(v27 + 8) = *(_DWORD *)(v28 + 8);
  *(_DWORD *)(v27 + 12) = *(_DWORD *)(v28 + 12);
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t _s11AsyncFramesVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  v9 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t _s11AsyncFramesVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  v16 = a3[12];
  v17 = a3[13];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t _s11AsyncFramesVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s11AsyncFramesVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA19A4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *_s11AsyncFramesV8IteratorVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD0E8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    v11 = *(void **)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + v9) = v11;
    v12 = a3[8];
    *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    v13 = v10;
    v14 = v11;
  }
  return a1;
}

void _s11AsyncFramesV8IteratorVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t _s11AsyncFramesV8IteratorVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v12 = v9;
  v13 = v10;
  return a1;
}

uint64_t _s11AsyncFramesV8IteratorVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t _s11AsyncFramesV8IteratorVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t _s11AsyncFramesV8IteratorVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t _s11AsyncFramesV8IteratorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_18_15();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  else
    OUTLINED_FUNCTION_21();
}

uint64_t _s11AsyncFramesV8IteratorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_18_15();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_22AA19F44()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22AA19FE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoReader.AsyncFrames(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_4_23()
{
  uint64_t (*v0)(_QWORD, _QWORD);
  uint64_t v1;

  return v0(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 336));
}

void OUTLINED_FUNCTION_5_25()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_7_29()
{
  return sub_22ABDF518();
}

void OUTLINED_FUNCTION_8_26()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_11_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_13_28(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_15_20()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_21(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void OUTLINED_FUNCTION_18_21()
{
  uint64_t v0;
  uint64_t v1;

}

uint64_t OUTLINED_FUNCTION_20_22()
{
  return type metadata accessor for VideoReader.AsyncFrames(0);
}

uint64_t OUTLINED_FUNCTION_21_22()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_24_17()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_27_18()
{
  return 0x74616F6C66;
}

uint64_t OUTLINED_FUNCTION_28_12(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

void sub_22AA1A134(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x22E2E3A9C](v3, a1);
      else
        v4 = *(id *)(a1 + 8 * v3 + 32);
      v5 = v4;
      v6 = sub_22ABDF2F0();

      v7 = *(_QWORD *)(v8 + 16);
      if (v7 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_22AB4CE30();
      ++v3;
      *(_QWORD *)(v8 + 16) = v7 + 1;
      *(_QWORD *)(v8 + 8 * v7 + 32) = v6;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_15:
    sub_22ABDEAEC();
    v2 = sub_22ABDFB60();
    swift_bridgeObjectRelease();
  }
}

id MLModelImageFeatureExtractor.model.getter()
{
  id *v0;

  return *v0;
}

void MLModelImageFeatureExtractor.inputName.getter()
{
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_0_5();
}

void MLModelImageFeatureExtractor.outputName.getter()
{
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_0_5();
}

void MLModelImageFeatureExtractor.init(model:inputName:outputName:context:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;

  sub_22AA1A34C(a1, a2, a3, a4, a5);
  if (v7)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_8();

  }
  else
  {
    *a7 = a1;
    a7[1] = a2;
    a7[2] = a3;
    a7[3] = a4;
    a7[4] = a5;
    a7[5] = a6;
  }
}

void sub_22AA1A34C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  unint64_t v81;

  v8 = objc_msgSend(a1, sel_modelDescription);
  v9 = OUTLINED_FUNCTION_49_8((uint64_t)v8, sel_modelDescription);
  v10 = objc_msgSend(v9, sel_inputDescriptionsByName);

  OUTLINED_FUNCTION_20_23(v11, (unint64_t *)&qword_255B108E8);
  sub_22ABDEAB0();

  OUTLINED_FUNCTION_60_5();
  OUTLINED_FUNCTION_36_11(a2, a3);
  v13 = v12;
  OUTLINED_FUNCTION_58_1();
  v14 = OUTLINED_FUNCTION_3_8();
  if (!v13)
  {
    OUTLINED_FUNCTION_15_21();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_19();
    v80 = v32 + 17;
    v81 = 0x800000022ABE2C30;
    OUTLINED_FUNCTION_11_31();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_26_15();
    v33 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v34 = &BlobJSONEncoder.IntermediateEncoder.ivar_base_size;
    *(_QWORD *)(v34 + 8) = &v80;
    *(_BYTE *)(v34 + 16) = 0;
    OUTLINED_FUNCTION_6_34(v33);

    return;
  }
  if (OUTLINED_FUNCTION_31_6(v14, sel_type) != (id)4)
  {
    OUTLINED_FUNCTION_15_21();
    sub_22ABDF7A0();
    OUTLINED_FUNCTION_27_19();
    OUTLINED_FUNCTION_23_19();
    OUTLINED_FUNCTION_11_31();
    v35 = OUTLINED_FUNCTION_12_25();
    OUTLINED_FUNCTION_31_6(v35, sel_type);
    OUTLINED_FUNCTION_53_10();
    OUTLINED_FUNCTION_52_10();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_26_15();
    v36 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v37 = &BlobJSONEncoder.IntermediateEncoder.ivar_base_size;
    *(_QWORD *)(v37 + 8) = &v80;
    *(_BYTE *)(v37 + 16) = 0;
    OUTLINED_FUNCTION_6_34(v36);

    return;
  }
  v77 = a5;
  v78 = v13;
  v79 = v8;
  v15 = objc_msgSend(v8, sel_inputDescriptionsByName);
  v16 = sub_22ABDEAB0();

  v17 = 0;
  v18 = v16 + 64;
  v19 = 1 << *(_BYTE *)(v16 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & *(_QWORD *)(v16 + 64);
  v22 = (unint64_t)(v19 + 63) >> 6;
  while (v21)
  {
    v23 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    v24 = v23 | (v17 << 6);
LABEL_22:
    v28 = (_QWORD *)(*(_QWORD *)(v16 + 48) + 16 * v24);
    if (*v28 != a2 || v28[1] != a3)
    {
      v30 = *(void **)(*(_QWORD *)(v16 + 56) + 8 * v24);
      if ((sub_22ABDFF68() & 1) == 0)
      {
        v31 = v30;
        if (!objc_msgSend(v31, sel_isOptional))
        {
          sub_22AA1CA68();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_27_19();
          *(_QWORD *)v57 = v56 + 28;
          *(_QWORD *)(v57 + 8) = 0x800000022ABE2D80;
          *(_BYTE *)(v57 + 16) = 0;
          OUTLINED_FUNCTION_6_34(v58);
          swift_release();

          goto LABEL_36;
        }

      }
    }
  }
  v25 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
LABEL_40:
    __break(1u);
    return;
  }
  if (v25 >= v22)
    goto LABEL_31;
  v26 = *(_QWORD *)(v18 + 8 * v25);
  ++v17;
  if (v26)
    goto LABEL_21;
  v17 = v25 + 1;
  if (v25 + 1 >= v22)
    goto LABEL_31;
  v26 = *(_QWORD *)(v18 + 8 * v17);
  if (v26)
    goto LABEL_21;
  v17 = v25 + 2;
  if (v25 + 2 >= v22)
    goto LABEL_31;
  v26 = *(_QWORD *)(v18 + 8 * v17);
  if (v26)
  {
LABEL_21:
    v21 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v17 << 6);
    goto LABEL_22;
  }
  v27 = v25 + 3;
  if (v27 < v22)
  {
    v26 = *(_QWORD *)(v18 + 8 * v27);
    if (!v26)
    {
      while (1)
      {
        v17 = v27 + 1;
        if (__OFADD__(v27, 1))
          goto LABEL_40;
        if (v17 >= v22)
          goto LABEL_31;
        v26 = *(_QWORD *)(v18 + 8 * v17);
        ++v27;
        if (v26)
          goto LABEL_21;
      }
    }
    v17 = v27;
    goto LABEL_21;
  }
LABEL_31:
  v38 = swift_release();
  v39 = OUTLINED_FUNCTION_49_8(v38, sel_modelDescription);
  v40 = objc_msgSend(v39, sel_outputDescriptionsByName);

  sub_22ABDEAB0();
  OUTLINED_FUNCTION_22_21();
  v41 = OUTLINED_FUNCTION_32_12();
  OUTLINED_FUNCTION_36_11(v41, v42);
  v44 = v43;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_8();
  if (!v44)
  {
    OUTLINED_FUNCTION_15_21();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_19();
    v80 = v53 + 16;
    v81 = 0x800000022ABE2C60;
    OUTLINED_FUNCTION_28_13();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_26_15();
    v54 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_4_24(v54, v55);
LABEL_36:

    OUTLINED_FUNCTION_46_10(v59, v60, v61, v62, v63, v64, v65, v66, v77, v78);
    return;
  }
  if (OUTLINED_FUNCTION_48_9() == (id)5)
  {

    OUTLINED_FUNCTION_46_10(v45, v46, v47, v48, v49, v50, v51, v52, v77, v78);
  }
  else
  {
    OUTLINED_FUNCTION_15_21();
    sub_22ABDF7A0();
    OUTLINED_FUNCTION_27_19();
    OUTLINED_FUNCTION_23_19();
    OUTLINED_FUNCTION_28_13();
    OUTLINED_FUNCTION_12_25();
    OUTLINED_FUNCTION_48_9();
    OUTLINED_FUNCTION_53_10();
    OUTLINED_FUNCTION_52_10();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_26_15();
    v67 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_4_24(v67, v68);

    OUTLINED_FUNCTION_46_10(v69, v70, v71, v72, v73, v74, v75, v76, v77, v78);
  }
}

uint64_t MLModelImageFeatureExtractor.init(contentsOf:configuration:inputName:outputName:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22AA1A8E4()
{
  uint64_t v0;
  _QWORD *v1;

  sub_22AA1CAD0(0, &qword_255B10820);
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_50_9();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_22AA1A970;
  return sub_22ABDF53C();
}

uint64_t sub_22AA1A970(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_8();
  }
  return swift_task_switch();
}

uint64_t sub_22AA1A9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(void **)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v8 = *(id *)(v0 + 88);
  v9 = v3;
  sub_22AA1A34C(v8, v6, v5, v4, v2);

  if (v1)
  {
    v10 = *(void **)(v0 + 88);
    v11 = *(void **)(v0 + 72);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_8();

    v12 = OUTLINED_FUNCTION_18_15();
    OUTLINED_FUNCTION_20(v12);

    v13 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_8();
    if (!v13)

    v14 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v15 = *(void **)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 64);
    v17 = *(void **)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 48);
    v19 = *(_QWORD *)(v0 + 56);
    v20 = *(_QWORD *)(v0 + 40);
    v22 = *(_QWORD **)(v0 + 16);
    v21 = *(_QWORD *)(v0 + 24);
    OUTLINED_FUNCTION_18_15();
    OUTLINED_FUNCTION_25_14();
    v23(v21);
    *v22 = v15;
    v22[1] = v20;
    v22[2] = v18;
    v22[3] = v19;
    v22[4] = v16;
    v22[5] = v17;

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_8();

    v14 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v14();
}

uint64_t sub_22AA1AB10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(void **)(v0 + 32);

  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_25_14();
  v3(v2);
  v4 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v4)

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MLModelImageFeatureExtractor.applied(to:eventHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = *(_QWORD *)v2;
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v2 + 8);
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v2 + 24);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v2 + 32);
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22AA1ABAC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 80) = sub_22AA1AD98(*(void **)(v0 + 24));
  *(_QWORD *)(v0 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_22AA1AC80;
  OUTLINED_FUNCTION_32_12();
  return sub_22ABDF530();
}

uint64_t sub_22AA1AC80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = *(void **)(v4 + 88);
    *(_QWORD *)(v4 + 112) = a1;

  }
  return swift_task_switch();
}

uint64_t sub_22AA1ACFC()
{
  uint64_t v0;

  sub_22AA1AFC8(*(void **)(v0 + 112), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA1AD64()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

id sub_22AA1AD98(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  OSType v14;
  CVPixelBufferRef v15;
  uint64_t v16;
  uint64_t v17;
  CVPixelBufferRef v19;
  uint64_t inited;
  uint64_t v21;
  __CVBuffer *v22;
  id v23;

  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(id *)(v1 + 16);
  v6 = objc_msgSend(*(id *)v1, sel_modelDescription);
  v7 = objc_msgSend(v6, sel_inputDescriptionsByName);

  OUTLINED_FUNCTION_20_23(v8, (unint64_t *)&qword_255B108E8);
  v9 = sub_22ABDEAB0();

  OUTLINED_FUNCTION_22_21();
  sub_22AAE3E20(v4, (uint64_t)v5, v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_6;
  v12 = objc_msgSend(v11, sel_imageConstraint);
  if (!v12)
  {

LABEL_6:
    sub_22A9F77C0();
    OUTLINED_FUNCTION_53();
    *(_QWORD *)v16 = v4;
    *(_QWORD *)(v16 + 8) = v5;
    *(_BYTE *)(v16 + 16) = 5;
    v17 = OUTLINED_FUNCTION_22_21();
    swift_willThrow(v17);
    return v5;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, sel_pixelFormatType);

  v15 = sub_22ABA7D64(a1, v14, 0xD00000000000001CLL, 0x800000022ABEF130);
  if (v2)
  {

  }
  else
  {
    v19 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10778);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(inited + 32) = v4;
    *(_QWORD *)(inited + 40) = v5;
    type metadata accessor for CVBuffer(0);
    *(_QWORD *)(inited + 72) = v21;
    *(_QWORD *)(inited + 48) = v19;
    OUTLINED_FUNCTION_22_21();
    v22 = v19;
    sub_22ABDEAC8();
    v23 = objc_allocWithZone(MEMORY[0x24BDBFF80]);
    v5 = sub_22A9F76E0();

  }
  return v5;
}

void sub_22AA1AFC8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v6 = (void *)sub_22ABDED2C();
  v7 = objc_msgSend(a1, sel_featureValueForName_, v6);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_multiArrayValue);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, sel_squeeze);
      sub_22ABDE8B8();

    }
    else
    {
      v13 = objc_msgSend(v7, sel_type);
      sub_22A9F77C0();
      v14 = OUTLINED_FUNCTION_53();
      *(_QWORD *)v15 = 5;
      *(_QWORD *)(v15 + 8) = v13;
      *(_BYTE *)(v15 + 16) = 2;
      OUTLINED_FUNCTION_6_34(v14);

    }
  }
  else
  {
    sub_22A9F77C0();
    OUTLINED_FUNCTION_53();
    *(_QWORD *)v11 = a2;
    *(_QWORD *)(v11 + 8) = a3;
    *(_BYTE *)(v11 + 16) = 6;
    v12 = sub_22ABDEAEC();
    swift_willThrow(v12);
  }
}

uint64_t sub_22AA1B114(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *a2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A9B24D4;
  return MLModelImageFeatureExtractor.applied(to:eventHandler:)(a1, v4);
}

uint64_t MLModelImageFeatureExtractor.Error.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDEDC8();
  return 0;
}

uint64_t static MLModelImageFeatureExtractor.Error.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if ((a1[2] & 1) != 0)
  {
    if ((a2[2] & 1) != 0)
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        v7 = sub_22ABDFF68();
        goto LABEL_17;
      }
LABEL_16:
      v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5)
      goto LABEL_15;
    goto LABEL_16;
  }
  v7 = 0;
LABEL_17:
  OUTLINED_FUNCTION_108_2();
  OUTLINED_FUNCTION_108_2();
  sub_22AA1B32C();
  sub_22AA1B32C();
  return v7 & 1;
}

uint64_t OUTLINED_FUNCTION_108_2()
{
  return sub_22ABDEAEC();
}

uint64_t sub_22AA1B32C()
{
  return swift_bridgeObjectRelease();
}

void sub_22AA1B33C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = sub_22ABDDBC8();
  v55 = *(_QWORD *)(v57 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  v53 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B116C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  v49 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B116D0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_33();
  v8 = v7 - v6;
  v9 = sub_22ABDDB98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  v13 = v12 - v11;
  v14 = sub_22ABDDBEC();
  v50 = *(_QWORD *)(v14 - 8);
  v51 = v14;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0();
  v54 = v16;
  v18 = OUTLINED_FUNCTION_49_8(v17, sel_imageConstraint);
  if (!v18)
  {
    OUTLINED_FUNCTION_14_23();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_60_5();
    OUTLINED_FUNCTION_11_31();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_32_6();
    sub_22AA1CA68();
    v21 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v22 = 0xD000000000000013;
    *(_QWORD *)(v22 + 8) = 0x800000022ABE2C90;
    *(_BYTE *)(v22 + 16) = 0;
    OUTLINED_FUNCTION_6_34(v21);
LABEL_29:
    OUTLINED_FUNCTION_16();
    return;
  }
  v19 = v18;
  objc_msgSend(v18, sel_pixelsWide);
  objc_msgSend(v19, sel_pixelsHigh);
  objc_msgSend(v19, sel_pixelFormatType);
  sub_22ABDDB8C();
  v20 = v19;
  if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BE62418], v9);
    sub_22AA1CAA4(v8, &qword_255B116D0);
  }
  else
  {
    v23 = OUTLINED_FUNCTION_32_12();
    v24(v23);
  }
  v26 = v53;
  v25 = v54;
  v27 = sub_22ABDDBD4();
  v28 = OUTLINED_FUNCTION_39_11(v27, sel_sizeConstraint);
  v29 = objc_msgSend(v28, sel_type);

  if (v29 == (id)3)
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B116D8);
    v48 = v20;
    objc_msgSend(OUTLINED_FUNCTION_39_11(v42, sel_sizeConstraint), sel_pixelsWideRange);
    OUTLINED_FUNCTION_35_10();
    if (__OFADD__(3, v9))
    {
      __break(1u);
    }
    else
    {
      v43 = (uint64_t)v49;
      if (v9 + 3 >= 3)
      {
        sub_22ABDE7B0();
        objc_msgSend(objc_msgSend(v48, sel_sizeConstraint), sel_pixelsHighRange);
        OUTLINED_FUNCTION_35_10();
        if (!__OFADD__(3, v9))
        {
          if (v9 + 3 >= 3)
          {
            sub_22ABDE7B0();
            v44 = sub_22ABDDBA4();
            OUTLINED_FUNCTION_10_20(v44);
            v25 = v54;
LABEL_27:
            __swift_storeEnumTagSinglePayload(v43, 0, 1, (uint64_t)v29);
            sub_22ABDDBB0();
            v20 = v48;
            goto LABEL_28;
          }
          goto LABEL_34;
        }
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
  if (v29 != (id)2)
  {
LABEL_28:

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(a1, v25, v51);
    v46 = *MEMORY[0x24BE62568];
    v47 = sub_22ABDDC88();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(a1, v46, v47);
    goto LABEL_29;
  }
  v29 = OUTLINED_FUNCTION_39_11(v30, sel_sizeConstraint);
  v31 = objc_msgSend(v29, sel_enumeratedImageSizes);

  OUTLINED_FUNCTION_20_23(v32, &qword_255B116E0);
  v33 = sub_22ABDEFF0();

  if (v33 >> 62)
  {
    sub_22ABDEAEC();
    v34 = sub_22ABDFB60();
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v48 = v20;
  if (!v34)
  {
    OUTLINED_FUNCTION_2_1();
    v36 = MEMORY[0x24BEE4AF8];
LABEL_26:
    v43 = (uint64_t)v49;
    *v49 = v36;
    v45 = sub_22ABDDBA4();
    OUTLINED_FUNCTION_10_20(v45);
    goto LABEL_27;
  }
  v56 = MEMORY[0x24BEE4AF8];
  sub_22AB4D40C();
  if ((v34 & 0x8000000000000000) == 0)
  {
    v35 = 0;
    v36 = v56;
    v37 = v33 & 0xC000000000000001;
    v29 = (id)v33;
    do
    {
      if (v37)
        v38 = (id)MEMORY[0x22E2E3A9C](v35, v33);
      else
        v38 = *(id *)(v33 + 8 * v35 + 32);
      v39 = v38;
      objc_msgSend(v38, sel_pixelsWide);
      objc_msgSend(v39, sel_pixelsHigh);
      sub_22ABDDBBC();

      v40 = v26;
      v41 = *(_QWORD *)(v56 + 16);
      if (v41 >= *(_QWORD *)(v56 + 24) >> 1)
        sub_22AB4D40C();
      ++v35;
      *(_QWORD *)(v56 + 16) = v41 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v55 + 32))(v56+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v41, v40, v57);
      v26 = v40;
      v33 = (unint64_t)v29;
    }
    while (v34 != v35);
    OUTLINED_FUNCTION_2_1();
    v25 = v54;
    goto LABEL_26;
  }
LABEL_35:
  __break(1u);
}

void sub_22AA1B904(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  unint64_t *v25;
  unint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  unint64_t *v37;
  unint64_t *v38;
  uint64_t v39;
  id v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  id v59;

  v56 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0E210);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_87();
  v53 = v2;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v50 - v4;
  v6 = sub_22ABDDC34();
  v52 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v51 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8530);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  v55 = sub_22ABDDC10();
  v13 = *(_QWORD *)(v55 - 8);
  OUTLINED_FUNCTION_2();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_28_1();
  v19 = v18;
  v21 = OUTLINED_FUNCTION_31_6(v20, sel_multiArrayConstraint);
  if (v21)
  {
    v22 = v21;
    v23 = sub_22ABDDC58();
    v24 = OUTLINED_FUNCTION_31_6(v23, sel_dataType);
    sub_22AB59C58((uint64_t)v24, v12);
    if (__swift_getEnumTagSinglePayload(v12, 1, v55) == 1)
    {
      sub_22AA1CAA4(v12, &qword_2540E8530);
      type metadata accessor for SerializationError();
      sub_22A9D395C();
      OUTLINED_FUNCTION_53();
      v26 = v25;
      OUTLINED_FUNCTION_14_23();
      sub_22ABDF7A0();
      v27 = OUTLINED_FUNCTION_32_6();
      v59 = OUTLINED_FUNCTION_31_6(v27, sel_dataType);
      type metadata accessor for MLMultiArrayDataType(0);
      sub_22ABDFA34();
      OUTLINED_FUNCTION_13_18();
      v28 = v58;
      *v26 = v57;
      v26[1] = v28;
      OUTLINED_FUNCTION_32_12();
      v29 = swift_storeEnumTagMultiPayload();
      swift_willThrow(v29);

    }
    else
    {
      OUTLINED_FUNCTION_24_11(v19, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
      OUTLINED_FUNCTION_24_11((uint64_t)v17, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
      v32 = sub_22ABDDC28();
      v33 = OUTLINED_FUNCTION_31_6(v32, sel_shape);
      OUTLINED_FUNCTION_20_23((uint64_t)v33, (unint64_t *)&qword_2540E8628);
      v34 = sub_22ABDEFF0();

      sub_22AA1A134(v34);
      swift_bridgeObjectRelease();
      v35 = sub_22ABDDC4C();
      v36 = OUTLINED_FUNCTION_31_6(v35, sel_shapeConstraint);
      sub_22AB59D6C(v36, (uint64_t)v5);
      if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) != 1)
      {
        v48 = v51;
        v47 = v52;
        (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v51, v5, v6);
        v49 = v53;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v53, v48, v6);
        __swift_storeEnumTagSinglePayload(v49, 0, 1, v6);
        sub_22ABDDC40();

        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v6);
        v45 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v46 = v19;
        v44 = v55;
        goto LABEL_9;
      }
      sub_22AA1CAA4((uint64_t)v5, (uint64_t *)&unk_255B0E210);
      v54 = type metadata accessor for SerializationError();
      sub_22A9D395C();
      OUTLINED_FUNCTION_53();
      v38 = v37;
      OUTLINED_FUNCTION_14_23();
      sub_22ABDF7A0();
      v39 = swift_bridgeObjectRelease();
      v57 = 0xD00000000000001ELL;
      v58 = 0x800000022ABE2D00;
      v40 = OUTLINED_FUNCTION_31_6(v39, sel_shapeConstraint);
      v41 = objc_msgSend(v40, sel_description);
      sub_22ABDED50();

      sub_22ABDEDC8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_18();
      v42 = v58;
      *v38 = v57;
      v38[1] = v42;
      v43 = swift_storeEnumTagMultiPayload();
      swift_willThrow(v43);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v19, v55);
    }
    sub_22ABDDC64();
    OUTLINED_FUNCTION_25_14();
    v46 = v56;
LABEL_9:
    v45(v46, v44);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_14_23();
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_60_5();
  OUTLINED_FUNCTION_11_31();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_32_6();
  sub_22AA1CA68();
  v30 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_4_24(v30, v31);
LABEL_10:
  OUTLINED_FUNCTION_16();
}

void sub_22AA1BE18(uint64_t a1@<X8>)
{
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  char *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void (*v69)(unint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  id v114;
  __int128 v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v101 = a1;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v3);
  v4 = sub_22ABDE798();
  OUTLINED_FUNCTION_40_1(v4, (uint64_t)&v124 + 8);
  v96 = v5;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v7);
  v8 = sub_22ABDD0E8();
  OUTLINED_FUNCTION_40_1(v8, (uint64_t)&v126);
  v93 = v9;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_16_6(v13);
  v14 = sub_22ABDE324();
  OUTLINED_FUNCTION_40_1(v14, (uint64_t)&v125);
  v97 = v15;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_16_6(v18);
  v19 = sub_22ABDDC64();
  OUTLINED_FUNCTION_40_1(v19, (uint64_t)&v128);
  v102 = v20;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v22);
  v23 = sub_22ABDDE68();
  OUTLINED_FUNCTION_40_1(v23, (uint64_t)&v131);
  v106 = v24;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_16_6(v27);
  v28 = sub_22ABDDC88();
  OUTLINED_FUNCTION_40_1(v28, (uint64_t)&v130);
  v110 = v29;
  OUTLINED_FUNCTION_2();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_28_1();
  v129 = v34;
  v36 = *v1;
  v35 = (uint64_t)v1[1];
  v37 = (uint64_t)v1[2];
  *(_QWORD *)&v115 = v1[3];
  v38 = (uint64_t)v1[4];
  v112 = v1[5];
  v39 = OUTLINED_FUNCTION_34_15();
  v40 = objc_msgSend(v39, sel_inputDescriptionsByName);

  OUTLINED_FUNCTION_20_23(v41, (unint64_t *)&qword_255B108E8);
  v42 = OUTLINED_FUNCTION_51_11();

  sub_22ABDEAEC();
  sub_22AAE3E20(v35, v37, v42);
  v44 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v44)
  {
    v114 = v44;
    v45 = OUTLINED_FUNCTION_34_15();
    v46 = objc_msgSend(v45, sel_outputDescriptionsByName);

    OUTLINED_FUNCTION_51_11();
    sub_22ABDEAEC();
    v47 = v115;
    OUTLINED_FUNCTION_36_11(v115, v38);
    v49 = v48;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_8();
    if (v49)
    {
      v50 = v36;
      v51 = v33;
      v90 = v49;
      v89 = v50;
      v116 = (unint64_t)v50;
      v117 = v35;
      v118 = v37;
      v119 = v47;
      v52 = v112;
      v120 = v38;
      v121 = v112;
      v53 = v129;
      v54 = v113;
      v55 = v114;
      sub_22AA1B33C(v129);
      if (!v54)
      {
        v63 = v53;
        v64 = v108;
        (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v51, v63, v108);
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_27();
        v116 = (unint64_t)v89;
        v117 = v35;
        v118 = v37;
        v119 = v115;
        v120 = v38;
        v121 = v52;
        v65 = v107;
        sub_22AA1B904(v107);
        (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v51, v65, v103);
        (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v51, *MEMORY[0x24BE62400], v64);
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_27();
        sub_22ABDE318();
        sub_22ABDE258();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
        v66 = v106;
        v67 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
        v68 = OUTLINED_FUNCTION_33_15();
        v115 = xmmword_22ABE8E30;
        *(_OWORD *)(v68 + 16) = xmmword_22ABE8E30;
        v69 = *(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 16);
        v70 = v109;
        v69(v68 + v67, v111, v109);
        sub_22ABDE2C4();
        v71 = OUTLINED_FUNCTION_33_15();
        *(_OWORD *)(v71 + 16) = v115;
        v69(v71 + v67, v104, v70);
        sub_22ABDE300();
        v72 = objc_msgSend(v89, sel_modelDescription);
        v73 = objc_msgSend(v72, sel_modelURL);

        v74 = v100;
        sub_22ABDD0B8();

        sub_22ABDD064();
        v75 = v91;
        sub_22ABDD01C();
        v76 = v92;
        sub_22ABDD0A0();
        OUTLINED_FUNCTION_38_13(v75);
        sub_22ABDD0C4();
        OUTLINED_FUNCTION_38_13(v76);
        v77 = v95;
        sub_22ABDDF94();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v96 + 104))(v77, *MEMORY[0x24BE632B0], v98);
        v78 = v105;
        sub_22ABDE288();
        v79 = v97;
        v80 = v99;
        OUTLINED_FUNCTION_24_11(v94, v78, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 16));
        v122 = 0u;
        v123 = 0u;
        v124 = 0u;
        v125 = 0u;
        v126 = 0u;
        v127 = 0;
        sub_22ABDE3CC();
        v81 = OUTLINED_FUNCTION_32_12();
        sub_22AB314C8(v81, v82, v83, v84);

        OUTLINED_FUNCTION_38_13(v74);
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
        v85 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
        v86 = v109;
        v85(v104, v109);
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v107, v103);
        v85(v111, v86);
        v87 = OUTLINED_FUNCTION_44_11();
        v88(v87, v108);
        goto LABEL_9;
      }

      v56 = v90;
    }
    else
    {
      v116 = 0;
      v117 = 0xE000000000000000;
      sub_22ABDF7A0();
      swift_bridgeObjectRelease();
      v116 = 0xD000000000000025;
      v117 = 0x800000022ABE2C60;
      sub_22ABDEDC8();
      OUTLINED_FUNCTION_13_18();
      sub_22AA1CA68();
      v61 = OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_4_24(v61, v62);
      v56 = v114;
    }

  }
  else
  {
    v116 = 0;
    v117 = 0xE000000000000000;
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v116 = 0xD000000000000026;
    v117 = 0x800000022ABE2C30;
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_13_18();
    v57 = v116;
    v58 = v117;
    sub_22AA1CA68();
    v59 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v60 = v57;
    *(_QWORD *)(v60 + 8) = v58;
    *(_BYTE *)(v60 + 16) = 0;
    OUTLINED_FUNCTION_6_34(v59);
  }
LABEL_9:
  OUTLINED_FUNCTION_16();
}

void sub_22AA1C680(uint64_t a1@<X8>)
{
  sub_22AA1BE18(a1);
}

void destroy for MLModelImageFeatureExtractor(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for MLModelImageFeatureExtractor(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(void **)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  v7 = v3;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for MLModelImageFeatureExtractor(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for MLModelImageFeatureExtractor(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for MLModelImageFeatureExtractor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelImageFeatureExtractor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLModelImageFeatureExtractor()
{
  return &type metadata for MLModelImageFeatureExtractor;
}

uint64_t destroy for MLModelImageFeatureExtractor.Error()
{
  return sub_22AA1B32C();
}

uint64_t _s18CreateMLComponents28MLModelImageFeatureExtractorV5ErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_108_2();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MLModelImageFeatureExtractor.Error(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_108_2();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_22AA1B32C();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MLModelImageFeatureExtractor.Error(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_22AA1B32C();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLModelImageFeatureExtractor.Error(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelImageFeatureExtractor.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22AA1CA44(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_22AA1CA4C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MLModelImageFeatureExtractor.Error()
{
  return &type metadata for MLModelImageFeatureExtractor.Error;
}

unint64_t sub_22AA1CA68()
{
  unint64_t result;

  result = qword_255B116C0;
  if (!qword_255B116C0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for MLModelImageFeatureExtractor.Error, &type metadata for MLModelImageFeatureExtractor.Error);
    atomic_store(result, (unint64_t *)&qword_255B116C0);
  }
  return result;
}

uint64_t sub_22AA1CAA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_20(v3);
  return a1;
}

void sub_22AA1CAD0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_0_5();
}

uint64_t OUTLINED_FUNCTION_4_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 1;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_6_34(uint64_t a1)
{
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_10_20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_11_31()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_12_25()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_13_29()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_14_23()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_20_23(uint64_t a1, unint64_t *a2)
{
  sub_22AA1CAD0(0, a2);
}

uint64_t OUTLINED_FUNCTION_22_21()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_23_19()
{
  return sub_22ABDEDC8();
}

unint64_t OUTLINED_FUNCTION_26_15()
{
  return sub_22AA1CA68();
}

uint64_t OUTLINED_FUNCTION_28_13()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_32_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_33_15()
{
  return swift_allocObject();
}

id OUTLINED_FUNCTION_34_15()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 2782));
}

void OUTLINED_FUNCTION_35_10()
{
  void *v0;

}

void OUTLINED_FUNCTION_36_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_22AAE3E20(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_38_13(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

id OUTLINED_FUNCTION_39_11(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_44_11()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 72);
}

void OUTLINED_FUNCTION_46_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

}

id OUTLINED_FUNCTION_48_9()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 72));
}

id OUTLINED_FUNCTION_49_8(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_50_9()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_51_11()
{
  return sub_22ABDEAB0();
}

uint64_t OUTLINED_FUNCTION_52_10()
{
  return sub_22ABDFA34();
}

void OUTLINED_FUNCTION_53_10()
{
  type metadata accessor for MLFeatureType(0);
}

void ImageFlipper.orientation.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ImageFlipper.orientation.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ImageFlipper.orientation.modify())()
{
  return nullsub_1;
}

CreateMLComponents::ImageFlipper __swiftcall ImageFlipper.init(orientation:)(CreateMLComponents::ImageFlipper orientation)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)orientation.orientation;
  return orientation;
}

id ImageFlipper.applied(to:eventHandler:)(void *a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 4;
  else
    v2 = 2;
  return objc_msgSend(a1, sel_imageByApplyingCGOrientation_, v2);
}

uint64_t sub_22AA1CCEC(id *a1, void **a2)
{
  uint64_t v2;

  *a1 = ImageFlipper.applied(to:eventHandler:)(*a2);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

BOOL static ImageFlipper.Orientation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ImageFlipper.Orientation.hash(into:)()
{
  return sub_22ABE0250();
}

uint64_t ImageFlipper.Orientation.hashValue.getter()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return sub_22ABE0280();
}

unint64_t sub_22AA1CDC0()
{
  unint64_t result;

  result = qword_255B11710[0];
  if (!qword_255B11710[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for ImageFlipper.Orientation, &type metadata for ImageFlipper.Orientation);
    atomic_store(result, qword_255B11710);
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageFlipper()
{
  return &type metadata for ImageFlipper;
}

uint64_t _s18CreateMLComponents12ImageFlipperV11OrientationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA1CE5C + 4 * byte_22ABEF185[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA1CE90 + 4 * byte_22ABEF180[v4]))();
}

uint64_t sub_22AA1CE90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA1CE98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA1CEA0);
  return result;
}

uint64_t sub_22AA1CEAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA1CEB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA1CEB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA1CEC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageFlipper.Orientation()
{
  return &type metadata for ImageFlipper.Orientation;
}

void sub_22AA1CEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51[5];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v56 = a6;
  v65 = a8;
  v53 = a2;
  v54 = a3;
  OUTLINED_FUNCTION_23_20(a1, a2, a11);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_1_23(v16, v51[0]);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_12_26(v18, v51[0]);
  v52 = OUTLINED_FUNCTION_9_27(v19, MEMORY[0x24BEE1768], v20);
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)v51 - v22);
  v24 = (void (*)(uint64_t))__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
  v25 = sub_22AA10448();
  v26 = *(_QWORD *)(a12 + 8);
  v66 = v24;
  v67 = a10;
  v68 = v25;
  v69 = v26;
  v51[3] = OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v27);
  v51[2] = (uint64_t)v51 - v28;
  v51[4] = (uint64_t)v24;
  v66 = v24;
  v67 = a10;
  v68 = v25;
  v69 = v26;
  v29 = OUTLINED_FUNCTION_19_18();
  v51[0] = *(_QWORD *)(v29 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v51 - v31;
  v58 = a1;
  v55 = a12;
  v33 = v56;
  if (sub_22ABDF35C() != v33)
  {
    v48 = *v57;
    v47 = v57[1];
    v66 = 0;
    v67 = 0xE000000000000000;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_22_22();
    OUTLINED_FUNCTION_11_32();
    OUTLINED_FUNCTION_32_6();
    v70 = v33;
    OUTLINED_FUNCTION_0_27();
    OUTLINED_FUNCTION_4_25();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_3_34();
    sub_22ABDEAEC();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_10_21();
    v70 = sub_22ABDF35C();
    OUTLINED_FUNCTION_0_27();
    OUTLINED_FUNCTION_4_25();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_6_35();
    v70 = a7;
    OUTLINED_FUNCTION_0_27();
    OUTLINED_FUNCTION_16_22();
    swift_bridgeObjectRelease();
    sub_22A9B7B50();
    v49 = OUTLINED_FUNCTION_53();
    *v50 = v48;
    v50[1] = v47;
    OUTLINED_FUNCTION_13_30(v49, (uint64_t)v50);
    goto LABEL_9;
  }
  v34 = v57;
  v66 = 0;
  sub_22ABE0178();
  sub_22ABDF7C4();
  v35 = v32;
  sub_22ABDF7D0();
  v36 = v52;
  OUTLINED_FUNCTION_14_24((uint64_t)v23, 1);
  v37 = v29;
  if (v38)
  {
LABEL_7:
    (*(void (**)(char *, uint64_t))(v51[0] + 8))(v35, v37);
LABEL_9:
    OUTLINED_FUNCTION_16();
    return;
  }
  v57 = v34 + 4;
  v58 = a13;
  v59 = v23;
  v39 = v61;
  while (!__OFADD__(v65, *v23))
  {
    OUTLINED_FUNCTION_7_30((uint64_t)v23 + *(int *)(v36 + 48), *(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v63 + 32));
    v40 = a7;
    v41 = *(_QWORD *)(v64 + 24);
    v36 = v37;
    v42 = v60;
    sub_22ABDEBE8();
    v43 = v41;
    a7 = v40;
    type metadata accessor for DenseMatrix(0, v42, v43, v44);
    v45 = OUTLINED_FUNCTION_21_23(&v66, v40);
    v23 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 40))(v46, v39, v42);
    ((void (*)(void (**)(uint64_t), _QWORD))v45)(&v66, 0);
    sub_22ABDF7D0();
    OUTLINED_FUNCTION_14_24((uint64_t)v23, 1);
    if (v38)
      goto LABEL_7;
  }
  __break(1u);
}

void sub_22AA1D294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46[2];
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v53 = a3;
  v63 = a8;
  v52 = a2;
  v55 = a12;
  v56 = a6;
  OUTLINED_FUNCTION_23_20(a1, a2, a11);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_1_23(v15, v46[0]);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_12_26(v17, v46[0]);
  v51 = OUTLINED_FUNCTION_9_27(v18, MEMORY[0x24BEE1768], v19);
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (uint64_t *)((char *)v46 - v21);
  v23 = (void (*)(uint64_t))__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
  v24 = sub_22AA10448();
  v25 = a12[1];
  v64 = v23;
  v65 = a10;
  v66 = v24;
  v67 = v25;
  v49 = OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v26);
  v48 = (char *)v46 - v27;
  v50 = v23;
  v64 = v23;
  v65 = a10;
  v66 = v24;
  v67 = v25;
  v47 = OUTLINED_FUNCTION_19_18();
  v46[0] = *(_QWORD *)(v47 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)v46 - v29;
  if (sub_22ABDF35C() != v56)
  {
    v43 = v54[1];
    v63 = *v54;
    v64 = 0;
    v65 = 0xE000000000000000;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_22_22();
    OUTLINED_FUNCTION_11_32();
    OUTLINED_FUNCTION_32_6();
    v68 = v56;
    OUTLINED_FUNCTION_0_27();
    OUTLINED_FUNCTION_4_25();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_3_34();
    sub_22ABDEAEC();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_10_21();
    v68 = sub_22ABDF35C();
    OUTLINED_FUNCTION_0_27();
    OUTLINED_FUNCTION_4_25();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_6_35();
    v68 = a7;
    OUTLINED_FUNCTION_0_27();
    OUTLINED_FUNCTION_16_22();
    swift_bridgeObjectRelease();
    sub_22A9B7B50();
    v44 = OUTLINED_FUNCTION_53();
    *v45 = v63;
    v45[1] = v43;
    OUTLINED_FUNCTION_13_30(v44, (uint64_t)v45);
    goto LABEL_9;
  }
  v64 = 0;
  sub_22ABE0178();
  sub_22ABDF7C4();
  v31 = v47;
  OUTLINED_FUNCTION_17_20();
  v32 = v51;
  OUTLINED_FUNCTION_14_24((uint64_t)v22, 1);
  if (v33)
  {
LABEL_7:
    (*(void (**)(char *, uint64_t))(v46[0] + 8))(v30, v31);
LABEL_9:
    OUTLINED_FUNCTION_16();
    return;
  }
  v55 = v54 + 4;
  v56 = a13;
  v57 = v22;
  v34 = v59;
  while (!__OFADD__(v63, *v22))
  {
    OUTLINED_FUNCTION_7_30((uint64_t)v22 + *(int *)(v32 + 48), *(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v61 + 32));
    v35 = v30;
    v36 = v31;
    v37 = a7;
    v38 = *(_QWORD *)(v62 + 24);
    v32 = v24;
    v24 = v58;
    sub_22ABDEA98();
    v39 = v38;
    a7 = v37;
    v31 = v36;
    v30 = v35;
    v22 = v57;
    type metadata accessor for DenseMatrix(0, v24, v39, v40);
    v41 = OUTLINED_FUNCTION_21_23(&v64, a7);
    (*(void (**)(uint64_t, uint64_t, unint64_t))(v60 + 40))(v42, v34, v24);
    ((void (*)(void (**)(uint64_t), _QWORD))v41)(&v64, 0);
    OUTLINED_FUNCTION_17_20();
    OUTLINED_FUNCTION_14_24((uint64_t)v22, 1);
    if (v33)
      goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_22AA1D658()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_22AA1D690(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  swift_retain();
  return a1;
}

uint64_t sub_22AA1D6FC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_22AA1D7BC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t sub_22AA1D830(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA1D870(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FeatureMatrixBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeatureMatrixBuilder);
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_3_34()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_4_25()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_6_35()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_7_30@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(_QWORD, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(*(_QWORD *)(v2 - 160), a1, *(_QWORD *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_9_27(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 136) = a3;
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_10_21()
{
  return sub_22ABDEDC8();
}

unint64_t OUTLINED_FUNCTION_11_32()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 112);
  *(_QWORD *)(v0 - 120) = *(_QWORD *)(v0 - 120);
  *(_QWORD *)(v0 - 112) = v1;
  return 0xD00000000000001ALL;
}

void OUTLINED_FUNCTION_12_26(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_13_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a2 + 16) = v2;
  *(_QWORD *)(a2 + 24) = v3;
  *(_BYTE *)(a2 + 32) = 4;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_14_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_getEnumTagSinglePayload(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_16_22()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_17_20()
{
  return sub_22ABDF7D0();
}

uint64_t OUTLINED_FUNCTION_19_18()
{
  return sub_22ABDF7DC();
}

uint64_t OUTLINED_FUNCTION_20_24()
{
  return sub_22ABDF7E8();
}

void (*OUTLINED_FUNCTION_21_23(void (**a1)(uint64_t a1), uint64_t a2))(uint64_t a1)
{
  uint64_t v2;

  return DenseMatrix.subscript.modify(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_22_22()
{
  return sub_22ABDF7A0();
}

void OUTLINED_FUNCTION_23_20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 152) = *(_QWORD *)(a3 - 8);
}

uint64_t sub_22AA1DA24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v19[2];
  int v20;
  void (*v21)(uint64_t *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_22ABDE468();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v19[1] = v1;
    v24 = MEMORY[0x24BEE4AF8];
    sub_22AB4D24C();
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v21 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
    v22 = v10;
    v11 = *MEMORY[0x24BE62F00];
    v23 = v4;
    v20 = v11;
    do
    {
      v21(v6, v9, v3);
      v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v6, v3);
      if (v12 == v11)
      {
        (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v6, v3);
        v13 = *v6;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
        v13 = 0;
      }
      v8 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4D24C();
        v8 = v24;
      }
      v14 = *(_QWORD *)(v8 + 16);
      if (v14 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_22AB4D24C();
        v8 = v24;
      }
      v15 = v20;
      v16 = v12 != v20;
      *(_QWORD *)(v8 + 16) = v14 + 1;
      v17 = v8 + 16 * v14;
      v11 = v15;
      *(_QWORD *)(v17 + 32) = v13;
      *(_BYTE *)(v17 + 40) = v16;
      v4 = v23;
      v9 += v22;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_22AA1DBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  void (*v33)(_QWORD *, uint64_t, uint64_t);
  uint64_t v34;

  v26 = a4;
  v27 = a5;
  v28 = a2;
  v8 = sub_22ABDE5C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v14 = (_QWORD *)((char *)v25 - v13);
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
    goto LABEL_21;
  }
  v29 = a3;
  v25[1] = v5;
  v34 = MEMORY[0x24BEE4AF8];
  sub_22AB4D3D0();
  v31 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = a1 + v31;
  v30 = *(_QWORD *)(v9 + 72);
  v33 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v9 + 16);
  v32 = *MEMORY[0x24BE63058];
  do
  {
    v33(v11, v16, v8);
    v17 = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 88))(v11, v8);
    if (v17 != v32)
    {
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
LABEL_11:
      v33(v14, v16, v8);
      goto LABEL_14;
    }
    (*(void (**)(_QWORD *, uint64_t))(v9 + 96))(v11, v8);
    if (*v11 == v28 && v11[1] == v29)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
        goto LABEL_11;
    }
    v20 = v27;
    *v14 = v26;
    v14[1] = v20;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v14, v32, v8);
    sub_22ABDEAEC();
LABEL_14:
    v21 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22AB4D3D0();
      v21 = v34;
    }
    v22 = *(_QWORD *)(v21 + 16);
    if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
    {
      sub_22AB4D3D0();
      v21 = v34;
    }
    *(_QWORD *)(v21 + 16) = v22 + 1;
    v23 = v30;
    (*(void (**)(unint64_t, _QWORD *, uint64_t))(v9 + 32))(v21 + v31 + v22 * v30, v14, v8);
    v34 = v21;
    v16 += v23;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease();
  return v21;
}

void sub_22AA1DE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];

  OUTLINED_FUNCTION_4_4();
  v18[2] = v1;
  v3 = v2;
  v18[1] = v4;
  v5 = OUTLINED_FUNCTION_19_19();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_26();
  v7 = OUTLINED_FUNCTION_51_12();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  v12 = sub_22ABDE744();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v3, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v11, v7) != *MEMORY[0x24BE631E8])
  {
    OUTLINED_FUNCTION_42_9(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    OUTLINED_FUNCTION_31_10();
    v18[0] = 54;
    OUTLINED_FUNCTION_11_33();
    OUTLINED_FUNCTION_40_10();
  }
  OUTLINED_FUNCTION_42_9(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
  v16 = swift_projectBox();
  OUTLINED_FUNCTION_59_5((uint64_t)v15, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  swift_release();
  v17 = sub_22ABDE738();
  sub_22AA1DA24(v17);
  OUTLINED_FUNCTION_3_8();
  sub_22ABDE72C();
  sub_22AA1E4E0();
  OUTLINED_FUNCTION_63_1();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
  OUTLINED_FUNCTION_24_18((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  OUTLINED_FUNCTION_3();
}

void sub_22AA1E058()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  unint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;

  OUTLINED_FUNCTION_4_4();
  v2 = v1;
  v3 = sub_22ABDE468();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_23_8();
  v7 = (char *)(v5 - v6);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v25 - v9;
  v11 = OUTLINED_FUNCTION_19_19();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)v0 + *(int *)(OUTLINED_FUNCTION_3_35() + 20);
  v25[2] = v14;
  v26 = v12;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v27 = v11;
  v16(v14, v15, v11);
  v17 = *v0;
  v18 = *(_QWORD *)(*v0 + 16);
  if (v18)
  {
    v25[1] = v2;
    v31 = MEMORY[0x24BEE4AF8];
    v19 = v17;
    sub_22ABDEAEC();
    sub_22AB4D2B4();
    v20 = v31;
    v29 = *MEMORY[0x24BE62F00];
    v28 = *MEMORY[0x24BE62EF8];
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
    v25[0] = v19;
    v21 = (_BYTE *)(v19 + 40);
    do
    {
      if ((*v21 & 1) != 0)
      {
        *v7 = 0;
        v22 = v28;
      }
      else
      {
        *(_QWORD *)v7 = *((_QWORD *)v21 - 1);
        v22 = v29;
      }
      v30(v7, v22, v3);
      v23 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v23(v10, v7, v3);
      v31 = v20;
      v24 = *(_QWORD *)(v20 + 16);
      if (v24 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_22AB4D2B4();
        v20 = v31;
      }
      *(_QWORD *)(v20 + 16) = v24 + 1;
      v23((char *)(v20+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v24), v10, v3);
      v21 += 16;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  sub_22ABDE750();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_55_9(v26);
  OUTLINED_FUNCTION_3();
}

void sub_22AA1E26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_22();
  if (!v3)
  {
    v10 = OUTLINED_FUNCTION_3_35();
    v8 = OUTLINED_FUNCTION_11_14(v1, v11, v12, v10);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_41_7();
  if ((v4 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_17_21(v5);
    v6 = v1;
    v7 = 0;
  }
  else
  {
    v0 = OUTLINED_FUNCTION_3_35();
    v6 = v1;
    v7 = 1;
  }
  __swift_storeEnumTagSinglePayload(v6, v7, 1, v0);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_35();
  v8 = OUTLINED_FUNCTION_0_7(v1);
  if (v9)
  {
LABEL_8:
    OUTLINED_FUNCTION_32_13(v8, &qword_255B117B0);
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_23_21();
    OUTLINED_FUNCTION_31_10();
    OUTLINED_FUNCTION_11_33();
    OUTLINED_FUNCTION_40_10();
  }
  OUTLINED_FUNCTION_32_13(v8, &qword_255B117B0);
  OUTLINED_FUNCTION_38();
}

void sub_22AA1E39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_22();
  if (v3)
  {
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_41_7();
    if ((v4 & 1) != 0)
    {
      v5 = OUTLINED_FUNCTION_3_35();
      OUTLINED_FUNCTION_17_21(v5);
      v6 = v1;
      v7 = 0;
    }
    else
    {
      v0 = OUTLINED_FUNCTION_3_35();
      v6 = v1;
      v7 = 1;
    }
    __swift_storeEnumTagSinglePayload(v6, v7, 1, v0);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_3_35();
    v11 = OUTLINED_FUNCTION_0_7(v1);
    if (!v12)
    {
      OUTLINED_FUNCTION_32_13(v11, &qword_255B117B0);
      sub_22ABDF7A0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_31();
      sub_22ABDEDC8();
      OUTLINED_FUNCTION_31_10();
      OUTLINED_FUNCTION_11_33();
      OUTLINED_FUNCTION_40_10();
    }
  }
  else
  {
    v8 = OUTLINED_FUNCTION_3_35();
    v11 = OUTLINED_FUNCTION_11_14(v1, v9, v10, v8);
  }
  OUTLINED_FUNCTION_32_13(v11, &qword_255B117B0);
  OUTLINED_FUNCTION_38();
}

void sub_22AA1E4E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_4_4();
  v27 = v2;
  v28 = v3;
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_6_26();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11798);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_34();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B117A0);
  v29 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_33();
  v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117A8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_3_23();
  OUTLINED_FUNCTION_39_12(&v31);
  sub_22AA1E39C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B8);
  sub_22A9C8D60((unint64_t *)&qword_255B117C0, &qword_255B117A8, MEMORY[0x24BEE7460]);
  sub_22ABDDB44();
  sub_22ABDDB50();
  if (__swift_getEnumTagSinglePayload(v0, 1, v10) == 1)
  {
    OUTLINED_FUNCTION_14_25();
    sub_22AA2038C(v0, &qword_255B11798);
LABEL_5:
    v23 = OUTLINED_FUNCTION_3_35();
    v24 = (char *)v1 + *(int *)(v23 + 20);
    v25 = OUTLINED_FUNCTION_19_19();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v27, v25);
    *v1 = v28;
    __swift_storeEnumTagSinglePayload((uint64_t)v1, 0, 1, v23);
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_16_23();
    sub_22AAF4470((uint64_t)v1, v7, v5);
    OUTLINED_FUNCTION_3();
    return;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v14, v0, v10);
  OUTLINED_FUNCTION_22_21();
  sub_22ABDDB5C();
  v26 = v7;
  v16 = sub_22ABDEE4C();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  OUTLINED_FUNCTION_23();
  MEMORY[0x22E2E3028](v16, v18, v20, v22);
  OUTLINED_FUNCTION_2_1();
  sub_22ABDDB68();
  OUTLINED_FUNCTION_48_10(v14, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  OUTLINED_FUNCTION_14_25();
  swift_bridgeObjectRelease();
  if (!__OFADD__(v30, 1))
  {
    sub_22AB6144C();
    OUTLINED_FUNCTION_63_1();
    v7 = v26;
    goto LABEL_5;
  }
  __break(1u);
  OUTLINED_FUNCTION_22_23();
  __break(1u);
}

void sub_22AA1E7DC()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[14];
  _BYTE v69[120];

  OUTLINED_FUNCTION_4_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11798);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  v65 = v2;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B117A0);
  v59 = *(_QWORD *)(v62 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  v56[0] = v4;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B117A8);
  v58 = *(_QWORD *)(v61 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v60 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_87();
  v57 = v8;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v56 - v10;
  v12 = OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  v64 = v14;
  OUTLINED_FUNCTION_39_12(v69);
  sub_22AA1ED7C((uint64_t)v69);
  OUTLINED_FUNCTION_28_14();
  sub_22AA1E26C();
  sub_22AA1EDE4((uint64_t)v69);
  memcpy(v68, v0, sizeof(v68));
  v15 = v68[1];
  sub_22AA1ED7C((uint64_t)v68);
  sub_22AA1E39C();
  sub_22AA1EDE4((uint64_t)v68);
  OUTLINED_FUNCTION_60_5();
  OUTLINED_FUNCTION_28_14();
  sub_22AAE3FA0(v15, v16);
  swift_bridgeObjectRelease();
  v56[1] = v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
    goto LABEL_28;
  v63 = (uint64_t *)v0;
  sub_22A9E7D90((uint64_t)v11, v64);
  v17 = v57;
  v18 = OUTLINED_FUNCTION_28_14();
  sub_22A9E7780(v18, v19, v20);
  sub_22AA2038C(v17, &qword_255B117B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B8);
  sub_22A9C8D60((unint64_t *)&qword_255B117C0, &qword_255B117A8, MEMORY[0x24BEE7460]);
  v21 = v60;
  sub_22ABDDB44();
  OUTLINED_FUNCTION_28_14();
  sub_22ABDDB50();
  v22 = v62;
  if (__swift_getEnumTagSinglePayload(v65, 1, v62) == 1)
  {
    OUTLINED_FUNCTION_48_10(v21, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
    sub_22AA2038C(v65, &qword_255B11798);
    v23 = v63;
LABEL_15:
    OUTLINED_FUNCTION_16_23();
    sub_22AA1E4E0();
    OUTLINED_FUNCTION_63_1();
    v52 = v23[2];
    v53 = *(_QWORD *)(v52 + 16);
    if (!v53)
    {
LABEL_22:
      sub_22AA203C0(v64);
      OUTLINED_FUNCTION_3();
      return;
    }
    v54 = 0;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB5D7E8();
        v52 = v55;
      }
      if (v54 >= *(_QWORD *)(v52 + 16))
        break;
      sub_22ABDE714();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_28_14();
      sub_22AA1EE4C();
      if (v53 == ++v54)
      {
        v23[2] = v52;
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  v24 = v56[0];
  (*(void (**)(_QWORD, unint64_t, uint64_t))(v59 + 32))(v56[0], v65, v22);
  OUTLINED_FUNCTION_60_5();
  sub_22ABDDB5C();
  v25 = sub_22ABDEE4C();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  swift_bridgeObjectRelease();
  v32 = MEMORY[0x22E2E3028](v25, v27, v29, v31);
  v34 = v33;
  swift_bridgeObjectRelease();
  sub_22ABDDB68();
  OUTLINED_FUNCTION_48_10(v24, *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8));
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v60, v61);
  swift_bridgeObjectRelease();
  v35 = v67;
  v36 = *v63;
  OUTLINED_FUNCTION_16_23();
  v37 = sub_22AAE4010(v32, v34, v36);
  v39 = v38;
  OUTLINED_FUNCTION_63_1();
  if (__OFADD__(v35, 1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((v39 & 1) != 0 || v37 != v35 + 1)
  {
    OUTLINED_FUNCTION_63_1();
    v23 = v63;
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_16_23();
  v40 = v63;
  LODWORD(v62) = swift_isUniquelyReferenced_nonNull_native();
  v66 = *v40;
  v41 = v66;
  *v40 = 0x8000000000000000;
  OUTLINED_FUNCTION_16_23();
  v65 = OUTLINED_FUNCTION_49_9();
  if (__OFADD__(*(_QWORD *)(v41 + 16), (v42 & 1) == 0))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v43 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F278);
  v44 = sub_22ABDFA64();
  v45 = v65;
  if ((v44 & 1) == 0)
  {
LABEL_11:
    if ((v43 & 1) == 0)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v48 = *(_QWORD *)(v66 + 56);
    v49 = *(_QWORD *)(v48 + 8 * v45);
    v50 = __OFSUB__(v49, 1);
    v51 = v49 - 1;
    v23 = v63;
    if (v50)
    {
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      OUTLINED_FUNCTION_22_23();
      __break(1u);
      goto LABEL_29;
    }
    *(_QWORD *)(v48 + 8 * v45) = v51;
    OUTLINED_FUNCTION_63_1();
    *v23 = v66;
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_63_1();
    goto LABEL_15;
  }
  v46 = OUTLINED_FUNCTION_49_9();
  if ((v43 & 1) == (v47 & 1))
  {
    v45 = v46;
    goto LABEL_11;
  }
LABEL_29:
  sub_22ABE0190();
  __break(1u);
}

uint64_t type metadata accessor for TensorDescription()
{
  uint64_t result;

  result = qword_255B11878;
  if (!qword_255B11878)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22AA1ED7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22A9D14F0(v2, v3);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA1EDE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22A9D1570(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_22AA1EE4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  char v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, unint64_t, uint64_t);
  char v45;
  void (*v46)(_BYTE *, _QWORD);
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v57;
  void (*v58)(_BYTE *, _QWORD);
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[40];

  OUTLINED_FUNCTION_4_4();
  v65 = v2;
  v68 = v3;
  v81 = v4;
  v82 = v5;
  v72 = sub_22ABDE450();
  v71 = *(_QWORD *)(v72 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v70 = v7;
  v8 = OUTLINED_FUNCTION_44_12();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_3_23();
  v10 = sub_22ABDE600();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_6_26();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  v80 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_28_1();
  v76 = v15;
  v16 = 0;
  v66 = sub_22ABDE6E4() + 64;
  OUTLINED_FUNCTION_20_25();
  v19 = v18 & v17;
  v83 = *MEMORY[0x24BE63058];
  v67 = (unint64_t)(v20 + 63) >> 6;
  v74 = v21;
  v64 = v21 + 104;
  v69 = v10;
  v73 = v11;
  v75 = v1;
  while (1)
  {
    if (v19)
    {
      v78 = v16;
      v79 = (v19 - 1) & v19;
      v22 = __clz(__rbit64(v19)) | (v16 << 6);
      v23 = (_QWORD *)v80;
LABEL_4:
      v24 = *(_QWORD *)(v74 + 56);
      v25 = (_QWORD *)(*(_QWORD *)(v74 + 48) + 16 * v22);
      v26 = v25[1];
      *v23 = *v25;
      v23[1] = v26;
      v27 = v24 + *(_QWORD *)(v11 + 72) * v22;
      v28 = OUTLINED_FUNCTION_48();
      v29 = v27;
      v23 = (_QWORD *)v80;
      OUTLINED_FUNCTION_59_5(v80 + *(int *)(v28 + 48), v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
      __swift_storeEnumTagSinglePayload(v80, 0, 1, v28);
      OUTLINED_FUNCTION_22_21();
      goto LABEL_11;
    }
    if (__OFADD__(v16, 1))
      goto LABEL_64;
    OUTLINED_FUNCTION_37_13();
    v23 = (_QWORD *)v80;
    if (v31 != v32)
    {
      v33 = *(_QWORD *)(v66 + 8 * v30);
      if (v33)
        goto LABEL_9;
      if (v30 + 1 >= v67)
      {
LABEL_45:
        v78 = v30;
        goto LABEL_10;
      }
      v33 = *(_QWORD *)(v66 + 8 * (v30 + 1));
      if (v33)
      {
        ++v30;
LABEL_9:
        v78 = v30;
        v79 = (v33 - 1) & v33;
        v22 = __clz(__rbit64(v33)) + (v30 << 6);
        goto LABEL_4;
      }
      if (v30 + 2 >= v67)
      {
        v78 = v30 + 1;
      }
      else
      {
        v33 = *(_QWORD *)(v66 + 8 * (v30 + 2));
        if (v33)
        {
          v30 += 2;
          goto LABEL_9;
        }
        OUTLINED_FUNCTION_37_13();
        if (v31 != v32)
        {
          v33 = *(_QWORD *)(v66 + 8 * v30);
          if (!v33)
          {
            do
            {
              OUTLINED_FUNCTION_37_13();
              if (v31 == v32)
              {
                v30 = v67 - 1;
                goto LABEL_45;
              }
              v33 = *(_QWORD *)(v64 + 8 * v16++);
            }
            while (!v33);
            v30 = v16 + 4;
          }
          goto LABEL_9;
        }
        v78 = v49;
      }
    }
    else
    {
      v78 = v16;
    }
LABEL_10:
    v34 = OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_11_14(v80, v35, v36, v34);
    v79 = 0;
LABEL_11:
    sub_22AA203FC((uint64_t)v23, (uint64_t)v76);
    v37 = OUTLINED_FUNCTION_48();
    if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v37) == 1)
      break;
    v38 = v76[1];
    v77 = *v76;
    OUTLINED_FUNCTION_59_5(v1, (uint64_t)v76 + *(int *)(v37 + 48), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
    v39 = sub_22ABDE5E8();
    v40 = *(_QWORD *)(v39 + 16);
    if (v40)
    {
      v41 = v39 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v42 = *(_QWORD *)(v9 + 72);
      v43 = *(void (**)(_QWORD *, unint64_t, uint64_t))(v9 + 16);
      while (1)
      {
        v43(v0, v41, v8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t))(v9 + 88))(v0, v8) != v83)
        {
          (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v0, v8);
          goto LABEL_22;
        }
        (*(void (**)(_QWORD *, uint64_t))(v9 + 96))(v0, v8);
        if (*v0 == v81 && v0[1] == v82)
          break;
        v45 = sub_22ABDFF68();
        OUTLINED_FUNCTION_2_1();
        if ((v45 & 1) != 0)
          goto LABEL_27;
LABEL_22:
        v41 += v42;
        if (!--v40)
        {
          swift_bridgeObjectRelease();
          v11 = v73;
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      v46 = (void (*)(_BYTE *, _QWORD))sub_22ABDE6D8();
      sub_22AA8F0C8(&v85, v77, v38);
      v11 = v73;
      v1 = v75;
      if (__swift_getEnumTagSinglePayload(v47, 1, v69))
      {
        OUTLINED_FUNCTION_43_8();
        OUTLINED_FUNCTION_2_1();
      }
      else
      {
        v48 = sub_22ABDE5E8();
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_16_23();
        v11 = v73;
        sub_22AA1DBF8(v48, v81, v82, v68, v65);
        OUTLINED_FUNCTION_2_1();
        sub_22ABDE5F4();
        OUTLINED_FUNCTION_43_8();
        swift_bridgeObjectRelease();
      }
      v46(v86, 0);
      v19 = v79;
      OUTLINED_FUNCTION_24_18(v75, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      v16 = v78;
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_25:
      v1 = v75;
      v16 = v78;
      v19 = v79;
      OUTLINED_FUNCTION_24_18(v75, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_2_1();
    }
  }
  swift_release();
  v50 = *(_QWORD *)(sub_22ABDE708() + 16);
  swift_bridgeObjectRelease();
  v84 = v50;
  if (!v50)
  {
LABEL_61:
    OUTLINED_FUNCTION_3();
    return;
  }
  v51 = 0;
  while (2)
  {
    v52 = sub_22ABDE708();
    if (v51 < *(_QWORD *)(v52 + 16))
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v71 + 16))(v70, v52+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(_QWORD *)(v71 + 72) * v51, v72);
      OUTLINED_FUNCTION_23();
      v53 = sub_22ABDE42C();
      v55 = v54;
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
      if (v53 == v81 && v55 == v82)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v57 = sub_22ABDFF68();
        OUTLINED_FUNCTION_23();
        if ((v57 & 1) == 0)
        {
LABEL_60:
          if (v84 == ++v51)
            goto LABEL_61;
          continue;
        }
      }
      OUTLINED_FUNCTION_60_5();
      v58 = (void (*)(_BYTE *, _QWORD))sub_22ABDE6FC();
      v60 = v59;
      v61 = *v59;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v60 = v61;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22AB5D7D8();
        v61 = v63;
        *v60 = v63;
      }
      if (v51 >= *(_QWORD *)(v61 + 16))
        goto LABEL_63;
      sub_22ABDE438();
      v58(v86, 0);
      goto LABEL_60;
    }
    break;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

void sub_22AA1F584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_4_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117D8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_87();
  v35 = v2;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_28_1();
  v39 = v4;
  v41 = sub_22ABDD478();
  v33 = *(_QWORD *)(v41 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_87();
  v32 = v6;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_28_1();
  v40 = v8;
  v36 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B117A8) - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v11 = v10;
  v38 = sub_22ABDDB38();
  v30 = *(_QWORD *)(v38 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_33();
  v15 = v14 - v13;
  sub_22ABDD1FC();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_6_26();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117E0);
  OUTLINED_FUNCTION_33_16();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_33();
  v20 = v19 - v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B117E8);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_23_8();
  v25 = v23 - v24;
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_28_1();
  v37 = v27;
  sub_22AA20488();
  sub_22ABDD448();
  sub_22ABDD1F0();
  sub_22AA204C4();
  sub_22ABDCFF8();
  OUTLINED_FUNCTION_38_14();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B8);
  sub_22A9C8D60(&qword_255B11800, &qword_255B117E0, MEMORY[0x24BDCC918]);
  sub_22ABDDB2C();
  OUTLINED_FUNCTION_24_18(v20, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v29 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v29(v15, v38);
  MEMORY[0x22E2E1714](v11, v28);
  sub_22A9C8D60(&qword_255B11808, &qword_255B117E8, MEMORY[0x24BEE5DA0]);
  sub_22ABDD448();
  v31 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v31(v25, v21);
  sub_22ABDD46C();
  sub_22AA20500();
  sub_22ABDD448();
  v34 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8);
  OUTLINED_FUNCTION_51(v32, v34);
  sub_22ABDD454();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_38_14();
  sub_22A9C8D60(qword_255B11818, &qword_255B117D8, MEMORY[0x24BEE7460]);
  sub_22ABDDB20();
  sub_22ABDDB14();
  OUTLINED_FUNCTION_2_24(v35);
  v29(v15, v38);
  OUTLINED_FUNCTION_38_14();
  sub_22ABDDB20();
  sub_22A9C8D60((unint64_t *)&qword_255B117C0, &qword_255B117A8, MEMORY[0x24BEE7460]);
  sub_22ABDDB14();
  OUTLINED_FUNCTION_2_24(v35);
  v29(v15, v38);
  OUTLINED_FUNCTION_51(v11, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
  OUTLINED_FUNCTION_2_24(v39);
  v34(v40, v41);
  v31(v37, v21);
  OUTLINED_FUNCTION_3();
}

void sub_22AA1FA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t i;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  OUTLINED_FUNCTION_4_4();
  v97 = v0;
  v4 = v3;
  OUTLINED_FUNCTION_51_12();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v85 = v6;
  v84 = sub_22ABDE450();
  v82 = *(_QWORD *)(v84 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v83 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_87();
  v81 = v10;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_28_1();
  v98 = v12;
  v99 = OUTLINED_FUNCTION_44_12();
  OUTLINED_FUNCTION_33_16();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  v17 = sub_22ABDE600();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_23_8();
  v21 = v19 - v20;
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_28_1();
  v90 = v23;
  v80 = v4;
  v24 = sub_22ABDE6E4();
  v86 = v24 + 64;
  v92 = v24;
  OUTLINED_FUNCTION_20_25();
  v28 = v27 & v26;
  v89 = (unint64_t)(v29 + 63) >> 6;
  v30 = *MEMORY[0x24BE63058];
  v96 = *MEMORY[0x24BE63060];
  v95 = v16;
  v87 = v18;
  v88 = v17;
  v91 = v21;
  if (!v28)
    goto LABEL_3;
LABEL_2:
  v93 = (v28 - 1) & v28;
  v94 = v25;
  for (i = __clz(__rbit64(v28)) | (v25 << 6); ; i = __clz(__rbit64(v33)) + (v34 << 6))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v90, *(_QWORD *)(v92 + 56) + *(_QWORD *)(v18 + 72) * i, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21, v90, v17);
    v40 = sub_22ABDE5E8();
    v41 = *(_QWORD *)(v40 + 16);
    if (v41)
    {
      v42 = v40 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v43 = *(_QWORD *)(v1 + 72);
      v2 = *(_QWORD *)(v1 + 16);
      do
      {
        ((void (*)(uint64_t, unint64_t, uint64_t))v2)(v16, v42, v99);
        v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v16, v99);
        if (v44 == (_DWORD)v30)
        {
          OUTLINED_FUNCTION_57_7(*(uint64_t (**)(uint64_t, _QWORD))(v1 + 96));
          v45 = *(_QWORD *)(v97 + 8);
          if (!*(_QWORD *)(v45 + 16))
            goto LABEL_53;
          sub_22ABDEAEC();
          v46 = sub_22AA03688();
          if ((v47 & 1) != 0)
          {
            v48 = *(_QWORD *)(v45 + 56);
            v49 = v48 + *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_3_35() - 8) + 72) * v46;
            v16 = v95;
            sub_22AA20444(v49, v98);
            v50 = v98;
            v51 = 0;
          }
          else
          {
            OUTLINED_FUNCTION_3_35();
            v50 = v98;
            v51 = 1;
          }
          OUTLINED_FUNCTION_57_3(v50, v51);
          OUTLINED_FUNCTION_2_1();
          OUTLINED_FUNCTION_3_35();
          OUTLINED_FUNCTION_0_7(v98);
          if (v52)
            goto LABEL_54;
          sub_22AA2038C(v98, &qword_255B117B0);
          OUTLINED_FUNCTION_2_1();
        }
        else
        {
          if (v44 != v96)
          {
            OUTLINED_FUNCTION_31_10();
            goto LABEL_57;
          }
          OUTLINED_FUNCTION_57_7(*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8));
        }
        v42 += v43;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      v18 = v87;
      v17 = v88;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v21 = v91;
    OUTLINED_FUNCTION_51(v91, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    v28 = v93;
    v25 = v94;
    if (v93)
      goto LABEL_2;
LABEL_3:
    v32 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v32 >= v89)
      goto LABEL_39;
    v33 = *(_QWORD *)(v86 + 8 * v32);
    v34 = v25 + 1;
    if (!v33)
    {
      OUTLINED_FUNCTION_56_10();
      if (v35 == v36)
        goto LABEL_39;
      OUTLINED_FUNCTION_54_7();
      if (!v33)
      {
        OUTLINED_FUNCTION_56_10();
        if (v35 == v36)
          goto LABEL_39;
        OUTLINED_FUNCTION_54_7();
        if (!v33)
        {
          OUTLINED_FUNCTION_56_10();
          if (v35 == v36)
            goto LABEL_39;
          OUTLINED_FUNCTION_54_7();
          if (!v33)
            break;
        }
      }
    }
LABEL_22:
    v93 = (v33 - 1) & v33;
    v94 = v34;
  }
  v38 = v37 + 4;
  if (v38 < v89)
  {
    v33 = *(_QWORD *)(v86 + 8 * v38);
    if (!v33)
    {
      while (!__OFADD__(v38, 1))
      {
        OUTLINED_FUNCTION_56_10();
        if (v35 == v36)
          goto LABEL_39;
        OUTLINED_FUNCTION_54_7();
        v38 = v39 + 1;
        if (v33)
          goto LABEL_22;
      }
LABEL_52:
      __break(1u);
LABEL_53:
      v74 = OUTLINED_FUNCTION_3_35();
      OUTLINED_FUNCTION_11_14(v98, v75, v76, v74);
LABEL_54:
      sub_22AA2038C(v98, &qword_255B117B0);
      OUTLINED_FUNCTION_15_22();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_21_24();
      goto LABEL_55;
    }
    v34 = v38;
    goto LABEL_22;
  }
LABEL_39:
  swift_release();
  v53 = *(_QWORD *)(sub_22ABDE708() + 16);
  OUTLINED_FUNCTION_53_11();
  if (v53)
  {
    v55 = v54 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
    v56 = *MEMORY[0x24BE631E8];
    v57 = *(_QWORD *)(v82 + 72);
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
    v59 = v84;
    v60 = v83;
    do
    {
      v58(v60, v55, v59);
      sub_22ABDE444();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v85, v30) == v56)
      {
        OUTLINED_FUNCTION_23_17(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
        swift_release();
        v61 = *(_QWORD *)(v97 + 8);
        v2 = sub_22ABDE42C();
        v30 = v62;
        if (!*(_QWORD *)(v61 + 16))
        {
          v77 = OUTLINED_FUNCTION_3_35();
          v67 = v81;
          OUTLINED_FUNCTION_11_14(v81, v78, v79, v77);
LABEL_59:
          sub_22AA2038C(v67, &qword_255B117B0);
          OUTLINED_FUNCTION_15_22();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_21_24();
LABEL_55:
          sub_22ABDEDC8();
          OUTLINED_FUNCTION_23_21();
          OUTLINED_FUNCTION_31_10();
LABEL_57:
          OUTLINED_FUNCTION_11_33();
          OUTLINED_FUNCTION_40_10();
        }
        sub_22ABDEAEC();
        v63 = sub_22AA03688();
        if ((v64 & 1) != 0)
        {
          v65 = *(_QWORD *)(v61 + 56);
          v66 = v65 + *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_3_35() - 8) + 72) * v63;
          v67 = v81;
          sub_22AA20444(v66, v81);
          v68 = v81;
          v69 = 0;
        }
        else
        {
          OUTLINED_FUNCTION_3_35();
          v67 = v81;
          v68 = v81;
          v69 = 1;
        }
        OUTLINED_FUNCTION_57_3(v68, v69);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_3_35();
        OUTLINED_FUNCTION_0_7(v67);
        if (v52)
          goto LABEL_59;
        sub_22AA2038C(v67, &qword_255B117B0);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v84);
        OUTLINED_FUNCTION_53_11();
      }
      else
      {
        OUTLINED_FUNCTION_24_18(v60, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
        OUTLINED_FUNCTION_23_17(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      }
      v55 += v57;
      --v53;
      v60 = v83;
      v59 = v84;
    }
    while (v53);
  }
  swift_bridgeObjectRelease();
  sub_22AA93BAC();
  v70 = *(_QWORD *)(*(_QWORD *)(v97 + 16) + 16);
  sub_22AA93C58(v70);
  v71 = *(_QWORD *)(v97 + 16);
  *(_QWORD *)(v71 + 16) = v70 + 1;
  sub_22ABDE714();
  OUTLINED_FUNCTION_55_0();
  (*(void (**)(uint64_t, uint64_t))(v73 + 16))(v71 + v72 + *(_QWORD *)(v73 + 72) * v70, v80);
  *(_QWORD *)(v97 + 16) = v71;
  OUTLINED_FUNCTION_3();
}

void sub_22AA20144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_4_4();
  v33 = v2;
  v29 = v3;
  v5 = v4;
  v6 = sub_22ABDE468();
  OUTLINED_FUNCTION_33_16();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_34();
  v8 = sub_22ABDE4F8();
  v34 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_19_19();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_51_12();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_0();
  v32 = v17;
  v30 = sub_22AB5E6BC(v33);
  v18 = *MEMORY[0x24BE630B8];
  v31 = v13;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v33 = v12;
  v20 = v12;
  v21 = v29;
  v19(v15, v18, v20);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v27 = v8;
    v28 = v5;
    v35 = MEMORY[0x24BEE4AF8];
    sub_22AB4D2B4();
    v23 = v35;
    v24 = v21 + 32;
    do
    {
      v24 += 8;
      sub_22ABDE45C();
      v35 = v23;
      v25 = *(_QWORD *)(v23 + 16);
      if (v25 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_22AB4D2B4();
        v23 = v35;
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 32))(v23+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v25, v1, v6);
      --v22;
    }
    while (v22);
    v8 = v27;
  }
  sub_22ABDE750();
  OUTLINED_FUNCTION_3_8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v33);
  sub_22ABDE4C8();
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v11, *MEMORY[0x24BE62F90], v8);
  sub_22ABDE51C();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA2038C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_55_9(*(_QWORD *)(v3 - 8));
  return a1;
}

uint64_t sub_22AA203C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TensorDescription();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA203FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B117C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA20444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TensorDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22AA20488()
{
  unint64_t result;

  result = qword_255B117F0;
  if (!qword_255B117F0)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE5E60], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255B117F0);
  }
  return result;
}

unint64_t sub_22AA204C4()
{
  unint64_t result;

  result = qword_255B117F8;
  if (!qword_255B117F8)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255B117F8);
  }
  return result;
}

unint64_t sub_22AA20500()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B11810;
  if (!qword_255B11810)
  {
    v1 = sub_22ABDD478();
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE5D78], v1);
    atomic_store(result, (unint64_t *)&qword_255B11810);
  }
  return result;
}

uint64_t *sub_22AA20540(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_22ABDE60C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_22ABDEAEC();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_22AA205D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22ABDE60C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_22AA20620(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_22ABDE60C();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  sub_22ABDEAEC();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_22AA20690(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22ABDE60C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_22AA20704(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_22ABDE60C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_22AA20760(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22ABDE60C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_22AA207CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA207D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_19_19();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22AA20848()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_22AA20854(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_19_19();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_22AA208BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDE60C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_35()
{
  return type metadata accessor for TensorDescription();
}

uint64_t OUTLINED_FUNCTION_7_31()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 64) = 0x20726F736E6554;
  *(_QWORD *)(v0 - 56) = 0xE700000000000000;
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_11_33()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_14_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_15_22()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0;
  *(_QWORD *)(v0 - 96) = 0xE000000000000000;
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_16_23()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_17_21(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA20444(v3 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v2, v1);
}

uint64_t OUTLINED_FUNCTION_19_19()
{
  return sub_22ABDE60C();
}

void OUTLINED_FUNCTION_21_24()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0x20726F736E6554;
  *(_QWORD *)(v0 - 96) = 0xE700000000000000;
}

uint64_t OUTLINED_FUNCTION_22_23()
{
  return swift_unexpectedError();
}

uint64_t OUTLINED_FUNCTION_23_21()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_24_18@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_28_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_13(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_22AA2038C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_38_14()
{
  return sub_22ABDD460();
}

void *OUTLINED_FUNCTION_39_12(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x70uLL);
}

void OUTLINED_FUNCTION_40_10()
{
  __break(1u);
}

unint64_t OUTLINED_FUNCTION_41_7()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_42_9@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_43_8()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 152, 0);
}

uint64_t OUTLINED_FUNCTION_44_12()
{
  return sub_22ABDE5C4();
}

uint64_t OUTLINED_FUNCTION_48_10@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

unint64_t OUTLINED_FUNCTION_49_9()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_51_12()
{
  return sub_22ABDE75C();
}

uint64_t OUTLINED_FUNCTION_55_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_57_7@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 112));
}

uint64_t OUTLINED_FUNCTION_59_5@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_22AA20B48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t DateFeatureExtractor.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_26_16();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void DateFeatureExtractor.features.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

uint64_t DateFeatureExtractor.init(features:calendar:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v9 = *a1;
  v10 = OUTLINED_FUNCTION_26_16();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a5, a2, v10);
  v13 = type metadata accessor for DateFeatureExtractor(0, a3, a4, v12);
  *(_QWORD *)(a5 + *(int *)(v13 + 36)) = v9;
  v16 = v9;
  v14 = sub_22AA20C98(&v16);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  *(_QWORD *)(a5 + *(int *)(v13 + 40)) = v14;
  return result;
}

uint64_t type metadata accessor for DateFeatureExtractor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DateFeatureExtractor);
}

uint64_t sub_22AA20C98(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_22ABDD238();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = *a1;
  v7 = MEMORY[0x24BEE4B08];
  if ((*a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_26(v4, *MEMORY[0x24BDCF260]);
    OUTLINED_FUNCTION_4_26();
    v4 = OUTLINED_FUNCTION_3_36();
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_5_26(v4, *MEMORY[0x24BDCF258]);
  OUTLINED_FUNCTION_4_26();
  v4 = OUTLINED_FUNCTION_3_36();
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  OUTLINED_FUNCTION_5_26(v4, *MEMORY[0x24BDCF230]);
  OUTLINED_FUNCTION_4_26();
  v4 = OUTLINED_FUNCTION_3_36();
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  OUTLINED_FUNCTION_5_26(v4, *MEMORY[0x24BDCF278]);
  OUTLINED_FUNCTION_4_26();
  v4 = OUTLINED_FUNCTION_3_36();
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  OUTLINED_FUNCTION_5_26(v4, *MEMORY[0x24BDCF220]);
  OUTLINED_FUNCTION_4_26();
  v4 = OUTLINED_FUNCTION_3_36();
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0)
      goto LABEL_8;
LABEL_17:
    OUTLINED_FUNCTION_5_26(v4, *MEMORY[0x24BDCF1E8]);
    OUTLINED_FUNCTION_4_26();
    v4 = OUTLINED_FUNCTION_3_36();
    if ((v5 & 0x100) == 0)
      return v7;
    goto LABEL_9;
  }
LABEL_16:
  OUTLINED_FUNCTION_5_26(v4, *MEMORY[0x24BDCF1F8]);
  OUTLINED_FUNCTION_4_26();
  v4 = OUTLINED_FUNCTION_3_36();
  if ((v5 & 0x80) != 0)
    goto LABEL_17;
LABEL_8:
  if ((v5 & 0x100) != 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_5_26(v4, *MEMORY[0x24BDCF250]);
    OUTLINED_FUNCTION_4_26();
    OUTLINED_FUNCTION_3_36();
  }
  return v7;
}

uint64_t DateFeatureExtractor.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  unsigned int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t result;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (**v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  void (*v77)(unsigned int *, uint64_t);
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int *v134;
  unsigned int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;

  v5 = v4;
  v143 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87();
  v130 = v9;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_12_0();
  v131 = v11;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_12_0();
  v132 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_12_0();
  v133 = v15;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_12_0();
  v137 = v17;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_12_0();
  v128 = v19;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_12_0();
  v129 = v21;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_12_0();
  v134 = v23;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_12_0();
  v135 = v25;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_12_0();
  v136 = v27;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_12_0();
  v142 = v29;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v127 - v31;
  v33 = sub_22ABDD238();
  v146 = *(_QWORD *)(v33 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_87();
  v145 = v35;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v127 - v37;
  v39 = sub_22ABDCFBC();
  v138 = *(_QWORD *)(v39 - 8);
  v139 = v39;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v40);
  v147 = a1;
  v148 = (char *)&v127 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ABDD214();
  v42 = sub_22ABDE9F0();
  v149 = v42;
  v144 = a4;
  v141 = *(int *)(a4 + 36);
  v43 = *(_QWORD *)(v5 + v141);
  v44 = (unsigned int *)MEMORY[0x24BDCF258];
  v140 = v5;
  if ((v43 & 1) != 0)
  {
    v45 = OUTLINED_FUNCTION_9_28((uint64_t)v38, *MEMORY[0x24BDCF260]);
    OUTLINED_FUNCTION_2_35(v45, *v44);
    OUTLINED_FUNCTION_0_28();
    OUTLINED_FUNCTION_12_28((uint64_t)v44);
    OUTLINED_FUNCTION_12_28((uint64_t)v38);
    result = sub_22ABDCFA4();
    if ((v47 & 1) != 0)
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    OUTLINED_FUNCTION_19_20();
    OUTLINED_FUNCTION_18_23(v48, v49, v50);
    v51 = v143;
    OUTLINED_FUNCTION_38_8(v142, (uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v143 + 16));
    OUTLINED_FUNCTION_8_27();
    OUTLINED_FUNCTION_6_36();
    v42 = OUTLINED_FUNCTION_35_6((uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
    v5 = v140;
    v43 = *(_QWORD *)(v140 + v141);
    v44 = (unsigned int *)MEMORY[0x24BDCF258];
  }
  v52 = (uint64_t (**)(uint64_t, uint64_t))MEMORY[0x24BDCF230];
  if ((v43 & 2) != 0)
  {
    v53 = OUTLINED_FUNCTION_7_32(v42, *v44);
    OUTLINED_FUNCTION_2_35(v53, *(unsigned int *)v52);
    v54 = OUTLINED_FUNCTION_0_28();
    v5 = v55;
    OUTLINED_FUNCTION_12_28((uint64_t)v44);
    OUTLINED_FUNCTION_12_28((uint64_t)v38);
    result = sub_22ABDCF98();
    if ((v56 & 1) != 0)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    OUTLINED_FUNCTION_19_20();
    v44 = (unsigned int *)v136;
    OUTLINED_FUNCTION_18_23(v57, v58, v59);
    OUTLINED_FUNCTION_11_34();
    OUTLINED_FUNCTION_8_27();
    OUTLINED_FUNCTION_6_36();
    OUTLINED_FUNCTION_35_6((uint64_t)v44, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
    OUTLINED_FUNCTION_17_22();
    v52 = (uint64_t (**)(uint64_t, uint64_t))MEMORY[0x24BDCF230];
  }
  if ((v43 & 4) != 0)
  {
    v60 = OUTLINED_FUNCTION_7_32(v42, *(unsigned int *)v52);
    OUTLINED_FUNCTION_2_35(v60, *MEMORY[0x24BDCF220]);
    OUTLINED_FUNCTION_0_28();
    OUTLINED_FUNCTION_1_24();
    OUTLINED_FUNCTION_12_28((uint64_t)v38);
    result = sub_22ABDCF80();
    if ((v61 & 1) != 0)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    OUTLINED_FUNCTION_19_20();
    v44 = v135;
    OUTLINED_FUNCTION_18_23(v62, v63, v64);
    OUTLINED_FUNCTION_11_34();
    OUTLINED_FUNCTION_8_27();
    OUTLINED_FUNCTION_6_36();
    OUTLINED_FUNCTION_35_6((uint64_t)v44, v52[1]);
    OUTLINED_FUNCTION_17_22();
  }
  if ((v43 & 8) != 0)
  {
    v65 = OUTLINED_FUNCTION_7_32(v42, *MEMORY[0x24BDCF278]);
    OUTLINED_FUNCTION_2_35(v65, *MEMORY[0x24BDCF250]);
    OUTLINED_FUNCTION_0_28();
    OUTLINED_FUNCTION_1_24();
    OUTLINED_FUNCTION_12_28((uint64_t)v38);
    result = sub_22ABDCFB0();
    if ((v66 & 1) != 0)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    OUTLINED_FUNCTION_19_20();
    v44 = v134;
    OUTLINED_FUNCTION_18_23(v67, v68, v69);
    OUTLINED_FUNCTION_11_34();
    OUTLINED_FUNCTION_8_27();
    OUTLINED_FUNCTION_6_36();
    OUTLINED_FUNCTION_35_6((uint64_t)v44, v52[1]);
    OUTLINED_FUNCTION_17_22();
  }
  if ((v43 & 0x10) == 0)
    goto LABEL_25;
  v70 = v146;
  v71 = OUTLINED_FUNCTION_9_28((uint64_t)v38, *MEMORY[0x24BDCF220]);
  OUTLINED_FUNCTION_2_35(v71, *MEMORY[0x24BDCF250]);
  v72 = OUTLINED_FUNCTION_0_28();
  v74 = v73;
  v76 = v75;
  v77 = *(void (**)(unsigned int *, uint64_t))(v70 + 8);
  v77(v44, v33);
  v77((unsigned int *)v38, v33);
  v78 = (v76 & 1) == 0;
  if ((v76 & 1) != 0)
    v79 = 32;
  else
    v79 = v74;
  if (v78)
    v80 = v72;
  else
    v80 = 1;
  result = sub_22ABDCF74();
  if ((v81 & 1) != 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v82 = __OFSUB__(result, v80);
  result -= v80;
  if (v82)
  {
    __break(1u);
    goto LABEL_39;
  }
  v83 = *(_QWORD *)(v144 + 24);
  result = OUTLINED_FUNCTION_24_19();
  v84 = v79 - v80;
  if (__OFSUB__(v79, v80))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  result = v84 - 1;
  if (__OFSUB__(v84, 1))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v85 = v142;
  OUTLINED_FUNCTION_24_19();
  v136 = v83;
  v44 = v128;
  v86 = v38;
  v87 = v137;
  sub_22ABDEB88();
  v88 = v143;
  OUTLINED_FUNCTION_21_25(v85);
  v89 = v87;
  v38 = v86;
  OUTLINED_FUNCTION_21_25(v89);
  sub_22ABDEA80();
  v90 = v129;
  sub_22ABDFAF4();
  OUTLINED_FUNCTION_21_25(v85);
  OUTLINED_FUNCTION_21_25((uint64_t)v44);
  OUTLINED_FUNCTION_38_8(v85, v90, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 16));
  OUTLINED_FUNCTION_8_27();
  sub_22ABDF0C8();
  v42 = OUTLINED_FUNCTION_21_25(v90);
  v5 = v140;
  v43 = *(_QWORD *)(v140 + v141);
LABEL_25:
  if ((v43 & 0x20) == 0)
    goto LABEL_28;
  v91 = v5;
  v92 = *MEMORY[0x24BDCF220];
  v93 = *(void (**)(char *, uint64_t, uint64_t))(v146 + 104);
  v93(v38, v92, v33);
  v44 = v145;
  OUTLINED_FUNCTION_22_24();
  v136 = sub_22ABDD220();
  v137 = v94;
  LODWORD(v135) = v95;
  OUTLINED_FUNCTION_23_22((uint64_t)v44);
  OUTLINED_FUNCTION_23_22((uint64_t)v38);
  v96 = v92;
  v97 = v91;
  v93(v38, v96, v33);
  OUTLINED_FUNCTION_22_24();
  v98 = sub_22ABDD208();
  v100 = v99;
  OUTLINED_FUNCTION_23_22((uint64_t)v44);
  result = OUTLINED_FUNCTION_23_22((uint64_t)v38);
  if ((v100 & 1) != 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  OUTLINED_FUNCTION_19_20();
  v101 = v142;
  OUTLINED_FUNCTION_18_23(v98, v102, v103);
  v104 = v143;
  OUTLINED_FUNCTION_38_8(v133, v101, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v143 + 16));
  OUTLINED_FUNCTION_8_27();
  sub_22ABDF0C8();
  v42 = OUTLINED_FUNCTION_35_6(v101, *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8));
  v43 = *(_QWORD *)(v97 + v141);
LABEL_28:
  if ((v43 & 0x40) == 0)
    goto LABEL_31;
  v105 = OUTLINED_FUNCTION_7_32(v42, *MEMORY[0x24BDCF1F8]);
  OUTLINED_FUNCTION_2_35(v105, *MEMORY[0x24BDCF250]);
  OUTLINED_FUNCTION_0_28();
  OUTLINED_FUNCTION_1_24();
  OUTLINED_FUNCTION_12_28((uint64_t)v38);
  result = sub_22ABDCF68();
  if ((v106 & 1) != 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  OUTLINED_FUNCTION_19_20();
  v107 = v132;
  OUTLINED_FUNCTION_18_23(v108, v109, v110);
  v111 = v143;
  OUTLINED_FUNCTION_38_8(v142, v107, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v143 + 16));
  OUTLINED_FUNCTION_8_27();
  OUTLINED_FUNCTION_6_36();
  OUTLINED_FUNCTION_35_6(v107, *(uint64_t (**)(uint64_t, uint64_t))(v111 + 8));
  OUTLINED_FUNCTION_17_22();
LABEL_31:
  if ((v43 & 0x80) != 0)
  {
    v112 = OUTLINED_FUNCTION_7_32(v42, *MEMORY[0x24BDCF1E8]);
    OUTLINED_FUNCTION_2_35(v112, *MEMORY[0x24BDCF240]);
    OUTLINED_FUNCTION_0_28();
    OUTLINED_FUNCTION_1_24();
    OUTLINED_FUNCTION_12_28((uint64_t)v38);
    result = sub_22ABDCF5C();
    if ((v113 & 1) == 0)
    {
      OUTLINED_FUNCTION_19_20();
      v114 = v131;
      OUTLINED_FUNCTION_18_23(v115, v116, v117);
      v118 = v143;
      OUTLINED_FUNCTION_38_8(v142, v114, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v143 + 16));
      OUTLINED_FUNCTION_8_27();
      OUTLINED_FUNCTION_6_36();
      OUTLINED_FUNCTION_35_6(v114, *(uint64_t (**)(uint64_t, uint64_t))(v118 + 8));
      OUTLINED_FUNCTION_17_22();
      goto LABEL_34;
    }
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
LABEL_34:
  if ((v43 & 0x100) == 0)
  {
LABEL_37:
    (*(void (**)(char *, uint64_t))(v138 + 8))(v148, v139);
    return v149;
  }
  v119 = OUTLINED_FUNCTION_9_28((uint64_t)v38, *MEMORY[0x24BDCF250]);
  OUTLINED_FUNCTION_2_35(v119, *MEMORY[0x24BDCF240]);
  OUTLINED_FUNCTION_0_28();
  v121 = v120;
  OUTLINED_FUNCTION_12_28((uint64_t)v44);
  OUTLINED_FUNCTION_12_28((uint64_t)v38);
  result = sub_22ABDCF8C();
  if ((v122 & 1) == 0)
  {
    OUTLINED_FUNCTION_19_20();
    v123 = v130;
    OUTLINED_FUNCTION_18_23(v124, v125, v126);
    OUTLINED_FUNCTION_11_34();
    OUTLINED_FUNCTION_8_27();
    OUTLINED_FUNCTION_6_36();
    OUTLINED_FUNCTION_35_6(v123, *(uint64_t (**)(uint64_t, uint64_t))(v121 + 8));
    goto LABEL_37;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_22AA21728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v18 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v18 - v12;
  v15 = __OFSUB__(v11, v14);
  result = v11 - v14;
  if (v15)
  {
    __break(1u);
    goto LABEL_6;
  }
  result = OUTLINED_FUNCTION_29_15();
  v17 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = v17 - 1;
  if (!__OFSUB__(v17, 1))
  {
    OUTLINED_FUNCTION_29_15();
    sub_22ABDEB88();
    OUTLINED_FUNCTION_25_15((uint64_t)v7);
    OUTLINED_FUNCTION_25_15((uint64_t)v10);
    sub_22ABDEA80();
    sub_22ABDFAF4();
    OUTLINED_FUNCTION_25_15((uint64_t)v10);
    return OUTLINED_FUNCTION_25_15((uint64_t)v13);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_22AA21884(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *a1 = DateFeatureExtractor.applied(to:eventHandler:)(a2, a2, a3, a5);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v5 + 8));
}

void DateFeatureExtractor.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22 = a4;
  sub_22ABDD244();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a2;
  v21 = a3;
  v12 = type metadata accessor for DateFeatureExtractor.CodingKeys(255, a2, a3, v11);
  MEMORY[0x22E2E4D80](&unk_22ABEF690, v12);
  v24 = sub_22ABDFCB0();
  v13 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v15 = (char *)&v21 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE0298();
  if (!v4)
  {
    v16 = v13;
    v17 = (uint64_t)v10;
    v18 = v22;
    v19 = v23;
    sub_22AA22140();
    v20 = v24;
    sub_22ABDFC8C();
    sub_22ABDD22C();
    DateFeatureExtractor.init(features:calendar:)(&v25, v17, v19, v21, v18);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v20);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_16();
}

void DateFeatureExtractor.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[4];

  v6 = type metadata accessor for DateFeatureExtractor.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x22E2E4D80](&unk_22ABEF690, v6);
  v7 = sub_22ABDFD58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v11 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v11[3] = *(_QWORD *)(v11[0] + *(int *)(a2 + 36));
  sub_22AA2217C();
  sub_22ABDFD4C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  OUTLINED_FUNCTION_16();
}

BOOL sub_22AA21B7C()
{
  uint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_22AA21BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&unk_22ABEF5F0, a3);
  return sub_22ABDFFF8();
}

uint64_t sub_22AA21C18(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEF5F0, a1);
  return sub_22ABDEF9C();
}

uint64_t sub_22AA21C64()
{
  MEMORY[0x22E2E4D80](&unk_22ABEF5F0);
  return sub_22ABDEFB4();
}

uint64_t sub_22AA21CB4()
{
  MEMORY[0x22E2E4D80](&unk_22ABEF5F0);
  return sub_22ABDEFA8();
}

BOOL sub_22AA21D04@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_22AA21B7C();
  *a1 = result;
  return result;
}

void sub_22AA21D38(_QWORD *a1@<X8>)
{
  *a1 = 0x7365727574616566;
  a1[1] = 0xE800000000000000;
}

uint64_t OUTLINED_FUNCTION_12_27()
{
  return 0x7365727574616566;
}

uint64_t sub_22AA21D6C@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA21BC0();
  *a1 = result != 0;
  return result;
}

uint64_t sub_22AA21D98(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEF690, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA21DCC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEF690, a1);
  return sub_22ABE02F8();
}

void sub_22AA21E00(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  DateFeatureExtractor.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

void sub_22AA21E1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  DateFeatureExtractor.encode(to:)(a1, a2, a3, a4);
}

uint64_t DateFeatures.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DateFeatures.rawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DateFeatures.rawValue.modify())()
{
  return nullsub_1;
}

CreateMLComponents::DateFeatures __swiftcall DateFeatures.init(rawValue:)(CreateMLComponents::DateFeatures rawValue)
{
  CreateMLComponents::DateFeatures *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static DateFeatures.second.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void static DateFeatures.minute.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void static DateFeatures.hour.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void static DateFeatures.weekday.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void static DateFeatures.day.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void static DateFeatures.dayOfYear.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void static DateFeatures.weekOfMonth.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void static DateFeatures.weekOfYear.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void static DateFeatures.month.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_14_26(a1);
}

void sub_22AA21EA0()
{
  sub_22ABC4A3C();
}

void sub_22AA21EA8()
{
  sub_22ABC504C();
}

void sub_22AA21EB0()
{
  sub_22ABC5164();
}

CreateMLComponents::DateFeatures sub_22AA21EB8(Swift::Int *a1)
{
  return DateFeatures.init(rawValue:)(*a1);
}

CreateMLComponents::DateFeatures sub_22AA21EC0@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  CreateMLComponents::DateFeatures result;

  result.rawValue = DateFeatures.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_22AA21EE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateFeatures.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22AA21F0C()
{
  sub_22AA221FC();
  return sub_22ABDEFCC();
}

uint64_t sub_22AA21F68()
{
  sub_22AA221FC();
  return sub_22ABDEF90();
}

uint64_t sub_22AA21FB8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_22AA21FC4(*a1, *v2, a2);
}

uint64_t sub_22AA21FC4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 | result;
  return result;
}

uint64_t sub_22AA21FD0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_22AA21FDC(*a1, *v2, a2);
}

uint64_t sub_22AA21FDC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t sub_22AA21FE8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_22AA21FF4(*a1, *v2, a2);
}

uint64_t sub_22AA21FF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

BOOL sub_22AA22000(_QWORD *a1, uint64_t *a2)
{
  return sub_22AA22008(a1, *a2);
}

BOOL sub_22AA22008(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_22AA22034@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AA2203C(*a1, a2);
}

uint64_t sub_22AA2203C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & result;
  if (v3)
    *v2 &= ~result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t sub_22AA22064@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AA2206C(*a1, a2);
}

uint64_t sub_22AA2206C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  *v2 |= result;
  v4 = v3 & result;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v4 == 0;
  return result;
}

uint64_t sub_22AA2208C(uint64_t *a1)
{
  return sub_22AA22094(*a1);
}

uint64_t sub_22AA22094(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_22AA220A4(uint64_t *a1)
{
  return sub_22AA220AC(*a1);
}

uint64_t sub_22AA220AC(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_22AA220BC(uint64_t *a1)
{
  return sub_22AA220C4(*a1);
}

uint64_t sub_22AA220C4(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_22AA220D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_22AA220E0(*a1, *v2, a2);
}

uint64_t sub_22AA220E0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & ~result;
  return result;
}

BOOL sub_22AA220EC(uint64_t *a1)
{
  uint64_t *v1;

  return sub_22AA220F8(*a1, *v1);
}

BOOL sub_22AA220F8(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_22AA22104(uint64_t *a1)
{
  uint64_t *v1;

  return sub_22AA22110(*a1, *v1);
}

BOOL sub_22AA22110(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_22AA2211C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_22AA22128(*a1, *v1);
}

BOOL sub_22AA22128(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t type metadata accessor for DateFeatureExtractor.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DateFeatureExtractor.CodingKeys);
}

unint64_t sub_22AA22140()
{
  unint64_t result;

  result = qword_255B118B0;
  if (!qword_255B118B0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DateFeatures, &type metadata for DateFeatures);
    atomic_store(result, (unint64_t *)&qword_255B118B0);
  }
  return result;
}

unint64_t sub_22AA2217C()
{
  unint64_t result;

  result = qword_255B118B8[0];
  if (!qword_255B118B8[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DateFeatures, &type metadata for DateFeatures);
    atomic_store(result, qword_255B118B8);
  }
  return result;
}

unint64_t sub_22AA221BC()
{
  unint64_t result;

  result = qword_255B118E8;
  if (!qword_255B118E8)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DateFeatures, &type metadata for DateFeatures);
    atomic_store(result, (unint64_t *)&qword_255B118E8);
  }
  return result;
}

unint64_t sub_22AA221FC()
{
  unint64_t result;

  result = qword_255B118F0;
  if (!qword_255B118F0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DateFeatures, &type metadata for DateFeatures);
    atomic_store(result, (unint64_t *)&qword_255B118F0);
  }
  return result;
}

unint64_t sub_22AA2223C()
{
  unint64_t result;

  result = qword_255B118F8;
  if (!qword_255B118F8)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DateFeatures, &type metadata for DateFeatures);
    atomic_store(result, (unint64_t *)&qword_255B118F8);
  }
  return result;
}

unint64_t sub_22AA2227C()
{
  unint64_t result;

  result = qword_255B11900[0];
  if (!qword_255B11900[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DateFeatures, &type metadata for DateFeatures);
    atomic_store(result, qword_255B11900);
  }
  return result;
}

BOOL sub_22AA222B8()
{
  uint64_t *v0;

  return sub_22AA222C0(*v0);
}

BOOL sub_22AA222C0(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_22AA222CC()
{
  return sub_22ABDF6F8();
}

uint64_t sub_22AA222E4(uint64_t *a1)
{
  return sub_22AA222EC(*a1);
}

uint64_t sub_22AA222EC(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

uint64_t sub_22AA22300()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD244();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22AA22384(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD244();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 40);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    sub_22ABDEAEC();
  }
  return a1;
}

uint64_t sub_22AA22418(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22ABDD244();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA2245C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDD244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 40);
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA224C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA2253C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDD244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 40);
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_22AA225A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDD244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 40);
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA2260C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA22618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_26_16();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_22AA2268C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA22698(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_26_16();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for DateFeatures()
{
  return &type metadata for DateFeatures;
}

uint64_t sub_22AA22718(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22AA22758 + 4 * asc_22ABEF2A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22AA22778 + 4 * byte_22ABEF2A5[v4]))();
}

_BYTE *sub_22AA22758(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22AA22778(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA22780(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA22788(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA22790(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA22798(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_22AA227A4()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA227B4()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA227C4()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return sub_22ABDD220();
}

uint64_t OUTLINED_FUNCTION_2_35(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(*(_QWORD *)(v4 - 128), a2, v3);
}

uint64_t OUTLINED_FUNCTION_3_36()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_26()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22AB472A0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_6_36()
{
  return sub_22ABDF0C8();
}

uint64_t OUTLINED_FUNCTION_7_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 120) + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_8_27()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_9_28(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_11_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 16))(*(_QWORD *)(v2 - 152), v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_28(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_14_26(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_18_23(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA21728(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_21_25(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_22_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v0, v1, v3);
}

uint64_t OUTLINED_FUNCTION_23_22(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_24_19()
{
  return sub_22ABDEBDC();
}

uint64_t OUTLINED_FUNCTION_25_15(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_26_16()
{
  return sub_22ABDD244();
}

uint64_t OUTLINED_FUNCTION_29_15()
{
  return sub_22ABDEBDC();
}

uint64_t sub_22AA228FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A18);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v20 = v1;
    v22 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    v12 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v21 = *(_QWORD *)(v4 + 72);
    do
    {
      v13 = *(int *)(v3 + 48);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
      v15 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, v12, v14);
      v16 = *(_QWORD *)(v12 + v13);
      *(_QWORD *)&v9[v13] = v16;
      v17 = *(int *)(v3 + 48);
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v9, v14);
      *(_QWORD *)&v7[v17] = v16;
      sub_22A9CF82C((uint64_t)v7, &qword_255B11A18);
      v11 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4CE30();
        v11 = v22;
      }
      v18 = *(_QWORD *)(v11 + 16);
      if (v18 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_22AB4CE30();
        v11 = v22;
      }
      *(_QWORD *)(v11 + 16) = v18 + 1;
      *(_QWORD *)(v11 + 8 * v18 + 32) = v16;
      v12 += v21;
      --v10;
    }
    while (v10);
  }
  return v11;
}

void sub_22AA22AC8(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  char v93;
  unint64_t v94;
  char v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD v107[2];
  uint64_t v108;
  char *v109;
  char *v110;
  _OWORD *v111;
  char *v112;
  int *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t (*v130)(char *, uint64_t);
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A38);
  v115 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v134 = (uint64_t)v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v118 = (char *)v107 - v9;
  v10 = sub_22ABDD4F0();
  v126 = *(_QWORD *)(v10 - 8);
  v127 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v125 = (char *)v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v124 = *(_QWORD *)(v137 - 8);
  v12 = MEMORY[0x24BDAC7A8](v137);
  v117 = (char *)v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v136 = (char *)v107 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v110 = (char *)v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v142 = (uint64_t)v107 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v116 = (uint64_t)v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v120 = (char *)v107 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v122 = (char *)v107 - v27;
  v144 = sub_22ABDDA0C();
  v121 = *(_QWORD *)(v144 - 8);
  v28 = MEMORY[0x24BDAC7A8](v144);
  v123 = (char *)v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v109 = (char *)v107 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v141 = (char *)v107 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v128 = (char *)v107 - v34;
  v35 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B11A20);
  v36 = a3 + v35[13];
  v37 = sub_22ABDD5D4();
  __swift_storeEnumTagSinglePayload(v36, 1, 1, v37);
  v119 = v6;
  v38 = sub_22ABDEAC8();
  v133 = v35[16];
  *(_QWORD *)(a3 + v133) = v38;
  v39 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  *(_QWORD *)a3 = sub_22ABDD760();
  *(_OWORD *)(a3 + 8) = *a2;
  sub_22AA254C4((uint64_t)a2 + v39[12], v36);
  *(_DWORD *)(a3 + v35[14]) = *(_DWORD *)((char *)a2 + v39[13]);
  *(_DWORD *)(a3 + v35[15]) = *(_DWORD *)((char *)a2 + v39[14]);
  v135 = a3;
  if (*(uint64_t *)a3 < 2)
  {
    sub_22A9CF82C((uint64_t)a2, &qword_255B0F3D8);
    sub_22A9C6CFC(a1);
    return;
  }
  type metadata accessor for LSTMFCN(0);
  sub_22A9C6C74();
  v108 = a1;
  v40 = sub_22ABDD814();
  v41 = *(_QWORD *)(v40 + 16);
  v107[1] = v40;
  if (!v41)
  {
LABEL_20:
    sub_22A9CF82C((uint64_t)a2, &qword_255B0F3D8);
    sub_22A9C6CFC(v108);
    swift_bridgeObjectRelease();
    return;
  }
  v113 = v39;
  v114 = (char *)a2 + v39[16];
  v42 = (_QWORD *)(v40 + 48);
  v111 = a2;
  v112 = v17;
  v43 = v121;
  v44 = v128;
  v45 = (uint64_t)v122;
  while (1)
  {
    v46 = *(v42 - 1);
    v140 = *(v42 - 2);
    v132 = v42;
    v47 = *v42;
    v143 = v46;
    sub_22ABDEAEC();
    swift_retain();
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    sub_22ABDD664();
    if (__swift_getEnumTagSinglePayload(v45, 1, v144) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22A9CF82C(v45, &qword_255B0DAB8);
      sub_22A9A0888();
      v103 = swift_allocError();
      *v104 = 0xD000000000000025;
      v104[1] = 0x800000022ABE1130;
      swift_willThrow(v103);
      swift_release();
      sub_22A9CF82C((uint64_t)a2, &qword_255B0F3D8);
      sub_22A9C6CFC(v108);
LABEL_24:
      sub_22A9CF82C(v135, &qword_255B11A20);
      return;
    }
    v131 = v41;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
    v50 = v144;
    v49(v44, v45, v144);
    v51 = v47;
    v52 = v113;
    v53 = (uint64_t)v120;
    v138 = v51;
    sub_22ABDD664();
    if (__swift_getEnumTagSinglePayload(v53, 1, v50) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22A9CF82C(v53, &qword_255B0DAB8);
      sub_22A9A0888();
      v105 = swift_allocError();
      *v106 = 0xD000000000000025;
      v106[1] = 0x800000022ABE1130;
      swift_willThrow(v105);
      swift_release();
      sub_22A9CF82C((uint64_t)a2, &qword_255B0F3D8);
      sub_22A9C6CFC(v108);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v144);
      goto LABEL_24;
    }
    v49(v141, v53, v144);
    __swift_storeEnumTagSinglePayload(v142, 1, 1, v137);
    v54 = (uint64_t)a2 + v52[18];
    v55 = (uint64_t)v112;
    sub_22A9CF800(v54, (uint64_t)v112, qword_255B0F420);
    if (__swift_getEnumTagSinglePayload(v55, 1, v48) == 1)
    {
      sub_22A9CF82C(v55, qword_255B0F420);
      v56 = v116;
      __swift_storeEnumTagSinglePayload(v116, 1, 1, v144);
LABEL_9:
      sub_22A9CF82C(v56, &qword_255B0DAB8);
      v57 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      goto LABEL_11;
    }
    v56 = v116;
    sub_22ABDD664();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v55, v48);
    if (__swift_getEnumTagSinglePayload(v56, 1, v144) == 1)
      goto LABEL_9;
    v58 = v109;
    v59 = v144;
    v49(v109, v56, v144);
    v57 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    v60 = v123;
    v57(v123, v58, v59);
    v61 = v125;
    sub_22ABDD964();
    sub_22ABDD4E4();
    v62 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v61, v127);
    MEMORY[0x24BDAC7A8](v62);
    v107[-2] = v60;
    v63 = v136;
    v64 = v139;
    sub_22ABDE81C();
    v139 = v64;
    v65 = *(void (**)(char *, uint64_t))(v43 + 8);
    v65(v60, v59);
    v66 = (uint64_t)v110;
    v67 = v137;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v110, v63, v137);
    v65(v58, v59);
    v68 = v142;
    sub_22A9CF82C(v142, &qword_2540E8570);
    __swift_storeEnumTagSinglePayload(v66, 0, 1, v67);
    v69 = v66;
    v44 = v128;
    sub_22AA2550C(v69, v68, &qword_2540E8570);
LABEL_11:
    v70 = v43;
    v129 = v57;
    v71 = v123;
    v72 = v144;
    v57(v123, v44, v144);
    v73 = v125;
    sub_22ABDD964();
    sub_22ABDD4E4();
    v74 = v127;
    v130 = *(uint64_t (**)(char *, uint64_t))(v126 + 8);
    v75 = v130(v73, v127);
    MEMORY[0x24BDAC7A8](v75);
    v107[-2] = v71;
    v76 = v117;
    v77 = v139;
    sub_22ABDE81C();
    v139 = v77;
    v78 = *(void (**)(char *, uint64_t))(v70 + 8);
    v78(v71, v72);
    v79 = *(void (**)(char *, char *, uint64_t))(v124 + 32);
    v80 = v137;
    v79(v136, v76, v137);
    v129(v71, v141, v72);
    sub_22ABDD964();
    sub_22ABDD4E4();
    v81 = v130(v73, v74);
    MEMORY[0x24BDAC7A8](v81);
    v107[-2] = v71;
    v82 = v139;
    sub_22ABDE81C();
    v83 = v78;
    v78(v71, v72);
    v84 = v119;
    v85 = (uint64_t)v118;
    v79(&v118[*(int *)(v119 + 36)], v76, v80);
    sub_22A9CF800(v142, v85 + *(int *)(v84 + 40), &qword_2540E8570);
    v79((char *)v85, v136, v80);
    sub_22AA2550C(v85, v134, &qword_255B11A38);
    v86 = v135;
    v87 = v133;
    swift_isUniquelyReferenced_nonNull_native();
    v145 = *(_QWORD **)(v86 + v87);
    v88 = v145;
    *(_QWORD *)(v86 + v87) = 0x8000000000000000;
    v89 = sub_22AA03688();
    if (__OFADD__(v88[2], (v90 & 1) == 0))
      break;
    v91 = v89;
    v92 = v90;
    __swift_instantiateConcreteTypeFromMangledName(qword_255B11A40);
    v93 = sub_22ABDFA64();
    v44 = v128;
    v45 = (uint64_t)v122;
    if ((v93 & 1) != 0)
    {
      v94 = sub_22AA03688();
      if ((v92 & 1) != (v95 & 1))
        goto LABEL_27;
      v91 = v94;
    }
    v96 = v145;
    v139 = v82;
    if ((v92 & 1) != 0)
    {
      sub_22A9D0108(v134, v145[7] + *(_QWORD *)(v115 + 72) * v91, &qword_255B11A38);
    }
    else
    {
      v145[(v91 >> 6) + 8] |= 1 << v91;
      v97 = (_QWORD *)(v96[6] + 16 * v91);
      v98 = v143;
      *v97 = v140;
      v97[1] = v98;
      sub_22AA2550C(v134, v96[7] + *(_QWORD *)(v115 + 72) * v91, &qword_255B11A38);
      v99 = v96[2];
      v100 = __OFADD__(v99, 1);
      v101 = v99 + 1;
      if (v100)
        goto LABEL_26;
      v96[2] = v101;
      sub_22ABDEAEC();
    }
    *(_QWORD *)(v135 + v133) = v96;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22A9CF82C(v142, &qword_2540E8570);
    v102 = v144;
    v83(v141, v144);
    v83(v44, v102);
    v42 = v132 + 3;
    v41 = v131 - 1;
    a2 = v111;
    v43 = v121;
    if (v131 == 1)
      goto LABEL_20;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  sub_22ABE0190();
  __break(1u);
}

uint64_t sub_22AA23764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = sub_22ABDE84C();
  if (!*(_QWORD *)(v7 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(v7 + 32);
  swift_bridgeObjectRelease();
  v9 = OUTLINED_FUNCTION_14_27();
  if (!*(_QWORD *)(v9 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRelease();
  if (v8 == v10)
  {
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v13(a3, a1, v6);
    v11 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B11A10) + 36);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v11, a2, v6);
  }
LABEL_7:
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

void TimeSeriesClassifier.makeTransformer()(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1[3];
  v2 = a1[6];
  v3 = a1[9];
  v4 = sub_22ABDEAEC();
  sub_22AB593D0(v4, v1, v2, v3);
  sub_22A9C4C88();
}

uint64_t TimeSeriesClassifier.update<A>(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  *(_QWORD *)(v8 + 320) = a6;
  *(_QWORD *)(v8 + 328) = a7;
  *(_QWORD *)(v8 + 304) = a4;
  *(_QWORD *)(v8 + 312) = a5;
  *(_QWORD *)(v8 + 288) = a2;
  *(_QWORD *)(v8 + 296) = a3;
  *(_QWORD *)(v8 + 280) = a1;
  v11 = sub_22ABDDA0C();
  *(_QWORD *)(v8 + 336) = v11;
  *(_QWORD *)(v8 + 344) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 352) = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10218);
  *(_QWORD *)(v8 + 360) = OUTLINED_FUNCTION_0_0();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  *(_QWORD *)(v8 + 368) = v12;
  *(_QWORD *)(v8 + 376) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 384) = OUTLINED_FUNCTION_2_21();
  *(_QWORD *)(v8 + 392) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v8 + 400) = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A10);
  *(_QWORD *)(v8 + 408) = OUTLINED_FUNCTION_2_21();
  *(_QWORD *)(v8 + 416) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v8 + 424) = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B11A18) - 8);
  *(_QWORD *)(v8 + 432) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v8 + 440) = a5[2];
  *(_QWORD *)(v8 + 448) = a5[4];
  v13 = sub_22ABDE8A0();
  *(_QWORD *)(v8 + 456) = v13;
  v14 = a5[3];
  *(_QWORD *)(v8 + 464) = v14;
  v16 = type metadata accessor for AnnotatedFeature(255, v13, v14, v15);
  *(_QWORD *)(v8 + 472) = v16;
  v17 = sub_22ABDF5D8();
  *(_QWORD *)(v8 + 480) = v17;
  *(_QWORD *)(v8 + 488) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v8 + 496) = OUTLINED_FUNCTION_2_21();
  *(_QWORD *)(v8 + 504) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v8 + 512) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v8 + 520) = swift_task_alloc();
  *(_QWORD *)(v8 + 528) = swift_task_alloc();
  *(_QWORD *)(v8 + 536) = *(_QWORD *)(a6 - 8);
  *(_QWORD *)(v8 + 544) = OUTLINED_FUNCTION_0_0();
  v18 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v8 + 552) = *(_OWORD *)v7;
  *(_OWORD *)(v8 + 568) = v18;
  *(_DWORD *)(v8 + 612) = *(_DWORD *)(v7 + 32);
  *(_QWORD *)(v8 + 584) = *(_QWORD *)(v7 + 40);
  *(_DWORD *)(v8 + 616) = *(_DWORD *)(v7 + 48);
  *(_QWORD *)(v8 + 592) = *(_QWORD *)(v7 + 56);
  *(_BYTE *)(v8 + 620) = *(_BYTE *)(v7 + 64);
  *(_QWORD *)(v8 + 600) = *(_QWORD *)(v7 + 72);
  return swift_task_switch();
}

uint64_t sub_22AA23AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 472);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 536) + 16))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 320));
  v3 = sub_22ABDF11C();
  *(_QWORD *)(v0 + 256) = v3;
  v4 = sub_22ABDF0F8();
  v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v4);
  sub_22ABDF404();
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    OUTLINED_FUNCTION_27_7();
    v6 = OUTLINED_FUNCTION_20_26();
    v7(v6);
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_24_12();
    *v8 = v9;
    v8[1] = 0x800000022ABE2ED0;
    v8[2] = 0;
    v8[3] = 0;
    OUTLINED_FUNCTION_2_36(v10, (uint64_t)v8, 2);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 32))(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 472));
    v11 = *(_QWORD *)(sub_22ABDE84C() + 16);
    swift_bridgeObjectRelease();
    if (v11 == 2)
    {
      v12 = sub_22ABDE84C();
      if (!*(_QWORD *)(v12 + 16))
      {
        __break(1u);
        JUMPOUT(0x22AA24AD0);
      }
      v13 = *(_QWORD *)(v0 + 552);
      v14 = *(_QWORD *)(v12 + 32);
      swift_bridgeObjectRelease();
      if (v14 >= v13)
      {
        v51 = v0 + 200;
        v30 = *(_QWORD *)(v0 + 464);
        v48 = *(_QWORD *)(v0 + 456);
        v49 = v5;
        v31 = *(_QWORD *)(v0 + 448);
        v50 = v0;
        v32 = *(_QWORD *)(v0 + 440);
        v33 = *(_QWORD *)(v0 + 328);
        v47 = *(_QWORD *)(v0 + 320);
        v34 = *(_QWORD **)(v0 + 312);
        OUTLINED_FUNCTION_7_33(*(_QWORD *)(v0 + 600), *(float *)(v0 + 616), *(float *)(v0 + 612), *(__n128 *)(v0 + 552), *(__n128 *)(v0 + 568));
        *(_QWORD *)(v0 + 240) = v3;
        v35 = (_QWORD *)OUTLINED_FUNCTION_113();
        *v35 = v32;
        v35[1] = v30;
        v35[2] = v47;
        v35[3] = v31;
        v36 = v34[5];
        v35[4] = v36;
        v37 = v34[6];
        v35[5] = v37;
        v38 = v34[7];
        v35[6] = v38;
        v39 = v34[8];
        v35[7] = v39;
        v40 = v34[9];
        v35[8] = v40;
        v35[9] = v33;
        KeyPath = swift_getKeyPath();
        OUTLINED_FUNCTION_31();
        v42 = (_QWORD *)OUTLINED_FUNCTION_113();
        v42[2] = v47;
        v42[3] = v36;
        v42[4] = v37;
        v42[5] = v38;
        v42[6] = v39;
        v42[7] = v40;
        v42[8] = v33;
        v42[9] = KeyPath;
        v44 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA253C8, (uint64_t)v42, v4, v48, MEMORY[0x24BEE4078], v49, MEMORY[0x24BEE40A8], v43);
        swift_release();
        OUTLINED_FUNCTION_11_3();
        *(_QWORD *)(v50 + 200) = v44;
        v45 = sub_22ABDF0F8();
        v46 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v45);
        sub_22AB9F39C(v51, v34, v45, v46);
      }
      v15 = *(_QWORD *)(v0 + 552);
      v16 = *(_QWORD *)(v0 + 528);
      v17 = *(_QWORD *)(v0 + 512);
      v18 = *(_QWORD *)(v0 + 472);
      OUTLINED_FUNCTION_27_7();
      v19 = OUTLINED_FUNCTION_14_27();
      sub_22ABDF7A0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_24_12();
      v52 = v20 + 17;
      *(_QWORD *)(v0 + 264) = v15;
      sub_22ABDFD7C();
      sub_22ABDEDC8();
      OUTLINED_FUNCTION_54();
      sub_22ABDEDC8();
      sub_22A9B7B50();
      v21 = OUTLINED_FUNCTION_53();
      *v22 = v19;
      v22[1] = v52;
      v22[2] = 0x800000022ABE16C0;
      v22[3] = 0;
      OUTLINED_FUNCTION_2_36(v21, (uint64_t)v22, 6);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
    else
    {
      OUTLINED_FUNCTION_27_7();
      v23 = sub_22ABDE84C();
      sub_22A9B7B50();
      v24 = OUTLINED_FUNCTION_53();
      *v25 = v23;
      v25[1] = 0xD000000000000036;
      v25[2] = 0x800000022ABE2EF0;
      v25[3] = 0;
      OUTLINED_FUNCTION_2_36(v24, (uint64_t)v25, 6);
      v26 = OUTLINED_FUNCTION_20_26();
      v28(v26, v27);
    }
  }
  OUTLINED_FUNCTION_18_24();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22AA24AEC()
{
  sub_22ABDE8A0();
  if (*(_QWORD *)(sub_22ABDE84C() + 16) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TimeSeriesClassifier.Model();
  }
  __break(1u);
}

void sub_22AA24BBC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_22ABE8E30;
  type metadata accessor for TimeSeriesClassifier.Model();
}

void sub_22AA24C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v13 = (uint64_t *)(a10 + *(int *)(a1 + 88));
  v14 = *v13;
  v15 = v13[1];
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22AB593D4(v14, v15, v12, v11, v10);
}

uint64_t sub_22AA24C88(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  sub_22ABDEAEC();
  sub_22ABDE81C();
  return swift_bridgeObjectRelease();
}

_DWORD *sub_22AA24D1C(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _DWORD *v7;
  uint64_t inited;

  v7 = result;
  if (!result)
    goto LABEL_5;
  if ((a2 & 0x8000000000000000) == 0)
  {
    if (a2)
      bzero(result, 4 * a2);
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(inited + 32) = a5;
    v7[sub_22AA403AC(inited, a4)] = 1065353216;
    return (_DWORD *)swift_setDeallocating();
  }
  __break(1u);
  return result;
}

void TimeSeriesClassifier.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[6];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  type metadata accessor for LSTMFCN(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v16[4] = v6;
  v16[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A20);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v16[3] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v16[5] = v10;
  v16[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  OUTLINED_FUNCTION_1_0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v16[1] = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  v14 = a3[2];
  v17 = a3[1];
  v18 = v14;
  v15 = a3[4];
  v19 = a3[3];
  v20 = v15;
  type metadata accessor for TimeSeriesClassifier.Model();
}

void sub_22AA24EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v23;

  v9 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TimeSeriesClassifier<A, B>.Model, a1);
  v10 = *(_QWORD *)(v7 - 72);
  v3(v1, a1, v9, v4, v5);
  if (!v10)
  {
    v11 = *(_OWORD **)(v7 - 184);
    v12 = *(_QWORD *)(v7 - 168);
    v13 = *(_QWORD *)(v7 - 160);
    v14 = v1 + *(int *)(a1 + 84);
    v15 = *(_QWORD *)(v7 - 152);
    sub_22A9CF800(v14, v15, &qword_255B0F3D0);
    if (__swift_getEnumTagSinglePayload(v15, 1, *(_QWORD *)(v7 - 176)) == 1)
    {
      v16 = &qword_255B0F3D0;
      v17 = v15;
    }
    else
    {
      sub_22AA2550C(v15, v6, &qword_255B0F3D8);
      sub_22A9C6B68(v1, v13);
      sub_22A9CF800(v6, (uint64_t)v11, &qword_255B0F3D8);
      v18 = v12;
      sub_22AA22AC8(v13, v11, v12);
      v19 = v2;
      v20 = *(_QWORD *)(v2 + 24);
      v21 = *(_QWORD *)(v19 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v19, v20);
      v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v21 + 16);
      sub_22AA2545C((unint64_t *)&unk_255B11A28, &qword_255B11A20, (uint64_t)&unk_22ABEB838);
      v22(v18, *(_QWORD *)(v7 - 192), v23, v20, v21);
      sub_22A9CF82C(v18, &qword_255B11A20);
      v16 = &qword_255B0F3D8;
      v17 = v6;
    }
    sub_22A9CF82C(v17, v16);
  }
  OUTLINED_FUNCTION_16();
}

void TimeSeriesClassifier.decodeWithOptimizer(from:)(_OWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _QWORD v12[6];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v12[1] = a2;
  v12[4] = type metadata accessor for LSTMFCN(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  v12[2] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v12[3] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A20);
  OUTLINED_FUNCTION_1_0();
  v8 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  v12[5] = (char *)v12 - v9;
  v10 = a1[2];
  v13 = a1[1];
  v14 = v10;
  v11 = a1[4];
  v15 = a1[3];
  v16 = v11;
  type metadata accessor for TimeSeriesClassifier.Model();
}

void sub_22AA25148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v15 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)&a9 - v16;
  v18 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TimeSeriesClassifier<A, B>, v10);
  v19 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TimeSeriesClassifier<A, B>.Model, a1);
  v20 = *(_QWORD *)(v13 - 72);
  SupervisedEstimator<>.decode(from:)(v9, v10, v18, v19);
  if (!v20)
  {
    *(_QWORD *)(v13 - 208) = v17;
    *(_QWORD *)(v13 - 72) = v15;
    v21 = *(_QWORD *)(v13 - 176);
    v22 = v9;
    v24 = *(_QWORD *)(v9 + 24);
    v23 = *(_QWORD *)(v9 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v22, v24);
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 16);
    v26 = MEMORY[0x22E2E4D80](&unk_22ABEB810, v12);
    v25(v12, v12, v26, v24, v23);
    v27 = *(_QWORD *)(v13 - 208);
    v28 = *(_QWORD *)(v13 - 192);
    sub_22A9C6B68(v27, v28);
    sub_22A9CF800(*(_QWORD *)(v13 - 168), v11, &qword_255B11A20);
    v29 = sub_22A9C6C74();
    v30 = *(_QWORD *)(v13 - 184);
    sub_22A9CEF98(v28, v11, v21, v29, v30);
    v31 = *(_QWORD *)(v13 - 72);
    sub_22A9CF82C(*(_QWORD *)(v13 - 168), &qword_255B11A20);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
    __swift_storeEnumTagSinglePayload(v30, 0, 1, v32);
    sub_22A9D0108(v30, v27 + *(int *)(a1 + 84), &qword_255B0F3D0);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v31 + 16))(*(_QWORD *)(v13 - 200), v27, a1);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v27, a1);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA2530C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99DE80;
  return TimeSeriesClassifier.update<A>(_:with:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

void sub_22AA253A0(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  TimeSeriesClassifier.encodeWithOptimizer(_:to:)(a1, a2, a3);
}

void sub_22AA253B4(_OWORD *a1@<X1>, uint64_t a2@<X8>)
{
  TimeSeriesClassifier.decodeWithOptimizer(from:)(a1, a2);
}

uint64_t sub_22AA253C8()
{
  return swift_getAtKeyPath();
}

void sub_22AA253F0()
{
  OUTLINED_FUNCTION_30_14();
  sub_22AA24AEC();
}

uint64_t sub_22AA25414(char a1)
{
  return a1 & 1;
}

void sub_22AA25424()
{
  OUTLINED_FUNCTION_30_14();
  sub_22AA24BBC();
}

void sub_22AA2545C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x22E2E4D80](a3, v5), a1);
  }
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AA25498(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TimeSeriesClassifier<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AA254C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_22AA2550C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_13_12(a1, a2, a3);
  OUTLINED_FUNCTION_20_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_0_5();
}

_DWORD *sub_22AA25538(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_22AA24D1C(a1, a2, a3, a4, *(_DWORD *)(v4 + 16));
}

uint64_t sub_22AA25550(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AB9F8A8(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 24));
}

uint64_t sub_22AA2556C()
{
  return sub_22AA253C8();
}

uint64_t OUTLINED_FUNCTION_2_36@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  *(_BYTE *)(a2 + 32) = a3;
  return swift_willThrow(a1);
}

void OUTLINED_FUNCTION_7_33(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>, __n128 a4@<Q2>, __n128 a5@<Q3>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(__n128 *)(v8 - 192) = a4;
  *(__n128 *)(v8 - 176) = a5;
  *(float *)(v8 - 160) = a3;
  *(_QWORD *)(v8 - 152) = v7;
  *(float *)(v8 - 144) = a2;
  *(_QWORD *)(v8 - 136) = v6;
  *(_BYTE *)(v8 - 128) = v5;
  *(_QWORD *)(v8 - 120) = a1;
}

uint64_t OUTLINED_FUNCTION_13_31()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_14_27()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_18_24()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 544);
}

uint64_t OUTLINED_FUNCTION_20_26()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_26()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_25_16()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_30_14()
{
  __n128 *v0;

  return v0[4];
}

void OUTLINED_FUNCTION_31_11(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_22A9CF800(v4, v3, a3);
}

uint64_t sub_22AA25620(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_22ABDE798();
  v12 = *(_QWORD *)(v4 - 8);
  v13 = v4;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v11 = v6;
  v7 = sub_22ABDDC88();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_33();
  sub_22ABDE318();
  sub_22ABDE258();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
  sub_22ABDDE68();
  *(_OWORD *)(OUTLINED_FUNCTION_52_11() + 16) = xmmword_22ABE8E30;
  OUTLINED_FUNCTION_51_13();
  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_36_12();
  sub_22ABDE2C4();
  *(_OWORD *)(OUTLINED_FUNCTION_52_11() + 16) = xmmword_22ABE8E30;
  OUTLINED_FUNCTION_51_13();
  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_36_12();
  sub_22ABDE300();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C0);
  v8 = OUTLINED_FUNCTION_46_11();
  *(_OWORD *)(v8 + 16) = xmmword_22ABE8E30;
  *(double *)(v8 + 32) = a2 / a1;
  v9 = OUTLINED_FUNCTION_46_11();
  *(_OWORD *)(v9 + 16) = xmmword_22ABE8E30;
  *(double *)(v9 + 32) = a1;
  sub_22ABDDE80();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x24BE632B8], v13);
  return sub_22ABDE288();
}

void StandardScaler.fitted<A>(to:eventHandler:)(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];

  v10[3] = a2;
  v10[4] = a3;
  v10[2] = a1;
  v10[5] = a4;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  v10[1] = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_50_8();
  v10[0] = *(_QWORD *)(v7 + 24);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_23_8();
  MEMORY[0x24BDAC7A8](v9);
  if ((sub_22AA2F904() & 1) == 0)
    sub_22AA2F98C(0x647261646E617453, 0xEE0072656C616353);
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_40_11();
  StandardScaler.Transformer.init(mean:standardDeviation:)();
}

void sub_22AA259B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v0;
  *(_QWORD *)(v4 - 88) = v1;
  type metadata accessor for StandardScaler.Transformer();
}

void sub_22AA259CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_22AA25B90();
  if (!*(_QWORD *)(v1 + *(int *)(a1 + 56)))
  {
    sub_22A9B7B50();
    v3 = swift_allocError();
    *(_QWORD *)v4 = 0xD000000000000015;
    *(_QWORD *)(v4 + 8) = 0x800000022ABE2F50;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *(_BYTE *)(v4 + 32) = 2;
    swift_willThrow(v3);
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8));
  }
  OUTLINED_FUNCTION_16();
}

void StandardScaler.Transformer.init(mean:standardDeviation:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_4();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for StandardScaler.Transformer();
}

void sub_22AA25AFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v2 + *(int *)(a1 + 56)) = 0;
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  OUTLINED_FUNCTION_48_11();
  sub_22ABDFF20();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32);
  v6(v2, v3, v1);
  v6(v2 + *(int *)(a1 + 52), *(_QWORD *)(v4 - 120), v1);
  OUTLINED_FUNCTION_3();
}

void sub_22AA25B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t AssociatedConformanceWitness;
  void (*v38)(void);
  uint64_t v39;
  void (*v40)(void);
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(void);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t AssociatedTypeWitness;
  uint64_t v91;

  OUTLINED_FUNCTION_4_4();
  v2 = v0;
  v79 = v3;
  v80 = v4;
  v5 = v3;
  v78 = v6;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = v7;
  v89 = v7;
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_23_8();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_50_8();
  v82 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0();
  v77 = v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v69 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_87();
  v87 = v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  v84 = (char *)&v67 - v20;
  v21 = *(_QWORD *)(v9 + 24);
  v76 = *(_QWORD *)(v21 + 16);
  v86 = *(_QWORD *)(*(_QWORD *)(v76 + 16) + 8);
  v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
  v73 = (void (*)(char *, uint64_t))swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v22);
  v74 = (char *)&v67 - v23;
  v91 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_87();
  v70 = v25;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_12_0();
  v71 = v27;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_12_0();
  v88 = v29;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_12_0();
  v81 = v31;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v67 - v33;
  v35 = *(_QWORD *)(v21 + 8);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v36);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_27_20();
  v72 = AssociatedConformanceWitness;
  sub_22ABE0130();
  OUTLINED_FUNCTION_30_15();
  v85 = v35;
  sub_22ABDFF20();
  v83 = *(void (**)(void))(v91 + 40);
  OUTLINED_FUNCTION_18_25();
  v38();
  OUTLINED_FUNCTION_27_20();
  sub_22ABE0130();
  OUTLINED_FUNCTION_30_15();
  sub_22ABDFF20();
  v39 = v89;
  v68 = v2 + *(int *)(v89 + 52);
  OUTLINED_FUNCTION_18_25();
  v40 = v83;
  v83();
  v41 = (char *)*(int *)(v39 + 56);
  *(_QWORD *)&v41[v2] = 0;
  v42 = v34;
  v43 = v41;
  sub_22ABE0130();
  OUTLINED_FUNCTION_48_11();
  sub_22ABDFF20();
  v85 = v2 + *(int *)(v89 + 60);
  OUTLINED_FUNCTION_18_25();
  v40();
  OUTLINED_FUNCTION_41_8();
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  sub_22ABDFF20();
  v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
  v75(v77, v78, v79);
  sub_22ABDEE58();
  v44 = swift_getAssociatedConformanceWitness();
  v45 = v84;
  v89 = v44;
  sub_22ABDF650();
  OUTLINED_FUNCTION_14_1(v1);
  if (v46)
  {
LABEL_6:
    v82 = (uint64_t)v42;
    v51 = AssociatedTypeWitness;
    v73 = *(void (**)(char *, uint64_t))(v69 + 8);
    v73(v45, AssociatedTypeWitness);
    v74 = v43;
    if (*(uint64_t *)&v43[v2] >= 1)
    {
      OUTLINED_FUNCTION_30_15();
      sub_22ABDEBDC();
      OUTLINED_FUNCTION_18_25();
      sub_22ABDEB88();
      v52 = OUTLINED_FUNCTION_41_8();
      v53(v52);
      OUTLINED_FUNCTION_25_17(v2);
    }
    v75(v77, v78, v79);
    v54 = v87;
    sub_22ABDEE58();
    OUTLINED_FUNCTION_23_23();
    OUTLINED_FUNCTION_14_1(v13);
    v55 = v2;
    v56 = v71;
    v57 = v70;
    v58 = v82;
    if (!v46)
    {
      v84 = *(char **)(v91 + 32);
      do
      {
        ((void (*)(uint64_t, uint64_t, uint64_t))v84)(v58, v13, v8);
        v59 = v55;
        v60 = v8;
        OUTLINED_FUNCTION_7_34();
        OUTLINED_FUNCTION_7_34();
        v61 = v57;
        v62 = v88;
        OUTLINED_FUNCTION_41_8();
        sub_22ABDF308();
        OUTLINED_FUNCTION_39_13(v61);
        OUTLINED_FUNCTION_39_13(v56);
        v51 = AssociatedTypeWitness;
        sub_22ABDFB00();
        v63 = v62;
        v57 = v61;
        v8 = v60;
        OUTLINED_FUNCTION_39_13(v63);
        OUTLINED_FUNCTION_39_13(v58);
        v54 = v87;
        OUTLINED_FUNCTION_23_23();
        v55 = v59;
        OUTLINED_FUNCTION_14_1(v13);
      }
      while (!v46);
    }
    v73(v54, v51);
    if (*(uint64_t *)&v74[v55] < 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v81, v8);
    }
    else
    {
      sub_22ABDEBDC();
      v64 = v88;
      OUTLINED_FUNCTION_28_15();
      v65 = *(void (**)(uint64_t))(v91 + 8);
      v66 = OUTLINED_FUNCTION_41_8();
      v65(v66);
      sub_22ABDEB7C();
      ((void (*)(uint64_t, uint64_t))v65)(v64, v8);
      ((void (*)(uint64_t, uint64_t))v65)(v81, v8);
      OUTLINED_FUNCTION_25_17(v68);
    }
    OUTLINED_FUNCTION_3();
  }
  else
  {
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 32);
    while (1)
    {
      v47(v42, v1, v8);
      sub_22ABDFB00();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v42, v8);
      v48 = *(_QWORD *)&v43[v2];
      v49 = __OFADD__(v48, 1);
      v50 = v48 + 1;
      if (v49)
        break;
      *(_QWORD *)&v43[v2] = v50;
      sub_22ABDF650();
      OUTLINED_FUNCTION_14_1(v1);
      if (v46)
        goto LABEL_6;
    }
    __break(1u);
  }
}

void type metadata accessor for StandardScaler.Transformer()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA26260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  StandardScaler.fitted<A>(to:eventHandler:)(a2, a5, a6, a1);
}

void StandardScaler.makeTransformer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_23_8();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_50_8();
  OUTLINED_FUNCTION_18_25();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_23_8();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_41_8();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_34_16();
  OUTLINED_FUNCTION_31_12();
  OUTLINED_FUNCTION_34_16();
  OUTLINED_FUNCTION_31_12();
  StandardScaler.Transformer.init(mean:standardDeviation:)();
}

void sub_22AA263E0()
{
  OUTLINED_FUNCTION_3();
}

void StandardScaler.update<A>(_:with:eventHandler:)()
{
  OUTLINED_FUNCTION_43_9();
}

void sub_22AA2641C(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + *(int *)(a1 + 56)))
    sub_22AA26464();
  else
    sub_22AA25B90();
}

void sub_22AA26464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t AssociatedTypeWitness;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t AssociatedConformanceWitness;
  char v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;

  OUTLINED_FUNCTION_4_4();
  v2 = v0;
  v4 = v3;
  v63 = v5;
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 16);
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v9;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_12_0();
  v58 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_12_0();
  v57 = v15;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_12_0();
  v60 = v17;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_12_0();
  v66 = v19;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v52 - v21;
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_2_22();
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_33();
  v28 = v27 - v26;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v53 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v52 - v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v28, v7, v4);
  sub_22ABDEE58();
  v33 = v63;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v61 = v32;
  v62 = AssociatedTypeWitness;
  v56 = AssociatedConformanceWitness;
  sub_22ABDF650();
  OUTLINED_FUNCTION_14_1(v1);
  if (v35)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v53 + 8))(v61, v62);
    if (!__OFSUB__(*(_QWORD *)(v2 + *(int *)(v33 + 56)), 1))
    {
      v47 = v33;
      v48 = v60;
      sub_22ABDEBDC();
      v49 = v66;
      sub_22ABDEB88();
      v50 = v2;
      v51 = v64;
      OUTLINED_FUNCTION_6_37(v48);
      sub_22ABDEB7C();
      OUTLINED_FUNCTION_6_37(v49);
      OUTLINED_FUNCTION_47_9(v50 + *(int *)(v47 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 40));
      OUTLINED_FUNCTION_3();
      return;
    }
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
    v54 = v1;
    v55 = v36;
    v67 = v22;
    v37 = v57;
    while (1)
    {
      v55(v22, v1, v8);
      v38 = *(int *)(v33 + 56);
      v39 = *(_QWORD *)(v2 + v38);
      if (__OFADD__(v39, 1))
        break;
      *(_QWORD *)(v2 + v38) = v39 + 1;
      v40 = v2;
      v65 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v33 + 24) + 16) + 16) + 8);
      v41 = v60;
      OUTLINED_FUNCTION_7_34();
      sub_22ABDEBDC();
      OUTLINED_FUNCTION_28_15();
      v42 = v64;
      OUTLINED_FUNCTION_6_37(v37);
      OUTLINED_FUNCTION_6_37(v41);
      OUTLINED_FUNCTION_47_9(v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 16));
      sub_22ABDFB00();
      v43 = v58;
      OUTLINED_FUNCTION_7_34();
      v44 = (uint64_t)v59;
      OUTLINED_FUNCTION_7_34();
      v45 = v63;
      sub_22ABDF308();
      OUTLINED_FUNCTION_6_37(v44);
      OUTLINED_FUNCTION_6_37(v43);
      v33 = v45;
      v2 = v40;
      OUTLINED_FUNCTION_18_25();
      sub_22ABDFB00();
      OUTLINED_FUNCTION_6_37(v37);
      v46 = v41;
      v1 = v54;
      OUTLINED_FUNCTION_6_37(v46);
      OUTLINED_FUNCTION_6_37(v66);
      v22 = v67;
      OUTLINED_FUNCTION_6_37((uint64_t)v67);
      sub_22ABDF650();
      OUTLINED_FUNCTION_14_1(v1);
      if (v35)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
}

void StandardScaler.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2)
{
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  OUTLINED_FUNCTION_29_16();
}

void sub_22AA268C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v6 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for StandardScaler<A>.Transformer, a1);
  v4(v1, a1, v6, v2, v3);
  OUTLINED_FUNCTION_19_21();
}

void StandardScaler.decodeWithOptimizer(from:)()
{
  OUTLINED_FUNCTION_29_16();
}

void sub_22AA26934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v3);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8);
  v6 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for StandardScaler<A>.Transformer, a1);
  v5(a1, a1, v6, v3, v4);
  OUTLINED_FUNCTION_19_21();
}

void sub_22AA26988()
{
  StandardScaler.makeTransformer()();
}

void sub_22AA2699C()
{
  StandardScaler.update<A>(_:with:eventHandler:)();
}

uint64_t sub_22AA269C4()
{
  uint64_t v0;

  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AA269E0(uint64_t a1, uint64_t a2)
{
  StandardScaler.encodeWithOptimizer(_:to:)(a1, a2);
}

void sub_22AA269F4()
{
  StandardScaler.decodeWithOptimizer(from:)();
}

uint64_t StandardScaler.Transformer.mean.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

uint64_t StandardScaler.Transformer.mean.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*StandardScaler.Transformer.mean.modify())()
{
  return nullsub_1;
}

uint64_t StandardScaler.Transformer.standardDeviation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

uint64_t StandardScaler.Transformer.standardDeviation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*StandardScaler.Transformer.standardDeviation.modify())()
{
  return nullsub_1;
}

void StandardScaler.Transformer.applied(to:eventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  void (*v20)(uint64_t, uint64_t);
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v25 = v6;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_23_8();
  v13 = v11 - v12;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - v16;
  v24 = v15;
  OUTLINED_FUNCTION_23_13(v15, v18);
  OUTLINED_FUNCTION_23_13((uint64_t)v17, v0);
  v19 = OUTLINED_FUNCTION_42_10();
  v20 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  OUTLINED_FUNCTION_14_28();
  if ((v19 & 1) != 0)
  {
    OUTLINED_FUNCTION_23_13((uint64_t)v17, v1);
    OUTLINED_FUNCTION_44_13();
    sub_22ABDFB0C();
    OUTLINED_FUNCTION_14_28();
  }
  OUTLINED_FUNCTION_23_13(v13, v1 + *(int *)(v3 + 52));
  v21 = OUTLINED_FUNCTION_42_10();
  v20(v13, v8);
  v22 = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v25, v1, v3);
  if ((v21 & 1) != 0)
  {
    OUTLINED_FUNCTION_23_13((uint64_t)v17, v22 + *(int *)(v3 + 52));
    v23 = sub_22ABDEBB8();
    OUTLINED_FUNCTION_14_28();
    OUTLINED_FUNCTION_37_14();
    if ((v23 & 1) == 0)
    {
      OUTLINED_FUNCTION_23_13((uint64_t)v17, v1 + *(int *)(v3 + 52));
      OUTLINED_FUNCTION_44_13();
      sub_22ABDEB94();
      OUTLINED_FUNCTION_14_28();
    }
  }
  else
  {
    OUTLINED_FUNCTION_37_14();
  }
  OUTLINED_FUNCTION_3();
}

uint64_t StandardScaler.Transformer.hash(into:)()
{
  OUTLINED_FUNCTION_20_27();
  OUTLINED_FUNCTION_20_27();
  sub_22ABE0250();
  return OUTLINED_FUNCTION_20_27();
}

uint64_t static StandardScaler.Transformer.== infix(_:_:)()
{
  if ((sub_22ABDECFC() & 1) != 0)
    OUTLINED_FUNCTION_43_9();
  return 0;
}

uint64_t sub_22AA26D28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 1851876717 && a2 == 0xE400000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE2FC0 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x800000022ABE2FE0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_22AA26EB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA26EE4 + 4 * byte_22ABEF740[a1]))(1851876717, 0xE400000000000000);
}

unint64_t sub_22AA26EE4()
{
  return 0xD000000000000011;
}

uint64_t sub_22AA26F00()
{
  return 0x746E756F63;
}

unint64_t sub_22AA26F14()
{
  return 0xD000000000000016;
}

BOOL sub_22AA26F34(char *a1, char *a2)
{
  return sub_22A9B0EA4(*a1, *a2);
}

uint64_t sub_22AA26F4C()
{
  return sub_22A9B1040();
}

uint64_t sub_22AA26F5C()
{
  return sub_22A9B0EB4();
}

uint64_t sub_22AA26F6C()
{
  sub_22ABE0244();
  sub_22A9B0EB4();
  return sub_22ABE0280();
}

uint64_t sub_22AA26FB4()
{
  unsigned __int8 *v0;

  return sub_22AA26EB8(*v0);
}

uint64_t sub_22AA26FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA26D28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA26FF4()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AA27018@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9BFA58();
  *a1 = result;
  return result;
}

uint64_t sub_22AA27048(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEF9E0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA2707C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEF9E0, a1);
  return sub_22ABE02F8();
}

uint64_t StandardScaler.Transformer.hashValue.getter()
{
  sub_22ABE0244();
  StandardScaler.Transformer.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22AA270F4()
{
  uint64_t v0;

  StandardScaler.Transformer.applied(to:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA2713C()
{
  sub_22ABE0244();
  StandardScaler.Transformer.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22AA2717C()
{
  return static StandardScaler.Transformer.== infix(_:_:)();
}

uint64_t StandardScaler.Transformer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return 0;
}

void StandardScaler.Transformer.encode(to:)()
{
  type metadata accessor for StandardScaler.Transformer.CodingKeys();
}

void sub_22AA272AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x22E2E4D80](&unk_22ABEF9E0, a1);
  v4 = sub_22ABDFD58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_22();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v3 - 112) = 0;
  v6 = *(_QWORD *)(v3 - 72);
  sub_22ABDFD4C();
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  else
  {
    *(_QWORD *)(v3 - 72) = v5;
    OUTLINED_FUNCTION_13_32(1);
    *(_BYTE *)(v3 - 112) = 2;
    sub_22ABDFD34();
    OUTLINED_FUNCTION_13_32(3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 72) + 8))(v2, v4);
  }
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for StandardScaler.Transformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA27410()
{
  StandardScaler.Transformer.encode(to:)();
}

void StandardScaler.Transformer.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26 = a1;
  v20 = a6;
  v19 = sub_22ABDF5D8();
  v18[5] = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v10);
  v22 = (char *)v18 - v11;
  v25 = *(_QWORD *)(a2 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  v21 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_12_0();
  v23 = v15;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v16);
  v24 = (char *)v18 - v17;
  v27 = a2;
  v28 = a3;
  v29 = a4;
  v30 = a5;
  type metadata accessor for StandardScaler.Transformer.CodingKeys();
}

void sub_22AA27504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v13 - 160) = MEMORY[0x22E2E4D80](&unk_22ABEF9E0, a1);
  v14 = sub_22ABDFCB0();
  *(_QWORD *)(v13 - 208) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v13 - 200) = v14;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 72) = (char *)&a9 - v16;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_22();
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 184) = v10;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for StandardScaler.Transformer();
}

void sub_22AA275B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  int EnumTagSinglePayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)(v13 - 248) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_13_0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&a9 - v17;
  v19 = *(int *)(v16 + 56);
  *(_QWORD *)(v13 - 224) = v19;
  *(_QWORD *)&v18[v19] = 0;
  v20 = &v18[*(int *)(v16 + 60)];
  *(_QWORD *)(v13 - 280) = swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  *(_QWORD *)(v13 - 168) = v20;
  *(_QWORD *)(v13 - 136) = v11;
  *(_QWORD *)(v13 - 272) = v9;
  sub_22ABDFF20();
  v21 = *(_QWORD **)(v13 - 128);
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  v22 = *(_QWORD *)(v13 - 152);
  v23 = *(_QWORD *)(v13 - 144);
  sub_22ABE0298();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    OUTLINED_FUNCTION_50_10(*(_QWORD *)(v13 - 168));
  }
  else
  {
    *(_QWORD *)(v13 - 296) = v10;
    *(_QWORD *)(v13 - 288) = v12;
    *(_QWORD *)(v13 - 160) = a1;
    *(_QWORD *)(v13 - 152) = v18;
    *(_BYTE *)(v13 - 120) = 0;
    v24 = *(_QWORD *)(v13 - 136);
    v25 = *(_QWORD *)(v13 - 208);
    v26 = *(_QWORD *)(v13 - 72);
    sub_22ABDFC8C();
    v27 = *(void (**)(void))(v23 + 32);
    ((void (*)(_QWORD, _QWORD, uint64_t))v27)(*(_QWORD *)(v13 - 152), *(_QWORD *)(v13 - 176), v24);
    *(_BYTE *)(v13 - 120) = 1;
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_18_25();
    v27();
    *(_BYTE *)(v13 - 120) = 2;
    v28 = sub_22ABDFC2C();
    if ((v29 & 1) != 0)
      v30 = 0;
    else
      v30 = v28;
    v31 = *(_QWORD *)(v13 - 216);
    *(_QWORD *)(*(_QWORD *)(v13 - 152) + *(_QWORD *)(v13 - 224)) = v30;
    *(_BYTE *)(v13 - 120) = 3;
    sub_22ABDFC38();
    v32 = v26;
    v33 = v27;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v31, 1, v24);
    v35 = *(_QWORD *)(v13 - 232);
    v36 = v31;
    v37 = *(_QWORD *)(v13 - 248);
    if (EnumTagSinglePayload == 1)
    {
      sub_22ABE013C();
      sub_22ABDFF20();
      OUTLINED_FUNCTION_28_4(v32, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v13 - 264) + 8))(*(_QWORD *)(v13 - 216), *(_QWORD *)(v13 - 256));
    }
    else
    {
      OUTLINED_FUNCTION_28_4(v32, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
      ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v35, v36, v24);
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 144) + 40))(*(_QWORD *)(v13 - 168), v35, v24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v37 + 16))(*(_QWORD *)(v13 - 240), *(_QWORD *)(v13 - 152), *(_QWORD *)(v13 - 160));
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v13 - 128));
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA27950()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA27960(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for StandardScaler<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22AA2798C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA2799C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  StandardScaler.Transformer.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_22AA279BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[5];
  uint64_t v29;

  v27 = a2;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  v26 = v5;
  v6 = sub_22ABDE324();
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_87();
  v23 = v8;
  OUTLINED_FUNCTION_4_0();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15 - v14, v2 + *(int *)(a1 + 52), v13);
  sub_22A99CE8C();
  OUTLINED_FUNCTION_12_29();
  v17 = 1.0 / *(double *)v28;
  sub_22ABDEB88();
  OUTLINED_FUNCTION_12_29();
  sub_22AA25620(v17, -*(double *)v28);
  v19 = v23;
  v18 = v24;
  v20 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 16))(v23, v12, v25);
  memset(v28, 0, sizeof(v28));
  v29 = 0;
  v21 = v26;
  sub_22ABDE3CC();
  sub_22AB314C8(v19, v21, v28, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v20);
}

uint64_t sub_22AA27B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AA279BC(a1, a2);
}

void type metadata accessor for StandardScaler()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AA27B9C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22AA27C18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = v7 + v8;
  v11 = v7 + 7;
  v12 = v8 + 8;
  v13 = ((v9 + 8 + ((v7 + 7 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8)) & ~v9) + v7;
  v14 = v8 & 0x100000;
  if (v9 > 7 || v14 != 0 || v13 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v9 & 0xF8 ^ 0x1F8) & (v9 + 16)));
    swift_retain();
  }
  else
  {
    v18 = ~v9;
    v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v19(a1, a2, *(_QWORD *)(a3 + 16));
    v20 = ((unint64_t)a2 + v10) & v18;
    v19((uint64_t *)(((unint64_t)v4 + v10) & v18), (uint64_t *)v20, v5);
    v21 = (_QWORD *)((v11 + (((unint64_t)v4 + v10) & v18)) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)((v11 + v20) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v19((uint64_t *)(((unint64_t)v21 + v12) & v18), (uint64_t *)(((unint64_t)v22 + v12) & v18), v5);
  }
  return v4;
}

uint64_t sub_22AA27D34(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v9)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v9 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v9(a1, v3);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v5 + a1 + v6) & ~v6;
  v9(v7, v3);
  return v9((v6 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6, v3);
}

unint64_t sub_22AA27DC4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  v11 = (_QWORD *)((v8 + 7 + ((v8 + v9 + a1) & ~v9)) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v7(((unint64_t)v11 + v9 + 8) & ~v9, ((unint64_t)v12 + v9 + 8) & ~v9, v5);
  return a1;
}

unint64_t sub_22AA27E78(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  v11 = (_QWORD *)((v8 + 7 + ((v8 + v9 + a1) & ~v9)) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v7(((unint64_t)v11 + v9 + 8) & ~v9, ((unint64_t)v12 + v9 + 8) & ~v9, v5);
  return a1;
}

unint64_t sub_22AA27F2C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  v11 = (_QWORD *)((v8 + 7 + ((v8 + v9 + a1) & ~v9)) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v7(((unint64_t)v11 + v9 + 8) & ~v9, ((unint64_t)v12 + v9 + 8) & ~v9, v5);
  return a1;
}

unint64_t sub_22AA27FE0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  v11 = (_QWORD *)((v8 + 7 + ((v8 + v9 + a1) & ~v9)) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v7(((unint64_t)v11 + v9 + 8) & ~v9, ((unint64_t)v12 + v9 + 8) & ~v9, v5);
  return a1;
}

uint64_t sub_22AA28094(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(unsigned __int8 *)(v5 + 80)
       + ((*(_QWORD *)(v5 + 64)
         + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA2816C + 4 * byte_22ABEF744[(v8 - 1)]))();
}

void sub_22AA281B8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(unsigned __int8 *)(v6 + 80)
       + ((*(_QWORD *)(v6 + 64)
         + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22AA28388(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22AA283D4 + 4 * byte_22ABEF757[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22AA28408 + 4 * byte_22ABEF752[v4]))();
}

uint64_t sub_22AA28408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA28410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA28418);
  return result;
}

uint64_t sub_22AA28424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA2842CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22AA28430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA28438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AA28444()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA28454()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA28464()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_6_37(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_34()
{
  return sub_22ABDFAF4();
}

uint64_t OUTLINED_FUNCTION_12_29()
{
  return sub_22ABDEA50();
}

uint64_t OUTLINED_FUNCTION_13_32@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = a1;
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_20_27()
{
  return sub_22ABDEC0C();
}

uint64_t OUTLINED_FUNCTION_22_25()
{
  return sub_22ABDECFC();
}

uint64_t OUTLINED_FUNCTION_23_23()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_25_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 160))(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_26_17()
{
  return sub_22ABE0130();
}

uint64_t OUTLINED_FUNCTION_27_20()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_28_15()
{
  return sub_22ABDEB88();
}

void OUTLINED_FUNCTION_29_16()
{
  type metadata accessor for StandardScaler.Transformer();
}

uint64_t OUTLINED_FUNCTION_31_12()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_34_16()
{
  return sub_22ABE0130();
}

uint64_t OUTLINED_FUNCTION_36_12()
{
  return sub_22ABDDE2C();
}

uint64_t OUTLINED_FUNCTION_37_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_38_15()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v0, v3);
}

uint64_t OUTLINED_FUNCTION_39_13(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_40_11()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_41_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_42_10()
{
  return sub_22ABDEBC4();
}

void OUTLINED_FUNCTION_43_9()
{
  type metadata accessor for StandardScaler.Transformer();
}

uint64_t OUTLINED_FUNCTION_44_13()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_46_11()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_47_9@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_48_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_50_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_51_13()
{
  return sub_22ABDDBF8();
}

uint64_t OUTLINED_FUNCTION_52_11()
{
  return swift_allocObject();
}

_QWORD *TimeSeriesForecasterAnnotatedWindows.init(features:annotations:inputWindowSize:forecastWindowSize:stride:shufflesElements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *result;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v46;

  v14 = (int *)type metadata accessor for TimeSeriesForecasterAnnotatedWindows(0, a7, a8, a4);
  v15 = v14[13];
  v16 = sub_22ABDE8A0();
  v43 = *(_QWORD *)(v16 - 8);
  v17 = *(void (**)(void))(v43 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(a9, a1, v16);
  v42 = a9 + v14[9];
  v17();
  *(_QWORD *)(a9 + v14[10]) = a3;
  *(_QWORD *)(a9 + v14[11]) = a4;
  *(_QWORD *)(a9 + v14[12]) = a5;
  *(_BYTE *)(a9 + v15) = a6;
  v46 = a3;
  if (a3 < 1 || a4 < 1 || a5 < 1)
  {
    sub_22A9B7B50();
    v20 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v21 = 0xD000000000000024;
    v22 = 0xD00000000000002DLL;
    v23 = 0x800000022ABE3000;
    v24 = 0x800000022ABEFA10;
    v25 = 5;
    v26 = a1;
LABEL_22:
    *(_QWORD *)(v21 + 8) = v24;
    *(_QWORD *)(v21 + 16) = v22;
    *(_QWORD *)(v21 + 24) = v23;
    *(_BYTE *)(v21 + 32) = v25;
    swift_willThrow(v20);
    OUTLINED_FUNCTION_74_5(a2);
    OUTLINED_FUNCTION_74_5(v26);
    OUTLINED_FUNCTION_74_5(a9);
    return (_QWORD *)OUTLINED_FUNCTION_74_5(v42);
  }
  v26 = a1;
  v27 = *(_QWORD *)(OUTLINED_FUNCTION_16_24() + 16);
  swift_bridgeObjectRelease();
  result = (_QWORD *)sub_22ABDE84C();
  v29 = result;
  if (v27 != 2)
  {
    sub_22A9B7B50();
    v20 = OUTLINED_FUNCTION_53();
    v23 = 0;
    *(_QWORD *)v21 = v29;
    v24 = 0xD000000000000033;
    v22 = 0x800000022ABE1420;
    v25 = 6;
    goto LABEL_22;
  }
  if (!result[2])
  {
    __break(1u);
    goto LABEL_25;
  }
  v30 = result[4];
  swift_bridgeObjectRelease();
  result = (_QWORD *)OUTLINED_FUNCTION_13_33();
  if (!result[2])
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v31 = result[4];
  swift_bridgeObjectRelease();
  if (v30 != v31)
  {
    v41 = OUTLINED_FUNCTION_13_33();
    sub_22A9B7B50();
    v20 = OUTLINED_FUNCTION_53();
    v23 = 0;
    *(_QWORD *)v21 = v41;
    v24 = 0xD000000000000076;
    v22 = 0x800000022ABE3030;
    v25 = 6;
    goto LABEL_22;
  }
  result = (_QWORD *)OUTLINED_FUNCTION_16_24();
  if (result[2] < 2uLL)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v32 = result[5];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v14[14]) = v32;
  result = (_QWORD *)OUTLINED_FUNCTION_13_33();
  if (result[2] < 2uLL)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v33 = result[5];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v14[15]) = v33;
  result = (_QWORD *)OUTLINED_FUNCTION_16_24();
  if (!result[2])
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v34 = result[4];
  result = (_QWORD *)swift_bridgeObjectRelease();
  v35 = v46 + a4;
  if (__OFADD__(v46, a4))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v36 = __OFSUB__(v34, v35);
  v37 = v34 - v35;
  if (!v36)
  {
    v36 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (!v36)
    {
      v39 = v38 & ~(v38 >> 63);
      v40 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v40(a2, v16);
      result = (_QWORD *)((uint64_t (*)(uint64_t, uint64_t))v40)(a1, v16);
      *(_QWORD *)(a9 + v14[16]) = v39;
      return result;
    }
    goto LABEL_31;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TimeSeriesForecasterAnnotatedWindows(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TimeSeriesForecasterAnnotatedWindows);
}

uint64_t TimeSeriesForecasterAnnotatedWindows.features.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_7();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t TimeSeriesForecasterAnnotatedWindows.annotations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_7();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t TimeSeriesForecasterAnnotatedWindows.inputWindowSize.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 40));
}

uint64_t TimeSeriesForecasterAnnotatedWindows.forecastWindowSize.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 44));
}

uint64_t TimeSeriesForecasterAnnotatedWindows.stride.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 48));
}

uint64_t TimeSeriesForecasterAnnotatedWindows.stride.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(a2 + 48)) = result;
  return result;
}

uint64_t (*TimeSeriesForecasterAnnotatedWindows.stride.modify())()
{
  return nullsub_1;
}

uint64_t TimeSeriesForecasterAnnotatedWindows.shufflesElements.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t TimeSeriesForecasterAnnotatedWindows.shufflesElements.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 52)) = result;
  return result;
}

uint64_t (*TimeSeriesForecasterAnnotatedWindows.shufflesElements.modify())()
{
  return nullsub_1;
}

uint64_t TimeSeriesForecasterAnnotatedWindows.underestimatedCount.getter(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + *(int *)(result + 64));
  v3 = *(_QWORD *)(v1 + *(int *)(result + 48));
  v4 = __OFADD__(v2, v3 / 2);
  v5 = v2 + v3 / 2;
  if (v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!v3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 != 0x8000000000000000 || v3 != -1)
    return v5 / v3;
LABEL_10:
  __break(1u);
  return result;
}

void TimeSeriesForecasterAnnotatedWindows.makeIterator()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = OUTLINED_FUNCTION_11_35();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v16 - v12;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v15((char *)&v16 - v12, v3, v8);
  v15(v11, v3 + *(int *)(a1 + 36), v8);
  sub_22AA28BF4((uint64_t)v13, (uint64_t)v11, *(_QWORD *)(v3 + *(int *)(a1 + 40)), *(_QWORD *)(v3 + *(int *)(a1 + 44)), *(_QWORD *)(v3 + *(int *)(a1 + 48)), *(unsigned __int8 *)(v3 + *(int *)(a1 + 52)), *(_QWORD *)(v3 + *(int *)(a1 + 56)), *(_QWORD *)(v3 + *(int *)(a1 + 60)), a2, *(_QWORD *)(v3 + *(int *)(a1 + 64)), v6, v7);
  OUTLINED_FUNCTION_3();
}

void sub_22AA28BF4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  _BYTE v40[4];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a8;
  v51 = a7;
  v41 = a6;
  *(_QWORD *)&v49 = a10;
  v18 = sub_22ABDE8A0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v47 = &v40[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v20);
  v45 = &v40[-v22];
  v42 = a11;
  v43 = a12;
  v24 = (int *)type metadata accessor for TimeSeriesForecasterAnnotatedWindows.Iterator(0, a11, a12, v23);
  *(_QWORD *)(a9 + v24[15]) = 0;
  v46 = v19;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v48 = a1;
  v26 = a1;
  v27 = a2;
  v28 = a4;
  v29 = v50;
  v25(a9, v26, v18);
  v25(a9 + v24[9], v27, v18);
  v30 = v49;
  v31 = v51;
  v32 = v24[10];
  v44 = a3;
  *(_QWORD *)(a9 + v32) = a3;
  *(_QWORD *)(a9 + v24[11]) = v28;
  *(_QWORD *)(a9 + v24[12]) = a5;
  *(_QWORD *)(a9 + v24[13]) = v31;
  *(_QWORD *)(a9 + v24[14]) = v29;
  if (!v30)
  {
    v34 = MEMORY[0x24BEE4AF8];
    goto LABEL_8;
  }
  if ((v41 & 1) != 0)
  {
    if (a5)
    {
      OUTLINED_FUNCTION_15_23();
      v52 = v33;
      sub_22ABA3364();
      v34 = v52;
LABEL_8:
      *(_QWORD *)(a9 + v24[17]) = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      v35 = OUTLINED_FUNCTION_33_2();
      v49 = xmmword_22ABE9FB0;
      *(_OWORD *)(v35 + 16) = xmmword_22ABE9FB0;
      *(_QWORD *)(v35 + 32) = v44;
      *(_QWORD *)(v35 + 40) = v31;
      v36 = (uint64_t)v45;
      OUTLINED_FUNCTION_10_22();
      v37 = OUTLINED_FUNCTION_33_2();
      *(_OWORD *)(v37 + 16) = v49;
      *(_QWORD *)(v37 + 32) = v28;
      *(_QWORD *)(v37 + 40) = v29;
      v38 = (uint64_t)v47;
      OUTLINED_FUNCTION_10_22();
      v39 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v39(v27, v18);
      v39(v48, v18);
      AnnotatedFeature.init(feature:annotation:)(v36, v38, v18, v18, a9 + v24[16]);
      OUTLINED_FUNCTION_3();
      return;
    }
    __break(1u);
  }
  else if (a5)
  {
    OUTLINED_FUNCTION_15_23();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_22AA28E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  TimeSeriesForecasterAnnotatedWindows.makeIterator()(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

void TimeSeriesForecasterAnnotatedWindows.Iterator.next()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v57 = sub_22ABDE8DC();
  MEMORY[0x24BDAC7A8](v57);
  v10 = (char *)v46 - v9;
  v11 = *(int *)(a1 + 60);
  v12 = *(_QWORD *)(v2 + v11);
  v13 = *(_QWORD *)(v2 + *(int *)(a1 + 68));
  if (v12 >= *(_QWORD *)(v13 + 16))
  {
    v41 = OUTLINED_FUNCTION_6_38();
    v45 = OUTLINED_FUNCTION_1_25(v41, v42, v43, v44);
    __swift_storeEnumTagSinglePayload(a2, 1, 1, v45);
    return;
  }
  if (v12 < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v14 = *(_QWORD *)(v13 + 8 * v12 + 32);
  v15 = *(_QWORD *)(v3 + *(int *)(a1 + 40));
  if (__OFADD__(v14, v15))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v51 = a2;
  v52 = v15;
  v55 = v8;
  v56 = v14 + v15;
  *(_QWORD *)(v3 + v11) = v12 + 1;
  v16 = *(_QWORD *)(v3 + *(int *)(a1 + 52));
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
  v17 = OUTLINED_FUNCTION_33_2();
  v53 = xmmword_22ABE9FB0;
  *(_OWORD *)(v17 + 16) = xmmword_22ABE9FB0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
  *(_QWORD *)(v17 + 56) = v18;
  v19 = sub_22A9B8E28();
  v20 = v56;
  *(_QWORD *)(v17 + 64) = v19;
  if (v20 < v14)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v21 = v19;
  *(_QWORD *)(v17 + 32) = v14;
  *(_QWORD *)(v17 + 40) = v20;
  *(_QWORD *)(v17 + 96) = v18;
  *(_QWORD *)(v17 + 104) = v19;
  if (v16 < 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v50 = v18;
  *(_QWORD *)(v17 + 72) = 0;
  *(_QWORD *)(v17 + 80) = v16;
  v22 = OUTLINED_FUNCTION_6_38();
  v46[1] = MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v22);
  v47 = v22;
  sub_22ABDE96C();
  v23 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v23);
  v48 = v6;
  v49 = v7;
  v46[-6] = v7;
  v46[-5] = v6;
  v24 = v52;
  v46[-4] = v3;
  v46[-3] = v24;
  v46[-2] = v16;
  v25 = v57;
  v46[0] = MEMORY[0x22E2E4D80](MEMORY[0x24BDBFD50], v57);
  sub_22AA3EF20();
  v52 = 0;
  v26 = *(void (**)(char *, uint64_t))(v55 + 8);
  v26(v10, v25);
  v27 = *(_QWORD *)(v3 + *(int *)(a1 + 44));
  v28 = *(_QWORD *)(v3 + *(int *)(a1 + 56));
  v29 = OUTLINED_FUNCTION_33_2();
  v30 = v56;
  *(_OWORD *)(v29 + 16) = v53;
  v55 = v27;
  v31 = v30 + v27;
  if (__OFADD__(v30, v27))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v32 = v50;
  *(_QWORD *)(v29 + 56) = v50;
  *(_QWORD *)(v29 + 64) = v21;
  if (v31 >= v30)
  {
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = v31;
    *(_QWORD *)(v29 + 96) = v32;
    *(_QWORD *)(v29 + 104) = v21;
    if ((v28 & 0x8000000000000000) == 0)
    {
      *(_QWORD *)(v29 + 72) = 0;
      *(_QWORD *)(v29 + 80) = v28;
      v33 = v47;
      sub_22ABDE96C();
      v34 = swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](v34);
      v35 = v48;
      v46[-6] = v49;
      v46[-5] = v35;
      v36 = v55;
      v46[-4] = v3;
      v46[-3] = v36;
      v46[-2] = v28;
      sub_22AA3EF20();
      v26(v10, v25);
      v37 = v3 + *(int *)(a1 + 64);
      v39 = type metadata accessor for AnnotatedFeature(0, v33, v33, v38);
      v40 = v51;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v51, v37, v39);
      __swift_storeEnumTagSinglePayload(v40, 0, 1, v39);
      OUTLINED_FUNCTION_3();
      return;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_22AA29208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  type metadata accessor for TimeSeriesForecasterAnnotatedWindows.Iterator(0, a8, a9, a4);
  v9 = sub_22ABDE8A0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v9);
  return sub_22AA3EF7C();
}

uint64_t sub_22AA292C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for TimeSeriesForecasterAnnotatedWindows.Iterator(0, a8, a9, a4);
  v9 = sub_22ABDE8A0();
  type metadata accessor for AnnotatedFeature(0, v9, v9, v10);
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v9);
  return sub_22AA3EF7C();
}

uint64_t sub_22AA29398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  v35 = a7;
  v39 = a6;
  v37 = a5;
  v13 = a9;
  v14 = *(_QWORD *)(a11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v17;
  v36 = v18;
  result = sub_22A99EB90(v17, v18);
  if ((result & 1) != 0)
  {
    result = sub_22ABDED08();
    if (!result)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    result = sub_22ABDED08();
    if (!result)
    {
LABEL_34:
      __break(1u);
      return result;
    }
    if ((unsigned __int128)(a9 * (__int128)a10) >> 64 == (a9 * a10) >> 63)
      return sub_22ABDF5A8();
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a9 < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v34 = a1;
  if (a9)
  {
    if (a10 < 0)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v20 = 0;
    v33 = a12;
    v38 = xmmword_22ABE9FB0;
    v31 = a9;
    while (v20 != v13)
    {
      if (a10)
      {
        v21 = 0;
        v22 = v32[2];
        while (a10 != v21)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v38;
          *(_QWORD *)(inited + 32) = v20;
          *(_QWORD *)(inited + 40) = v21;
          v24 = swift_initStackObject();
          *(_OWORD *)(v24 + 16) = v38;
          *(_QWORD *)(v24 + 32) = v20;
          *(_QWORD *)(v24 + 40) = v21;
          sub_22AA3EF1C();
          result = swift_bridgeObjectRelease();
          if (v22)
          {
            v25 = v32[4];
            v26 = v20 * v25;
            if ((unsigned __int128)(v20 * (__int128)v25) >> 64 != (v20 * v25) >> 63)
              goto LABEL_26;
            if (v22 != 1)
            {
              v27 = v32[5];
              v28 = v21 * v27;
              if ((unsigned __int128)(v21 * (__int128)v27) >> 64 != (v21 * v27) >> 63)
                goto LABEL_27;
              v29 = __OFADD__(v26, v28);
              v26 += v28;
              if (v29)
                goto LABEL_28;
            }
          }
          else
          {
            v26 = 0;
          }
          ++v21;
          (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(v34 + *(_QWORD *)(v14 + 72) * v26, v16, a11);
          result = swift_bridgeObjectRelease();
          if (a10 == v21)
            goto LABEL_23;
        }
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        break;
      }
LABEL_23:
      ++v20;
      v13 = v31;
      if (v20 == v31)
        return result;
    }
    __break(1u);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_22AA29610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA29648(a1, a2, a3, a4, sub_22AA29208);
}

uint64_t sub_22AA2962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA29648(a1, a2, a3, a4, sub_22AA292C4);
}

uint64_t sub_22AA29648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v5;

  return a5(a1, a2, a3, a4, v5[4], v5[5], v5[6], v5[2], v5[3]);
}

void sub_22AA29678()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA29688()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDE8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_22AA29718(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDE8A0();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[9]), (_QWORD *)((char *)a2 + a3[9]), v7);
    v9 = a3[11];
    *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v10 = a3[13];
    *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
    v11 = a3[15];
    *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
    *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
    *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  }
  return a1;
}

uint64_t sub_22AA29800(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v8 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_22AA298BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_22AA29984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v8 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_22AA29A40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v8 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_22AA29AFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA29B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = OUTLINED_FUNCTION_1_7();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 52));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_22AA29B90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22AA29B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_22_16();
  if (v4)
    __swift_storeEnumTagSinglePayload(v1, v0, v0, v3);
  else
    *(_BYTE *)(v1 + *(int *)(v2 + 52)) = v0 + 1;
}

uint64_t sub_22AA29BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v0 = sub_22ABDE8A0();
  v2 = v0;
  if (v3 <= 0x3F)
  {
    v2 = type metadata accessor for AnnotatedFeature(319, v0, v0, v1);
    if (v4 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v2;
}

char *sub_22AA29CB8(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDE8A0();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v8(&a1[a3[9]], (char *)a2 + a3[9], v7);
    v9 = a3[11];
    *(_QWORD *)&a1[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    *(_QWORD *)&a1[v9] = *(uint64_t *)((char *)a2 + v9);
    v10 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(uint64_t *)((char *)a2 + a3[12]);
    *(_QWORD *)&a1[v10] = *(uint64_t *)((char *)a2 + v10);
    v11 = a3[15];
    *(_QWORD *)&a1[a3[14]] = *(uint64_t *)((char *)a2 + a3[14]);
    *(_QWORD *)&a1[v11] = *(uint64_t *)((char *)a2 + v11);
    v12 = a3[16];
    v13 = &a1[v12];
    v14 = (char *)a2 + v12;
    v8(&a1[v12], (char *)a2 + v12, v7);
    v16 = type metadata accessor for AnnotatedFeature(0, v7, v7, v15);
    v8(&v13[*(int *)(v16 + 36)], &v14[*(int *)(v16 + 36)], v7);
    *(_QWORD *)&a1[a3[17]] = *(uint64_t *)((char *)a2 + a3[17]);
    sub_22ABDEAEC();
  }
  return a1;
}

uint64_t sub_22AA29DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_22ABDE8A0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 36), v4);
  v6 = a1 + *(int *)(a2 + 64);
  v5(v6, v4);
  v8 = type metadata accessor for AnnotatedFeature(0, v4, v4, v7);
  v5(v6 + *(int *)(v8 + 36), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA29E90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v8 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[16];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v7(a1 + v11, a2 + v11, v6);
  v15 = type metadata accessor for AnnotatedFeature(0, v6, v6, v14);
  v7(v12 + *(int *)(v15 + 36), v13 + *(int *)(v15 + 36), v6);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA29F98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v8 = a3[16];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v12 = type metadata accessor for AnnotatedFeature(0, v6, v6, v11);
  v7(v9 + *(int *)(v12 + 36), v10 + *(int *)(v12 + 36), v6);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA2A0B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v8 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[16];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v7(a1 + v11, a2 + v11, v6);
  v15 = type metadata accessor for AnnotatedFeature(0, v6, v6, v14);
  v7(v12 + *(int *)(v15 + 36), v13 + *(int *)(v15 + 36), v6);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_22AA2A1BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v8 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[16];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v7(a1 + v11, a2 + v11, v6);
  v15 = type metadata accessor for AnnotatedFeature(0, v6, v6, v14);
  v7(v12 + *(int *)(v15 + 36), v13 + *(int *)(v15 + 36), v6);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA2A2C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA2A2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;

  v6 = OUTLINED_FUNCTION_11_35();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = OUTLINED_FUNCTION_11_35();
  v13 = OUTLINED_FUNCTION_1_25(v9, v10, v11, v12);
  if (*(_DWORD *)(*(_QWORD *)(v13 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v13;
    v8 = a1 + *(int *)(a3 + 64);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v15 = *(_QWORD *)(a1 + *(int *)(a3 + 68));
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t sub_22AA2A390()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22AA2A39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_6_38();
  OUTLINED_FUNCTION_22_16();
  if (v10)
  {
    v4 = v3;
    v5 = v1;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_6_38();
    OUTLINED_FUNCTION_1_25(v6, v7, v8, v9);
    OUTLINED_FUNCTION_22_16();
    if (!v10)
    {
      *(_QWORD *)(v1 + *(int *)(v2 + 68)) = (v0 - 1);
      return;
    }
    v4 = v11;
    v5 = v1 + *(int *)(v2 + 64);
  }
  __swift_storeEnumTagSinglePayload(v5, v0, v0, v4);
}

uint64_t type metadata accessor for TimeSeriesForecasterAnnotatedWindows.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TimeSeriesForecasterAnnotatedWindows.Iterator);
}

uint64_t sub_22AA2A444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA2A458(a1, a2, a3, a4);
}

uint64_t sub_22AA2A458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_22AA29398(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[8], v4[9], v4[2], v4[3]);
}

uint64_t OUTLINED_FUNCTION_6_38()
{
  return sub_22ABDE8A0();
}

uint64_t OUTLINED_FUNCTION_10_22()
{
  return sub_22AA3EF3C();
}

uint64_t OUTLINED_FUNCTION_11_35()
{
  return sub_22ABDE8A0();
}

uint64_t OUTLINED_FUNCTION_12_30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_13_33()
{
  return sub_22ABDE84C();
}

void OUTLINED_FUNCTION_15_23()
{
  sub_22AABE994();
}

uint64_t OUTLINED_FUNCTION_16_24()
{
  return sub_22ABDE84C();
}

uint64_t Transformer.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;

  v8[15] = a7;
  v8[16] = v7;
  v8[13] = a5;
  v8[14] = a6;
  v8[11] = a3;
  v8[12] = a4;
  v8[9] = a1;
  v8[10] = a2;
  v8[17] = *(_QWORD *)(a4 - 8);
  v8[18] = OUTLINED_FUNCTION_0_0();
  v8[19] = OUTLINED_FUNCTION_7_35();
  v8[20] = OUTLINED_FUNCTION_0_0();
  v10 = OUTLINED_FUNCTION_7_35();
  v8[21] = v10;
  v8[22] = *(_QWORD *)(v10 - 8);
  v8[23] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v8[24] = OUTLINED_FUNCTION_0_0();
  v8[25] = *(_QWORD *)(a5 - 8);
  v8[26] = OUTLINED_FUNCTION_0_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[27] = AssociatedTypeWitness;
  v8[28] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[29] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AA2A5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t (*v17)(void);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_23_5();
  v12 = sub_22ABDE9F0();
  OUTLINED_FUNCTION_19_22(v12);
  *(_QWORD *)(v11 + 176) = OUTLINED_FUNCTION_47_10();
  OUTLINED_FUNCTION_62_7();
  OUTLINED_FUNCTION_33_17();
  OUTLINED_FUNCTION_30_16();
  v13 = *(_QWORD *)(v11 + 128);
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v14)
  {
    OUTLINED_FUNCTION_75_1(*(_QWORD *)(v10 + 224));
    v15 = *(_QWORD *)(v10 + 64);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_1_26(v15, *(uint64_t (**)(void))(v10 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_71_7();
    OUTLINED_FUNCTION_84_6();
    if (v13)
    {
      OUTLINED_FUNCTION_30_0(*(_QWORD *)(v10 + 176));
      OUTLINED_FUNCTION_6_39();
      OUTLINED_FUNCTION_72_0();
      OUTLINED_FUNCTION_54_8();
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_17();
      v17 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
      return OUTLINED_FUNCTION_5_0(v17);
    }
    else
    {
      v18 = (_QWORD *)OUTLINED_FUNCTION_13_1();
      *(_QWORD *)(v10 + 248) = v18;
      v19 = OUTLINED_FUNCTION_46_12(v18);
      return OUTLINED_FUNCTION_12_9(v19, v20, v21, v22, v23, v24, a10);
    }
  }
}

uint64_t sub_22AA2A724()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
    OUTLINED_FUNCTION_87_5();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

void sub_22AA2A780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 80);
  sub_22ABDF0C8();
  if (v1)
  {
    v17 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 184);
    v2 = *(_QWORD *)(v0 + 152);
    v3 = *(void (**)(void))(v0 + 80);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 16))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 96));
    swift_retain();
    v16 = sub_22ABDED80();
    v5 = v4;
    v6 = sub_22ABDEAEC();
    v7 = MEMORY[0x22E2E3340](v6, v2);
    swift_bridgeObjectRelease();
    v8 = sub_22ABDEE70();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    OUTLINED_FUNCTION_79_5();
    v9 = OUTLINED_FUNCTION_80_6();
    *(_QWORD *)(v0 + 16) = v16;
    *(_QWORD *)(v0 + 24) = v5;
    *(_QWORD *)(v0 + 32) = v7;
    *(_QWORD *)(v0 + 40) = v8;
    *(_BYTE *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = v9;
    v3();
    sub_22A9ADA48((uint64_t)v3);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
  }
  v10 = *(_QWORD *)(v0 + 256);
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_60_7();
  if (!v11)
  {
    OUTLINED_FUNCTION_71_7();
    sub_22ABDF1DC();
    if (v10)
    {
      OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 176));
      OUTLINED_FUNCTION_6_39();
      OUTLINED_FUNCTION_72_0();
      OUTLINED_FUNCTION_54_8();
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_92();
      __asm { BR              X0 }
    }
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v14;
    OUTLINED_FUNCTION_46_12(v14);
    OUTLINED_FUNCTION_92();
    __asm { BR              X6 }
  }
  OUTLINED_FUNCTION_75_1(*(_QWORD *)(v0 + 224));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_92();
  __asm { BR              X1 }
}

uint64_t sub_22AA2A9FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 176));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Transformer.applied<A, B>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_75_6();
  v3 = v2;
  v1[16] = v4;
  v1[17] = v0;
  v1[14] = v5;
  v1[15] = v6;
  v1[12] = v7;
  v1[13] = v2;
  v1[10] = v8;
  v1[11] = v9;
  v1[9] = v10;
  v1[18] = *(_QWORD *)(v7 - 8);
  v1[19] = OUTLINED_FUNCTION_0_0();
  v1[20] = OUTLINED_FUNCTION_0_0();
  v11 = OUTLINED_FUNCTION_7_35();
  v12 = OUTLINED_FUNCTION_67_6(v11);
  v1[22] = type metadata accessor for AnnotatedFeature(v12, v13, v14, v15);
  v1[23] = OUTLINED_FUNCTION_0_0();
  v16 = OUTLINED_FUNCTION_7_35();
  v1[24] = v16;
  v1[25] = *(_QWORD *)(v16 - 8);
  v17 = OUTLINED_FUNCTION_0_0();
  v18 = OUTLINED_FUNCTION_42_11(v17);
  v19 = OUTLINED_FUNCTION_78_5(v18);
  v23 = OUTLINED_FUNCTION_59_6(v19, v20, v21, v22);
  v1[30] = v23;
  v1[31] = *(_QWORD *)(v23 - 8);
  v1[32] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v1[33] = OUTLINED_FUNCTION_0_0();
  v1[34] = *(_QWORD *)(v3 - 8);
  v1[35] = OUTLINED_FUNCTION_0_0();
  v24 = OUTLINED_FUNCTION_69_7();
  v1[36] = v24;
  v1[37] = *(_QWORD *)(v24 - 8);
  v1[38] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

uint64_t sub_22AA2ABA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t (*v6)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;

  OUTLINED_FUNCTION_23_5();
  v3 = OUTLINED_FUNCTION_44_14();
  OUTLINED_FUNCTION_19_22(v3);
  *(_QWORD *)(v2 + 248) = OUTLINED_FUNCTION_47_10();
  OUTLINED_FUNCTION_62_7();
  OUTLINED_FUNCTION_33_17();
  OUTLINED_FUNCTION_30_16();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v4)
  {
    OUTLINED_FUNCTION_20_28();
    v16 = *(_QWORD *)(v1 + 64);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_82_3();
    return OUTLINED_FUNCTION_1_26(v16, *(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_24_20();
    OUTLINED_FUNCTION_84_6();
    if (v0)
    {
      OUTLINED_FUNCTION_5_27();
      OUTLINED_FUNCTION_6_39();
      OUTLINED_FUNCTION_72_0();
      OUTLINED_FUNCTION_31_13();
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_82_3();
      v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
      return OUTLINED_FUNCTION_5_0(v6);
    }
    else
    {
      OUTLINED_FUNCTION_17_23();
      v7 = OUTLINED_FUNCTION_13_1();
      v8 = (_QWORD *)OUTLINED_FUNCTION_82_5(v7);
      v9 = OUTLINED_FUNCTION_39_14(v8);
      return OUTLINED_FUNCTION_12_9(v9, v10, v11, v12, v13, v14, v15);
    }
  }
}

uint64_t sub_22AA2ACC0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_10();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 200));
  if (v1)
    OUTLINED_FUNCTION_87_5();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA2AD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t (*v23)(void);
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_15_24();
  OUTLINED_FUNCTION_85_6();
  v4 = OUTLINED_FUNCTION_72_6();
  AnnotatedFeature.init(feature:annotation:)(v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_70_4();
  if (v0)
  {
    OUTLINED_FUNCTION_4_27();
    swift_retain();
    OUTLINED_FUNCTION_81_6();
    v9 = OUTLINED_FUNCTION_61_8();
    MEMORY[0x22E2E3340](v9, v3);
    OUTLINED_FUNCTION_83_6();
    OUTLINED_FUNCTION_76_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    OUTLINED_FUNCTION_79_5();
    v10 = OUTLINED_FUNCTION_80_6();
    OUTLINED_FUNCTION_38_16(v10);
    OUTLINED_FUNCTION_86_5();
    v11 = OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_66_9(v11, v12, v13, v14, v15, v16, v17, v18, v33, v34, v35);
    (*(void (**)())(v36 + 8))();
  }
  else
  {
    v1 = *(_QWORD *)(v2 + 248);
    v19 = *(_QWORD *)(v2 + 256);
    v20 = *(_QWORD *)(v2 + 240);
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 216));
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v19, v20);
  }
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_60_7();
  if (v21)
  {
    OUTLINED_FUNCTION_21_27();
    v37 = *(_QWORD *)(v2 + 64);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_79_4();
    return OUTLINED_FUNCTION_25_18(v37, *(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_24_20();
    sub_22ABDF1DC();
    if (v1)
    {
      OUTLINED_FUNCTION_5_27();
      OUTLINED_FUNCTION_6_39();
      OUTLINED_FUNCTION_72_0();
      OUTLINED_FUNCTION_32_14();
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_79_4();
      v23 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
      return OUTLINED_FUNCTION_12_24(v23);
    }
    else
    {
      OUTLINED_FUNCTION_17_23();
      v24 = OUTLINED_FUNCTION_52_12();
      v25 = (_QWORD *)OUTLINED_FUNCTION_82_5(v24);
      v26 = OUTLINED_FUNCTION_40_12(v25);
      return OUTLINED_FUNCTION_26_18(v26, v27, v28, v29, v30, v31, v32);
    }
  }
}

uint64_t Transformer.prediction<A, B>(from:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_75_6();
  v3 = v2;
  v1[16] = v4;
  v1[17] = v0;
  v1[14] = v5;
  v1[15] = v6;
  v1[12] = v7;
  v1[13] = v2;
  v1[10] = v8;
  v1[11] = v9;
  v1[9] = v10;
  v1[18] = *(_QWORD *)(v7 - 8);
  v1[19] = OUTLINED_FUNCTION_0_0();
  v1[20] = OUTLINED_FUNCTION_0_0();
  v11 = OUTLINED_FUNCTION_7_35();
  v12 = OUTLINED_FUNCTION_67_6(v11);
  v1[22] = type metadata accessor for AnnotatedPrediction(v12, v13, v14, v15);
  v1[23] = OUTLINED_FUNCTION_0_0();
  v16 = OUTLINED_FUNCTION_7_35();
  v1[24] = v16;
  v1[25] = *(_QWORD *)(v16 - 8);
  v17 = OUTLINED_FUNCTION_0_0();
  v18 = OUTLINED_FUNCTION_42_11(v17);
  v19 = OUTLINED_FUNCTION_78_5(v18);
  v23 = OUTLINED_FUNCTION_59_6(v19, v20, v21, v22);
  v1[30] = v23;
  v1[31] = *(_QWORD *)(v23 - 8);
  v1[32] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v1[33] = OUTLINED_FUNCTION_0_0();
  v1[34] = *(_QWORD *)(v3 - 8);
  v1[35] = OUTLINED_FUNCTION_0_0();
  v24 = OUTLINED_FUNCTION_69_7();
  v1[36] = v24;
  v1[37] = *(_QWORD *)(v24 - 8);
  v1[38] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

uint64_t sub_22AA2AFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t (*v6)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;

  OUTLINED_FUNCTION_23_5();
  v3 = OUTLINED_FUNCTION_44_14();
  OUTLINED_FUNCTION_19_22(v3);
  *(_QWORD *)(v2 + 248) = OUTLINED_FUNCTION_47_10();
  OUTLINED_FUNCTION_62_7();
  OUTLINED_FUNCTION_33_17();
  OUTLINED_FUNCTION_30_16();
  OUTLINED_FUNCTION_64_6();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v4)
  {
    OUTLINED_FUNCTION_20_28();
    v16 = *(_QWORD *)(v1 + 64);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_82_3();
    return OUTLINED_FUNCTION_1_26(v16, *(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_24_20();
    OUTLINED_FUNCTION_84_6();
    if (v0)
    {
      OUTLINED_FUNCTION_5_27();
      OUTLINED_FUNCTION_6_39();
      OUTLINED_FUNCTION_72_0();
      OUTLINED_FUNCTION_31_13();
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_82_3();
      v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
      return OUTLINED_FUNCTION_5_0(v6);
    }
    else
    {
      OUTLINED_FUNCTION_17_23();
      v7 = OUTLINED_FUNCTION_13_1();
      v8 = (_QWORD *)OUTLINED_FUNCTION_82_5(v7);
      v9 = OUTLINED_FUNCTION_39_14(v8);
      return OUTLINED_FUNCTION_12_9(v9, v10, v11, v12, v13, v14, v15);
    }
  }
}

uint64_t sub_22AA2B104()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_45_10();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 200));
  if (v1)
    OUTLINED_FUNCTION_87_5();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA2B15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t (*v23)(void);
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_15_24();
  OUTLINED_FUNCTION_85_6();
  v4 = OUTLINED_FUNCTION_72_6();
  AnnotatedPrediction.init(prediction:annotation:)(v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_70_4();
  if (v0)
  {
    OUTLINED_FUNCTION_4_27();
    swift_retain();
    OUTLINED_FUNCTION_81_6();
    v9 = OUTLINED_FUNCTION_61_8();
    MEMORY[0x22E2E3340](v9, v3);
    OUTLINED_FUNCTION_83_6();
    OUTLINED_FUNCTION_76_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    OUTLINED_FUNCTION_79_5();
    v10 = OUTLINED_FUNCTION_80_6();
    OUTLINED_FUNCTION_38_16(v10);
    OUTLINED_FUNCTION_86_5();
    v11 = OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_66_9(v11, v12, v13, v14, v15, v16, v17, v18, v33, v34, v35);
    (*(void (**)())(v36 + 8))();
  }
  else
  {
    v1 = *(_QWORD *)(v2 + 248);
    v19 = *(_QWORD *)(v2 + 256);
    v20 = *(_QWORD *)(v2 + 240);
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 216));
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v19, v20);
  }
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_60_7();
  if (v21)
  {
    OUTLINED_FUNCTION_21_27();
    v37 = *(_QWORD *)(v2 + 64);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_79_4();
    return OUTLINED_FUNCTION_25_18(v37, *(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_24_20();
    sub_22ABDF1DC();
    if (v1)
    {
      OUTLINED_FUNCTION_5_27();
      OUTLINED_FUNCTION_6_39();
      OUTLINED_FUNCTION_72_0();
      OUTLINED_FUNCTION_32_14();
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_79_4();
      v23 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
      return OUTLINED_FUNCTION_12_24(v23);
    }
    else
    {
      OUTLINED_FUNCTION_17_23();
      v24 = OUTLINED_FUNCTION_52_12();
      v25 = (_QWORD *)OUTLINED_FUNCTION_82_5(v24);
      v26 = OUTLINED_FUNCTION_40_12(v25);
      return OUTLINED_FUNCTION_26_18(v26, v27, v28, v29, v30, v31, v32);
    }
  }
}

uint64_t sub_22AA2B308()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 296);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Transformer.callAsFunction(_:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_75_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_18_26();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_41_9(v1);
  return OUTLINED_FUNCTION_36_13(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t Transformer.callAsFunction<A>(_:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22AA04CF4;
  return Transformer.applied<A>(to:eventHandler:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of Transformer.applied(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_75_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_18_26();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_41_9(v1);
  return OUTLINED_FUNCTION_36_13(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t OUTLINED_FUNCTION_4_27()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[18] + 16))(v0[19], v0[17], v0[12]);
}

uint64_t OUTLINED_FUNCTION_5_27()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[31] + 8))(v0[32], v0[30]);
}

uint64_t OUTLINED_FUNCTION_6_39()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_35()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_15_24()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[27] + 16))(v0[28], v0[29], v0[21]);
}

uint64_t OUTLINED_FUNCTION_17_23()
{
  uint64_t v0;

  return AnnotatedFeature.feature.getter(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
}

uint64_t OUTLINED_FUNCTION_18_26()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_19_22(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return sub_22ABDEE70();
}

uint64_t OUTLINED_FUNCTION_20_28()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[37] + 8))(v0[38], v0[36]);
}

uint64_t OUTLINED_FUNCTION_21_27()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[37] + 8))(v0[38], v0[36]);
}

uint64_t OUTLINED_FUNCTION_24_20()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[31] + 32))(v0[32], v0[33], v0[30]);
}

uint64_t OUTLINED_FUNCTION_25_18(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_26_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_30_16()
{
  return sub_22ABDEE58();
}

uint64_t OUTLINED_FUNCTION_31_13()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_32_14()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_33_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_36_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_37_15()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_38_16(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v1;
  *(_BYTE *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = a1;
  return v5();
}

uint64_t OUTLINED_FUNCTION_39_14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 232);
}

uint64_t OUTLINED_FUNCTION_40_12(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 232);
}

uint64_t OUTLINED_FUNCTION_41_9(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_42_11(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 208) = a1;
  *(_QWORD *)(v1 + 216) = *(_QWORD *)(v2 - 8);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_44_14()
{
  return sub_22ABDE9F0();
}

uint64_t OUTLINED_FUNCTION_45_10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 328) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_46_12(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 160);
}

uint64_t OUTLINED_FUNCTION_47_10()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_48_12()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_49_10()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_50_11()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_52_12()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_53_12()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_54_8()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_59_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 232) = a1;
  return type metadata accessor for AnnotatedFeature(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_61_8()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_62_7()
{
  return sub_22ABDF044();
}

uint64_t OUTLINED_FUNCTION_63_6()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_64_6()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_66_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 8))(a11, a10);
}

uint64_t OUTLINED_FUNCTION_67_6(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_69_7()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_70_4()
{
  return sub_22ABDF0C8();
}

uint64_t OUTLINED_FUNCTION_71_7()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[22] + 32))(v0[23], v0[24], v0[21]);
}

uint64_t OUTLINED_FUNCTION_72_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_76_7()
{
  return sub_22ABDEE70();
}

uint64_t OUTLINED_FUNCTION_78_5(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 224) = a1;
  return swift_task_alloc();
}

unint64_t OUTLINED_FUNCTION_79_5()
{
  return sub_22A9ADA0C();
}

uint64_t OUTLINED_FUNCTION_80_6()
{
  return sub_22ABDEAC8();
}

uint64_t OUTLINED_FUNCTION_81_6()
{
  return sub_22ABDED80();
}

uint64_t OUTLINED_FUNCTION_82_5(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 320) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_83_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_84_6()
{
  return sub_22ABDF1DC();
}

uint64_t OUTLINED_FUNCTION_85_6()
{
  uint64_t v0;
  uint64_t v1;

  return AnnotatedFeature.annotation.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_86_5()
{
  uint64_t v0;

  sub_22A9ADA48(v0);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_87_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t AugmentationSequence.transformer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2);
}

uint64_t AugmentationSequence.transformer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40))(v2, a1);
}

uint64_t (*AugmentationSequence.transformer.modify())()
{
  return nullsub_1;
}

void sub_22AA2BA70()
{
  OUTLINED_FUNCTION_4_28();
  type metadata accessor for AugmentationSequence();
}

uint64_t sub_22AA2BAAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v6 + *(int *)(a1 + 76), v5, v2);
  result = OUTLINED_FUNCTION_38_8(v6, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
  *(_QWORD *)(v6 + *(int *)(a1 + 80)) = v3;
  return result;
}

void AugmentationSequence.makeAsyncIterator()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD v15[2];

  v4 = v2;
  v15[1] = a2;
  v15[0] = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_34();
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v15 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4 + *(int *)(a1 + 76), v7);
  sub_22ABDEE58();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, AssociatedTypeWitness);
  OUTLINED_FUNCTION_38_8(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15[0] + 16));
  swift_retain();
  sub_22AA2BC70();
}

void sub_22AA2BC64()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA2BC70()
{
  OUTLINED_FUNCTION_15_25();
  OUTLINED_FUNCTION_4_28();
  type metadata accessor for AugmentationSequence.AsyncIterator();
}

void sub_22AA2BCA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = v3 + *(int *)(a1 + 80);
  v8 = OUTLINED_FUNCTION_13_34();
  OUTLINED_FUNCTION_19_8();
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v8);
  v12 = sub_22ABDF5D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v7, v5, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3, v4, v2);
  *(_QWORD *)(v3 + *(int *)(a1 + 76)) = v1;
  OUTLINED_FUNCTION_1_27();
}

void sub_22AA2BD28(uint64_t a1, uint64_t a2)
{
  sub_22AA2C4D8(a1, a2, (void (*)(void))AugmentationSequence.makeAsyncIterator());
}

uint64_t AugmentationSequence.AsyncIterator.next()(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v5 = a2[5];
  v3[5] = v5;
  v3[6] = *(_QWORD *)(v5 - 8);
  v3[7] = OUTLINED_FUNCTION_0_0();
  v3[8] = a2[7];
  v3[9] = a2[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[10] = AssociatedTypeWitness;
  v3[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v8 = type metadata accessor for AnnotatedFeature(255, AssociatedTypeWitness, v5, v7);
  v3[14] = v8;
  v9 = OUTLINED_FUNCTION_63_6();
  v3[15] = v9;
  v3[16] = *(_QWORD *)(v9 - 8);
  v3[17] = OUTLINED_FUNCTION_0_0();
  v3[18] = *(_QWORD *)(v8 - 8);
  v3[19] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AA2BE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 32) + *(int *)(*(_QWORD *)(v0 + 24) + 80);
  v2 = OUTLINED_FUNCTION_13_34();
  v3 = OUTLINED_FUNCTION_24_21(v1);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  if (v3)
  {
    OUTLINED_FUNCTION_19_8();
    __swift_storeEnumTagSinglePayload(v6, v7, v8, v5);
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    sub_22ABDF650();
    if (__swift_getEnumTagSinglePayload(v4, 1, v5) != 1)
    {
      v18 = *(_QWORD *)(v0 + 24);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
      *(_QWORD *)(v0 + 160) = swift_task_alloc();
      type metadata accessor for RandomNumberGeneratorReference(0, *(_QWORD *)(v18 + 32), *(_QWORD *)(v18 + 64), v19);
      OUTLINED_FUNCTION_86_4();
    }
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  v9 = sub_22ABDF5D8();
  OUTLINED_FUNCTION_75_1(*(_QWORD *)(v9 - 8));
  OUTLINED_FUNCTION_19_8();
  __swift_storeEnumTagSinglePayload(v10, v11, v12, v2);
  OUTLINED_FUNCTION_11_36();
  OUTLINED_FUNCTION_19_8();
  __swift_storeEnumTagSinglePayload(v13, v14, v15, v16);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA2BFC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t);

  *v1 = v3;
  v1[1] = sub_22AA2C014;
  v7 = v3[19];
  v8 = v3[13];
  v9 = v3[9];
  *(_QWORD *)(v5 + 16) = v3[8];
  return v11(v8, v7, v4, 0, 0, v2, a1, v9);
}

uint64_t sub_22AA2C014()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA2C064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 88) + 32))(v4, *(_QWORD *)(v0 + 104), v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v1 + *(int *)(v3 + 36), v8);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AnnotatedFeature.init(feature:annotation:)(v4, v6, v5, v8, v9);
  v10 = OUTLINED_FUNCTION_11_36();
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v11);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA2C138()
{
  uint64_t v0;

  OUTLINED_FUNCTION_75_1(*(_QWORD *)(v0 + 144));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for RandomNumberGeneratorReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RandomNumberGeneratorReference);
}

uint64_t sub_22AA2C1AC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22AA2C20C;
  return AugmentationSequence.AsyncIterator.next()(a1, a2);
}

uint64_t sub_22AA2C20C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  v1 = *v0;
  OUTLINED_FUNCTION_21_28(&v3);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22AA2C248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_22AA2F7D0;
  return sub_22ABDF1A0();
}

void AugmentationSequence.batches(ofSize:dropsLastPartialBatch:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_34();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v1);
  sub_22AA2C374();
}

void sub_22AA2C374()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_25();
  OUTLINED_FUNCTION_0_29(v0, v1, v2);
  type metadata accessor for AugmentationSequence.BatchedSequence();
}

void sub_22AA2C390()
{
  OUTLINED_FUNCTION_3_37();
  type metadata accessor for AugmentationSequence();
}

void sub_22AA2C398(uint64_t a1)
{
  OUTLINED_FUNCTION_6_40(a1);
  OUTLINED_FUNCTION_1_27();
}

void AugmentationSequence.BatchedSequence.makeAsyncIterator()()
{
  type metadata accessor for AugmentationSequence.AsyncIterator();
}

void sub_22AA2C3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v8 - 152) = *(_QWORD *)v1;
  *(_DWORD *)(v8 - 156) = *(unsigned __int8 *)(v1 + 8);
  *(_QWORD *)(v8 - 136) = v0;
  *(_QWORD *)(v8 - 128) = v2;
  *(_QWORD *)(v8 - 120) = v3;
  *(_QWORD *)(v8 - 112) = v4;
  *(_QWORD *)(v8 - 104) = v5;
  *(_QWORD *)(v8 - 96) = v6;
  *(_QWORD *)(v8 - 88) = v7;
  type metadata accessor for AugmentationSequence();
}

void sub_22AA2C444(uint64_t a1)
{
  uint64_t v1;

  AugmentationSequence.makeAsyncIterator()(a1, v1);
}

void sub_22AA2C44C()
{
  sub_22AA2C49C();
}

void sub_22AA2C474()
{
  OUTLINED_FUNCTION_3();
}

void type metadata accessor for AugmentationSequence.AsyncIterator()
{
  JUMPOUT(0x22E2E4CF0);
}

void type metadata accessor for AugmentationSequence()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA2C49C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_25();
  OUTLINED_FUNCTION_0_29(v0, v1, v2);
  type metadata accessor for AugmentationSequence.BatchedSequence.AsyncIterator();
}

void sub_22AA2C4B8()
{
  OUTLINED_FUNCTION_3_37();
  type metadata accessor for AugmentationSequence.AsyncIterator();
}

void sub_22AA2C4C0(uint64_t a1)
{
  OUTLINED_FUNCTION_6_40(a1);
  OUTLINED_FUNCTION_1_27();
}

void sub_22AA2C4CC(uint64_t a1, uint64_t a2)
{
  sub_22AA2C4D8(a1, a2, (void (*)(void))AugmentationSequence.BatchedSequence.makeAsyncIterator());
}

void sub_22AA2C4D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  JUMPOUT(0x22AA2C4ECLL);
}

uint64_t AugmentationSequence.BatchedSequence.AsyncIterator.next()(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[11] = a1;
  v2[12] = v1;
  v2[13] = a1[7];
  v2[14] = a1[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = a1[5];
  v2[15] = v5;
  v7 = type metadata accessor for AnnotatedFeature(255, AssociatedTypeWitness, v5, v6);
  v2[16] = v7;
  v8 = OUTLINED_FUNCTION_63_6();
  v2[17] = v8;
  v2[18] = *(_QWORD *)(v8 - 8);
  v2[19] = OUTLINED_FUNCTION_0_0();
  v2[20] = *(_QWORD *)(v7 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AA2C5C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(uint64_t **)(v0 + 96);
  *(_QWORD *)(v0 + 72) = sub_22ABDE9F0();
  v3 = *v2;
  *(_QWORD *)(v0 + 184) = sub_22ABDF0F8();
  sub_22ABDF044();
  v4 = sub_22ABDEAEC();
  MEMORY[0x22E2E3340](v4, v1);
  OUTLINED_FUNCTION_29_17();
  if (v1 < v3)
  {
    v5 = *(_QWORD *)(v0 + 88);
    *(_DWORD *)(v0 + 208) = *(_DWORD *)(v5 + 80);
    v7 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 192) = swift_task_alloc();
    v9 = *(_QWORD *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 48);
    v11 = *(_QWORD *)(v5 + 64);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v5 + 16);
    *(_QWORD *)(v0 + 24) = v7;
    *(_QWORD *)(v0 + 32) = v9;
    *(_QWORD *)(v0 + 40) = v6;
    *(_QWORD *)(v0 + 48) = v10;
    *(_QWORD *)(v0 + 56) = v8;
    *(_QWORD *)(v0 + 64) = v11;
    type metadata accessor for AugmentationSequence.AsyncIterator();
  }
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA2C6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((OUTLINED_FUNCTION_32_15() & 1) != 0
    || (v3 = *(_QWORD *)(v2 + 96), *(_BYTE *)(v3 + 8) == 1)
    && (v4 = OUTLINED_FUNCTION_30_17(), v5 = MEMORY[0x22E2E3340](v4, v1), OUTLINED_FUNCTION_23(), v5 < *(_QWORD *)v3))
  {
    OUTLINED_FUNCTION_23();
    v0 = 0;
  }
  OUTLINED_FUNCTION_28_16();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v0);
}

uint64_t sub_22AA2C75C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AA2C7AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0[19];
  v2 = v0[16];
  if (OUTLINED_FUNCTION_24_21(v1) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v0[18] + 8))(v1, v0[17]);
  }
  else
  {
    v3 = v0[22];
    v5 = v0[20];
    v4 = v0[21];
    v6 = (_QWORD *)v0[12];
    OUTLINED_FUNCTION_38_8(v3, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    OUTLINED_FUNCTION_38_8(v4, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_22ABDF0C8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
    v7 = sub_22ABDEAEC();
    MEMORY[0x22E2E3340](v7, v2);
    OUTLINED_FUNCTION_29_17();
    if (v2 < *v6)
    {
      v9 = v0[14];
      v8 = v0[15];
      v10 = v0[13];
      v11 = (_QWORD *)v0[11];
      v0[24] = swift_task_alloc();
      v12 = v11[4];
      v13 = v11[6];
      v14 = v11[8];
      v0[2] = v11[2];
      v0[3] = v9;
      v0[4] = v12;
      v0[5] = v8;
      v0[6] = v13;
      v0[7] = v10;
      v0[8] = v14;
      type metadata accessor for AugmentationSequence.AsyncIterator();
    }
  }
  v0[10] = v0[9];
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA2C90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((OUTLINED_FUNCTION_32_15() & 1) != 0
    || (v3 = *(_QWORD *)(v2 + 96), *(_BYTE *)(v3 + 8) == 1)
    && (v4 = OUTLINED_FUNCTION_30_17(), v5 = MEMORY[0x22E2E3340](v4, v1), OUTLINED_FUNCTION_23(), v5 < *(_QWORD *)v3))
  {
    OUTLINED_FUNCTION_23();
    v0 = 0;
  }
  OUTLINED_FUNCTION_28_16();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v0);
}

uint64_t sub_22AA2C980()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22AA2C9D0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA2C9E0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA2C9F0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_22AA2CA40;
  return AugmentationSequence.BatchedSequence.AsyncIterator.next()(a2);
}

uint64_t sub_22AA2CA40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  OUTLINED_FUNCTION_21_28(&v7);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22AA2CA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_22AA2CB30;
  return sub_22ABDF1A0();
}

uint64_t sub_22AA2CB30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *v1;
  v5 = *v1;
  v3 = *v1;
  OUTLINED_FUNCTION_21_28(&v5);
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_22AA2CB88()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22AA2CC20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  v13 = (*(_DWORD *)(v6 + 80) | v8) & 0x100000;
  if (v12 > 7 || v13 != 0 || ((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v5);
    *(_QWORD *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v11 + v18) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v4;
}

uint64_t sub_22AA2CD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v4 + 8))();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v4 + 64)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_release();
}

uint64_t sub_22AA2CDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_22AA2CE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22AA2CEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AA2CF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_22AA2D00C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v20;

  v6 = a3 + 16;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v6 + 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = *(_QWORD *)(v9 + 64) + 7;
  if (v11 < a2)
  {
    if (((((v15 + (v14 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v11 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    return ((uint64_t (*)(void))((char *)&loc_22AA2D0AC + 4 * byte_22ABEFBA0[v18]))();
  }
  if ((_DWORD)v8 == v11)
  {
    v10 = v8;
    v4 = v5;
    return __swift_getEnumTagSinglePayload(a1, v10, v4);
  }
  a1 = (v14 + a1) & ~v13;
  if ((_DWORD)v10 == v11)
    return __swift_getEnumTagSinglePayload(a1, v10, v4);
  v20 = *(_QWORD *)((v15 + a1) & 0xFFFFFFFFFFFFF8);
  if (v20 >= 0xFFFFFFFF)
    LODWORD(v20) = -1;
  return (v20 + 1);
}

void sub_22AA2D14C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = ((*(_QWORD *)(v6 + 64)
       + 7
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v7 >= a3)
  {
    v11 = 0;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + 7
         + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v12 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_22AA2D260(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v9 + v10) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v4 == v6)
    {
      v11 = v9;
      a2 = v4;
      a3 = a4;
LABEL_5:
      __swift_storeEnumTagSinglePayload(v11, a1, a2, a3);
      return;
    }
    v11 = (v8 + v9) & v5;
    if ((_DWORD)a2 == v6)
      goto LABEL_5;
    if ((a1 & 0x80000000) != 0)
      v12 = a1 ^ 0x80000000;
    else
      v12 = (a1 - 1);
    *(_QWORD *)((v7 + v11) & 0xFFFFFFFFFFFFFFF8) = v12;
  }
}

uint64_t sub_22AA2D300()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_22ABDF5D8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22AA2D3B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  const void *v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (((*(_DWORD *)(v6 + 80) | v10) & 0x100000) != 0
    || (v12 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~(unint64_t)v10) <= 0x18
      ? (v14 = v13 > 7)
      : (v14 = 1),
        v14))
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    v15 = AssociatedTypeWitness;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v16 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v16 = *v17;
    v18 = (void *)(((unint64_t)v16 + v11 + 8) & ~v11);
    v19 = (const void *)(((unint64_t)v17 + v11 + 8) & ~v11);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v15))
    {
      memcpy(v18, v19, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v18, v19, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t sub_22AA2D540(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = __swift_getEnumTagSinglePayload(v7, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, AssociatedTypeWitness);
  return result;
}

uint64_t sub_22AA2D5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  size_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v10 + 84))
      v14 = *(_QWORD *)(v10 + 64);
    else
      v14 = *(_QWORD *)(v10 + 64) + 1;
    memcpy(v12, v13, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_22AA2D70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int EnumTagSinglePayload;
  size_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_retain();
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  LODWORD(v8) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, AssociatedTypeWitness);
  if ((_DWORD)v8)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 24))(v12, v13, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v10 + 84))
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v12, v13, v15);
  return a1;
}

uint64_t sub_22AA2D864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  size_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v10 + 84))
      v14 = *(_QWORD *)(v10 + 64);
    else
      v14 = *(_QWORD *)(v10 + 64) + 1;
    memcpy(v12, v13, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_22AA2D968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int EnumTagSinglePayload;
  size_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  LODWORD(v8) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, AssociatedTypeWitness);
  if ((_DWORD)v8)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 40))(v12, v13, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v10 + 84))
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v12, v13, v15);
  return a1;
}

uint64_t sub_22AA2DAB8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unsigned int EnumTagSinglePayload;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  v11 = v10 - 1;
  if (!(_DWORD)v10)
    v11 = 0;
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if ((_DWORD)v10)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  if (!a2)
    return 0;
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(unsigned __int8 *)(v9 + 80);
  if (a2 <= v13)
    goto LABEL_31;
  v17 = v14 + ((v16 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16);
  v18 = 8 * v17;
  if (v17 > 3)
    goto LABEL_15;
  v20 = ((a2 - v13 + ~(-1 << v18)) >> v18) + 1;
  if (HIWORD(v20))
  {
    v19 = *(_DWORD *)(a1 + v17);
    if (v19)
      goto LABEL_22;
LABEL_31:
    if ((_DWORD)v7 == v13)
      return __swift_getEnumTagSinglePayload(a1, v7, v5);
    v23 = (unint64_t *)((a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
    if ((v12 & 0x80000000) == 0)
    {
      v24 = *v23;
      if (v24 >= 0xFFFFFFFF)
        LODWORD(v24) = -1;
      return (v24 + 1);
    }
    if (v10 >= 2)
    {
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)v23 + v16 + 8) & ~v16, v10, AssociatedTypeWitness);
      if (EnumTagSinglePayload >= 2)
        return EnumTagSinglePayload - 1;
      else
        return 0;
    }
    return 0;
  }
  if (v20 > 0xFF)
  {
    v19 = *(unsigned __int16 *)(a1 + v17);
    if (*(_WORD *)(a1 + v17))
      goto LABEL_22;
    goto LABEL_31;
  }
  if (v20 < 2)
    goto LABEL_31;
LABEL_15:
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_31;
LABEL_22:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v22 = v17;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return v13 + v21 + 1;
}

void sub_22AA2DCC8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  size_t v16;
  char v17;
  unsigned int v18;
  int v19;
  int v20;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v8 > v12)
    v12 = v8;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = (*(unsigned __int8 *)(v10 + 80) + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v15;
  v16 = v15 + v14;
  v17 = 8 * (v15 + v14);
  if (a3 > v13)
  {
    if (v16 <= 3)
    {
      v18 = ((a3 - v13 + ~(-1 << v17)) >> v17) + 1;
      if (HIWORD(v18))
      {
        v9 = 4u;
      }
      else if (v18 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v18 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  if (v13 < a2)
  {
    v19 = ~v13 + a2;
    if (v16 < 4)
    {
      if ((_DWORD)v16)
      {
        v20 = v19 & ~(-1 << v17);
        bzero(a1, v16);
        if ((_DWORD)v16 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if ((_DWORD)v16 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_22AA2DF08()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x22AA2DF28);
}

void sub_22AA2DF10()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x22AA2DF28);
}

void sub_22AA2DF18()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x22AA2DF28);
}

void sub_22AA2DF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AA2E844(a1, a2, a3, (void (*)(uint64_t, _OWORD *))type metadata accessor for AugmentationSequence);
}

_QWORD *sub_22AA2DF50(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8 | v7;
  v9 = v8 | 7;
  v10 = ~v9;
  v11 = *(_QWORD *)(v5 + 64) + v7;
  v12 = *(_QWORD *)(v6 + 64) + 7;
  if (v8 > 7
    || ((v7 | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((v9 + 9) & ~v9) + ((v12 + (v11 & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v9 + 16) & v10));
  }
  else
  {
    v16 = ~(unint64_t)v7;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v17 = (a1 + 16) & v10;
    v18 = (unint64_t)(a2 + 2) & v10;
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v17, v18);
    v19 = (v11 + v17) & v16;
    v20 = (v11 + v18) & v16;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v19, v20, v4);
    *(_QWORD *)((v12 + v19) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + v20) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v3;
}

uint64_t sub_22AA2E088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_DWORD *)(v3 + 80) & 0xF8 | v5 | 7;
  v7 = (a1 + v6 + 9) & ~v6;
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v7, *(_QWORD *)(a2 + 24));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))((*(_QWORD *)(v3 + 64) + v5 + v7) & ~v5, v2);
  return swift_release();
}

uint64_t sub_22AA2E120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8 | v7 | 7;
  v9 = (v8 + 9 + a1) & ~v8;
  v10 = (v8 + 9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16))(v9, v10, *(_QWORD *)(a3 + 24));
  v11 = *(_QWORD *)(v5 + 64) + v7;
  v12 = (v11 + v9) & ~v7;
  v13 = (v11 + v10) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v12, v13, v4);
  *(_QWORD *)((*(_QWORD *)(v6 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v6 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_22AA2E200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8 | v7 | 7;
  v9 = (v8 + 9 + a1) & ~v8;
  v10 = (v8 + 9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(v9, v10, *(_QWORD *)(a3 + 24));
  v11 = *(_QWORD *)(v5 + 64) + v7;
  v12 = (v11 + v9) & ~v7;
  v13 = (v11 + v10) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v12, v13, v4);
  *(_QWORD *)((*(_QWORD *)(v6 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v6 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22AA2E2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8 | v7 | 7;
  v9 = (v8 + 9 + a1) & ~v8;
  v10 = (v8 + 9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(v9, v10, *(_QWORD *)(a3 + 24));
  v11 = *(_QWORD *)(v5 + 64) + v7;
  v12 = (v11 + v9) & ~v7;
  v13 = (v11 + v10) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v12, v13, v4);
  *(_QWORD *)((*(_QWORD *)(v6 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v6 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AA2E3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8 | v7 | 7;
  v9 = (v8 + 9 + a1) & ~v8;
  v10 = (v8 + 9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(v9, v10, *(_QWORD *)(a3 + 24));
  v11 = *(_QWORD *)(v5 + 64) + v7;
  v12 = (v11 + v9) & ~v7;
  v13 = (v11 + v10) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v12, v13, v4);
  *(_QWORD *)((*(_QWORD *)(v6 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v6 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_22AA2E4AC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;

  v6 = a3 + 16;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v6 + 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_DWORD *)(v7 + 80) & 0xF8 | v12 | 7;
  v14 = *(_QWORD *)(v7 + 64) + v12;
  v15 = *(_QWORD *)(v9 + 64) + 7;
  v16 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_24;
  v17 = ((v13 + 9) & ~v13) + ((v15 + (v14 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v18 = 8 * v17;
  if (v17 > 3)
    goto LABEL_9;
  v21 = ((v16 + ~(-1 << v18)) >> v18) + 1;
  if (HIWORD(v21))
  {
    v19 = *(_DWORD *)((char *)a1 + v17);
    if (v19)
      goto LABEL_17;
  }
  else
  {
    if (v21 <= 0xFF)
    {
      if (v21 < 2)
        goto LABEL_24;
LABEL_9:
      v19 = *((unsigned __int8 *)a1 + v17);
      if (!*((_BYTE *)a1 + v17))
        goto LABEL_24;
LABEL_17:
      v22 = (v19 - 1) << v18;
      if (v17 > 3)
        v22 = 0;
      if ((((_DWORD)v13 + 9) & ~(_DWORD)v13) + (((_DWORD)v15 + (v14 & ~(_DWORD)v12)) & 0xFFFFFFF8) == -8)
        v23 = 0;
      else
        v23 = *a1;
      return v11 + (v23 | v22) + 1;
    }
    v19 = *(unsigned __int16 *)((char *)a1 + v17);
    if (*(_WORD *)((char *)a1 + v17))
      goto LABEL_17;
  }
LABEL_24:
  v24 = ((unint64_t)a1 + v13 + 9) & ~v13;
  if ((_DWORD)v8 == v11)
  {
    v10 = v8;
    v4 = v5;
    return __swift_getEnumTagSinglePayload(v24, v10, v4);
  }
  v24 = (v14 + v24) & ~v12;
  if ((_DWORD)v10 == v11)
    return __swift_getEnumTagSinglePayload(v24, v10, v4);
  v25 = *(_QWORD *)((v15 + v24) & 0xFFFFFFFFFFFFF8);
  if (v25 >= 0xFFFFFFFF)
    LODWORD(v25) = -1;
  return (v25 + 1);
}

void sub_22AA2E614(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  char v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (((*(_DWORD *)(v5 + 80) & 0xF8 | v8 | 7) + 9) & ~(unint64_t)(*(_DWORD *)(v5 + 80) & 0xF8 | v8 | 7))
     + ((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  v10 = 8 * v9;
  if (a3 > v7)
  {
    if (v9 <= 3)
    {
      v13 = ((a3 - v7 + ~(-1 << v10)) >> v10) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 >= a2)
    __asm { BR              X0 }
  v12 = ~v7 + a2;
  if (v9 <= 3)
  {
    if (!(_DWORD)v9)
      goto LABEL_21;
    v12 &= ~(-1 << v10);
  }
  bzero(a1, v9);
  *a1 = v12;
LABEL_21:
  __asm { BR              X10 }
}

void type metadata accessor for AugmentationSequence.BatchedSequence()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA2E838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AA2E844(a1, a2, a3, (void (*)(uint64_t, _OWORD *))type metadata accessor for AugmentationSequence.AsyncIterator);
}

void sub_22AA2E844(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _OWORD *))
{
  uint64_t v4;
  __int128 v5;
  _OWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v8 = MEMORY[0x24BEE0178] + 64;
  v9 = &unk_22ABEFD58;
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 32);
  v6[0] = *(_OWORD *)(a1 + 16);
  v6[1] = v5;
  v6[2] = *(_OWORD *)(a1 + 48);
  v7 = v4;
  a4(319, v6);
  JUMPOUT(0x22AA2E894);
}

uint64_t sub_22AA2E8E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  const void *v26;
  uint64_t v29;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 & 0xF8 | v10;
  v12 = v11 | 7;
  v13 = ~v12;
  v14 = *(_QWORD *)(v6 + 64) + 7;
  v15 = v10 + 8;
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = *(_QWORD *)(v9 + 64) + 1;
  if (v11 > 7
    || ((*(_DWORD *)(v9 + 80) | v7) & 0x100000) != 0
    || ((v12 + 9) & ~v12) + v16 + ((v10 + 8 + (v14 & 0xFFFFFFFFFFFFFFF8)) & ~v10) > 0x18)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v12 + 16) & v13);
    swift_retain();
  }
  else
  {
    v29 = AssociatedTypeWitness;
    v20 = ~v10;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v21 = (a1 + 16) & v13;
    v22 = (unint64_t)(a2 + 2) & v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v21, v22, v5);
    v23 = (_QWORD *)((v14 + v21) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)((v14 + v22) & 0xFFFFFFFFFFFFFFF8);
    *v23 = *v24;
    v25 = (void *)(((unint64_t)v23 + v15) & v20);
    v26 = (const void *)(((unint64_t)v24 + v15) & v20);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v29))
    {
      memcpy(v25, v26, v16);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v25, v26, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v29);
    }
  }
  return a1;
}

uint64_t sub_22AA2EA98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (a1 + (v5 | v8 | 7) + 9) & ~(unint64_t)(v5 | v8 | 7);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v9, v3);
  v10 = (*(_QWORD *)(v4 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v11 = (v8 + v10 + 8) & ~v8;
  result = __swift_getEnumTagSinglePayload(v11, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, AssociatedTypeWitness);
  return result;
}

uint64_t sub_22AA2EB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  const void *v18;
  size_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v12 = (v11 + 9 + a1) & ~v11;
  v13 = (v11 + 9 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v12, v13, v5);
  v14 = *(_QWORD *)(v6 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (void *)(((unint64_t)v15 + v10 + 8) & ~v10);
  v18 = (const void *)(((unint64_t)v16 + v10 + 8) & ~v10);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v9 + 84))
      v19 = *(_QWORD *)(v9 + 64);
    else
      v19 = *(_QWORD *)(v9 + 64) + 1;
    memcpy(v17, v18, v19);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v17, v18, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_22AA2ECD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  const void *v18;
  int EnumTagSinglePayload;
  size_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v12 = (v11 + 9 + a1) & ~v11;
  v13 = (v11 + 9 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v12, v13, v5);
  v14 = *(_QWORD *)(v6 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  swift_retain();
  swift_release();
  v17 = (void *)(((unint64_t)v15 + v10 + 8) & ~v10);
  v18 = (const void *)(((unint64_t)v16 + v10 + 8) & ~v10);
  LODWORD(v16) = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, AssociatedTypeWitness);
  if ((_DWORD)v16)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v17, v18, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(v17, v18, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v17, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v9 + 84))
    v20 = *(_QWORD *)(v9 + 64);
  else
    v20 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v17, v18, v20);
  return a1;
}

uint64_t sub_22AA2EE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  const void *v18;
  size_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v12 = (v11 + 9 + a1) & ~v11;
  v13 = (v11 + 9 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v12, v13, v5);
  v14 = *(_QWORD *)(v6 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (void *)(((unint64_t)v15 + v10 + 8) & ~v10);
  v18 = (const void *)(((unint64_t)v16 + v10 + 8) & ~v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v9 + 84))
      v19 = *(_QWORD *)(v9 + 64);
    else
      v19 = *(_QWORD *)(v9 + 64) + 1;
    memcpy(v17, v18, v19);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v17, v18, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_22AA2EFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  const void *v18;
  int EnumTagSinglePayload;
  size_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v12 = (v11 + 9 + a1) & ~v11;
  v13 = (v11 + 9 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v12, v13, v5);
  v14 = *(_QWORD *)(v6 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  swift_release();
  v17 = (void *)(((unint64_t)v15 + v10 + 8) & ~v10);
  v18 = (const void *)(((unint64_t)v16 + v10 + 8) & ~v10);
  LODWORD(v16) = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, AssociatedTypeWitness);
  if ((_DWORD)v16)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v17, v18, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v17, v18, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v17, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v9 + 84))
    v20 = *(_QWORD *)(v9 + 64);
  else
    v20 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v17, v18, v20);
  return a1;
}

uint64_t sub_22AA2F148(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int EnumTagSinglePayload;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  v11 = v10 - 1;
  if (!(_DWORD)v10)
    v11 = 0;
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if ((_DWORD)v10)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  if (!a2)
    return 0;
  v15 = AssociatedTypeWitness;
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = *(_DWORD *)(v6 + 80) & 0xF8 | v16 | 7;
  v18 = *(_QWORD *)(v6 + 64) + 7;
  v19 = v16 + 8;
  if (a2 <= v13)
    goto LABEL_31;
  v20 = v14 + ((v19 + (v18 & 0xFFFFFFFFFFFFFFF8)) & ~v16) + ((v17 + 9) & ~v17);
  v21 = 8 * v20;
  if (v20 > 3)
    goto LABEL_15;
  v23 = ((a2 - v13 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v23))
  {
    v22 = *(_DWORD *)(a1 + v20);
    if (v22)
      goto LABEL_22;
LABEL_31:
    v26 = (a1 + v17 + 9) & ~v17;
    if ((_DWORD)v7 == v13)
      return __swift_getEnumTagSinglePayload(v26, v7, v5);
    v27 = (unint64_t *)((v18 + v26) & 0xFFFFFFFFFFFFFFF8);
    if ((v12 & 0x80000000) == 0)
    {
      v28 = *v27;
      if (v28 >= 0xFFFFFFFF)
        LODWORD(v28) = -1;
      return (v28 + 1);
    }
    if (v10 >= 2)
    {
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)v27 + v19) & ~v16, v10, v15);
      if (EnumTagSinglePayload >= 2)
        return EnumTagSinglePayload - 1;
      else
        return 0;
    }
    return 0;
  }
  if (v23 > 0xFF)
  {
    v22 = *(unsigned __int16 *)(a1 + v20);
    if (*(_WORD *)(a1 + v20))
      goto LABEL_22;
    goto LABEL_31;
  }
  if (v23 < 2)
    goto LABEL_31;
LABEL_15:
  v22 = *(unsigned __int8 *)(a1 + v20);
  if (!*(_BYTE *)(a1 + v20))
    goto LABEL_31;
LABEL_22:
  v24 = (v22 - 1) << v21;
  if (v20 > 3)
    v24 = 0;
  if ((_DWORD)v20)
  {
    if (v20 <= 3)
      v25 = v20;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  return v13 + v24 + 1;
}

void sub_22AA2F378(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  char v18;
  unsigned int v19;
  int v20;
  int v21;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v8 > v12)
    v12 = v8;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v16 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v16;
  v15 = *(_DWORD *)(v7 + 80) & 0xF8 | v14 | 7;
  v17 = v16 + ((v14 + 8 + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v14) + ((v15 + 9) & ~v15);
  v18 = 8 * v17;
  if (a3 > v13)
  {
    if (v17 <= 3)
    {
      v19 = ((a3 - v13 + ~(-1 << v18)) >> v18) + 1;
      if (HIWORD(v19))
      {
        v9 = 4u;
      }
      else if (v19 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v19 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  if (v13 < a2)
  {
    v20 = ~v13 + a2;
    if (v17 < 4)
    {
      if ((_DWORD)v17)
      {
        v21 = v20 & ~(-1 << v18);
        bzero(a1, v17);
        if ((_DWORD)v17 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if ((_DWORD)v17 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v20;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_22AA2F5D8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x22AA2F5F8);
}

void sub_22AA2F5E0()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x22AA2F5F8);
}

void sub_22AA2F5E8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x22AA2F5F8);
}

void type metadata accessor for AugmentationSequence.BatchedSequence.AsyncIterator()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AA2F624()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_22AA2F694(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_22AA2F6D0(a1);
  return v2;
}

uint64_t sub_22AA2F6D0(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1);
  return v1;
}

uint64_t sub_22AA2F704()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = sub_22ABDEBF4();
  swift_endAccess();
  return v0;
}

uint64_t sub_22AA2F75C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t sub_22AA2F78C()
{
  sub_22AA2F75C();
  return swift_deallocClassInstance();
}

uint64_t sub_22AA2F7B0()
{
  return sub_22AA2F704();
}

uint64_t OUTLINED_FUNCTION_0_29@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = a2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_3_37()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_4_28()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_6_40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_11_36()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_13_34()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_21_28@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_24_21(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_28_16()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_29_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_17()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_32_15()
{
  return sub_22ABDF434();
}

id sub_22AA2F904()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_22ABDED2C();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

uint64_t sub_22AA2F98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t inited;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_22ABDCF08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  v18 = a2;
  sub_22ABDCEFC();
  sub_22AA2FBE8();
  v8 = sub_22ABDF674();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (*(_QWORD *)(v8 + 16))
  {
    sub_22ABDEAEC();
    swift_bridgeObjectRelease();
    v17 = a1;
    v18 = a2;
    sub_22ABDEAEC();
    sub_22ABDEDC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86B0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABEDF90;
    *(_QWORD *)(inited + 32) = 0x6574616C706D6554;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    v11 = sub_22ABDED2C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 48) = v11;
    *(_QWORD *)(inited + 56) = 0x656C646E7542;
    *(_QWORD *)(inited + 64) = 0xE600000000000000;
    v12 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    sub_22AA2FD5C(v12);
    v13 = sub_22ABDED2C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 72) = v13;
    *(_QWORD *)(inited + 80) = 0x6574616C706D6554;
    *(_QWORD *)(inited + 88) = 0xEF65736F62726556;
    v14 = sub_22ABDED2C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 96) = v14;
    sub_22AA2FDC8();
    v15 = sub_22ABDEAC8();
    LOBYTE(inited) = sub_22AA2FC24(0xD000000000000020, 0x800000022ABE30E0, v15);
    swift_bridgeObjectRelease();
    return inited & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_22AA2FBE8()
{
  unint64_t result;

  result = qword_2540E8588;
  if (!qword_2540E8588)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2540E8588);
  }
  return result;
}

uint64_t sub_22AA2FC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v9[6];

  v4 = (void *)sub_22ABDED2C();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  v9[4] = sub_22AA2FE28;
  v9[5] = v5;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_22AA2FCE8;
  v9[3] = &block_descriptor_1;
  v6 = _Block_copy(v9);
  sub_22ABDEAEC();
  swift_release();
  v7 = AnalyticsSendEventLazy();
  _Block_release(v6);

  return v7;
}

id sub_22AA2FCE8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_22AA2FDC8();
    v4 = (void *)sub_22ABDEAA4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_22AA2FD5C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2)
    return 0;
  v3 = sub_22ABDED50();

  return v3;
}

unint64_t sub_22AA2FDC8()
{
  unint64_t result;

  result = qword_2540E8630;
  if (!qword_2540E8630)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540E8630);
  }
  return result;
}

uint64_t sub_22AA2FE04()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22AA2FE28()
{
  return sub_22ABDEAEC();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t dispatch thunk of EstimatorEncoder.encode<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of EstimatorEncoder.encodeOptimizer<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of EstimatorDecoder.decode<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of EstimatorDecoder.decodeOptimizer<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

void TemporalEstimator.fitted<A>(to:)()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  OUTLINED_FUNCTION_3_38();
  __asm { BR              X8 }
}

void UpdatableTemporalEstimator.update<A>(_:with:)()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_3_38();
  __asm { BR              X8 }
}

uint64_t dispatch thunk of TemporalEstimator.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)OUTLINED_FUNCTION_0_30();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  OUTLINED_FUNCTION_5_28();
  return v3(v2);
}

uint64_t dispatch thunk of TemporalEstimator.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of TemporalEstimator.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of UpdatableTemporalEstimator.makeTransformer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UpdatableTemporalEstimator.update<A>(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)OUTLINED_FUNCTION_0_30();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_5_28();
  return v3(v2);
}

uint64_t dispatch thunk of UpdatableTemporalEstimator.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return dispatch thunk of TemporalEstimator.encode(_:to:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of UpdatableTemporalEstimator.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of TemporalEstimator.decode(from:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_30()
{
  return swift_task_alloc();
}

void DatasetError.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = sub_22ABDD0E8();
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for DatasetError();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_7_36();
  sub_22AA30490(v0, v0);
  v3 = (char *)sub_22AA30218 + 4 * byte_22ABEFE80[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22AA30218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_4_29();
  sub_22ABDF7A0();
  OUTLINED_FUNCTION_8_28();
  *(_QWORD *)(v3 - 80) = 0xD000000000000013;
  *(_QWORD *)(v3 - 72) = 0x800000022ABE31C0;
  sub_22A9BED8C((unint64_t *)&qword_2540E89D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  OUTLINED_FUNCTION_1_28();
  OUTLINED_FUNCTION_9_29();
  OUTLINED_FUNCTION_2_1();
  sub_22ABDEDC8();
  v4 = *(_QWORD *)(v3 - 80);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  return v4;
}

uint64_t type metadata accessor for DatasetError()
{
  uint64_t result;

  result = qword_255B120A8;
  if (!qword_255B120A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22AA30490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DatasetError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static DatasetError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[5];
  uint64_t v19;

  v19 = a2;
  v4 = sub_22ABDD0E8();
  v18[3] = *(_QWORD *)(v4 - 8);
  v18[4] = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v18[2] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v18[1] = (char *)v18 - v9;
  MEMORY[0x24BDAC7A8](v8);
  type metadata accessor for DatasetError();
  OUTLINED_FUNCTION_1_0();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B12030);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_7_36();
  v16 = v2 + *(int *)(v15 + 48);
  sub_22AA30490(a1, v2);
  sub_22AA30490(v19, v16);
  v17 = (char *)sub_22AA3067C + 4 * byte_22ABEFE84[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22AA3067C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_22AA30490(v0, v2);
  if (OUTLINED_FUNCTION_3_39())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 104) + 8))(v2, *(_QWORD *)(v3 - 96));
    sub_22AA30900(v0);
    v4 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_17_24(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 32));
    v4 = MEMORY[0x22E2E133C](v2, v1);
    OUTLINED_FUNCTION_15_26(v1);
    OUTLINED_FUNCTION_15_26(v2);
    OUTLINED_FUNCTION_12_31();
  }
  return v4 & 1;
}

uint64_t sub_22AA30900(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B12030);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA30940(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DatasetError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA3097C()
{
  return sub_22A9BED8C((unint64_t *)&qword_255B11498, (uint64_t (*)(uint64_t))type metadata accessor for DatasetError, (uint64_t)&protocol conformance descriptor for DatasetError);
}

uint64_t initializeBufferWithCopyOfBuffer for DatasetError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_22AA30A04 + 4 * byte_22ABEFE88[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for DatasetError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
      v3 = sub_22ABDD0E8();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 1:
    case 3:
      v4 = sub_22ABDD0E8();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B114A0);
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for DatasetError()
{
  char *v0;

  v0 = (char *)sub_22AA30C30 + 4 * byte_22ABEFE90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22AA30C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for DatasetError(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22AA30940(result);
    v2 = (char *)&loc_22AA30D14 + 4 * byte_22ABEFE94[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for DatasetError()
{
  char *v0;

  v0 = (char *)sub_22AA30DF0 + 4 * byte_22ABEFE98[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22AA30DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for DatasetError(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22AA30940(result);
    v2 = (char *)&loc_22AA30EC8 + 4 * byte_22ABEFE9C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_22AA30F54()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22AA30F64()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v5 = &v3;
    v6 = v4;
    swift_getTupleTypeLayout2();
    v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_31()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
}

void OUTLINED_FUNCTION_2_37()
{
  uint64_t v0;

  strcpy((char *)(v0 - 80), "Resource at '");
  *(_WORD *)(v0 - 66) = -4864;
}

uint64_t OUTLINED_FUNCTION_3_39()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_4_29()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_5_29(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_6_41()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_8_28()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_9_29()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_12_31()
{
  uint64_t v0;

  return sub_22AA30940(v0);
}

uint64_t OUTLINED_FUNCTION_15_26(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_16_25()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_17_24@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

double ImageBlur.radius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ImageBlur.radius.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*ImageBlur.radius.modify())()
{
  return nullsub_1;
}

CreateMLComponents::ImageBlur __swiftcall ImageBlur.init(radius:)(CreateMLComponents::ImageBlur radius)
{
  CreateMLComponents::ImageBlur *v1;

  v1->radius = radius.radius;
  return radius;
}

id ImageBlur.applied(to:eventHandler:)(void *a1)
{
  id result;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  sub_22A9A2DBC();
  result = sub_22A9A2DF8();
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(a1, sel_imageByClampingToExtent);
    OUTLINED_FUNCTION_0_32();

    v5 = (void *)sub_22ABDF218();
    OUTLINED_FUNCTION_0_32();

    result = objc_msgSend(v3, sel_outputImage);
    if (result)
    {
      v6 = result;
      objc_msgSend(a1, sel_extent);
      v7 = objc_msgSend(v6, sel_imageByCroppingToRect_);

      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA31204(id *a1, void **a2)
{
  uint64_t v2;

  *a1 = ImageBlur.applied(to:eventHandler:)(*a2);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

ValueMetadata *type metadata accessor for ImageBlur()
{
  return &type metadata for ImageBlur;
}

id OUTLINED_FUNCTION_0_32()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 1864), v1);
}

uint64_t Estimator.fitted<A>(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_4_30();
  return v2();
}

uint64_t UpdatableEstimator.update<A>(_:with:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  OUTLINED_FUNCTION_4_30();
  return v2();
}

uint64_t dispatch thunk of Estimator.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_0_33();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_3_40();
  return v2();
}

uint64_t dispatch thunk of UpdatableEstimator.makeTransformer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UpdatableEstimator.update<A>(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_0_33();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  OUTLINED_FUNCTION_3_40();
  return v2();
}

uint64_t dispatch thunk of UpdatableEstimator.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of UpdatableEstimator.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of Estimator.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return dispatch thunk of UpdatableEstimator.encodeWithOptimizer(_:to:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of Estimator.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of UpdatableEstimator.decodeWithOptimizer(from:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_33()
{
  return swift_task_alloc();
}

__n128 sub_22AA31504@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __n128 result;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_BYTE *)(a2 + 32) & 1;
  v9 = *(_BYTE *)(a2 + 72) & 1;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = a4;
  *(_OWORD *)(a5 + 40) = v5;
  *(_QWORD *)(a5 + 56) = v8;
  *(_QWORD *)(a5 + 64) = v6;
  result = *(__n128 *)(a2 + 48);
  *(__n128 *)(a5 + 72) = result;
  *(_QWORD *)(a5 + 88) = v7;
  *(_BYTE *)(a5 + 96) = v9;
  return result;
}

double sub_22AA31548@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v13 = sub_22ABDF11C();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  *(_QWORD *)a5 = v13;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  result = 0.0;
  *(_OWORD *)(a5 + 24) = 0u;
  *(_OWORD *)(a5 + 40) = 0u;
  *(_OWORD *)(a5 + 56) = 0u;
  *(_OWORD *)(a5 + 72) = 0u;
  *(_OWORD *)(a5 + 81) = 0u;
  return result;
}

uint64_t LinearSupportVectorClassifierModel.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const void *v5;
  _QWORD *v6;

  v6[19] = a4;
  v6[20] = a5;
  v6[17] = a2;
  v6[18] = a3;
  v6[16] = a1;
  memcpy(v6 + 2, v5, 0x61uLL);
  return swift_task_switch();
}

uint64_t sub_22AA316A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t isStackAllocationSafe;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  sub_22ABDE8A0();
  v1 = *(_QWORD *)(sub_22ABDE84C() + 16);
  swift_bridgeObjectRelease();
  v2 = sub_22ABDE84C();
  v3 = v2;
  if (v1 != 1)
  {
    sub_22A9B7B50();
    v10 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v11 = v3;
    *(_QWORD *)(v11 + 8) = 0xD000000000000024;
    *(_QWORD *)(v11 + 16) = 0x800000022ABE31E0;
LABEL_10:
    *(_QWORD *)(v11 + 24) = 0;
    *(_BYTE *)(v11 + 32) = 6;
    swift_willThrow(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = *(_QWORD *)(v2 + 32);
    isStackAllocationSafe = OUTLINED_FUNCTION_54();
    v6 = *(_QWORD *)(v0 + 16);
    v7 = *(_QWORD *)(v6 + 16);
    if (v4 == v7 - 1)
    {
      if (!(v7 >> 60))
      {
        if ((uint64_t)(8 * v7) > 1024)
        {
          isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
          if (!(_DWORD)isStackAllocationSafe)
          {
            v18 = *(_QWORD *)(v0 + 152);
            v16 = *(_QWORD *)(v0 + 136);
            v17 = swift_slowAlloc();
            OUTLINED_FUNCTION_9_30(v17, v7, v16, (const void *)(v0 + 16));
          }
        }
        MEMORY[0x24BDAC7A8](isStackAllocationSafe);
        OUTLINED_FUNCTION_9_30((uint64_t)&v18 - v8, v7, v9, (const void *)(v0 + 16));
      }
      __break(1u);
    }
    v12 = OUTLINED_FUNCTION_19_23();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v19 = 0xD00000000000001ELL;
    v20 = 0x800000022ABE3210;
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v6 + 16) - 1;
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_54();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_19_23();
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v13 = v19;
    v14 = v20;
    sub_22A9B7B50();
    v10 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v11 = v12;
    *(_QWORD *)(v11 + 8) = v13;
    *(_QWORD *)(v11 + 16) = v14;
    goto LABEL_10;
  }
  result = OUTLINED_FUNCTION_54();
  __break(1u);
  return result;
}

void sub_22AA31A34(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  _BYTE __dst[97];

  sub_22ABDE8A0();
  sub_22ABDE828();
  if (a1)
  {
    memcpy(__dst, a4, sizeof(__dst));
    type metadata accessor for LinearSupportVectorClassifierModel();
  }
  __break(1u);
}

void sub_22AA31B48(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for LinearSupportVectorClassifierModel();
}

void sub_22AA31CA0(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X5>, uint64_t a4@<X8>)
{
  const void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[8];
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD v24[13];

  v20 = a1;
  v15[1] = a4;
  v6 = a3[3];
  v7 = a3[9];
  v19 = type metadata accessor for Classification(0, v6, v7, a2);
  v18 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v8);
  v22 = (char *)v15 - v9;
  v16 = sub_22ABDF5D8();
  v15[7] = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_6();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v23 = *(_QWORD *)(v6 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v21 = (char *)v15 - v14;
  OUTLINED_FUNCTION_13_35(v24, v4);
  sub_22AB593D4(v24[1], v24[2], v6, a3[6], v7);
}

uint64_t sub_22AA31F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (__swift_getEnumTagSinglePayload(v4, 1, v0) == 1)
  {
    swift_release();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 296) + 8))(v4, *(_QWORD *)(v5 - 288));
    sub_22A9B7B50();
    v7 = swift_allocError();
    *(_QWORD *)v8 = 0xD000000000000025;
    *(_QWORD *)(v8 + 8) = 0x800000022ABE3230;
    *(_OWORD *)(v8 + 16) = xmmword_22ABF0030;
    *(_BYTE *)(v8 + 32) = 3;
    swift_willThrow(v7);
  }
  else
  {
    v9 = *(_QWORD *)(v5 - 240);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v9, v4, v0);
    v10 = *(_QWORD *)(v5 - 280);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v9, v0);
    v11 = 1.0 - v6;
    Classification.init(label:probability:)(v10, v0, v2, v3, v11);
    v12 = *(_QWORD *)(v5 - 264);
    sub_22ABDFD88();
    v13 = *(_QWORD *)(v5 - 272);
    swift_allocObject();
    v14 = sub_22ABDF020();
    OUTLINED_FUNCTION_14_29(v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
    sub_22AA4F938();
    *(_QWORD *)(v5 - 208) = v14;
    MEMORY[0x24BDAC7A8](v14);
    v16 = v3;
    v17 = sub_22ABDF0F8();
    sub_22A99CE8C();
    v18 = *(_QWORD *)(v5 - 248);
    DenseVector.withUnsafeVectorPointer<A>(_:)();
    swift_release();
    if (v18)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v17);
      sub_22ABDF0BC();
      *(_QWORD *)(v5 - 216) = *(_QWORD *)(v5 - 208);
      v19 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v17);
      ClassificationDistribution.init<A>(_:)((char *)(v5 - 216), v0, v17, v2, v19, *(uint64_t **)(v5 - 344));
    }
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 224) + 8))(*(_QWORD *)(v5 - 240), v0);
  }
  return swift_release();
}

void sub_22AA32200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_22AB593D4(*(_QWORD *)(a4 + 8), *(_QWORD *)(a4 + 16), a6, a9, a12);
}

void sub_22AA32374(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  if (!__OFADD__(*a1, 1))
    sub_22AB593D8();
  __break(1u);
  JUMPOUT(0x22AA325A8);
}

void *sub_22AA325AC(uint64_t a1, _OWORD *a2)
{
  const void *v2;
  const void *v3;
  void *result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE v15[104];

  v3 = v2;
  result = OUTLINED_FUNCTION_13_35(v15, v3);
  if ((*(_QWORD *)(a1 + 8) & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x24BDAC7A8](result);
    v7 = a2[2];
    v9 = a2[1];
    v10 = v7;
    v8 = a2[4];
    v11 = a2[3];
    v12 = v8;
    v13 = v15;
    v14 = a1;
    return (void *)sub_22A9FC5C0(sub_22AA33C94);
  }
  return result;
}

uint64_t *sub_22AA32654(uint64_t *result, uint64_t a2, uint64_t a3)
{
  if ((*(_BYTE *)(a3 + 32) & 1) != 0
    || (unsigned __int128)(*result * (__int128)*(uint64_t *)(a3 + 24)) >> 64 == (*result * *(_QWORD *)(a3 + 24)) >> 63)
  {
    type metadata accessor for LinearSupportVectorClassifierModel();
  }
  __break(1u);
  return result;
}

void sub_22AA32728(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  const void *v4;
  _QWORD v6[13];

  OUTLINED_FUNCTION_13_35(v6, v4);
  sub_22AB593D4(v6[1], v6[2], a4[3], a4[6], a4[9]);
}

void sub_22AA328F8()
{
  OUTLINED_FUNCTION_2_38();
}

void sub_22AA329FC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_37();
}

void sub_22AA32A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);

  *(_QWORD *)(v11 - 272) = a1;
  *(_QWORD *)(v11 - 208) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&a9 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&a9 - v20;
  v22 = *v9;
  *(_OWORD *)(v11 - 304) = *(_OWORD *)(v9 + 1);
  *(_QWORD *)(v11 - 160) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v22 + 16);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8658);
  sub_22A9C8D60(&qword_2540E8648, &qword_2540E8658, MEMORY[0x24BEE2A48]);
  sub_22ABDE864();
  *(_QWORD *)(v11 - 192) = v21;
  *(_QWORD *)(v11 - 184) = v16;
  v24 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  *(_QWORD *)(v11 - 176) = v15;
  v24(v19, v21, v15);
  *(_QWORD *)(v11 - 280) = v10;
  sub_22AA32CCC(v14);
}

void sub_22AA32BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  OUTLINED_FUNCTION_18_27();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8);
  v9 = MEMORY[0x22E2E4D80](&unk_22ABF0110, v4);
  v10 = *(_QWORD *)(v5 - 200);
  v8(v0, v4, v9, v6, v7);
  OUTLINED_FUNCTION_3_3();
  if (!v10)
  {
    *(_OWORD *)(v5 - 160) = *(_OWORD *)(v5 - 304);
    v11 = *(_QWORD *)(v2 + 24);
    v12 = *(_QWORD *)(v2 + 32);
    OUTLINED_FUNCTION_18_27();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
    v14 = type metadata accessor for LabelEncoder(0, v1, v3, *(_QWORD *)(v5 - 280));
    *(_QWORD *)(v5 - 72) = *(_QWORD *)(v5 - 168);
    v15 = MEMORY[0x22E2E4D80](&unk_22ABFD04C, v14, v5 - 72);
    v13(v5 - 160, v14, v15, v11, v12);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 184) + 8))(*(_QWORD *)(v5 - 192), *(_QWORD *)(v5 - 176));
  OUTLINED_FUNCTION_16();
}

void sub_22AA32CCC(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  type metadata accessor for LinearSupportVectorClassifierModel.Storage();
}

uint64_t sub_22AA32D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 84);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v1, v4);
}

void sub_22AA32D44()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_7_37();
}

void sub_22AA32DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v12 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&a9 - v14;
  v17 = *(_QWORD *)(v9 + 24);
  v16 = *(_QWORD *)(v9 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v9, v17);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
  v19 = MEMORY[0x22E2E4D80](&unk_22ABF0138, a1);
  v20 = *(_QWORD *)(v10 - 152);
  v18(a1, a1, v19, v17, v16);
  if (!v20)
  {
    *(_QWORD *)(v10 - 152) = v12;
    (*(void (**)(_QWORD, char *, _QWORD))(*(_QWORD *)(v10 - 168) + 16))(*(_QWORD *)(v10 - 176), &v15[*(int *)(a1 + 84)], *(_QWORD *)(v10 - 160));
    v21 = type metadata accessor for LabelEncoder(0, *(_QWORD *)(v10 - 200), *(_QWORD *)(v10 - 192), *(_QWORD *)(v10 - 208));
    v22 = *(_QWORD *)(v9 + 24);
    v23 = *(_QWORD *)(v9 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v9, v22);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8);
    *(_QWORD *)(v10 - 72) = *(_QWORD *)(v10 - 184);
    v25 = MEMORY[0x22E2E4D80](&unk_22ABFD018, v21, v10 - 72);
    v24(v21, v21, v25, v22, v23);
    v26 = *(_QWORD *)(v10 - 144);
    v27 = *(_QWORD *)(v10 - 136);
    sub_22A9C8D60(&qword_2540E8538, &qword_2540E8550, MEMORY[0x24BDBFCD0]);
    v28 = *(_QWORD *)(v10 - 160);
    v29 = *(_QWORD *)(v10 - 176);
    *(_QWORD *)(v10 - 144) = sub_22ABDE930();
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8);
    sub_22A9C8D60((unint64_t *)&qword_2540E85D0, &qword_2540E85C8, MEMORY[0x24BEE12C8]);
    sub_22AA31548(v10 - 144, v26, v27, v30, *(_QWORD *)(v10 - 216));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 168) + 8))(v29, v28);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 152) + 8))(v15, a1);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA32FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A99DE80;
  return LinearSupportVectorClassifierModel.applied(to:eventHandler:)(a1, a2, a3, a4, a5);
}

uint64_t sub_22AA33034(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746867696577 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA33118(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73746867696577;
  else
    return 0x6C65646F6DLL;
}

void sub_22AA3314C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_15_27();
}

void sub_22AA33188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  MEMORY[0x22E2E4D80](&unk_22ABF0238, a1);
  v11 = sub_22ABDFD58();
  v12 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&a9 - v14;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v10 - 144) = 0;
  v16 = *(_QWORD *)(v10 - 72);
  sub_22ABDFCD4();
  if (!v16)
  {
    *(_BYTE *)(v10 - 144) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    sub_22AA34268(&qword_2540E8540, MEMORY[0x24BEE13D8], MEMORY[0x24BDBFCD8]);
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  OUTLINED_FUNCTION_16();
}

void sub_22AA332BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_15_27();
}

void sub_22AA33354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 - 160) = MEMORY[0x22E2E4D80](&unk_22ABF0238, a1);
  v8 = sub_22ABDFCB0();
  *(_QWORD *)(v7 - 176) = v8;
  *(_QWORD *)(v7 - 200) = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v7 - 144) = v1;
  *(_QWORD *)(v7 - 136) = v4;
  *(_QWORD *)(v7 - 128) = v3;
  *(_QWORD *)(v7 - 120) = v5;
  v10 = *(_QWORD *)(v7 - 72);
  *(_QWORD *)(v7 - 112) = *(_QWORD *)(v7 - 168);
  *(_QWORD *)(v7 - 104) = v10;
  *(_QWORD *)(v7 - 96) = v6;
  *(_QWORD *)(v7 - 88) = v2;
  OUTLINED_FUNCTION_7_37();
}

void sub_22AA333C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v13 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&a9 - v15);
  *v16 = 0;
  v16[1] = 0;
  v17 = v10[3];
  *(_QWORD *)(v11 - 72) = v10;
  __swift_project_boxed_opaque_existential_1(v10, v17);
  *(_QWORD *)(v11 - 168) = v9;
  v18 = *(_QWORD *)(v11 - 152);
  sub_22ABE0298();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v11 - 72));
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)(v11 - 192);
    v20 = *(_QWORD *)(v11 - 184);
    *(_BYTE *)(v11 - 144) = 0;
    *v16 = sub_22ABDFC14();
    v16[1] = v21;
    *(_BYTE *)(v11 - 144) = 1;
    sub_22AA34268(&qword_2540E8548, MEMORY[0x24BEE1400], MEMORY[0x24BDBFCE8]);
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_12_32();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 216) + 32))((char *)v16 + *(int *)(a1 + 84), v19, v20);
    OUTLINED_FUNCTION_14_29(*(_QWORD *)(v11 - 208), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v11 - 72));
    (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v16, a1);
  }
  OUTLINED_FUNCTION_16();
}

BOOL sub_22AA3351C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22A9AFA2C(*a1, *a2);
}

uint64_t sub_22AA3355C()
{
  return sub_22A9AFB4C();
}

uint64_t sub_22AA33594()
{
  return _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_22AA335CC()
{
  sub_22ABE0244();
  _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
  return sub_22ABE0280();
}

uint64_t sub_22AA33620()
{
  char *v0;

  return sub_22AA33118(*v0);
}

uint64_t sub_22AA33658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA33034(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA3369C()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AA336D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9AFB44();
  *a1 = result;
  return result;
}

uint64_t sub_22AA3371C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF0238, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA33750(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF0238, a1);
  return sub_22ABE02F8();
}

void sub_22AA33784()
{
  sub_22AA332BC();
}

void sub_22AA337B8()
{
  sub_22AA3314C();
}

uint64_t sub_22AA337CC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 72);
}

uint64_t sub_22AA337D4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for LinearSupportVectorClassifierModel<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AA33800()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22AA33808(uint64_t a1)
{
  uint64_t result;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_22AA33860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = (const void *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  swift_retain();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    memcpy((void *)(a1 + 24), v6, 0x49uLL);
  }
  return a1;
}

uint64_t sub_22AA33928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      swift_retain();
      swift_retain();
      swift_retain();
      return a1;
    }
LABEL_7:
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x49uLL);
    return a1;
  }
  if (!v4)
  {
    sub_22AA33AB8(a1 + 24);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t sub_22AA33AB8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *__swift_memcpy97_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t sub_22AA33B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  if (!v4)
  {
    sub_22AA33AB8(a1 + 24);
LABEL_5:
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x49uLL);
    return a1;
  }
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t sub_22AA33BE0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA33C20(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LinearSupportVectorClassifierModel()
{
  JUMPOUT(0x22E2E4CF0);
}

void type metadata accessor for LinearSupportVectorClassifierModel.Storage()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t *sub_22AA33C94(uint64_t *a1)
{
  uint64_t v1;

  return sub_22AA32654(a1, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

void sub_22AA33CD4(uint64_t a1)
{
  sub_22AA31B48(a1);
}

void sub_22AA33D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_22AA32200(a1, a2, a3, v3[10], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9]);
}

void sub_22AA33D4C(_QWORD *a1)
{
  sub_22AA32374(a1);
}

unint64_t sub_22AA33D90()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_255B0EB10[0];
  if (!qword_255B0EB10[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E85F8);
    v2 = sub_22A9B88AC();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1BD8], v1, v3);
    atomic_store(result, qword_255B0EB10);
  }
  return result;
}

void sub_22AA33DFC()
{
  unint64_t v0;

  sub_22AA3420C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_22AA33E70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 84);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_22ABDEAEC();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_22AA33F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 84);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_22AA33F4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 84);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  sub_22ABDEAEC();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *sub_22AA33FB0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 84);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_22AA34030(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 84);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_22AA34090(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 84);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_22AA34100()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA3410C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 84), a2, v9);
  }
}

uint64_t sub_22AA34190()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA3419C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 84), a2, a2, v7);
  }
  return result;
}

void sub_22AA3420C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540E8558)
  {
    v0 = sub_22ABDE8A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540E8558);
  }
}

void type metadata accessor for LinearSupportVectorClassifierModel.Storage.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AA34268(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E8550);
    v8 = a2;
    result = MEMORY[0x22E2E4D80](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22AA342C8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA34314 + 4 * byte_22ABF0045[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA34348 + 4 * byte_22ABF0040[v4]))();
}

uint64_t sub_22AA34348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA34350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA34358);
  return result;
}

uint64_t sub_22AA34364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA3436CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA34370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA34378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AA34384()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA34394()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA343A4()
{
  JUMPOUT(0x22E2E4D80);
}

void OUTLINED_FUNCTION_2_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_22AB593D4(v1, v2, v0, v4, v3);
}

uint64_t OUTLINED_FUNCTION_4_31()
{
  const double *v0;
  uint64_t v1;

  return sub_22ABBC6C4(v0, v1);
}

double OUTLINED_FUNCTION_6_42()
{
  uint64_t v0;

  return *(double *)v0;
}

void OUTLINED_FUNCTION_7_37()
{
  type metadata accessor for LinearSupportVectorClassifierModel.Storage();
}

void OUTLINED_FUNCTION_9_30(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  sub_22AA31A34(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_10_23()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_12_32()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 168), *(_QWORD *)(v1 - 176));
}

void *OUTLINED_FUNCTION_13_35(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t OUTLINED_FUNCTION_14_29@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

void OUTLINED_FUNCTION_15_27()
{
  type metadata accessor for LinearSupportVectorClassifierModel.Storage.CodingKeys();
}

uint64_t OUTLINED_FUNCTION_16_26(uint64_t a1)
{
  return sub_22AB5B76C(a1, 0.0);
}

uint64_t OUTLINED_FUNCTION_18_27()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_mutable_project_boxed_opaque_existential_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_19_23()
{
  return sub_22ABDE84C();
}

void AudioReader.configuration.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *AudioReader.configuration.setter(_QWORD *result)
{
  _QWORD *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AudioReader.configuration.modify())()
{
  return nullsub_1;
}

_QWORD *AudioReader.init(configuration:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void AudioReader.applied(to:eventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_23_24(v1, v2);
  OUTLINED_FUNCTION_43_10();
  OUTLINED_FUNCTION_9_14();
}

void static AudioReader.read(contentsOf:configuration:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_23_24(v1, v2);
  OUTLINED_FUNCTION_43_10();
  OUTLINED_FUNCTION_9_14();
}

void static AudioReader.read<A>(_:configuration:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  char *v40;
  char *v41;
  char *v42;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int EnumTagSinglePayload;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;

  v72 = a2;
  v66 = type metadata accessor for AudioReader.AsyncBuffers(0);
  v62 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  OUTLINED_FUNCTION_87();
  v69 = v5;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v6);
  v65 = (uint64_t)&v55 - v7;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v8);
  v70 = (uint64_t)&v55 - v9;
  v10 = OUTLINED_FUNCTION_18_15();
  v56 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v64 = v11;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v12);
  v71 = (uint64_t)&v55 - v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  v55 = (char *)&v55 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E7768);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v25 = (char *)&v55 - v24;
  v63 = *v72;
  sub_22ABDEE70();
  sub_22AA35D6C();
  v72 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, a1, a3);
  sub_22ABDEE58();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v67 = v25;
  v68 = AssociatedTypeWitness;
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v10) == 1)
  {
LABEL_2:
    OUTLINED_FUNCTION_53_13();
  }
  else
  {
    v59 = AssociatedConformanceWitness;
    v60 = v10;
    v29 = (uint64_t)v55;
    v28 = v56;
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32);
    v30 = v73;
    v31 = (uint64_t)v18;
    v32 = v66;
    v58 = v18;
    v33 = v64;
    while (1)
    {
      v61(v29, v31, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v71, v29, v10);
      v34 = v65;
      OUTLINED_FUNCTION_61_9(v65);
      v35 = *(int *)(v32 + 24);
      v36 = v63;
      *(_QWORD *)(v34 + v35) = v63;
      OUTLINED_FUNCTION_61_9(v33);
      v37 = objc_allocWithZone(MEMORY[0x24BDB1810]);
      v38 = sub_22AA34E34(v33);
      if (v30)
      {
        OUTLINED_FUNCTION_59_7(v71);
        OUTLINED_FUNCTION_59_7(v34);
        OUTLINED_FUNCTION_59_7(v29);
        OUTLINED_FUNCTION_53_13();
        swift_bridgeObjectRelease();
        return;
      }
      v39 = v38;
      v73 = 0;
      v40 = (char *)objc_msgSend(v38, sel_length);

      v41 = &v40[v36];
      if (__OFADD__(v40, v36))
        break;
      v42 = v41 - 1;
      if (__OFSUB__(v41, 1))
        goto LABEL_18;
      if (!v36)
        goto LABEL_19;
      if (v41 == (char *)0x8000000000000001 && v36 == -1)
        goto LABEL_20;
      v44 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v44(v71, v10);
      v45 = v34;
      v46 = v66;
      v47 = v45 + *(int *)(v66 + 20);
      *(_QWORD *)v47 = (uint64_t)v42 / v36;
      *(_BYTE *)(v47 + 8) = 0;
      v48 = v70;
      sub_22AA365E0(v45, v70);
      sub_22AA36624(v48, v69);
      v49 = v72;
      v50 = v72[2];
      if (v50 >= (unint64_t)v72[3] >> 1)
      {
        sub_22AA35D6C();
        v49 = v54;
      }
      v51 = v69;
      v31 = (uint64_t)v58;
      v49[2] = v50 + 1;
      v52 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      v72 = v49;
      sub_22AA365E0(v51, (uint64_t)v49 + v52 + *(_QWORD *)(v62 + 72) * v50);
      sub_22AA36668(v70);
      v10 = v60;
      v44(v29, v60);
      sub_22ABDF650();
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v31, 1, v10);
      v32 = v46;
      v30 = v73;
      if (EnumTagSinglePayload == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
}

uint64_t static AudioReader.read<A, B>(_:configuration:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[8];
  uint64_t v16;

  v9 = *a2;
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  v15[6] = v9;
  v10 = type metadata accessor for AudioReader.AsyncBuffers(255);
  v12 = type metadata accessor for AnnotatedFeature(0, v10, a4, v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  return sub_22A9C2540((uint64_t)sub_22AA366A4, (uint64_t)v15, a3, v12, v13, a5, MEMORY[0x24BEE3F20], (uint64_t)&v16);
}

void sub_22AA34AA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, double);
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v43 = a4;
  v40 = a5;
  v41 = a3;
  v37 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22ABDD0E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  v15 = type metadata accessor for AudioReader.AsyncBuffers(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  v38 = a1;
  v19(v14, a1, v8, v16);
  ((void (*)(char *, char *, uint64_t))v19)(v18, v14, v8);
  v20 = *(int *)(v15 + 24);
  v42 = a2;
  *(_QWORD *)&v18[v20] = a2;
  ((void (*)(char *, char *, uint64_t))v19)(v11, v14, v8);
  v21 = objc_allocWithZone(MEMORY[0x24BDB1810]);
  v22 = v44;
  v23 = sub_22AA34E34((uint64_t)v11);
  if (v22)
  {
    v24 = *(void (**)(char *, uint64_t))(v9 + 8);
    v24(v14, v8);
    v24(v18, v8);
    *v43 = v22;
    return;
  }
  v25 = v23;
  v26 = (char *)objc_msgSend(v23, sel_length);

  v27 = v42;
  v28 = &v26[v42];
  if (__OFADD__(v26, v42))
  {
    __break(1u);
    goto LABEL_13;
  }
  v29 = v28 - 1;
  if (__OFSUB__(v28, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v42)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  if (v28 == (char *)0x8000000000000001 && v42 == -1)
    goto LABEL_15;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  v31 = &v18[*(int *)(v15 + 20)];
  *(_QWORD *)v31 = (uint64_t)v29 / v27;
  v31[8] = 0;
  v32 = v41;
  v34 = type metadata accessor for AnnotatedFeature(0, v8, v41, v33);
  v35 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v39, v38 + *(int *)(v34 + 36), v32);
  AnnotatedFeature.init(feature:annotation:)((uint64_t)v18, v35, v15, v32, v40);
}

uint64_t static AudioReader.readMicrophone(configuration:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a2;
  v2[2] = a1;
  v2[3] = v3;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_22AA34D60;
  return sub_22A9C8F78();
}

uint64_t sub_22AA34D60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_22AA34DCC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA34DE0()
{
  uint64_t v0;

  AudioReader.applied(to:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

id sub_22AA34E34(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v14[2];

  v2 = v1;
  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_22ABDD070();
  v14[0] = 0;
  v5 = objc_msgSend(v2, sel_initForReading_error_, v4, v14);

  v6 = v14[0];
  if (v5)
  {
    v7 = OUTLINED_FUNCTION_18_15();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v14[0];
    sub_22ABDD004();

    swift_willThrow(v11);
    v12 = OUTLINED_FUNCTION_18_15();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  return v5;
}

void *sub_22AA34F34(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_18_28();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_30_18();
      return OUTLINED_FUNCTION_7_38(v7, v8, v9);
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = (void *)OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA34FB4()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_42_12();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    if (v2 + 40 * v1 <= v0 || v0 + 40 * v1 <= v2)
      return OUTLINED_FUNCTION_13_36();
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA3504C()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_42_12();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    if (v2 + 16 * v1 <= v0 || v0 + 16 * v1 <= v2)
      return OUTLINED_FUNCTION_13_36();
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

void *sub_22AA350E0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_52_13();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_30_18();
      return OUTLINED_FUNCTION_7_38(v7, v8, v9);
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = (void *)OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA35160(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_49_11();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B12410);
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA351F4(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35204(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_35_11();
    if (v4 + 40 * v3 <= v2 || v2 + 40 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86E8);
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA352A4()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_42_12();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    if (v2 + 32 * v1 <= v0 || v0 + 32 * v1 <= v2)
      return OUTLINED_FUNCTION_13_36();
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA35338(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35344(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35350()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_42_12();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    if (v2 + 152 * v1 <= v0 || v0 + 152 * v1 <= v2)
      return OUTLINED_FUNCTION_13_36();
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA353EC(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA353F8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_27_21();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B123D8);
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA35488(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35494(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA354A0(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA354AC(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA354B8(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

void *sub_22AA354C4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_33_18();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_30_18();
      return OUTLINED_FUNCTION_7_38(v7, v8, v9);
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = (void *)OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA35544(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35550(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA3555C(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35568(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_49_11();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA355F8(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35604(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35610(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA3561C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_27_21();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FD90);
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA356AC(uint64_t a1, uint64_t a2)
{
  return sub_22AA356C4(a1, a2);
}

uint64_t sub_22AA356B8(uint64_t a1, uint64_t a2)
{
  return sub_22AA356C4(a1, a2);
}

uint64_t sub_22AA356C4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_35_11();
    __swift_instantiateConcreteTypeFromMangledName(v3);
    OUTLINED_FUNCTION_47_11();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA35754()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_42_12();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    if (v2 + 24 * v1 <= v0 || v0 + 24 * v1 <= v2)
      return OUTLINED_FUNCTION_13_36();
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA357EC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_35_11();
    if (v4 + 56 * v3 <= v2 || v2 + 56 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10D68);
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

void *sub_22AA35890(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    v3 = a1 + 12 * a2;
    if (a3 + 12 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_30_18();
      return OUTLINED_FUNCTION_7_38(v6, v7, v8);
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = (void *)OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA35924(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_27_21();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E248);
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA359B4(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA359C0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_35_11();
    if (v4 + 24 * v3 <= v2 || v2 + 24 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B12338);
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

void *sub_22AA35A60(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    if (&a3[56 * a2] <= a1 || &a1[56 * a2] <= a3)
      return OUTLINED_FUNCTION_7_38(a3, a1, 56 * a2);
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = (void *)OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

void *sub_22AA35AF8()
{
  char *v0;
  size_t v1;
  char *v2;
  uint64_t v3;
  void *result;

  OUTLINED_FUNCTION_42_12();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    if (&v2[v1] <= v0 || &v0[v1] <= v2)
      return OUTLINED_FUNCTION_7_38(v2, v0, v1);
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = (void *)OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA35B84(uint64_t a1, uint64_t a2)
{
  return sub_22AA35B90(a1, a2);
}

uint64_t sub_22AA35B90(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_35_11();
    v3(0);
    OUTLINED_FUNCTION_47_11();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      OUTLINED_FUNCTION_8_29();
      return OUTLINED_FUNCTION_6_43();
    }
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

void sub_22AA35C20()
{
  sub_22AA35F58();
}

void sub_22AA35C2C()
{
  sub_22AA36364();
}

void sub_22AA35C48()
{
  sub_22AA35C64();
}

void sub_22AA35C64()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_20_29();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_34_17();
  if (v1)
  {
    OUTLINED_FUNCTION_22_26(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_14_30();
    OUTLINED_FUNCTION_38_17(v10);
    OUTLINED_FUNCTION_39_15(v11);
  }
  else
  {
    v1 = MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_29_18();
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    OUTLINED_FUNCTION_16_27(v5, v6, v1 + 32);
  }
  OUTLINED_FUNCTION_38();
}

void sub_22AA35CF0()
{
  sub_22AA35D6C();
}

void sub_22AA35D04()
{
  sub_22AA36864();
}

void sub_22AA35D20()
{
  sub_22AA3600C();
}

void sub_22AA35D3C()
{
  sub_22AA35C64();
}

void sub_22AA35D58()
{
  sub_22AA35D6C();
}

void sub_22AA35D6C()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);

  OUTLINED_FUNCTION_57_8();
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v11 != v12)
    {
      OUTLINED_FUNCTION_17_25();
      if (v11)
      {
        __break(1u);
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  else
  {
    v10 = v6;
  }
  v13 = *(_QWORD *)(v0 + 16);
  if (v10 <= v13)
    v14 = *(_QWORD *)(v0 + 16);
  else
    v14 = v10;
  if (!v14)
    goto LABEL_17;
  v15 = OUTLINED_FUNCTION_22_26(v5, v6, v7, v8, v9);
  v1(0);
  v16 = (const void *)OUTLINED_FUNCTION_31_14();
  v17 = OUTLINED_FUNCTION_66_10(v16);
  if (!v3 || (v17 - v4 == 0x8000000000000000 ? (v18 = v3 == -1) : (v18 = 0), v18))
  {
LABEL_22:
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_60_9();
    __break(1u);
    return;
  }
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = 2 * ((uint64_t)(v17 - v4) / v3);
LABEL_17:
  v1(0);
  OUTLINED_FUNCTION_56_11();
  if ((v2 & 1) != 0)
  {
    sub_22AA38250(v0 + v19, v13);
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v20 = OUTLINED_FUNCTION_40_13();
    sub_22AA37A2C(v20, v21, v22, v23, v24);
  }
  OUTLINED_FUNCTION_27_17();
}

void sub_22AA35EA8()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_48_13();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_24_22();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A0);
    v5 = (const void *)OUTLINED_FUNCTION_33_2();
    v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_32_16(v6 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_45_11();
    sub_22AA37E04(v7, v8, v9);
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_25_19();
    sub_22AA36F50(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_21();
}

void sub_22AA35F4C()
{
  sub_22AA35F58();
}

void sub_22AA35F58()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  OUTLINED_FUNCTION_48_13();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_24_22();
  if (v1)
  {
    OUTLINED_FUNCTION_22_26(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_14_30();
    v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_32_16(v11 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v12 = (char *)OUTLINED_FUNCTION_45_11();
    sub_22AA37BE8(v12, v13, v14);
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v15 = OUTLINED_FUNCTION_25_19();
    sub_22AA37040(v15, v16, v17, v18);
  }
  OUTLINED_FUNCTION_21();
}

void sub_22AA35FF0()
{
  sub_22AA3600C();
}

void sub_22AA3600C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_20_29();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_17_25();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_34_17();
  if (v2)
  {
    OUTLINED_FUNCTION_22_26(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_33_2();
    v6 = OUTLINED_FUNCTION_38_17(v11);
    *(_QWORD *)(v2 + 16) = v1;
    *(_QWORD *)(v2 + 24) = 2 * (v12 / 40);
  }
  else
  {
    v2 = MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_29_18();
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    OUTLINED_FUNCTION_16_27(v6, v7, v2 + 32);
  }
}

void sub_22AA360B8()
{
  sub_22AA35D6C();
}

void sub_22AA360CC()
{
  sub_22AA35D6C();
}

void sub_22AA360E0()
{
  sub_22AA35D6C();
}

void sub_22AA360F4()
{
  sub_22AA35D6C();
}

void sub_22AA36108()
{
  sub_22AA35D6C();
}

void sub_22AA3611C()
{
  sub_22AA35D6C();
}

void sub_22AA36130()
{
  sub_22AA35D6C();
}

void sub_22AA36144()
{
  sub_22AA35D6C();
}

void sub_22AA36158()
{
  sub_22AA3616C();
}

void sub_22AA3616C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  OUTLINED_FUNCTION_57_8();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_17_25();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  else
  {
    v7 = v3;
  }
  v10 = *(_QWORD *)(v0 + 16);
  if (v7 <= v10)
    v11 = *(_QWORD *)(v0 + 16);
  else
    v11 = v7;
  if (v11)
  {
    OUTLINED_FUNCTION_22_26(v2, v3, v4, v5, v6);
    v12 = (const void *)OUTLINED_FUNCTION_14_30();
    v13 = OUTLINED_FUNCTION_66_10(v12);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = 2 * ((uint64_t)(v13 - 32) / 8);
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_22AA37BE8((char *)(v0 + 32), v10, (char *)(v11 + 32));
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v14 = OUTLINED_FUNCTION_40_13();
    sub_22AA373FC(v14, v15, v16, v17, v18);
  }
  OUTLINED_FUNCTION_38();
}

void sub_22AA36218()
{
  sub_22AA35D6C();
}

void sub_22AA3622C()
{
  sub_22AA3616C();
}

void sub_22AA36240()
{
  sub_22AA35C64();
}

void sub_22AA3625C()
{
  sub_22AA35D6C();
}

void sub_22AA36270()
{
  sub_22AA362BC();
}

void sub_22AA3628C()
{
  sub_22AA36404();
}

void sub_22AA362A0()
{
  sub_22AA362BC();
}

void sub_22AA362BC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_20_29();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_34_17();
  if (v1)
  {
    OUTLINED_FUNCTION_22_26(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_14_30();
    OUTLINED_FUNCTION_38_17(v10);
    OUTLINED_FUNCTION_39_15(v11);
  }
  else
  {
    v1 = MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_29_18();
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    OUTLINED_FUNCTION_16_27(v5, v6, v1 + 32);
  }
  OUTLINED_FUNCTION_38();
}

void sub_22AA36348()
{
  sub_22AA36364();
}

void sub_22AA36364()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_20_29();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_34_17();
  if (v1)
  {
    OUTLINED_FUNCTION_22_26(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_14_30();
    OUTLINED_FUNCTION_38_17(v10);
    OUTLINED_FUNCTION_39_15(v11);
  }
  else
  {
    v1 = MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_29_18();
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    OUTLINED_FUNCTION_16_27(v5, v6, v1 + 32);
  }
  OUTLINED_FUNCTION_38();
}

void sub_22AA363F0()
{
  sub_22AA36404();
}

void sub_22AA36404()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  OUTLINED_FUNCTION_57_8();
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v11 != v12)
    {
      OUTLINED_FUNCTION_17_25();
      if (v11)
      {
        __break(1u);
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  else
  {
    v10 = v6;
  }
  v13 = *(_QWORD *)(v0 + 16);
  if (v10 <= v13)
    v14 = *(_QWORD *)(v0 + 16);
  else
    v14 = v10;
  if (!v14)
    goto LABEL_17;
  v15 = OUTLINED_FUNCTION_22_26(v5, v6, v7, v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(v1);
  v16 = (const void *)OUTLINED_FUNCTION_31_14();
  v17 = OUTLINED_FUNCTION_66_10(v16);
  if (!v3 || (v17 - v4 == 0x8000000000000000 ? (v18 = v3 == -1) : (v18 = 0), v18))
  {
LABEL_22:
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_60_9();
    __break(1u);
    return;
  }
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = 2 * ((uint64_t)(v17 - v4) / v3);
LABEL_17:
  __swift_instantiateConcreteTypeFromMangledName(v1);
  OUTLINED_FUNCTION_56_11();
  if ((v2 & 1) != 0)
  {
    sub_22AA37FE8(v0 + v19, v13);
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v20 = OUTLINED_FUNCTION_40_13();
    sub_22AA374D4(v20, v21, v22, v23, v24);
  }
  OUTLINED_FUNCTION_27_17();
}

void sub_22AA36540()
{
  sub_22AA36404();
}

void sub_22AA36554()
{
  sub_22AA3616C();
}

void sub_22AA36568()
{
  sub_22AA36404();
}

void sub_22AA3657C()
{
  sub_22AA3616C();
}

void sub_22AA36590()
{
  sub_22AA36404();
}

void sub_22AA365A4()
{
  sub_22AA3616C();
}

void sub_22AA365B8()
{
  sub_22AA3616C();
}

void sub_22AA365CC()
{
  sub_22AA3616C();
}

uint64_t sub_22AA365E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioReader.AsyncBuffers(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA36624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioReader.AsyncBuffers(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA36668(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioReader.AsyncBuffers(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22AA366A4(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_22AA34AA4(a1, *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 24), a2, a3);
}

ValueMetadata *type metadata accessor for AudioReader()
{
  return &type metadata for AudioReader;
}

void sub_22AA366D8()
{
  sub_22AA36404();
}

void sub_22AA366EC()
{
  sub_22AA36864();
}

void sub_22AA36708()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_48_13();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_24_22();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10430);
    v5 = (const void *)OUTLINED_FUNCTION_14_30();
    v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_32_16(v6 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_45_11();
    sub_22AA37B38(v7, v8, v9);
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_25_19();
    sub_22AA37670(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_21();
}

void sub_22AA367A8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  char *v8;
  size_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_48_13();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_17_25();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_24_22();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B123F8);
    v6 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v7 = _swift_stdlib_malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)OUTLINED_FUNCTION_45_11();
    sub_22AA38164(v8, v9, v10);
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v11 = OUTLINED_FUNCTION_25_19();
    sub_22AA37760(v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_21();
}

void sub_22AA36848()
{
  sub_22AA36864();
}

void sub_22AA36864()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_20_29();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_34_17();
  if (v1)
  {
    OUTLINED_FUNCTION_22_26(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_14_30();
    OUTLINED_FUNCTION_38_17(v10);
    OUTLINED_FUNCTION_39_15(v11);
  }
  else
  {
    v1 = MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_29_18();
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    OUTLINED_FUNCTION_16_27(v5, v6, v1 + 32);
  }
  OUTLINED_FUNCTION_38();
}

void sub_22AA368F0()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_48_13();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_24_22();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B12400);
    v5 = (const void *)OUTLINED_FUNCTION_14_30();
    v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_32_16(v6 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_45_11();
    sub_22AA37BE8(v7, v8, v9);
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_25_19();
    sub_22AA36E60(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_21();
}

void sub_22AA36990()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_48_13();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_17_25();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_24_22();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B123E8);
    v5 = (const void *)OUTLINED_FUNCTION_14_30();
    v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_32_16(v6 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_45_11();
    sub_22AA381C0(v7, v8, v9);
    OUTLINED_FUNCTION_9_31();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_25_19();
    sub_22AA3793C(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_21();
}

void sub_22AA36A30()
{
  sub_22AA35D6C();
}

uint64_t sub_22AA36A44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t sub_22AA36B38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B12410);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t sub_22AA36C4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t sub_22AA36D44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86E8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AA36E60(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AA36F50(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + (a1 << 6) + 32);
    v6 = &__dst[64 * v4];
    if (v5 >= v6 || &v5[64 * v4] <= __dst)
    {
      memcpy(__dst, v5, v4 << 6);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AA37040(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + 8 * a1 + 32);
  v6 = &__dst[8 * v4];
  if (v5 >= v6 || &v5[8 * v4] <= __dst)
  {
    memcpy(__dst, v5, 8 * v4);
    OUTLINED_FUNCTION_23();
    return v6;
  }
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_32();
LABEL_11:
  result = (char *)OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

uint64_t sub_22AA370FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AA371F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t sub_22AA372E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B123D8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t sub_22AA373FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
    goto LABEL_11;
  }
  v6 = a4 + 8 * a1 + 32;
  v7 = a3 + 8 * v5;
  if (v6 >= v7 || v6 + 8 * v5 <= a3)
  {
    OUTLINED_FUNCTION_22_26(a1, a2, a3, a4, a5);
    swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_23();
    return v7;
  }
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_32();
LABEL_11:
  result = OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

void sub_22AA374D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_22_26(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_26_19();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    OUTLINED_FUNCTION_51_14();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_21_1();
    return;
  }
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_32();
LABEL_11:
  OUTLINED_FUNCTION_3_41();
  __break(1u);
}

uint64_t sub_22AA3757C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AA37670(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AA37760(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AA3784C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AA3793C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = &__dst[2 * v4];
    if (v5 >= v6 || &v5[2 * v4] <= __dst)
    {
      memcpy(__dst, v5, 2 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

void sub_22AA37A2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
    goto LABEL_11;
  }
  a5(0);
  OUTLINED_FUNCTION_26_19();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    OUTLINED_FUNCTION_51_14();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_21_1();
    return;
  }
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_4_32();
LABEL_11:
  OUTLINED_FUNCTION_3_41();
  __break(1u);
}

char *sub_22AA37ADC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

char *sub_22AA37B38(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

char *sub_22AA37B90(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

char *sub_22AA37BE8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

void sub_22AA37C44(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

char *sub_22AA37C50(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

char *sub_22AA37CA8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

void sub_22AA37D08(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37D14(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

char *sub_22AA37D20(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[152 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

char *sub_22AA37D80(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_22ABDFB9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_22AA37E04(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_22ABDFB9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[64 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, a2 << 6);
  }
  return __src;
}

void sub_22AA37E88(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37E94(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37EA0(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37EAC(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37EB8(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37EC4(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37ED0(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37EDC(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37EE8(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37EF4(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37F00(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA37F0C(uint64_t a1, uint64_t a2)
{
  sub_22AA37FE8(a1, a2);
}

void sub_22AA37F18(uint64_t a1, uint64_t a2)
{
  sub_22AA37FE8(a1, a2);
}

char *sub_22AA37F24(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

char *sub_22AA37F88(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[12 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_29(a3, result);
  }
  return result;
}

void sub_22AA37FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  char v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_58_6();
    if (v5 && (__swift_instantiateConcreteTypeFromMangledName(v4), OUTLINED_FUNCTION_65_8(), !v6 & v5))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_21_1();
      }
      else
      {
        OUTLINED_FUNCTION_28_17();
        OUTLINED_FUNCTION_37_16();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(v4);
      OUTLINED_FUNCTION_28_17();
      OUTLINED_FUNCTION_36_14();
    }
  }
}

char *sub_22AA38070(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_22ABDFB9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

void sub_22AA380F4(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

char *sub_22AA38100(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[56 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_44_15(a3, result, 56 * a2);
  }
  return result;
}

char *sub_22AA38164(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_9_11();
    result = (char *)OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_44_15(a3, result, a2);
  }
  return result;
}

char *sub_22AA381C0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_22ABDFB9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[2 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 2 * a2);
  }
  return __src;
}

void sub_22AA38244(uint64_t a1, uint64_t a2)
{
  sub_22AA38250(a1, a2);
}

void sub_22AA38250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  char v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_58_6();
    if (v5 && (v4(0), OUTLINED_FUNCTION_65_8(), !v6 & v5))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_21_1();
      }
      else
      {
        OUTLINED_FUNCTION_28_17();
        OUTLINED_FUNCTION_37_16();
      }
    }
    else
    {
      v4(0);
      OUTLINED_FUNCTION_28_17();
      OUTLINED_FUNCTION_36_14();
    }
  }
}

uint64_t OUTLINED_FUNCTION_2_39()
{
  return sub_22ABDFB9C();
}

uint64_t OUTLINED_FUNCTION_3_41()
{
  return sub_22ABDFB9C();
}

uint64_t OUTLINED_FUNCTION_6_43()
{
  return swift_arrayInitWithCopy();
}

void *OUTLINED_FUNCTION_7_38(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t OUTLINED_FUNCTION_8_29()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_31()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_36()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_14_30()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_16_27(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t OUTLINED_FUNCTION_22_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

uint64_t OUTLINED_FUNCTION_23_24@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t OUTLINED_FUNCTION_25_19()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_28_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_29_18()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t OUTLINED_FUNCTION_30_18()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_31_14()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_32_16(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_36_14()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t OUTLINED_FUNCTION_37_16()
{
  return swift_arrayInitWithTakeBackToFront();
}

size_t OUTLINED_FUNCTION_38_17(const void *a1)
{
  return _swift_stdlib_malloc_size(a1);
}

void OUTLINED_FUNCTION_39_15(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_40_13()
{
  return 0;
}

void OUTLINED_FUNCTION_43_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22AAA4E64(v2, v0, v1);
}

void *OUTLINED_FUNCTION_44_15@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_45_11()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_51_14()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_53_13()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 208) + 8))(*(_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_59_7(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_60_9()
{
  return sub_22ABDFAD0();
}

uint64_t OUTLINED_FUNCTION_61_9(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

size_t OUTLINED_FUNCTION_66_10(const void *ptr)
{
  return _swift_stdlib_malloc_size(ptr);
}

void AnyTemporalSequence.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  char v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  char *v17;
  uint64_t v18;

  v10 = *(_QWORD *)(a3 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(a5 + 24) = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_1, a1, a3);
  *(_QWORD *)(a5 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  *(_BYTE *)(a5 + 40) = v14 & 1;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  v15((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a2;
  *((_QWORD *)v17 + 3) = a3;
  *((_QWORD *)v17 + 4) = a4;
  v15(&v17[v16], (uint64_t)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(_QWORD *)(a5 + 48) = sub_22AA38DD4;
  *(_QWORD *)(a5 + 56) = v17;
  OUTLINED_FUNCTION_3();
}

uint64_t AnyTemporalSequence.makeAsyncIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t AnyTemporalIterator.next()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(*(int *)*v1 + *v1);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_22A9ABF58;
  return v6(a1);
}

uint64_t sub_22AA387FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v5 = OUTLINED_FUNCTION_7_39();
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 - 8);
  v3[8] = OUTLINED_FUNCTION_0_0();
  v6 = OUTLINED_FUNCTION_7_39();
  v3[9] = v6;
  v3[10] = *(_QWORD *)(v6 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  sub_22ABDF5D8();
  v3[13] = OUTLINED_FUNCTION_0_0();
  v3[14] = *(_QWORD *)(a1 - 8);
  v3[15] = OUTLINED_FUNCTION_0_0();
  v7 = OUTLINED_FUNCTION_7_39();
  v3[16] = v7;
  v3[17] = *(_QWORD *)(v7 - 8);
  v3[18] = OUTLINED_FUNCTION_0_0();
  return swift_task_switch();
}

uint64_t sub_22AA38914()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[5];
  v4 = v0[3];
  v0[2] = sub_22ABDE9F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_22ABDF200();
  v0[19] = swift_getAssociatedConformanceWitness();
  v5 = (_QWORD *)swift_task_alloc();
  v0[20] = v5;
  OUTLINED_FUNCTION_3_42(v5);
  return sub_22ABDF194();
}

uint64_t sub_22AA389D0()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_10_25(v1);
  if (v0)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA38A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 48);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    v3 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), v1, v2);
    sub_22ABDF0F8();
    sub_22ABDF0C8();
    *(_QWORD *)(v0 + 152) = swift_getAssociatedConformanceWitness();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v5;
    OUTLINED_FUNCTION_3_42(v5);
    return sub_22ABDF194();
  }
}

uint64_t sub_22AA38B70()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 32);
  v1(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  swift_getAssociatedConformanceWitness();
  v2 = sub_22ABDFF14();
  v3 = *(_QWORD *)(v0 + 88);
  if (v2)
  {
    OUTLINED_FUNCTION_55_9(*(_QWORD *)(v0 + 80));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 72);
    swift_allocError();
    v1(v5, v3, v4);
  }
  OUTLINED_FUNCTION_55_9(*(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnyTemporalSequence.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

_QWORD *sub_22AA38C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v19 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  sub_22ABDF200();
  v16 = type metadata accessor for TemporalFeature(0, a2, v14, v15);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return sub_22AA38DE0((uint64_t)v13, v16, AssociatedTypeWitness, AssociatedConformanceWitness, a4);
}

uint64_t sub_22AA38DD4()
{
  return sub_22AA390F8((uint64_t (*)(uint64_t, _QWORD))sub_22AA38C9C);
}

_QWORD *sub_22AA38DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;

  v10 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v11, a1, a3);
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a4;
  result[5] = v10;
  *a5 = &unk_255B125A0;
  a5[1] = result;
  return result;
}

void AnyTemporalSequence.init<A>(_:count:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  void (*v18)(char *, uint64_t, uint64_t);
  unint64_t v19;
  char *v20;
  uint64_t v21;

  v14 = *(_QWORD *)(a5 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(a7 + 24) = v16;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16))(boxed_opaque_existential_1, a1, a5);
  *(_QWORD *)(a7 + 32) = a2;
  *(_BYTE *)(a7 + 40) = a3 & 1;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  v18((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  v19 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = a4;
  *((_QWORD *)v20 + 3) = a5;
  *((_QWORD *)v20 + 4) = a6;
  v18(&v20[v19], (uint64_t)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  *(_QWORD *)(a7 + 48) = sub_22AA390EC;
  *(_QWORD *)(a7 + 56) = v20;
  OUTLINED_FUNCTION_3();
}

_QWORD *sub_22AA38F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v20 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v10, a1, a3, v12);
  sub_22ABDF200();
  v17 = type metadata accessor for TemporalFeature(0, a2, v15, v16);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return sub_22AA38DE0((uint64_t)v14, v17, AssociatedTypeWitness, AssociatedConformanceWitness, a4);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_22AA390EC()
{
  return sub_22AA390F8((uint64_t (*)(uint64_t, _QWORD))sub_22AA38F5C);
}

uint64_t sub_22AA390F8(uint64_t (*a1)(uint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80);
  return a1(v1 + ((v2 + 40) & ~v2), *(_QWORD *)(v1 + 16));
}

uint64_t sub_22AA3911C()
{
  return AnyTemporalSequence.count.getter();
}

uint64_t sub_22AA39134(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AnyTemporalSequence<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22AA39160()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA39170(uint64_t a1)
{
  uint64_t v1;

  AnyTemporalSequence.makeAsyncIterator()();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_22AA391A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_22AA391E8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_22AA39250;
  return sub_22ABDF188();
}

uint64_t sub_22AA39250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_41_0();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_3_0();
  swift_endAccess();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_22AA392AC()
{
  uint64_t v0;

  swift_endAccess();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA392D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A9ADC14;
  return AnyTemporalIterator.next()(a1);
}

uint64_t sub_22AA39328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_22AA393C0;
  return sub_22ABDF1A0();
}

uint64_t sub_22AA393C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_10_25(v3);
  if (v1)
    **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t _s21CumulativeSumSequenceVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_release();
}

uint64_t _s21CumulativeSumSequenceVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain();
  return a1;
}

uint64_t _s21CumulativeSumSequenceVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s21CumulativeSumSequenceVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t _s21CumulativeSumSequenceVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21CumulativeSumSequenceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AnyTemporalSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyTemporalSequence);
}

_QWORD *sub_22AA395B8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for BaseTreeRegressorModel()
{
  return swift_release();
}

_QWORD *sub_22AA395EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_22AA39624(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for AnyTemporalIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyTemporalIterator);
}

uint64_t sub_22AA39660()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AA39684(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_22A9ABF58;
  return sub_22AA391A0(a1, v6, v4, v5, v7);
}

uint64_t OUTLINED_FUNCTION_3_42(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 104);
}

uint64_t OUTLINED_FUNCTION_5_31(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_7_39()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_10_25@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

void ModelMetadata.description.getter()
{
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_3_43();
  OUTLINED_FUNCTION_0_5();
}

void ModelMetadata.description.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_44();
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_21();
}

uint64_t (*ModelMetadata.description.modify())()
{
  return nullsub_1;
}

void ModelMetadata.version.getter()
{
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_3_43();
  OUTLINED_FUNCTION_0_5();
}

void ModelMetadata.version.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_44();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_21();
}

uint64_t (*ModelMetadata.version.modify())()
{
  return nullsub_1;
}

void ModelMetadata.author.getter()
{
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_3_43();
  OUTLINED_FUNCTION_0_5();
}

void ModelMetadata.author.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_44();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_21();
}

uint64_t (*ModelMetadata.author.modify())()
{
  return nullsub_1;
}

void ModelMetadata.license.getter()
{
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_3_43();
  OUTLINED_FUNCTION_0_5();
}

void ModelMetadata.license.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_44();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_21();
}

uint64_t (*ModelMetadata.license.modify())()
{
  return nullsub_1;
}

uint64_t ModelMetadata.creatorDefined.getter()
{
  return sub_22ABDEAEC();
}

uint64_t ModelMetadata.creatorDefined.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*ModelMetadata.creatorDefined.modify())()
{
  return nullsub_1;
}

void __swiftcall ModelMetadata.init(description:version:author:license:creatorDefined:)(CreateMLComponents::ModelMetadata *__return_ptr retstr, Swift::String description, Swift::String version, Swift::String author, Swift::String license, Swift::OpaquePointer creatorDefined)
{
  void *object;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t countAndFlagsBits;

  object = license._object;
  countAndFlagsBits = license._countAndFlagsBits;
  v7 = author._object;
  v8 = author._countAndFlagsBits;
  v9 = version._object;
  v10 = version._countAndFlagsBits;
  v11 = description._object;
  v12 = description._countAndFlagsBits;
  sub_22ABDEAC8();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_16_23();
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_63_1();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  retstr->description._countAndFlagsBits = v12;
  retstr->description._object = v11;
  retstr->version._countAndFlagsBits = v10;
  retstr->version._object = v9;
  retstr->author._countAndFlagsBits = v8;
  retstr->author._object = v7;
  retstr->license._countAndFlagsBits = countAndFlagsBits;
  retstr->license._object = object;
  retstr->creatorDefined = creatorDefined;
}

uint64_t ModelMetadata.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_9();
  v0 = OUTLINED_FUNCTION_3_43();
  sub_22AA3A23C(v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t static ModelMetadata.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v19 = a1[7];
  v20 = a1[6];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v12 = *a1 == *a2 && a1[1] == a2[1];
  v17 = a2[8];
  v18 = a1[8];
  if ((v12 || (OUTLINED_FUNCTION_55() & 1) != 0)
    && (v2 == v6 ? (v13 = v3 == v7) : (v13 = 0),
        (v13 || (OUTLINED_FUNCTION_3_43(), (OUTLINED_FUNCTION_55() & 1) != 0))
     && (v4 == v8 ? (v14 = v5 == v9) : (v14 = 0),
         (v14 || (OUTLINED_FUNCTION_55() & 1) != 0)
      && (v20 == v10 ? (v15 = v19 == v11) : (v15 = 0), v15 || (OUTLINED_FUNCTION_55() & 1) != 0))))
  {
    return sub_22AA39E1C(v18, v17);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22AA39BC8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  float v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  double v26;
  double v27;
  float v28;
  char v30;
  BOOL v31;
  uint64_t v35;
  int64_t v36;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v35 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v36 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
      goto LABEL_22;
    }
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v10 >= v36)
      return 1;
    v11 = *(_QWORD *)(v35 + 8 * v10);
    ++v4;
    if (!v11)
    {
      v4 = v10 + 1;
      if (v10 + 1 >= v36)
        return 1;
      v11 = *(_QWORD *)(v35 + 8 * v4);
      if (!v11)
      {
        v4 = v10 + 2;
        if (v10 + 2 >= v36)
          return 1;
        v11 = *(_QWORD *)(v35 + 8 * v4);
        if (!v11)
          break;
      }
    }
LABEL_21:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_22:
    v13 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(v3 + 56) + 40 * v9;
    v18 = *(_QWORD *)v16;
    v17 = *(_QWORD *)(v16 + 8);
    v20 = *(double *)(v16 + 16);
    v19 = *(double *)(v16 + 24);
    v21 = *(float *)(v16 + 32);
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_16_23();
    v22 = sub_22AA03684(v14, v15);
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      OUTLINED_FUNCTION_63_1();
      return 0;
    }
    v25 = *(_QWORD *)(a2 + 56) + 40 * v22;
    v27 = *(double *)(v25 + 16);
    v26 = *(double *)(v25 + 24);
    v28 = *(float *)(v25 + 32);
    if (*(_QWORD *)v25 == v18 && *(_QWORD *)(v25 + 8) == v17)
    {
      result = OUTLINED_FUNCTION_63_1();
      if (v27 != v20 || v26 != v19 || v28 != v21)
        return 0;
    }
    else
    {
      v30 = OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_63_1();
      result = 0;
      if ((v30 & 1) == 0)
        return result;
      v31 = v27 == v20 && v26 == v19;
      if (!v31 || v28 != v21)
        return result;
    }
  }
  v12 = v10 + 3;
  if (v12 >= v36)
    return 1;
  v11 = *(_QWORD *)(v35 + 8 * v12);
  if (v11)
  {
    v4 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v4 >= v36)
      return 1;
    v11 = *(_QWORD *)(v35 + 8 * v4);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_22AA39E1C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  _QWORD *v20;
  char v22;
  int64_t v23;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v23 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v23)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v23)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v23)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v23)
            return 1;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v10);
    v16 = *v14;
    v15 = v14[1];
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v17 = sub_22AA03688();
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v20 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v17);
    if (*v20 == v16 && v20[1] == v15)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v22 = sub_22ABDFF68();
      result = swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v23)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v23)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t ModelMetadata.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 64);
  sub_22ABE0244();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_23();
  sub_22ABDEDB0();
  OUTLINED_FUNCTION_63_1();
  sub_22ABDEAEC();
  sub_22AA3A23C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_22ABE0280();
}

uint64_t sub_22AA3A138()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 64);
  sub_22ABE0244();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22AA3A23C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_22ABE0280();
}

uint64_t sub_22AA3A23C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = sub_22ABDEAEC();
  v7 = 0;
  v8 = 0;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  for (v4 &= v4 - 1; ; v4 = (v10 - 1) & v10)
  {
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    sub_22ABDEDB0();
    swift_bridgeObjectRelease();
    sub_22ABDEDB0();
    swift_bridgeObjectRelease();
    result = sub_22ABE0280();
    v7 ^= result;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_19;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_16:
    ;
  }
  v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_22ABE0250();
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_22AA3A404()
{
  unint64_t result;

  result = qword_255B125A8;
  if (!qword_255B125A8)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for ModelMetadata, &type metadata for ModelMetadata);
    atomic_store(result, (unint64_t *)&qword_255B125A8);
  }
  return result;
}

uint64_t destroy for ModelMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ModelMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *assignWithCopy for ModelMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for ModelMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelMetadata()
{
  return &type metadata for ModelMetadata;
}

uint64_t OUTLINED_FUNCTION_3_43()
{
  uint64_t v0;

  return v0;
}

uint64_t Transformer.export(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v7 = type metadata accessor for CoreMLPackage();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_34();
  v9 = MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B125B0);
  if (swift_dynamicCast())
  {
    sub_22A9A1880(v19, (uint64_t)&v21);
    v12 = v23;
    v13 = v24;
    __swift_project_boxed_opaque_existential_1(&v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    if (!v3)
    {
      sub_22AB31614(a1);
      sub_22AA3A8DC(v4);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  }
  else
  {
    v20 = 0;
    memset(v19, 0, sizeof(v19));
    sub_22AA3A89C((uint64_t)v19);
    type metadata accessor for SerializationError();
    sub_22A9D395C();
    OUTLINED_FUNCTION_53();
    v16 = v15;
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_22ABDFF2C();
    v17 = v22;
    *v16 = v21;
    v16[1] = v17;
    v18 = swift_storeEnumTagMultiPayload();
    return swift_willThrow(v18);
  }
}

uint64_t sub_22AA3A89C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255B125B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA3A8DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CoreMLPackage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Transformer.export(to:metadata:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__int128 *, _QWORD);
  uint64_t *v22;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[6];
  __int128 v29[2];
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = v3;
  v35 = a1;
  v9 = type metadata accessor for CoreMLPackage();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_34();
  v13 = a2[2];
  v28[0] = *a2;
  v28[1] = v13;
  v14 = a2[4];
  v28[2] = a2[5];
  v28[3] = v14;
  v15 = a2[6];
  v16 = a2[7];
  v17 = a2[8];
  v28[4] = v16;
  v28[5] = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v5, v6, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B125B0);
  if (swift_dynamicCast())
  {
    sub_22A9A1880(v29, (uint64_t)&v31);
    v19 = v33;
    v20 = v34;
    __swift_project_boxed_opaque_existential_1(&v31, v33);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
    if (!v4)
    {
      sub_22ABDEAEC();
      sub_22ABDE354();
      sub_22ABDEAEC();
      sub_22ABDE3C0();
      sub_22ABDEAEC();
      sub_22ABDE390();
      sub_22ABDEAEC();
      sub_22ABDE3A8();
      sub_22ABDEAEC();
      v21 = (void (*)(__int128 *, _QWORD))sub_22ABDE360();
      sub_22A9D11D8(v17, (uint64_t)sub_22A9D147C, 0, v22);
      v21(v29, 0);
      sub_22AB31614(v35);
      sub_22AA3A8DC((uint64_t)v11);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  }
  else
  {
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    sub_22AA3A89C((uint64_t)v29);
    type metadata accessor for SerializationError();
    sub_22A9D395C();
    OUTLINED_FUNCTION_53();
    v25 = v24;
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_22ABDFF2C();
    v26 = v32;
    *v25 = v31;
    v25[1] = v26;
    v27 = swift_storeEnumTagMultiPayload();
    return swift_willThrow(v27);
  }
}

void sub_22AA3ABA4(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double *v9;
  unint64_t v10;
  double v11;
  double v12;
  BOOL v14;
  uint64_t v15;

  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v2 = a1;
    v4 = a2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  sub_22AB5D828();
  v5 = v15;
LABEL_3:
  v7 = v2 % v6;
  if (v2 % v6 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (v7 >= v8)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v9 = (double *)(v5 + 32);
  *(double *)(v5 + 32 + 8 * v7) = v4;
  *(_QWORD *)(v3 + 8) = v5;
  if ((uint64_t)v8 <= v2)
  {
    v10 = v8 - 1;
    do
    {
      v11 = *v9++;
      v12 = v11;
      v14 = v10-- != 0;
    }
    while (v12 <= *(double *)v3 + v4 && v14);
  }
}

void Collection<>.mean()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);

  OUTLINED_FUNCTION_4_4();
  a19 = v20;
  a20 = v21;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  OUTLINED_FUNCTION_23_8();
  v26 = (char *)(v24 - v25);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&a9 - v28;
  OUTLINED_FUNCTION_26_20();
  if ((sub_22ABDF380() & 1) != 0)
  {
    sub_22ABDF650();
  }
  else
  {
    OUTLINED_FUNCTION_26_20();
    Collection<>.sum()();
    OUTLINED_FUNCTION_26_20();
    sub_22ABDF35C();
    sub_22ABDEBDC();
    sub_22ABDEB88();
    v30 = *(void (**)(char *, uint64_t))(v23 + 8);
    v30(v26, AssociatedTypeWitness);
    v30(v29, AssociatedTypeWitness);
  }
  OUTLINED_FUNCTION_3();
}

void Sequence<>.mean()()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t AssociatedConformanceWitness;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;

  OUTLINED_FUNCTION_4_4();
  v65 = v0;
  v3 = v2;
  v5 = v4;
  v53 = v6;
  OUTLINED_FUNCTION_8_30();
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_29_19(v8, v52);
  v64 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  AssociatedConformanceWitness = v10;
  v11 = OUTLINED_FUNCTION_8_30();
  v54 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v52 - v13;
  v52 = v3;
  v63 = *(char **)(*(_QWORD *)(v3 + 16) + 8);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v15);
  v66 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_87();
  v59 = v17;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_12_0();
  v58 = v19;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_12_0();
  v57 = v21;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_12_0();
  v56 = v23;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v24);
  v60 = (char *)&v52 - v25;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v52 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v52 - v30;
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_12_33();
  OUTLINED_FUNCTION_11_37();
  v32 = *((_QWORD *)v63 + 1);
  v62 = v28;
  v55 = v32;
  sub_22ABDF650();
  OUTLINED_FUNCTION_31_15((uint64_t)v65, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 16));
  v63 = v14;
  sub_22ABDEE58();
  OUTLINED_FUNCTION_27_22();
  v64 = v11;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v33 = 0;
  v34 = (uint64_t)v60;
  v35 = v58;
  while (1)
  {
    v36 = v67;
    sub_22ABDF650();
    OUTLINED_FUNCTION_19_24(v36);
    if (v37)
      break;
    v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32);
    v65(v34, v67, v1);
    v38 = v1;
    v39 = v56;
    v40 = (uint64_t)v62;
    OUTLINED_FUNCTION_14_31();
    v41 = v57;
    sub_22ABDFAE8();
    v42 = (uint64_t)v31;
    v43 = v59;
    OUTLINED_FUNCTION_14_31();
    OUTLINED_FUNCTION_14_31();
    v44 = v43;
    v31 = (char *)v42;
    OUTLINED_FUNCTION_15_28(v44);
    v45 = v39;
    v1 = v38;
    OUTLINED_FUNCTION_15_28(v45);
    OUTLINED_FUNCTION_15_28(v34);
    OUTLINED_FUNCTION_15_28(v40);
    OUTLINED_FUNCTION_15_28(v42);
    v46 = v40;
    v47 = v65;
    v65(v46, v35, v38);
    v47(v42, v41, v38);
    if (__OFADD__(v33++, 1))
    {
      __break(1u);
      break;
    }
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v63, v64);
  if (v33)
  {
    v49 = (uint64_t)v60;
    sub_22ABDEBDC();
    v50 = v53;
    sub_22ABDEB88();
    OUTLINED_FUNCTION_2_40(v49);
    v51 = 0;
  }
  else
  {
    v51 = 1;
    v50 = v53;
  }
  OUTLINED_FUNCTION_2_40((uint64_t)v62);
  OUTLINED_FUNCTION_2_40((uint64_t)v31);
  __swift_storeEnumTagSinglePayload(v50, v51, 1, v1);
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA3B1B8()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v8)(char *, uint64_t);
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - v5;
  if ((sub_22ABDF380() & 1) != 0)
    return sub_22ABDF650();
  sub_22AA3B32C();
  sub_22ABDF35C();
  sub_22ABDEBDC();
  sub_22ABDEB88();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v8)(v6, AssociatedTypeWitness);
}

uint64_t sub_22AA3B318()
{
  return sub_22AA3B32C();
}

uint64_t sub_22AA3B32C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  __isPlatformVersionAtLeast(2, 17, 0, 0);
  v0 = OUTLINED_FUNCTION_26_20();
  return v1(v0);
}

void Collection<>.sum()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t AssociatedConformanceWitness;
  uint64_t v33;
  char v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41[2];
  void (*v42)(uint64_t, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;

  OUTLINED_FUNCTION_4_4();
  v43 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v42 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 8);
  OUTLINED_FUNCTION_25_20();
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_29_19(v11, v41[0]);
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  v41[0] = v14;
  v15 = OUTLINED_FUNCTION_25_20();
  v41[1] = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_21_29();
  v50 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_87();
  v48 = v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  v45 = (char *)v41 - v20;
  OUTLINED_FUNCTION_4_0();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v41 - v23;
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_28_18();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_12_0();
  v47 = v26;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v27);
  v28 = *(_QWORD *)(v4 + 16);
  v30 = (char *)v41 - v29;
  v31 = *(_QWORD *)(*(_QWORD *)(v28 + 8) + 8);
  v49 = v8;
  sub_22ABDF650();
  v46 = v31;
  sub_22ABDF650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v41[0], v43, v6);
  sub_22ABDEE58();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v33 = v52;
  OUTLINED_FUNCTION_16_28();
  OUTLINED_FUNCTION_19_24(v33);
  if (!v34)
  {
    v42 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
    v43 = AssociatedConformanceWitness;
    v44 = v15;
    v51 = v24;
    v35 = v42;
    do
    {
      v36 = v47;
      OUTLINED_FUNCTION_22_27(v47);
      sub_22ABDFAF4();
      v37 = v49;
      sub_22ABDFAE8();
      v38 = v48;
      OUTLINED_FUNCTION_24_23();
      OUTLINED_FUNCTION_24_23();
      OUTLINED_FUNCTION_2_40(v38);
      OUTLINED_FUNCTION_2_40(v2);
      OUTLINED_FUNCTION_2_40(v36);
      OUTLINED_FUNCTION_2_40((uint64_t)v30);
      OUTLINED_FUNCTION_2_40(v37);
      OUTLINED_FUNCTION_22_27((uint64_t)v30);
      v35(v37, v51, v1);
      OUTLINED_FUNCTION_16_28();
      OUTLINED_FUNCTION_19_24(v52);
    }
    while (!v34);
  }
  v39 = OUTLINED_FUNCTION_27_22();
  v40(v39);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v1);
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA3B6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t AssociatedConformanceWitness;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v48 = *(void (**)(char *, uint64_t, uint64_t))(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v8);
  v59 = (uint64_t)&v46 - v9;
  v10 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v46 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v46 - v14;
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v16);
  v55 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v52 = (char *)&v46 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v46 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v46 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v54 = (char *)&v46 - v27;
  MEMORY[0x24BDAC7A8](v28);
  v29 = *(_QWORD *)(a3 + 16);
  v31 = (char *)&v46 - v30;
  v32 = *(_QWORD *)(*(_QWORD *)(v29 + 8) + 8);
  v56 = a4;
  sub_22ABDF650();
  v53 = v32;
  sub_22ABDF650();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v46, v49, a1);
  sub_22ABDEE58();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v34 = v59;
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v34, 1, AssociatedTypeWitness) != 1)
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
    v49 = AssociatedConformanceWitness;
    v50 = v13;
    v51 = v15;
    v58 = v22;
    v35 = v48;
    do
    {
      v36 = v54;
      v35(v54, v34, AssociatedTypeWitness);
      sub_22ABDFAF4();
      v37 = v56;
      sub_22ABDFAE8();
      v38 = v31;
      v39 = v25;
      v40 = v52;
      v41 = v55;
      sub_22ABDFAF4();
      sub_22ABDFAF4();
      v42 = *(void (**)(char *, uint64_t))(v57 + 8);
      v43 = v40;
      v25 = v39;
      v31 = v38;
      v42(v41, AssociatedTypeWitness);
      v42(v25, AssociatedTypeWitness);
      v42(v36, AssociatedTypeWitness);
      v42(v38, AssociatedTypeWitness);
      v42(v37, AssociatedTypeWitness);
      v35(v38, (uint64_t)v43, AssociatedTypeWitness);
      v44 = v37;
      v13 = v50;
      v15 = v51;
      v35(v44, (uint64_t)v58, AssociatedTypeWitness);
      sub_22ABDF650();
      v34 = v59;
    }
    while (__swift_getEnumTagSinglePayload(v59, 1, AssociatedTypeWitness) != 1);
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v31, AssociatedTypeWitness);
}

void sub_22AA3BB08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  float v24;
  float v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t AssociatedTypeWitness;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_4_4();
  v34 = v1;
  v35 = v2;
  v4 = v3;
  v6 = v5;
  v30 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 8);
  v7 = *(_QWORD *)(v30 + 16);
  swift_getAssociatedTypeWitness();
  v33 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v8);
  v29 = (char *)v27 - v9;
  v10 = swift_checkMetadataState();
  v32 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_87();
  v28 = v12;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v27 - v14;
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_28_18();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v27 - v18;
  if ((sub_22ABDF380() & 1) != 0)
  {
    v20 = v6;
    v21 = 1;
LABEL_15:
    __swift_storeEnumTagSinglePayload(v20, v21, 1, v10);
    return;
  }
  v27[1] = v4;
  sub_22ABDEF60();
  v22 = sub_22ABDF35C();
  if (__OFSUB__(v22, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  v23 = (float)(v22 - 1) * 0.5;
  v24 = floorf(v23);
  if ((~LODWORD(v24) & 0x7F800000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v24 <= -9.2234e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v24 >= 9.2234e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v25 = ceilf(v23);
  if ((~LODWORD(v25) & 0x7F800000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v25 <= -9.2234e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v25 >= 9.2234e18)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((uint64_t)v24 != (uint64_t)v25)
  {
    OUTLINED_FUNCTION_13_37();
    OUTLINED_FUNCTION_13_37();
    swift_bridgeObjectRelease();
    sub_22ABDFAE8();
    swift_getAssociatedConformanceWitness();
    sub_22ABE013C();
    v26 = v28;
    OUTLINED_FUNCTION_11_37();
    OUTLINED_FUNCTION_27_22();
    sub_22ABDEB88();
    OUTLINED_FUNCTION_2_40(v26);
    OUTLINED_FUNCTION_2_40((uint64_t)v15);
    OUTLINED_FUNCTION_2_40(v0);
    OUTLINED_FUNCTION_2_40((uint64_t)v19);
    __swift_storeEnumTagSinglePayload(v6, 0, 1, v10);
    OUTLINED_FUNCTION_3();
    return;
  }
  if ((~LODWORD(v23) & 0x7F800000) == 0)
    goto LABEL_24;
  if (v23 > -9.2234e18)
  {
    if (v23 < 9.2234e18)
    {
      OUTLINED_FUNCTION_13_37();
      swift_bridgeObjectRelease();
      v20 = v6;
      v21 = 0;
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_22AA3BE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, char *, uint64_t);
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_4_4();
  v31 = v0;
  v3 = v2;
  v5 = v4;
  v26[1] = v6;
  v29 = *(_QWORD *)(v7 + 8);
  v27 = v4;
  v8 = OUTLINED_FUNCTION_8_30();
  v36 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_23_8();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v26 - v14;
  OUTLINED_FUNCTION_23_25();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v26 - v17;
  v30 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_0();
  v28 = v20;
  v21 = OUTLINED_FUNCTION_8_30();
  v32 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_21_29();
  v34 = *(_QWORD *)(v3 + 16);
  v35 = v3;
  v33 = *(_QWORD *)(v34 + 8);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v23);
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_12_33();
  sub_22ABDFF20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v28, v31, v27);
  sub_22ABDEE58();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_10_26();
  OUTLINED_FUNCTION_6_45((uint64_t)v18);
  if (!v24)
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    do
    {
      v25(v15, v18, v8);
      sub_22ABE0154();
      sub_22ABDFB00();
      OUTLINED_FUNCTION_18_29(v12);
      OUTLINED_FUNCTION_18_29((uint64_t)v15);
      OUTLINED_FUNCTION_10_26();
      OUTLINED_FUNCTION_6_45((uint64_t)v18);
    }
    while (!v24);
  }
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v1, v21);
  OUTLINED_FUNCTION_3();
}

void sub_22AA3C118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  OUTLINED_FUNCTION_4_4();
  v37 = v0;
  v2 = v1;
  v4 = v3;
  v39 = v5;
  v35 = *(_QWORD *)(v6 + 8);
  v33[1] = v3;
  v7 = OUTLINED_FUNCTION_8_30();
  OUTLINED_FUNCTION_23_25();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v33 - v9;
  v36 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  v33[2] = v12;
  v34 = OUTLINED_FUNCTION_8_30();
  v38 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v33 - v14;
  v40 = v2;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_21_29();
  v42 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_23_8();
  v20 = v18 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v33 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v33 - v25;
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_12_33();
  v41 = v26;
  sub_22ABDFF20();
  OUTLINED_FUNCTION_31_15(v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
  sub_22ABDEE58();
  OUTLINED_FUNCTION_27_22();
  v27 = v34;
  swift_getAssociatedConformanceWitness();
  v28 = v15;
  v29 = v27;
  sub_22ABDF650();
  OUTLINED_FUNCTION_6_45((uint64_t)v10);
  if (!v30)
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    do
    {
      v31(v23, v10, v7);
      sub_22ABDF308();
      sub_22ABDFB00();
      OUTLINED_FUNCTION_18_29(v20);
      OUTLINED_FUNCTION_18_29((uint64_t)v23);
      sub_22ABDF650();
      OUTLINED_FUNCTION_6_45((uint64_t)v10);
    }
    while (!v30);
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v29);
  v32 = v41;
  sub_22ABDEB7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v7);
  OUTLINED_FUNCTION_3();
}

uint64_t OUTLINED_FUNCTION_2_40(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_6_45(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_8_30()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_10_26()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_11_37()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_12_33()
{
  return sub_22ABE013C();
}

uint64_t OUTLINED_FUNCTION_13_37()
{
  return sub_22ABDF140();
}

uint64_t OUTLINED_FUNCTION_14_31()
{
  return sub_22ABDFAF4();
}

uint64_t OUTLINED_FUNCTION_15_28(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_28()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_17_26()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_18_29(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_19_24(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_22_27(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_23_25()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_24_23()
{
  return sub_22ABDFAF4();
}

uint64_t OUTLINED_FUNCTION_25_20()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_26_20()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_22()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_29_19(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_31_15@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t ImputeTransformer.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ImputeTransformer.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ImputeTransformer.value.modify())()
{
  return nullsub_1;
}

void ImputeTransformer.init(value:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;

  v8 = a5 + *(int *)(type metadata accessor for ImputeTransformer(0, a2, a3, a4) + 44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, a1, a2);
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  OUTLINED_FUNCTION_21();
}

uint64_t type metadata accessor for ImputeTransformer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ImputeTransformer);
}

void ImputeTransformer.applied(to:eventHandler:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v5 = v3;
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = sub_22ABDF5D8();
  OUTLINED_FUNCTION_23_26();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v20 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v20 - v18, a1, v15, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v5, a2);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v14) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a3, v12, v14);
    OUTLINED_FUNCTION_15_29();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v15);
  }
  else
  {
    OUTLINED_FUNCTION_15_29();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a3, v19, v14);
  }
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA3C734(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA3C818(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746E756F63;
  else
    return 0x65756C6176;
}

BOOL sub_22AA3C840(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22A9AFA2C(*a1, *a2);
}

uint64_t sub_22AA3C858()
{
  return sub_22A9AFB4C();
}

uint64_t sub_22AA3C86C()
{
  return _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_22AA3C880()
{
  sub_22ABE0244();
  _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
  return sub_22ABE0280();
}

uint64_t sub_22AA3C8C8()
{
  char *v0;

  return sub_22AA3C818(*v0);
}

uint64_t sub_22AA3C8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA3C734(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA3C90C()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AA3C934@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9AFB44();
  *a1 = result;
  return result;
}

uint64_t sub_22AA3C964(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF06F8, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA3C998(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF06F8, a1);
  return sub_22ABE02F8();
}

void ImputeTransformer.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12[4];
  char v13;
  char v14;

  v4 = a2[2];
  v5 = a2[3];
  v12[0] = a2[4];
  v12[1] = v4;
  v6 = type metadata accessor for ImputeTransformer.CodingKeys(255, v4, v5, v12[0]);
  MEMORY[0x22E2E4D80](&unk_22ABF06F8, v6);
  v7 = sub_22ABDFD58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v14 = 0;
  v11 = v12[3];
  sub_22ABDFD4C();
  if (!v11)
  {
    v13 = 1;
    sub_22ABDFCEC();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for ImputeTransformer.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ImputeTransformer.CodingKeys);
}

void ImputeTransformer.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;

  v40 = a5;
  v39 = *(_QWORD *)(a2 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v43 = v10;
  v14 = type metadata accessor for ImputeTransformer.CodingKeys(255, v11, v12, v13);
  MEMORY[0x22E2E4D80](&unk_22ABF06F8, v14);
  v45 = sub_22ABDFCB0();
  v38 = *(_QWORD *)(v45 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v37 - v16;
  v44 = a2;
  v41 = a3;
  v18 = type metadata accessor for ImputeTransformer(0, a2, a3, a4);
  v37 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v37 - v20;
  v23 = (char *)&v37 + *(int *)(v22 + 44) - v20;
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v42 = v17;
  v24 = v46;
  sub_22ABE0298();
  if (v24)
  {
    OUTLINED_FUNCTION_24_24();
  }
  else
  {
    v25 = v23;
    v27 = v37;
    v26 = v38;
    v46 = v18;
    v29 = v39;
    v28 = v40;
    v48 = 0;
    v30 = v42;
    sub_22ABDFC8C();
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v21, v43, v44);
    v47 = 1;
    v31 = sub_22ABDFC2C();
    v32 = *(void (**)(char *, uint64_t))(v26 + 8);
    v33 = v31;
    v34 = v30;
    LOBYTE(v30) = v35;
    v32(v34, v45);
    *(_QWORD *)v25 = v33;
    v25[8] = v30 & 1;
    v36 = v46;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v28, v21, v46);
    OUTLINED_FUNCTION_24_24();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v36);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA3CD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  ImputeTransformer.applied(to:eventHandler:)(a2, a5, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v5 + 8));
}

void sub_22AA3CD94(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  ImputeTransformer.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

void sub_22AA3CDB4(_QWORD *a1, _QWORD *a2)
{
  ImputeTransformer.encode(to:)(a1, a2);
}

uint64_t ImputeTransformer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return 0;
}

uint64_t static ImputeTransformer<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  char v12;
  _QWORD *v13;
  char v14;

  if ((sub_22ABDECFC() & 1) == 0)
    return 0;
  v10 = *(int *)(type metadata accessor for ImputeTransformer(0, a3, a4, a5) + 44);
  v11 = (_QWORD *)(a1 + v10);
  v12 = *(_BYTE *)(a1 + v10 + 8);
  v13 = (_QWORD *)(a2 + v10);
  v14 = *(_BYTE *)(a2 + v10 + 8);
  if ((v12 & 1) != 0)
  {
    if ((v14 & 1) == 0)
      return 0;
  }
  else
  {
    if (*v11 != *v13)
      v14 = 1;
    if ((v14 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_22AA3CEF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static ImputeTransformer<>.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

void ImputeTransformer<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_22ABDEC0C();
  if (*(_BYTE *)(v2 + *(int *)(a2 + 44) + 8) == 1)
  {
    sub_22ABE025C();
  }
  else
  {
    sub_22ABE025C();
    sub_22ABE0250();
  }
  OUTLINED_FUNCTION_21();
}

uint64_t ImputeTransformer<>.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_22ABE0244();
  ImputeTransformer<>.hash(into:)((uint64_t)v3, a1);
  return sub_22ABE0280();
}

uint64_t sub_22AA3CFC0(uint64_t a1)
{
  return ImputeTransformer<>.hashValue.getter(a1);
}

void sub_22AA3CFC8(uint64_t a1, uint64_t a2)
{
  ImputeTransformer<>.hash(into:)(a1, a2);
}

uint64_t sub_22AA3CFD0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_22ABE0244();
  ImputeTransformer<>.hash(into:)((uint64_t)v4, a2);
  return sub_22ABE0280();
}

uint64_t sub_22AA3D020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x22E2E4D80](&protocol conformance descriptor for <> ImputeTransformer<A>, a1, &v4);
}

void sub_22AA3D058(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  __int128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _OWORD v68[5];
  uint64_t v69;
  uint64_t v70;

  v63 = a1;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  v62 = v2;
  v58 = sub_22ABDE798();
  v57 = *(_QWORD *)(v58 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  v56 = v4;
  v5 = sub_22ABDE324();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87();
  v59 = v7;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)&v46 - v9;
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v11 = sub_22ABDDE8C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_33();
  v15 = (_QWORD *)(v14 - v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B126E8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_33();
  v70 = sub_22ABDDC88();
  v65 = *(_QWORD *)(v70 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - v19;
  v55 = sub_22ABDDEB0();
  v54 = *(_QWORD *)(v55 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_0();
  v64 = v22;
  if (swift_dynamicCastMetatype())
  {
    v23 = OUTLINED_FUNCTION_12_34();
    OUTLINED_FUNCTION_5_32(v23);
    OUTLINED_FUNCTION_11_38();
    v24 = v67;
    *v15 = v66;
    v15[1] = v24;
    OUTLINED_FUNCTION_21_30(*MEMORY[0x24BE629E0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 104));
    OUTLINED_FUNCTION_18_30();
    sub_22ABDDC04();
    v25 = (unsigned int *)MEMORY[0x24BE62578];
    v26 = v20;
  }
  else
  {
    v49 = v12;
    if (!swift_dynamicCastMetatype())
    {
      type metadata accessor for SerializationError();
      sub_22A9D395C();
      swift_allocError();
      v43 = v42;
      v66 = 0;
      v67 = 0xE000000000000000;
      sub_22ABDF7A0();
      sub_22ABDEDC8();
      sub_22ABE0304();
      sub_22ABDEDC8();
      swift_bridgeObjectRelease();
      sub_22ABDEDC8();
      v44 = v67;
      *v43 = v66;
      v43[1] = v44;
      v45 = swift_storeEnumTagMultiPayload();
      swift_willThrow(v45);
      goto LABEL_6;
    }
    v27 = OUTLINED_FUNCTION_12_34();
    OUTLINED_FUNCTION_5_32(v27);
    OUTLINED_FUNCTION_11_38();
    *v15 = v66;
    OUTLINED_FUNCTION_21_30(*MEMORY[0x24BE629D8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 104));
    OUTLINED_FUNCTION_18_30();
    v26 = v20;
    sub_22ABDDBF8();
    v25 = (unsigned int *)MEMORY[0x24BE62570];
  }
  v28 = v65;
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v26, *v25, v70);
  v29 = v52;
  sub_22ABDE318();
  sub_22ABDE258();
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
  v49 = *(unsigned __int8 *)(*(_QWORD *)(sub_22ABDDE68() - 8) + 80) | 7;
  v30 = swift_allocObject();
  v48 = xmmword_22ABE8E30;
  *(_OWORD *)(v30 + 16) = xmmword_22ABE8E30;
  v47 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 16);
  v31 = v51;
  v50 = v26;
  v32 = v70;
  v47(v51, v26, v70);
  OUTLINED_FUNCTION_36_12();
  sub_22ABDE2C4();
  *(_OWORD *)(swift_allocObject() + 16) = v48;
  v33 = v32;
  v47(v31, v26, v32);
  OUTLINED_FUNCTION_36_12();
  sub_22ABDE300();
  v34 = v54;
  v35 = v56;
  v36 = v64;
  v37 = v55;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v56, v64, v55);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v57 + 104))(v35, *MEMORY[0x24BE632C0], v58);
  sub_22ABDE288();
  v39 = v59;
  v38 = v60;
  v40 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v59, v29, v61);
  memset(v68, 0, sizeof(v68));
  v69 = 0;
  v41 = v62;
  sub_22ABDE3CC();
  sub_22AB314C8(v39, v41, v68, v63);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v40);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v50, v33);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v37);
LABEL_6:
  OUTLINED_FUNCTION_16();
}

void sub_22AA3D61C(uint64_t a1@<X8>)
{
  sub_22AA3D058(a1);
}

uint64_t sub_22AA3D630()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22AA3D6A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = *(_BYTE *)(v10 + 8);
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = *(_QWORD *)v10;
    *(_BYTE *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_22AA3D75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_22AA3D7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_22AA3D824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_22AA3D888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_22AA3D8EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    return 0;
  }
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  v8 = (a2 - v6 + 255) >> (8 * v7);
  if (v7 < 4)
    v9 = v8 + 1;
  else
    v9 = 2;
  if (v9 >= 0x10000)
    v10 = 4;
  else
    v10 = 2;
  if (v9 < 0x100)
    v10 = 1;
  if (v9 >= 2)
    v11 = v10;
  else
    v11 = 0;
  return ((uint64_t (*)(void))((char *)&loc_22AA3D968 + 4 * byte_22ABF0490[v11]))();
}

void sub_22AA3D9CC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v7 >= a3)
  {
    v12 = 0;
  }
  else
  {
    v9 = (a3 - v7 + 255) >> (8 * v8);
    if (v8 <= 3)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (v7 < a2)
  {
    if (v8 >= 4)
      v13 = ~v7 + a2;
    else
      v13 = (~(_BYTE)v7 + a2);
    bzero(a1, v8);
    if ((_DWORD)v8 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_22AA3DAD8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_22AA3DAE0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x22AA3DAE8);
}

void sub_22AA3DB00()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_22AA3DB08()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_22AA3DB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!(_DWORD)a2)
    JUMPOUT(0x22AA3DB18);
  return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
}

uint64_t sub_22AA3DB30(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA3DB7C + 4 * byte_22ABF04A4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA3DBB0 + 4 * byte_22ABF049F[v4]))();
}

uint64_t sub_22AA3DBB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA3DBB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA3DBC0);
  return result;
}

uint64_t sub_22AA3DBCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA3DBD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA3DBD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA3DBE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AA3DBEC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA3DBFC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA3DC0C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA3DC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;
  char v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v57 = a3;
  v59 = a5;
  v63 = a1;
  v55 = a2;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = sub_22ABDF5D8();
  OUTLINED_FUNCTION_23_26();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v48 - v11;
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v48 - v14;
  v60 = *(_QWORD *)(a3 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_0();
  v58 = v17;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v54 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v48 - v20;
  v50 = *(_QWORD *)(a4 + 16);
  v52 = *(_QWORD *)(*(_QWORD *)(v50 + 16) + 8);
  v62 = *(_QWORD *)(v52 + 16);
  v22 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v48 - v24;
  v64 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_87();
  v49 = v27;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v28);
  v53 = (char *)v48 - v29;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v30);
  v51 = (uint64_t)v48 - v31;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v48 - v33;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v48[2] = v22;
  v48[0] = AssociatedConformanceWitness;
  sub_22ABE013C();
  v61 = v34;
  v48[1] = v25;
  OUTLINED_FUNCTION_13_38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v58, v63, v57);
  sub_22ABDEE58();
  swift_getAssociatedConformanceWitness();
  v36 = 0;
  while (1)
  {
    v63 = v36;
    OUTLINED_FUNCTION_10_27();
    OUTLINED_FUNCTION_7_40((uint64_t)v15);
    if (v37)
      break;
    v38 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    while (1)
    {
      v38(v12, v15, v9);
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8) != 1)
        break;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v9);
      OUTLINED_FUNCTION_10_27();
      OUTLINED_FUNCTION_7_40((uint64_t)v15);
      if (v37)
        goto LABEL_11;
    }
    v39 = v51;
    OUTLINED_FUNCTION_79(v51, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 32));
    sub_22ABDFB00();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v39, v8);
    v36 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      break;
    }
  }
LABEL_11:
  (*(void (**)(char *, uint64_t))(v54 + 8))(v21, AssociatedTypeWitness);
  v40 = v56;
  v41 = v56 + *(int *)(v55 + 44);
  v42 = v63;
  *(_QWORD *)v41 = v63;
  *(_BYTE *)(v41 + 8) = 0;
  if (v42 < 1)
  {
    sub_22ABE013C();
    v44 = (uint64_t)v53;
    OUTLINED_FUNCTION_13_38();
    v46 = v64;
    v47 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
    v45 = v61;
  }
  else
  {
    v43 = v49;
    sub_22ABDEBDC();
    v44 = (uint64_t)v53;
    v45 = v61;
    sub_22ABDEB88();
    v46 = v64;
    v47 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
    v47(v43, v8);
  }
  v47((uint64_t)v45, v8);
  OUTLINED_FUNCTION_79(v40, v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 40));
  OUTLINED_FUNCTION_3();
}

void sub_22AA3E03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t AssociatedConformanceWitness;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;

  v6 = v5;
  v49 = a5;
  v45 = a4;
  v46 = a2;
  v9 = *(_QWORD *)(a2 + 16);
  v47 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v44 = v11;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v43 = (char *)&v39 - v16;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v39 - v18;
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v20);
  v50 = (char *)&v39 - v21;
  v22 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_33();
  v26 = v25 - v24;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v39 - v29;
  OUTLINED_FUNCTION_79(v26, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
  sub_22ABDEE58();
  v31 = (uint64_t)v50;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v48 = v30;
  v49 = AssociatedTypeWitness;
  v42 = AssociatedConformanceWitness;
  sub_22ABDF650();
  OUTLINED_FUNCTION_7_40(v31);
  if (v33)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v48, v49);
    OUTLINED_FUNCTION_3();
  }
  else
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
    while (1)
    {
      v41(v19, v31, v9);
      v34 = v6 + *(int *)(v46 + 44);
      if ((*(_BYTE *)(v34 + 8) & 1) != 0)
        break;
      if (__OFADD__(*(_QWORD *)v34, 1))
      {
        __break(1u);
        break;
      }
      ++*(_QWORD *)v34;
      sub_22ABDFAF4();
      if ((*(_BYTE *)(v34 + 8) & 1) != 0)
        goto LABEL_11;
      v35 = (uint64_t)v14;
      v36 = (uint64_t)v19;
      v37 = v44;
      sub_22ABDEBDC();
      v38 = (uint64_t)v43;
      sub_22ABDEB88();
      OUTLINED_FUNCTION_14_32(v37);
      OUTLINED_FUNCTION_14_32(v35);
      sub_22ABDFB00();
      OUTLINED_FUNCTION_14_32(v38);
      OUTLINED_FUNCTION_14_32(v36);
      v31 = (uint64_t)v50;
      sub_22ABDF650();
      OUTLINED_FUNCTION_7_40(v31);
      v14 = (char *)v35;
      v19 = (char *)v36;
      if (v33)
        goto LABEL_8;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

uint64_t OUTLINED_FUNCTION_5_32(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_storeEnumTagSinglePayload(v4, 1, 1, a1);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v5 - 304), v2);
}

uint64_t OUTLINED_FUNCTION_7_40(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_10_27()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_11_38()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_12_34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 320) = v0;
  return sub_22ABDDE98();
}

uint64_t OUTLINED_FUNCTION_13_38()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_14_32(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_15_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_18_30()
{
  return sub_22ABDDEA4();
}

uint64_t OUTLINED_FUNCTION_21_30@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_24_24()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t sub_22AA3E434()
{
  return sub_22ABDEF30();
}

uint64_t sub_22AA3E488(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  char v16;
  uint64_t result;
  uint64_t v18;

  sub_22ABDE8A0();
  v2 = sub_22ABDE84C();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v2 + 32);
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      v7 = *v4++;
      v6 = v7;
      if (v7 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_22AB4CE30();
        v8 = *(_QWORD *)(v5 + 16);
        if (v8 >= *(_QWORD *)(v5 + 24) >> 1)
          sub_22AB4CE30();
        *(_QWORD *)(v5 + 16) = v8 + 1;
        *(_QWORD *)(v5 + 8 * v8 + 32) = v6;
      }
      --v3;
    }
    while (v3);
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v5 + 16);
  swift_release();
  v10 = (_QWORD *)sub_22ABDE84C();
  v11 = v10;
  if (v9 <= 1)
  {
    v16 = sub_22A99EB90(v10, a2);
    result = swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      return result;
    v14 = 0xD000000000000028;
    v18 = sub_22ABDE84C();
    sub_22A9B7B50();
    v12 = swift_allocError();
    *(_QWORD *)v13 = v18;
    v15 = "Features should all have the same shape.";
  }
  else
  {
    sub_22A9B7B50();
    v12 = swift_allocError();
    *(_QWORD *)v13 = v11;
    v14 = 0xD000000000000040;
    v15 = "Input shaped arrays must have rank 1 or be squeezable to rank 1.";
  }
  *(_QWORD *)(v13 + 8) = v14;
  *(_QWORD *)(v13 + 16) = (unint64_t)(v15 - 32) | 0x8000000000000000;
  *(_QWORD *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 32) = 6;
  return swift_willThrow(v12);
}

uint64_t sub_22AA3E67C(uint64_t a1)
{
  uint64_t v1;

  return sub_22AA3E488(a1, *(_QWORD **)(v1 + 72));
}

void UniformRandomIntegerParameter.range.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_45_2();
  v3 = OUTLINED_FUNCTION_0_34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
  OUTLINED_FUNCTION_21_1();
}

void UniformRandomIntegerParameter.range.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_45_2();
  v3 = OUTLINED_FUNCTION_0_34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_21_1();
}

uint64_t (*UniformRandomIntegerParameter.range.modify())()
{
  OUTLINED_FUNCTION_45_2();
  return j__swift_endAccess;
}

void UniformRandomIntegerParameter.__allocating_init<A>(range:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22AA3E81C(a1, a2, a3, a4, UniformRandomIntegerParameter.init<A>(range:_:));
}

{
  sub_22AA3E81C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))UniformRandomIntegerParameter.init<A>(range:_:));
}

void UniformRandomIntegerParameter.init<A>(range:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v7 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 112);
  v8 = OUTLINED_FUNCTION_0_34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  OUTLINED_FUNCTION_7_41();
  *v9 = a2;
  v9[1] = a3;
  OUTLINED_FUNCTION_38();
}

void sub_22AA3E81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  swift_allocObject();
  a5(a1, a2, a3);
  OUTLINED_FUNCTION_38();
}

uint64_t UniformRandomIntegerParameter.init<A>(range:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v18 = a2;
  v19 = a3;
  v17[1] = *(_QWORD *)(*(_QWORD *)v3 + 104);
  v5 = sub_22ABDECCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - v7;
  v9 = sub_22ABDF470();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v17 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a1, v5, v11);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_22ABDF47C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112), v13, v9);
  OUTLINED_FUNCTION_7_41();
  v14 = v19;
  *v15 = v18;
  v15[1] = v14;
  return v3;
}

uint64_t UniformRandomIntegerParameter.applied<A>(to:generator:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  v9 = (_QWORD *)*v7;
  v8[13] = *v7;
  v10 = v9[10];
  v8[14] = v10;
  v8[15] = *(_QWORD *)(v10 - 8);
  v8[16] = OUTLINED_FUNCTION_0_0();
  v11 = v9[11];
  v8[17] = v11;
  v8[18] = v9[13];
  v12 = sub_22ABDF470();
  v8[19] = v12;
  v8[20] = *(_QWORD *)(v12 - 8);
  v8[21] = OUTLINED_FUNCTION_0_0();
  v8[22] = *(_QWORD *)(v11 - 8);
  v8[23] = OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA3EAA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[19];
  v8 = v0[23];
  v4 = v0[12];
  v9 = v0[13];
  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 112);
  OUTLINED_FUNCTION_45_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v5, v3);
  sub_22ABDFA58();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v6 = *(void (**)(uint64_t))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120));
  swift_retain();
  v6(v8);
  swift_release();
  v10 = **(int **)(*(_QWORD *)(v9 + 96) + 24) + *(_QWORD *)(*(_QWORD *)(v9 + 96) + 24);
  v7 = (_QWORD *)swift_task_alloc();
  v0[24] = v7;
  *v7 = v0;
  v7[1] = sub_22AA3EBF8;
  __asm { BR              X8 }
}

uint64_t sub_22AA3EBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA3EC78()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_44();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA3ECBC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_44();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t UniformRandomIntegerParameter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v2 = OUTLINED_FUNCTION_0_34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  OUTLINED_FUNCTION_7_41();
  swift_release();
  return v0;
}

uint64_t UniformRandomIntegerParameter.__deallocating_deinit()
{
  UniformRandomIntegerParameter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22AA3ED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99DE80;
  return UniformRandomIntegerParameter.applied<A>(to:generator:eventHandler:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_22AA3EE18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDF470();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for UniformRandomIntegerParameter()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t method lookup function for UniformRandomIntegerParameter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniformRandomIntegerParameter.__allocating_init<A>(range:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t OUTLINED_FUNCTION_0_34()
{
  return sub_22ABDF470();
}

uint64_t OUTLINED_FUNCTION_3_44()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[22] + 8))(v0[23], v0[17]);
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
}

uint64_t sub_22AA3EF20()
{
  return sub_22AA3FF70();
}

uint64_t sub_22AA3EF3C()
{
  return sub_22ABDE81C();
}

uint64_t sub_22AA3EF7C()
{
  OUTLINED_FUNCTION_0_35();
  return sub_22ABDE900();
}

uint64_t sub_22AA3EFB4()
{
  return sub_22ABDD910();
}

char *sub_22AA3EFF8(char *__src, uint64_t a2, char **a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;

  if (__src)
  {
    v3 = __src;
    v4 = a2 - (_QWORD)__src;
    if ((unint64_t)(a2 - (_QWORD)__src + 3) >= 7)
    {
      v5 = v4 / 4;
      if ((uint64_t)a3[1] < v4 / 4)
      {
        __break(1u);
LABEL_13:
        __src = (char *)sub_22ABDFB9C();
        __break(1u);
        return __src;
      }
      __src = *a3;
      if (*a3)
      {
        if (v4 >= -3 && (&__src[4 * v5] <= v3 || &v3[4 * v5] <= __src))
          return (char *)memcpy(__src, v3, 4 * v5);
        goto LABEL_13;
      }
    }
  }
  return __src;
}

char *sub_22AA3F0FC(char *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AA3EFF8(a1, a2, *(char ***)(v2 + 16));
}

uint64_t sub_22AA3F124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumTagSinglePayload;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v32 = a1;
  v11 = sub_22ABDF5D8();
  v29 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v26 = (char *)&v25 - v13;
  v14 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v19 = (char *)&v25 - v18;
  v31 = a4;
  v33 = a4;
  v34 = a5;
  v35 = a6;
  v36 = a2;
  v27 = a2;
  v28 = a3;
  v20 = v32;
  v37 = a3;
  sub_22ABDEE88();
  if (v39 != 1)
    return v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v20, a5);
  v21 = sub_22ABDEE64();
  swift_getAssociatedConformanceWitness();
  v22 = (uint64_t)v26;
  sub_22ABDF650();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v19, AssociatedTypeWitness);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v22, 1, v31);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v22, v30);
  if (EnumTagSinglePayload != 1)
  {
    __break(1u);
    return v38;
  }
  return v21;
}

uint64_t sub_22AA3F338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v8 = sub_22ABDD4F0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22ABDD964();
  sub_22ABDD4E4();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a1;
  sub_22ABDE81C();
  v12 = sub_22ABDDA0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
}

uint64_t sub_22AA3F434()
{
  return sub_22ABDD910();
}

uint64_t sub_22AA3F47C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  _QWORD v18[2];

  v5 = *a3;
  v6 = a3[1];
  v7 = (a2 - a1) / 4;
  if (!a1)
    v7 = 0;
  v18[0] = a1;
  v18[1] = v7;
  MEMORY[0x24BDAC7A8](a1);
  v17[2] = v8;
  v17[3] = v9;
  v17[4] = v10;
  v17[5] = v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B127A0);
  v12 = sub_22AA4063C();
  v18[0] = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA40608, (uint64_t)v17, v11, a4, MEMORY[0x24BEE4078], v12, MEMORY[0x24BEE40A8], v13);
  v14 = sub_22ABDF0F8();
  v15 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v14);
  sub_22AA3F124((uint64_t)v18, v5, v6, a4, v14, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA3F598@<X0>(void (*a1)(char *, uint64_t)@<X0>, void (*a2)(char *, uint64_t)@<X1>, void (*a3)(char *, uint64_t)@<X2>, void (*a4)(char *, uint64_t)@<X3>, void (*a5)(char *, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t);
  uint64_t v53;

  v50 = a6;
  v42 = *((_QWORD *)a3 - 1);
  MEMORY[0x24BDAC7A8](a1);
  v43 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v45 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v46 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v44 = (char *)&v38 - v13;
  v51 = a2;
  v52 = a4;
  v14 = sub_22ABDE8A0();
  v48 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v41 = (char *)&v38 - v15;
  v16 = sub_22ABDF5D8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v38 - v21;
  v47 = a5;
  v49 = a1;
  sub_22ABDF404();
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    v53 = sub_22ABDF068();
    v23 = sub_22ABDF0F8();
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v23);
    return sub_22ABDE864();
  }
  else
  {
    v39 = v17;
    v40 = v16;
    v25 = sub_22ABDE84C();
    v38 = *(void (**)(char *, uint64_t))(v48 + 8);
    v38(v22, v14);
    (*(void (**)(char *, void (*)(char *, uint64_t), void (*)(char *, uint64_t)))(v42 + 16))(v43, v49, a3);
    v26 = v44;
    v27 = v47;
    v28 = sub_22ABDF44C();
    MEMORY[0x24BDAC7A8](v28);
    *(&v38 - 6) = v51;
    *(&v38 - 5) = a3;
    *(&v38 - 4) = v52;
    *(&v38 - 3) = v27;
    *(&v38 - 2) = (void (*)(char *, uint64_t))v25;
    v29 = v46;
    swift_getAssociatedConformanceWitness();
    sub_22ABDEF00();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v29);
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v14) == 1)
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      v30 = (void (*)(char *, uint64_t))v25;
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_22ABE8E30;
      v32 = v49;
      *(_QWORD *)(v31 + 32) = sub_22ABDF35C();
      v53 = v31;
      sub_22ABDEAEC();
      sub_22A9A063C();
      MEMORY[0x24BDAC7A8](v53);
      v33 = v52;
      *(&v38 - 6) = v51;
      *(&v38 - 5) = a3;
      *(&v38 - 4) = v33;
      *(&v38 - 3) = v27;
      *(&v38 - 2) = v30;
      *(&v38 - 1) = v32;
      sub_22ABDE81C();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v34 = v41;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v41, v19, v14);
      v35 = sub_22ABDE84C();
      sub_22A9B7B50();
      v36 = swift_allocError();
      *(_QWORD *)v37 = v35;
      *(_QWORD *)(v37 + 8) = 0xD00000000000002BLL;
      *(_QWORD *)(v37 + 16) = 0x800000022ABE3490;
      *(_QWORD *)(v37 + 24) = 0;
      *(_BYTE *)(v37 + 32) = 6;
      swift_willThrow(v36);
      return ((uint64_t (*)(char *, uint64_t))v38)(v34, v14);
    }
  }
}

BOOL sub_22AA3FA24(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;

  sub_22ABDE8A0();
  v3 = (_QWORD *)sub_22ABDE84C();
  LOBYTE(a2) = sub_22A99EB90(v3, a2);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

uint64_t sub_22AA3FA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t AssociatedTypeWitness;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t AssociatedConformanceWitness;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a4;
  v38 = a2;
  v39 = a1;
  v36 = a7;
  v11 = sub_22ABDE8A0();
  v43 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v34 - v12;
  v14 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v34 - v15;
  v41 = *(char **)(a6 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a8;
  AssociatedConformanceWitness = *(_QWORD *)(a8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v34[0] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v23 = (char *)v34 - v22;
  (*((void (**)(char *, uint64_t, uint64_t, double))v41 + 2))(v19, v42, a6, v21);
  v41 = v23;
  sub_22ABDEE58();
  v35 = a6;
  v42 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v24 = 0;
  v34[1] = MEMORY[0x24BEE4AE0] + 8;
  while (1)
  {
    sub_22ABDF650();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v11) == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v34[0] + 8))(v41, v42);
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v13, v16, v11);
    result = sub_22ABDED08();
    if (!result)
      goto LABEL_10;
    if (!*(_QWORD *)(v38 + 16))
      break;
    v26 = *(_QWORD *)(v38 + 32);
    v27 = sub_22ABDF62C();
    v28 = MEMORY[0x24BDAC7A8](v27);
    v29 = v35;
    v34[-6] = a5;
    v34[-5] = v29;
    v30 = v37;
    v34[-4] = v36;
    v34[-3] = v30;
    v34[-2] = v31;
    v34[-1] = v32;
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v11, v28);
    sub_22ABA855C();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v11);
    v33 = __OFADD__(v24, v26);
    v24 += v26;
    if (v33)
    {
      __break(1u);
      return (*(uint64_t (**)(char *, uint64_t))(v34[0] + 8))(v41, v42);
    }
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_22AA3FD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  v6 = type metadata accessor for ScalarSequence(0, a4, a6, a4);
  MEMORY[0x22E2E4D80](&unk_22AC00400, v6);
  sub_22ABDF5F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA3FE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  a5(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA3FECC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  v7 = *a1;
  v8 = a1[1];
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  a4(v7, v8, a2, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA3FF54()
{
  return sub_22AA3FF70();
}

uint64_t sub_22AA3FF70()
{
  OUTLINED_FUNCTION_0_35();
  return sub_22ABDE8F4();
}

uint64_t sub_22AA3FFA4(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t (*a5)(uint64_t *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  uint64_t (*v23)(uint64_t *);

  if (a3[2] != 2)
    goto LABEL_15;
  if (a4[2] < 2uLL)
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_15;
  }
  v6 = a3[4];
  v7 = a3[5];
  v8 = a4[5];
  v23 = a5;
  if (v8 == 1)
  {
    swift_getAssociatedTypeWitness();
    v9 = sub_22ABDED08();
    if (v9)
    {
      v10 = a4[4];
      v11 = v6;
      v12 = v7;
      v13 = 0;
LABEL_9:
      UnsafeMatrixPointer.init(start:rowCount:columnCount:leadingDimension:layout:)(v9, v11, v12, v10, v13, (uint64_t)&v15);
      v19 = v15;
      v20 = v16;
      v21 = v17;
      v22 = v18;
      return v23(&v19);
    }
    goto LABEL_11;
  }
  if (a4[4] == 1)
  {
    swift_getAssociatedTypeWitness();
    v9 = sub_22ABDED08();
    if (v9)
    {
      v11 = v6;
      v12 = v7;
      v10 = v8;
      v13 = 1;
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  v19 = 0x73656469727453;
  *(_QWORD *)&v20 = 0xE700000000000000;
  MEMORY[0x22E2E3298](a4, MEMORY[0x24BEE1768]);
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
LABEL_15:
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

uint64_t sub_22AA40204()
{
  OUTLINED_FUNCTION_0_35();
  sub_22ABDF5D8();
  return sub_22ABDE8F4();
}

uint64_t sub_22AA40270@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t result;

  if (*(_QWORD *)(a1 + 16) != 1)
    goto LABEL_9;
  swift_getAssociatedTypeWitness();
  if (!sub_22ABDED08())
  {
LABEL_8:
    __break(1u);
LABEL_9:
    result = sub_22ABDFADC();
    __break(1u);
    return result;
  }
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = UnsafeVectorPointer.init(start:count:stride:)();
  result = a3(v9);
  if (!v5)
    return __swift_storeEnumTagSinglePayload(a5, 0, 1, a4);
  return result;
}

uint64_t sub_22AA403AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
    return 0;
  result = 0;
  v6 = (uint64_t *)(a1 + 32);
  v7 = (uint64_t *)(a2 + 32);
  v8 = v3 - 1;
  v9 = v2 - 1;
  while (1)
  {
    v11 = *v6++;
    v10 = v11;
    v12 = v8;
    v13 = *v7++;
    v14 = v10 * v13;
    if ((unsigned __int128)(v10 * (__int128)v13) >> 64 != (v10 * v13) >> 63)
      break;
    v15 = __OFADD__(result, v14);
    result += v14;
    if (v15)
      goto LABEL_11;
    if (v9)
    {
      v8 = v12 - 1;
      --v9;
      if (v12)
        continue;
    }
    return result;
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_22AA4041C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;

  v8 = sub_22AA403AC(a1, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a5, a2 + *(_QWORD *)(*(_QWORD *)(a4 - 8) + 72) * v8, a4);
}

uint64_t sub_22AA40468@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  if (!result)
  {
    v6 = 0;
    goto LABEL_7;
  }
  v6 = a2;
  if (!a2)
  {
LABEL_7:
    *a5 = v6;
    return result;
  }
  if (a4 >= a2)
  {
    if (a3)
      result = sub_22ABDF584();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

BOOL sub_22AA404C8(uint64_t a1)
{
  uint64_t v1;

  return sub_22AA3FA24(a1, *(_QWORD **)(v1 + 48));
}

uint64_t sub_22AA404EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_22AA3FA88(a1, a2, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_22AA4050C(uint64_t a1)
{
  uint64_t *v1;

  return sub_22AA3FD7C(a1, v1[6], v1[7], v1[2], v1[3], v1[4]);
}

uint64_t sub_22AA4052C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA40270);
}

uint64_t sub_22AA40548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA3FFA4);
}

uint64_t sub_22AA40564(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_22AA3FECC(a1, a2, a3, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 40));
}

uint64_t sub_22AA40584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA3FE40);
}

uint64_t sub_22AA405A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v5;

  return a5(a1, a2, a3, a4, v5[5], v5[6], v5[2], v5[3], v5[4]);
}

uint64_t sub_22AA405D0()
{
  return sub_22AA3F434();
}

uint64_t sub_22AA405EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AA3F47C(a1, a2, *(uint64_t **)(v2 + 40), *(_QWORD *)(v2 + 16));
}

uint64_t sub_22AA40608()
{
  return sub_22ABDEA8C();
}

unint64_t sub_22AA4063C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B127A8[0];
  if (!qword_255B127A8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B127A0);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE09E8], v1);
    atomic_store(result, qword_255B127A8);
  }
  return result;
}

uint64_t sub_22AA40680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_22AA40468(a1, a2, *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), a3);
}

uint64_t sub_22AA406A0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA406C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AA40704(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_22AA40770(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for UnsafeShapedArrayPointer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeShapedArrayPointer);
}

void sub_22AA407D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2, v1);
  type metadata accessor for ComposedUpdatableTabularEstimator();
}

uint64_t sub_22AA4081C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void sub_22AA40850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;

  OUTLINED_FUNCTION_70();
  v5 = type metadata accessor for TabularTransformerToUpdatableEstimatorAdaptor(0, v3, v4, v3);
  OUTLINED_FUNCTION_10_1();
  v7 = MEMORY[0x24BDAC7A8](v6);
  TabularTransformerToUpdatableEstimatorAdaptor.init(_:)(v2, v1, v0, v7);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TabularTransformerToUpdatableEstimatorAdaptor<A>, v5);
  sub_22AA407D4();
}

void sub_22AA408EC()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA408F8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = a1[5];
  v14 = *(_QWORD *)(v3 + 8);
  v15 = a2;
  v13 = a1[3];
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v4);
  v5 = a1[4];
  v6 = a1[2];
  v7 = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_10_1();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v12 - v10;
  (*(void (**)(uint64_t, uint64_t, double))(v5 + 16))(v6, v5, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v13, v3);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_85();
  ComposedTabularTransformer.init(_:_:)((uint64_t)v11, v7, v15);
}

void sub_22AA40A2C()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA40A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = *(_QWORD *)(a5[5] + 8);
  v6[9] = a5[3];
  v11 = OUTLINED_FUNCTION_32_0();
  v6[10] = v11;
  v6[11] = *(_QWORD *)(v11 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  v12 = sub_22ABDD2EC();
  v6[14] = v12;
  v6[15] = *(_QWORD *)(v12 - 8);
  v6[16] = OUTLINED_FUNCTION_0_0();
  v13 = *(_QWORD *)(a5[4] + 8);
  v6[17] = v13;
  v14 = a5[2];
  v6[18] = v14;
  v15 = OUTLINED_FUNCTION_32_0();
  v6[19] = v15;
  v6[20] = *(_QWORD *)(v15 - 8);
  v6[21] = swift_task_alloc();
  v16 = swift_task_alloc();
  v6[22] = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v6[23] = v17;
  *v17 = v6;
  v17[1] = sub_22AA40BA0;
  return v19(v16, a2, a3, a4, v14, v13);
}

uint64_t sub_22AA40BA0()
{
  OUTLINED_FUNCTION_7_42();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA40BDC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(void);

  v1 = v0[24];
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_30_0(v0[20]);
    OUTLINED_FUNCTION_23_27();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_6_46(v2);
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[25] = AssociatedConformanceWitness;
    v5 = *(_QWORD *)(AssociatedConformanceWitness + 8);
    v6 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    v0[26] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = sub_22AA40C98;
    return OUTLINED_FUNCTION_5_34(v0[16], v0[3], v0[4], v0[5], v0[19], v5, v7);
  }
}

uint64_t sub_22AA40C98()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 216) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA40CE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v5;
  uint64_t (*v6)(void);

  v1 = v0[27];
  sub_22ABDF1DC();
  if (v1)
  {
    v2 = v0[20];
    OUTLINED_FUNCTION_30_0(v0[15]);
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    OUTLINED_FUNCTION_23_27();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_6_46(v3);
  }
  else
  {
    v5 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    v0[28] = (uint64_t)v5;
    *v5 = v0;
    v5[1] = sub_22AA40D98;
    return OUTLINED_FUNCTION_5_34(v0[13], v0[16], v0[4], v0[5], v0[9], v0[8], v6);
  }
}

uint64_t sub_22AA40D98()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AA40DE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[21];
  v2 = v0[22];
  v4 = v0[19];
  v3 = v0[20];
  v5 = v0[12];
  v6 = v0[13];
  v8 = v0[10];
  v7 = v0[11];
  v9 = v0[2];
  OUTLINED_FUNCTION_30_0(v0[15]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v6, v8);
  swift_getAssociatedConformanceWitness();
  ComposedTabularTransformer.init(_:_:)(v1, v4, v9);
}

uint64_t sub_22AA40EA4()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_13_3();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA40EEC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_28();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA40F34()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 160));
  OUTLINED_FUNCTION_10_28();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA40F88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 120));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_10_28();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA40FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v6[10] = a5;
  v6[11] = v5;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v12 = sub_22ABDD2EC();
  v6[12] = v12;
  v6[13] = *(_QWORD *)(v12 - 8);
  v6[14] = OUTLINED_FUNCTION_0_0();
  v13 = *(_QWORD *)(a5 + 32);
  v6[15] = v13;
  v14 = *(int **)(v13 + 24);
  v15 = *(_QWORD *)(a5 + 16);
  v6[16] = v15;
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  v16 = (_QWORD *)swift_task_alloc();
  v6[17] = v16;
  *v16 = v6;
  v16[1] = sub_22AA410BC;
  return v18(a1, a2, a3, a4, v15, v13);
}

uint64_t sub_22AA410BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
}

uint64_t sub_22AA4112C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  int *v9;

  v1 = v0[18];
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_39_4();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_10(v2);
  }
  else
  {
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[19] = AssociatedConformanceWitness;
    v5 = *(_QWORD *)(AssociatedConformanceWitness + 8);
    v6 = *(int **)(v5 + 24);
    v7 = swift_checkMetadataState();
    v0[20] = v7;
    v9 = (int *)((char *)v6 + *v6);
    v8 = (_QWORD *)swift_task_alloc();
    v0[21] = v8;
    *v8 = v0;
    v8[1] = sub_22AA41234;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))v9)(v0[14], v0[7], v0[8], v0[9], v7, v5);
  }
}

uint64_t sub_22AA41234()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA41284()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  v1 = v0[22];
  sub_22ABDF1DC();
  if (!v1)
  {
    v5 = v0[19];
    v4 = v0[20];
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[2] = v4;
    v0[3] = AssociatedTypeWitness;
    v0[4] = v5;
    v0[5] = AssociatedConformanceWitness;
    type metadata accessor for ComposedTabularTransformer();
  }
  OUTLINED_FUNCTION_30_0(v0[13]);
  OUTLINED_FUNCTION_39_4();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return v2();
}

uint64_t sub_22AA41364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v5 = v4 + *(int *)(a1 + 52);
  v6 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v3[23] = v6;
  *v6 = v3;
  v6[1] = sub_22AA413C0;
  return v8(v5, v3[14], v3[8], v3[9], v2, v1);
}

uint64_t sub_22AA413C0()
{
  OUTLINED_FUNCTION_7_42();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA413FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_39_4();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA41430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 32) + 8) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTabularTransformer();
  }
  return result;
}

void sub_22AA41584(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = *(_QWORD *)(a2 + 24);
  v27 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8);
  v6 = OUTLINED_FUNCTION_32_0();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87();
  v24 = v7;
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_75(v9, v10, v11, v12, v13, v14, v15, v16, v20);
  v17 = OUTLINED_FUNCTION_32_0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v27 + 40))(a1, v26);
    (*(void (**)(uint64_t, void *, uint64_t))(v18 + 32))(v4, &protocol requirements base descriptor for TabularEstimator, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v24, v25, v22);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_80();
    ComposedTabularTransformer.init(_:_:)(v4, v17, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA41764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTabularTransformer();
  }
  return result;
}

void sub_22AA418BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(a2 + 40);
  v26 = *(_QWORD *)(a2 + 24);
  v20 = OUTLINED_FUNCTION_32_0();
  v23 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_87();
  v22 = v6;
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_75(v8, v9, v10, v11, v12, v13, v14, v15, v19);
  v16 = OUTLINED_FUNCTION_32_0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 40))(a1, v26);
    (*(void (**)(uint64_t, void *, uint64_t))(v17 + 32))(v4, &protocol requirements base descriptor for TabularEstimator, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v24, v20);
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_86();
    ComposedTabularTransformer.init(_:_:)(v4, v16, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA41AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9B72C0;
  return sub_22AA40FEC(a1, a2, a3, a4, a5);
}

uint64_t sub_22AA41B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA41764(a1, a2, a3);
}

void sub_22AA41B34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22AA418BC(a1, a2, a3);
}

uint64_t sub_22AA41B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9B785C;
  return sub_22AA40A38(a1, a2, a3, a4, a5);
}

uint64_t sub_22AA41BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA41430(a1, a2, a3);
}

void sub_22AA41BDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22AA41584(a1, a2, a3);
}

void UpdatableTabularEstimator.appending<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22A9B7338(a1, a2, a3, a4, a5, (void (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA40850);
}

{
  sub_22A9B7338(a1, a2, a3, a4, a5, (void (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA407D4);
}

void sub_22AA41C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for TabularTransformerToUpdatableEstimatorAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TabularTransformerToUpdatableEstimatorAdaptor<A>, v4);
  type metadata accessor for ComposedUpdatableTabularEstimator();
}

uint64_t sub_22AA41C54(uint64_t a1)
{
  return MEMORY[0x22E2E4D80](&unk_22ABF0864, a1);
}

void type metadata accessor for ComposedUpdatableTabularEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA41C84()
{
  type metadata accessor for ComposedUpdatableTabularEstimator();
}

uint64_t sub_22AA41CA4(uint64_t a1)
{
  return MEMORY[0x22E2E4D80](&unk_22ABF0864, a1);
}

uint64_t sub_22AA41CC0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA41D9C + 4 * byte_22ABF0800[v21 - 1]))();
}

void sub_22AA41E10(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_22AA42004(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&unk_22ABF0848);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_6_46(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_7_42()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 192) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_10_28()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_23_27()
{
  return swift_task_dealloc();
}

uint64_t PreprocessingUpdatableTemporalEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingUpdatableTemporalEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableTemporalEstimator.preprocessor.modify())()
{
  return nullsub_1;
}

uint64_t PreprocessingUpdatableTemporalEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingUpdatableTemporalEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableTemporalEstimator.estimator.modify())()
{
  return nullsub_1;
}

void PreprocessingUpdatableTemporalEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingUpdatableTemporalEstimator();
}

uint64_t sub_22AA42164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for PreprocessingUpdatableTemporalEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t PreprocessingUpdatableTemporalEstimator.preprocessed<A>(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[10] = a7;
  v8[11] = v7;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a2;
  v8[7] = a3;
  v8[5] = a1;
  v11 = *(_QWORD *)(a4 + 16);
  v8[12] = v11;
  v8[13] = *(_QWORD *)(v11 - 8);
  v8[14] = OUTLINED_FUNCTION_0_0();
  v8[15] = *(_QWORD *)(a4 + 32);
  v12 = OUTLINED_FUNCTION_65_2();
  v13 = OUTLINED_FUNCTION_16_30(v12);
  v8[19] = OUTLINED_FUNCTION_50_12(v13);
  v14 = OUTLINED_FUNCTION_29_20();
  v8[20] = v14;
  v8[21] = *(_QWORD *)(v14 - 8);
  v8[22] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v8[23] = OUTLINED_FUNCTION_0_0();
  v8[24] = *(_QWORD *)(a5 - 8);
  v8[25] = OUTLINED_FUNCTION_0_0();
  v15 = OUTLINED_FUNCTION_29_20();
  v8[26] = v15;
  v8[27] = *(_QWORD *)(v15 - 8);
  v8[28] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA422A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t (*v12)(void);

  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 232) = AssociatedTypeWitness;
  *(_QWORD *)(v0 + 240) = type metadata accessor for PreprocessedFeatureSequence(0, AssociatedTypeWitness, v6, v7);
  *(_QWORD *)(v0 + 16) = sub_22ABDE9F0();
  OUTLINED_FUNCTION_27_8(v2, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_22ABDEE58();
  v8 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 160);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
  {
    OUTLINED_FUNCTION_15_30();
    OUTLINED_FUNCTION_46_13();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    return OUTLINED_FUNCTION_8_31(v1, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_18_31();
    OUTLINED_FUNCTION_33_19();
    v11 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_13_39(v11);
    return OUTLINED_FUNCTION_10_29(v12);
  }
}

uint64_t sub_22AA423F0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v9;

  v9 = (_QWORD *)*v1;
  v2 = v9;
  OUTLINED_FUNCTION_69(&v9);
  v2[32] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_30_0(v2[13]);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
  else
  {
    v5 = v2[18];
    v4 = v2[19];
    v6 = v2[17];
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
    OUTLINED_FUNCTION_27_8(v5, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    v7 = (_QWORD *)swift_task_alloc();
    v2[33] = v7;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *v7 = v1;
    v7[1] = sub_22AA42510;
    return PreprocessedFeatureSequence.init<A>(_:)((uint64_t)(v2 + 3), v2[18], v2[29], v2[16], AssociatedConformanceWitness);
  }
}

uint64_t sub_22AA42510()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_69(&v4);
  *(_QWORD *)(v2 + 272) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA42570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v9)(void);

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  sub_22ABDF0F8();
  sub_22ABDF0C8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    OUTLINED_FUNCTION_15_30();
    OUTLINED_FUNCTION_46_13();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    return OUTLINED_FUNCTION_8_31(v4, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_18_31();
    OUTLINED_FUNCTION_33_19();
    v8 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_13_39(v8);
    return OUTLINED_FUNCTION_10_29(v9);
  }
}

uint64_t sub_22AA42690()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 216);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 168));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_23_28();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_12_35(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA426F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 168);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 136));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_23_28();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_12_35(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableTemporalEstimator.fitted(toPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v8 = a5[2];
  v6[9] = v8;
  v6[10] = *(_QWORD *)(v8 - 8);
  v6[11] = OUTLINED_FUNCTION_0_0();
  v9 = a5[3];
  v6[12] = v9;
  v6[13] = *(_QWORD *)(v9 - 8);
  v6[14] = OUTLINED_FUNCTION_0_0();
  v6[15] = *(_QWORD *)(a5[5] + 8);
  v10 = OUTLINED_FUNCTION_65_2();
  v11 = OUTLINED_FUNCTION_16_30(v10);
  v6[19] = OUTLINED_FUNCTION_50_12(v11);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA42804()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[7];
  v2 = v0[4];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[13] + 16))(v0[14], v0[8] + *(int *)(v1 + 52), v0[12]);
  v0[2] = v2;
  v3 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v0[20] = v3;
  v0[21] = *(_QWORD *)(v1 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = OUTLINED_FUNCTION_34_6(AssociatedTypeWitness, v5, v6, v7);
  v9 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v9);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>, v8);
  *v3 = v0;
  v3[1] = sub_22AA42910;
  __asm { BR              X8 }
}

uint64_t sub_22AA42910()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_17_1();
  v4 = v2[13];
  v3 = v2[14];
  *v5 = *v1;
  v2[22] = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87_4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA42980()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  v4 = v0[11];
  v5 = v0[9];
  v6 = v0[3];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[10] + 16))(v4, v0[8], v5);
  OUTLINED_FUNCTION_27_8(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v4, v5, v6);
}

uint64_t sub_22AA42A28()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_21_31(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA42A60()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableTemporalEstimator.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_26_21();
  v1[5] = v2;
  v1[6] = v0;
  v1[3] = v3;
  v1[4] = v4;
  v1[2] = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v1[7] = v6;
  v7 = OUTLINED_FUNCTION_14_33(v6, (uint64_t)sub_22AA42B00);
  return OUTLINED_FUNCTION_11_39(v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_22AA42B00(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA42B60()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 72);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_72_0();
    return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_22AA42BE4;
    return PreprocessingUpdatableTemporalEstimator.fitted(toPreprocessed:eventHandler:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
  }
}

uint64_t sub_22AA42BE4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA42C34()
{
  uint64_t v0;

  OUTLINED_FUNCTION_72_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingUpdatableTemporalEstimator.makeTransformer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_4_4();
  v2 = v1;
  v4 = v3;
  v19 = v5;
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 40);
  v18 = *(_QWORD *)(v11 + 8);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v12);
  v13 = *(_QWORD *)(v4 + 16);
  MEMORY[0x24BDAC7A8](v14);
  v16 = OUTLINED_FUNCTION_27_23(v15, v18);
  OUTLINED_FUNCTION_27_8((uint64_t)v16, v2, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + *(int *)(v4 + 52), v6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v6, v11);
  OUTLINED_FUNCTION_87_4((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v0, v13, v19);
}

void sub_22AA42D9C()
{
  OUTLINED_FUNCTION_3();
}

uint64_t PreprocessingUpdatableTemporalEstimator.update<A>(_:withPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v9[13] = a8;
  v9[14] = v8;
  v9[11] = a6;
  v9[12] = a7;
  v9[9] = a4;
  v9[10] = a5;
  v9[7] = a2;
  v9[8] = a3;
  v9[6] = a1;
  v10 = *(_QWORD *)(a5 + 24);
  v9[15] = v10;
  v9[16] = *(_QWORD *)(v10 - 8);
  v9[17] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AA42DFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;

  v1 = v0[10];
  OUTLINED_FUNCTION_24_11(v0[17], v0[14] + *(int *)(v1 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[16] + 16));
  v2 = *(_QWORD *)(v1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(v1 + 32);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[2] = v2;
  v0[3] = AssociatedTypeWitness;
  v0[4] = v4;
  OUTLINED_FUNCTION_71_0(AssociatedConformanceWitness);
}

uint64_t sub_22AA42EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v13 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  *(_QWORD *)(v10 + 144) = v13;
  *v13 = v10;
  v13[1] = sub_22AA42F00;
  *(_QWORD *)(v12 + 16) = v11;
  return OUTLINED_FUNCTION_22_28(a10);
}

uint64_t sub_22AA42F00()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v2 = *(_QWORD **)v1;
  v6 = v2;
  v3 = v2[17];
  v4 = v2[16];
  OUTLINED_FUNCTION_69(&v6);
  v2[19] = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87_4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_22AA42F94()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableTemporalEstimator.update<A>(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_26_21();
  v1[10] = v2;
  v1[11] = v0;
  v1[8] = v3;
  v1[9] = v4;
  v1[7] = v5;
  v6 = *(_QWORD *)(v2 + 24);
  v1[12] = v6;
  v1[13] = *(_QWORD *)(v6 - 8);
  v1[14] = OUTLINED_FUNCTION_0_0();
  v7 = (_QWORD *)swift_task_alloc();
  v1[15] = v7;
  v8 = OUTLINED_FUNCTION_14_33(v7, (uint64_t)sub_22AA4302C);
  return OUTLINED_FUNCTION_11_39(v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_22AA4302C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
}

uint64_t sub_22AA430A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;

  v1 = *(_QWORD *)(v0 + 136);
  sub_22ABDF1DC();
  if (!v1)
  {
    v3 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88) + *(int *)(v4 + 52), *(_QWORD *)(v0 + 96));
    *(_QWORD *)(v0 + 48) = v3;
    v5 = *(_QWORD *)(v4 + 16);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v7 = *(_QWORD *)(v4 + 32);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v0 + 16) = v5;
    *(_QWORD *)(v0 + 24) = AssociatedTypeWitness;
    *(_QWORD *)(v0 + 32) = v7;
    OUTLINED_FUNCTION_71_0(AssociatedConformanceWitness);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_21_31(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA43198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(void);

  v11 = (uint64_t (*)(void))(**(int **)(v1 + 24) + *(_QWORD *)(v1 + 24));
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = OUTLINED_FUNCTION_34_6(AssociatedTypeWitness, v5, v6, v7);
  v9 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v9);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>, v8);
  *v3 = v0;
  v3[1] = sub_22AA43270;
  *(_QWORD *)(v2 + 16) = v1;
  return OUTLINED_FUNCTION_22_28(v11);
}

uint64_t sub_22AA43270()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  v4 = *(_QWORD **)v1;
  v2 = v4;
  OUTLINED_FUNCTION_69(&v4);
  v2[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_30_0(v2[13]);
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_3();
    return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v1 + 8));
  }
}

void PreprocessingUpdatableTemporalEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t sub_22AA433A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

void PreprocessingUpdatableTemporalEstimator.decode(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v11 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_33();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v4, v10);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_40_4(v11, a3);
  }
  OUTLINED_FUNCTION_16();
}

void PreprocessingUpdatableTemporalEstimator.encodeWithOptimizer(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t sub_22AA43594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32))(v1 + *(int *)(a1 + 52), v5, v3, v2);
}

void PreprocessingUpdatableTemporalEstimator.decodeWithOptimizer(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v9 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_33();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v4, v11);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_40_4(v9, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA436EC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B72C0;
  return PreprocessingUpdatableTemporalEstimator.update<A>(_:with:eventHandler:)();
}

void sub_22AA43790()
{
  PreprocessingUpdatableTemporalEstimator.encodeWithOptimizer(_:to:)();
}

void sub_22AA437A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableTemporalEstimator.decodeWithOptimizer(from:)(a1, a2, a3);
}

uint64_t sub_22AA437B8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B785C;
  return PreprocessingUpdatableTemporalEstimator.fitted<A>(to:eventHandler:)();
}

void sub_22AA43860()
{
  PreprocessingUpdatableTemporalEstimator.encode(_:to:)();
}

void sub_22AA43874(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableTemporalEstimator.decode(from:)(a1, a2, a3);
}

void sub_22AA43990()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA43A8C()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA43B40()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA43B4C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessingUpdatableTemporalEstimator<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AA43B78(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA43C54 + 4 * byte_22ABF0880[v21 - 1]))();
}

void sub_22AA43CC8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_4_33()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0 + 40))(*(_QWORD *)(v2 - 88), v1, v0);
}

uint64_t OUTLINED_FUNCTION_8_31(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_10_29@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_11_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return PreprocessingUpdatableTemporalEstimator.preprocessed<A>(from:eventHandler:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_12_35(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_13_39(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 248) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 152);
}

uint64_t OUTLINED_FUNCTION_14_33@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_15_30()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[27] + 8))(v0[28], v0[26]);
}

uint64_t OUTLINED_FUNCTION_16_30(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  *(_QWORD *)(v1 + 136) = *(_QWORD *)(a1 - 8);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_18_31()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[21] + 32))(v0[22], v0[23], v0[20]);
}

uint64_t OUTLINED_FUNCTION_21_31(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_22_28@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_23_28()
{
  return swift_task_dealloc();
}

char *OUTLINED_FUNCTION_27_23@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_29_20()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_33_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_46_13()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_48_14@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_50_12(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = a1;
  return swift_task_alloc();
}

void sub_22AA440C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  LinearTimeSeriesForecaster.encode(_:to:)(a1, a2, a3);
}

void LinearTimeSeriesForecaster.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_0_36(a1, a2, a3);
  sub_22AA49058();
}

void sub_22AA44118()
{
  LinearTimeSeriesForecaster.decode(from:)();
}

void LinearTimeSeriesForecaster.decode(from:)()
{
  sub_22AA492FC();
}

void LinearTimeSeriesForecaster.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_0_36(a1, a2, a3);
  sub_22AA49058();
  if (!v3)
    sub_22AA49650(a2, v5);
}

void LinearTimeSeriesForecaster.decodeWithOptimizer(from:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  sub_22AA492FC();
  if (!v2)
  {
    v7 = (uint64_t *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v4, v5, v6);
    sub_22AA4967C(a1, v7);
  }
}

void sub_22AA44238(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  LinearTimeSeriesForecaster.encodeWithOptimizer(_:to:)(a1, a2, a3);
}

void sub_22AA4424C(uint64_t a1, _QWORD *a2)
{
  LinearTimeSeriesForecaster.decodeWithOptimizer(from:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_0_36(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return type metadata accessor for LinearTimeSeriesForecaster.Model(0, a3[2], a3[3], a3[4]);
}

uint64_t UpsampledAugmentationSequence.transformer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2);
}

void sub_22AA4428C()
{
  type metadata accessor for UpsampledAugmentationSequence();
}

uint64_t sub_22AA442EC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v7 + a1[19], v6, v2);
  *(_QWORD *)(v7 + a1[20]) = v5;
  result = OUTLINED_FUNCTION_38_8(v7, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
  *(_QWORD *)(v7 + a1[21]) = v3;
  return result;
}

void UpsampledAugmentationSequence.makeAsyncIterator()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  MEMORY[0x24BDAC7A8](a1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + *(int *)(v9 + 76), v6, v7);
  OUTLINED_FUNCTION_38_8((uint64_t)v4, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  swift_retain();
  sub_22AA44454();
}

void sub_22AA44444()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA44454()
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  type metadata accessor for UpsampledAugmentationSequence.AsyncIterator();
}

void sub_22AA44510(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v2 + a1[23]) = 0;
  *(_QWORD *)(v2 + a1[24]) = 1;
  v9 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v7 - 168) = v9;
  OUTLINED_FUNCTION_38_8(v2, *(_QWORD *)(v7 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  *(_QWORD *)(v2 + a1[19]) = *(_QWORD *)(v7 - 192);
  v10 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16))(v2 + a1[20], *(_QWORD *)(v7 - 144), v3);
  *(_QWORD *)(v2 + a1[21]) = v5;
  swift_retain();
  sub_22ABDF374();
  OUTLINED_FUNCTION_5_1();
  swift_getAssociatedConformanceWitness();
  v11 = sub_22ABDEF3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 160) + 8))(v4, v6);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_48_2(*(_QWORD *)(v7 - 144), *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v7 - 168) + 8))(*(_QWORD *)(v7 - 152), v1);
  *(_QWORD *)(v2 + a1[22]) = v11;
  OUTLINED_FUNCTION_3();
}

void sub_22AA44638(uint64_t a1)
{
  UpsampledAugmentationSequence.makeAsyncIterator()(a1);
}

uint64_t sub_22AA4464C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t UpsampledAugmentationSequence.AsyncIterator.next()(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v5 = a2[5];
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = OUTLINED_FUNCTION_0_0();
  v3[18] = a2[7];
  v3[19] = a2[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[20] = AssociatedTypeWitness;
  v3[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = a2[6];
  v3[25] = a2[2];
  v7 = swift_getAssociatedTypeWitness();
  v3[26] = v7;
  v3[27] = *(_QWORD *)(v7 - 8);
  v3[28] = OUTLINED_FUNCTION_0_0();
  v9 = type metadata accessor for AnnotatedFeature(0, AssociatedTypeWitness, v5, v8);
  v3[29] = v9;
  v3[30] = *(_QWORD *)(v9 - 8);
  v3[31] = OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA44780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD);
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((sub_22ABDF380() & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 112);
    v2 = *(int *)(*(_QWORD *)(v0 + 104) + 92);
    v3 = *(_QWORD *)(v1 + v2);
    v4 = (_QWORD *)(v1 + *(int *)(*(_QWORD *)(v0 + 104) + 88));
    if (v3 >= MEMORY[0x22E2E3340](*v4, *(_QWORD *)(v0 + 208)))
    {
      v6 = *(_QWORD *)(v0 + 104);
      v5 = *(_QWORD *)(v0 + 112);
      v7 = *(int *)(v6 + 96);
      v8 = *(_QWORD *)(v5 + v7);
      if (v8 < *(_QWORD *)(v5 + *(int *)(v6 + 76)))
      {
        *(_QWORD *)(v1 + v2) = 0;
        *(_QWORD *)(v5 + v7) = v8 + 1;
        OUTLINED_FUNCTION_5_1();
        v9 = sub_22ABDF0F8();
        swift_retain();
        MEMORY[0x22E2E4D80](MEMORY[0x24BEE12B8], v9);
        MEMORY[0x22E2E4D80](MEMORY[0x24BEE12D8], v9);
        sub_22ABDECB4();
        swift_endAccess();
        swift_release();
        v3 = 0;
      }
    }
    if (v3 < MEMORY[0x22E2E3340](*v4, *(_QWORD *)(v0 + 208)))
    {
      v16 = *(_QWORD *)(v0 + 240);
      v10 = *(_QWORD *)(v0 + 224);
      v17 = *(_QWORD *)(v0 + 248);
      v11 = *(_QWORD *)(v0 + 208);
      v18 = *(_QWORD *)(v0 + 216);
      v19 = *(_QWORD *)(v0 + 144);
      v12 = *(_QWORD *)(v0 + 104);
      sub_22ABDF140();
      v13 = (void (*)(uint64_t, _QWORD))sub_22ABDF464();
      (*(void (**)(uint64_t))(v16 + 16))(v17);
      v13(v0 + 16, 0);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v10, v11);
      OUTLINED_FUNCTION_5_1();
      v20 = **(int **)(v19 + 24) + *(_QWORD *)(v19 + 24);
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v14;
      *(_QWORD *)(v0 + 264) = *(_QWORD *)(v12 + 32);
      *(_QWORD *)(v0 + 272) = *(_QWORD *)(v12 + 64);
      *v14 = v0;
      v14[1] = sub_22AA44A40;
      __asm { BR              X8 }
    }
  }
  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 96), 1, 1, *(_QWORD *)(v0 + 232));
  OUTLINED_FUNCTION_4_34();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_37(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA44A40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_endAccess();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA44AA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[30];
  v1 = v0[31];
  v3 = v0[29];
  v4 = v0[22];
  v5 = v0[20];
  v6 = v0[17];
  v8 = v0[15];
  v7 = v0[16];
  v9 = v0[12];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[21] + 32))(v4, v0[23], v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v1 + *(int *)(v3 + 36), v8);
  OUTLINED_FUNCTION_48_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  AnnotatedFeature.init(feature:annotation:)(v4, v6, v5, v8, v9);
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v3);
  sub_22AA44C94();
}

uint64_t sub_22AA44B84()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_34();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_37(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AA44BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  swift_endAccess();
  OUTLINED_FUNCTION_48_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_22AA44C94();
}

uint64_t sub_22AA44C50()
{
  uint64_t v0;

  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_37(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AA44C94()
{
  type metadata accessor for UpsampledAugmentationSequence.AsyncIterator();
}

uint64_t sub_22AA44CC4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v2 = *(int *)(result + 92);
  v3 = *(_QWORD *)(v1 + v2);
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
    __break(1u);
  else
    *(_QWORD *)(v1 + v2) = v5;
  return result;
}

void sub_22AA44CEC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA44CFC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A99DE80;
  return UpsampledAugmentationSequence.AsyncIterator.next()(a1, a2);
}

uint64_t sub_22AA44D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_22AA44DF4;
  return sub_22ABDF1A0();
}

uint64_t sub_22AA44DF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_22AA44E50()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22AA44EF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  v13 = (*(_DWORD *)(v6 + 80) | v8) & 0x100000;
  if (v12 > 7 || v13 != 0 || ((((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v5);
    v19 = (_QWORD *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)((v11 + v18) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    *(_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v4;
}

uint64_t sub_22AA4501C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v4 + 8))();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v4 + 64)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_release();
}

uint64_t sub_22AA45098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_22AA45140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22AA451F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AA45298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_22AA45344(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v20;

  v6 = a3 + 16;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v6 + 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = *(_QWORD *)(v9 + 64) + 7;
  if (v11 < a2)
  {
    if (((((((v15 + (v14 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v11 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    return ((uint64_t (*)(void))((char *)&loc_22AA453EC + 4 * byte_22ABF0920[v18]))();
  }
  if ((_DWORD)v8 == v11)
  {
    v10 = v8;
    v4 = v5;
    return __swift_getEnumTagSinglePayload(a1, v10, v4);
  }
  a1 = (v14 + a1) & ~v13;
  if ((_DWORD)v10 == v11)
    return __swift_getEnumTagSinglePayload(a1, v10, v4);
  v20 = *(_QWORD *)((((v15 + a1) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  if (v20 >= 0xFFFFFFFF)
    LODWORD(v20) = -1;
  return (v20 + 1);
}

void sub_22AA45494(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = ((((*(_QWORD *)(v6 + 64)
         + 7
         + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v7 >= a3)
  {
    v11 = 0;
  }
  else
  {
    if (((((*(_DWORD *)(v6 + 64)
           + 7
           + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v12 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_22AA455B0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v9 + v10) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v4 == v6)
    {
      v11 = v9;
      a2 = v4;
      a3 = a4;
LABEL_5:
      __swift_storeEnumTagSinglePayload(v11, a1, a2, a3);
      return;
    }
    v11 = (v8 + v9) & v5;
    if ((_DWORD)a2 == v6)
      goto LABEL_5;
    if ((a1 & 0x80000000) != 0)
      v12 = a1 ^ 0x80000000;
    else
      v12 = (a1 - 1);
    *(_QWORD *)((((v7 + v11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) = v12;
  }
}

void type metadata accessor for UpsampledAugmentationSequence()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AA45664()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22AA4566C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22AA45724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  v12 = ((((((((v11
              + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v13 = v9 | *(_DWORD *)(v6 + 80) & 0xF8;
  v14 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if (v13 > 7 || v14 != 0 || v12 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v18 = (_QWORD *)(((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v19;
    v20 = ((unint64_t)v18 + v10 + 8) & ~v10;
    v21 = ((unint64_t)v19 + v10 + 8) & ~v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v20, v21, v5);
    v22 = (_QWORD *)((v11 + v20) & 0xFFFFFFFFFFFFF8);
    v23 = (_QWORD *)((v11 + v21) & 0xFFFFFFFFFFFFF8);
    *v22 = *v23;
    v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
    *v24 = *v25;
    v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8);
    *v26 = *v27;
    *(_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    sub_22ABDEAEC();
  }
  return v4;
}

uint64_t sub_22AA458B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((((a1
                                                                                              + *(_QWORD *)(v4 + 64)
                                                                                              + 7) & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA45944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v8 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v9 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  *v19 = *v20;
  *(_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA45A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v8 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v9 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v14 + v13;
  v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v15 = *(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v18 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 &= 0xFFFFFFFFFFFFF8uLL;
  v19 = *(_QWORD *)v17;
  v17 += 15;
  *(_QWORD *)v18 = v19;
  v18 += 15;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)(((v18 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v17 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AA45B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v8 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v9 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  *v19 = *v20;
  *(_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AA45C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v8 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v9 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  swift_release();
  v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  v18 += 15;
  *(_QWORD *)v17 = v19;
  v17 += 15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v18 & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)(((v17 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v18 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AA45D00(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v6 + 64);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  if (v10 < a2)
  {
    if (((((((((((v13 + ((v12 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v14 = 2;
    else
      v14 = a2 - v10 + 1;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    return ((uint64_t (*)(void))((char *)&loc_22AA45DC4 + 4 * byte_22ABF092F[v16]))();
  }
  if ((_DWORD)v7 == v10)
  {
    v9 = v7;
    v4 = v5;
    return __swift_getEnumTagSinglePayload(a1, v9, v4);
  }
  a1 = (((a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12;
  if ((_DWORD)v9 == v10)
    return __swift_getEnumTagSinglePayload(a1, v9, v4);
  v18 = *(_QWORD *)((v13 + a1) & 0xFFFFFFFFFFFFF8);
  if (v18 >= 0xFFFFFFFF)
    LODWORD(v18) = -1;
  return (v18 + 1);
}

void sub_22AA45E74(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = ((((((((*(_QWORD *)(v6 + 64)
             + 7
             + ((*(unsigned __int8 *)(v6 + 80) + ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v7 >= a3)
  {
    v11 = 0;
  }
  else
  {
    if (((((((((*(_DWORD *)(v6 + 64)
               + 7
               + ((*(unsigned __int8 *)(v6 + 80) + ((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 8) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v12 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_22AA45FAC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v10 + v11) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v4 == v6)
    {
      v12 = v10;
      a2 = v4;
      a3 = a4;
LABEL_5:
      __swift_storeEnumTagSinglePayload(v12, a1, a2, a3);
      return;
    }
    v12 = (((v10 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v5;
    if ((_DWORD)a2 == v6)
      goto LABEL_5;
    if ((a1 & 0x80000000) != 0)
      v13 = a1 ^ 0x80000000;
    else
      v13 = (a1 - 1);
    *(_QWORD *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8) = v13;
  }
}

void type metadata accessor for UpsampledAugmentationSequence.AsyncIterator()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t OUTLINED_FUNCTION_0_37(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_4_34()
{
  return swift_task_dealloc();
}

ValueMetadata *_s7StorageVMa_0()
{
  return &_s7StorageVN_0;
}

id sub_22AA46098()
{
  return sub_22AA460B0((Class *)0x24BDBCED8);
}

id sub_22AA460A4()
{
  return sub_22AA460B0((Class *)0x24BDBCEB8);
}

id sub_22AA460B0(Class *a1)
{
  _QWORD *v1;
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(*a1), sel_init);
  MEMORY[0x22E2E3268]();
  sub_22AA93C3C(*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_22ABDF0A4();
  sub_22ABDF014();
  return v2;
}

void sub_22AA46118(void *a1)
{
  _QWORD *v1;
  id v2;

  v2 = a1;
  MEMORY[0x22E2E3268]();
  sub_22AA93C3C(*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_22ABDF0A4();
  sub_22ABDF014();

}

uint64_t sub_22AA4616C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v1 = sub_22ABDDA0C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - v6;
  v8 = OUTLINED_FUNCTION_9_32();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  v13 = _s14descr24F4C08F1V10DenseBlockVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v0 + *(int *)(v13 + 20), v8);
  sub_22ABDD7D8();
  sub_22ABDD7FC();
  sub_22ABDD748();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v4, v1);
  sub_22ABDD7FC();
  v14(v7, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_22AA462C4()
{
  unint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_22AA46310(char a1)
{
  if (!a1)
    return 0x79614C65736E6564;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0x65536D6F646E6172;
}

uint64_t sub_22AA46374()
{
  sub_22A99D7D4(&qword_255B0DE38, (uint64_t (*)(uint64_t))_s14descr24F4C08F1V10DenseBlockVMa, (uint64_t)&unk_22ABF0C60);
  return sub_22ABDD82C();
}

uint64_t sub_22AA463C4()
{
  sub_22A99D7D4(&qword_255B0DE38, (uint64_t (*)(uint64_t))_s14descr24F4C08F1V10DenseBlockVMa, (uint64_t)&unk_22ABF0C60);
  return sub_22ABDD844();
}

void sub_22AA4641C(unsigned __int8 *a1, char *a2)
{
  sub_22AA178D0(*a1, *a2);
}

void sub_22AA46428()
{
  char *v0;

  sub_22ABC4A64(*v0);
}

uint64_t sub_22AA46430(uint64_t a1)
{
  char *v1;

  return sub_22ABC4CBC(a1, *v1);
}

void sub_22AA46438(uint64_t a1)
{
  char *v1;

  sub_22ABC53A8(a1, *v1);
}

uint64_t sub_22AA46440@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA462C4();
  *a1 = result;
  return result;
}

uint64_t sub_22AA4646C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22AA46310(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22AA46494()
{
  char *v0;

  return sub_22AA46310(*v0);
}

uint64_t sub_22AA4649C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA4630C();
  *a1 = result;
  return result;
}

uint64_t sub_22AA464C0()
{
  sub_22AA46CD4();
  return sub_22ABE02EC();
}

uint64_t sub_22AA464E8()
{
  sub_22AA46CD4();
  return sub_22ABE02F8();
}

void sub_22AA46510(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  char v71;

  v62 = a2;
  v52 = sub_22ABDDA78();
  v55 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_0();
  v56 = v4;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v61 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_0();
  v60 = v5;
  v59 = sub_22ABDDA0C();
  v64 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_87();
  v58 = v6;
  MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v45 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_87();
  v51 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v53 = (uint64_t)&v45 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_87();
  v54 = v14;
  MEMORY[0x24BDAC7A8](v15);
  v57 = (char *)&v45 - v16;
  v17 = type metadata accessor for DenseLayerStorage();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_0();
  v67 = v19;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B12B00);
  v20 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  OUTLINED_FUNCTION_33();
  v23 = v22 - v21;
  v24 = _s14descr24F4C08F1V10DenseBlockVMa();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_3_23();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA46CD4();
  v26 = v68;
  sub_22ABE0298();
  if (v26)
  {
    v29 = (uint64_t)a1;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1(v29);
    OUTLINED_FUNCTION_12_4();
    return;
  }
  v50 = v24;
  v68 = v2;
  v27 = v65;
  v71 = 0;
  sub_22A99D7D4(&qword_255B0DE88, (uint64_t (*)(uint64_t))type metadata accessor for DenseLayerStorage, (uint64_t)&unk_22ABEA234);
  sub_22ABDFC8C();
  v70 = 1;
  sub_22ABDFC68();
  v69 = 2;
  v28 = sub_22ABDFC74();
  v48 = v23;
  v30 = *(int *)(v50 + 24);
  v47 = v28;
  *(_QWORD *)(v68 + v30) = v28;
  v31 = v67 + *(int *)(v17 + 20);
  v32 = v53;
  sub_22AA46D10(v31, v53, &qword_2540E8570);
  v49 = 1;
  v33 = v27;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v32, 1, v27);
  sub_22A9CF82C(v32, &qword_2540E8570);
  v46 = a1;
  v45 = v20;
  if (EnumTagSinglePayload == 1)
  {
    v35 = v61;
    v36 = v59;
    v37 = (uint64_t)v57;
LABEL_9:
    __swift_storeEnumTagSinglePayload(v37, v49, 1, v36);
    v41 = v67;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v60, v67, v33);
    sub_22A9A9038();
    v42 = v58;
    OUTLINED_FUNCTION_7_43();
    OUTLINED_FUNCTION_12_10();
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v63, v42, v36);
    sub_22AA46D10(v37, v54, &qword_255B0DAB8);
    v43 = v68;
    sub_22ABDD79C();
    v44 = v56;
    sub_22ABDDA60();
    sub_22A9CF82C(v37, &qword_255B0DAB8);
    sub_22A9BA024(v41);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v66);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v43 + *(int *)(v50 + 20), v44, v52);
    sub_22AA46D50(v43, v62);
    v29 = (uint64_t)v46;
    goto LABEL_4;
  }
  v38 = v31;
  v39 = v51;
  sub_22AA46D10(v38, v51, &qword_2540E8570);
  if (__swift_getEnumTagSinglePayload(v39, 1, v33) != 1)
  {
    sub_22A9A9038();
    v40 = v63;
    v36 = v59;
    OUTLINED_FUNCTION_7_43();
    v35 = v61;
    OUTLINED_FUNCTION_12_10();
    v37 = (uint64_t)v57;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v57, v40, v36);
    v49 = 0;
    goto LABEL_9;
  }
  __break(1u);
}

void sub_22AA46A6C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v6 = v5 - v4;
  sub_22ABDDA0C();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_33();
  v10 = v9 - v8;
  type metadata accessor for DenseLayerStorage();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_3_23();
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_255B12B10);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA46CD4();
  sub_22ABE02B0();
  sub_22ABDD7A8();
  sub_22ABDD784();
  sub_22A9B8EC0(v10, v6, v1);
  _s14descr24F4C08F1V10DenseBlockVMa();
  sub_22ABDDA6C();
  sub_22A99D7D4(&qword_255B0DE68, (uint64_t (*)(uint64_t))type metadata accessor for DenseLayerStorage, (uint64_t)&unk_22ABEA25C);
  sub_22ABDFD4C();
  if (!v17)
  {
    sub_22ABDFD28();
    sub_22ABDFD34();
  }
  sub_22A9BA024(v1);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  OUTLINED_FUNCTION_12_4();
}

void sub_22AA46C74(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22AA46510(a1, a2);
}

void sub_22AA46C88(_QWORD *a1)
{
  sub_22AA46A6C(a1);
}

uint64_t _s14descr24F4C08F1V10DenseBlockVMa()
{
  uint64_t result;

  result = qword_255B12B70;
  if (!qword_255B12B70)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_22AA46CD4()
{
  unint64_t result;

  result = qword_255B12B08;
  if (!qword_255B12B08)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF0C10, &_s14descr24F4C08F1V10DenseBlockV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B12B08);
  }
  return result;
}

void sub_22AA46D10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AA46D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14descr24F4C08F1V10DenseBlockVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s14descr24F4C08F1V10DenseBlockV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AA46DE0 + 4 * byte_22ABF0A3D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22AA46E14 + 4 * asc_22ABF0A38[v4]))();
}

uint64_t sub_22AA46E14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA46E1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA46E24);
  return result;
}

uint64_t sub_22AA46E30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA46E38);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22AA46E3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA46E44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr24F4C08F1V10DenseBlockV10CodingKeysOMa()
{
  return &_s14descr24F4C08F1V10DenseBlockV10CodingKeysON;
}

uint64_t *sub_22AA46E60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD7D8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22ABDDA78();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_22AA46F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_22ABDD7D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_22ABDDA78();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_22AA46F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDA78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_22AA47008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDA78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_22AA47098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDA78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_22AA47128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDA78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_22AA471B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA471C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_6_47();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_9_32();
    v8 = v4 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t sub_22AA4721C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA47228(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_6_47();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_9_32();
    v10 = v5 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t sub_22AA47288()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22ABDD7D8();
  if (v1 <= 0x3F)
  {
    result = sub_22ABDDA78();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_22AA4731C()
{
  unint64_t result;

  result = qword_255B12BB0;
  if (!qword_255B12BB0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF0BE8, &_s14descr24F4C08F1V10DenseBlockV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B12BB0);
  }
  return result;
}

unint64_t sub_22AA4735C()
{
  unint64_t result;

  result = qword_255B12BB8;
  if (!qword_255B12BB8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF0B20, &_s14descr24F4C08F1V10DenseBlockV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B12BB8);
  }
  return result;
}

unint64_t sub_22AA4739C()
{
  unint64_t result;

  result = qword_255B12BC0;
  if (!qword_255B12BC0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF0B48, &_s14descr24F4C08F1V10DenseBlockV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B12BC0);
  }
  return result;
}

void sub_22AA473D8()
{
  sub_22A99D7D4(&qword_255B12BC8, (uint64_t (*)(uint64_t))_s14descr24F4C08F1V10DenseBlockVMa, (uint64_t)&unk_22ABF0B04);
}

void sub_22AA47404()
{
  sub_22A99D7D4(&qword_255B12BD0, (uint64_t (*)(uint64_t))_s14descr24F4C08F1V10DenseBlockVMa, (uint64_t)&unk_22ABF0AD4);
}

void sub_22AA47430()
{
  sub_22A99D7D4(&qword_255B12BD8, (uint64_t (*)(uint64_t))_s14descr24F4C08F1V10DenseBlockVMa, (uint64_t)&unk_22ABF0AAC);
}

uint64_t OUTLINED_FUNCTION_6_47()
{
  return sub_22ABDD7D8();
}

uint64_t OUTLINED_FUNCTION_7_43()
{
  return sub_22ABDE8F4();
}

uint64_t OUTLINED_FUNCTION_9_32()
{
  return sub_22ABDDA78();
}

void sub_22AA47484(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_22ABDDC88();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8530);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  v20 = OUTLINED_FUNCTION_1_30(v3, v14);
  v19 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v5);
  v17 = sub_22ABDDE68();
  v18 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v16 = v7;
  sub_22AA478F8(a1);
  if (v22)
    goto LABEL_6;
  OUTLINED_FUNCTION_7_44();
  sub_22ABDE228();
  v8 = sub_22ABDE2B8();
  if (*(_QWORD *)(v8 + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v16, v8 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v17);
    swift_bridgeObjectRelease();
    sub_22ABDDE38();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v9 = OUTLINED_FUNCTION_6_48();
    sub_22AB59C58(v9, v21);
    if (__swift_getEnumTagSinglePayload(v21, 1, v20) == 1)
    {
      swift_bridgeObjectRelease();
      sub_22AA47E68(v21);
      type metadata accessor for SerializationError();
      sub_22A9D395C();
      swift_allocError();
      v11 = v10;
      sub_22ABDF7A0();
      sub_22ABDEDC8();
      OUTLINED_FUNCTION_6_48();
      type metadata accessor for MLMultiArrayDataType(0);
      sub_22ABDFA34();
      sub_22ABDEDC8();
      *v11 = 0;
      v11[1] = 0xE000000000000000;
      v12 = swift_storeEnumTagMultiPayload();
      swift_willThrow(v12);
      sub_22AA3A8DC(a1);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v15, v21, v20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_22ABE8E30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      v13 = OUTLINED_FUNCTION_46_11();
      *(_OWORD *)(v13 + 16) = xmmword_22ABE8E30;
      *(_QWORD *)(v13 + 32) = LinearRegressorModel.featureCount.getter();
      sub_22ABDDB74();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_27();
      sub_22ABDE2C4();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v15, v20);
    }
LABEL_6:
    OUTLINED_FUNCTION_16();
    return;
  }
  __break(1u);
}

void sub_22AA478F8(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  _OWORD v55[5];
  uint64_t v56;

  v2 = v1;
  v53 = a1;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  v43 = OUTLINED_FUNCTION_1_30(v4, v40[0]);
  v5 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v6);
  v7 = sub_22ABDDC88();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v9);
  v10 = sub_22ABDE798();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22ABDE030();
  v15 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  v47 = v15;
  v16 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_22ABDE324();
  v48 = *(_QWORD *)(v19 - 8);
  v49 = v19;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v20);
  v44 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v40 - v23;
  v25 = *v2;
  sub_22ABDE318();
  v45 = v18;
  sub_22AA47D0C(v25);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v18, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE63230], v10);
  sub_22ABDE288();
  OUTLINED_FUNCTION_7_44();
  sub_22ABDE228();
  v26 = *(_QWORD *)(v25 + 16) - 1;
  v40[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
  v27 = *(_QWORD *)(sub_22ABDDE68() - 8);
  v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v40[1] = v28 + *(_QWORD *)(v27 + 72);
  v29 = swift_allocObject();
  v54 = xmmword_22ABE8E30;
  *(_OWORD *)(v29 + 16) = xmmword_22ABE8E30;
  v40[0] = v29 + v28;
  v30 = v5;
  v31 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104);
  v32 = v41;
  v33 = v43;
  v31(v41, *MEMORY[0x24BE624D0], v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v34 = OUTLINED_FUNCTION_46_11();
  *(_OWORD *)(v34 + 16) = v54;
  *(_QWORD *)(v34 + 32) = v26;
  v35 = v42;
  sub_22ABDDB74();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v33);
  OUTLINED_FUNCTION_27();
  sub_22ABDE2C4();
  *(_OWORD *)(swift_allocObject() + 16) = v54;
  sub_22ABDDBF8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v50 + 104))(v35, *MEMORY[0x24BE62570], v51);
  OUTLINED_FUNCTION_8_32();
  OUTLINED_FUNCTION_27();
  sub_22ABDE300();
  sub_22ABDE258();
  OUTLINED_FUNCTION_8_32();
  sub_22ABDE240();
  v37 = v48;
  v36 = v49;
  v38 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v44, v24, v49);
  memset(v55, 0, sizeof(v55));
  v56 = 0;
  v39 = v52;
  sub_22ABDE3CC();
  sub_22AB314C8(v38, v39, v55, v53);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v36);
  OUTLINED_FUNCTION_16();
}

void sub_22AA47CF8(uint64_t a1@<X8>)
{
  sub_22AA47484(a1);
}

uint64_t sub_22AA47D0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v2 = sub_22ABDE018();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_22ABBFDD0(a1);
  if ((v7 & 1) == 0)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
    {
      v9 = result;
      v10 = 2 * v8 - 1;
      v11 = swift_retain();
      v12 = sub_22A99EAA4(v11, a1 + 32, 0, v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86B8);
      v13 = swift_allocObject();
      v15 = xmmword_22ABE8E30;
      *(_OWORD *)(v13 + 16) = xmmword_22ABE8E30;
      *(_QWORD *)(v13 + 32) = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C0);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = v15;
      *(_QWORD *)(v14 + 32) = v9;
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE62B50], v2);
      return sub_22ABDE024();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_22AA47E54(uint64_t a1@<X8>)
{
  sub_22AA478F8(a1);
}

uint64_t sub_22AA47E68(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8530);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_6_48()
{
  return sub_22ABDE8E8();
}

unint64_t OUTLINED_FUNCTION_7_44()
{
  return 0xD000000000000010;
}

uint64_t OUTLINED_FUNCTION_8_32()
{
  return 0x746567726174;
}

BOOL sub_22AA47EE0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t sub_22AA47EF0(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;

  if (result >= a2)
  {
    v4 = __OFSUB__(result, a3);
    v3 = result - a3 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  if (v3 == v4)
    __break(1u);
  return result;
}

uint64_t sub_22AA47F04(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result)
    __break(1u);
  return result;
}

uint64_t sub_22AA47F18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2)
    __break(1u);
  return result;
}

uint64_t sub_22AA47F2C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

size_t sub_22AA47F34(uint64_t a1)
{
  size_t v1;

  v1 = sub_22AB87D78(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t AnnotatedFiles.startIndex.getter()
{
  return 0;
}

uint64_t AnnotatedFiles.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

unint64_t AnnotatedFiles.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    v5 = *v2;
    if (*(_QWORD *)(v5 + 16) > result)
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
      return sub_22AA47FF0(v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v3, a2);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA47FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Int __swiftcall AnnotatedFiles.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t sub_22AA48048(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22AA480CC()
{
  return 0x73746E656D656C65;
}

uint64_t sub_22AA480E8()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return sub_22ABE0280();
}

uint64_t sub_22AA48128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA48048(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22AA48150()
{
  sub_22AA48700();
  return sub_22ABE02EC();
}

uint64_t sub_22AA48178()
{
  sub_22AA48700();
  return sub_22ABE02F8();
}

uint64_t sub_22AA481A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AnnotatedFiles.endIndex.getter();
  *a1 = result;
  return result;
}

void (*sub_22AA481C4(void (**a1)(uint64_t *a1), unint64_t *a2))(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v5;
  void (*result)(uint64_t *);
  unint64_t v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38) - 8);
  result = (void (*)(uint64_t *))malloc(*(_QWORD *)(v5 + 64));
  *a1 = result;
  v7 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    sub_22AA47FF0(*(_QWORD *)v2+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v7, (uint64_t)result);
    return sub_22AA48260;
  }
  __break(1u);
  return result;
}

void sub_22AA48260(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_22AA48D68(*a1);
  free(v1);
}

uint64_t sub_22AA48288@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_22AA48298(*a1, a1[1], *v2, a2);
}

uint64_t sub_22AA48298@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (result < 0 || *(_QWORD *)(a3 + 16) < a2)
  {
    __break(1u);
  }
  else
  {
    a4[1] = a2;
    a4[2] = a3;
    *a4 = result;
    return sub_22ABDEAEC();
  }
  return result;
}

uint64_t sub_22AA482BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_22AA482C4(*v1, a1);
}

uint64_t sub_22AA482C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  a2[1] = 0;
  a2[2] = *(_QWORD *)(a1 + 16);
  return sub_22ABDEAEC();
}

BOOL sub_22AA482D4()
{
  uint64_t *v0;

  return sub_22AA47EE0(*v0);
}

uint64_t sub_22AA482DC()
{
  uint64_t *v0;

  return sub_22AA47F2C(*v0);
}

uint64_t sub_22AA482E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA48310(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA48310(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (a2 < 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v2 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    v3 = a2 - 1;
    while (v2 > v3)
    {
      ++result;
      if (!--a2)
        return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_22AA48340@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_22AA48378(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_22AA48378(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (a2)
  {
    while (1)
    {
      if (a3 == result)
        return 0;
      if (result == 0x7FFFFFFFFFFFFFFFLL)
        break;
      ++result;
      if (!--a2)
        return result;
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_22AA483C4(uint64_t *a1, uint64_t *a2)
{
  return sub_22AB861C8(*a1, *a2);
}

uint64_t sub_22AA483D4(uint64_t *a1, uint64_t *a2)
{
  return sub_22AA47EF0(*a1, *a2, a2[1]);
}

uint64_t sub_22AA483E8(uint64_t *a1, uint64_t *a2)
{
  return sub_22AA47F04(*a1, *a2, a2[1]);
}

uint64_t sub_22AA483FC(uint64_t *a1, uint64_t *a2)
{
  return sub_22AA47F18(*a1, a1[1], *a2, a2[1]);
}

Swift::Int sub_22AA48414@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = AnnotatedFiles.index(after:)(*a1);
  *a2 = result;
  return result;
}

_QWORD *sub_22AA4843C(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

void sub_22AA48454(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

size_t sub_22AA48460()
{
  uint64_t *v0;

  return sub_22AA47F34(*v0);
}

uint64_t sub_22AA48468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_22AA47F68(a1, a2, a3, *v3);
}

void AnnotatedFiles.init(labeledByNamesAt:separator:index:type:continueOnFailure:)(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = sub_22AAA7094(a1, a2, a3, a4, a5, a6);
  if (v7)
  {

    swift_bridgeObjectRelease();
    v17 = OUTLINED_FUNCTION_4_35();
    OUTLINED_FUNCTION_1_31(v17);
    v18 = OUTLINED_FUNCTION_18_15();
    OUTLINED_FUNCTION_20(v18);
  }
  else
  {
    v19 = v16;

    swift_bridgeObjectRelease();
    v20 = OUTLINED_FUNCTION_4_35();
    OUTLINED_FUNCTION_1_31(v20);
    v21 = OUTLINED_FUNCTION_18_15();
    OUTLINED_FUNCTION_20(v21);
    *a7 = v19;
  }
  OUTLINED_FUNCTION_16();
}

uint64_t AnnotatedFiles.init(labeledBySubdirectoryNamesAt:type:continueOnFailure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v10 = sub_22AAB4684(a1, a2, a3);
  if (v4)
  {

    v11 = OUTLINED_FUNCTION_4_35();
    OUTLINED_FUNCTION_1_31(v11);
    v12 = OUTLINED_FUNCTION_18_15();
    return OUTLINED_FUNCTION_20(v12);
  }
  else
  {
    v14 = v10;

    v15 = OUTLINED_FUNCTION_4_35();
    OUTLINED_FUNCTION_1_31(v15);
    v16 = OUTLINED_FUNCTION_18_15();
    result = OUTLINED_FUNCTION_20(v16);
    *a4 = v14;
  }
  return result;
}

void AnnotatedFiles.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B12BE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA48700();
  sub_22ABE02B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B12BF0);
  sub_22AA488E8(&qword_255B12BF8, (uint64_t (*)(void))sub_22AA4873C, MEMORY[0x24BEE12A0]);
  sub_22ABDFD4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22AA48700()
{
  unint64_t result;

  result = qword_255B12BE8;
  if (!qword_255B12BE8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF0FC8, &type metadata for AnnotatedFiles.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B12BE8);
  }
  return result;
}

unint64_t sub_22AA4873C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255B12C00;
  if (!qword_255B12C00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0DB38);
    v2[0] = sub_22AA48D30(&qword_255B12C08);
    v2[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for <> AnnotatedFeature<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255B12C00);
  }
  return result;
}

void sub_22AA487B8(_QWORD *a1)
{
  AnnotatedFiles.encode(to:)(a1);
}

void AnnotatedFiles.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B12C10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA48700();
  sub_22ABE0298();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B12BF0);
    sub_22AA488E8(&qword_255B12C18, (uint64_t (*)(void))sub_22AA48950, MEMORY[0x24BEE12D0]);
    sub_22ABDFC8C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
    *a2 = v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA488E8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B12BF0);
    v8 = a2();
    result = MEMORY[0x22E2E4D80](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22AA48950()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255B12C20;
  if (!qword_255B12C20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0DB38);
    v2[0] = sub_22AA48D30(&qword_255B12C28);
    v2[1] = MEMORY[0x24BEE0D38];
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for <> AnnotatedFeature<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255B12C20);
  }
  return result;
}

void sub_22AA489CC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  AnnotatedFiles.init(from:)(a1, a2);
}

uint64_t static AnnotatedFiles.== infix(_:_:)()
{
  return sub_22A99EC8C();
}

uint64_t AnnotatedFiles.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = *(_QWORD *)(*v0 + 16);
  result = sub_22ABE0250();
  if (v6)
  {
    v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    v10[1] = v5;
    sub_22ABDEAEC();
    do
    {
      sub_22AA47FF0(v8, (uint64_t)v4);
      sub_22ABDD0E8();
      sub_22AA48D30(&qword_255B12C30);
      sub_22ABDEC0C();
      sub_22ABDEDB0();
      sub_22AA48D68((uint64_t)v4);
      v8 += v9;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AnnotatedFiles.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_22ABE0244();
  sub_22ABDEAEC();
  sub_22AA48C18((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_22ABE0280();
}

uint64_t sub_22AA48B7C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_22ABE0244();
  sub_22ABDEAEC();
  sub_22AA48C18((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_22ABE0280();
}

uint64_t sub_22AA48BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_22ABE0250();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 8;
      result = sub_22ABE0250();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_22AA48C18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_22ABE0250();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_22AA47FF0(v9, (uint64_t)v6);
      sub_22ABDD0E8();
      sub_22AA48D30(&qword_255B12C30);
      sub_22ABDEC0C();
      sub_22ABDEDB0();
      result = sub_22AA48D68((uint64_t)v6);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_22AA48D30(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_22ABDD0E8();
    OUTLINED_FUNCTION_61();
  }
  return result;
}

uint64_t sub_22AA48D68(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22AA48DAC()
{
  unint64_t result;

  result = qword_255B12C38;
  if (!qword_255B12C38)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AnnotatedFiles, &type metadata for AnnotatedFiles);
    atomic_store(result, (unint64_t *)&qword_255B12C38);
  }
  return result;
}

uint64_t sub_22AA48DE8()
{
  return sub_22AA48E6C(&qword_255B12C40, &qword_255B12C48);
}

uint64_t sub_22AA48E14()
{
  return sub_22AA48E6C(&qword_255B12C50, &qword_255B12C58);
}

uint64_t sub_22AA48E40()
{
  return sub_22AA48E6C(&qword_255B12C60, &qword_255B12C68);
}

uint64_t sub_22AA48E6C(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_61();
  }
  return result;
}

unint64_t sub_22AA48EA8()
{
  unint64_t result;

  result = qword_255B12C70;
  if (!qword_255B12C70)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AnnotatedFiles, &type metadata for AnnotatedFiles);
    atomic_store(result, (unint64_t *)&qword_255B12C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotatedFiles()
{
  return &type metadata for AnnotatedFiles;
}

uint64_t storeEnumTagSinglePayload for AnnotatedFiles.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22AA48F34 + 4 * byte_22ABF0CE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22AA48F54 + 4 * byte_22ABF0CE5[v4]))();
}

_BYTE *sub_22AA48F34(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22AA48F54(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA48F5C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA48F64(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA48F6C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA48F74(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AnnotatedFiles.CodingKeys()
{
  return &type metadata for AnnotatedFiles.CodingKeys;
}

unint64_t sub_22AA48F94()
{
  unint64_t result;

  result = qword_255B12C78;
  if (!qword_255B12C78)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF0FA0, &type metadata for AnnotatedFiles.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B12C78);
  }
  return result;
}

unint64_t sub_22AA48FD4()
{
  unint64_t result;

  result = qword_255B12C80;
  if (!qword_255B12C80)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF0F10, &type metadata for AnnotatedFiles.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B12C80);
  }
  return result;
}

unint64_t sub_22AA49014()
{
  unint64_t result;

  result = qword_255B12C88[0];
  if (!qword_255B12C88[0])
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF0F38, &type metadata for AnnotatedFiles.CodingKeys);
    atomic_store(result, qword_255B12C88);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_35()
{
  return sub_22ABDE7E0();
}

void sub_22AA49058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_12();
  v30 = v1;
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = v2;
  v23 = (int *)v2;
  v6 = sub_22ABDE8A0();
  v27 = sub_22ABDF5D8();
  v29 = *(_QWORD *)(v27 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_9_33();
  v25 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v26 = v10;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0();
  v31 = v13;
  v14 = *(_QWORD *)(v5 + 32);
  v24 = _s7StorageVMa_1(0, v3, v4, v14);
  v28 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_9_33();
  v22 = v16;
  v17 = (uint64_t *)type metadata accessor for MultivariateLinearRegressor.Model(0, v3, v4, v14);
  MultivariateLinearRegressor.Model.weight.getter(v17);
  sub_22A9A9038();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v6);
  sub_22ABDE918();
  MultivariateLinearRegressor.Model.bias.getter(v17);
  sub_22A9D1D90();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v25, v27);
  sub_22AA4977C(v31, v26, *(_QWORD *)(v0 + v23[11]), *(_QWORD *)(v0 + v23[12]), *(_QWORD *)(v0 + v23[13]), 0, v3, v4, v22, v14);
  v18 = *(_QWORD *)(v30 + 24);
  v19 = *(_QWORD *)(v30 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v30, v18);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
  v21 = MEMORY[0x22E2E4D80](&unk_22ABF1058, v24);
  v20(v22, v24, v21, v18, v19);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v22, v24);
  OUTLINED_FUNCTION_16();
}

void sub_22AA492FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(int *, int *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v63 = v9;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v62 = v11;
  OUTLINED_FUNCTION_8_33();
  v12 = sub_22ABDE8A0();
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_9_33();
  v60 = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_9_33();
  v64 = v20;
  OUTLINED_FUNCTION_8_33();
  v24 = type metadata accessor for MultivariateLinearRegressor.Model(v21, v22, v23, v2);
  v57 = *(_QWORD *)(v24 - 8);
  v58 = v24;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v25);
  v59 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v55 = (uint64_t)&v53 - v28;
  v65 = v6;
  v66 = v4;
  OUTLINED_FUNCTION_8_33();
  v29 = v2;
  v33 = (int *)_s7StorageVMa_1(v30, v31, v32, v2);
  v56 = *((_QWORD *)v33 - 1);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v53 - v35;
  v38 = *(_QWORD *)(v8 + 24);
  v37 = *(_QWORD *)(v8 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v8, v38);
  v39 = *(void (**)(int *, int *, uint64_t, uint64_t, uint64_t))(v37 + 8);
  v40 = MEMORY[0x22E2E4D80](&unk_22ABF1080, v33);
  v39(v33, v33, v40, v38, v37);
  if (!v0)
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v18, v36, v54);
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v12);
    sub_22A9A9038();
    sub_22ABDE918();
    v41 = v62;
    v42 = sub_22AA4993C((uint64_t)&v36[v33[11]], v62);
    MEMORY[0x24BDAC7A8](v42);
    v43 = v65;
    v44 = v66;
    *(&v53 - 4) = v65;
    *(&v53 - 3) = v44;
    *(&v53 - 2) = v29;
    v45 = v60;
    sub_22A9D1D90();
    sub_22AA499A4(v41);
    v46 = v55;
    MultivariateLinearRegressor.Model.init(weight:bias:)(v64, v45, v43, v44, v29, v55);
    v47 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v59, v46, v58);
    v48 = *(_QWORD *)&v36[v33[12]];
    v49 = *(_QWORD *)&v36[v33[13]];
    v50 = &v36[v33[14]];
    v51 = *(_QWORD *)v50;
    LODWORD(v44) = v50[8];
    (*(void (**)(char *, int *))(v56 + 8))(v36, v33);
    if ((_DWORD)v44)
      v52 = 1;
    else
      v52 = v51;
    sub_22AABF228(v47, v48, v49, v52, v65, v66, v29, v63);
  }
  OUTLINED_FUNCTION_16();
}

#error "22AA4966C: call analysis failed (funcsize=11)"

void sub_22AA4967C(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_4_36(a1, a2);
  sub_22AA96178();
}

uint64_t sub_22AA496A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_22ABDE8A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_22A9A9038();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v2);
  return sub_22ABDE918();
}

uint64_t sub_22AA4977C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v19;
  int *v20;
  uint64_t result;
  uint64_t v22;

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)_s7StorageVMa_1(0, a7, a8, a10);
  result = sub_22AA49A04(a2, a9 + v20[11]);
  *(_QWORD *)(a9 + v20[12]) = a3;
  *(_QWORD *)(a9 + v20[13]) = a4;
  v22 = a9 + v20[14];
  *(_QWORD *)v22 = a5;
  *(_BYTE *)(v22 + 8) = a6 & 1;
  return result;
}

uint64_t sub_22AA4984C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22ABDE8A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v6);
  sub_22A9A9038();
  return sub_22ABDE918();
}

uint64_t _s7StorageVMa_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7StorageVMn_1);
}

uint64_t sub_22AA4993C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA49984(uint64_t a1)
{
  return sub_22AA4984C(a1);
}

uint64_t sub_22AA499A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA499E4(uint64_t a1)
{
  return sub_22AA496A8(a1);
}

uint64_t sub_22AA49A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22AA49A4C()
{
  unint64_t v0;
  unint64_t v1;

  sub_22A9B9E9C();
  if (v0 <= 0x3F)
  {
    sub_22A9B9EEC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *sub_22AA49AE8(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = a3[11];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v9, 1, v7))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    }
    v14 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(uint64_t *)((char *)a2 + a3[12]);
    *(_QWORD *)&a1[v14] = *(uint64_t *)((char *)a2 + v14);
    v15 = a3[14];
    v16 = &a1[v15];
    v17 = (char *)a2 + v15;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
  }
  return a1;
}

uint64_t sub_22AA49C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v5 = a1 + *(int *)(a2 + 44);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return v7(v5, v4);
  return result;
}

char *sub_22AA49CA8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[11];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[14];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  return a1;
}

char *sub_22AA49DA8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[11];
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v15 = a3[14];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  return a1;
}

char *sub_22AA49EF8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[11];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[14];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  return a1;
}

char *sub_22AA49FF8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[11];
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  v16 = a3[14];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  return a1;
}

uint64_t sub_22AA4A144()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA4A150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v8 = a1 + *(int *)(a3 + 44);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_22AA4A1C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA4A1CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v10 = a1 + *(int *)(a4 + 44);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t sub_22AA4A244(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x746867696577 && a2 == 0xE600000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1935763810 && a2 == 0xE400000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x5365727574616566 && a2 == 0xEB00000000657A69;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x697461746F6E6E61 && a2 == 0xEE00657A69536E6FLL;
        if (v8 || (sub_22ABDFF68() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x656469727473 && a2 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_22ABDFF68();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_22AA4A46C()
{
  return 5;
}

uint64_t sub_22AA4A474(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA4A4A4 + 4 * byte_22ABF1018[a1]))(0x746867696577, 0xE600000000000000);
}

uint64_t sub_22AA4A4A4()
{
  return 1935763810;
}

uint64_t sub_22AA4A4B4()
{
  return 0x5365727574616566;
}

uint64_t sub_22AA4A4D4()
{
  return 0x697461746F6E6E61;
}

uint64_t sub_22AA4A4F8()
{
  return 0x656469727473;
}

void sub_22AA4A508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v14 = v2;
  v15 = v0;
  v8 = _s7StorageV10CodingKeysOMa(255, v5, v6, v7);
  MEMORY[0x22E2E4D80](&unk_22ABF1180, v8);
  v9 = sub_22ABDFD58();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - v11;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_22ABE02B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  sub_22A9B9F80(&qword_255B0EC58, MEMORY[0x24BEE14F8], MEMORY[0x24BDBFCD8]);
  v13 = v15;
  sub_22ABDFD4C();
  if (!v13)
  {
    sub_22ABDFCF8();
    OUTLINED_FUNCTION_6_49();
    OUTLINED_FUNCTION_6_49();
    sub_22ABDFCEC();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  OUTLINED_FUNCTION_16();
}

void sub_22AA4A6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(void);
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;

  OUTLINED_FUNCTION_12();
  v46 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v37[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v38 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v40 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  v41 = v14;
  v15 = _s7StorageV10CodingKeysOMa(255, v6, v4, v2);
  v45 = (uint64_t *)MEMORY[0x22E2E4D80](&unk_22ABF1180, v15);
  v43 = sub_22ABDFCB0();
  v37[2] = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v37 - v17;
  v19 = _s7StorageVMa_1(0, v6, v4, v2);
  v37[0] = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v37 - v21;
  v44 = (uint64_t)v37 + *(int *)(v23 + 44) - v21;
  v39 = v12;
  __swift_storeEnumTagSinglePayload(v44, 1, 1, v12);
  v24 = &v22[*(int *)(v19 + 56)];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  v42 = v18;
  v25 = v46;
  sub_22ABE0298();
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    sub_22AA499A4(v44);
  }
  else
  {
    v45 = (uint64_t *)v24;
    v46 = v19;
    v26 = v38;
    v27 = v40;
    v28 = (uint64_t)v8;
    sub_22A9B9F80(&qword_255B0EC68, MEMORY[0x24BEE1520], MEMORY[0x24BDBFCE8]);
    v29 = v39;
    sub_22ABDFC8C();
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v22, v41, v29);
    sub_22ABDFC38();
    sub_22A9A8F6C(v26, v44);
    v30 = OUTLINED_FUNCTION_10_30();
    v31 = v46;
    *(_QWORD *)&v22[*(int *)(v46 + 48)] = v30;
    *(_QWORD *)&v22[*(int *)(v31 + 52)] = OUTLINED_FUNCTION_10_30();
    v32 = sub_22ABDFC2C();
    LOBYTE(v27) = v33;
    OUTLINED_FUNCTION_3_45();
    v34 = v45;
    *v45 = v32;
    *((_BYTE *)v34 + 8) = v27 & 1;
    v35 = v37[0];
    OUTLINED_FUNCTION_8_33();
    v36();
    __swift_destroy_boxed_opaque_existential_1(v28);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v31);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA4AA74()
{
  unsigned __int8 *v0;

  return sub_22AA4A474(*v0);
}

uint64_t sub_22AA4AA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA4A244(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA4AAB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA4A46C();
  *a1 = result;
  return result;
}

uint64_t sub_22AA4AAE4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF1180, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA4AB18(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF1180, a1);
  return sub_22ABE02F8();
}

void sub_22AA4AB4C()
{
  sub_22AA4A6FC();
}

void sub_22AA4AB6C()
{
  sub_22AA4A508();
}

uint64_t _s7StorageV10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7StorageV10CodingKeysOMn);
}

uint64_t getEnumTagSinglePayload for PoseSelectionStrategy(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_22AA4AC14(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22AA4AC60 + 4 * byte_22ABF1022[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22AA4AC94 + 4 * byte_22ABF101D[v4]))();
}

uint64_t sub_22AA4AC94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA4AC9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA4ACA4);
  return result;
}

uint64_t sub_22AA4ACB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA4ACB8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22AA4ACBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA4ACC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AA4ACD0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA4ACE0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA4ACF0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_3_45()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 120), *(_QWORD *)(v1 - 112));
}

uint64_t OUTLINED_FUNCTION_4_36(uint64_t a1, uint64_t *a2)
{
  return type metadata accessor for MultivariateLinearRegressor.Model(0, a2[2], a2[3], a2[4]);
}

uint64_t OUTLINED_FUNCTION_6_49()
{
  return sub_22ABDFD34();
}

uint64_t OUTLINED_FUNCTION_10_30()
{
  return sub_22ABDFC74();
}

uint64_t PreprocessingUpdatableTabularEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingUpdatableTabularEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableTabularEstimator.preprocessor.modify())()
{
  return nullsub_1;
}

uint64_t PreprocessingUpdatableTabularEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingUpdatableTabularEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableTabularEstimator.estimator.modify())()
{
  return nullsub_1;
}

void PreprocessingUpdatableTabularEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingUpdatableTabularEstimator();
}

uint64_t sub_22AA4AE28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void type metadata accessor for PreprocessingUpdatableTabularEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void PreprocessingUpdatableTabularEstimator.makeTransformer()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = *(_QWORD *)(a1 + 16);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v17 = v16 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16 - v15, v3, v13);
  OUTLINED_FUNCTION_79(v9, v3 + *(int *)(a1 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v5, v11);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  swift_getAssociatedConformanceWitness();
  ComposedTabularTransformer.init(_:_:)(v17, v13, a2);
}

void sub_22AA4AFC4()
{
  OUTLINED_FUNCTION_3();
}

uint64_t PreprocessingUpdatableTabularEstimator.preprocessed(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = *(_QWORD *)(a5 + 16);
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA4B01C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  v1 = v0[6];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[9] + 16))(v0[10], v0[7], v0[8]);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8);
  v3 = (_QWORD *)OUTLINED_FUNCTION_17_27();
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_22AA4B094;
  return v5(v0[2], v0[3], v0[4], v0[5], v0[8], v2);
}

uint64_t sub_22AA4B094()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 72);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_43_7();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_7_45(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t PreprocessingUpdatableTabularEstimator.fitted(toPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v8 = a5[2];
  v6[8] = v8;
  v6[9] = *(_QWORD *)(v8 - 8);
  v6[10] = OUTLINED_FUNCTION_0_0();
  v9 = a5[3];
  v6[11] = v9;
  v6[12] = *(_QWORD *)(v9 - 8);
  v6[13] = OUTLINED_FUNCTION_0_0();
  v6[14] = *(_QWORD *)(a5[5] + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[15] = AssociatedTypeWitness;
  v6[16] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA4B1CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[12] + 16))(v0[13], v0[7] + *(int *)(v0[6] + 52), v0[11]);
  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  v0[19] = v1;
  *v1 = v0;
  v1[1] = sub_22AA4B244;
  return v3(v0[18], v0[3], v0[4], v0[5], v0[11], v0[14]);
}

uint64_t sub_22AA4B244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  v2 = *(_QWORD *)(v1 + 96);
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v3 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA4B2AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[17];
  v2 = v0[18];
  v3 = v0[16];
  v4 = v0[10];
  v5 = v0[8];
  v6 = v0[2];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[9] + 16))(v4, v0[7], v5);
  OUTLINED_FUNCTION_79(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTabularTransformer.init(_:_:)(v4, v5, v6);
}

uint64_t sub_22AA4B354()
{
  uint64_t v0;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA4B394()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableTabularEstimator.fitted(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_34_18();
  v1[5] = v2;
  v1[6] = v0;
  v1[3] = v3;
  v1[4] = v4;
  v1[2] = v5;
  v6 = sub_22ABDD2EC();
  v1[7] = v6;
  v1[8] = *(_QWORD *)(v6 - 8);
  v1[9] = OUTLINED_FUNCTION_0_0();
  v7 = (_QWORD *)swift_task_alloc();
  v1[10] = v7;
  v8 = OUTLINED_FUNCTION_15_31(v7);
  return OUTLINED_FUNCTION_9_34(v8, v9, v10, v11, v12);
}

uint64_t sub_22AA4B454()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA4B4A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 88);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 64));
    OUTLINED_FUNCTION_36_15();
    return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v3;
    *v3 = v0;
    v3[1] = sub_22AA4B530;
    return PreprocessingUpdatableTabularEstimator.fitted(toPreprocessed:eventHandler:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
  }
}

uint64_t sub_22AA4B530()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 104) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA4B57C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_75_1(*(_QWORD *)(v0 + 64));
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA4B5B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_36_15();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA4B5D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 64));
  OUTLINED_FUNCTION_36_15();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableTabularEstimator.update(_:withPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[10] = a5;
  v6[11] = v5;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = *(_QWORD *)(a5 + 24);
  v6[12] = v7;
  v6[13] = *(_QWORD *)(v7 - 8);
  v6[14] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AA4B658()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_31(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_22_29();
  v1 = OUTLINED_FUNCTION_23_29();
  OUTLINED_FUNCTION_14_34(v1);
}

uint64_t sub_22AA4B6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v13 = v12 + *(int *)(a1 + 52);
  v14 = (_QWORD *)OUTLINED_FUNCTION_17_27();
  v11[15] = (uint64_t)v14;
  *v14 = v11;
  v14[1] = sub_22AA4B714;
  return OUTLINED_FUNCTION_18_32(v13, v11[7], v11[8], v11[9], v11[12], v10, a10);
}

uint64_t sub_22AA4B714()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 104);
  v3 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_43_7();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_7_45(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_22AA4B788()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableTabularEstimator.update(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_34_18();
  v1[9] = v2;
  v1[10] = v0;
  v1[7] = v3;
  v1[8] = v4;
  v1[6] = v5;
  v6 = *(_QWORD *)(v2 + 24);
  v1[11] = v6;
  v1[12] = *(_QWORD *)(v6 - 8);
  v1[13] = OUTLINED_FUNCTION_0_0();
  v7 = sub_22ABDD2EC();
  v1[14] = v7;
  v1[15] = *(_QWORD *)(v7 - 8);
  v1[16] = OUTLINED_FUNCTION_0_0();
  v8 = (_QWORD *)swift_task_alloc();
  v1[17] = v8;
  v9 = OUTLINED_FUNCTION_15_31(v8);
  return OUTLINED_FUNCTION_9_34(v9, v10, v11, v12, v13);
}

uint64_t sub_22AA4B840()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA4B88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 144);
  sub_22ABDF1DC();
  if (!v1)
  {
    OUTLINED_FUNCTION_16_31(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96));
    OUTLINED_FUNCTION_22_29();
    v3 = OUTLINED_FUNCTION_23_29();
    OUTLINED_FUNCTION_14_34(v3);
  }
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA4B948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v12 = v11 + *(int *)(a1 + 52);
  v13 = (_QWORD *)OUTLINED_FUNCTION_25();
  v10[19] = (uint64_t)v13;
  *v13 = v10;
  v13[1] = sub_22AA4B9A0;
  return OUTLINED_FUNCTION_18_32(v12, v10[16], v10[7], v10[8], v10[11], v9, a9);
}

uint64_t sub_22AA4B9A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 96));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA4BA08()
{
  uint64_t v0;

  OUTLINED_FUNCTION_75_1(*(_QWORD *)(v0 + 120));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA4BA40()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_20();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA4BA6C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 120));
  OUTLINED_FUNCTION_33_20();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingUpdatableTabularEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTabularTransformer();
}

uint64_t sub_22AA4BB40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

void PreprocessingUpdatableTabularEstimator.decode(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v11 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_33();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v4, v10);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_21_32(v11, a3);
  }
  OUTLINED_FUNCTION_16();
}

void PreprocessingUpdatableTabularEstimator.encodeWithOptimizer(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTabularTransformer();
}

uint64_t sub_22AA4BD2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32))(v1 + *(int *)(a1 + 52), v5, v3, v2);
}

void PreprocessingUpdatableTabularEstimator.decodeWithOptimizer(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v9 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_33();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v4, v11);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_21_32(v9, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA4BE84()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B72C0;
  return PreprocessingUpdatableTabularEstimator.update(_:with:eventHandler:)();
}

void sub_22AA4BF00()
{
  PreprocessingUpdatableTabularEstimator.encodeWithOptimizer(_:to:)();
}

void sub_22AA4BF14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableTabularEstimator.decodeWithOptimizer(from:)(a1, a2, a3);
}

uint64_t sub_22AA4BF28()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B785C;
  return PreprocessingUpdatableTabularEstimator.fitted(to:eventHandler:)();
}

void sub_22AA4BFA8()
{
  PreprocessingUpdatableTabularEstimator.encode(_:to:)();
}

void sub_22AA4BFBC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableTabularEstimator.decode(from:)(a1, a2, a3);
}

void TabularTransformer.appending<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15 - v14, v4, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  PreprocessingUpdatableTabularEstimator.init(_:_:)(v16, a2, a4);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  OUTLINED_FUNCTION_27_8(v15 - v14, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  PreprocessingUpdatableSupervisedTabularEstimator.init(_:_:)(v16, a2, a4);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v15, v4, a2, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a3);
  ComposedTabularTransformer.init(_:_:)((uint64_t)v15, a2, a4);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15 - v14, v4, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  PreprocessingSupervisedTabularEstimator.init(_:_:)(v16, a2, a4);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15 - v14, v4, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  PreprocessingTabularEstimator.init(_:_:)(v16, a2, a4);
}

void sub_22AA4C094()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA4C0A0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessingUpdatableTabularEstimator<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AA4C0CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA4C1A8 + 4 * byte_22ABF11D0[v21 - 1]))();
}

void sub_22AA4C21C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_7_45(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_9_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return PreprocessingUpdatableTabularEstimator.preprocessed(from:eventHandler:)(a1, a2, a3, a4, a5);
}

void OUTLINED_FUNCTION_14_34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v4;
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = a1;
  type metadata accessor for ComposedTabularTransformer();
}

uint64_t OUTLINED_FUNCTION_15_31(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_16_31@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, v2 + *(int *)(v4 + 52), v3);
}

uint64_t OUTLINED_FUNCTION_17_27()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_18_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

void OUTLINED_FUNCTION_21_32(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  ComposedTabularTransformer.init(_:_:)(a1, v2, a2);
}

uint64_t OUTLINED_FUNCTION_22_29()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_23_29()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_33_20()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_36_15()
{
  return swift_task_dealloc();
}

void __swiftcall Event.init(origin:itemCount:totalItemCount:metrics:)(CreateMLComponents::Event *__return_ptr retstr, Swift::String origin, Swift::Int itemCount, Swift::Int_optional totalItemCount, Swift::OpaquePointer metrics)
{
  retstr->origin = origin;
  retstr->itemCount = itemCount;
  retstr->totalItemCount.value = totalItemCount.value;
  retstr->totalItemCount.is_nil = totalItemCount.is_nil;
  retstr->metrics = metrics;
}

uint64_t Event.origin.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_20();
  return v0;
}

void Event.origin.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_41();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_21();
}

uint64_t (*Event.origin.modify())()
{
  return nullsub_1;
}

uint64_t Event.itemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t Event.itemCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*Event.itemCount.modify())()
{
  return nullsub_1;
}

uint64_t Event.totalItemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t Event.totalItemCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*Event.totalItemCount.modify())()
{
  return nullsub_1;
}

uint64_t Event.metrics.getter()
{
  return sub_22ABDEAEC();
}

uint64_t Event.metrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*Event.metrics.modify())()
{
  return nullsub_1;
}

uint64_t Event.debugDescription.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 32);
  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  sub_22ABDEAEC();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  sub_22ABDFD7C();
  OUTLINED_FUNCTION_4_37();
  OUTLINED_FUNCTION_63_1();
  sub_22ABDEDC8();
  if ((v1 & 1) == 0)
  {
    sub_22AA204C4();
    sub_22ABDF6C8();
  }
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_63_1();
  sub_22ABDEDC8();
  sub_22ABDEAEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
  sub_22A9ADA0C();
  sub_22ABDEABC();
  OUTLINED_FUNCTION_4_37();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_63_1();
  sub_22ABDEDC8();
  return 0x3C746E657645;
}

void MetricsKey.rawValue.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_41();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_21();
}

uint64_t (*MetricsKey.rawValue.modify())()
{
  return nullsub_1;
}

CreateMLComponents::MetricsKey __swiftcall MetricsKey.init(rawValue:)(CreateMLComponents::MetricsKey rawValue)
{
  CreateMLComponents::MetricsKey *v1;

  *v1 = rawValue;
  return rawValue;
}

void static MetricsKey.source.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_1_32(a1);
}

void static MetricsKey.trainingAccuracy.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_38(a1);
}

void static MetricsKey.validationAccuracy.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_38(a1);
}

void static MetricsKey.trainingLoss.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_1_32(a1);
}

void static MetricsKey.validationLoss.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_1_32(a1);
}

void static MetricsKey.trainingMaximumError.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_38(a1);
}

void static MetricsKey.validationMaximumError.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_38(a1);
}

void static MetricsKey.trainingError.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_1_32(a1);
}

void static MetricsKey.validationError.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_38(a1);
}

void static MetricsKey.trainingMeanAveragePrecision.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_38(a1);
}

void static MetricsKey.validationMeanAveragePrecision.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_38(a1);
}

uint64_t sub_22AA4C8EC()
{
  _QWORD *v0;

  return sub_22ABC4A70(*v0, v0[1]);
}

uint64_t sub_22AA4C8F4(uint64_t a1)
{
  _QWORD *v1;

  return sub_22ABC4B80(a1, *v1, v1[1]);
}

uint64_t sub_22AA4C8FC(uint64_t a1)
{
  _QWORD *v1;

  return sub_22ABC5100(a1, *v1, v1[1]);
}

uint64_t sub_22AA4C904@<X0>(Swift::String *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = MetricsKey.init(rawValue:)(*a1).rawValue._countAndFlagsBits;
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_22AA4C940@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MetricsKey.debugDescription.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22AA4C964(uint64_t *a1, uint64_t *a2)
{
  return sub_22AA18058(*a1, a1[1], *a2, a2[1]);
}

uint64_t MetricsKey.debugDescription.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_20();
  return v0;
}

unint64_t sub_22AA4C9A0()
{
  unint64_t result;

  result = qword_2540E7B08[0];
  if (!qword_2540E7B08[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for MetricsKey, &type metadata for MetricsKey);
    atomic_store(result, qword_2540E7B08);
  }
  return result;
}

uint64_t destroy for Event()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t assignWithCopy for Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Event(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Event()
{
  return &type metadata for Event;
}

ValueMetadata *type metadata accessor for MetricsKey()
{
  return &type metadata for MetricsKey;
}

void OUTLINED_FUNCTION_0_38(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_2_41()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_37()
{
  return sub_22ABDEDC8();
}

uint64_t MultivariateLinearRegressorConfiguration.batchSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MultivariateLinearRegressorConfiguration.batchSize.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MultivariateLinearRegressorConfiguration.batchSize.modify())()
{
  return nullsub_1;
}

uint64_t MultivariateLinearRegressorConfiguration.maximumIterationCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t MultivariateLinearRegressorConfiguration.maximumIterationCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*MultivariateLinearRegressorConfiguration.maximumIterationCount.modify())()
{
  return nullsub_1;
}

float MultivariateLinearRegressorConfiguration.earlyStoppingTolerance.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void MultivariateLinearRegressorConfiguration.earlyStoppingTolerance.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*MultivariateLinearRegressorConfiguration.earlyStoppingTolerance.modify())()
{
  return nullsub_1;
}

uint64_t MultivariateLinearRegressorConfiguration.earlyStoppingIterationCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t MultivariateLinearRegressorConfiguration.earlyStoppingIterationCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*MultivariateLinearRegressorConfiguration.earlyStoppingIterationCount.modify())()
{
  return nullsub_1;
}

float MultivariateLinearRegressorConfiguration.learningRate.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void MultivariateLinearRegressorConfiguration.learningRate.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*MultivariateLinearRegressorConfiguration.learningRate.modify())()
{
  return nullsub_1;
}

uint64_t MultivariateLinearRegressorConfiguration.randomSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t MultivariateLinearRegressorConfiguration.randomSeed.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*MultivariateLinearRegressorConfiguration.randomSeed.modify())()
{
  return nullsub_1;
}

void __swiftcall MultivariateLinearRegressorConfiguration.init()(CreateMLComponents::MultivariateLinearRegressorConfiguration *__return_ptr retstr)
{
  *(_OWORD *)&retstr->batchSize = xmmword_22ABEE820;
  retstr->earlyStoppingTolerance = 0.01;
  retstr->earlyStoppingIterationCount = 5;
  retstr->learningRate = 0.005;
  retstr->randomSeed.value = 0;
  retstr->randomSeed.is_nil = 1;
}

uint64_t MultivariateLinearRegressorConfiguration.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  sub_22ABE0250();
  sub_22ABE0250();
  sub_22ABE0268();
  sub_22ABE0250();
  sub_22ABE0268();
  if (v1 == 1)
    return sub_22ABE025C();
  sub_22ABE025C();
  return sub_22ABE0250();
}

uint64_t static MultivariateLinearRegressorConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v6;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)
    || *(float *)(a1 + 16) != *(float *)(a2 + 16)
    || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24)
    || *(float *)(a1 + 32) != *(float *)(a2 + 32))
  {
    return 0;
  }
  v6 = *(_BYTE *)(a2 + 48);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
      v6 = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_22AA4CE14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7A69536863746162 && a2 == 0xE900000000000065;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000022ABE3680 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000022ABE36A0 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000022ABE36C0 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = a1 == 0x676E696E7261656CLL && a2 == 0xEC00000065746152;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0x65536D6F646E6172 && a2 == 0xEA00000000006465)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v8 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 5;
      else
        return 6;
    }
  }
}

uint64_t sub_22AA4D0A4()
{
  return 6;
}

uint64_t sub_22AA4D0AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA4D0E4
                                                            + 4 * asc_22ABF13A0[a1]))(0x7A69536863746162, 0xE900000000000065);
}

unint64_t sub_22AA4D0E4()
{
  return 0xD000000000000015;
}

unint64_t sub_22AA4D100()
{
  return 0xD000000000000016;
}

uint64_t sub_22AA4D138()
{
  return 0x676E696E7261656CLL;
}

uint64_t sub_22AA4D158()
{
  return 0x65536D6F646E6172;
}

uint64_t sub_22AA4D174()
{
  unsigned __int8 *v0;

  return sub_22AA4D0AC(*v0);
}

uint64_t sub_22AA4D17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA4CE14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA4D1A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA4D0A4();
  *a1 = result;
  return result;
}

uint64_t sub_22AA4D1C4()
{
  sub_22AA4D3B0();
  return sub_22ABE02EC();
}

uint64_t sub_22AA4D1EC()
{
  sub_22AA4D3B0();
  return sub_22ABE02F8();
}

void MultivariateLinearRegressorConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B12E78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v8;
  v10 = *(_QWORD *)(v1 + 40);
  v9[1] = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA4D3B0();
  sub_22ABE02B0();
  v18 = 0;
  OUTLINED_FUNCTION_63();
  if (!v2)
  {
    v17 = 1;
    OUTLINED_FUNCTION_63();
    v16 = 2;
    OUTLINED_FUNCTION_10_15();
    v15 = 3;
    OUTLINED_FUNCTION_63();
    v14 = 4;
    OUTLINED_FUNCTION_10_15();
    v13 = 5;
    sub_22ABDFCEC();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_1_33();
}

unint64_t sub_22AA4D3B0()
{
  unint64_t result;

  result = qword_255B12E80;
  if (!qword_255B12E80)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF157C, &type metadata for MultivariateLinearRegressorConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B12E80);
  }
  return result;
}

uint64_t MultivariateLinearRegressorConfiguration.hashValue.getter()
{
  sub_22ABE0244();
  MultivariateLinearRegressorConfiguration.hash(into:)();
  return sub_22ABE0280();
}

void MultivariateLinearRegressorConfiguration.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B12E88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA4D3B0();
  sub_22ABE0298();
  if (!v2)
  {
    v26 = 0;
    v9 = OUTLINED_FUNCTION_0_39();
    v25 = 1;
    v10 = OUTLINED_FUNCTION_0_39();
    v24 = 2;
    OUTLINED_FUNCTION_3_46();
    v12 = v11;
    v23 = 3;
    v20 = OUTLINED_FUNCTION_0_39();
    v22 = 4;
    OUTLINED_FUNCTION_3_46();
    v14 = v13;
    v21 = 5;
    v15 = sub_22ABDFC2C();
    v16 = v8;
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v20;
    *(_DWORD *)(a2 + 32) = v14;
    *(_QWORD *)(a2 + 40) = v15;
    *(_BYTE *)(a2 + 48) = v18 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1_33();
}

uint64_t sub_22AA4D624()
{
  sub_22ABE0244();
  MultivariateLinearRegressorConfiguration.hash(into:)();
  return sub_22ABE0280();
}

unint64_t sub_22AA4D694()
{
  unint64_t result;

  result = qword_255B12E90;
  if (!qword_255B12E90)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for MultivariateLinearRegressorConfiguration, &type metadata for MultivariateLinearRegressorConfiguration);
    atomic_store(result, (unint64_t *)&qword_255B12E90);
  }
  return result;
}

void sub_22AA4D6D0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  MultivariateLinearRegressorConfiguration.init(from:)(a1, a2);
}

void sub_22AA4D6E4(_QWORD *a1)
{
  MultivariateLinearRegressorConfiguration.encode(to:)(a1);
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MultivariateLinearRegressorConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MultivariateLinearRegressorConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 49) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MultivariateLinearRegressorConfiguration()
{
  return &type metadata for MultivariateLinearRegressorConfiguration;
}

uint64_t getEnumTagSinglePayload for MultivariateLinearRegressorConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MultivariateLinearRegressorConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_22AA4D858 + 4 * byte_22ABF13AB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_22AA4D88C + 4 * byte_22ABF13A6[v4]))();
}

uint64_t sub_22AA4D88C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA4D894(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA4D89CLL);
  return result;
}

uint64_t sub_22AA4D8A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA4D8B0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_22AA4D8B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA4D8BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MultivariateLinearRegressorConfiguration.CodingKeys()
{
  return &type metadata for MultivariateLinearRegressorConfiguration.CodingKeys;
}

unint64_t sub_22AA4D8DC()
{
  unint64_t result;

  result = qword_255B12E98;
  if (!qword_255B12E98)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF1554, &type metadata for MultivariateLinearRegressorConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B12E98);
  }
  return result;
}

unint64_t sub_22AA4D91C()
{
  unint64_t result;

  result = qword_255B12EA0;
  if (!qword_255B12EA0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF14C4, &type metadata for MultivariateLinearRegressorConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B12EA0);
  }
  return result;
}

unint64_t sub_22AA4D95C()
{
  unint64_t result;

  result = qword_255B12EA8;
  if (!qword_255B12EA8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF14EC, &type metadata for MultivariateLinearRegressorConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B12EA8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_39()
{
  return sub_22ABDFC74();
}

uint64_t OUTLINED_FUNCTION_3_46()
{
  return sub_22ABDFC68();
}

BOOL static PoseSelectionStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PoseSelectionStrategy.hash(into:)()
{
  return sub_22ABE0250();
}

uint64_t PoseSelectionStrategy.hashValue.getter()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return sub_22ABE0280();
}

void PoseSelector.strategy.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PoseSelector.strategy.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PoseSelector.strategy.modify())()
{
  return nullsub_1;
}

float PoseSelector.confidenceThreshold.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void PoseSelector.confidenceThreshold.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*PoseSelector.confidenceThreshold.modify())()
{
  return nullsub_1;
}

CreateMLComponents::PoseSelector __swiftcall PoseSelector.init(strategy:confidenceThreshold:)(CreateMLComponents::PoseSelectionStrategy strategy, Swift::Float confidenceThreshold)
{
  uint64_t v2;
  CreateMLComponents::PoseSelector result;

  *(_BYTE *)v2 = *(_BYTE *)strategy;
  *(Swift::Float *)(v2 + 4) = confidenceThreshold;
  result.confidenceThreshold = confidenceThreshold;
  result.strategy = strategy;
  return result;
}

CreateMLComponents::PoseSelector __swiftcall PoseSelector.init(strategy:)(CreateMLComponents::PoseSelectionStrategy strategy)
{
  _BYTE *v1;
  CreateMLComponents::PoseSelectionStrategy v2;
  float v3;
  CreateMLComponents::PoseSelector result;

  *v1 = *(_BYTE *)strategy;
  OUTLINED_FUNCTION_31_16((uint64_t)v1);
  result.confidenceThreshold = v3;
  result.strategy = v2;
  return result;
}

CreateMLComponents::PoseSelector __swiftcall PoseSelector.init()()
{
  _BYTE *v0;
  CreateMLComponents::PoseSelectionStrategy v1;
  float v2;
  CreateMLComponents::PoseSelector result;

  *v0 = 0;
  OUTLINED_FUNCTION_31_16((uint64_t)v0);
  result.confidenceThreshold = v2;
  result.strategy = v1;
  return result;
}

void PoseSelector.applied(to:eventHandler:)()
{
  __asm { BR              X10 }
}

uint64_t sub_22AA4DB08()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  int64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  float v28;
  float v29;
  int64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  float v63;
  float v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  int v109;
  __int128 v110;
  __int128 v111;
  int v112;

  v4 = *(_QWORD *)(v2 + 16);
  if (!v4)
  {
    sub_22AA03520(0);
    sub_22A9F25A8();
    result = sub_22ABDEAC8();
    v1 = 0xE800000000000000;
    v66 = 0x6C6C414F50494E56;
    goto LABEL_55;
  }
  OUTLINED_FUNCTION_2_42(0);
  OUTLINED_FUNCTION_35_12();
  if (v4 == 1)
  {
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_50_9();
    result = v0;
    v66 = v89;
    goto LABEL_55;
  }
  OUTLINED_FUNCTION_16_13();
  v91 = v0;
  OUTLINED_FUNCTION_22_21();
  v87 = v1;
  OUTLINED_FUNCTION_50_9();
  v5 = 1;
  v71 = v4;
  do
  {
    OUTLINED_FUNCTION_2_42(v5);
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      JUMPOUT(0x22AA4EEA4);
    }
    v81 = v5 + 1;
    v6 = (uint64_t *)(v75 + 24 * v5);
    v93 = *v6;
    v77 = v6[1];
    v79 = v6[2];
    v7 = *(_QWORD *)(v91 + 16);
    if (v7)
    {
      *(_QWORD *)(v3 - 160) = MEMORY[0x24BEE4AF8];
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_22_21();
      sub_22AA4F39C(v7);
      v8 = sub_22AA4F4B0(v91);
      v10 = v9;
      v11 = 0;
      v12 = v91 + 64;
      OUTLINED_FUNCTION_36_16();
      v14 = v91;
      while (1)
      {
        if (v8 < 0 || v8 >= 1 << v13)
        {
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          JUMPOUT(0x22AA4EE90);
        }
        v15 = (unint64_t)v8 >> 6;
        if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v8 >> 6)) & (1 << v8)) == 0)
          goto LABEL_57;
        if (*(_DWORD *)(v14 + 36) != v10)
          goto LABEL_58;
        v16 = *(_QWORD *)(v14 + 56) + 40 * v8;
        v17 = *(_DWORD *)(v16 + 32);
        v18 = *(_OWORD *)(v16 + 16);
        v110 = *(_OWORD *)v16;
        v111 = v18;
        v112 = v17;
        sub_22AA4F530((uint64_t)&v110);
        sub_22AA4F530((uint64_t)&v110);
        OUTLINED_FUNCTION_3_8();
        OUTLINED_FUNCTION_38_18();
        OUTLINED_FUNCTION_15_32();
        v14 = v91;
        v19 = *(_QWORD *)(v3 - 160);
        *(_QWORD *)(v19 + 16) = 2;
        v19 += 40;
        v20 = v110;
        v21 = v111;
        *(_DWORD *)(v19 + 64) = v112;
        *(_OWORD *)(v19 + 32) = v20;
        *(_OWORD *)(v19 + 48) = v21;
        v13 = *(_BYTE *)(v91 + 32);
        v22 = 1 << v13;
        if (v8 >= 1 << v13)
          goto LABEL_59;
        v23 = *(_QWORD *)(v12 + 8 * v15);
        if ((v23 & (1 << v8)) == 0)
          goto LABEL_60;
        if (*(_DWORD *)(v91 + 36) != v10)
          goto LABEL_61;
        v24 = v23 & (-2 << (v8 & 0x3F));
        if (v24)
        {
          v22 = __clz(__rbit64(v24)) | v8 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          v25 = v15 + 1;
          if (v15 + 1 < (v22 + 63) >> 6)
          {
            v26 = *(_QWORD *)(v12 + 8 * v25);
            if (!v26)
            {
              v27 = (v22 + 63) >> 6;
              v25 = v15 + 2;
              if (v15 + 2 >= v27)
                goto LABEL_19;
              v26 = *(_QWORD *)(v12 + 8 * v25);
              if (!v26)
              {
                while (v15 + 3 < v27)
                {
                  v26 = *(_QWORD *)(v69 + 8 * v15++);
                  if (v26)
                  {
                    v25 = v15 + 2;
                    goto LABEL_18;
                  }
                }
                goto LABEL_19;
              }
            }
LABEL_18:
            v22 = __clz(__rbit64(v26)) + (v25 << 6);
          }
        }
LABEL_19:
        ++v11;
        v10 = v85;
        v8 = v22;
        if (v11 == v7)
        {
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
      }
    }
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_50_9();
    sub_22AA03568(0);
LABEL_27:
    OUTLINED_FUNCTION_30_19();
    v29 = v28;
    OUTLINED_FUNCTION_23();
    v30 = *(_QWORD *)(v93 + 16);
    if (v30)
    {
      *(_QWORD *)(v3 - 160) = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_22_21();
      sub_22AA4F39C(v30);
      v31 = sub_22AA4F4B0(v93);
      v33 = v32;
      v34 = 0;
      v35 = v93 + 64;
      OUTLINED_FUNCTION_36_16();
      while (1)
      {
        if (v31 < 0 || v31 >= 1 << v44)
          goto LABEL_62;
        v45 = (unint64_t)v31 >> 6;
        if ((*(_QWORD *)(v35 + 8 * ((unint64_t)v31 >> 6)) & (1 << v31)) == 0)
          goto LABEL_63;
        if (*(_DWORD *)(v93 + 36) != v33)
          goto LABEL_64;
        v46 = v93;
        v47 = *(_QWORD *)(v93 + 56) + 40 * v31;
        v107 = *(_OWORD *)v47;
        v108 = *(_OWORD *)(v47 + 16);
        v109 = *(_DWORD *)(v47 + 32);
        v48 = OUTLINED_FUNCTION_39_16(v36, v37, v38, v39, v40, v41, v42, v43, v67, v69, v71, (uint64_t)v73, v75, v77, v79, v81, v83, v85, v87,
                v89,
                v91,
                v93,
                v95,
                v97,
                v99,
                v101,
                v103,
                v105,
                *(_OWORD *)v47);
        OUTLINED_FUNCTION_39_16(v48, v49, v50, v51, v52, v53, v54, v55, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88,
          v90,
          v92,
          v94,
          v96,
          v98,
          v100,
          v102,
          v104,
          v106,
          v107);
        OUTLINED_FUNCTION_3_8();
        OUTLINED_FUNCTION_38_18();
        v36 = OUTLINED_FUNCTION_15_32();
        v56 = *(_QWORD *)(v3 - 160);
        *(_QWORD *)(v56 + 16) = 2;
        *(_DWORD *)(v56 + 104) = v109;
        *(_OWORD *)(v56 + 72) = v107;
        *(_OWORD *)(v56 + 88) = v108;
        v44 = *(_BYTE *)(v46 + 32);
        v57 = 1 << v44;
        if (v31 >= 1 << v44)
          goto LABEL_65;
        v58 = *(_QWORD *)(v35 + 8 * v45);
        if ((v58 & (1 << v31)) == 0)
          goto LABEL_66;
        if (*(_DWORD *)(v93 + 36) != v33)
          goto LABEL_67;
        v59 = v58 & (-2 << (v31 & 0x3F));
        if (v59)
        {
          v57 = __clz(__rbit64(v59)) | v31 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          v60 = v45 + 1;
          if (v45 + 1 < (v57 + 63) >> 6)
          {
            v61 = *(_QWORD *)(v35 + 8 * v60);
            if (!v61)
            {
              v62 = (v57 + 63) >> 6;
              v60 = v45 + 2;
              if (v45 + 2 >= v62)
                goto LABEL_41;
              v61 = *(_QWORD *)(v35 + 8 * v60);
              if (!v61)
              {
                while (v45 + 3 < v62)
                {
                  v61 = *(_QWORD *)(v69 + 8 * v45++);
                  if (v61)
                  {
                    v60 = v45 + 2;
                    goto LABEL_40;
                  }
                }
                goto LABEL_41;
              }
            }
LABEL_40:
            v57 = __clz(__rbit64(v61)) + (v60 << 6);
          }
        }
LABEL_41:
        ++v34;
        v33 = v85;
        v31 = v57;
        if (v34 == v30)
        {
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
      }
    }
    sub_22AA03568(0);
LABEL_49:
    OUTLINED_FUNCTION_30_19();
    v64 = v63;
    OUTLINED_FUNCTION_23();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v29 < v64)
    {
      v89 = v77;
      v91 = v93;
      v87 = v79;
    }
    v5 = v81;
  }
  while (v81 != v71);
  swift_bridgeObjectRelease();
  v66 = v89;
  result = v91;
  v1 = v87;
LABEL_55:
  *v73 = result;
  v73[1] = v66;
  v73[2] = v1;
  return result;
}

uint64_t sub_22AA4EED4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = result;
    v6 = *(_QWORD *)(result + 32);
    v5 = *(_QWORD *)(result + 40);
    v8 = *(double *)(result + 48);
    v7 = *(_QWORD *)(result + 56);
    v9 = *(_DWORD *)(result + 64);
    sub_22ABDEAEC();
    result = sub_22ABDEAEC();
    v10 = 1;
LABEL_3:
    v11 = 40 * v10;
    while (1)
    {
      if (v3 == v10)
      {
        result = swift_bridgeObjectRelease();
        *(_QWORD *)a2 = v6;
        *(_QWORD *)(a2 + 8) = v5;
        *(double *)(a2 + 16) = v8;
        *(_QWORD *)(a2 + 24) = v7;
        *(_DWORD *)(a2 + 32) = v9;
        return result;
      }
      if (v10 >= v3)
        break;
      ++v10;
      v12 = v11 + 40;
      v13 = *(double *)(v4 + v11 + 48);
      v11 += 40;
      if (v8 < v13)
      {
        v6 = *(_QWORD *)(v4 + v12 - 8);
        v14 = *(_QWORD *)(v4 + v12);
        v7 = *(_QWORD *)(v4 + v12 + 16);
        v9 = *(_DWORD *)(v4 + v12 + 24);
        sub_22ABDEAEC();
        result = swift_bridgeObjectRelease();
        v5 = v14;
        v8 = v13;
        goto LABEL_3;
      }
    }
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_22AA4EFD0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = result;
    v6 = *(_QWORD *)(result + 32);
    v5 = *(_QWORD *)(result + 40);
    v8 = *(double *)(result + 48);
    v7 = *(_QWORD *)(result + 56);
    v9 = *(_DWORD *)(result + 64);
    sub_22ABDEAEC();
    result = sub_22ABDEAEC();
    v10 = 1;
LABEL_3:
    v11 = 40 * v10;
    while (1)
    {
      if (v3 == v10)
      {
        result = swift_bridgeObjectRelease();
        *(_QWORD *)a2 = v6;
        *(_QWORD *)(a2 + 8) = v5;
        *(double *)(a2 + 16) = v8;
        *(_QWORD *)(a2 + 24) = v7;
        *(_DWORD *)(a2 + 32) = v9;
        return result;
      }
      if (v10 >= v3)
        break;
      ++v10;
      v12 = v11 + 40;
      v13 = *(double *)(v4 + v11 + 48);
      v11 += 40;
      if (v13 < v8)
      {
        v6 = *(_QWORD *)(v4 + v12 - 8);
        v14 = *(_QWORD *)(v4 + v12);
        v7 = *(_QWORD *)(v4 + v12 + 16);
        v9 = *(_DWORD *)(v4 + v12 + 24);
        sub_22ABDEAEC();
        result = swift_bridgeObjectRelease();
        v5 = v14;
        v8 = v13;
        goto LABEL_3;
      }
    }
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_22AA4F0CC(uint64_t a1, float a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  float v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;

  result = sub_22AA4F474(a1, v25);
  v4 = v25[0];
  v5 = v25[1];
  v6 = v25[3];
  v7 = v25[4];
  v8 = (unint64_t)(v25[2] + 64) >> 6;
  v9 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_20;
    }
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v12 >= v8)
      goto LABEL_26;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    v14 = v6 + 1;
    if (!v13)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v8)
        goto LABEL_26;
      v13 = *(_QWORD *)(v5 + 8 * v14);
      if (!v13)
      {
        v14 = v6 + 3;
        if (v6 + 3 >= v8)
          goto LABEL_26;
        v13 = *(_QWORD *)(v5 + 8 * v14);
        if (!v13)
        {
          v14 = v6 + 4;
          if (v6 + 4 >= v8)
            goto LABEL_26;
          v13 = *(_QWORD *)(v5 + 8 * v14);
          if (!v13)
          {
            v14 = v6 + 5;
            if (v6 + 5 >= v8)
              goto LABEL_26;
            v13 = *(_QWORD *)(v5 + 8 * v14);
            if (!v13)
            {
              v15 = v6 + 6;
              while (v15 < v8)
              {
                v13 = *(_QWORD *)(v5 + 8 * v15++);
                if (v13)
                {
                  v14 = v15 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_release();
              return v9;
            }
          }
        }
      }
    }
LABEL_19:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v6 = v14;
LABEL_20:
    v16 = *(_QWORD *)(v4 + 56) + 40 * v11;
    v17 = *(float *)(v16 + 32);
    if (v17 >= a2)
    {
      v23 = *(_QWORD *)v16;
      v24 = *(_QWORD *)(v16 + 8);
      v18 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v16 + 24);
      sub_22ABDEAEC();
      result = swift_isUniquelyReferenced_nonNull_native();
      v26 = v9;
      if ((result & 1) == 0)
      {
        result = sub_22AB4CDE0(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v26;
      }
      v21 = *(_QWORD *)(v9 + 16);
      v20 = *(_QWORD *)(v9 + 24);
      if (v21 >= v20 >> 1)
      {
        result = sub_22AB4CDE0(v20 > 1, v21 + 1, 1);
        v9 = v26;
      }
      *(_QWORD *)(v9 + 16) = v21 + 1;
      v22 = v9 + 40 * v21;
      *(_QWORD *)(v22 + 32) = v23;
      *(_QWORD *)(v22 + 40) = v24;
      *(_QWORD *)(v22 + 48) = v18;
      *(_QWORD *)(v22 + 56) = v19;
      *(float *)(v22 + 64) = v17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA4F2BC()
{
  uint64_t v0;

  PoseSelector.applied(to:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PoseSelector.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFA34();
  sub_22ABDEDC8();
  return 0;
}

uint64_t sub_22AA4F39C(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  int64_t v5;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v3 + 16) <= a1)
      v5 = a1;
    else
      v5 = *(_QWORD *)(v3 + 16);
    return sub_22AB4CDE0(result, v5, 0);
  }
  return result;
}

uint64_t sub_22AA4F400()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if ((result & 1) == 0)
    return sub_22AB4CDE0(0, *(_QWORD *)(v1 + 16) + 1, 1);
  return result;
}

uint64_t sub_22AA4F448(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1))
    return sub_22AB4CDE0(v2 > 1, result + 1, 1);
  return result;
}

uint64_t sub_22AA4F474@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_22AA4F4B0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_22AA4F530(uint64_t a1)
{
  sub_22ABDEAEC();
  return a1;
}

unint64_t sub_22AA4F55C()
{
  unint64_t result;

  result = qword_255B12EB0;
  if (!qword_255B12EB0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for PoseSelectionStrategy, &type metadata for PoseSelectionStrategy);
    atomic_store(result, (unint64_t *)&qword_255B12EB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PoseSelectionStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22AA4F5E4 + 4 * byte_22ABF15D5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22AA4F618 + 4 * byte_22ABF15D0[v4]))();
}

uint64_t sub_22AA4F618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA4F620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA4F628);
  return result;
}

uint64_t sub_22AA4F634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA4F63CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22AA4F640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA4F648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PoseSelectionStrategy()
{
  return &type metadata for PoseSelectionStrategy;
}

uint64_t getEnumTagSinglePayload for PoseSelector(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFC && a1[8])
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 5;
      v2 = v3 - 5;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PoseSelector(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for PoseSelector()
{
  return &type metadata for PoseSelector;
}

unint64_t OUTLINED_FUNCTION_2_42(unint64_t a1)
{
  uint64_t v1;

  return sub_22A9B880C(a1, 1, v1);
}

float OUTLINED_FUNCTION_5_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;

  v4 = (__int128 *)(*(_QWORD *)(v1 + 56) + v0 * v2);
  v6 = *v4;
  v5 = v4[1];
  *(_DWORD *)(v3 - 176) = *((_DWORD *)v4 + 8);
  *(_OWORD *)(v3 - 208) = v6;
  *(_OWORD *)(v3 - 192) = v5;
  return *(float *)(v3 - 176);
}

unint64_t OUTLINED_FUNCTION_6_50(unint64_t a1)
{
  uint64_t v1;

  return sub_22A9B880C(a1, 1, v1);
}

unint64_t OUTLINED_FUNCTION_7_46(unint64_t a1)
{
  uint64_t v1;

  return sub_22A9B880C(a1, 1, v1);
}

__n128 OUTLINED_FUNCTION_8_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  __n128 result;

  v4 = *(_QWORD *)(v1 + 56) + v0 * v2;
  v5 = *(_DWORD *)(v4 + 32);
  result = *(__n128 *)(v4 + 16);
  *(_OWORD *)(v3 - 160) = *(_OWORD *)v4;
  *(__n128 *)(v3 - 144) = result;
  *(_DWORD *)(v3 - 128) = v5;
  return result;
}

__n128 OUTLINED_FUNCTION_13_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  __n128 result;
  __int128 v29;

  sub_22AA4F448(v23);
  *(_QWORD *)(a23 + 16) = v23 + 1;
  v26 = a23 + v23 * v24;
  v27 = *(_DWORD *)(v25 - 176);
  result = *(__n128 *)(v25 - 208);
  v29 = *(_OWORD *)(v25 - 192);
  *(__n128 *)(v26 + 32) = result;
  *(_OWORD *)(v26 + 48) = v29;
  *(_DWORD *)(v26 + 64) = v27;
  return result;
}

__n128 OUTLINED_FUNCTION_14_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  __n128 result;
  __int128 v29;

  sub_22AA4F448(v23);
  *(_QWORD *)(a23 + 16) = v23 + 1;
  v26 = a23 + v23 * v24;
  v27 = *(_DWORD *)(v25 - 128);
  result = *(__n128 *)(v25 - 160);
  v29 = *(_OWORD *)(v25 - 144);
  *(__n128 *)(v26 + 32) = result;
  *(_OWORD *)(v26 + 48) = v29;
  *(_DWORD *)(v26 + 64) = v27;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_32()
{
  uint64_t v0;

  return sub_22AA4F448(*(_QWORD *)(*(_QWORD *)(v0 - 160) + 16));
}

uint64_t OUTLINED_FUNCTION_18_33()
{
  return sub_22AA4F400();
}

uint64_t OUTLINED_FUNCTION_20_30()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_30_19()
{
  uint64_t v0;
  float v1;

  return sub_22AAD7944(v0, v1);
}

void OUTLINED_FUNCTION_31_16(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 + 4) = 1045220557;
}

uint64_t OUTLINED_FUNCTION_34_19@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_22AA4F474(v1, a1);
}

uint64_t OUTLINED_FUNCTION_38_18()
{
  return sub_22AA4F400();
}

uint64_t OUTLINED_FUNCTION_39_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  return sub_22AA4F530((uint64_t)&a29);
}

uint64_t OUTLINED_FUNCTION_41_10()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_42_13()
{
  uint64_t v0;

  return sub_22AA4F530(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_43_11()
{
  uint64_t v0;

  return sub_22AA4F530(v0 - 160);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_22AA4F938()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_22ABDF0F8();
  nullsub_1(v0, v1);
}

uint64_t AnnotatedFeatureProvider.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t AnnotatedFeatureProvider.base.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*AnnotatedFeatureProvider.base.modify())()
{
  return nullsub_1;
}

uint64_t AnnotatedFeatureProvider.annotationColumnID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_33_5();
  v0 = OUTLINED_FUNCTION_3_43();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t AnnotatedFeatureProvider.annotationColumnID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 44);
  swift_getAssociatedTypeWitness();
  v5 = OUTLINED_FUNCTION_33_5();
  return OUTLINED_FUNCTION_81(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 40));
}

uint64_t (*AnnotatedFeatureProvider.annotationColumnID.modify())()
{
  return nullsub_1;
}

uint64_t AnnotatedFeatureProvider.featuresColumnName.getter()
{
  OUTLINED_FUNCTION_50_9();
  return OUTLINED_FUNCTION_3_43();
}

void AnnotatedFeatureProvider.featuresColumnName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_77_5();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_21();
}

uint64_t (*AnnotatedFeatureProvider.featuresColumnName.modify())()
{
  return nullsub_1;
}

uint64_t AnnotatedFeatureProvider.resultsColumnName.getter()
{
  OUTLINED_FUNCTION_50_9();
  return OUTLINED_FUNCTION_3_43();
}

void AnnotatedFeatureProvider.resultsColumnName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_77_5();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_21();
}

uint64_t (*AnnotatedFeatureProvider.resultsColumnName.modify())()
{
  return nullsub_1;
}

uint64_t AnnotatedFeatureProvider.init(_:annotationsColumnName:featuresColumnName:resultsColumnName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t result;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a5;
  v31 = a6;
  v28 = a3;
  v29 = a4;
  v26 = a2;
  v27 = a9;
  swift_getAssociatedTypeWitness();
  v13 = sub_22ABDD3C4();
  v14 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_6();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v26 - v17;
  v19 = *(_QWORD *)(a7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v19 + 16))(a8, a1, a7, v16);
  sub_22ABDD3D0();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, a7);
  v20 = (int *)type metadata accessor for AnnotatedFeatureProvider(0, a7, v27, a10);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a8 + v20[11], v18, v13);
  v22 = (_QWORD *)(a8 + v20[12]);
  v23 = v29;
  *v22 = v28;
  v22[1] = v23;
  v24 = (_QWORD *)(a8 + v20[13]);
  v25 = v31;
  *v24 = v30;
  v24[1] = v25;
  return result;
}

uint64_t type metadata accessor for AnnotatedFeatureProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnotatedFeatureProvider);
}

uint64_t AnnotatedFeatureProvider.fitted(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7[27] = a6;
  v7[28] = v6;
  v7[25] = a4;
  v7[26] = a5;
  v7[23] = a2;
  v7[24] = a3;
  v7[22] = a1;
  v7[29] = a6[3];
  v9 = sub_22ABDD3A0();
  v7[30] = v9;
  v7[31] = a6[4];
  v10 = a6[2];
  v7[32] = v10;
  v7[33] = OUTLINED_FUNCTION_9_36();
  v11 = OUTLINED_FUNCTION_74_7();
  v7[34] = v11;
  v12 = MEMORY[0x22E2E4D80](MEMORY[0x24BDF5F98], v9);
  v7[35] = v12;
  v13 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v11);
  v7[36] = v13;
  v7[10] = v9;
  v7[11] = v11;
  v7[12] = v12;
  v7[13] = v13;
  v14 = sub_22ABDF7E8();
  v7[37] = v14;
  v7[38] = *(_QWORD *)(v14 - 8);
  v7[39] = OUTLINED_FUNCTION_0_0();
  v7[40] = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_66_11();
  v7[41] = swift_task_alloc();
  v7[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0ECF8);
  v7[43] = OUTLINED_FUNCTION_0_0();
  v15 = sub_22ABDD2EC();
  v7[44] = v15;
  v7[45] = *(_QWORD *)(v15 - 8);
  v7[46] = OUTLINED_FUNCTION_0_0();
  v16 = OUTLINED_FUNCTION_9_36();
  v7[47] = v16;
  v7[48] = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_66_11();
  v7[49] = OUTLINED_FUNCTION_29_8();
  v7[50] = OUTLINED_FUNCTION_29_8();
  v7[51] = OUTLINED_FUNCTION_29_8();
  v17 = OUTLINED_FUNCTION_85_7();
  v7[52] = v17;
  v7[53] = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_66_11();
  v7[54] = swift_task_alloc();
  v7[55] = swift_task_alloc();
  v7[56] = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_66_11();
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

void sub_22AA4FE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 264);
  v53 = *(_QWORD *)(v0 + 256);
  v55 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  *(_DWORD *)(v0 + 520) = *(_DWORD *)(*(_QWORD *)(v0 + 216) + 48);
  sub_22ABDD304();
  sub_22ABDD3C4();
  sub_22ABDD3B8();
  sub_22ABDD304();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)OUTLINED_FUNCTION_100();
  v4[2] = v53;
  v4[3] = v3;
  v4[4] = v55;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  v6 = MEMORY[0x22E2E4D80](MEMORY[0x24BDF5FA0], v1);
  v56 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA52894, (uint64_t)v4, v1, v2, v5, v6, MEMORY[0x24BEE3F20], v0 + 128);
  v7 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 192);
  v10 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8);
  v10(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
  OUTLINED_FUNCTION_12_3();
  sub_22A9BCAEC(v9, v7);
  if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
  {
    v12 = *(_QWORD *)(v0 + 320);
    v11 = *(_QWORD *)(v0 + 328);
    v13 = *(_QWORD *)(v0 + 312);
    v57 = *(_QWORD *)(v0 + 304);
    v54 = *(_QWORD *)(v0 + 296);
    v14 = *(_QWORD *)(v0 + 256);
    v49 = *(_QWORD *)(v0 + 248);
    v51 = *(_QWORD *)(v0 + 264);
    v15 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 232);
    sub_22A9BCB34(*(_QWORD *)(v0 + 344));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v15, v14);
    *(_QWORD *)(v0 + 112) = v56;
    sub_22ABE0178();
    swift_bridgeObjectRelease();
    v17 = (_QWORD *)OUTLINED_FUNCTION_46_11();
    v17[2] = v14;
    v17[3] = v16;
    v17[4] = v49;
    v18 = (_QWORD *)OUTLINED_FUNCTION_79_0();
    v18[2] = v14;
    v18[3] = v16;
    v18[4] = v49;
    v18[5] = sub_22AA528A8;
    v19 = OUTLINED_FUNCTION_57_9((uint64_t)v18);
    type metadata accessor for AnnotatedFeature(0, v19, v51, v20);
    v21 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2620], v54);
    v24 = OUTLINED_FUNCTION_68_7((uint64_t)sub_22AA50E04, (uint64_t)v18, v54, v22, MEMORY[0x24BEE4078], v21, MEMORY[0x24BEE40A8], v23);
    *(_QWORD *)(v0 + 496) = v24;
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v13, v54);
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_11_3();
    *(_QWORD *)(v0 + 120) = v24;
    *(_QWORD *)(v0 + 504) = OUTLINED_FUNCTION_41_11(*(int **)(v49 + 40));
    OUTLINED_FUNCTION_86_6();
    OUTLINED_FUNCTION_86_4();
  }
  v25 = *(_QWORD *)(v0 + 264);
  v47 = *(_QWORD *)(v0 + 256);
  v48 = *(_QWORD *)(v0 + 248);
  v50 = *(_QWORD *)(v0 + 416);
  v26 = *(_QWORD *)(v0 + 232);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 32))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352));
  OUTLINED_FUNCTION_70_5();
  sub_22ABDD3B8();
  sub_22ABDD304();
  swift_bridgeObjectRelease();
  v27 = (_QWORD *)OUTLINED_FUNCTION_100();
  v27[2] = v47;
  v27[3] = v26;
  v27[4] = v48;
  v52 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA5207C, (uint64_t)v27, v50, v25, v5, v6, MEMORY[0x24BEE3F20], v0 + 136);
  v40 = *(_QWORD *)(v0 + 320);
  v41 = *(_QWORD *)(v0 + 336);
  v45 = *(_QWORD *)(v0 + 296);
  v28 = *(_QWORD *)(v0 + 256);
  v43 = *(_QWORD *)(v0 + 264);
  v58 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 224);
  v42 = *(_QWORD *)(v0 + 232);
  v10(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 416));
  OUTLINED_FUNCTION_12_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v41, v29, v28);
  *(_QWORD *)(v0 + 144) = v56;
  sub_22ABE0178();
  swift_bridgeObjectRelease();
  v30 = (_QWORD *)OUTLINED_FUNCTION_46_11();
  v30[2] = v28;
  v30[3] = v42;
  v30[4] = v58;
  v31 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v31[2] = v28;
  v31[3] = v42;
  v31[4] = v58;
  v31[5] = sub_22AA528A8;
  v31[6] = v30;
  v32 = sub_22ABDF5D8();
  v44 = type metadata accessor for AnnotatedFeature(0, v32, v43, v33);
  v46 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2620], v45);
  v35 = sub_22A9C2540((uint64_t)sub_22AA50E04, (uint64_t)v31, v45, v44, MEMORY[0x24BEE4078], v46, MEMORY[0x24BEE40A8], v34);
  OUTLINED_FUNCTION_82_6();
  swift_release();
  OUTLINED_FUNCTION_17();
  *(_QWORD *)(v0 + 152) = v35;
  *(_QWORD *)(v0 + 160) = v52;
  sub_22ABE0178();
  swift_bridgeObjectRelease();
  v36 = (_QWORD *)OUTLINED_FUNCTION_46_11();
  v36[2] = v28;
  v36[3] = v42;
  v36[4] = v58;
  v37 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v37[2] = v28;
  v37[3] = v42;
  v37[4] = v58;
  v37[5] = sub_22AA520A4;
  v37[6] = v36;
  v39 = sub_22A9C2540((uint64_t)sub_22AA50E04, (uint64_t)v37, v45, v44, MEMORY[0x24BEE4078], v46, MEMORY[0x24BEE40A8], v38);
  *(_QWORD *)(v0 + 472) = v39;
  OUTLINED_FUNCTION_82_6();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_17();
  *(_QWORD *)(v0 + 168) = v39;
  *(_QWORD *)(v0 + 480) = OUTLINED_FUNCTION_41_11(*(int **)(v58 + 48));
  sub_22ABDF0F8();
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA505F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *v1 = v3;
  v1[1] = sub_22AA50650;
  v7 = v3[50];
  v8 = v3[31];
  v9 = v3[25];
  v10 = v3[26];
  v5[3] = v3[32];
  v5[4] = v8;
  v5[2] = a1;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(v5 - 10))(v7, *(v5 - 11), v4, v9, v10, v2, v2);
}

uint64_t sub_22AA50650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v1 + 488) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_35_13();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_18_34();
}

uint64_t sub_22AA506D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __n128 *inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;

  v1 = *(_QWORD *)(v0 + 360);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 448));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 384) + 32))(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376));
  if ((sub_22AA2F904() & 1) == 0)
    OUTLINED_FUNCTION_33_21((uint64_t)"AnnotatedFeatureProvider");
  OUTLINED_FUNCTION_0_41();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_50_13();
  OUTLINED_FUNCTION_6_51();
  v2 = OUTLINED_FUNCTION_87_6();
  OUTLINED_FUNCTION_8_35(v2, v3);
  OUTLINED_FUNCTION_60_10();
  OUTLINED_FUNCTION_39_17();
  OUTLINED_FUNCTION_52_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B12EE8);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_13_41(inited, (__n128)xmmword_22ABE8E30, v5, v6, v7, v8, v9, v10, v11, v37, v41);
  OUTLINED_FUNCTION_50_9();
  v12 = OUTLINED_FUNCTION_37_17();
  v20 = OUTLINED_FUNCTION_23_31(v12, v13, v14, v15, v16, v17, v18, v19, v38);
  OUTLINED_FUNCTION_40_14(v20, v21, v22, v23, v24, v25, v26, v27, v39, v42, v44, v46, v48, v50, v52, v53);
  v28 = OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_20_31(v28, v29, v30, v31, v32, v33, v34, v35, v40, v43, v45, v47, v49, v51);
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_174();
  OUTLINED_FUNCTION_48_8();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_11_40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA50838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 512) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_51_15();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AA508B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 *inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 384) + 32))(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 376));
  if ((sub_22AA2F904() & 1) == 0)
    OUTLINED_FUNCTION_33_21((uint64_t)"AnnotatedFeatureProvider");
  OUTLINED_FUNCTION_0_41();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_50_13();
  OUTLINED_FUNCTION_6_51();
  v1 = OUTLINED_FUNCTION_87_6();
  OUTLINED_FUNCTION_8_35(v1, v2);
  OUTLINED_FUNCTION_60_10();
  OUTLINED_FUNCTION_39_17();
  OUTLINED_FUNCTION_52_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B12EE8);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_13_41(inited, (__n128)xmmword_22ABE8E30, v4, v5, v6, v7, v8, v9, v10, v36, v40);
  OUTLINED_FUNCTION_50_9();
  v11 = OUTLINED_FUNCTION_37_17();
  v19 = OUTLINED_FUNCTION_23_31(v11, v12, v13, v14, v15, v16, v17, v18, v37);
  OUTLINED_FUNCTION_40_14(v19, v20, v21, v22, v23, v24, v25, v26, v38, v41, v43, v45, v47, v49, v51, v52);
  v27 = OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_20_31(v27, v28, v29, v30, v31, v32, v33, v34, v39, v42, v44, v46, v48, v50);
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_174();
  OUTLINED_FUNCTION_48_8();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_11_40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA50A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_23_5();
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 448) + 8);
  v4(*(_QWORD *)(v0 + 456), v3);
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v4(v1, v3);
  OUTLINED_FUNCTION_7_47();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA50A94()
{
  uint64_t v0;

  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 448));
  OUTLINED_FUNCTION_7_47();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA50B00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_22ABDF5D8();
  v9 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_22();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, a1, v8);
  if (__swift_getEnumTagSinglePayload(v3, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a3, v3, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v8);
  sub_22A9B7B50();
  v11 = swift_allocError();
  *(_QWORD *)v12 = 0xD000000000000018;
  *(_QWORD *)(v12 + 8) = 0x800000022ABF16B0;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 1;
  result = swift_willThrow(v11);
  *a2 = v11;
  return result;
}

uint64_t sub_22AA50C4C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  sub_22ABDF5D8();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_22AA50CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - v9;
  v11 = sub_22ABDF5D8();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))((char *)&v17 - v13, a1, v11, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, AssociatedTypeWitness);
  return AnnotatedFeature.init(feature:annotation:)((uint64_t)v14, (uint64_t)v10, v11, AssociatedTypeWitness, a3);
}

uint64_t sub_22AA50E04(uint64_t a1, uint64_t a2)
{
  return sub_22AA5210C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_22AA50C4C);
}

void AnnotatedFeatureProvider.encode(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_73_4(v2, v3);
  v5 = v4;
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 32);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_53_14();
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_22();
  v10 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_9_15();
  v12 = *v5;
  OUTLINED_FUNCTION_46_14(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  OUTLINED_FUNCTION_25_22();
  MEMORY[0x22E2E2DE8](&v13, v12, MEMORY[0x24BEE0D00], v0, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v1, 1, v0) == 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_24_26(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v8 + 56));
    OUTLINED_FUNCTION_59_8(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    OUTLINED_FUNCTION_34_20();
    OUTLINED_FUNCTION_16();
  }
}

void AnnotatedFeatureProvider.decode(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t inited;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 16);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6();
  v11 = MEMORY[0x24BDAC7A8](v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v8 + 64))(v5, v9, v8, v11);
  if (!v1)
  {
    OUTLINED_FUNCTION_38_19();
    OUTLINED_FUNCTION_54_9();
    OUTLINED_FUNCTION_15_33();
    v12 = sub_22ABDF020();
    v25 = v7;
    v14 = OUTLINED_FUNCTION_75_7(v12, v13);
    v16 = (uint64_t *)(v0 + v15);
    v17 = v16[1];
    v24 = *v16;
    *v18 = *v16;
    v18[1] = v17;
    OUTLINED_FUNCTION_30_20(v14);
    OUTLINED_FUNCTION_80_7();
    OUTLINED_FUNCTION_29();
    v19 = sub_22ABDEAC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B12EE8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(inited + 32) = v24;
    *(_QWORD *)(inited + 40) = v17;
    v21 = (_QWORD *)(v0 + *(int *)(v3 + 52));
    v22 = v21[1];
    *(_QWORD *)(inited + 48) = *v21;
    *(_QWORD *)(inited + 56) = v22;
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_39_17();
    v23 = sub_22ABDEAC8();
    OUTLINED_FUNCTION_29_21();
    OUTLINED_FUNCTION_76_8();
    ColumnSelectorTransformer.init(transformers:columnMapping:)(v19, v23, v25);
  }
  OUTLINED_FUNCTION_16();
}

void (*sub_22AA510E8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AnnotatedFeatureProvider.annotationColumnID.modify();
  return sub_22A9B4798;
}

uint64_t sub_22AA51134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_22A99DE80;
  return AnnotatedFeatureProvider.fitted(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, a6);
}

void sub_22AA511C4()
{
  AnnotatedFeatureProvider.encode(_:to:)();
}

void sub_22AA511D8()
{
  AnnotatedFeatureProvider.decode(from:)();
}

uint64_t AnnotatedFeatureProvider<>.makeTransformer()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t inited;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a1 + 16);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_0();
  sub_22ABDFD88();
  OUTLINED_FUNCTION_6_51();
  OUTLINED_FUNCTION_87_6();
  v7 = (uint64_t *)(v3 + *(int *)(a1 + 48));
  v8 = *v7;
  v9 = v7[1];
  *v10 = *v7;
  v10[1] = v9;
  v11 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  OUTLINED_FUNCTION_29();
  v11(v5, a2);
  sub_22AA4F938();
  v12 = sub_22ABDEAC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B12EE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  v14 = (_QWORD *)(v3 + *(int *)(a1 + 52));
  v15 = v14[1];
  *(_QWORD *)(inited + 48) = *v14;
  *(_QWORD *)(inited + 56) = v15;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_50_9();
  v16 = sub_22ABDEAC8();
  swift_getAssociatedConformanceWitness();
  return ColumnSelectorTransformer.init(transformers:columnMapping:)(v12, v16, a3);
}

uint64_t AnnotatedFeatureProvider<>.update(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7[16] = a6;
  v7[17] = v6;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  v7[18] = *(_QWORD *)(a5 + 24);
  v10 = sub_22ABDD3A0();
  v7[19] = v10;
  v7[20] = *(_QWORD *)(a6 + 8);
  v11 = *(_QWORD *)(a5 + 16);
  v7[21] = v11;
  v7[22] = OUTLINED_FUNCTION_9_36();
  v12 = OUTLINED_FUNCTION_74_7();
  v7[23] = v12;
  v13 = MEMORY[0x22E2E4D80](MEMORY[0x24BDF5F98], v10);
  v7[24] = v13;
  v14 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v12);
  v7[25] = v14;
  v7[2] = v10;
  v7[3] = v12;
  v7[4] = v13;
  v7[5] = v14;
  v15 = sub_22ABDF7E8();
  v7[26] = v15;
  v7[27] = *(_QWORD *)(v15 - 8);
  v7[28] = OUTLINED_FUNCTION_0_0();
  v7[29] = *(_QWORD *)(v11 - 8);
  v7[30] = OUTLINED_FUNCTION_0_0();
  v7[31] = OUTLINED_FUNCTION_9_36();
  sub_22ABDF5D8();
  v7[32] = OUTLINED_FUNCTION_0_0();
  v16 = OUTLINED_FUNCTION_85_7();
  v7[33] = v16;
  v7[34] = *(_QWORD *)(v16 - 8);
  v7[35] = OUTLINED_FUNCTION_0_0();
  v7[36] = *(_QWORD *)(v10 - 8);
  v7[37] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

void sub_22AA514F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0[33];
  v2 = v0[22];
  v27 = v0[21];
  v3 = v0[18];
  v25 = v0[16];
  v4 = (_QWORD *)(v0[17] + *(int *)(v0[15] + 48));
  OUTLINED_FUNCTION_70_5();
  sub_22ABDD3C4();
  sub_22ABDD3B8();
  OUTLINED_FUNCTION_70_5();
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)OUTLINED_FUNCTION_100();
  v5[2] = v27;
  v5[3] = v3;
  v5[4] = v25;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  v7 = MEMORY[0x22E2E4D80](MEMORY[0x24BDF5FA0], v1);
  v8 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA520C0, (uint64_t)v5, v1, v2, v6, v7, MEMORY[0x24BEE3F20], (uint64_t)(v0 + 8));
  v9 = v0[29];
  v10 = v0[30];
  v28 = v0[27];
  v26 = v0[26];
  v22 = v0[28];
  v11 = v0[21];
  v12 = v0[18];
  v13 = v0[17];
  v23 = v0[16];
  v24 = v0[22];
  OUTLINED_FUNCTION_30_0(v0[34]);
  OUTLINED_FUNCTION_13_3();
  v0[38] = *v4;
  v0[39] = v4[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v13, v11);
  v0[9] = v8;
  sub_22ABDEAEC();
  sub_22ABE0178();
  swift_bridgeObjectRelease();
  v14 = (_QWORD *)OUTLINED_FUNCTION_46_11();
  v14[2] = v11;
  v14[3] = v12;
  v14[4] = v23;
  v15 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v15[2] = v11;
  v15[3] = v12;
  v15[4] = v23;
  v15[5] = sub_22AA520E4;
  v16 = OUTLINED_FUNCTION_57_9((uint64_t)v15);
  type metadata accessor for AnnotatedFeature(0, v16, v24, v17);
  v18 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2620], v26);
  v21 = OUTLINED_FUNCTION_68_7((uint64_t)sub_22AA520F0, (uint64_t)v15, v26, v19, MEMORY[0x24BEE4078], v18, MEMORY[0x24BEE40A8], v20);
  v0[40] = v21;
  OUTLINED_FUNCTION_24_18(v22, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_11_3();
  v0[10] = v21;
  v0[41] = swift_task_alloc();
  OUTLINED_FUNCTION_86_6();
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA517EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD);

  *v4 = v3;
  v4[1] = sub_22AA5183C;
  return v6(v3[32], v1, v3[13], v3[14], v2, a1, v3[21], v3[20]);
}

uint64_t sub_22AA5183C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 232);
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_18_34();
}

uint64_t sub_22AA518D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_23_5();
  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 256), 0, 1, *(_QWORD *)(v0 + 248));
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  sub_22ABDEB28();
  sub_22ABDEB64();
  OUTLINED_FUNCTION_24_18(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_82_3();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA51990()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 288));
  OUTLINED_FUNCTION_22_30();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA519EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_22ABDF5D8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v15 - v10, a1, v7, v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a3, v11, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_22A9B7B50();
  v12 = swift_allocError();
  *(_QWORD *)v13 = 0xD000000000000018;
  *(_QWORD *)(v13 + 8) = 0x800000022ABF16B0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 32) = 1;
  result = swift_willThrow(v12);
  *a2 = v12;
  return result;
}

uint64_t sub_22AA51B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v16 - v8;
  v10 = sub_22ABDF5D8();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v16 - v12, a1, v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, AssociatedTypeWitness);
  return AnnotatedFeature.init(feature:annotation:)((uint64_t)v13, (uint64_t)v9, v10, AssociatedTypeWitness, a3);
}

uint64_t sub_22AA51C44(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  sub_22ABDF5D8();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

void AnnotatedFeatureProvider<>.encodeWithOptimizer(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_73_4(v2, v3);
  v5 = v4;
  v7 = v6;
  v9 = *(_QWORD *)(v8 + 16);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_53_14();
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_22();
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_9_15();
  v13 = *v5;
  OUTLINED_FUNCTION_46_14(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  OUTLINED_FUNCTION_25_22();
  MEMORY[0x22E2E2DE8](&v14, v13, MEMORY[0x24BEE0D00], v0, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v1, 1, v0) == 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_24_26(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 32));
    OUTLINED_FUNCTION_59_8(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    OUTLINED_FUNCTION_34_20();
    OUTLINED_FUNCTION_16();
  }
}

void AnnotatedFeatureProvider<>.decodeWithOptimizer(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t inited;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(v4 + 16);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6();
  v10 = MEMORY[0x24BDAC7A8](v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v3 + 40))(v7, v8, v3, v10);
  if (!v1)
  {
    OUTLINED_FUNCTION_38_19();
    OUTLINED_FUNCTION_54_9();
    OUTLINED_FUNCTION_15_33();
    v11 = sub_22ABDF020();
    v13 = OUTLINED_FUNCTION_75_7(v11, v12);
    v15 = (uint64_t *)(v0 + v14);
    v24 = *v15;
    v16 = v15[1];
    *v17 = *v15;
    v17[1] = v16;
    OUTLINED_FUNCTION_30_20(v13);
    OUTLINED_FUNCTION_80_7();
    sub_22ABDEAEC();
    sub_22ABDEAC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B12EE8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(inited + 32) = v24;
    *(_QWORD *)(inited + 40) = v16;
    v19 = (_QWORD *)(v0 + *(int *)(v5 + 52));
    v20 = v19[1];
    *(_QWORD *)(inited + 48) = *v19;
    *(_QWORD *)(inited + 56) = v20;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_50_9();
    sub_22ABDEAC8();
    OUTLINED_FUNCTION_29_21();
    OUTLINED_FUNCTION_76_8();
    v21 = OUTLINED_FUNCTION_3_43();
    ColumnSelectorTransformer.init(transformers:columnMapping:)(v21, v22, v23);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA51FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return AnnotatedFeatureProvider<>.makeTransformer()(a1, *(_QWORD *)(a2 - 8), a3);
}

uint64_t sub_22AA51FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;

  v12 = *(_QWORD *)(a6 - 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_22A99E4B4;
  return AnnotatedFeatureProvider<>.update(_:with:eventHandler:)(a1, a2, a3, a4, a5, v12);
}

void sub_22AA5204C()
{
  AnnotatedFeatureProvider<>.encodeWithOptimizer(_:to:)();
}

void sub_22AA52064()
{
  AnnotatedFeatureProvider<>.decodeWithOptimizer(from:)();
}

uint64_t sub_22AA5207C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AA50B00(a1, a2, a3);
}

uint64_t sub_22AA520A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AA50CFC(a1, a2, a3);
}

uint64_t sub_22AA520C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AA519EC(a1, a2, a3);
}

uint64_t sub_22AA520E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AA51B40(a1, a2, a3);
}

uint64_t sub_22AA520F0(uint64_t a1, uint64_t a2)
{
  return sub_22AA5210C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_22AA51C44);
}

uint64_t sub_22AA5210C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[5], v3[6], v3[2], v3[3], v3[4], a2);
}

_UNKNOWN **sub_22AA52134()
{
  return &protocol witness table for ColumnSelectorTransformer<A, B>;
}

uint64_t sub_22AA52140(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AnnotatedFeatureProvider<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AA5216C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    v0 = sub_22ABDD3C4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_22AA5222C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, _QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a1, a2, *(_QWORD *)(a3 + 16));
    v7 = *(int *)(a3 + 44);
    v8 = (char *)v4 + v7;
    v9 = (char *)a2 + v7;
    swift_getAssociatedTypeWitness();
    v10 = sub_22ABDD3C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 48);
    v12 = *(int *)(a3 + 52);
    v13 = (uint64_t *)((char *)v4 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)v4 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    sub_22ABDEAEC();
    sub_22ABDEAEC();
  }
  return v4;
}

uint64_t sub_22AA5232C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = a1 + *(int *)(a2 + 44);
  swift_getAssociatedTypeWitness();
  v5 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA523CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  swift_getAssociatedTypeWitness();
  v9 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 48);
  v11 = *(int *)(a3 + 52);
  v12 = (_QWORD *)(a1 + v10);
  v13 = (_QWORD *)(a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (_QWORD *)(a1 + v11);
  v16 = (_QWORD *)(a2 + v11);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA52498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  swift_getAssociatedTypeWitness();
  v9 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 48);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v13 = *(int *)(a3 + 52);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA5258C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  swift_getAssociatedTypeWitness();
  v9 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 52);
  *(_OWORD *)(a1 + *(int *)(a3 + 48)) = *(_OWORD *)(a2 + *(int *)(a3 + 48));
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

uint64_t sub_22AA5263C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  swift_getAssociatedTypeWitness();
  v9 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 48);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = *(int *)(a3 + 52);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA52710()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA5271C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v5 = a1;
  v6 = *(_QWORD *)(a3 + 16);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  swift_getAssociatedTypeWitness();
  v7 = OUTLINED_FUNCTION_33_5();
  if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) == (_DWORD)a2)
  {
    v6 = v7;
    a1 = v5 + *(int *)(a3 + 44);
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  v9 = *(_QWORD *)(v5 + *(int *)(a3 + 48) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22AA527D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22AA527DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v4 = a2;
  v5 = a1;
  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 84) == a3)
  {
    v6 = a2;
    v7 = *(_QWORD *)(a4 + 16);
LABEL_5:
    __swift_storeEnumTagSinglePayload(a1, a2, v6, v7);
    return;
  }
  swift_getAssociatedTypeWitness();
  v10 = OUTLINED_FUNCTION_33_5();
  if (*(_DWORD *)(*(_QWORD *)(v10 - 8) + 84) == a3)
  {
    v7 = v10;
    a1 = v5 + *(int *)(a4 + 44);
    a2 = v4;
    v6 = v4;
    goto LABEL_5;
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 48) + 8) = (v4 - 1);
  OUTLINED_FUNCTION_21();
}

uint64_t sub_22AA52894@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AA5207C(a1, a2, a3);
}

void OUTLINED_FUNCTION_0_41()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[42];
  *(_QWORD *)(v1 - 104) = v0[43];
  *(_QWORD *)(v1 - 96) = v2;
  v3 = v0[39];
  *(_QWORD *)(v1 - 88) = v0[41];
  *(_QWORD *)(v1 - 80) = v3;
}

uint64_t OUTLINED_FUNCTION_3_47()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_6_51()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_7_47()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_8_35(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v7 = (char *)a2 + *(int *)(v4 + 48);
  v8 = *v6;
  v9 = v6[1];
  *a2 = v8;
  a2[1] = v9;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v3);
}

uint64_t OUTLINED_FUNCTION_9_36()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_11_40(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_13_41(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;

  a1[1] = a2;
  a1[2].n128_u64[0] = v12;
  a1[2].n128_u64[1] = v13;
  v14 = (unint64_t *)(v11 + *(int *)(a11 + 52));
  v15 = v14[1];
  a1[3].n128_u64[0] = *v14;
  a1[3].n128_u64[1] = v15;
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_15_33()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_18_34()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_20_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14)
{
  uint64_t v14;
  uint64_t v15;

  return ColumnSelectorTransformer.init(transformers:columnMapping:)(v15, v14, a14);
}

uint64_t OUTLINED_FUNCTION_22_30()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_23_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 8))(v10, v9);
}

uint64_t OUTLINED_FUNCTION_24_26@<X0>(uint64_t (*a1)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, *(_QWORD *)(v3 - 104), v1);
}

uint64_t OUTLINED_FUNCTION_25_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v0 + *(int *)(v1 + 48));
  v4 = v3[1];
  *(_QWORD *)(v2 - 96) = *v3;
  *(_QWORD *)(v2 - 88) = v4;
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_29_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_30_20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 72) + 16))(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_33_21@<X0>(uint64_t a1@<X8>)
{
  return sub_22AA2F98C(0xD000000000000018, (a1 - 32) | 0x8000000000000000);
}

uint64_t OUTLINED_FUNCTION_34_20()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_35_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_37_17()
{
  return sub_22ABDEAC8();
}

uint64_t OUTLINED_FUNCTION_38_19()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_39_17()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_40_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a15 + 8))(a16, a11);
}

uint64_t OUTLINED_FUNCTION_41_11@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = (char *)a1 + *a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_46_14@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_50_13()
{
  return sub_22ABDFD88();
}

uint64_t OUTLINED_FUNCTION_51_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_14()
{
  return sub_22ABDEAC8();
}

uint64_t OUTLINED_FUNCTION_53_14()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_54_9()
{
  return sub_22ABDFD88();
}

uint64_t OUTLINED_FUNCTION_57_9(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 48) = v1;
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_59_8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_60_10()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  sub_22AA4F938();
  return result;
}

uint64_t OUTLINED_FUNCTION_68_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return sub_22A9C2540(a1, a2, a3, v8, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_70_5()
{
  return sub_22ABDD304();
}

void OUTLINED_FUNCTION_73_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 72) = v2;
  *(_QWORD *)(v3 - 104) = a2;
}

uint64_t OUTLINED_FUNCTION_74_7()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_75_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return a2 + *(int *)(v2 + 48);
}

uint64_t OUTLINED_FUNCTION_76_8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_77_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_80_7()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  sub_22AA4F938();
  return result;
}

uint64_t OUTLINED_FUNCTION_82_6()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_83_7()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_85_7()
{
  return sub_22ABDD3A0();
}

uint64_t OUTLINED_FUNCTION_86_6()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_87_6()
{
  return sub_22ABDF020();
}

uint64_t FullyConnectedNetworkRegressor.decode(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD **v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v7 = *v3;
  v8 = type metadata accessor for FullyConnectedNetworkRegressorModel(0, a2[2], a2[3], a2[4]);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v9);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
  v12 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkRegressorModel<A>, v8);
  result = v11(v8, v8, v12, v9, v10);
  if (!v4)
  {
    sub_22ABDEAEC();
    v14 = sub_22A99E738();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA88);
    v15 = sub_22ABDD7D8();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_22ABE8E30;
    v19 = v18 + v17;
    v20 = OUTLINED_FUNCTION_57();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 16))(v19, a3 + *(int *)(v20 + 20), v15);
    sub_22A9A07AC();
    sub_22A99E8C0(v14);
    swift_bridgeObjectRelease();
    v21 = sub_22A99E9B0(1);
    v25 = (_QWORD *)sub_22A99EA98(v21, v22, v23, v24);
    v26 = sub_22A99EB90(v25, v7);
    result = swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      v27 = sub_22ABDF830();
      OUTLINED_FUNCTION_53();
      v29 = v28;
      sub_22ABDF824();
      v30 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D8], v27);
      swift_willThrow(v30);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a3, v8);
    }
  }
  return result;
}

void FullyConnectedNetworkRegressor.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;

  v39 = OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v42 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B12FD8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v43 = v9;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F818);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v40 = v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - v13;
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v15);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
  v18 = type metadata accessor for FullyConnectedNetworkRegressorModel(0, a3[2], a3[3], a3[4]);
  v19 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkRegressorModel<A>, v18);
  v20 = v44;
  v17(a1, v18, v19, v15, v16);
  if (!v20)
  {
    v21 = v40;
    v22 = v42;
    v23 = v43;
    v44 = a2;
    sub_22AA46D10(a1 + *(int *)(v18 + 44), v43, &qword_255B12FD8);
    if (__swift_getEnumTagSinglePayload(v23, 1, v41) == 1)
    {
      sub_22A9A0C1C(v23, &qword_255B12FD8);
    }
    else
    {
      v24 = (uint64_t)v14;
      sub_22AA5325C(v23, (uint64_t)v14);
      sub_22AA46D10((uint64_t)v14, v21, &qword_255B0F818);
      sub_22A9AF2A4(a1, v22);
      v25 = *(_DWORD *)v21;
      if (*(float *)(v21 + 4) <= 0.0)
      {
        sub_22A9A0B10(v22, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
        sub_22A9A0C1C(v21, &qword_255B0F818);
        v34 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        OUTLINED_FUNCTION_22_21();
        v26 = v21;
        v27 = sub_22A99E738();
        OUTLINED_FUNCTION_23();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA88);
        v28 = sub_22ABDD7D8();
        v29 = *(_QWORD *)(v28 - 8);
        v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_22ABE8E30;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 16))(v31 + v30, v22 + *(int *)(v39 + 20), v28);
        v45 = v27;
        sub_22A9A07AC();
        MEMORY[0x24BDAC7A8](v32);
        *(&v39 - 2) = v26;
        *(&v39 - 1) = v22;
        sub_22A9FBFBC();
        v34 = v33;
        OUTLINED_FUNCTION_23();
        sub_22A9A0B10(v22, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
        sub_22A9A0C1C(v26, &qword_255B0F818);
      }
      v45 = 0;
      v46 = v25;
      v47 = v34;
      v35 = *(_QWORD *)(v44 + 24);
      v36 = *(_QWORD *)(v44 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v44, v35);
      v37 = *(void (**)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v36 + 16);
      v38 = sub_22AA532A4();
      v37(&v45, &type metadata for SGDStorage, v38, v35, v36);
      sub_22A9A0C1C(v24, &qword_255B0F818);
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_12_4();
}

uint64_t sub_22AA5325C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22AA532A4()
{
  unint64_t result;

  result = qword_255B12FE0;
  if (!qword_255B12FE0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB2F4, &type metadata for SGDStorage);
    atomic_store(result, (unint64_t *)&qword_255B12FE0);
  }
  return result;
}

void sub_22AA532E0(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_22A9CA860(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

void FullyConnectedNetworkRegressor.decodeWithOptimizer(from:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (**v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (**v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD, _QWORD, _QWORD);
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD v95[2];
  void (**v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  void (*v100)(char *, uint64_t, uint64_t);
  unint64_t v101;
  void (*v102)(_QWORD, _QWORD, _QWORD);
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (**v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;

  v119 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAA8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v109 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v114 = v9;
  OUTLINED_FUNCTION_36();
  v118 = sub_22ABDDA0C();
  v113 = *(_QWORD *)(v118 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v117 = v11;
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v112 = *(_QWORD *)(v120 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  v110 = v13;
  MEMORY[0x24BDAC7A8](v14);
  v116 = (char *)v95 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_0();
  v115 = v17;
  OUTLINED_FUNCTION_36();
  v130 = sub_22ABDDB08();
  v121 = *(_QWORD *)(v130 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_0();
  v129 = v19;
  OUTLINED_FUNCTION_36();
  v111 = type metadata accessor for SGDDenseLayer();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_0();
  v124 = v21;
  OUTLINED_FUNCTION_36();
  v22 = sub_22ABDD7D8();
  v126 = *(_QWORD *)(v22 - 8);
  v127 = (uint64_t *)v22;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_0();
  v125 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B12FE8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_0();
  v123 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_0();
  v122 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F818);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)v95 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for FullyConnectedNetworkRegressorModel(0, a2[2], a2[3], a2[4]);
  v37 = *(void (***)(char *, uint64_t))(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)v95 - v38;
  v40 = *(_DWORD *)(v3 + 8);
  v41 = *(_QWORD *)(v3 + 16);
  v42 = *(_DWORD *)(v3 + 24);
  v43 = *(_QWORD *)(v3 + 32);
  v44 = *(_QWORD *)(v3 + 40);
  v132 = *(_QWORD *)v3;
  LODWORD(v133) = v40;
  v134 = v41;
  LODWORD(v135) = v42;
  v136 = v43;
  v137 = v44;
  v138 = *(_OWORD *)(v3 + 48);
  v45 = v128;
  FullyConnectedNetworkRegressor.decode(from:)(a1, a2, (uint64_t)v95 - v38);
  if (!v45)
  {
    v46 = (uint64_t)v31;
    v105 = v32;
    v106 = v35;
    v128 = v39;
    v108 = v37;
    v107 = v36;
    v47 = a1;
    v49 = *(_QWORD *)(a1 + 24);
    v48 = *(_QWORD *)(a1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v47, v49);
    v50 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v48 + 16);
    v51 = sub_22AA53DE8();
    v50(&v132, &type metadata for SGDStorage, &type metadata for SGDStorage, v51, v49, v48);
    v52 = v134;
    v53 = sub_22ABDD5D4();
    __swift_storeEnumTagSinglePayload(v46, 1, 1, v53);
    v54 = sub_22ABDD598();
    __swift_storeEnumTagSinglePayload(v122, 1, 1, v54);
    v55 = OUTLINED_FUNCTION_57();
    v56 = sub_22A9AF2E8();
    v57 = (void (**)(char *, uint64_t))v128;
    sub_22ABDD67C();
    OUTLINED_FUNCTION_22_21();
    v58 = sub_22A99E738();
    v122 = 0;
    OUTLINED_FUNCTION_23();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA88);
    v59 = v126;
    v60 = (*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
    v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_22ABE8E30;
    v62 = v127;
    (*(void (**)(uint64_t, char *, uint64_t *))(v59 + 16))(v61 + v60, (char *)v57 + *(int *)(v55 + 20), v127);
    v131 = v58;
    sub_22A9A07AC();
    v132 = v131;
    v133 = 0;
    v134 = v52;
    v135 = 0;
    LOBYTE(v136) = 0;
    OUTLINED_FUNCTION_11_41();
    v63 = v61;
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB30);
    OUTLINED_FUNCTION_15_34(v64);
    if (!v65)
    {
      v103 = v56;
      v104 = v55;
      v70 = v124;
      v69 = v125;
      OUTLINED_FUNCTION_17_29();
      v102 = v71;
      while (1)
      {
        v72 = v63 + *(int *)(v61 + 48);
        v71(v69, v63, v62);
        sub_22AA53E24(v72, v70);
        sub_22ABDD7B4();
        v73 = sub_22ABDDAF0();
        v74 = v60;
        v75 = v73;
        v52 = *(_QWORD *)(v52 + 8);
        OUTLINED_FUNCTION_13_42(v74);
        v76 = OUTLINED_FUNCTION_3_48();
        v77 = *(_QWORD *)(v76 + 16);
        if (!v77)
        {
LABEL_27:
          OUTLINED_FUNCTION_23();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22A9A0888();
          v93 = OUTLINED_FUNCTION_53();
          *v94 = 0xD000000000000025;
          v94[1] = 0x800000022ABE1130;
          swift_willThrow(v93);
          sub_22A9A0B10(v124, (uint64_t (*)(_QWORD))type metadata accessor for SGDDenseLayer);
          (*(void (**)(uint64_t, uint64_t *))(v59 + 8))(v69, v62);
          sub_22A9A0C1C((uint64_t)v106, &qword_255B0F818);
          v57[1](v128, v107);
          goto LABEL_28;
        }
        OUTLINED_FUNCTION_22_21();
        v78 = (uint64_t *)(v76 + 48);
        while (1)
        {
          v69 = *v78;
          sub_22ABDEAEC();
          swift_retain();
          v79 = v129;
          swift_getAtKeyPath();
          v80 = sub_22ABDDAF0();
          OUTLINED_FUNCTION_13_42(v79);
          if (v80 == v75)
            break;
          OUTLINED_FUNCTION_15_10();
          OUTLINED_FUNCTION_30();
          v78 += 3;
          if (!--v77)
          {
            OUTLINED_FUNCTION_23();
            v59 = v126;
            v62 = v127;
            v69 = v125;
            v57 = v108;
            goto LABEL_27;
          }
        }
        OUTLINED_FUNCTION_30();
        swift_bridgeObjectRelease_n();
        v59 = v112;
        v81 = (uint64_t)v116;
        v70 = v124;
        v62 = (uint64_t *)v120;
        v100 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
        v100(v116, v124, v120);
        v82 = sub_22A9A9038();
        swift_retain();
        v83 = v117;
        v84 = v118;
        v85 = v122;
        v101 = v82;
        sub_22ABDE8F4();
        v122 = v85;
        v57 = *(void (***)(char *, uint64_t))(v59 + 8);
        OUTLINED_FUNCTION_14_36(v81);
        v86 = v115;
        v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 32);
        v99(v115, v83, v84);
        __swift_storeEnumTagSinglePayload(v86, 0, 1, v84);
        v60 = (uint64_t)&v106[*(int *)(v105 + 56)];
        v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
        sub_22ABDD670();
        v61 = v114;
        sub_22AA46D10(v70 + *(int *)(v111 + 20), v114, &qword_2540E8570);
        if (__swift_getEnumTagSinglePayload(v61, 1, (uint64_t)v62) != 1)
          break;
        OUTLINED_FUNCTION_15_10();
        sub_22A9A0B10(v70, (uint64_t (*)(_QWORD))type metadata accessor for SGDDenseLayer);
        OUTLINED_FUNCTION_5_36();
        sub_22A9A0C1C(v61, &qword_2540E8570);
LABEL_23:
        OUTLINED_FUNCTION_17_29();
        OUTLINED_FUNCTION_11_41();
        v63 = v61;
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB30);
        OUTLINED_FUNCTION_15_34(v89);
        v71 = v102;
        if (v65)
          goto LABEL_5;
      }
      v97 = v60;
      v60 = v110;
      (*(void (**)(uint64_t, uint64_t, uint64_t *))(v59 + 32))(v110, v61, v62);
      v61 = v109;
      sub_22ABDD790();
      v59 = v130;
      if (__swift_getEnumTagSinglePayload(v61, 1, v130) == 1)
      {
        sub_22A9A0C1C(v61, &qword_255B0DAA8);
        OUTLINED_FUNCTION_15_10();
      }
      else
      {
        v60 = sub_22ABDDAF0();
        ((void (*)(uint64_t, uint64_t))v52)(v61, v59);
        v61 = OUTLINED_FUNCTION_3_48();
        v70 = *(_QWORD *)(v61 + 16);
        if (v70)
        {
          v96 = v57;
          OUTLINED_FUNCTION_22_21();
          v95[1] = v61;
          v62 = (uint64_t *)(v61 + 48);
          while (1)
          {
            v59 = *(v62 - 1);
            v61 = *v62;
            sub_22ABDEAEC();
            swift_retain();
            v87 = v129;
            swift_getAtKeyPath();
            v88 = sub_22ABDDAF0();
            OUTLINED_FUNCTION_13_42(v87);
            if (v88 == (_DWORD)v60)
              break;
            swift_release();
            OUTLINED_FUNCTION_30();
            v62 += 3;
            if (!--v70)
            {
              OUTLINED_FUNCTION_15_10();
              OUTLINED_FUNCTION_12_36();
              OUTLINED_FUNCTION_21_34();
              v57 = v96;
              goto LABEL_21;
            }
          }
          OUTLINED_FUNCTION_30();
          OUTLINED_FUNCTION_12_36();
          v90 = v116;
          v59 = v110;
          v62 = (uint64_t *)v120;
          v100(v116, v110, v120);
          v60 = v117;
          v52 = v118;
          v91 = v122;
          sub_22ABDE8F4();
          v122 = v91;
          v57 = v96;
          ((void (*)(char *, uint64_t *))v96)(v90, v62);
          v92 = v115;
          v99(v115, v60, v52);
          __swift_storeEnumTagSinglePayload(v92, 0, 1, v52);
          sub_22ABDD670();
          OUTLINED_FUNCTION_15_10();
          OUTLINED_FUNCTION_14_36(v59);
          v70 = v124;
          goto LABEL_22;
        }
        OUTLINED_FUNCTION_15_10();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_21_34();
      }
LABEL_21:
      OUTLINED_FUNCTION_14_36(v60);
LABEL_22:
      sub_22A9A0B10(v70, (uint64_t (*)(_QWORD))type metadata accessor for SGDDenseLayer);
      OUTLINED_FUNCTION_5_36();
      goto LABEL_23;
    }
    v57 = v108;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v66 = v107;
    v67 = v128;
    v68 = (uint64_t)&v128[*(int *)(v107 + 44)];
    sub_22A9A0C1C(v68, &qword_255B12FD8);
    sub_22AA5325C((uint64_t)v106, v68);
    __swift_storeEnumTagSinglePayload(v68, 0, 1, v105);
    ((void (*)(uint64_t, char *, uint64_t))v57[2])(v119, v67, v66);
    v57[1](v67, v66);
  }
LABEL_28:
  OUTLINED_FUNCTION_12_4();
}

unint64_t sub_22AA53DE8()
{
  unint64_t result;

  result = qword_255B12FF0;
  if (!qword_255B12FF0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB2CC, &type metadata for SGDStorage);
    atomic_store(result, (unint64_t *)&qword_255B12FF0);
  }
  return result;
}

uint64_t sub_22AA53E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SGDDenseLayer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA53E68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return FullyConnectedNetworkRegressor.decode(from:)(a1, a2, a3);
}

void sub_22AA53E7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  FullyConnectedNetworkRegressor.encodeWithOptimizer(_:to:)(a1, a2, a3);
}

void sub_22AA53E90(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  FullyConnectedNetworkRegressor.decodeWithOptimizer(from:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_3_48()
{
  return sub_22ABDD814();
}

uint64_t OUTLINED_FUNCTION_5_36()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 208) + 8))(*(_QWORD *)(v0 - 216), *(_QWORD *)(v0 - 200));
}

void OUTLINED_FUNCTION_11_41()
{
  sub_22A9A00C8();
}

uint64_t OUTLINED_FUNCTION_12_36()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_13_42(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 176));
}

uint64_t OUTLINED_FUNCTION_14_36(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_15_34(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t SlidingWindowTransformer.stride.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SlidingWindowTransformer.length.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SlidingWindowTransformer.init(stride:length:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

double SlidingWindowTransformer.applied<A>(to:eventHandler:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  double result;
  __int128 v18;
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;

  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v5;
  v13 = v5[1];
  (*(void (**)(char *, double))(v15 + 16))(v12, v10);
  AnyTemporalSequence.init<A>(_:)((uint64_t)v12, *(_QWORD *)(a2 + 16), a3, a4, (uint64_t)v19);
  *(_QWORD *)a5 = v14;
  *(_QWORD *)(a5 + 8) = v13;
  v16 = v19[1];
  *(_OWORD *)(a5 + 16) = v19[0];
  *(_OWORD *)(a5 + 32) = v16;
  result = *(double *)&v20;
  v18 = v21;
  *(_OWORD *)(a5 + 48) = v20;
  *(_OWORD *)(a5 + 64) = v18;
  return result;
}

uint64_t sub_22AA5402C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656469727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA54110(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6874676E656CLL;
  else
    return 0x656469727473;
}

BOOL sub_22AA54138(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22A9AFA2C(*a1, *a2);
}

uint64_t sub_22AA54148()
{
  return sub_22A9AFB4C();
}

uint64_t sub_22AA54158()
{
  return _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_22AA54168()
{
  sub_22ABE0244();
  _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
  return sub_22ABE0280();
}

uint64_t sub_22AA541AC()
{
  char *v0;

  return sub_22AA54110(*v0);
}

uint64_t sub_22AA541BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA5402C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA541E4()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AA54208@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9AFB44();
  *a1 = result;
  return result;
}

uint64_t sub_22AA54230(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF1AF8, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA54264(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF1AF8, a1);
  return sub_22ABE02F8();
}

void SlidingWindowTransformer.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  char v14;
  char v15;

  v6 = type metadata accessor for SlidingWindowTransformer.CodingKeys(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x22E2E4D80](&unk_22ABF1AF8, v6);
  v7 = sub_22ABDFD58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - v9;
  v11 = *v4;
  v13[1] = v4[1];
  v13[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v15 = 0;
  v12 = v13[3];
  sub_22ABDFD34();
  if (!v12)
  {
    v14 = 1;
    sub_22ABDFD34();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for SlidingWindowTransformer.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SlidingWindowTransformer.CodingKeys);
}

void SlidingWindowTransformer.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = type metadata accessor for SlidingWindowTransformer.CodingKeys(255, a2, a3, a4);
  MEMORY[0x22E2E4D80](&unk_22ABF1AF8, v7);
  v8 = sub_22ABDFCB0();
  MEMORY[0x24BDAC7A8](v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE0298();
  if (!v5)
  {
    v9 = OUTLINED_FUNCTION_21_35();
    v10 = OUTLINED_FUNCTION_21_35();
    OUTLINED_FUNCTION_20_32();
    *a5 = v9;
    a5[1] = v10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA544F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  SlidingWindowTransformer.applied<A>(to:eventHandler:)(a2, a7, a5, a6, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v7 + 8));
}

void sub_22AA5453C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  SlidingWindowTransformer.init(from:)(a1, *(_QWORD *)(a2 + 16), a3, a4, a5);
}

void sub_22AA54554(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  SlidingWindowTransformer.encode(to:)(a1, a2, a3, a4);
}

uint64_t SlidingWindowTransformer.WindowSequence.count.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = *(_QWORD *)(v0 + 48);
  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
  {
    v2 = *(_QWORD *)v0;
    if (*(_QWORD *)v0)
    {
      if (result != 0x8000000000000000 || v2 != -1)
      {
        result /= v2;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t SlidingWindowTransformer.WindowSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[64];

  v6 = *v4;
  v7 = v4[1];
  v8 = *(_QWORD *)(a1 + 16);
  v9 = type metadata accessor for AnyTemporalSequence(0, v8, a2, a3);
  (*(void (**)(_BYTE *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v11, v4 + 2, v9);
  return sub_22AA54614(v6, v7, (uint64_t)v11, v8, a4);
}

uint64_t sub_22AA54614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16;

  *(_QWORD *)(a5 + 96) = 0;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 128) = 0u;
  *(_QWORD *)(a5 + 144) = 0;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  v9 = a5 + 16;
  v10 = type metadata accessor for AnyTemporalSequence(0, a4, a3, a4);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a3, v10);
  AnyTemporalSequence.makeAsyncIterator()();
  *(_OWORD *)(a5 + 80) = v16;
  type metadata accessor for SlidingWindowTransformer.WindowSequence.Iterator.SlidingWindowBuffer(0, a4, v12, v13);
  v14 = sub_22AA5472C(a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a3, v10);
  *(_QWORD *)(a5 + 104) = v14;
  return result;
}

uint64_t sub_22AA546E4()
{
  return SlidingWindowTransformer.WindowSequence.count.getter();
}

uint64_t sub_22AA546FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  SlidingWindowTransformer.WindowSequence.makeAsyncIterator()(a1, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v4, a1);
}

uint64_t sub_22AA5472C(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_22AA55368(a1);
  return v2;
}

uint64_t sub_22AA54768()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_22AA5477C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 104);
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_22AA54794()
{
  sub_22AA553D0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA547C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 96) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA54800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[2] = a1;
  v3[3] = v2;
  v4 = *(_QWORD *)(a2 + 16);
  v3[4] = v4;
  v3[5] = *(_QWORD *)(v4 - 8);
  v3[6] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA54844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = v4[5];
  v5 = v4[6];
  v7 = v4[4];
  v8 = v4[2];
  v4[7] = *(_QWORD *)(v4[3] + 104);
  v9 = type metadata accessor for TemporalFeature(0, v7, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8 + *(int *)(v9 + 28), v7);
  return swift_task_switch();
}

uint64_t sub_22AA548C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[6];
  v2 = v0[4];
  v3 = v0[5];
  sub_22AA55440(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA54914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 96);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    v5 = *(uint64_t **)(v0 + 16);
    *(_QWORD *)(v1 + 96) = v4;
    v7 = *v5;
    v6 = v5[1];
    v10 = *((_OWORD *)v5 + 1);
    v8 = v5[4];
    sub_22ABDEAEC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 112) = v7;
    *(_QWORD *)(v1 + 120) = v6;
    *(_OWORD *)(v1 + 128) = v10;
    *(_QWORD *)(v1 + 144) = v8;
    OUTLINED_FUNCTION_28_0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t SlidingWindowTransformer.WindowSequence.Iterator.next()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[39] = a2;
  v5[40] = v4;
  v5[38] = a1;
  v6 = *(_QWORD *)(a2 + 16);
  v5[41] = v6;
  v7 = type metadata accessor for TemporalFeature(255, v6, a3, a4);
  v5[42] = v7;
  v8 = sub_22ABDF5D8();
  v5[43] = v8;
  v5[44] = *(_QWORD *)(v8 - 8);
  v5[45] = OUTLINED_FUNCTION_0_0();
  v5[46] = *(_QWORD *)(v7 - 8);
  v5[47] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA54A24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[40];
  v3 = *(_QWORD *)(v1 + 80);
  v2 = *(_QWORD *)(v1 + 88);
  v0[48] = v2;
  v0[35] = v3;
  v0[36] = v2;
  v4 = off_255B1245C;
  swift_retain();
  v5 = swift_task_alloc();
  OUTLINED_FUNCTION_15_35(v5, v6, v7, v8);
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_22AA54A90;
  return OUTLINED_FUNCTION_10_31(v0[45]);
}

uint64_t sub_22AA54A90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_41_0();
  *v3 = *v2;
  *(_QWORD *)(v0 + 400) = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA54AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumTagSinglePayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v20;
  uint64_t (*v21)(void);
  __int128 v22;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 336);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v2);
  v4 = *(_QWORD *)(v0 + 320);
  if (EnumTagSinglePayload == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 352) + 8))(v1, *(_QWORD *)(v0 + 344));
    v5 = *(_QWORD *)(v4 + 120);
    if (!v5)
    {
      v20 = *(_OWORD **)(v0 + 304);
      v20[1] = 0u;
      v20[2] = 0u;
      *v20 = 0u;
      OUTLINED_FUNCTION_7_48();
      OUTLINED_FUNCTION_28_0();
      v21 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
      return v21();
    }
    v6 = *(_QWORD *)(v0 + 320);
    v7 = *(_QWORD *)(v6 + 144);
    v8 = *(_OWORD *)(v6 + 128);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v6 + 112);
    v9 = v0 + 160;
    v10 = v0 + 64;
    *(_QWORD *)(v0 + 168) = v5;
    *(_OWORD *)(v0 + 176) = v8;
    *(_QWORD *)(v0 + 192) = v7;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 528) = v11;
    v12 = sub_22AA55084;
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 368) + 32))(*(_QWORD *)(v0 + 376), v1, v2);
    v13 = *(_QWORD *)(v4 + 120);
    if (!v13
      || ((v14 = *(_QWORD *)(v4 + 112), v15 = *(_QWORD **)(v0 + 376), *v15 == v14) ? (v16 = v13 == v15[1]) : (v16 = 0),
          v16 || (v22 = *(_OWORD *)(v4 + 128), v17 = *(_QWORD *)(v4 + 144), (sub_22ABDFF68() & 1) != 0)))
    {
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 480) = v18;
      *v18 = v0;
      v18[1] = sub_22AA54E48;
      return sub_22AA54800(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 312));
    }
    *(_QWORD *)(v0 + 200) = v14;
    v9 = v0 + 200;
    v10 = v0 + 16;
    *(_QWORD *)(v0 + 208) = v13;
    *(_OWORD *)(v0 + 216) = v22;
    *(_QWORD *)(v0 + 232) = v17;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 408) = v11;
    v12 = sub_22AA54CC4;
  }
  *v11 = v0;
  v11[1] = v12;
  return sub_22AA551AC(v10, v9, *(_QWORD *)(v0 + 312));
}

uint64_t sub_22AA54CC4()
{
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA54CF8()
{
  uint64_t v0;
  __int128 v1;
  _QWORD *v2;

  v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 432) = v1;
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 48);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v2;
  *v2 = v0;
  v2[1] = sub_22AA54D48;
  return OUTLINED_FUNCTION_13_43();
}

uint64_t sub_22AA54D48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_41_0();
  v2 = *v1;
  *v3 = *v1;
  swift_task_dealloc();
  v4 = (_QWORD *)swift_task_alloc();
  v0[59] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_22AA54DAC;
  return sub_22AA54800(v0[47], v0[39]);
}

uint64_t sub_22AA54DAC()
{
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA54DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v6 = *(_OWORD *)(v0 + 416);
  v7 = *(_OWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 304);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 368));
  *(_OWORD *)v3 = v6;
  *(_OWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  OUTLINED_FUNCTION_7_48();
  OUTLINED_FUNCTION_28_0();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v4();
}

uint64_t sub_22AA54E48()
{
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA54E7C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 488) = *(_QWORD *)(*(_QWORD *)(v0 + 320) + 104);
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_22AA54E94()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[61];
  v0[62] = *(_QWORD *)(v1 + 144);
  v0[63] = *(_QWORD *)(v1 + 128);
  return OUTLINED_FUNCTION_8();
}

void sub_22AA54EB8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (v0[62] != v0[63])
  {
LABEL_7:
    OUTLINED_FUNCTION_30_0(v0[46]);
    v8 = v0[40];
    v10 = *(_QWORD *)(v8 + 80);
    v9 = *(_QWORD *)(v8 + 88);
    v0[48] = v9;
    v0[35] = v10;
    v0[36] = v9;
    v11 = off_255B1245C;
    swift_retain();
    v12 = swift_task_alloc();
    OUTLINED_FUNCTION_15_35(v12, v13, v14, v15);
    *(_QWORD *)v11 = v0;
    *(_QWORD *)(v11 + 8) = sub_22AA54A90;
    OUTLINED_FUNCTION_10_31(v0[45]);
    return;
  }
  v1 = (uint64_t *)v0[40];
  v2 = v1[12];
  v3 = v1[1];
  v4 = __OFSUB__(v2, v3);
  v5 = v2 - v3;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v6 = *v1;
    if (*v1 != -1)
    {
      v7 = v5;
      if (v6)
        v7 = v5 % v6;
      if (v7)
        goto LABEL_7;
    }
    if (v2 >= v5)
    {
      v16 = (uint64_t *)v0[47];
      v18 = *v16;
      v17 = v16[1];
      v19 = v16[4];
      v0[64] = v1[13];
      v0[30] = v18;
      v0[31] = v17;
      v0[32] = v5;
      v0[33] = v2;
      v0[34] = v19;
      sub_22ABDEAEC();
      swift_task_switch();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_22AA54FC8()
{
  uint64_t v0;
  uint64_t v1;

  sub_22AA55658();
  *(_QWORD *)(v0 + 520) = v1;
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA54FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t (*v11)(void);

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 304);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 368));
  *(_QWORD *)(v0 + 296) = v1;
  v3 = sub_22ABDF0F8();
  OUTLINED_FUNCTION_19_26(v3, v4, v5, v6);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = *(_OWORD *)(v0 + 128);
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v2 + 8) = v7;
  *(_OWORD *)(v2 + 16) = v10;
  *(_QWORD *)(v2 + 32) = v8;
  *(_QWORD *)(v2 + 40) = v9;
  OUTLINED_FUNCTION_7_48();
  OUTLINED_FUNCTION_28_0();
  v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_3_1(v11);
}

uint64_t sub_22AA55084()
{
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA550B8()
{
  uint64_t v0;
  __int128 v1;
  _QWORD *v2;

  v1 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 536) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 552) = v1;
  *(_OWORD *)(v0 + 568) = *(_OWORD *)(v0 + 96);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v2;
  *v2 = v0;
  v2[1] = sub_22AA5510C;
  return OUTLINED_FUNCTION_13_43();
}

uint64_t sub_22AA5510C()
{
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA55140()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  uint64_t (*v4)(void);

  v1 = *(_OWORD **)(v0 + 304);
  v2 = *(_OWORD *)(v0 + 552);
  v3 = *(_OWORD *)(v0 + 568);
  *v1 = *(_OWORD *)(v0 + 536);
  v1[1] = v2;
  v1[2] = v3;
  OUTLINED_FUNCTION_7_48();
  OUTLINED_FUNCTION_28_0();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v4);
}

uint64_t sub_22AA55180()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_48();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA551AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 120) = a3;
  *(_QWORD *)(v4 + 128) = v3;
  *(_QWORD *)(v4 + 112) = a1;
  *(_OWORD *)(v4 + 136) = *(_OWORD *)a2;
  *(_QWORD *)(v4 + 152) = *(_QWORD *)(a2 + 32);
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_22AA551D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;

  v1 = *(uint64_t **)(v0 + 128);
  v2 = v1[12];
  v3 = v1[1];
  v4 = __OFSUB__(v2, v3);
  v5 = v2 - v3;
  if (v5 < 0 != v4)
  {
    if (v2 > 0)
    {
      v6 = 0;
LABEL_14:
      result = *(_QWORD *)(v0 + 144);
      v12 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 72) = result;
      *(_QWORD *)(v0 + 80) = v6;
      *(_QWORD *)(v0 + 88) = v2;
      *(_QWORD *)(v0 + 96) = v12;
      v4 = __OFSUB__(v2, v6);
      v13 = v2 - v6;
      if (!v4)
      {
        *(_QWORD *)(v0 + 160) = v13;
        *(_QWORD *)(v0 + 168) = v1[13];
        sub_22ABDEAEC();
        return OUTLINED_FUNCTION_0_1();
      }
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    v14 = *(_OWORD **)(v0 + 112);
    v14[1] = 0u;
    v14[2] = 0u;
    *v14 = 0u;
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
  }
  if (v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = *v1;
  if (!*v1)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v5 == 0x8000000000000000 && v7 == -1)
    goto LABEL_22;
  v9 = v5 / v7;
  v10 = v9 + 1;
  if (__OFADD__(v9, 1))
    goto LABEL_20;
  v6 = v10 * v7;
  if ((unsigned __int128)(v10 * (__int128)v7) >> 64 == (v10 * v7) >> 63)
  {
    if (v6 < v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_22AA552C4()
{
  uint64_t v0;
  uint64_t v1;

  sub_22AA55878(*(_QWORD *)(v0 + 160));
  *(_QWORD *)(v0 + 176) = v1;
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA552F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 176);
  v2 = sub_22ABDF0F8();
  OUTLINED_FUNCTION_19_26(v2, v3, v4, v5);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 8) = v6;
  *(_OWORD *)(v1 + 16) = v9;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_22AA55368(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  swift_defaultActor_initialize();
  v1[14] = sub_22ABDE9F0();
  v3 = sub_22ABDE9F0();
  v1[17] = 0;
  v1[18] = 0;
  v1[15] = v3;
  v1[16] = a1;
  return v1;
}

BOOL sub_22AA553BC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144) == *(_QWORD *)(v0 + 128);
}

uint64_t sub_22AA553D0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  OUTLINED_FUNCTION_3_4();
  sub_22ABDF0F8();
  OUTLINED_FUNCTION_26_23();
  swift_endAccess();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_26_23();
  return swift_endAccess();
}

uint64_t sub_22AA55440(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char isClassOrObjCExistentialType;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(*v1 + 80) - 8);
  MEMORY[0x24BDAC7A8](a1);
  if (v2[18] == v2[16])
  {
    v5 = v1[17];
    OUTLINED_FUNCTION_3_4();
    OUTLINED_FUNCTION_16_32();
    sub_22ABDF05C();
    v6 = v1[14];
    sub_22AA5609C(v5, v2[14]);
    isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    v8 = v6 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0)
      v8 = v6;
    OUTLINED_FUNCTION_25_23(v8+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24));
    result = swift_endAccess();
    v10 = v2[17];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
    }
    else
    {
      v13 = v2[16];
      if (v13)
      {
        if (v12 != 0x8000000000000000 || v13 != -1)
        {
          v2[17] = v12 % v13;
          return result;
        }
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_25_23((uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  OUTLINED_FUNCTION_45_2();
  v15 = OUTLINED_FUNCTION_16_32();
  sub_22ABDF0C8();
  result = swift_endAccess();
  v16 = v1[18];
  v11 = __OFADD__(v16, 1);
  v17 = v16 + 1;
  if (v11)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v1[18] = v17;
  v18 = v1[17];
  v11 = __OFADD__(v18, 1);
  v19 = v18 + 1;
  if (v11)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v20 = v1[16];
  if (!v20)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  if (v19 == 0x8000000000000000 && v20 == -1)
    goto LABEL_28;
  v1[17] = v19 % v20;
  if (v17 == v20)
  {
    OUTLINED_FUNCTION_45_2();
    v22 = v1[15];
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v15);
    result = sub_22ABDF434();
    if ((result & 1) != 0)
    {
      v1[15] = v1[14];
      sub_22ABDEAEC();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_22AA55658()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[18];
  if (v1 != v0[16])
  {
    OUTLINED_FUNCTION_45_2();
    goto LABEL_8;
  }
  v2 = v0[17];
  if (__OFSUB__(v1, v2))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v1 - v2 < 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_45_2();
  v3 = sub_22ABDF0F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11148);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12B8], v3);
  sub_22AA560EC();
  sub_22ABDEC90();
  OUTLINED_FUNCTION_3_4();
  sub_22ABDF134();
  swift_endAccess();
  v4 = v0[17];
  if (__OFSUB__(v0[16], v4))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((v4 & 0x8000000000000000) == 0)
  {
    sub_22ABDEAEC();
    sub_22ABDF128();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_4();
    sub_22ABDEC9C();
    swift_endAccess();
LABEL_8:
    sub_22ABDEAEC();
    return;
  }
LABEL_12:
  __break(1u);
}

void sub_22AA5582C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA5583C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindowTransformer<A>.WindowSequence);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22AA55868()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA55878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_22AA55658();
  v3 = *(_QWORD *)(v1 + 144);
  if (v3 == *(_QWORD *)(v1 + 128))
  {
    if (__OFSUB__(v3, a1))
    {
      __break(1u);
    }
    else
    {
      v4 = OUTLINED_FUNCTION_16_32();
      MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v4);
      sub_22ABDF44C();
      v5 = sub_22ABDF6E0();
      MEMORY[0x22E2E4D80](MEMORY[0x24BEE2180], v5);
      sub_22ABDF11C();
    }
  }
}

uint64_t sub_22AA5593C()
{
  return sub_22A9AC2B8();
}

uint64_t sub_22AA55954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22AA559B4;
  return SlidingWindowTransformer.WindowSequence.Iterator.next()(a1, a2, v6, v7);
}

uint64_t sub_22AA559B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA559E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_22AA55A78;
  return sub_22ABDF1A0();
}

uint64_t sub_22AA55A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_41_0();
  v3 = *v2;
  *v4 = v3;
  swift_task_dealloc();
  if (v1)
    **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t type metadata accessor for SlidingWindowTransformer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SlidingWindowTransformer);
}

uint64_t sub_22AA55AD4(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  return swift_release();
}

uint64_t sub_22AA55AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  return a1;
}

uint64_t sub_22AA55B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t sub_22AA55BC8(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t sub_22AA55C20(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA55C60(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SlidingWindowTransformer.WindowSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SlidingWindowTransformer.WindowSequence);
}

uint64_t sub_22AA55CC0(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA55D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  v6 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v7 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA55DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t sub_22AA55E98(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  swift_release();
  v6 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t type metadata accessor for SlidingWindowTransformer.WindowSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SlidingWindowTransformer.WindowSequence.Iterator);
}

uint64_t sub_22AA55F3C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SlidingWindowTransformer.WindowSequence.Iterator.SlidingWindowBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SlidingWindowTransformer.WindowSequence.Iterator.SlidingWindowBuffer);
}

uint64_t sub_22AA55FA8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22AA55FB0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA55FFC + 4 * byte_22ABF1785[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA56030 + 4 * byte_22ABF1780[v4]))();
}

uint64_t sub_22AA56030(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA56038(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA56040);
  return result;
}

uint64_t sub_22AA5604C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA56054);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA56058(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA56060(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AA5606C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA5607C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA5608C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA5609C(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

unint64_t sub_22AA560EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B13300[0];
  if (!qword_255B13300[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2C50], v1);
    atomic_store(result, qword_255B13300);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_48()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_10_31(uint64_t a1)
{
  return AnyTemporalIterator.next()(a1);
}

uint64_t OUTLINED_FUNCTION_13_43()
{
  return sub_22AA54768();
}

uint64_t OUTLINED_FUNCTION_15_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 392) = a1;
  return type metadata accessor for AnyTemporalIterator(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_16_32()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_19_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return TemporalFeature.init(id:feature:)(v4, v6, a1, a4, v5);
}

uint64_t OUTLINED_FUNCTION_20_32()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_21_35()
{
  return sub_22ABDFC74();
}

uint64_t OUTLINED_FUNCTION_25_23@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_26_23()
{
  return sub_22ABDF0EC();
}

void sub_22AA561C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_114_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2, v1);
  OUTLINED_FUNCTION_108_3();
}

uint64_t sub_22AA56214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + a1, v2, v1);
}

void sub_22AA56244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_4();
  type metadata accessor for TemporalTransformerToEstimatorAdaptor(0, v0, v1, v0);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_121_1();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_106();
}

void sub_22AA562E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = AssociatedConformanceWitness;
  OUTLINED_FUNCTION_62_8();
}

void sub_22AA56310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  void (*v13)(uint64_t);

  *(_QWORD *)(v9 - 160) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_13_0();
  v11 = MEMORY[0x24BDAC7A8](v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(*(_QWORD *)(v4 - 8) + 32))(v2, *(_QWORD *)(v9 - 144), v4, v11);
  TemporalTransformer.adaptedAsEstimator()(v6, *(_QWORD *)(v9 - 136));
  v12 = OUTLINED_FUNCTION_118_1();
  v13(v12);
  TemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v1, v5, v1, v7, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 120) + 8))(v8, v5);
  OUTLINED_FUNCTION_116_2();
}

void sub_22AA563B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 112) = v1;
  *(_QWORD *)(v3 - 104) = v2;
  *(_QWORD *)(v3 - 96) = *(_QWORD *)(v3 - 152);
  *(_QWORD *)(v3 - 88) = a1;
  OUTLINED_FUNCTION_108_3();
}

void sub_22AA563C4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 32))(*(_QWORD *)(v3 - 168) + a1, v1, v2);
  OUTLINED_FUNCTION_3();
}

void sub_22AA563EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  TemporalEstimatorToSupervisedAdaptor.init(_:)(a1, a4, AssociatedTypeWitness, a6, AssociatedConformanceWitness);
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA56494()
{
  OUTLINED_FUNCTION_106();
}

void sub_22AA564A4()
{
  OUTLINED_FUNCTION_108_3();
}

void sub_22AA564B4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + a1, v2, v1);
  OUTLINED_FUNCTION_51_10();
}

void sub_22AA564D4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA56574()
{
  OUTLINED_FUNCTION_115_0();
}

void sub_22AA56584()
{
  OUTLINED_FUNCTION_108_3();
}

void sub_22AA56594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  TemporalEstimatorToSupervisedAdaptor.init(_:)(v2, v1, v4, v0, v3);
  OUTLINED_FUNCTION_51_10();
}

uint64_t sub_22AA565B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10[12] = a9;
  v10[13] = v9;
  v10[10] = a7;
  v10[11] = a8;
  v10[8] = a5;
  v10[9] = a6;
  v10[6] = a3;
  v10[7] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v10[14] = a5[5];
  v10[15] = a5[3];
  v16 = OUTLINED_FUNCTION_131_0();
  v10[16] = v16;
  v10[17] = *(_QWORD *)(v16 - 8);
  v10[18] = swift_task_alloc();
  v10[19] = swift_task_alloc();
  v17 = a5[4];
  v18 = a5[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10[20] = AssociatedTypeWitness;
  v10[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_131_0();
  v10[23] = swift_getAssociatedConformanceWitness();
  v20 = OUTLINED_FUNCTION_122_2();
  v10[24] = v20;
  v10[25] = type metadata accessor for AnnotatedFeature(0, v20, AssociatedTypeWitness, v21);
  v10[26] = OUTLINED_FUNCTION_0_0();
  v10[27] = *(_QWORD *)(v20 - 8);
  v10[28] = OUTLINED_FUNCTION_80_8();
  v10[29] = swift_task_alloc();
  v23 = type metadata accessor for AnnotatedFeature(0, a7, AssociatedTypeWitness, v22);
  v10[30] = v23;
  v10[31] = *(_QWORD *)(v23 - 8);
  v10[32] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v10[33] = OUTLINED_FUNCTION_0_0();
  v10[34] = *(_QWORD *)(a6 - 8);
  v10[35] = OUTLINED_FUNCTION_0_0();
  v24 = swift_getAssociatedTypeWitness();
  v10[36] = v24;
  v10[37] = *(_QWORD *)(v24 - 8);
  v10[38] = OUTLINED_FUNCTION_0_0();
  v25 = OUTLINED_FUNCTION_128_1();
  v10[39] = v25;
  v10[40] = *(_QWORD *)(v25 - 8);
  v10[41] = OUTLINED_FUNCTION_23_0();
  v26 = swift_task_alloc();
  v10[42] = v26;
  v27 = (_QWORD *)OUTLINED_FUNCTION_72_7();
  v10[43] = v27;
  *v27 = v10;
  v27[1] = sub_22AA56844;
  return v29(v26, a2, a3, a4, a6, a7, a8, a9, v18, v17);
}

uint64_t sub_22AA56844()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA56894()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t (*v8)(void);
  uint64_t v9;

  v1 = v0[44];
  sub_22ABDF1DC();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[40] + 8))(v0[42], v0[39]);
    OUTLINED_FUNCTION_31_17();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_112_1();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_19_0(v2);
  }
  else
  {
    v4 = sub_22ABDE9F0();
    OUTLINED_FUNCTION_68_8(v4);
    OUTLINED_FUNCTION_54_0();
    v5 = v0[33];
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_60_0();
    OUTLINED_FUNCTION_7_40(v5);
    if (v6)
    {
      OUTLINED_FUNCTION_30_0(v0[37]);
      sub_22ABDF1DC();
      v9 = OUTLINED_FUNCTION_19_27();
      OUTLINED_FUNCTION_88_3(v9);
      OUTLINED_FUNCTION_86_4();
    }
    OUTLINED_FUNCTION_74_8();
    v7 = (_QWORD *)OUTLINED_FUNCTION_65_9();
    OUTLINED_FUNCTION_33_22(v7);
    return OUTLINED_FUNCTION_18_0(v8);
  }
}

uint64_t sub_22AA569E4()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_103_1();
  OUTLINED_FUNCTION_43_12((uint64_t)sub_22AA56C38);
  return OUTLINED_FUNCTION_3_7(v0);
}

uint64_t sub_22AA56A1C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 368) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA56A6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _QWORD *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = v0[31];
  v1 = v0[30];
  v2 = v0[27];
  v3 = v0[28];
  v4 = v0[26];
  v15 = v0[29];
  v5 = v0[24];
  OUTLINED_FUNCTION_110_3(v3, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  OUTLINED_FUNCTION_53_15(*(int *)(v1 + 36));
  OUTLINED_FUNCTION_59_9(v3, v4);
  sub_22ABDF0F8();
  sub_22ABDF0C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v15, v5);
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  v6 = v0[46];
  v7 = v0[33];
  v8 = v0[30];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_60_0();
  if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
  {
    OUTLINED_FUNCTION_30_0(v0[37]);
    sub_22ABDF1DC();
    if (!v6)
    {
      v14 = OUTLINED_FUNCTION_19_27();
      OUTLINED_FUNCTION_88_3(v14);
      OUTLINED_FUNCTION_86_4();
    }
    v9 = v0[40];
    OUTLINED_FUNCTION_75_8();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    OUTLINED_FUNCTION_31_17();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_112_1();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_19_0(v10);
  }
  else
  {
    OUTLINED_FUNCTION_74_8();
    v12 = (_QWORD *)OUTLINED_FUNCTION_65_9();
    OUTLINED_FUNCTION_33_22(v12);
    return OUTLINED_FUNCTION_18_0(v13);
  }
}

uint64_t sub_22AA56C00()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_103_1();
  OUTLINED_FUNCTION_43_12((uint64_t)sub_22AA56C38);
  return OUTLINED_FUNCTION_3_7(v0);
}

uint64_t sub_22AA56C38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 392) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

void sub_22AA56C94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[41];
  v2 = v0[39];
  v3 = v0[18];
  v4 = v0[19];
  v5 = v0[17];
  v6 = v0[4];
  OUTLINED_FUNCTION_66_12(v1, v0[42], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[40] + 32));
  OUTLINED_FUNCTION_110_3(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v1, v2, v6);
}

uint64_t sub_22AA56D64()
{
  uint64_t v0;

  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA56DC4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_7_49();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA56E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_23_5();
  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 296);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 248));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_7_49();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA56EA8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 320));
  OUTLINED_FUNCTION_7_49();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA56F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v11[17] = a10;
  v11[18] = v10;
  v11[15] = v34;
  v11[16] = a9;
  v11[13] = a8;
  v11[14] = v33;
  v11[11] = a6;
  v11[12] = a7;
  v11[9] = a4;
  v11[10] = a5;
  v11[7] = a2;
  v11[8] = a3;
  v11[6] = a1;
  v11[19] = a6[5];
  v11[20] = a6[3];
  v15 = OUTLINED_FUNCTION_130_0();
  v11[21] = v15;
  v11[22] = *(_QWORD *)(v15 - 8);
  v11[23] = swift_task_alloc();
  v11[24] = swift_task_alloc();
  v11[25] = *(_QWORD *)(a8 - 8);
  v11[26] = OUTLINED_FUNCTION_0_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[27] = AssociatedTypeWitness;
  v11[28] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[29] = OUTLINED_FUNCTION_0_0();
  v17 = a6[4];
  v18 = a6[2];
  v19 = swift_getAssociatedTypeWitness();
  v11[30] = v19;
  v11[31] = *(_QWORD *)(v19 - 8);
  v11[32] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_130_0();
  v11[33] = swift_getAssociatedConformanceWitness();
  v20 = OUTLINED_FUNCTION_122_2();
  v11[34] = v20;
  v11[35] = type metadata accessor for AnnotatedFeature(0, v20, v19, v21);
  v11[36] = OUTLINED_FUNCTION_0_0();
  v11[37] = *(_QWORD *)(v20 - 8);
  v11[38] = OUTLINED_FUNCTION_2_21();
  v11[39] = OUTLINED_FUNCTION_5_17();
  v11[40] = OUTLINED_FUNCTION_5_17();
  v23 = type metadata accessor for AnnotatedFeature(0, v33, v19, v22);
  v11[41] = v23;
  v11[42] = *(_QWORD *)(v23 - 8);
  v11[43] = OUTLINED_FUNCTION_80_8();
  v11[44] = swift_task_alloc();
  sub_22ABDF5D8();
  v11[45] = OUTLINED_FUNCTION_2_21();
  v11[46] = OUTLINED_FUNCTION_5_17();
  v11[47] = *(_QWORD *)(a7 - 8);
  v11[48] = OUTLINED_FUNCTION_0_0();
  v24 = swift_getAssociatedTypeWitness();
  v11[49] = v24;
  v11[50] = *(_QWORD *)(v24 - 8);
  v11[51] = OUTLINED_FUNCTION_0_0();
  v25 = OUTLINED_FUNCTION_128_1();
  v11[52] = v25;
  v11[53] = *(_QWORD *)(v25 - 8);
  v11[54] = OUTLINED_FUNCTION_23_0();
  v26 = swift_task_alloc();
  v11[55] = v26;
  v27 = (_QWORD *)OUTLINED_FUNCTION_72_7();
  v11[56] = v27;
  *v27 = v11;
  v27[1] = sub_22AA5720C;
  return v29(v26, a2, a4, a5, a7, v33, v34, a10, v18, v17);
}

uint64_t sub_22AA5720C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 456) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA5725C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t (*v16)(void);
  uint64_t v17;

  OUTLINED_FUNCTION_101_3();
  v1 = v0[57];
  sub_22ABDF1DC();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[53] + 8))(v0[55], v0[52]);
    swift_task_dealloc();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_112_1();
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_79_4();
    OUTLINED_FUNCTION_111_1();
    OUTLINED_FUNCTION_89_0();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_94_3();
    return OUTLINED_FUNCTION_15_36(v2);
  }
  else
  {
    v4 = sub_22ABDE9F0();
    OUTLINED_FUNCTION_68_8(v4);
    OUTLINED_FUNCTION_54_0();
    v5 = v0[46];
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_60_0();
    OUTLINED_FUNCTION_7_40(v5);
    if (v6)
    {
      OUTLINED_FUNCTION_129_0();
      v8 = v0[25];
      v7 = v0[26];
      v9 = v0[13];
      v10 = v0[8];
      OUTLINED_FUNCTION_30_0(v11);
      v0[3] = sub_22ABDE9F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
      sub_22ABDEE58();
      v12 = v0[45];
      v13 = v0[41];
      swift_getAssociatedConformanceWitness();
      sub_22ABDF650();
      if (__swift_getEnumTagSinglePayload(v12, 1, v13) == 1)
      {
        OUTLINED_FUNCTION_30_0(v0[28]);
        sub_22ABDF1DC();
        v17 = OUTLINED_FUNCTION_2_43();
        OUTLINED_FUNCTION_55_10(v17);
        OUTLINED_FUNCTION_106();
      }
      OUTLINED_FUNCTION_36_17();
      v15 = (_QWORD *)OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_39_18(v15);
    }
    else
    {
      OUTLINED_FUNCTION_54_10(v0[42]);
      v14 = (_QWORD *)OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_84_7(v14);
    }
    OUTLINED_FUNCTION_38_20();
    return OUTLINED_FUNCTION_14_37(v16);
  }
}

uint64_t sub_22AA574D8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_4_38(v0, (uint64_t)sub_22AA5794C);
  return OUTLINED_FUNCTION_44_3(v1);
}

uint64_t sub_22AA57504()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 472) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

#error "22AA575A8: call analysis failed (funcsize=126)"

uint64_t sub_22AA57754()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_4_38(v0, (uint64_t)sub_22AA5794C);
  return OUTLINED_FUNCTION_44_3(v1);
}

uint64_t sub_22AA57780()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 488) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_125_1();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

#error "22AA5782C: call analysis failed (funcsize=81)"

uint64_t sub_22AA57920()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_4_38(v0, (uint64_t)sub_22AA5794C);
  return OUTLINED_FUNCTION_44_3(v1);
}

uint64_t sub_22AA5794C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 520) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

void sub_22AA579B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v1 = v0[54];
  v2 = v0[52];
  v3 = v0[6];
  OUTLINED_FUNCTION_27_8(v1, v0[55], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[53] + 32));
  v4 = OUTLINED_FUNCTION_118_1();
  OUTLINED_FUNCTION_66_12(v4, v5, v6);
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v1, v2, v3);
}

uint64_t sub_22AA57AA8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA57B2C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_63_7();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_94_3();
  return OUTLINED_FUNCTION_5_37(v0);
}

uint64_t sub_22AA57B98()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_63_7();
  v1 = v0[53];
  v2 = v0[50];
  OUTLINED_FUNCTION_30_0(v0[42]);
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_94_3();
  return OUTLINED_FUNCTION_5_37(v3);
}

uint64_t sub_22AA57C30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_63_7();
  v1 = v0[53];
  v2 = v0[28];
  OUTLINED_FUNCTION_30_0(v0[42]);
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_94_3();
  return OUTLINED_FUNCTION_5_37(v3);
}

uint64_t sub_22AA57CC8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_63_7();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 424));
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_94_3();
  return OUTLINED_FUNCTION_5_37(v1);
}

uint64_t sub_22AA57D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 56))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTemporalTransformer();
  }
  return result;
}

uint64_t sub_22AA57E8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = a3;
  v5 = a2[5];
  v33 = a2[3];
  v34 = v5;
  v6 = OUTLINED_FUNCTION_119_1();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v27 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v31 = (char *)v26 - v9;
  v10 = a2[4];
  v11 = a2[2];
  v12 = OUTLINED_FUNCTION_119_1();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 64);
  v32 = a1;
  v18 = v35;
  result = v17(a1, v11, v10, v16);
  if (!v18)
  {
    v26[0] = v11;
    v26[1] = v14;
    v35 = v12;
    v20 = v31;
    (*(void (**)(uint64_t, uint64_t))(v34 + 64))(v32, v33);
    v21 = OUTLINED_FUNCTION_118_1();
    v22 = v35;
    v23(v21);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v27, v20, v29);
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    v24 = OUTLINED_FUNCTION_118_1();
    ComposedTemporalTransformer.init(_:_:)(v24, v22, v25);
  }
  return result;
}

uint64_t sub_22AA580C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  uint64_t v9;
  _QWORD *v18;

  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_22AA16B30;
  return sub_22AA565B8(a1, a2, a3, a4, a9, a5, a6, a7, a8);
}

uint64_t sub_22AA58178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;
  _QWORD *v16;
  uint64_t v21;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v16;
  *v16 = v10;
  v16[1] = sub_22A9AFDDC;
  return sub_22AA56F10(a1, a2, a3, a4, a5, a10, a6, a7, a8, v21);
}

uint64_t sub_22AA5822C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA57D40(a1, a2, a3);
}

uint64_t sub_22AA58240@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AA57E8C(a1, a2, a3);
}

void Estimator.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_4_4();
  v3 = OUTLINED_FUNCTION_82_7(v0, v1, v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_69_8();
  type metadata accessor for EstimatorToTemporalAdaptor(v5, v6, v7, v8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_77_6();
  OUTLINED_FUNCTION_116_2();
}

{
  sub_22AA9F3A0();
}

{
  sub_22AA9F3A0();
}

void sub_22AA5830C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = AssociatedConformanceWitness;
  OUTLINED_FUNCTION_62_8();
}

void sub_22AA5833C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_66_12(v5, *(_QWORD *)(v7 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 160) + 16));
  EstimatorToTemporalAdaptor.init(_:)(v5, v3, v0);
  TemporalEstimatorToSupervisedAdaptor.init(_:)(v0, v6, v4, v2, v1);
  OUTLINED_FUNCTION_24_11(*(_QWORD *)(v7 - 144), *(_QWORD *)(v7 - 128), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 136) + 16));
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA583BC()
{
  sub_22AA561C4();
}

void sub_22AA583DC()
{
  OUTLINED_FUNCTION_3();
}

void SupervisedEstimator.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_4();
  v0 = OUTLINED_FUNCTION_109_3();
  type metadata accessor for TemporalTransformerToEstimatorAdaptor(v0, v1, v2, v3);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v4);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_86_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_4();
  v3 = OUTLINED_FUNCTION_82_7(v0, v1, v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_62_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;

  OUTLINED_FUNCTION_4_4();
  v4 = v3;
  v17 = v5;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_69_8();
  type metadata accessor for SupervisedEstimatorToTemporalAdaptor(v11, v12, v13, v14);
  OUTLINED_FUNCTION_10_1();
  v16 = MEMORY[0x24BDAC7A8](v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v9 + 16))(v2, v0, v4, v16);
  OUTLINED_FUNCTION_117_1(v2);
  OUTLINED_FUNCTION_24_11(v1, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  OUTLINED_FUNCTION_116_2();
}

{
  sub_22AB0EF24();
}

{
  sub_22AB0EF24();
}

{
  sub_22AB0EF24();
}

void sub_22AA58478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;

  *(_QWORD *)(v3 - 176) = a1;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 184) = AssociatedConformanceWitness;
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = AssociatedConformanceWitness;
  OUTLINED_FUNCTION_62_8();
}

void sub_22AA584AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;

  *(_QWORD *)(v7 - 168) = a1;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v8);
  v9 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_83_8();
  v13 = type metadata accessor for SupervisedEstimatorToTemporalAdaptor(v11, v6, v5, v12);
  OUTLINED_FUNCTION_10_1();
  v15 = MEMORY[0x24BDAC7A8](v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(v9 + 16))(v2, *(_QWORD *)(v7 - 160), v6, v15);
  OUTLINED_FUNCTION_117_1(v2);
  TemporalTransformer.adaptedAsEstimator()(*(_QWORD *)(v7 - 152), *(_QWORD *)(v7 - 144));
  TemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v1, v3, v1, *(_QWORD *)(v7 - 176), *(_QWORD *)(v7 - 184));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 8))(v4, v3);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SupervisedEstimatorToTemporalAdaptor<A>, v13);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TemporalEstimatorToSupervisedAdaptor<A, B>, *(_QWORD *)(v7 - 168));
  sub_22AA561C4();
}

void sub_22AA585BC()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA58664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v6);
  v7 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_83_8();
  v11 = type metadata accessor for SupervisedEstimatorToTemporalAdaptor(v9, v3, v2, v10);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_66_12(v0, *(_QWORD *)(v5 - 144), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  SupervisedEstimatorToTemporalAdaptor.init(_:)(v0, v3, v2);
  v13 = *(_QWORD *)(v5 - 152);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 136) + 16))(v13, *(_QWORD *)(v5 - 128), v1);
  TemporalEstimatorToSupervisedAdaptor.init(_:)(v13, v1, v4, *(_QWORD *)(v5 - 160), *(_QWORD *)(v5 - 168));
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SupervisedEstimatorToTemporalAdaptor<A>, v11);
  OUTLINED_FUNCTION_115_0();
}

void sub_22AA58740()
{
  sub_22AA561C4();
}

void sub_22AA58760()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA58834()
{
  sub_22AA561C4();
}

void sub_22AA58850()
{
  OUTLINED_FUNCTION_3();
}

void TemporalEstimator.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  OUTLINED_FUNCTION_4_4();
  v3 = v2;
  v19[0] = v5;
  v19[1] = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_9_15();
  v11 = OUTLINED_FUNCTION_109_3();
  type metadata accessor for SupervisedEstimatorToTemporalAdaptor(v11, v12, v13, v14);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_24_11((uint64_t)v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  OUTLINED_FUNCTION_27_8(v1, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  SupervisedEstimatorToTemporalAdaptor.init(_:)(v1, v7, v3);
  OUTLINED_FUNCTION_115_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_4_4();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_27_8(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v1, v12, v8);
  sub_22AA563EC(v2, v1, v8, v10, v4, v6);
}

{
  sub_22AA9F524();
}

{
  sub_22AA9F524();
}

{
  sub_22AA9F650();
}

{
  sub_22AA9F650();
}

void sub_22AA58938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_22AA563EC(v1, v4, v3, v2, a1, *(_QWORD *)(v5 - 88));
}

void sub_22AA58954()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA58A04()
{
  OUTLINED_FUNCTION_3();
}

void SupervisedTemporalEstimator.appending<A>(_:)()
{
  sub_22AA58AC4();
}

{
  sub_22AA58AC4();
}

{
  sub_22AA58AC4();
}

{
  sub_22AA58BEC();
}

{
  sub_22AA58BEC();
}

{
  sub_22AA58BEC();
}

void sub_22AA58A44()
{
  OUTLINED_FUNCTION_19_6();
}

void sub_22AA58A80()
{
  OUTLINED_FUNCTION_19_6();
}

void sub_22AA58ABC()
{
  OUTLINED_FUNCTION_19_6();
}

void sub_22AA58AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_4();
  v16 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_98_3();
  v11 = OUTLINED_FUNCTION_109_3();
  v12(v11);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_6_4();
  OUTLINED_FUNCTION_24_11(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  OUTLINED_FUNCTION_66_12(v2, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v16(v2, v7, v5);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA58B9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v5 - 96))(v4, v3, v2, v1, *(_QWORD *)(v5 - 88), a1);
  OUTLINED_FUNCTION_3();
}

void sub_22AA58BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_4();
  v17 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_98_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v2, v0, v11);
  OUTLINED_FUNCTION_27_8(v1, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  v17(v2, v1, v11, v9, v7, v5);
  OUTLINED_FUNCTION_3();
}

void sub_22AA58CA8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_114_0();
  type metadata accessor for EstimatorToTemporalAdaptor(255, *v0, v0[2], v1);
  OUTLINED_FUNCTION_51_16();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA58CF4()
{
  OUTLINED_FUNCTION_48_15();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA58D10()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA58D20()
{
  OUTLINED_FUNCTION_18_35();
}

void type metadata accessor for ComposedSupervisedTemporalEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA58D50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[3];
  type metadata accessor for SupervisedEstimatorToTemporalAdaptor(255, *a1, a1[2], a4);
  v5 = OUTLINED_FUNCTION_121_1();
  type metadata accessor for TemporalTransformerToEstimatorAdaptor(v5, v6, v4, v7);
  OUTLINED_FUNCTION_77_6();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA58DC4()
{
  OUTLINED_FUNCTION_107_1();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA58DE4()
{
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA58DF4()
{
  uint64_t v0;

  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TemporalEstimatorToSupervisedAdaptor<A, B>, v0);
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA58E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_95_1(a1, a2, a3, a4);
  OUTLINED_FUNCTION_51_16();
  OUTLINED_FUNCTION_48_15();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA58E88()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA58E98()
{
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA58EA8()
{
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA58ECC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SupervisedEstimatorToTemporalAdaptor(255, *a1, a1[2], a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA58F00()
{
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA58F24()
{
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA58F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_95_1(a1, a2, a3, a4);
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA58F88()
{
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA58F98()
{
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA58FBC()
{
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA59008()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA59018()
{
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA5903C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_114_0();
  type metadata accessor for TransformerToTemporalAdaptor(255, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 24), v1);
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA59070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_121_1();
  type metadata accessor for TemporalTransformerToEstimatorAdaptor(v0, v1, v2, v3);
  OUTLINED_FUNCTION_51_16();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA590A4()
{
  OUTLINED_FUNCTION_48_15();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA590C0()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA590D0()
{
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA590F4()
{
  get_witness_table_18CreateMLComponents27SupervisedTemporalEstimatorRzAA0E0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdE0VyxAA0de2ToC7AdaptorVyAA0ejdK0Vyqd__G10AnnotationQzGGAaBHPyHCTm();
}

void sub_22AA59108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SupervisedEstimatorToTemporalAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA5913C()
{
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA59160()
{
  get_witness_table_18CreateMLComponents27SupervisedTemporalEstimatorRzAA0E0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdE0VyxAA0de2ToC7AdaptorVyAA0ejdK0Vyqd__G10AnnotationQzGGAaBHPyHCTm();
}

void get_witness_table_18CreateMLComponents27SupervisedTemporalEstimatorRzAA0E0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdE0VyxAA0de2ToC7AdaptorVyAA0ejdK0Vyqd__G10AnnotationQzGGAaBHPyHCTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD, _QWORD);
  uint64_t v4;

  OUTLINED_FUNCTION_114_0();
  v1 = v0;
  v4 = v3(255, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 24));
  OUTLINED_FUNCTION_121_1();
  OUTLINED_FUNCTION_77_6();
  MEMORY[0x22E2E4D80](v1, v4);
  OUTLINED_FUNCTION_107_1();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA591EC()
{
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA591FC()
{
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA59220()
{
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_12_37();
}

void sub_22AA5926C()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA5927C()
{
  OUTLINED_FUNCTION_18_35();
}

void sub_22AA592A0()
{
  OUTLINED_FUNCTION_18_35();
}

uint64_t sub_22AA592D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA593B0 + 4 * byte_22ABF1B50[v21 - 1]))();
}

void sub_22AA59424(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_22AA59618()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_2_43()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = v0[3];
  v0[4] = v1;
  v0[62] = v1;
  v0[63] = v2;
  v0[5] = v2;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_4_38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *v3 = v2;
  v3[1] = a2;
  v6 = v2[24];
  v7 = v2[19];
  v5[5] = v2[20];
  v5[6] = v7;
  v5[3] = v4;
  v5[4] = a1;
  v5[2] = v4;
  return v6;
}

uint64_t OUTLINED_FUNCTION_5_37(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_7_49()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_9_37()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_12_37()
{
  type metadata accessor for TemporalEstimatorToSupervisedAdaptor();
}

uint64_t OUTLINED_FUNCTION_14_37@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_15_36(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_17_30()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_18_35()
{
  type metadata accessor for ComposedSupervisedTemporalEstimator();
}

uint64_t OUTLINED_FUNCTION_19_27()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[2];
  v0[47] = v1;
  v0[3] = v1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_31_17()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_33_22(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 360) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 232);
}

uint64_t OUTLINED_FUNCTION_36_17()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[42] + 32))(v0[43], v0[45], v0[41]);
}

uint64_t OUTLINED_FUNCTION_39_18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 480) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 304);
}

uint64_t OUTLINED_FUNCTION_43_12@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  *v2 = v1;
  v2[1] = a1;
  result = v1[19];
  v5 = v1[14];
  *(_QWORD *)(v3 + 16) = v1[15];
  *(_QWORD *)(v3 + 24) = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_15()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_51_16()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_53_15@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v4, v2 + a1, v3);
}

uint64_t OUTLINED_FUNCTION_54_10@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t OUTLINED_FUNCTION_55_10(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 512) = a1;
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_59_9@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return AnnotatedFeature.init(feature:annotation:)(a1, v4, v3, v2, a2);
}

uint64_t OUTLINED_FUNCTION_60_11()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_62_8()
{
  type metadata accessor for TemporalEstimatorToSupervisedAdaptor();
}

uint64_t OUTLINED_FUNCTION_65_9()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_66_12@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_68_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v4, v3);
}

uint64_t OUTLINED_FUNCTION_69_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_72_7()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_74_8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[31] + 32))(v0[32], v0[33], v0[30]);
}

uint64_t OUTLINED_FUNCTION_75_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_77_6()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_80_8()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_82_7@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 128) = result;
  *(_QWORD *)(v3 - 120) = a3;
  *(_QWORD *)(v3 - 136) = *(_QWORD *)(a2 - 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_83_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_84_7(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 464) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 320);
}

uint64_t OUTLINED_FUNCTION_86_7()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_88_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 384) = a1;
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_94_3()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_95_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for SupervisedEstimatorToTemporalAdaptor(255, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_100_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(a15, v16);
}

uint64_t OUTLINED_FUNCTION_103_1()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_105_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_107_1()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_108_3()
{
  type metadata accessor for ComposedSupervisedTemporalEstimator();
}

uint64_t OUTLINED_FUNCTION_109_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_110_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_111_2()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_112_2()
{
  return sub_22ABDF0C8();
}

void OUTLINED_FUNCTION_115_0()
{
  JUMPOUT(0x22E2E4D80);
}

void OUTLINED_FUNCTION_116_2()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_117_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return SupervisedEstimatorToTemporalAdaptor.init(_:)(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_118_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_119_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_121_1()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_122_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_125_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_127_1()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_128_1()
{
  return swift_checkMetadataState();
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 408);
}

uint64_t OUTLINED_FUNCTION_130_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_131_0()
{
  return swift_getAssociatedTypeWitness();
}

void ConcatenationError.errorDescription.getter()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;

  v1 = v0[1];
  if (v1 > 1)
  {
    v2 = *v0;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_4_39();
    OUTLINED_FUNCTION_0_42();
    OUTLINED_FUNCTION_1_35();
    OUTLINED_FUNCTION_2_44();
    sub_22AA59D98(v2, v1);
  }
  OUTLINED_FUNCTION_1_18();
}

void ConcatenationError.debugDescription.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8) > 1uLL)
  {
    OUTLINED_FUNCTION_4_39();
    OUTLINED_FUNCTION_0_42();
    OUTLINED_FUNCTION_1_35();
    OUTLINED_FUNCTION_2_44();
  }
  OUTLINED_FUNCTION_1_18();
}

uint64_t sub_22AA59D98(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t static ConcatenationError.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      v3 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2 == v4 && v3 == v5)
        v6 = 1;
      else
        v6 = sub_22ABDFF68();
      goto LABEL_10;
    }
LABEL_9:
    v6 = 0;
LABEL_10:
    sub_22AA59E7C(v4, v5);
    sub_22AA59E7C(v2, v3);
    goto LABEL_11;
  }
  if (v5 != 1)
    goto LABEL_9;
  v3 = 1;
LABEL_7:
  v6 = 1;
LABEL_11:
  sub_22AA59D98(v2, v3);
  sub_22AA59D98(v4, v5);
  return v6 & 1;
}

uint64_t sub_22AA59E7C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return sub_22ABDEAEC();
  return result;
}

unint64_t sub_22AA59E94()
{
  unint64_t result;

  result = qword_255B133F0;
  if (!qword_255B133F0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for ConcatenationError, &type metadata for ConcatenationError);
    atomic_store(result, (unint64_t *)&qword_255B133F0);
  }
  return result;
}

unint64_t destroy for ConcatenationError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s18CreateMLComponents18ConcatenationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    sub_22ABDEAEC();
  }
  return a1;
}

_QWORD *assignWithCopy for ConcatenationError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_22ABDEAEC();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ConcatenationError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConcatenationError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ConcatenationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_22AA5A0F0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_22AA5A108(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConcatenationError()
{
  return &type metadata for ConcatenationError;
}

uint64_t OUTLINED_FUNCTION_0_42()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_2_44()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_4_39()
{
  return sub_22ABDF7A0();
}

uint64_t sub_22AA5A180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];

  v61 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87();
  v56 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v48 - v9;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v54 = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v52 = v11;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v55 = (char *)&v48 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v48 - v15;
  v16 = sub_22ABDDA0C();
  v62 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_33();
  v20 = v19 - v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123A8);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v48 - v26;
  v50 = a2;
  v28 = sub_22ABDE8A0();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v48 - v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))((char *)&v48 - v30, a1, v28);
  if (OUTLINED_FUNCTION_3_49())
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v27, v21);
    sub_22ABDE828();
    OUTLINED_FUNCTION_2_45(a1);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v20, v16);
    return OUTLINED_FUNCTION_2_45((uint64_t)v31);
  }
  v49 = v16;
  v51 = a1;
  v32 = v59;
  if (OUTLINED_FUNCTION_3_49())
  {
    v33 = v54;
    v34 = v55;
    v35 = v60;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v55, v32, v60);
    v36 = v52;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v52, v34, v35);
    sub_22A9A9038();
    v37 = v20;
    v38 = v49;
    sub_22ABDE8F4();
    v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v39(v36, v35);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v37, v38);
    OUTLINED_FUNCTION_2_45(v51);
    v39((uint64_t)v34, v35);
    return OUTLINED_FUNCTION_2_45((uint64_t)v31);
  }
  v40 = v53;
  v41 = v58;
  v42 = OUTLINED_FUNCTION_3_49();
  v43 = v61;
  v44 = v49;
  if (v42)
  {
    v45 = v56;
    v46 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v56, v40, v41);
    sub_22ABDE828();
    OUTLINED_FUNCTION_2_45(v51);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v41);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v43, v20, v44);
    return OUTLINED_FUNCTION_2_45((uint64_t)v31);
  }
  v63[0] = 0;
  v63[1] = 0xE000000000000000;
  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v63, "Scalar type ");
  BYTE5(v63[1]) = 0;
  HIWORD(v63[1]) = -5120;
  sub_22ABE0304();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

uint64_t sub_22AA5A604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA5A858(a1, a2, a3, a4, MEMORY[0x24BE6B8B8]);
}

char *sub_22AA5A628(char *result, uint64_t a2, char *__src, int64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!result)
  {
LABEL_4:
    v5 = 0;
    v6 = 0;
    if (!__src)
      return result;
    goto LABEL_12;
  }
  v4 = a2 - (_QWORD)result;
  if (a2 - (uint64_t)result < -3)
  {
    __break(1u);
    goto LABEL_23;
  }
  if ((unint64_t)(v4 + 3) < 7)
    goto LABEL_4;
  v6 = v4 / 4;
  if ((a4 & 0x8000000000000000) == 0)
  {
    if (a4 >= v6)
      v5 = v4 / 4;
    else
      v5 = a4;
    if ((v5 & 0x8000000000000000) == 0)
    {
      if (!__src)
        return result;
      goto LABEL_12;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = v4 / 4;
  if (!__src)
    return result;
LABEL_12:
  if (!v5)
    return result;
  if (v6 < v5)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    result = (char *)sub_22ABDFB9C();
    __break(1u);
    return result;
  }
  if (result)
  {
    if (&result[4 * v5] <= __src || &__src[4 * v5] <= result)
      return (char *)memcpy(result, __src, 4 * v5);
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_22AA5A710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA5A858(a1, a2, a3, a4, MEMORY[0x24BE6B8B0]);
}

char *sub_22AA5A734(char *result, uint64_t a2, char *__src, uint64_t a4)
{
  uint64_t v4;

  if (result)
  {
    v4 = (a2 - (uint64_t)result) / 2;
    if (!__src)
      return result;
  }
  else
  {
    v4 = 0;
    if (!__src)
      return result;
  }
  if (a4)
  {
    if (v4 < a4)
    {
      __break(1u);
LABEL_16:
      result = (char *)sub_22ABDFB9C();
      __break(1u);
      return result;
    }
    if (result)
    {
      if ((a4 & 0x8000000000000000) == 0 && (&result[2 * a4] <= __src || &__src[2 * a4] <= result))
        return (char *)memcpy(result, __src, 2 * a4);
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_22AA5A834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA5A858(a1, a2, a3, a4, MEMORY[0x24BE6B8B8]);
}

uint64_t sub_22AA5A858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v10 = sub_22ABDD4D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v14 = v13 - v12;
  sub_22ABDD4F0();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_33();
  sub_22ABDEAEC();
  sub_22ABDD4FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v14, *a5, v10);
  v16 = sub_22ABDD538();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v16);
  return sub_22ABDD928();
}

char *sub_22AA5A994(char *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AA5A734(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_22AA5A9AC(void *a1, uint64_t a2, double *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double v10;
  uint64_t v11;
  float v12;
  uint64_t result;
  uint64_t v15;

  v4 = a4;
  if (!a1)
  {
    v7 = 0;
    if (a4)
      goto LABEL_3;
LABEL_10:
    v8 = MEMORY[0x24BEE4AF8];
    v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v11)
      return swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v7 = (a2 - (uint64_t)a1) / 4;
  if (!a4)
    goto LABEL_10;
LABEL_3:
  v15 = MEMORY[0x24BEE4AF8];
  sub_22AB4D538();
  if (v4 < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v8 = v15;
  v9 = *(_QWORD *)(v15 + 16);
  do
  {
    v10 = *a3;
    v11 = v9 + 1;
    if (v9 >= *(_QWORD *)(v15 + 24) >> 1)
      sub_22AB4D538();
    v12 = v10;
    *(_QWORD *)(v15 + 16) = v11;
    *(float *)(v15 + 4 * v9 + 32) = v12;
    ++a3;
    ++v9;
    --v4;
  }
  while (v4);
LABEL_11:
  if (v7 < v11)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (!a1)
    return swift_bridgeObjectRelease();
  if (v8 + 32 >= (unint64_t)a1 + 4 * v11 || v8 + 32 + 4 * v11 <= (unint64_t)a1)
  {
    memcpy(a1, (const void *)(v8 + 32), 4 * v11);
    return swift_bridgeObjectRelease();
  }
LABEL_21:
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t sub_22AA5AB3C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AA5A9AC(a1, a2, *(double **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

char *sub_22AA5AB54(char *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AA5A628(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t OUTLINED_FUNCTION_2_45(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_3_49()
{
  return swift_dynamicCast();
}

unint64_t SerializationError.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;

  v1 = sub_22ABDD0E8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_33();
  v5 = v4 - v3;
  type metadata accessor for SerializationError();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  sub_22AA5AD94(v0, v8 - v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      OUTLINED_FUNCTION_3_50();
      sub_22ABDF7A0();
      sub_22ABDEDC8();
      sub_22ABDEDC8();
      swift_bridgeObjectRelease();
      sub_22ABDEDC8();
      return v13;
    }
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_3_50();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v10 = 0xD000000000000014;
  }
  else
  {
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_3_50();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v10 = 0xD00000000000001ALL;
  }
  v14 = v10;
  sub_22A9BED8C((unint64_t *)&qword_2540E89D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_22ABDFD7C();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  v11 = v14;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  return v11;
}

uint64_t type metadata accessor for SerializationError()
{
  uint64_t result;

  result = qword_2540E8B48;
  if (!qword_2540E8B48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22AA5AD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SerializationError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static SerializationError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v4 = sub_22ABDD0E8();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v38 - v8;
  type metadata accessor for SerializationError();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v38 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B133F8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_33();
  v22 = v21 - v20;
  v24 = (_QWORD *)(v21 - v20 + *(int *)(v23 + 48));
  sub_22AA5AD94(a1, v21 - v20);
  sub_22AA5AD94(a2, (uint64_t)v24);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_22AA5AD94(v22, (uint64_t)v18);
    if (!OUTLINED_FUNCTION_0_43())
    {
      v34 = v38;
      v35 = v39;
      OUTLINED_FUNCTION_46_7((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 32));
      v28 = MEMORY[0x22E2E133C](v18, v9);
      v36 = *(void (**)(char *, uint64_t))(v34 + 8);
      v36(v9, v35);
      v36(v18, v35);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v39);
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_22AA5AD94(v22, (uint64_t)v15);
    if (OUTLINED_FUNCTION_0_43() == 1)
    {
      v26 = v38;
      v27 = v39;
      OUTLINED_FUNCTION_46_7((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 32));
      v28 = MEMORY[0x22E2E133C](v15, v6);
      v29 = *(void (**)(char *, uint64_t))(v26 + 8);
      v29(v6, v27);
      v29(v15, v27);
LABEL_20:
      OUTLINED_FUNCTION_6_52();
      return v28 & 1;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v39);
    goto LABEL_17;
  }
  sub_22AA5AD94(v22, (uint64_t)v12);
  v31 = *v12;
  v30 = v12[1];
  if (OUTLINED_FUNCTION_0_43() != 2)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    sub_22AA5B0A4(v22);
    goto LABEL_18;
  }
  if (v31 == *v24 && v30 == v24[1])
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  v33 = sub_22ABDFF68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
  {
LABEL_22:
    OUTLINED_FUNCTION_6_52();
    v28 = 1;
    return v28 & 1;
  }
  OUTLINED_FUNCTION_6_52();
LABEL_18:
  v28 = 0;
  return v28 & 1;
}

uint64_t sub_22AA5B0A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B133F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA5B0E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SerializationError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA5B120()
{
  return sub_22A9BED8C((unint64_t *)&qword_2540E8B40, (uint64_t (*)(uint64_t))type metadata accessor for SerializationError, (uint64_t)&protocol conformance descriptor for SerializationError);
}

uint64_t *initializeBufferWithCopyOfBuffer for SerializationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      sub_22ABDEAEC();
    }
    else
    {
      v6 = sub_22ABDD0E8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SerializationError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return swift_bridgeObjectRelease();
  if (result <= 1)
  {
    v3 = sub_22ABDD0E8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for SerializationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    sub_22ABDEAEC();
  }
  else
  {
    v4 = sub_22ABDD0E8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for SerializationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_22AA5B0E4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_22ABDEAEC();
    }
    else
    {
      v4 = sub_22ABDD0E8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for SerializationError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_22ABDD0E8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SerializationError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22AA5B0E4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_22ABDD0E8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22AA5B5F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_43()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_3_50()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 64) = 0;
  *(_QWORD *)(v0 - 56) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_6_52()
{
  uint64_t v0;

  return sub_22AA5B0E4(v0);
}

uint64_t sub_22AA5B68C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_22AB4CDFC();
    v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13618) - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      swift_getKeyPath();
      swift_getAtKeyPath();
      swift_release();
      v2 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4CDFC();
        v2 = v12;
      }
      v7 = *(_QWORD *)(v2 + 16);
      if (v7 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_22AB4CDFC();
        v2 = v12;
      }
      *(_QWORD *)(v2 + 16) = v7 + 1;
      v8 = v2 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v10;
      *(_QWORD *)(v8 + 40) = v11;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22AA5B7D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13620);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v26 = (uint64_t *)((char *)&v24 - v4);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v24 - v6);
  v30 = MEMORY[0x24BEE4AF8];
  sub_22AB4D6C8();
  v8 = v30;
  v9 = *(_QWORD *)(a1 + 16);
  v29 = a1;
  sub_22ABDEAEC();
  v25 = v9;
  if (v9)
  {
    v10 = 0;
    do
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13618);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = v28;
      v14 = &v27[*(int *)(v28 + 48)];
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v29+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v10, v11);
      v15 = (uint64_t)v26;
      v16 = (char *)v26 + *(int *)(v13 + 48);
      *v26 = v10;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v14, v11);
      sub_22AA5BE4C(v15, (uint64_t)v7);
      v17 = *v7;
      v18 = sub_22ABDD364();
      v20 = v19;
      sub_22AA5BE94((uint64_t)v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4D6C8();
        v8 = v30;
      }
      v21 = *(_QWORD *)(v8 + 16);
      if (v21 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_22AB4D6C8();
        v8 = v30;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v21 + 1;
      v22 = (_QWORD *)(v8 + 24 * v21);
      v22[4] = v18;
      v22[5] = v20;
      v22[6] = v17;
    }
    while (v25 != v10);
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_22AA5BA08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for DataFrameRowFeatureProvider();
  v2 = swift_allocObject();
  v3 = sub_22ABDEAEC();
  sub_22AA5BADC(v3, a1);
  return v2;
}

uint64_t sub_22AA5BA98()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataFrameBatchProvider()
{
  return objc_opt_self();
}

void sub_22AA5BADC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[4] = a2;
  v3 = sub_22ABDEAEC();
  v4 = sub_22AA5B7D0(v3);
  swift_bridgeObjectRelease();
  sub_22AAD6E64(v4);
  v2[3] = v5;
  OUTLINED_FUNCTION_1_18();
}

void sub_22AA5BB88()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_22ABDEAEC();
  v1 = sub_22AA5B68C(v0);
  swift_bridgeObjectRelease();
  sub_22A9DC5EC(v1);
  OUTLINED_FUNCTION_1_18();
}

uint64_t sub_22AA5BBD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B13618);
  result = sub_22ABDD364();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22AA5BC04()
{
  sub_22ABDEAEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B13618);
  return sub_22ABDD370();
}

uint64_t sub_22AA5BC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  _QWORD v12[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13618);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 24);
  if (!*(_QWORD *)(v6 + 16))
    return 0;
  sub_22ABDEAEC();
  v7 = sub_22AA03688();
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  result = swift_bridgeObjectRelease();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = *(_QWORD *)(v1 + 16);
    if (v9 < *(_QWORD *)(v11 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, v11+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v9, v2);
      sub_22ABDD3AC();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v12[1];
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA5BDE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22AA5BE04()
{
  sub_22AA5BDE0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataFrameRowFeatureProvider()
{
  return objc_opt_self();
}

uint64_t sub_22AA5BE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA5BE94(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13620);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s16UnkeyedContainerVwxx(uint64_t a1)
{
  swift_release();

  return swift_bridgeObjectRelease();
}

_QWORD *_s16UnkeyedContainerVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  v4 = v3;
  sub_22ABDEAEC();
  return a1;
}

_QWORD *_s16UnkeyedContainerVwca(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16UnkeyedContainerVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s16UnkeyedContainerVMa()
{
  return &_s16UnkeyedContainerVN;
}

id sub_22AA5C01C(int a1, id a2)
{
  return objc_msgSend(a2, sel_count);
}

void sub_22AA5C02C()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  OUTLINED_FUNCTION_2_46((uint64_t)v0, sel_addObject_);

  OUTLINED_FUNCTION_1_37();
}

void sub_22AA5C07C()
{
  char v0;
  id v1;

  OUTLINED_FUNCTION_4_40();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v0 & 1);
  OUTLINED_FUNCTION_2_46((uint64_t)v1, sel_addObject_);

  OUTLINED_FUNCTION_1_37();
}

void sub_22AA5C0CC()
{
  char v0;
  id v1;

  OUTLINED_FUNCTION_4_40();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithChar_, v0);
  OUTLINED_FUNCTION_2_46((uint64_t)v1, sel_addObject_);

  OUTLINED_FUNCTION_1_37();
}

void sub_22AA5C11C()
{
  __int16 v0;
  id v1;

  OUTLINED_FUNCTION_4_40();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v0);
  OUTLINED_FUNCTION_2_46((uint64_t)v1, sel_addObject_);

  OUTLINED_FUNCTION_1_37();
}

void sub_22AA5C16C()
{
  unsigned __int8 v0;
  id v1;

  OUTLINED_FUNCTION_4_40();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedChar_, v0);
  OUTLINED_FUNCTION_2_46((uint64_t)v1, sel_addObject_);

  OUTLINED_FUNCTION_1_37();
}

void sub_22AA5C1BC()
{
  unsigned __int16 v0;
  id v1;

  OUTLINED_FUNCTION_4_40();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedShort_, v0);
  OUTLINED_FUNCTION_2_46((uint64_t)v1, sel_addObject_);

  OUTLINED_FUNCTION_1_37();
}

void sub_22AA5C20C(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  v3 = *(void **)(v2 + 8);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), *a2, a1);
  OUTLINED_FUNCTION_7_50(v3, sel_addObject_);

  OUTLINED_FUNCTION_17_16();
}

void sub_22AA5C268()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 8);
  sub_22AA5CDD4();
  sub_22ABDEAEC();
  sub_22AA78958();
  v3 = v2;
  objc_msgSend(v1, sel_addObject_, v2);

}

void sub_22AA5C2E0(float a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[40];

  v3 = *(void **)(v1 + 8);
  objc_msgSend(v3, sel_count);
  sub_22AAABB84();
  OUTLINED_FUNCTION_5_1();
  sub_22AA93B7C();
  OUTLINED_FUNCTION_8_36();
  OUTLINED_FUNCTION_5_38();
  swift_endAccess();
  sub_22AA78768(a1);
  v5 = v4;
  OUTLINED_FUNCTION_7_50(v3, sel_addObject_);

  OUTLINED_FUNCTION_5_1();
  v6 = swift_retain();
  OUTLINED_FUNCTION_11_42(v6, v7, v8, v9, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_3_51();
}

void sub_22AA5C3BC(double a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[40];

  v3 = *(void **)(v1 + 8);
  objc_msgSend(v3, sel_count);
  sub_22AAABB84();
  OUTLINED_FUNCTION_5_1();
  sub_22AA93B7C();
  OUTLINED_FUNCTION_8_36();
  OUTLINED_FUNCTION_5_38();
  swift_endAccess();
  sub_22AA7881C(a1);
  v5 = v4;
  OUTLINED_FUNCTION_7_50(v3, sel_addObject_);

  OUTLINED_FUNCTION_5_1();
  v6 = swift_retain();
  OUTLINED_FUNCTION_11_42(v6, v7, v8, v9, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_3_51();
}

uint64_t sub_22AA5C498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v32;
  uint64_t v35[7];

  v5 = *v3;
  v32 = (id)v3[1];
  objc_msgSend(v32, sel_count);
  v6 = sub_22AAABB84();
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1;
  OUTLINED_FUNCTION_5_1();
  sub_22AA93B7C();
  v13 = *(_QWORD *)(*(_QWORD *)(v5 + 120) + 16);
  sub_22AA93C24(v13);
  sub_22AA7A938(v13, v6, v8, v10, v12, (uint64_t *)(v5 + 120));
  swift_endAccess();
  v35[3] = a2;
  v35[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  v15 = v35[6];
  sub_22AA788D0(v35);
  if (v15)
  {
    OUTLINED_FUNCTION_9_38(v16, v17, v18, v19, v20, v21, v22);
  }
  else
  {
    v23 = (void *)v16;
    OUTLINED_FUNCTION_9_38(v16, v17, v18, v19, v20, v21, v22);
    objc_msgSend(v32, sel_addObject_, v23);

  }
  OUTLINED_FUNCTION_5_1();
  swift_retain();
  sub_22AA7A4F8((uint64_t)v35);
  OUTLINED_FUNCTION_9_38(v24, v25, v26, v27, v28, v29, v30);
  swift_endAccess();
  return swift_release();
}

void sub_22AA5C5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v6 = *(void **)(v3 + 8);
  objc_msgSend(v6, sel_count);
  v7 = sub_22AAABB84();
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  sub_22AA93B7C();
  v14 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 16);
  sub_22AA93C24(v14);
  sub_22AA7A938(v14, v7, v9, v11, v13, (uint64_t *)(v3 + 16));
  objc_msgSend(v6, sel_addObject_, objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init));
  sub_22AB2E93C();
  v20[0] = v15;
  v20[1] = v16;
  v20[2] = v17;
  v19 = _s14KeyedContainerVMa_0(0, a2, a3, v18);
  swift_retain();
  sub_22ABDEAEC();
  MEMORY[0x22E2E4D80](&unk_22ABFB2F8, v19);
  sub_22ABDFD64();
  sub_22AA7A4F8((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  OUTLINED_FUNCTION_6_53();
}

void sub_22AA5C740(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _BYTE v15[40];

  v3 = (void *)v1[1];
  objc_msgSend(v3, sel_count);
  v4 = sub_22AAABB84();
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  sub_22AA93B7C();
  v11 = *(_QWORD *)(v1[2] + 16);
  sub_22AA93C24(v11);
  sub_22AA7A938(v11, v4, v6, v8, v10, v1 + 2);
  v12 = v1[2];
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEB8]), sel_init);
  objc_msgSend(v3, sel_addObject_, v13);
  v14 = *v1;
  a1[3] = &_s16UnkeyedContainerVN;
  a1[4] = sub_22AA5CD98();
  *a1 = v14;
  a1[1] = v13;
  a1[2] = v12;
  swift_retain();
  sub_22ABDEAEC();
  sub_22AA7A4F8((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  OUTLINED_FUNCTION_6_53();
}

unint64_t sub_22AA5C840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  v4 = *(uint64_t **)v1;
  v3 = *(void **)(v1 + 8);
  swift_retain();
  v5 = objc_msgSend(v3, sel_count);
  v6 = _s18ReferencingEncoderCMa();
  swift_allocObject();
  v7 = sub_22AA5F4B4(v4, (uint64_t)v5, v3);
  a1[3] = v6;
  result = sub_22AA5CD58();
  a1[4] = result;
  *a1 = v7;
  return result;
}

id sub_22AA5C8D4(int a1)
{
  uint64_t v1;

  return sub_22AA5C01C(a1, *(id *)(v1 + 8));
}

void sub_22AA5C8DC()
{
  sub_22AA5C02C();
}

void sub_22AA5C8F0()
{
  sub_22AA5C07C();
}

void sub_22AA5C904()
{
  sub_22AA5C268();
}

void sub_22AA5C918(double a1)
{
  sub_22AA5C3BC(a1);
}

void sub_22AA5C92C(float a1)
{
  sub_22AA5C2E0(a1);
}

void sub_22AA5C940(uint64_t a1)
{
  sub_22AA5C20C(a1, (SEL *)&selRef_initWithInteger_);
}

void sub_22AA5C95C()
{
  sub_22AA5C0CC();
}

void sub_22AA5C970()
{
  sub_22AA5C11C();
}

void sub_22AA5C984(uint64_t a1)
{
  sub_22AA5C20C(a1, (SEL *)&selRef_initWithInt_);
}

void sub_22AA5C9A0(uint64_t a1)
{
  sub_22AA5C20C(a1, (SEL *)&selRef_initWithLongLong_);
}

uint64_t sub_22AA5C9BC()
{
  return sub_22ABDFEFC();
}

void sub_22AA5C9D0(uint64_t a1)
{
  sub_22AA5C20C(a1, (SEL *)&selRef_initWithUnsignedInteger_);
}

void sub_22AA5C9EC()
{
  sub_22AA5C16C();
}

void sub_22AA5CA00()
{
  sub_22AA5C1BC();
}

void sub_22AA5CA14(uint64_t a1)
{
  sub_22AA5C20C(a1, (SEL *)&selRef_initWithUnsignedInt_);
}

void sub_22AA5CA30(uint64_t a1)
{
  sub_22AA5C20C(a1, (SEL *)&selRef_initWithUnsignedLongLong_);
}

uint64_t sub_22AA5CA4C()
{
  return sub_22ABDFF08();
}

uint64_t sub_22AA5CA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA5C498(a1, a2, a3);
}

uint64_t sub_22AA5CA74()
{
  return sub_22ABDFE24();
}

uint64_t sub_22AA5CA9C()
{
  return sub_22ABDFE48();
}

uint64_t sub_22AA5CAC4()
{
  return sub_22ABDFE3C();
}

uint64_t sub_22AA5CAEC()
{
  return sub_22ABDFE54();
}

uint64_t sub_22AA5CB14()
{
  return sub_22ABDFE60();
}

uint64_t sub_22AA5CB3C()
{
  return sub_22ABDFE6C();
}

uint64_t sub_22AA5CB64()
{
  return sub_22ABDFE84();
}

uint64_t sub_22AA5CB8C()
{
  return sub_22ABDFE90();
}

uint64_t sub_22AA5CBB4()
{
  return sub_22ABDFE9C();
}

uint64_t sub_22AA5CBDC()
{
  return sub_22ABDFEA8();
}

uint64_t sub_22AA5CC04()
{
  return sub_22ABDFEC0();
}

uint64_t sub_22AA5CC2C()
{
  return sub_22ABDFE78();
}

uint64_t sub_22AA5CC54()
{
  return sub_22ABDFEB4();
}

uint64_t sub_22AA5CC7C()
{
  return sub_22ABDFECC();
}

uint64_t sub_22AA5CCA4()
{
  return sub_22ABDFED8();
}

uint64_t sub_22AA5CCCC()
{
  return sub_22ABDFEE4();
}

uint64_t sub_22AA5CCF4()
{
  return sub_22ABDFEF0();
}

uint64_t sub_22AA5CD1C()
{
  return sub_22ABDFE30();
}

unint64_t sub_22AA5CD58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B13628;
  if (!qword_255B13628)
  {
    v1 = _s18ReferencingEncoderCMa();
    result = MEMORY[0x22E2E4D80](&unk_22ABF3DEC, v1);
    atomic_store(result, (unint64_t *)&qword_255B13628);
  }
  return result;
}

unint64_t sub_22AA5CD98()
{
  unint64_t result;

  result = qword_2540E7F48;
  if (!qword_2540E7F48)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF1E94, &_s16UnkeyedContainerVN);
    atomic_store(result, (unint64_t *)&qword_2540E7F48);
  }
  return result;
}

unint64_t sub_22AA5CDD4()
{
  unint64_t result;

  result = qword_2540E8638;
  if (!qword_2540E8638)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540E8638);
  }
  return result;
}

id OUTLINED_FUNCTION_2_46(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_5_38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  return sub_22AA7A938(v0, v2, v3, v4, v5, v1);
}

id OUTLINED_FUNCTION_7_50(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_8_36()
{
  uint64_t v0;

  return sub_22AA93C24(*(_QWORD *)(*(_QWORD *)(v0 + 120) + 16));
}

uint64_t OUTLINED_FUNCTION_9_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

void OUTLINED_FUNCTION_11_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22AA7A4F8((uint64_t)va);
}

uint64_t sub_22AA5CEB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    v3 = v8;
    v4 = a1 + 40;
    do
    {
      swift_getAtKeyPath();
      v5 = *(_QWORD *)(v8 + 16);
      if (v5 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_22AB4CE30();
      v4 += 16;
      *(_QWORD *)(v8 + 16) = v5 + 1;
      *(_QWORD *)(v8 + 8 * v5 + 32) = v7;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_22AA5CFBC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10438);
  sub_22A9ED9E4();
  swift_getKeyPath();
  swift_retain();
  v4 = sub_22ABDEAEC();
  v5 = sub_22AA5CEB0(v4);
  swift_release();
  sub_22A9DC670(v5);
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  if (v7 == v8)
  {
    v10 = a1;
    sub_22ABDEAEC();
    sub_22AA5EAD4(&v10);
    result = swift_bridgeObjectRelease();
    *a2 = v10;
  }
  else
  {
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  return result;
}

_QWORD *sub_22AA5D0B8(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  result = a2(&v4, a1 + 32, *(_QWORD *)(a1 + 16), 1);
  if (!v2)
    return (_QWORD *)v4;
  return result;
}

uint64_t sub_22AA5D0FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];
  char v11;
  uint64_t v12;

  v10[0] = a1 + 32;
  v10[1] = a2;
  if ((a4 & 1) != 0)
    v8 = a2;
  else
    v8 = a3;
  v10[2] = a3;
  v10[3] = v8;
  v11 = a4 & 1;
  a6(&v12, v10);
  if (!v6)
    v7 = v12;
  swift_release();
  return v7;
}

uint64_t BaseLogisticRegressionClassifierModel.coefficients.getter()
{
  return swift_retain();
}

uint64_t BaseLogisticRegressionClassifierModel.coefficients.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*BaseLogisticRegressionClassifierModel.coefficients.modify())()
{
  return nullsub_1;
}

uint64_t BaseLogisticRegressionClassifierModel.classCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t BaseLogisticRegressionClassifierModel.classCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*BaseLogisticRegressionClassifierModel.classCount.modify())()
{
  return nullsub_1;
}

uint64_t BaseLogisticRegressionClassifierModel.featureCount.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[1];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v1 == 2)
    return v2 - 1;
  v3 = __OFSUB__(v1, 1);
  v4 = v1 - 1;
  if (v3)
  {
    __break(1u);
  }
  else if (v4)
  {
    v2 /= v4;
    return v2 - 1;
  }
  __break(1u);
  return result;
}

double BaseLogisticRegressionClassifierModel.init<A>(coefficients:classCount:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  OUTLINED_FUNCTION_10_32();
  v4 = v3;
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v8);
  v10 = sub_22ABDF11C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v0);
  *(_QWORD *)v4 = v10;
  *(_QWORD *)(v4 + 8) = v1;
  result = 0.0;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 73) = 0u;
  return result;
}

void BaseLogisticRegressionClassifierModel.applied(features:eventHandler:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v2;
  const void *v3;
  _QWORD v6[12];

  v3 = v2;
  OUTLINED_FUNCTION_9_39(v6, v3);
  if (v6[1] == 2)
    sub_22AA5D574(a1 + 32, *(_QWORD *)(a1 + 16), 1, v6[0] + 32, *(_QWORD *)(v6[0] + 16), 1, a2);
  else
    sub_22AA5DAF8(*(_QWORD *)(v6[0] + 16), (uint64_t)v6, a1 + 32, 1, a2);
}

uint64_t BaseLogisticRegressionClassifierModel.applied(features:eventHandler:)(uint64_t a1)
{
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[96];

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  OUTLINED_FUNCTION_9_39(v8, v1);
  v6 = swift_retain();
  return sub_22AA5D0FC(v6, v2, v3, v4, v5, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_22AA5DB74);
}

uint64_t sub_22AA5D3F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  if (*(_QWORD *)(a2 + 8) == 2)
  {
    result = sub_22AA5D5F8();
  }
  else
  {
    MEMORY[0x24BDAC7A8](a1);
    result = (uint64_t)sub_22AA5D0B8(v5, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22AA5F414);
  }
  *a3 = result;
  return result;
}

uint64_t BaseLogisticRegressionClassifierModel.mostLikelyIndices(for:)(uint64_t a1)
{
  const void *v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[96];

  v2 = v1;
  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  OUTLINED_FUNCTION_9_39(v9, v2);
  v7 = swift_retain();
  return sub_22AA5D0FC(v7, v3, v4, v5, v6, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_22AA5DB90);
}

uint64_t sub_22AA5D508@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = result;
    sub_22AA5F344((uint64_t)a2);
    result = sub_22AB5B300(0, v3, a2, v5);
    *a3 = result;
  }
  return result;
}

uint64_t sub_22AA5D574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  double v8;
  long double v9;
  long double v10;
  float v11;
  uint64_t v12;

  dot(_:_:)(a1, a2, a3, a4, a5, a6);
  v9 = exp(-v8);
  v10 = log1p(v9);
  v11 = exp(-v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10430);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v12 + 32) = 0;
  *(float *)(v12 + 40) = 1.0 - v11;
  *(_QWORD *)(v12 + 48) = 1;
  *(float *)(v12 + 56) = v11;
  return sub_22AA5CFBC(v12, a7);
}

uint64_t sub_22AA5D5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_10_32();
  v2 = *(_QWORD *)(v1 + 8);
  sub_22AA35C48();
  v10 = v3;
  if (v2 < 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if ((unint64_t)(v2 + 0x1000000000000000) >> 61)
    goto LABEL_11;
  if (8 * v2 > 1024)
  {
    v3 = OUTLINED_FUNCTION_6_54();
    if (!(_DWORD)v3)
      goto LABEL_7;
  }
  MEMORY[0x24BDAC7A8](v3);
  v5 = OUTLINED_FUNCTION_5_39(v4, v9);
  OUTLINED_FUNCTION_2_47(v5);
  if (v0)
  {
    swift_willThrow(v6);
    OUTLINED_FUNCTION_1_12();
    __break(1u);
LABEL_7:
    v7 = (void *)OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_2_47(v7);
    if (!v0)
      OUTLINED_FUNCTION_2_2();
    OUTLINED_FUNCTION_7_51();
    OUTLINED_FUNCTION_2_2();
  }
  return v10;
}

void sub_22AA5D724(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  long double v13;
  long double v14;
  float v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v43;
  uint64_t v44;

  if (a1)
  {
    v8 = v7;
    if (a2 >= 1)
      bzero(a1, 8 * a2);
    UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
    v10 = *(_QWORD *)(a3 + 8);
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (!v10)
        return;
      v11 = (double *)a1;
      v12 = 0;
      v40 = *(_QWORD *)(a3 + 8);
      while (v12 != v10)
      {
        v43 = v12;
        v13 = exp(-v11[v12]);
        v14 = log1p(v13);
        v15 = exp(-v14);
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B10430);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_22ABE9FB0;
        *(_QWORD *)(v16 + 32) = 0;
        *(float *)(v16 + 40) = 1.0 - v15;
        *(_QWORD *)(v16 + 48) = 1;
        *(float *)(v16 + 56) = v15;
        MEMORY[0x24BDAC7A8](v16);
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B10438);
        sub_22A9ED9E4();
        swift_getKeyPath();
        swift_retain();
        v17 = sub_22ABDEAEC();
        v18 = v8;
        v19 = sub_22AA5CEB0(v17);
        v20 = v8;
        swift_release();
        v21 = sub_22ABDF26C();
        v22 = *(_QWORD *)(v19 + 16);
        if (v22)
        {
          v23 = 0;
          do
          {
            v24 = v21 + 56;
            while (1)
            {
              v25 = *(_QWORD *)(v19 + 32 + 8 * v23++);
              v26 = sub_22ABE0238();
              v27 = -1 << *(_BYTE *)(v21 + 32);
              v28 = v26 & ~v27;
              if (((*(_QWORD *)(v24 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
                break;
              v29 = *(_QWORD *)(v21 + 48);
              if (*(_QWORD *)(v29 + 8 * v28) != v25)
              {
                v30 = ~v27;
                do
                {
                  v28 = (v28 + 1) & v30;
                  if (((*(_QWORD *)(v24 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
                    goto LABEL_18;
                }
                while (*(_QWORD *)(v29 + 8 * v28) != v25);
              }
              if (v23 == v22)
                goto LABEL_19;
            }
LABEL_18:
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v44 = v21;
            sub_22AB48DD0(v25, v28, isUniquelyReferenced_nonNull_native);
            v21 = v44;
            swift_bridgeObjectRelease();
          }
          while (v23 != v22);
LABEL_19:
          swift_bridgeObjectRelease();
          v11 = (double *)a1;
          v20 = v18;
        }
        else
        {
          swift_bridgeObjectRelease();
          v11 = (double *)a1;
        }
        v32 = *(_QWORD *)(v21 + 16);
        swift_bridgeObjectRelease();
        v33 = *(_QWORD *)(v16 + 16);
        swift_bridgeObjectRelease();
        if (v32 != v33)
          goto LABEL_30;
        v44 = v16;
        sub_22ABDEAEC();
        sub_22AA5EAD4(&v44);
        if (v20)
          goto LABEL_33;
        v8 = 0;
        swift_bridgeObjectRelease();
        v34 = v44;
        v35 = *a7;
        v36 = swift_isUniquelyReferenced_nonNull_native();
        *a7 = v35;
        if ((v36 & 1) == 0)
        {
          sub_22AA35C48();
          v35 = v38;
          *a7 = v38;
        }
        v10 = v40;
        v37 = *(_QWORD *)(v35 + 16);
        if (v37 >= *(_QWORD *)(v35 + 24) >> 1)
        {
          sub_22AA35C48();
          v35 = v39;
          *a7 = v39;
        }
        v12 = v43 + 1;
        *(_QWORD *)(v35 + 16) = v37 + 1;
        *(_QWORD *)(v35 + 8 * v37 + 32) = v34;
        if (v43 + 1 == v40)
          return;
      }
      __break(1u);
LABEL_30:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
LABEL_33:
  swift_release();
  __break(1u);
}

void sub_22AA5DAF8(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, _QWORD *a5@<X8>)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a2 + 8);
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a1 != 0x8000000000000000 || v5 != 0)
  {
    sub_22AA5DF80(a3, a4, v5, a5);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_22AA5DB74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_22AA5D3F8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_22AA5DB90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_22AA5D508(a1, *(_QWORD **)(v2 + 16), a2);
}

uint64_t destroy for BaseLogisticRegressionClassifierModel(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for BaseLogisticRegressionClassifierModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = (const void *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  swift_retain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    memcpy((void *)(a1 + 16), v6, 0x49uLL);
  }
  return a1;
}

uint64_t assignWithCopy for BaseLogisticRegressionClassifierModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      swift_retain();
      swift_retain();
      swift_retain();
      return a1;
    }
LABEL_7:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x49uLL);
    return a1;
  }
  if (!v5)
  {
    sub_22AA33AB8(a1 + 16);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 16) = v5;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

void *__swift_memcpy89_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

uint64_t assignWithTake for BaseLogisticRegressionClassifierModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_5;
  if (!v4)
  {
    sub_22AA33AB8(a1 + 16);
LABEL_5:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x49uLL);
    return a1;
  }
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for BaseLogisticRegressionClassifierModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 89))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseLogisticRegressionClassifierModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BaseLogisticRegressionClassifierModel()
{
  return &type metadata for BaseLogisticRegressionClassifierModel;
}

void sub_22AA5DF80(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x24BDAC8D0];
  v5 = a3 - 1;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v5 < 0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if ((unint64_t)(a3 + 0xFFFFFFFFFFFFFFFLL) >> 61)
    goto LABEL_12;
  if (8 * v5 > 1024)
  {
    a1 = OUTLINED_FUNCTION_6_54();
    if (!(_DWORD)a1)
    {
      v10 = (void *)OUTLINED_FUNCTION_4_12();
      OUTLINED_FUNCTION_1_38(v10, a4);
      if (!a2)
        JUMPOUT(0x22E2E4E64);
LABEL_14:
      OUTLINED_FUNCTION_7_51();
      OUTLINED_FUNCTION_2_2();
    }
  }
  MEMORY[0x24BDAC7A8](a1);
  v8 = OUTLINED_FUNCTION_5_39(v7, v11);
  OUTLINED_FUNCTION_1_38(v8, v12);
  if (a2)
  {
    swift_willThrow(v9);
    OUTLINED_FUNCTION_1_12();
    __break(1u);
    goto LABEL_14;
  }
  *a4 = v12[0];
}

void sub_22AA5E100(void *a1@<X0>, uint64_t a2@<X1>, long double *a3@<X2>, unint64_t a4@<X6>, _QWORD *a5@<X8>)
{
  float v5;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (!a1)
    goto LABEL_25;
  v11 = 8 * a2;
  if (a2 >= 1)
    bzero(a1, 8 * a2);
  UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
  if (a2)
  {
    if ((a2 & 0x8000000000000000) == 0)
    {
      a3 = (long double *)a1;
      v12 = a2;
      do
      {
        *a3 = exp(*a3);
        ++a3;
        --v12;
      }
      while (v12);
      goto LABEL_8;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
LABEL_8:
  sub_22A9F6384((uint64_t)a1, a2, 1);
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v14 = v13 + 1.0;
      v15 = (double *)a1;
      v16 = a2;
      do
      {
        *v15 = *v15 / v14;
        ++v15;
        --v16;
      }
      while (v16);
    }
    sub_22AA36708();
    v18 = v17;
    v19 = 0.0;
    if (a2)
    {
      v20 = v11;
      v21 = (double *)a1;
      do
      {
        v22 = *v21++;
        v19 = v19 + v22;
        v20 -= 8;
      }
      while (v20);
    }
    v5 = 1.0 - v19;
    a4 = *(_QWORD *)(v17 + 16);
    a3 = (long double *)(a4 + 1);
    if (a4 < *(_QWORD *)(v17 + 24) >> 1)
      goto LABEL_16;
  }
  sub_22AA36708();
  v18 = v31;
LABEL_16:
  *(_QWORD *)(v18 + 16) = a3;
  v23 = v18 + 16 * a4;
  *(_QWORD *)(v23 + 32) = 0;
  *(float *)(v23 + 40) = v5;
  if (a2)
  {
    v24 = 0;
    v25 = 16 * a4;
    do
    {
      v26 = *((double *)a1 + v24);
      v27 = a4 + v24 + 2;
      if (a4 + v24 + 1 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_22AA36708();
        v18 = v30;
      }
      ++v24;
      v28 = v26;
      *(_QWORD *)(v18 + 16) = v27;
      v29 = v18 + v25;
      *(_QWORD *)(v29 + 48) = v24;
      *(float *)(v29 + 56) = v28;
      v25 += 16;
      v11 -= 8;
    }
    while (v11);
  }
  sub_22AA5CFBC(v18, a5);
}

uint64_t sub_22AA5E31C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];
  char v10;

  v6 = *(_QWORD *)(a3 + 8);
  v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v6 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 != 0x8000000000000000 || v6 != 0)
  {
    v9[0] = result;
    v9[1] = v6 - 1;
    v9[2] = a2 / v7;
    v9[3] = a2 / v7;
    v10 = 0;
    result = sub_22AA5E394(a4, (uint64_t)v9, v6);
    *a5 = result;
    return result;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_22AA5E394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a3 - 1;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = v4 * v3;
  if ((unsigned __int128)(v4 * (__int128)v3) >> 64 != (v4 * v3) >> 63)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v5 < 0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  if ((unint64_t)(v5 + 0x1000000000000000) >> 61)
    goto LABEL_14;
  if (8 * v5 > 1024)
  {
    a1 = OUTLINED_FUNCTION_6_54();
    if (!(_DWORD)a1)
    {
      v11 = (char *)OUTLINED_FUNCTION_4_12();
      OUTLINED_FUNCTION_3_52(v11);
      if (!a3)
        OUTLINED_FUNCTION_2_2();
LABEL_16:
      OUTLINED_FUNCTION_7_51();
      OUTLINED_FUNCTION_2_2();
    }
  }
  MEMORY[0x24BDAC7A8](a1);
  v8 = OUTLINED_FUNCTION_5_39(v7, v12);
  OUTLINED_FUNCTION_3_52(v8);
  if (a3)
  {
    swift_willThrow(v9);
    OUTLINED_FUNCTION_1_12();
    __break(1u);
    goto LABEL_16;
  }
  return v13;
}

void sub_22AA5E4D0(char *a1@<X0>, char *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  char *v6;
  char *v8;
  uint64_t v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  char v20;
  uint64_t v21;

  if (!a1)
    goto LABEL_25;
  v6 = a2 - 1;
  if (__OFSUB__(a2, 1))
    goto LABEL_22;
  v8 = a1;
  v9 = *(_QWORD *)(a3 + 8);
  v19[0] = a1;
  v19[1] = a2 - 1;
  v19[2] = v9;
  v19[3] = v9;
  v20 = 0;
  if (((unint64_t)v6 & 0x8000000000000000) != 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (a2 != (char *)1)
  {
    v11 = 0;
    while ((unsigned __int128)((uint64_t)v11 * (__int128)v9) >> 64 == ((uint64_t)v11 * v9) >> 63)
    {
      if (v9)
      {
        if (v9 < 1)
          goto LABEL_21;
        bzero(v8, 8 * v9);
      }
      ++v11;
      v8 += 8 * v9;
      if (v6 == v11)
        goto LABEL_11;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_11:
  UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)(a4, 0, a3, 1);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v12 = MEMORY[0x24BEE4AF8];
    if (!v9)
    {
LABEL_18:
      *a5 = v12;
      return;
    }
    v21 = MEMORY[0x24BEE4AF8];
    sub_22AB4D6FC();
    v13 = 0;
    v12 = v21;
    while (v9 != v13)
    {
      v17 = v13;
      sub_22AA5E67C(&v17, (uint64_t)v19, a2, (unint64_t)&v18);
      v14 = v18;
      v21 = v12;
      v15 = *(_QWORD *)(v12 + 16);
      if (v15 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_22AB4D6FC();
        v12 = v21;
      }
      ++v13;
      *(_QWORD *)(v12 + 16) = v15 + 1;
      *(_QWORD *)(v12 + 8 * v15 + 32) = v14;
      if (v9 == v13)
        goto LABEL_18;
    }
    goto LABEL_20;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t *sub_22AA5E67C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, unint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v9 = *result;
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    v10 = *(_QWORD *)(a2 + 24);
    if ((unsigned __int128)(v9 * (__int128)v10) >> 64 != (v9 * v10) >> 63)
    {
LABEL_36:
      __break(1u);
      return result;
    }
    v11 = *(_QWORD *)a2 + 8 * v9 * v10;
    v12 = 1;
  }
  else
  {
    v11 = *(_QWORD *)a2 + 8 * v9;
    v12 = *(_QWORD *)(a2 + 24);
  }
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
  {
    if ((v13 & 0x8000000000000000) == 0)
    {
      v14 = 0;
      while (1)
      {
        v4 = v14 * v12;
        if ((unsigned __int128)(v14 * (__int128)v12) >> 64 != (v14 * v12) >> 63)
          break;
        ++v14;
        *(long double *)(v11 + 8 * v4) = exp(*(long double *)(v11 + 8 * v4));
        if (v13 == v14)
          goto LABEL_10;
      }
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_36;
  }
LABEL_10:
  sub_22A9F6384(v11, v13, v12);
  if (v13 < 0)
    goto LABEL_32;
  if (v13)
  {
    v16 = 0;
    v17 = v15 + 1.0;
    do
    {
      v18 = v16 * v12;
      if ((unsigned __int128)(v16 * (__int128)v12) >> 64 != (v16 * v12) >> 63)
        goto LABEL_30;
      ++v16;
      *(double *)(v11 + 8 * v18) = *(double *)(v11 + 8 * v18) / v17;
    }
    while (v13 != v16);
  }
  sub_22AA36708();
  v5 = v13 * v12;
  if ((unsigned __int128)(v13 * (__int128)v12) >> 64 != (v13 * v12) >> 63)
    goto LABEL_33;
  v20 = v19;
  v4 = 8 * v12;
  v29 = (_QWORD *)a4;
  if (v5)
  {
    v21 = 0;
    v22 = 0.0;
    do
    {
      v22 = v22 + *(double *)(v11 + v21);
      v21 += v4;
    }
    while (8 * v12 * v13 != v21);
  }
  else
  {
    v22 = 0.0;
  }
  *(float *)&v6 = 1.0 - v22;
  a4 = *(_QWORD *)(v19 + 16);
  a3 = (char *)(a4 + 1);
  if (a4 >= *(_QWORD *)(v19 + 24) >> 1)
    goto LABEL_34;
  while (1)
  {
    *(_QWORD *)(v20 + 16) = a3;
    v23 = v20 + 16 * a4;
    *(_QWORD *)(v23 + 32) = 0;
    *(_DWORD *)(v23 + 40) = LODWORD(v6);
    if (!v5)
      break;
    a3 = 0;
    v5 = 0;
    v24 = 16 * a4;
    v13 *= 8 * v12;
    while (1)
    {
      v6 = *(double *)&a3[v11];
      v12 = a4 + v5 + 2;
      if (a4 + v5 + 1 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_22AA36708();
        v20 = v27;
      }
      v25 = v6;
      *(_QWORD *)(v20 + 16) = v12;
      v26 = v20 + v24;
      *(_QWORD *)(v26 + 48) = v5 + 1;
      *(float *)(v26 + 56) = v25;
      if (__OFADD__(v5 + 2, 1))
        break;
      ++v5;
      v24 += 16;
      a3 += v4;
      if ((char *)v13 == a3)
        return (uint64_t *)sub_22AA5CFBC(v20, v29);
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    sub_22AA36708();
    v20 = v28;
  }
  return (uint64_t *)sub_22AA5CFBC(v20, v29);
}

void sub_22AA5E8F4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  long double *v9;
  uint64_t v10;
  double v11;
  double v12;
  double *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;

  if (!a1)
    goto LABEL_24;
  v8 = 8 * a2;
  if (a2 >= 1)
    bzero(a1, 8 * a2);
  sub_22AA5EA48(*(_QWORD *)a3 + 32, *(_QWORD *)(*(_QWORD *)a3 + 16), 1, a3);
  if (a2)
  {
    if (a2 < 0)
    {
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      return;
    }
    v9 = (long double *)a1;
    v10 = a2;
    do
    {
      *v9 = exp(*v9);
      ++v9;
      --v10;
    }
    while (v10);
  }
  OUTLINED_FUNCTION_4_41();
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (a2)
  {
    v12 = v11 + 1.0;
    v13 = (double *)a1;
    v14 = a2;
    do
    {
      *v13 = *v13 / v12;
      ++v13;
      --v14;
    }
    while (v14);
  }
  OUTLINED_FUNCTION_4_41();
  if (a2)
  {
    v16 = 0;
    v17 = 0;
    v18 = 1.0 - v15;
    do
    {
      v19 = *((double *)a1 + v16);
      if (v18 < v19)
        v17 = v16 + 1;
      ++v16;
      if (v18 < v19)
        v18 = v19;
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    v17 = 0;
  }
  *a4 = v17;
}

void sub_22AA5EA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a4 + 8);
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 != 0x8000000000000000 || v6 != -1)
  {
    UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_22AA5EAD4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB88478();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_22AA5EB3C(v5);
  *a1 = v2;
}

void sub_22AA5EB3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  float v12;
  uint64_t v13;
  float v14;
  float *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;

  v3 = a1[1];
  v4 = sub_22ABDFD70();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_22AA5F15C(0, v3, 1, a1);
      return;
    }
    goto LABEL_130;
  }
  v5 = v4;
  sub_22AA035F0(v3 / 2);
  v91 = v6;
  v95 = v7;
  v93 = v3;
  v89 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v32 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_96:
    if (v32 < 2)
    {
LABEL_107:
      swift_bridgeObjectRelease();
      if (v93 >= -1)
      {
        *(_QWORD *)(v91 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_135;
    }
    v82 = *v89;
    while (1)
    {
      v83 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v82)
        goto LABEL_139;
      v84 = *(_QWORD *)&v10[16 * v83 + 32];
      v85 = *(_QWORD *)&v10[16 * v32 + 24];
      sub_22AA5F1C4((float *)(v82 + 16 * v84), (float *)(v82 + 16 * *(_QWORD *)&v10[16 * v32 + 16]), v82 + 16 * v85, v95);
      if (v1)
        goto LABEL_92;
      if (v85 < v84)
        goto LABEL_125;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_22AA71F6C((uint64_t)v10);
      if (v83 >= *((_QWORD *)v10 + 2))
        goto LABEL_126;
      v86 = &v10[16 * v83 + 32];
      *(_QWORD *)v86 = v84;
      *((_QWORD *)v86 + 1) = v85;
      v87 = *((_QWORD *)v10 + 2);
      if (v32 > v87)
        goto LABEL_127;
      memmove(&v10[16 * v32 + 16], &v10[16 * v32 + 32], 16 * (v87 - v32));
      *((_QWORD *)v10 + 2) = v87 - 1;
      v32 = v87 - 1;
      if (v87 <= 2)
        goto LABEL_107;
    }
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v90 = *a1 + 8;
  v88 = *a1 + 40;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v92 = v5;
  v94 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(float *)(v90 + 16 * v8);
      v13 = 16 * v11;
      v14 = *(float *)(v90 + 16 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v15 = (float *)(v88 + 16 * v11);
        while (v14 < v12 != *(v15 - 4) >= *v15)
        {
          ++v8;
          v15 += 4;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v14 < v12)
      {
        if (v8 < v11)
          goto LABEL_132;
        if (v11 < v8)
        {
          v16 = 16 * v8 - 16;
          v17 = v8;
          v18 = v11;
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_138;
              v19 = (_OWORD *)(v9 + v13);
              v20 = v9 + v16;
              v21 = *(_QWORD *)(v9 + v13);
              v22 = *(_DWORD *)(v9 + v13 + 8);
              if (v13 != v16 || (unint64_t)v19 >= v9 + v16 + 16)
                *v19 = *(_OWORD *)v20;
              *(_QWORD *)v20 = v21;
              *(_DWORD *)(v20 + 8) = v22;
            }
            ++v18;
            v16 -= 16;
            v13 += 16;
          }
          while (v18 < v17);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_129;
      if (v8 - v11 < v5)
      {
        v24 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_133;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_134;
        if (v8 != v24)
        {
          v25 = v9 + 16 * v8;
          do
          {
            v26 = v25;
            v27 = v11;
            do
            {
              v28 = *(float *)(v26 + 8);
              if (*(float *)(v26 - 8) >= v28)
                break;
              if (!v9)
                goto LABEL_136;
              v29 = *(_QWORD *)v26;
              *(_OWORD *)v26 = *(_OWORD *)(v26 - 16);
              *(float *)(v26 - 8) = v28;
              *(_QWORD *)(v26 - 16) = v29;
              v26 -= 16;
              ++v27;
            }
            while (v8 != v27);
            ++v8;
            v25 += 16;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_128;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_22AA71E78(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v31 = *((_QWORD *)v10 + 2);
    v30 = *((_QWORD *)v10 + 3);
    v32 = v31 + 1;
    v9 = v94;
    if (v31 >= v30 >> 1)
    {
      v81 = sub_22AA71E78((char *)(v30 > 1), v31 + 1, 1, v10);
      v9 = v94;
      v10 = v81;
    }
    *((_QWORD *)v10 + 2) = v32;
    v33 = v10 + 32;
    v34 = &v10[16 * v31 + 32];
    *(_QWORD *)v34 = v11;
    *((_QWORD *)v34 + 1) = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_87:
    v5 = v92;
    v3 = v93;
    if (v8 >= v93)
      goto LABEL_96;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = &v33[16 * v32];
      v41 = *((_QWORD *)v40 - 8);
      v42 = *((_QWORD *)v40 - 7);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_113;
      v45 = *((_QWORD *)v40 - 6);
      v44 = *((_QWORD *)v40 - 5);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_114;
      v47 = v32 - 2;
      v48 = &v33[16 * v32 - 32];
      v50 = *(_QWORD *)v48;
      v49 = *((_QWORD *)v48 + 1);
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_115;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_117;
      if (v52 >= v43)
      {
        v70 = &v33[16 * v35];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_123;
        v63 = v38 < v73;
        goto LABEL_76;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *((_QWORD *)v10 + 4);
        v65 = *((_QWORD *)v10 + 5);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_70;
      }
      v37 = *((_QWORD *)v10 + 4);
      v36 = *((_QWORD *)v10 + 5);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_116;
    v47 = v32 - 2;
    v53 = &v33[16 * v32 - 32];
    v55 = *(_QWORD *)v53;
    v54 = *((_QWORD *)v53 + 1);
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_118;
    v59 = &v33[16 * v35];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_120;
    if (__OFADD__(v57, v62))
      goto LABEL_122;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_76:
      if (v63)
        v35 = v47;
      goto LABEL_78;
    }
LABEL_70:
    if ((v58 & 1) != 0)
      goto LABEL_119;
    v66 = &v33[16 * v35];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_121;
    if (v69 < v57)
      goto LABEL_87;
LABEL_78:
    v74 = v10;
    v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (!v9)
      goto LABEL_137;
    v76 = &v33[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v33[16 * v35];
    v79 = *((_QWORD *)v78 + 1);
    sub_22AA5F1C4((float *)(v9 + 16 * *(_QWORD *)v76), (float *)(v9 + 16 * *(_QWORD *)v78), v9 + 16 * v79, v95);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_110;
    if (v35 > *((_QWORD *)v74 + 2))
      goto LABEL_111;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v33[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v74 + 2);
    if (v35 >= v80)
      goto LABEL_112;
    v10 = v74;
    v32 = v80 - 1;
    memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
    *((_QWORD *)v74 + 2) = v80 - 1;
    v9 = v94;
    if (v80 <= 2)
      goto LABEL_87;
  }
LABEL_92:
  swift_bridgeObjectRelease();
  if (v93 < -1)
    goto LABEL_131;
  *(_QWORD *)(v91 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_22AA5F15C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 16 * a3;
    while (2)
    {
      v6 = v5;
      v7 = result;
      do
      {
        v8 = *(float *)(v6 + 8);
        if (*(float *)(v6 - 8) >= v8)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *(_QWORD *)v6;
        *(_OWORD *)v6 = *(_OWORD *)(v6 - 16);
        *(float *)(v6 - 8) = v8;
        *(_QWORD *)(v6 - 16) = v9;
        v6 -= 16;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_22AA5F1C4(float *a1, float *a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  float *v6;
  float *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  _OWORD *v15;
  float *v20;
  float *v21;
  float *v22;
  BOOL v23;
  BOOL v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = ((char *)a2 - (char *)a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_22AA37C40(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = v4 + 16 * v11;
    if (v7 >= v6 || v10 < 16)
      goto LABEL_45;
    v20 = (float *)(a3 - 16);
    while (1)
    {
      v21 = v20 + 4;
      if (*(v6 - 2) >= *(float *)(v12 - 8))
      {
        v22 = (float *)(v12 - 16);
        v24 = v21 != (float *)v12 || (unint64_t)v20 >= v12;
        v12 -= 16;
        if (!v24)
          goto LABEL_41;
      }
      else
      {
        v22 = v6 - 4;
        v23 = v21 != v6 || v20 >= v6;
        v6 -= 4;
        if (!v23)
          goto LABEL_41;
      }
      *(_OWORD *)v20 = *(_OWORD *)v22;
LABEL_41:
      v20 -= 4;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_45;
    }
  }
  sub_22AA37C40(a1, ((char *)a2 - (char *)a1) / 16, a4);
  v12 = v4 + 16 * v9;
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    do
    {
      if (*(float *)(v4 + 8) >= v6[2])
      {
        v14 = v7 == (float *)v4;
        v15 = (_OWORD *)v4;
        v4 += 16;
        if (v14 && (unint64_t)v7 < v4)
          goto LABEL_18;
      }
      else
      {
        v14 = v7 == v6;
        v15 = v6;
        v6 += 4;
        if (v14 && v7 < v6)
          goto LABEL_18;
      }
      *(_OWORD *)v7 = *v15;
LABEL_18:
      v7 += 4;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_45:
  sub_22AA37C40(v4, (uint64_t)(v12 - v4) / 16, v6);
  return 1;
}

uint64_t sub_22AA5F344(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_22AA5F3DC(v3);
  return a1;
}

uint64_t sub_22AA5F3DC(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22AA5F414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_22AA5E31C(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

void OUTLINED_FUNCTION_2_47(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_22AA5D724(a1, v5, v4, v3, v2, v1, (uint64_t *)(v6 - 80));
}

void OUTLINED_FUNCTION_3_52(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  sub_22AA5E4D0(a1, v3, v2, v1, (_QWORD *)(v4 - 64));
}

uint64_t OUTLINED_FUNCTION_4_41()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22A9F6384(v0, v1, 1);
}

char *OUTLINED_FUNCTION_5_39@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_6_54()
{
  return swift_stdlib_isStackAllocationSafe();
}

void OUTLINED_FUNCTION_7_51()
{
  void *v0;

}

void *OUTLINED_FUNCTION_9_39(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

uint64_t sub_22AA5F4B4(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  _BYTE __dst[88];

  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = a3;
  *(_QWORD *)(v3 + 144) = a2;
  *(_QWORD *)(v3 + 152) = 0;
  v6 = a1 + 3;
  *(_BYTE *)(v3 + 160) = 0;
  OUTLINED_FUNCTION_0_16();
  memcpy(__dst, v6, sizeof(__dst));
  v7 = a1[14];
  OUTLINED_FUNCTION_0_16();
  sub_22AA78914(__dst, v7, a1[15]);
  v9 = v8;
  swift_retain();
  v10 = a3;
  sub_22A9E1144((uint64_t)__dst);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  swift_retain();
  v11 = sub_22AAABB84();
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  OUTLINED_FUNCTION_3_4();
  sub_22AA93B7C();
  v18 = *(_QWORD *)(*(_QWORD *)(v9 + 120) + 16);
  sub_22AA93C24(v18);
  sub_22AA7A938(v18, v11, v13, v15, v17, (uint64_t *)(v9 + 120));
  swift_endAccess();
  swift_release();
  swift_release();

  return v9;
}

BOOL sub_22AA5F5F8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_0_16();
  v1 = v0[2];
  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_16_23();
    v2 = sub_22ABDFB60();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_0_16();
  v3 = v0[15];
  v4 = v0[16];
  v5 = *(_QWORD *)(v3 + 16);
  OUTLINED_FUNCTION_0_16();
  return v2 == v5 + ~*(_QWORD *)(*(_QWORD *)(v4 + 120) + 16);
}

void sub_22AA5F6A0()
{
  uint64_t v0;

  swift_release();
  sub_22AA5F9B8(*(void **)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160));
}

uint64_t sub_22AA5F6C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[3];
  uint64_t v18;

  v1 = v0;
  OUTLINED_FUNCTION_0_16();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_16_23();
    v3 = sub_22ABDFB60();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v3 != 1)
  {
    if (!v3)
    {
      v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE70]), sel_init);
      v6 = &qword_255B101F8;
      goto LABEL_8;
    }
LABEL_14:
    result = sub_22ABDFADC();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_3_4();
  sub_22AA786B0();
  if (!v4)
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = v4;
  swift_endAccess();
  v6 = (unint64_t *)&qword_2540E8630;
LABEL_8:
  v7 = sub_22A9BEDCC(0, v6);
  v18 = v7;
  v17[0] = v5;
  v9 = *(void **)(v1 + 136);
  v8 = *(_QWORD *)(v1 + 144);
  v10 = *(_QWORD *)(v1 + 152);
  if ((*(_BYTE *)(v1 + 160) & 1) != 0)
  {
    sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8638);
    v11 = v9;
    OUTLINED_FUNCTION_16_23();
    sub_22AA78958();
    v13 = v12;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    objc_msgSend(v11, sel_setObject_forKeyedSubscript_, sub_22ABDFF5C(), v13);

    swift_unknownObjectRelease();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v17, v7);
    objc_msgSend(v9, sel_insertObject_atIndex_, sub_22ABDFF5C(), v8);
    swift_unknownObjectRelease();
    sub_22AA5F9B8(v9, v8, v10, 0);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_22A9E197C();
  v15 = v14;
  swift_release();
  sub_22AA5F9B8(*(void **)(v15 + 136), *(_QWORD *)(v15 + 144), *(_QWORD *)(v15 + 152), *(_BYTE *)(v15 + 160));
  return v15;
}

uint64_t sub_22AA5F93C()
{
  sub_22AA5F6C4();
  return swift_deallocClassInstance();
}

uint64_t _s18ReferencingEncoderCMa()
{
  return objc_opt_self();
}

id sub_22AA5F978(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  if ((a4 & 1) == 0)
    return a1;
  v4 = a1;
  return (id)sub_22ABDEAEC();
}

void _s18ReferencingEncoderC9ReferenceOwxx(uint64_t a1)
{
  sub_22AA5F9B8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_22AA5F9B8(void *a1, uint64_t a2, uint64_t a3, char a4)
{

  if ((a4 & 1) != 0)
    swift_bridgeObjectRelease();
}

uint64_t _s18ReferencingEncoderC9ReferenceOwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_22AA5F978(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s18ReferencingEncoderC9ReferenceOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_22AA5F978(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_22AA5F9B8(v7, v8, v9, v10);
  return a1;
}

uint64_t _s18ReferencingEncoderC9ReferenceOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_22AA5F9B8(v5, v7, v6, v8);
  return a1;
}

uint64_t _s18ReferencingEncoderC9ReferenceOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s18ReferencingEncoderC9ReferenceOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_22AA5FB8C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_22AA5FB94(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *_s18ReferencingEncoderC9ReferenceOMa()
{
  return &_s18ReferencingEncoderC9ReferenceON;
}

uint64_t sub_22AA5FBB0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_22A9A1880(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_22AA5FC28(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v13 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, a6);
  v17 = sub_22AA5FD08(a1, (uint64_t)v15, a3, a4, v16, a6, a7);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, a6);
  return v17;
}

uint64_t sub_22AA5FD08(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v27;
  _BYTE __dst[96];

  v27 = a7;
  v12 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = __dst - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  *(_QWORD *)(v16 + 128) = v15;
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  swift_retain();
  swift_retain();
  v18 = a4;
  v19 = sub_22ABE02D4();
  *(_QWORD *)(a5 + 136) = v18;
  *(_QWORD *)(a5 + 144) = v19;
  *(_QWORD *)(a5 + 152) = v20;
  *(_BYTE *)(a5 + 160) = 1;
  swift_release();
  swift_beginAccess();
  memcpy(__dst, a1 + 3, 0x58uLL);
  v21 = a1[14];
  swift_beginAccess();
  sub_22AA78914(__dst, v21, a1[15]);
  v23 = v22;
  v24 = (uint64_t *)(v22 + 120);
  swift_beginAccess();
  sub_22A9E1144((uint64_t)__dst);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  swift_retain();
  sub_22AA93B7C();
  v25 = *(_QWORD *)(*(_QWORD *)(v23 + 120) + 16);
  sub_22AA93C24(v25);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a2, a6);
  sub_22AA5FBB0(v25, (uint64_t)v14, v24, a6, v27);
  swift_endAccess();
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, a6);
  return v23;
}

unint64_t AudioReaderError.errorDescription.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000020;
  if (*v0 == 1)
    v1 = 0xD00000000000006BLL;
  if (*v0)
    return v1;
  else
    return 0xD00000000000006FLL;
}

unint64_t AudioReaderError.debugDescription.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000020;
  if (*v0 == 1)
    v1 = 0xD00000000000006BLL;
  if (*v0)
    return v1;
  else
    return 0xD00000000000006FLL;
}

uint64_t AudioReaderError.hash(into:)()
{
  return sub_22ABE0250();
}

BOOL static AudioReaderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AudioReaderError.hashValue.getter()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return sub_22ABE0280();
}

unint64_t sub_22AA60038()
{
  unint64_t result;

  result = qword_255B13778;
  if (!qword_255B13778)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AudioReaderError, &type metadata for AudioReaderError);
    atomic_store(result, (unint64_t *)&qword_255B13778);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioReaderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AA600D0 + 4 * byte_22ABF2095[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22AA60104 + 4 * asc_22ABF2090[v4]))();
}

uint64_t sub_22AA60104(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA6010C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA60114);
  return result;
}

uint64_t sub_22AA60120(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA60128);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22AA6012C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA60134(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioReaderError()
{
  return &type metadata for AudioReaderError;
}

ValueMetadata *type metadata accessor for PrecisionRecallCurve()
{
  return &type metadata for PrecisionRecallCurve;
}

uint64_t sub_22AA60160(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int *v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_22AB4D538();
    result = v7;
    v4 = (int *)(a1 + 32);
    do
    {
      v5 = *v4;
      v8 = result;
      v6 = *(_QWORD *)(result + 16);
      if (v6 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_22AB4D538();
        result = v8;
      }
      *(_QWORD *)(result + 16) = v6 + 1;
      *(_DWORD *)(result + 4 * v6 + 32) = v5;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_22AA60220(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int *v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_22AB4D538();
    result = v7;
    v4 = (int *)(a1 + 36);
    do
    {
      v5 = *v4;
      v8 = result;
      v6 = *(_QWORD *)(result + 16);
      if (v6 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_22AB4D538();
        result = v8;
      }
      *(_QWORD *)(result + 16) = v6 + 1;
      *(_DWORD *)(result + 4 * v6 + 32) = v5;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return result;
}

float sub_22AA602E0(float a1, float a2, float a3, float a4, float a5)
{
  float result;

  result = (float)((float)((float)(a5 - a3) / (float)(a4 - a2)) * a1)
         + (float)(a3 - (float)((float)((float)(a5 - a3) / (float)(a4 - a2)) * a2));
  if ((~LODWORD(result) & 0x7F800000) == 0)
    return (float)(a3 + a5) * 0.5;
  return result;
}

void sub_22AA6031C(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_22ABDEAEC();
  v5 = sub_22AA60160(v4);
  OUTLINED_FUNCTION_2_1();
  sub_22AA6E188(v5);
  OUTLINED_FUNCTION_29_17();
  if ((v1 & 0x100000000) != 0)
    goto LABEL_19;
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_25_24();
    v6 = MEMORY[0x24BEE4AF8];
    do
    {
      if (COERCE_FLOAT(*(_QWORD *)(a1 + 32)) == v2)
      {
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
          OUTLINED_FUNCTION_0_44(*(_QWORD *)(v6 + 16));
        OUTLINED_FUNCTION_22_31();
        if (v17)
          v7 = OUTLINED_FUNCTION_1_39(v15);
        OUTLINED_FUNCTION_21_36((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v16);
      }
      OUTLINED_FUNCTION_28_20();
    }
    while (!v18);
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v6 + 16);
  if (!v19)
  {
    OUTLINED_FUNCTION_21_3();
LABEL_19:
    OUTLINED_FUNCTION_6_55();
    goto LABEL_20;
  }
  if (v19 != 1)
  {
    do
      OUTLINED_FUNCTION_8_37();
    while (v20 != 1);
  }
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_15_37();
LABEL_20:
  OUTLINED_FUNCTION_12_38();
  OUTLINED_FUNCTION_5_40();
}

void sub_22AA60444(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_22ABDEAEC();
  v5 = sub_22AA60220(v4);
  OUTLINED_FUNCTION_2_1();
  sub_22AA6E188(v5);
  OUTLINED_FUNCTION_29_17();
  if ((v1 & 0x100000000) != 0)
    goto LABEL_19;
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_25_24();
    v6 = MEMORY[0x24BEE4AF8];
    do
    {
      if (COERCE_FLOAT(HIDWORD(*(_QWORD *)(a1 + 32))) == v2)
      {
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
          OUTLINED_FUNCTION_0_44(*(_QWORD *)(v6 + 16));
        OUTLINED_FUNCTION_22_31();
        if (v17)
          v7 = OUTLINED_FUNCTION_1_39(v15);
        OUTLINED_FUNCTION_21_36((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v16);
      }
      OUTLINED_FUNCTION_28_20();
    }
    while (!v18);
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v6 + 16);
  if (!v19)
  {
    OUTLINED_FUNCTION_21_3();
LABEL_19:
    OUTLINED_FUNCTION_6_55();
    goto LABEL_20;
  }
  if (v19 != 1)
  {
    do
      OUTLINED_FUNCTION_7_52();
    while (v20 != 1);
  }
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_15_37();
LABEL_20:
  OUTLINED_FUNCTION_12_38();
  OUTLINED_FUNCTION_5_40();
}

void sub_22AA60570(uint64_t a1)
{
  float v1;
  float v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  if (*(_QWORD *)(a1 + 16))
  {
    v3 = OUTLINED_FUNCTION_14_38() + 40;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      v4.n128_u64[0] = *(_QWORD *)(v3 - 8);
      if (v4.n128_f32[0] == v2 && COERCE_FLOAT(HIDWORD(*(_QWORD *)(v3 - 8))) >= v1)
      {
        v12 = v4;
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
          OUTLINED_FUNCTION_0_44(*(_QWORD *)(v5 + 16));
        v8 = *(_QWORD *)(v5 + 16);
        v7 = *(_QWORD *)(v5 + 24);
        if (v8 >= v7 >> 1)
          OUTLINED_FUNCTION_9_40(v7);
        *(_QWORD *)(v5 + 16) = v8 + 1;
        OUTLINED_FUNCTION_11_43(v5 + 12 * v8, v12);
      }
      OUTLINED_FUNCTION_28_20();
    }
    while (!v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v5 + 16);
  if (v10)
  {
    if (v10 != 1)
    {
      do
        OUTLINED_FUNCTION_8_37();
      while (v11 != 1);
    }
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_24_27();
  }
  else
  {
    OUTLINED_FUNCTION_21_3();
  }
  OUTLINED_FUNCTION_3_53();
}

#error "22AA6070C: call analysis failed (funcsize=141)"

void sub_22AA608CC(uint64_t a1)
{
  float v1;
  float v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  if (*(_QWORD *)(a1 + 16))
  {
    v3 = OUTLINED_FUNCTION_14_38() + 40;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      v4.n128_u64[0] = *(_QWORD *)(v3 - 8);
      if (v4.n128_f32[1] == v2 && v4.n128_f32[0] >= v1)
      {
        v12 = v4;
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
          OUTLINED_FUNCTION_0_44(*(_QWORD *)(v5 + 16));
        v8 = *(_QWORD *)(v5 + 16);
        v7 = *(_QWORD *)(v5 + 24);
        if (v8 >= v7 >> 1)
          OUTLINED_FUNCTION_9_40(v7);
        *(_QWORD *)(v5 + 16) = v8 + 1;
        OUTLINED_FUNCTION_11_43(v5 + 12 * v8, v12);
      }
      OUTLINED_FUNCTION_28_20();
    }
    while (!v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v5 + 16);
  if (v10)
  {
    if (v10 != 1)
    {
      do
        OUTLINED_FUNCTION_7_52();
      while (v11 != 1);
    }
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_24_27();
  }
  else
  {
    OUTLINED_FUNCTION_21_3();
  }
  OUTLINED_FUNCTION_3_53();
}

#error "22AA60A6C: call analysis failed (funcsize=139)"

BOOL sub_22AA60C24(float a1, float a2, float a3, float a4, float a5, float a6)
{
  _BOOL4 v6;

  v6 = a1 == a4;
  if (a2 != a5)
    v6 = 0;
  return a3 == a6 && v6;
}

uint64_t sub_22AA60C40(_QWORD *a1, _QWORD *a2)
{
  return sub_22AA60C20(*a1, *a2);
}

BOOL sub_22AA60C4C(float *a1, float *a2)
{
  return sub_22AA60C24(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PrecisionRecallCurve.Point(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PrecisionRecallCurve.Point(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PrecisionRecallCurve.Point()
{
  return &type metadata for PrecisionRecallCurve.Point;
}

char *OUTLINED_FUNCTION_0_44@<X0>(uint64_t a1@<X8>)
{
  return sub_22AB4D608(0, a1 + 1, 1);
}

uint64_t OUTLINED_FUNCTION_6_55()
{
  return 0;
}

char *OUTLINED_FUNCTION_9_40@<X0>(unint64_t a1@<X8>)
{
  int64_t v1;

  return sub_22AB4D608((char *)(a1 > 1), v1, 1);
}

__n128 OUTLINED_FUNCTION_11_43@<Q0>(uint64_t a1@<X8>, __n128 a2)
{
  int v2;
  __n128 result;

  result = a2;
  *(_QWORD *)(a1 + 32) = a2.n128_u64[0];
  *(_DWORD *)(a1 + 40) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_38()
{
  return sub_22ABDEAEC();
}

unint64_t OUTLINED_FUNCTION_15_37()
{
  unsigned int v0;
  unsigned int v1;

  return v1 | ((unint64_t)v0 << 32);
}

uint64_t OUTLINED_FUNCTION_18_36()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_19_28()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

__n128 OUTLINED_FUNCTION_21_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __n128 result;

  *(_QWORD *)(v9 + 16) = v10;
  v14 = v9 + v12 * v11;
  result = a9;
  *(_QWORD *)(v14 + 32) = a9.n128_u64[0];
  *(_DWORD *)(v14 + 40) = v13;
  return result;
}

__n128 OUTLINED_FUNCTION_23_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 result;

  *(_QWORD *)(v9 + 16) = v10;
  result = a9;
  *(_QWORD *)(v9 + v12 * v11 + 32) = a9.n128_u64[0];
  return result;
}

unint64_t OUTLINED_FUNCTION_24_27()
{
  unsigned int v0;
  unsigned int v1;

  return v1 | ((unint64_t)v0 << 32);
}

uint64_t OUTLINED_FUNCTION_25_24()
{
  return sub_22ABDEAEC();
}

void TabularEstimator.write(_:to:overwrite:)()
{
  sub_22A9ADF4C();
}

void TabularEstimator.read(from:)()
{
  sub_22A9AE018();
}

void SupervisedTabularEstimator.write(_:to:overwrite:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_4(v3, v4);
  type metadata accessor for EstimatorPackageEncoder(0);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_10_3();
  if (!v0)
  {
    OUTLINED_FUNCTION_6_8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 64));
    OUTLINED_FUNCTION_14_2();
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E8140);
    OUTLINED_FUNCTION_9_4();
    OUTLINED_FUNCTION_13_5();
    sub_22AA92618();
    swift_release();
    OUTLINED_FUNCTION_11_5();
  }
  OUTLINED_FUNCTION_25_1();
}

void SupervisedTabularEstimator.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_7();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_7(v2, v3);
  type metadata accessor for EstimatorPackageDecoder(0);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_12_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_7_5();
    OUTLINED_FUNCTION_11_5();
  }
  OUTLINED_FUNCTION_25_1();
}

void UpdatableSupervisedTabularEstimator.writeWithOptimizer(_:to:overwrite:)()
{
  sub_22A9ADF4C();
}

void UpdatableSupervisedTabularEstimator.readWithOptimizer(from:)()
{
  sub_22A9AE018();
}

void sub_22AA6101C()
{
  sub_22AA6104C();
}

void sub_22AA61034()
{
  sub_22AA6104C();
}

void sub_22AA6104C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v1 = *(os_unfair_lock_s **)(v0 + 40);
  os_unfair_lock_lock(v1);
  swift_retain();
  swift_retain();
  if (sub_22AA61510())
  {
    if (XGBGetLastError())
    {
      v2 = sub_22ABDEDD4();
      v4 = v3;
      sub_22AA614D4();
      v5 = OUTLINED_FUNCTION_53();
      *v6 = v2;
      v6[1] = v4;
      swift_willThrow(v5);
      os_unfair_lock_unlock(v1);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    os_unfair_lock_unlock(v1);
  }
}

_QWORD *sub_22AA61110(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v11;
  _QWORD v12[4];
  char v13;

  v3 = *a1;
  v4 = a1[1];
  v5 = *((unsigned __int8 *)a1 + 16);
  v6 = a1[3];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v4;
  *(_BYTE *)(v7 + 32) = v5;
  *(_QWORD *)(v7 + 40) = v6;
  v1[3] = nullsub_1;
  v1[4] = v7;
  if (v5)
    v8 = v3;
  else
    v8 = v4;
  v12[0] = v6 + 32;
  v12[1] = v3;
  v12[2] = v4;
  v12[3] = v8;
  v13 = v5;
  swift_retain();
  sub_22AA611F4((uint64_t)v12);
  OUTLINED_FUNCTION_49_5();
  if (v2)
  {
    swift_release();
    OUTLINED_FUNCTION_0_45();
  }
  else
  {
    v1[2] = v11;
    v9 = (_DWORD *)OUTLINED_FUNCTION_3_54();
    v1[5] = v9;
    *v9 = 0;
  }
  return v1;
}

uint64_t sub_22AA611F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;

  if ((*(_QWORD *)(a1 + 8) & 0x8000000000000000) == 0 && (*(_QWORD *)(a1 + 16) & 0x8000000000000000) == 0)
  {
    if (XGDMatrixCreateFromMat())
    {
      if (XGBGetLastError())
      {
        v1 = sub_22ABDEDD4();
        v3 = v2;
        sub_22AA614D4();
        v4 = swift_allocError();
        *v5 = v1;
        v5[1] = v3;
        return swift_willThrow(v4);
      }
      __break(1u);
    }
    __break(1u);
  }
  result = sub_22ABDFAD0();
  __break(1u);
  return result;
}

uint64_t sub_22AA61320(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  *(_QWORD *)(v1 + 24) = nullsub_1;
  *(_QWORD *)(v1 + 32) = a1;
  swift_retain();
  result = XGDMatrixCreateFromMat();
  if ((_DWORD)result)
  {
    result = XGBGetLastError();
    if (result)
    {
      v3 = sub_22ABDEDD4();
      v5 = v4;
      sub_22AA614D4();
      v6 = OUTLINED_FUNCTION_53();
      *v7 = v3;
      v7[1] = v5;
      swift_willThrow(v6);
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_0_45();
      return v1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA6144C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = XGDMatrixFree();
  (*(void (**)(uint64_t))(v0 + 24))(v1);
  MEMORY[0x22E2E4E64](*(_QWORD *)(v0 + 40), -1, -1);
  swift_release();
  return v0;
}

uint64_t sub_22AA61494()
{
  sub_22AA6144C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XGBoostMatrix()
{
  return objc_opt_self();
}

unint64_t sub_22AA614D4()
{
  unint64_t result;

  result = qword_255B13848;
  if (!qword_255B13848)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3E78, &type metadata for XGBoostError);
    atomic_store(result, (unint64_t *)&qword_255B13848);
  }
  return result;
}

uint64_t sub_22AA61510()
{
  uint64_t v0;

  v0 = XGDMatrixSetDenseInfo();
  swift_release();
  OUTLINED_FUNCTION_49_5();
  return v0;
}

uint64_t sub_22AA61570()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_45()
{
  return swift_deallocPartialClassInstance();
}

uint64_t OUTLINED_FUNCTION_3_54()
{
  return swift_slowAlloc();
}

uint64_t sub_22AA615AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t, double);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];
  uint64_t v47;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8580);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v45 = (uint64_t)&v38 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139B0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A38);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v43 = v11;
  v42(v13, a1, v10, v15);
  sub_22AA2545C(&qword_255B13A40, &qword_255B139B0, MEMORY[0x24BDF5F98]);
  v41 = v13;
  sub_22ABDEE58();
  v18 = &v17[*(int *)(v14 + 36)];
  sub_22AA2545C(&qword_255B13A48, &qword_255B139B0, MEMORY[0x24BDF5FA0]);
  v19 = *(_QWORD *)v18;
  sub_22ABDF38C();
  if (v19 == v46[0])
  {
LABEL_2:
    v20 = 1;
  }
  else
  {
    v39 = v17;
    v40 = v5;
    v21 = v47 + 40;
    v22 = v45;
    while (1)
    {
      v23 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
      v24 = v44;
      sub_22A9CF800(v25, v44, &qword_2540E8580);
      v23(v46, 0);
      v26 = v41;
      ((void (*)(char *, char *, uint64_t))v42)(v41, v17, v10);
      sub_22ABDF398();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v10);
      sub_22AA2550C(v24, v22, &qword_2540E8580);
      v27 = v22;
      v28 = (uint64_t)v40;
      sub_22A9CF800(v27, (uint64_t)v40, &qword_2540E8580);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
      if (__swift_getEnumTagSinglePayload(v28, 1, v29) == 1)
        break;
      v30 = sub_22ABDE84C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      v31 = *(_QWORD *)(v30 + 16);
      if (v31 != *(_QWORD *)(v47 + 16))
        goto LABEL_15;
      if (v31 && v30 != v47)
      {
        if (*(_QWORD *)(v30 + 32) != *(_QWORD *)(v47 + 32))
        {
LABEL_15:
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        v32 = 0;
        v33 = v31 - 1;
        while (v33 != v32)
        {
          v34 = *(_QWORD *)(v30 + 8 * v32 + 40);
          v35 = *(_QWORD *)(v21 + 8 * v32++);
          if (v34 != v35)
            goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      v22 = v45;
      sub_22A9CF82C(v45, &qword_2540E8580);
      v36 = *(_QWORD *)v18;
      v17 = v39;
      sub_22ABDF38C();
      if (v36 == v46[0])
        goto LABEL_2;
    }
    sub_22A9CF82C(v28, &qword_2540E8580);
LABEL_16:
    v17 = v39;
    sub_22A9CF82C(v45, &qword_2540E8580);
    v20 = 0;
  }
  sub_22A9CF82C((uint64_t)v17, &qword_255B13A38);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_22AA619A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t, double);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];
  uint64_t v47;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v45 = (uint64_t)&v38 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139A0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A50);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v43 = v11;
  v42(v13, a1, v10, v15);
  sub_22AA2545C(&qword_255B13A58, &qword_255B139A0, MEMORY[0x24BDF5F98]);
  v41 = v13;
  sub_22ABDEE58();
  v18 = &v17[*(int *)(v14 + 36)];
  sub_22AA2545C(&qword_255B13A60, &qword_255B139A0, MEMORY[0x24BDF5FA0]);
  v19 = *(_QWORD *)v18;
  sub_22ABDF38C();
  if (v19 == v46[0])
  {
LABEL_2:
    v20 = 1;
  }
  else
  {
    v39 = v17;
    v40 = v5;
    v21 = v47 + 40;
    v22 = v45;
    while (1)
    {
      v23 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
      v24 = v44;
      sub_22A9CF800(v25, v44, &qword_2540E8570);
      v23(v46, 0);
      v26 = v41;
      ((void (*)(char *, char *, uint64_t))v42)(v41, v17, v10);
      sub_22ABDF398();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v10);
      sub_22AA2550C(v24, v22, &qword_2540E8570);
      v27 = v22;
      v28 = (uint64_t)v40;
      sub_22A9CF800(v27, (uint64_t)v40, &qword_2540E8570);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
      if (__swift_getEnumTagSinglePayload(v28, 1, v29) == 1)
        break;
      v30 = sub_22ABDE84C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      v31 = *(_QWORD *)(v30 + 16);
      if (v31 != *(_QWORD *)(v47 + 16))
        goto LABEL_15;
      if (v31 && v30 != v47)
      {
        if (*(_QWORD *)(v30 + 32) != *(_QWORD *)(v47 + 32))
        {
LABEL_15:
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        v32 = 0;
        v33 = v31 - 1;
        while (v33 != v32)
        {
          v34 = *(_QWORD *)(v30 + 8 * v32 + 40);
          v35 = *(_QWORD *)(v21 + 8 * v32++);
          if (v34 != v35)
            goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      v22 = v45;
      sub_22A9CF82C(v45, &qword_2540E8570);
      v36 = *(_QWORD *)v18;
      v17 = v39;
      sub_22ABDF38C();
      if (v36 == v46[0])
        goto LABEL_2;
    }
    sub_22A9CF82C(v28, &qword_2540E8570);
LABEL_16:
    v17 = v39;
    sub_22A9CF82C(v45, &qword_2540E8570);
    v20 = 0;
  }
  sub_22A9CF82C((uint64_t)v17, &qword_255B13A50);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_22AA61D94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t, double);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];
  uint64_t v47;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8560);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v45 = (uint64_t)&v38 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13990);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A68);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v43 = v11;
  v42(v13, a1, v10, v15);
  sub_22AA2545C(&qword_255B13A70, &qword_255B13990, MEMORY[0x24BDF5F98]);
  v41 = v13;
  sub_22ABDEE58();
  v18 = &v17[*(int *)(v14 + 36)];
  sub_22AA2545C(&qword_255B13A78, &qword_255B13990, MEMORY[0x24BDF5FA0]);
  v19 = *(_QWORD *)v18;
  sub_22ABDF38C();
  if (v19 == v46[0])
  {
LABEL_2:
    v20 = 1;
  }
  else
  {
    v39 = v17;
    v40 = v5;
    v21 = v47 + 40;
    v22 = v45;
    while (1)
    {
      v23 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
      v24 = v44;
      sub_22A9CF800(v25, v44, &qword_2540E8560);
      v23(v46, 0);
      v26 = v41;
      ((void (*)(char *, char *, uint64_t))v42)(v41, v17, v10);
      sub_22ABDF398();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v10);
      sub_22AA2550C(v24, v22, &qword_2540E8560);
      v27 = v22;
      v28 = (uint64_t)v40;
      sub_22A9CF800(v27, (uint64_t)v40, &qword_2540E8560);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
      if (__swift_getEnumTagSinglePayload(v28, 1, v29) == 1)
        break;
      v30 = sub_22ABDE84C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      v31 = *(_QWORD *)(v30 + 16);
      if (v31 != *(_QWORD *)(v47 + 16))
        goto LABEL_15;
      if (v31 && v30 != v47)
      {
        if (*(_QWORD *)(v30 + 32) != *(_QWORD *)(v47 + 32))
        {
LABEL_15:
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        v32 = 0;
        v33 = v31 - 1;
        while (v33 != v32)
        {
          v34 = *(_QWORD *)(v30 + 8 * v32 + 40);
          v35 = *(_QWORD *)(v21 + 8 * v32++);
          if (v34 != v35)
            goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      v22 = v45;
      sub_22A9CF82C(v45, &qword_2540E8560);
      v36 = *(_QWORD *)v18;
      v17 = v39;
      sub_22ABDF38C();
      if (v36 == v46[0])
        goto LABEL_2;
    }
    sub_22A9CF82C(v28, &qword_2540E8560);
LABEL_16:
    v17 = v39;
    sub_22A9CF82C(v45, &qword_2540E8560);
    v20 = 0;
  }
  sub_22A9CF82C((uint64_t)v17, &qword_255B13A68);
  swift_bridgeObjectRelease();
  return v20;
}

BOOL sub_22AA62188(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD);
  id *v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, double);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[4];
  uint64_t v36;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB20);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v4;
  v31 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v31(v6, a1, v3, v8);
  sub_22AA2545C(&qword_255B13A80, &qword_255B0DB10, MEMORY[0x24BDF5F98]);
  v32 = v6;
  sub_22ABDEE58();
  v11 = &v10[*(int *)(v7 + 36)];
  sub_22AA2545C(&qword_255B0DB28, &qword_255B0DB10, MEMORY[0x24BDF5FA0]);
  v13 = v12;
  do
  {
    v14 = *(_QWORD *)v11;
    sub_22ABDF38C();
    v15 = v35[0];
    v34 = v14;
    if (v14 == v35[0])
      break;
    v16 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v18 = *v17;
    v19 = *v17;
    v16(v35, 0);
    v20 = v32;
    ((void (*)(char *, char *, uint64_t))v31)(v32, v10, v3);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v3);
    if (!v18)
      break;
    v21 = objc_msgSend(v19, sel_shape);
    sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
    sub_22ABDEFF0();

    v22 = v3;
    v23 = v13;
    v24 = v11;
    v25 = v10;
    v26 = v36;
    sub_22ABDEAEC();
    v27 = sub_22ABDEAEC();
    LOBYTE(v21) = sub_22A99EEB4(v27, v26);

    swift_bridgeObjectRelease_n();
    v10 = v25;
    v11 = v24;
    v13 = v23;
    v3 = v22;
    swift_bridgeObjectRelease();
  }
  while ((v21 & 1) != 0);
  v28 = v34 == v15;
  sub_22A9CF82C((uint64_t)v10, &qword_255B0DB20);
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t ColumnAggregator.columnSelection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  v2 = *(_QWORD *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_22A9DA958(v2, v3);
}

uint64_t ColumnAggregator.columnSelection.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  result = sub_22A9DA97C(*(_QWORD *)v1, *(_BYTE *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = v3;
  return result;
}

uint64_t (*ColumnAggregator.columnSelection.modify())()
{
  return nullsub_1;
}

uint64_t ColumnAggregator.init(columnSelection:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

void ColumnAggregator.applied(to:eventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t AssociatedTypeWitness;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, unint64_t, uint64_t);
  uint64_t v59;
  char v60;
  uint64_t v61;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v51 = v4;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v52 = v6;
  v47 = v7;
  v54 = *(_QWORD *)(v7 + 32);
  v48 = *(_QWORD *)(v54 + 8);
  v57 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_9_33();
  v45 = v10;
  v11 = sub_22ABDD400();
  v61 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  v50 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v45 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B100D0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_87();
  v55 = v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v45 - v20;
  v58 = (void (*)(char *, unint64_t, uint64_t))sub_22ABDD2EC();
  v22 = *((_QWORD *)v58 - 1);
  MEMORY[0x24BDAC7A8](v58);
  v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_BYTE *)(v0 + 8);
  v59 = *(_QWORD *)v0;
  v60 = v25;
  v59 = sub_22A9DA52C((uint64_t)&v59);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  sub_22AA2545C((unint64_t *)&qword_255B10060, &qword_255B10000, MEMORY[0x24BEE12C8]);
  v49 = v3;
  sub_22ABDD2D4();
  swift_bridgeObjectRelease();
  v26 = sub_22ABDD2C8();
  (*(void (**)(char *, void (*)(char *, unint64_t, uint64_t)))(v22 + 8))(v24, v58);
  v27 = *(_QWORD *)(v26 + 16);
  v53 = v26;
  if (v27)
  {
    v28 = v26 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
    v56 = *(_QWORD *)(v61 + 72);
    v58 = *(void (**)(char *, unint64_t, uint64_t))(v61 + 16);
    OUTLINED_FUNCTION_50_9();
    v29 = 0;
    v30 = v27;
    v31 = v61;
    while (1)
    {
      v58(v21, v28, v11);
      OUTLINED_FUNCTION_4_6((uint64_t)v21, 0);
      OUTLINED_FUNCTION_106_0((uint64_t)v21, 1, v11);
      if (v32)
        break;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v16, v21, v11);
      v33 = sub_22AA6296C();
      if (v1)
      {
        OUTLINED_FUNCTION_66_6((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
        swift_bridgeObjectRelease_n();
        goto LABEL_19;
      }
      v34 = __OFADD__(v29, v33);
      v29 += v33;
      if (v34)
      {
        __break(1u);
        return;
      }
      v31 = v61;
      OUTLINED_FUNCTION_66_6((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
      v28 += v56;
      if (!--v30)
        goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_50_9();
    v29 = 0;
LABEL_9:
    OUTLINED_FUNCTION_4_6((uint64_t)v21, 1);
  }
  OUTLINED_FUNCTION_93_3();
  v58 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 24);
  v35 = sub_22ABDE8A0();
  swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  sub_22ABDFF20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v36 + 32) = sub_22ABDD274();
  *(_QWORD *)(v36 + 40) = v29;
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v35);
  v37 = v51;
  v56 = v35;
  sub_22ABDE954();
  v59 = 0;
  v38 = v50;
  v39 = v55;
  if (v27)
  {
    v40 = v53 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
    v41 = *(_QWORD *)(v61 + 72);
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16);
    while (1)
    {
      v42(v39, v40, v11);
      OUTLINED_FUNCTION_4_6(v39, 0);
      OUTLINED_FUNCTION_106_0(v39, 1, v11);
      if (v32)
        break;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v38, v39, v11);
      sub_22AA63AD4(v38, (uint64_t)&v59, v37, v57, (uint64_t)v58, v54, v43, v44, v45, AssociatedTypeWitness, v47, v48, v49, v50, v51, v52, v53, v54, v55,
        v56);
      if (v1)
      {
        OUTLINED_FUNCTION_66_6(v38, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
        OUTLINED_FUNCTION_93_3();
        (*(void (**)(uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v37);
        goto LABEL_19;
      }
      OUTLINED_FUNCTION_66_6(v38, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
      v40 += v41;
      --v27;
      v39 = v55;
      if (!v27)
        goto LABEL_15;
    }
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_4_6(v39, 1);
  }
  OUTLINED_FUNCTION_93_3();
LABEL_19:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA6296C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  unint64_t v81;
  void (*v82)(char *, _QWORD *);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  void (*v87)(uint64_t, _QWORD *);
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t *v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  unint64_t v124;
  uint64_t v125;
  _OWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  unint64_t v141;
  uint64_t v142;
  _OWORD *v143;
  uint64_t v144;
  uint64_t *v145;
  void *v146;
  unint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  unint64_t v153;
  uint64_t v154;
  _OWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  id v160;
  uint64_t v161;
  BOOL v162;
  unint64_t v163;
  uint64_t v164;
  _OWORD *v165;
  unint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, _QWORD *);
  uint64_t v200;
  uint64_t v201;
  void (*v202)(char *, _QWORD *);
  uint64_t v203;
  uint64_t v204;
  void (*v205)(char *, _QWORD *);
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  _BYTE v211[24];
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _BYTE v217[32];
  uint64_t v218;
  uint64_t v219;

  OUTLINED_FUNCTION_12();
  v218 = v3;
  v219 = v4;
  v213 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB10);
  OUTLINED_FUNCTION_40_1(v5, (uint64_t)&v205);
  v175 = v6;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B13988);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v10);
  v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8560);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_39_1((uint64_t)&v168 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13990);
  OUTLINED_FUNCTION_40_1(v13, (uint64_t)&v214);
  v178 = v14;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_39_1((uint64_t)&v168 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B13998);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v18);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139A0);
  OUTLINED_FUNCTION_40_1(v21, (uint64_t)&v212);
  v183 = v22;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B139A8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_39_1((uint64_t)&v168 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8580);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v28);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139B0);
  OUTLINED_FUNCTION_40_1(v29, (uint64_t)v217);
  v189 = v30;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v32);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139B8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_0();
  v199 = (void (*)(char *, _QWORD *))v34;
  v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139C0);
  v200 = *(_QWORD *)(v209 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_87();
  v198 = v36;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v37);
  v194 = (char *)&v168 - v38;
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_44_9(v40, v168);
  v208 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B139D0);
  v203 = *(v208 - 1);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_87();
  v201 = v42;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v43);
  v196 = (char *)&v168 - v44;
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139D8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_0();
  v205 = (void (*)(char *, _QWORD *))v46;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139E0);
  v206 = *(_QWORD *)(v47 - 8);
  v207 = v47;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)&v168 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51);
  v53 = (char *)&v168 - v52;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139E8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_46_1();
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139F0);
  v57 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v59 = (char *)&v168 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v60);
  v62 = (uint64_t)&v168 - v61;
  v204 = v1;
  sub_22ABDD3E8();
  if (swift_dynamicCastMetatype())
    return 1;
  v170 = v59;
  v171 = v57;
  v172 = v0;
  v173 = v62;
  v174 = v50;
  v169 = v53;
  v64 = (_QWORD *)v207;
  v63 = v208;
  v65 = v209;
  if (OUTLINED_FUNCTION_77_7() || OUTLINED_FUNCTION_77_7() || OUTLINED_FUNCTION_77_7() || OUTLINED_FUNCTION_77_7())
    return 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B100D8);
  if (OUTLINED_FUNCTION_8_38())
  {
    v67 = v173;
    OUTLINED_FUNCTION_67_7();
    sub_22AB4EB20();
    if (v68 >= 2)
    {
      v209 = *(_QWORD *)(v68 + 16);
      sub_22AA6A23C(v68);
    }
    else
    {
      v209 = 0;
    }
    v70 = v172;
    v71 = v171;
    v62 = (uint64_t)v170;
    v208 = *(_QWORD **)(v171 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v208)(v170, v67, v56);
    sub_22AA2545C(&qword_255B13A28, &qword_255B139F0, MEMORY[0x24BDF5F98]);
    sub_22ABDEE58();
    v72 = (uint64_t *)(v70 + *(int *)(v54 + 36));
    sub_22AA2545C(&qword_255B13A30, &qword_255B139F0, MEMORY[0x24BDF5FA0]);
    while (1)
    {
      v73 = *v72;
      sub_22ABDF38C();
      if (v73 == v210)
        break;
      sub_22ABDF464();
      v75 = *v74;
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_27_25();
      ((void (*)(uint64_t, uint64_t, uint64_t))v208)(v62, v70, v56);
      sub_22ABDF398();
      v76 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v76(v62, v56);
      if (v75)
      {
        v77 = *(_QWORD *)(v75 + 16);
        swift_bridgeObjectRelease();
        if (v77 != v209)
          goto LABEL_21;
      }
      else if (v209)
      {
LABEL_21:
        sub_22A9CF82C(v70, &qword_255B139E8);
        OUTLINED_FUNCTION_44_16();
        OUTLINED_FUNCTION_11_44();
        v78 = OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_13_45(v78, v79);
        v76(v173, v56);
        return v62;
      }
    }
    sub_22A9CF82C(v70, &qword_255B139E8);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v173, v56);
    return v209;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
  if (OUTLINED_FUNCTION_8_38())
  {
    OUTLINED_FUNCTION_35_14();
    sub_22ABDD3DC();
    sub_22AB4EB34();
    if (v69 >= 2)
      OUTLINED_FUNCTION_97_2(v69);
    else
      v62 = 0;
    v82 = v205;
    OUTLINED_FUNCTION_56_12(v206);
    OUTLINED_FUNCTION_37_18(&qword_255B13A18, v83, MEMORY[0x24BDF5F98]);
    OUTLINED_FUNCTION_47_12();
    OUTLINED_FUNCTION_37_18(&qword_255B13A20, v84, MEMORY[0x24BDF5FA0]);
    OUTLINED_FUNCTION_55_11();
    while (1)
    {
      v85 = OUTLINED_FUNCTION_29_22();
      if (v56 == v210)
      {
        OUTLINED_FUNCTION_92_2(v85, &qword_255B139D8);
        v87 = *(void (**)(uint64_t, _QWORD *))(v206 + 8);
        v88 = (uint64_t)v169;
        goto LABEL_62;
      }
      OUTLINED_FUNCTION_18_37();
      OUTLINED_FUNCTION_26_25();
      OUTLINED_FUNCTION_27_25();
      v86 = v174;
      OUTLINED_FUNCTION_33_23();
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_31_18(v206);
      if (v56)
      {
        OUTLINED_FUNCTION_53_16();
        if (v86 != (char *)v62)
          goto LABEL_35;
      }
      else if (v62)
      {
LABEL_35:
        sub_22A9CF82C((uint64_t)v205, &qword_255B139D8);
        OUTLINED_FUNCTION_84_8();
        OUTLINED_FUNCTION_11_44();
        v89 = OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_13_45(v89, v90);
        v91 = v169;
        goto LABEL_64;
      }
      OUTLINED_FUNCTION_55_11();
      v82 = v205;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B100E0);
  if (OUTLINED_FUNCTION_8_38())
  {
    v80 = v196;
    OUTLINED_FUNCTION_21_37();
    sub_22AB4EBB8();
    if (v81 >= 2)
      OUTLINED_FUNCTION_97_2(v81);
    else
      v62 = 0;
    v64 = v63;
    (*(void (**)(uint64_t, char *, _QWORD *))(v203 + 16))(v201, v80, v63);
    OUTLINED_FUNCTION_37_18(&qword_255B13A08, v93, MEMORY[0x24BDF5F98]);
    v82 = v202;
    OUTLINED_FUNCTION_47_12();
    OUTLINED_FUNCTION_37_18(&qword_255B13A10, v94, MEMORY[0x24BDF5FA0]);
    OUTLINED_FUNCTION_55_11();
    while (1)
    {
      v95 = OUTLINED_FUNCTION_29_22();
      if (v56 == v210)
      {
        OUTLINED_FUNCTION_92_2(v95, &qword_255B139C8);
        v87 = *(void (**)(uint64_t, _QWORD *))(v203 + 8);
        v88 = (uint64_t)v196;
        goto LABEL_62;
      }
      OUTLINED_FUNCTION_18_37();
      OUTLINED_FUNCTION_26_25();
      OUTLINED_FUNCTION_27_25();
      v96 = v201;
      OUTLINED_FUNCTION_33_23();
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_31_18(v203);
      if (v56)
      {
        OUTLINED_FUNCTION_53_16();
        if (v96 != v62)
          goto LABEL_48;
      }
      else if (v62)
      {
LABEL_48:
        sub_22A9CF82C((uint64_t)v202, &qword_255B139C8);
        OUTLINED_FUNCTION_84_8();
        OUTLINED_FUNCTION_11_44();
        v97 = OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_13_45(v97, v98);
        v91 = v196;
        goto LABEL_64;
      }
      OUTLINED_FUNCTION_55_11();
      v82 = v202;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8);
  if (!OUTLINED_FUNCTION_8_38())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
    if (OUTLINED_FUNCTION_8_38())
    {
      v99 = v192;
      OUTLINED_FUNCTION_21_37();
      v100 = v191;
      sub_22AB4EBE0(v191);
      OUTLINED_FUNCTION_106_0(v100, 1, v190);
      if (v118)
      {
        v101 = &qword_255B139A8;
        v102 = v100;
      }
      else
      {
        OUTLINED_FUNCTION_94_4(v100, &qword_2540E8580, (uint64_t)&v216);
        OUTLINED_FUNCTION_106_0(v99, 1, v0);
        if (!v118)
        {
          v119 = v188;
          v120 = sub_22ABDE84C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v119, v0);
LABEL_73:
          OUTLINED_FUNCTION_50_9();
          v121 = v192;
          v122 = v213;
          v123 = sub_22AA615AC(v192, v120);
          v213 = v122;
          if ((v123 & 1) == 0)
          {
            OUTLINED_FUNCTION_3_8();
            OUTLINED_FUNCTION_44_16();
            OUTLINED_FUNCTION_11_44();
            v127 = OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_13_45(v127, v128);
            v87 = *(void (**)(uint64_t, _QWORD *))(v189 + 8);
            v88 = v121;
            goto LABEL_77;
          }
          v124 = *(_QWORD *)(v120 + 16);
          if (v124 > 1)
          {
            OUTLINED_FUNCTION_3_8();
            sub_22AA59E94();
            v125 = OUTLINED_FUNCTION_53();
            *v126 = xmmword_22ABF2290;
            OUTLINED_FUNCTION_6_34(v125);
            v88 = OUTLINED_FUNCTION_66_13();
LABEL_77:
            v129 = v217;
LABEL_78:
            v107 = (_QWORD *)*((_QWORD *)v129 - 32);
            goto LABEL_113;
          }
          if (v124)
            v62 = *(_QWORD *)(v120 + 32);
          else
            v62 = 1;
          OUTLINED_FUNCTION_3_8();
          v88 = OUTLINED_FUNCTION_66_13();
          v137 = v217;
LABEL_91:
          v107 = (_QWORD *)*((_QWORD *)v137 - 32);
          goto LABEL_113;
        }
        v101 = &qword_2540E8580;
        v102 = v188;
      }
      sub_22A9CF82C(v102, v101);
      v120 = MEMORY[0x24BEE4AF8];
      goto LABEL_73;
    }
    v110 = v184;
    v111 = v185;
    v112 = v186;
    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    if (swift_dynamicCastMetatype())
    {
      OUTLINED_FUNCTION_67_7();
      v114 = v187;
      v115 = v110;
      sub_22AB4EBFC(v187);
      OUTLINED_FUNCTION_106_0(v114, 1, v181);
      if (v118)
      {
        v116 = &qword_255B13998;
        v117 = &v215;
      }
      else
      {
        OUTLINED_FUNCTION_28_21(v187, &qword_2540E8570, (uint64_t)v211);
        v134 = OUTLINED_FUNCTION_69_9();
        OUTLINED_FUNCTION_106_0(v134, v135, v113);
        if (!v136)
        {
          v115 = v182;
          v138 = sub_22ABDE84C();
          OUTLINED_FUNCTION_66_6(v115, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 8));
LABEL_92:
          OUTLINED_FUNCTION_22_21();
          v139 = v213;
          v140 = sub_22AA619A0(v110, v138);
          v213 = v139;
          if ((v140 & 1) != 0)
          {
            v141 = *(_QWORD *)(v138 + 16);
            if (v141 <= 1)
            {
              if (v141)
                v62 = *(_QWORD *)(v138 + 32);
              else
                v62 = 1;
              OUTLINED_FUNCTION_23();
              v88 = OUTLINED_FUNCTION_24_28();
              v107 = v111;
              goto LABEL_113;
            }
            OUTLINED_FUNCTION_23();
            sub_22AA59E94();
            v142 = OUTLINED_FUNCTION_53();
            *v143 = xmmword_22ABF2290;
            OUTLINED_FUNCTION_6_34(v142);
            v88 = OUTLINED_FUNCTION_24_28();
          }
          else
          {
            OUTLINED_FUNCTION_23();
            OUTLINED_FUNCTION_44_16();
            OUTLINED_FUNCTION_11_44();
            v144 = OUTLINED_FUNCTION_53();
            *v145 = v138;
            v145[1] = v115;
            OUTLINED_FUNCTION_6_34(v144);
            v88 = OUTLINED_FUNCTION_24_28();
          }
          v107 = v111;
LABEL_113:
          v87(v88, v107);
          return v62;
        }
        v116 = &qword_2540E8570;
        v117 = (uint64_t *)v211;
      }
      OUTLINED_FUNCTION_57_10(v116, (uint64_t)v117);
      v138 = MEMORY[0x24BEE4AF8];
      goto LABEL_92;
    }
    v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    if (swift_dynamicCastMetatype())
    {
      OUTLINED_FUNCTION_67_7();
      v131 = v180;
      sub_22AB4ECF4(v180);
      OUTLINED_FUNCTION_106_0(v131, 1, v176);
      if (v118)
      {
        v132 = &qword_255B13988;
        v133 = &v210;
      }
      else
      {
        OUTLINED_FUNCTION_94_4(v180, &qword_2540E8560, (uint64_t)&v207);
        OUTLINED_FUNCTION_106_0(v112, 1, v130);
        if (!v148)
        {
          v149 = v177;
          v150 = sub_22ABDE84C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 8))(v149, v130);
LABEL_108:
          OUTLINED_FUNCTION_50_9();
          v151 = v213;
          v152 = sub_22AA61D94(v112, v150);
          v213 = v151;
          if ((v152 & 1) != 0)
          {
            v153 = *(_QWORD *)(v150 + 16);
            if (v153 <= 1)
            {
              if (v153)
                v62 = *(_QWORD *)(v150 + 32);
              else
                v62 = 1;
              OUTLINED_FUNCTION_3_8();
              v88 = OUTLINED_FUNCTION_63_8();
              goto LABEL_113;
            }
            OUTLINED_FUNCTION_3_8();
            sub_22AA59E94();
            v154 = OUTLINED_FUNCTION_53();
            *v155 = xmmword_22ABF2290;
          }
          else
          {
            OUTLINED_FUNCTION_3_8();
            v156 = OUTLINED_FUNCTION_44_16();
            v158 = v157;
            sub_22AA59E94();
            v154 = OUTLINED_FUNCTION_53();
            *v159 = v156;
            v159[1] = v158;
          }
          OUTLINED_FUNCTION_6_34(v154);
          v88 = OUTLINED_FUNCTION_63_8();
          goto LABEL_113;
        }
        v132 = &qword_2540E8560;
        v133 = &v207;
      }
      OUTLINED_FUNCTION_57_10(v132, (uint64_t)v133);
      v150 = MEMORY[0x24BEE4AF8];
      goto LABEL_108;
    }
    sub_22A9BEDCC(0, &qword_255B10788);
    if (!OUTLINED_FUNCTION_8_38())
      return 0;
    OUTLINED_FUNCTION_35_14();
    OUTLINED_FUNCTION_67_7();
    sub_22AB4ED10();
    if ((unint64_t)v146 >= 2)
    {
      v147 = (unint64_t)v146;
      v160 = objc_msgSend(v146, sel_shape);
      OUTLINED_FUNCTION_79_6();
      sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
      OUTLINED_FUNCTION_91_4();
      OUTLINED_FUNCTION_88_4();
    }
    else
    {
      v147 = MEMORY[0x24BEE4AF8];
    }
    OUTLINED_FUNCTION_22_21();
    v161 = v213;
    v162 = sub_22AA62188(v179, v147);
    v213 = v161;
    if (!v162)
    {
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_44_16();
      OUTLINED_FUNCTION_11_44();
      v164 = OUTLINED_FUNCTION_53();
      *v166 = v147;
      v166[1] = v112;
      goto LABEL_123;
    }
    if (v147 >> 62)
    {
      OUTLINED_FUNCTION_22_21();
      v167 = sub_22ABDFB60();
      OUTLINED_FUNCTION_23();
      if (v167 > 1)
        goto LABEL_121;
      OUTLINED_FUNCTION_22_21();
      v163 = sub_22ABDFB60();
      OUTLINED_FUNCTION_23();
    }
    else
    {
      v163 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v163 > 1)
      {
LABEL_121:
        OUTLINED_FUNCTION_23();
        sub_22AA59E94();
        v164 = OUTLINED_FUNCTION_53();
        *v165 = xmmword_22ABF2290;
LABEL_123:
        OUTLINED_FUNCTION_6_34(v164);
        v88 = OUTLINED_FUNCTION_60_12();
        goto LABEL_78;
      }
    }
    if (v163)
    {
      OUTLINED_FUNCTION_58_7();
      OUTLINED_FUNCTION_89_3();
    }
    OUTLINED_FUNCTION_23();
    v62 = 1;
    v88 = OUTLINED_FUNCTION_60_12();
    goto LABEL_91;
  }
  OUTLINED_FUNCTION_21_37();
  sub_22AB4EBCC();
  if (v92 >= 2)
    OUTLINED_FUNCTION_97_2(v92);
  else
    v62 = 0;
  v64 = (_QWORD *)v65;
  v82 = v199;
  OUTLINED_FUNCTION_56_12(v200);
  OUTLINED_FUNCTION_37_18(&qword_255B139F8, v103, MEMORY[0x24BDF5F98]);
  OUTLINED_FUNCTION_47_12();
  OUTLINED_FUNCTION_37_18(&qword_255B13A00, v104, MEMORY[0x24BDF5FA0]);
  OUTLINED_FUNCTION_55_11();
  while (1)
  {
    v105 = OUTLINED_FUNCTION_29_22();
    if (v56 == v210)
    {
      OUTLINED_FUNCTION_92_2(v105, &qword_255B139B8);
      v87 = *(void (**)(uint64_t, _QWORD *))(v200 + 8);
      v88 = (uint64_t)v194;
LABEL_62:
      v107 = v64;
      goto LABEL_113;
    }
    OUTLINED_FUNCTION_18_37();
    OUTLINED_FUNCTION_26_25();
    OUTLINED_FUNCTION_27_25();
    v106 = v198;
    OUTLINED_FUNCTION_33_23();
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_31_18(v200);
    if (!v56)
      break;
    OUTLINED_FUNCTION_53_16();
    if (v106 != v62)
      goto LABEL_63;
LABEL_60:
    OUTLINED_FUNCTION_55_11();
    v82 = v199;
  }
  if (!v62)
    goto LABEL_60;
LABEL_63:
  sub_22A9CF82C((uint64_t)v199, &qword_255B139B8);
  OUTLINED_FUNCTION_84_8();
  OUTLINED_FUNCTION_11_44();
  v108 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_13_45(v108, v109);
  v91 = v194;
LABEL_64:
  v82(v91, v64);
  return v62;
}

void sub_22AA63AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  double v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t);
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  double v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(void);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  double v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t (*v176)(uint64_t, _QWORD);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t *v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t *v203;
  _QWORD *v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  id v210;
  char v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  double v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223[2];
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD v247[3];
  _QWORD v248[2];
  _QWORD v249[2];
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _QWORD v255[2];
  _QWORD v256[3];
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD v260[2];
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;

  OUTLINED_FUNCTION_12();
  a19 = v21;
  a20 = v22;
  v265 = v23;
  v266 = v20;
  v264 = v24;
  v26 = v25;
  v28 = v27;
  v268 = v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB10);
  OUTLINED_FUNCTION_40_1(v30, (uint64_t)&v246);
  v225 = v31;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B13988);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v35);
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8560);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v37);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13990);
  OUTLINED_FUNCTION_40_1(v38, (uint64_t)v248);
  v228 = v39;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B13998);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v43);
  v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v45);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139A0);
  OUTLINED_FUNCTION_40_1(v46, (uint64_t)&v252);
  v232 = v47;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B139A8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v51);
  v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8580);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v53);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139B0);
  OUTLINED_FUNCTION_40_1(v54, (uint64_t)v256);
  v234 = v55;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v56);
  OUTLINED_FUNCTION_98_4((uint64_t)v223 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v263 = v26;
  v58 = sub_22ABDE8A0();
  v59 = sub_22ABDF5D8();
  v60 = sub_22ABDF5D8();
  OUTLINED_FUNCTION_40_1(v60, (uint64_t)&v258);
  v236 = v61;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v62);
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_39_1(v63);
  v241 = v59;
  v237 = *(_QWORD *)(v59 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_39_1(v65);
  v267 = v58;
  v66 = sub_22ABDD3A0();
  OUTLINED_FUNCTION_40_1(v66, (uint64_t)&v265);
  v240 = v67;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v68);
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_39_1(v69);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139C0);
  OUTLINED_FUNCTION_40_1(v70, (uint64_t)&v267);
  v244 = v71;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v72);
  OUTLINED_FUNCTION_39_1((uint64_t)v223 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139D0);
  OUTLINED_FUNCTION_40_1(v74, (uint64_t)&a9);
  v245 = v75;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v76);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v77);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139E0);
  OUTLINED_FUNCTION_40_1(v78, (uint64_t)&a13);
  v247[2] = v79;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v80);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v81);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139F0);
  OUTLINED_FUNCTION_40_1(v82, (uint64_t)&a16);
  v249[0] = v83;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v84);
  OUTLINED_FUNCTION_98_4((uint64_t)v223 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0));
  v260[0] = sub_22ABDF0F8();
  v252 = sub_22ABDD3A0();
  v251 = *(_QWORD *)(v252 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v86);
  OUTLINED_FUNCTION_9_33();
  v253 = v87;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AD8);
  v254 = *(_QWORD *)(v88 - 8);
  v255[0] = v88;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v89);
  OUTLINED_FUNCTION_0();
  v259 = v90;
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A88);
  v255[1] = *(_QWORD *)(v91 - 8);
  v256[0] = v91;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v92);
  OUTLINED_FUNCTION_44_9(v93, v223[0]);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A90);
  v256[1] = *(_QWORD *)(v94 - 8);
  v256[2] = v94;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v95);
  OUTLINED_FUNCTION_0();
  v257 = v96;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A98);
  v98 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v100 = (char *)v223 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13AA0);
  v102 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  OUTLINED_FUNCTION_46_1();
  v103 = sub_22ABDD3A0();
  v261 = *(_QWORD *)(v103 - 8);
  v262 = v103;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v104);
  v106 = (char *)v223 - v105;
  v260[1] = sub_22ABDD3E8();
  if (swift_dynamicCastMetatype())
  {
    sub_22ABDD3DC();
    OUTLINED_FUNCTION_50_14();
    MEMORY[0x24BDAC7A8](v107);
    OUTLINED_FUNCTION_85_8();
    *(_QWORD *)(v108 - 48) = v28;
    *(_QWORD *)(v108 - 40) = v109;
    *(_QWORD *)(v108 - 32) = v264;
    *(_QWORD *)(v108 - 24) = v106;
    v111 = v267;
    v110 = v268;
    *(_QWORD *)(v108 - 16) = v268;
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v111);
    OUTLINED_FUNCTION_10_33();
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v261 + 8))(v106, v262);
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_36_18();
    if (!v119)
    {
      *v118 = v117;
      (*(void (**)(char *, uint64_t))(v261 + 8))(v106, v262);
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_45;
  }
  v261 = v102;
  v262 = v101;
  v223[1] = v98;
  v97 = v257;
  v112 = v258;
  v113 = v259;
  v224 = v28;
  if (OUTLINED_FUNCTION_62_9())
  {
    v114 = OUTLINED_FUNCTION_90_6();
    MEMORY[0x24BDAC7A8](v114);
    OUTLINED_FUNCTION_5_41();
    *(_QWORD *)(v115 - 32) = v116;
    *(_QWORD *)(v115 - 24) = v58;
    *(_QWORD *)(v115 - 16) = v268;
    OUTLINED_FUNCTION_76_6();
  }
  if (OUTLINED_FUNCTION_62_9())
  {
    OUTLINED_FUNCTION_90_6();
    OUTLINED_FUNCTION_50_14();
    MEMORY[0x24BDAC7A8](v120);
    OUTLINED_FUNCTION_5_41();
    *(_QWORD *)(v121 - 32) = v122;
    *(_QWORD *)(v121 - 24) = v100;
    *(_QWORD *)(v121 - 16) = v268;
    OUTLINED_FUNCTION_76_6();
  }
  v123 = OUTLINED_FUNCTION_62_9();
  v124 = v224;
  if (v123)
  {
    OUTLINED_FUNCTION_51_17();
    OUTLINED_FUNCTION_50_14();
    MEMORY[0x24BDAC7A8](v125);
    OUTLINED_FUNCTION_85_8();
    *(_QWORD *)(v126 - 48) = v124;
    *(_QWORD *)(v126 - 40) = v127;
    *(_QWORD *)(v126 - 32) = v264;
    *(_QWORD *)(v126 - 24) = v97;
    *(_QWORD *)(v126 - 16) = v268;
    OUTLINED_FUNCTION_76_6();
  }
  v128 = OUTLINED_FUNCTION_62_9();
  v110 = v268;
  if (v128)
  {
    OUTLINED_FUNCTION_51_17();
    OUTLINED_FUNCTION_50_14();
    MEMORY[0x24BDAC7A8](v129);
    OUTLINED_FUNCTION_5_41();
    *(_QWORD *)(v130 - 32) = v131;
    *(_QWORD *)(v130 - 24) = v112;
    *(_QWORD *)(v130 - 16) = v110;
    OUTLINED_FUNCTION_76_6();
  }
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_51_17();
    OUTLINED_FUNCTION_50_14();
    MEMORY[0x24BDAC7A8](v132);
    OUTLINED_FUNCTION_5_41();
    *(_QWORD *)(v133 - 32) = v134;
    *(_QWORD *)(v133 - 24) = v113;
    *(_QWORD *)(v133 - 16) = v110;
    OUTLINED_FUNCTION_52_3();
  }
  if (!swift_dynamicCastMetatype())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B100D8);
    v139 = swift_dynamicCastMetatype();
    v140 = v224;
    if (v139)
    {
      sub_22ABDD3DC();
      sub_22AB4EB20();
      if (v141 >= 2)
        v141 = OUTLINED_FUNCTION_75_9(v141);
      else
        v97 = 0;
      v151 = v264;
      v152 = v267;
      v153 = MEMORY[0x24BDAC7A8](v141);
      v223[-6] = v224;
      v223[-5] = v154;
      v155 = v250;
      v223[-4] = v151;
      v223[-3] = v155;
      v223[-2] = (uint64_t)v110;
      MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v152, v153);
      v156 = v266;
      sub_22AA3EF7C();
      if (v156)
      {
        OUTLINED_FUNCTION_24_28();
        goto LABEL_43;
      }
      v158 = v249[1];
      v159 = v249[0];
      if (!__OFADD__(*v110, v97))
      {
        *v110 += v97;
        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v155, v158);
        goto LABEL_17;
      }
      __break(1u);
      goto LABEL_96;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
    if (OUTLINED_FUNCTION_20_33())
    {
      OUTLINED_FUNCTION_81_7();
      sub_22ABDD3DC();
      sub_22AB4EB34();
      if (v150 >= 2)
        v150 = OUTLINED_FUNCTION_75_9(v150);
      else
        v97 = 0;
      v162 = v267;
      v163 = MEMORY[0x24BDAC7A8](v150);
      v223[-6] = v140;
      v223[-5] = v164;
      v165 = v248[1];
      v223[-4] = v166;
      v223[-3] = v165;
      v223[-2] = (uint64_t)v110;
      MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v162, v163);
      OUTLINED_FUNCTION_96_1();
      if (!v20)
      {
LABEL_45:
        if (__OFADD__(*v110, v97))
        {
          __break(1u);
          JUMPOUT(0x22AA64F5CLL);
        }
        *v110 += v97;
        v167 = OUTLINED_FUNCTION_68_9();
        goto LABEL_108;
      }
      OUTLINED_FUNCTION_68_9();
LABEL_43:
      v157();
      goto LABEL_17;
    }
    v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B100E0);
    if (swift_dynamicCastMetatype())
    {
      OUTLINED_FUNCTION_81_7();
      sub_22ABDD3DC();
      sub_22AB4EBB8();
      if (v161 >= 2)
        v161 = OUTLINED_FUNCTION_75_9(v161);
      MEMORY[0x24BDAC7A8](v161);
      OUTLINED_FUNCTION_2_49();
      v172 = v247[1];
      *(_QWORD *)(v173 - 32) = v174;
      *(_QWORD *)(v173 - 24) = v172;
      *(_QWORD *)(v173 - 16) = v268;
      OUTLINED_FUNCTION_76_6();
    }
    v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8);
    if (swift_dynamicCastMetatype())
    {
      OUTLINED_FUNCTION_42_14();
      sub_22AB4EBCC();
      if (v171 >= 2)
        OUTLINED_FUNCTION_75_9(v171);
      OUTLINED_FUNCTION_70_6();
      MEMORY[0x24BDAC7A8](v178);
      OUTLINED_FUNCTION_2_49();
      OUTLINED_FUNCTION_39_19(v179);
      OUTLINED_FUNCTION_76_6();
    }
    if (swift_dynamicCastMetatype())
    {
      OUTLINED_FUNCTION_90_6();
      MEMORY[0x22E2E4D80](MEMORY[0x24BDF5FA0], v243);
      v175 = v242;
      sub_22ABDF404();
      OUTLINED_FUNCTION_106_0(v175, 1, v241);
      if (v187)
      {
        v176 = *(uint64_t (**)(uint64_t, _QWORD))(v236 + 8);
        v177 = v242;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 32))(v239, v242, v241);
        v185 = OUTLINED_FUNCTION_69_9();
        OUTLINED_FUNCTION_106_0(v185, v186, v267);
        if (!v187)
        {
          v190 = v267;
          v191 = v239;
          sub_22ABDE84C();
          OUTLINED_FUNCTION_51(v191, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 8));
          OUTLINED_FUNCTION_23();
          goto LABEL_66;
        }
        OUTLINED_FUNCTION_83_9();
        v177 = v239;
      }
      OUTLINED_FUNCTION_82_8(v177, v176);
LABEL_66:
      OUTLINED_FUNCTION_70_6();
      MEMORY[0x24BDAC7A8](v188);
      OUTLINED_FUNCTION_2_49();
      OUTLINED_FUNCTION_39_19(v189);
      OUTLINED_FUNCTION_76_6();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
    if (OUTLINED_FUNCTION_20_33())
    {
      OUTLINED_FUNCTION_22_32();
      OUTLINED_FUNCTION_65_10();
      sub_22AB4EBE0(v180);
      v181 = OUTLINED_FUNCTION_69_9();
      OUTLINED_FUNCTION_106_0(v181, v182, v235);
      if (v187)
      {
        v183 = &qword_255B139A8;
        v184 = v260;
      }
      else
      {
        OUTLINED_FUNCTION_28_21(v238, &qword_2540E8580, (uint64_t)v255);
        OUTLINED_FUNCTION_106_0(v170, 1, v160);
        if (!v197)
        {
          OUTLINED_FUNCTION_80_9();
          OUTLINED_FUNCTION_34_21();
          OUTLINED_FUNCTION_3_8();
          goto LABEL_75;
        }
        v183 = &qword_2540E8580;
        v184 = v255;
      }
      OUTLINED_FUNCTION_57_10(v183, (uint64_t)v184);
LABEL_75:
      OUTLINED_FUNCTION_70_6();
      MEMORY[0x24BDAC7A8](v198);
      OUTLINED_FUNCTION_2_49();
      OUTLINED_FUNCTION_39_19(v199);
      OUTLINED_FUNCTION_76_6();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    if (OUTLINED_FUNCTION_20_33())
    {
      OUTLINED_FUNCTION_22_32();
      OUTLINED_FUNCTION_65_10();
      sub_22AB4EBFC(v192);
      v193 = OUTLINED_FUNCTION_69_9();
      OUTLINED_FUNCTION_106_0(v193, v194, v231);
      if (v187)
      {
        v195 = &qword_255B13998;
        v196 = &v254;
      }
      else
      {
        OUTLINED_FUNCTION_28_21(v233, &qword_2540E8570, (uint64_t)&v250);
        OUTLINED_FUNCTION_106_0(v170, 1, v160);
        if (!v205)
        {
          OUTLINED_FUNCTION_80_9();
          OUTLINED_FUNCTION_34_21();
          OUTLINED_FUNCTION_3_8();
          goto LABEL_84;
        }
        v195 = &qword_2540E8570;
        v196 = &v250;
      }
      OUTLINED_FUNCTION_57_10(v195, (uint64_t)v196);
LABEL_84:
      OUTLINED_FUNCTION_70_6();
      MEMORY[0x24BDAC7A8](v206);
      OUTLINED_FUNCTION_2_49();
      OUTLINED_FUNCTION_95_2(v207);
      OUTLINED_FUNCTION_52_3();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    if (OUTLINED_FUNCTION_20_33())
    {
      OUTLINED_FUNCTION_22_32();
      OUTLINED_FUNCTION_65_10();
      sub_22AB4ECF4(v200);
      v201 = OUTLINED_FUNCTION_69_9();
      OUTLINED_FUNCTION_106_0(v201, v202, v227);
      if (v187)
      {
        v203 = &qword_255B13988;
        v204 = v249;
      }
      else
      {
        OUTLINED_FUNCTION_28_21(v230, &qword_2540E8560, (uint64_t)v247);
        OUTLINED_FUNCTION_106_0(v170, 1, v160);
        if (!v211)
        {
          v214 = v226;
          sub_22ABDE84C();
          OUTLINED_FUNCTION_51(v214, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 8));
LABEL_96:
          OUTLINED_FUNCTION_3_8();
LABEL_94:
          OUTLINED_FUNCTION_70_6();
          MEMORY[0x24BDAC7A8](v212);
          OUTLINED_FUNCTION_2_49();
          OUTLINED_FUNCTION_95_2(v213);
          OUTLINED_FUNCTION_52_3();
        }
        v203 = &qword_2540E8560;
        v204 = v247;
      }
      OUTLINED_FUNCTION_57_10(v203, (uint64_t)v204);
      goto LABEL_94;
    }
    sub_22A9BEDCC(0, &qword_255B10788);
    if (!swift_dynamicCastMetatype())
      goto LABEL_17;
    OUTLINED_FUNCTION_42_14();
    sub_22AB4ED10();
    if ((unint64_t)v208 >= 2)
    {
      v209 = (uint64_t)v208;
      v210 = objc_msgSend(v208, sel_shape);
      OUTLINED_FUNCTION_79_6();
      sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
      OUTLINED_FUNCTION_91_4();
      OUTLINED_FUNCTION_88_4();
      if ((unint64_t)v209 >> 62)
      {
        if (v209 < 0)
          v20 = v209;
        else
          v20 = v209 & 0xFFFFFFFFFFFFFF8;
        OUTLINED_FUNCTION_22_21();
        v215 = sub_22ABDFB60();
        OUTLINED_FUNCTION_23();
        if (v215)
        {
LABEL_89:
          OUTLINED_FUNCTION_58_7();
          OUTLINED_FUNCTION_89_3();
        }
      }
      else if (*(_QWORD *)((v209 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_89;
      }
      OUTLINED_FUNCTION_23();
    }
    OUTLINED_FUNCTION_50_14();
    v217 = MEMORY[0x24BDAC7A8](v216);
    v218 = v263;
    v223[-6] = v224;
    v223[-5] = v218;
    v219 = v229;
    v223[-4] = v264;
    v223[-3] = v219;
    v220 = v267;
    v223[-2] = (uint64_t)v268;
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v220, v217);
    OUTLINED_FUNCTION_10_33();
    if (v20)
    {
      v167 = OUTLINED_FUNCTION_41_12();
      v222 = *(_QWORD *)(v221 - 256);
LABEL_16:
      v168(v167, v222);
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_38_21(*v268);
    v167 = OUTLINED_FUNCTION_41_12();
LABEL_108:
    v222 = *(_QWORD *)(v169 - 256);
    goto LABEL_16;
  }
  sub_22ABDD3DC();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDF5FA0], v252);
  v135 = sub_22ABDF404();
  v136 = a10;
  v137 = v224;
  if (a10 >= 2)
  {
    v138 = MEMORY[0x22E2E3340](a10, v224);
    v135 = sub_22AA6A23C(v136);
  }
  else
  {
    v138 = 0;
  }
  v142 = v267;
  v143 = v263;
  v144 = MEMORY[0x24BDAC7A8](v135);
  v223[-6] = v137;
  v223[-5] = v143;
  v145 = v253;
  v223[-4] = v146;
  v223[-3] = v145;
  v223[-2] = (uint64_t)v110;
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v142, v144);
  OUTLINED_FUNCTION_96_1();
  if (v20)
  {
    v147 = OUTLINED_FUNCTION_24_28();
    v148(v147, v252);
  }
  else
  {
    v149 = v251;
    if (__OFADD__(*v110, v138))
    {
      __break(1u);
      JUMPOUT(0x22AA64EECLL);
    }
    *v110 += v138;
    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v145, v252);
  }
LABEL_17:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA6505C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v46 = a5;
  v47 = a6;
  v48 = a1;
  v49 = a4;
  v8 = sub_22ABDF5D8();
  v39 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - v9;
  v11 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v38 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
  v21 = sub_22ABDD3A0();
  v22 = sub_22AA10448();
  v55 = MEMORY[0x22E2E4D80](MEMORY[0x24BDF5F98], v21);
  v51 = v20;
  v52 = v21;
  v42 = v21;
  v43 = v20;
  v53 = v22;
  v54 = v55;
  v41 = v22;
  v45 = sub_22ABDF7E8();
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v38 - v23;
  v51 = v20;
  v52 = v21;
  v53 = v22;
  v54 = v55;
  v24 = sub_22ABDF7DC();
  v40 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v38 - v25;
  v51 = 0;
  sub_22ABE0178();
  sub_22ABDF7C4();
  v55 = v24;
  sub_22ABDF7D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, TupleTypeMetadata2) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v26, v55);
  v27 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  while (1)
  {
    v28 = *(_QWORD *)v19;
    v27(v10, &v19[*(int *)(TupleTypeMetadata2 + 48)], v50);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, a7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v50);
      sub_22A9B7B50();
      v36 = swift_allocError();
      *(_QWORD *)v37 = 0xD000000000000010;
      *(_QWORD *)(v37 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v37 + 16) = 0;
      *(_QWORD *)(v37 + 24) = 0;
      *(_BYTE *)(v37 + 32) = 0;
      swift_willThrow(v36);
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v26, v55);
    }
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, a7);
    v30 = v49[2];
    if (!v30)
    {
      v32 = 0;
      goto LABEL_12;
    }
    v31 = v49[4];
    v32 = v28 * v31;
    if ((unsigned __int128)(v28 * (__int128)v31) >> 64 != (v28 * v31) >> 63)
      break;
    if (v30 != 1)
    {
      v33 = v49[5];
      v34 = *v47 * v33;
      if ((unsigned __int128)(*v47 * (__int128)v33) >> 64 != v34 >> 63)
        goto LABEL_16;
      v35 = __OFADD__(v32, v34);
      v32 += v34;
      if (v35)
        goto LABEL_17;
    }
LABEL_12:
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 24))(v48 + *(_QWORD *)(v11 + 72) * v32, v14, a7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a7);
    sub_22ABDF7D0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, TupleTypeMetadata2) == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v26, v55);
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

void sub_22AA65424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD);
  char *v32;
  char v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  _QWORD *v52;
  void (*v53)(char *, uint64_t, uint64_t, double);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60[4];
  char *v61;

  v9 = a7;
  v59 = a4;
  v50 = a9;
  v51 = a6;
  v48 = *(_QWORD *)(a7 - 8);
  v49 = a1;
  MEMORY[0x24BDAC7A8](a1);
  v61 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13AA0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13AA8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13AB0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = &v18[*(int *)(v16 + 52)];
  v53 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v53(v23, a5, v12, v20);
  *v22 = 0;
  v55 = v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v23, v12);
  v24 = (char *)v22 + *(int *)(v19 + 52);
  sub_22AA2545C(&qword_255B13AB8, &qword_255B13AA0, MEMORY[0x24BDF5F98]);
  v54 = v15;
  sub_22ABDEE58();
  v56 = *(int *)(v19 + 56);
  *((_BYTE *)v22 + v56) = 0;
  v25 = &v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13AC0) + 36)];
  v52 = v22;
  v47 = v25;
  while (1)
  {
    v26 = *v22;
    if (__OFADD__(*v22, 1))
      break;
    ++*v22;
    v27 = *(_QWORD *)v25;
    sub_22AA2545C(&qword_255B13AC8, &qword_255B13AA0, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v27 == v60[0])
    {
      *((_BYTE *)v22 + v56) = 1;
LABEL_16:
      sub_22A9CF82C((uint64_t)v22, &qword_255B13AB0);
      return;
    }
    v57 = v26;
    v28 = v24;
    v29 = v59;
    v30 = v9;
    v31 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v33 = *v32;
    v58 = v32[1];
    v31(v60, 0);
    v34 = v54;
    v35 = v28;
    ((void (*)(char *, char *, uint64_t))v53)(v54, v28, v12);
    sub_22ABDF398();
    v36 = v12;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v12);
    if ((v58 & 1) != 0)
    {
      sub_22A9B7B50();
      v44 = swift_allocError();
      *(_QWORD *)v45 = 0xD000000000000010;
      *(_QWORD *)(v45 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v45 + 16) = 0;
      *(_QWORD *)(v45 + 24) = 0;
      *(_BYTE *)(v45 + 32) = 0;
      swift_willThrow(v44);
      sub_22A9CF82C((uint64_t)v52, &qword_255B13AB0);
      return;
    }
    v37 = *v51;
    LOBYTE(v60[0]) = v33;
    sub_22AA6A40C();
    v9 = v30;
    sub_22ABDEBE8();
    v38 = *(_QWORD *)(v29 + 16);
    if (v38)
    {
      v39 = *(_QWORD *)(v59 + 32);
      v40 = v57 * v39;
      if ((unsigned __int128)(v57 * (__int128)v39) >> 64 != (v57 * v39) >> 63)
        goto LABEL_20;
      v22 = v52;
      v24 = v35;
      if (v38 != 1)
      {
        v41 = *(_QWORD *)(v59 + 40);
        v42 = v37 * v41;
        if ((unsigned __int128)(v37 * (__int128)v41) >> 64 != (v37 * v41) >> 63)
          goto LABEL_21;
        v43 = __OFADD__(v40, v42);
        v40 += v42;
        if (v43)
          goto LABEL_22;
      }
    }
    else
    {
      v40 = 0;
      v22 = v52;
      v24 = v35;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 40))(v49 + *(_QWORD *)(v48 + 72) * v40, v61, v9);
    v12 = v36;
    v25 = v47;
    if ((*((_BYTE *)v22 + v56) & 1) != 0)
      goto LABEL_16;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

void sub_22AA6584C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD);
  int *v32;
  int v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  _QWORD *v52;
  void (*v53)(char *, uint64_t, uint64_t, double);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60[4];
  char *v61;

  v9 = a7;
  v59 = a4;
  v50 = a9;
  v51 = a6;
  v48 = *(_QWORD *)(a7 - 8);
  v49 = a1;
  MEMORY[0x24BDAC7A8](a1);
  v61 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A98);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13AD8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13AE0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = &v18[*(int *)(v16 + 52)];
  v53 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v53(v23, a5, v12, v20);
  *v22 = 0;
  v55 = v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v23, v12);
  v24 = (char *)v22 + *(int *)(v19 + 52);
  sub_22AA2545C(&qword_255B13AE8, &qword_255B13A98, MEMORY[0x24BDF5F98]);
  v54 = v15;
  sub_22ABDEE58();
  v56 = *(int *)(v19 + 56);
  *((_BYTE *)v22 + v56) = 0;
  v25 = &v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13AF0) + 36)];
  v52 = v22;
  v47 = v25;
  while (1)
  {
    v26 = *v22;
    if (__OFADD__(*v22, 1))
      break;
    ++*v22;
    v27 = *(_QWORD *)v25;
    sub_22AA2545C(&qword_255B13AF8, &qword_255B13A98, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v27 == v60[0])
    {
      *((_BYTE *)v22 + v56) = 1;
LABEL_16:
      sub_22A9CF82C((uint64_t)v22, &qword_255B13AE0);
      return;
    }
    v57 = v26;
    v28 = v24;
    v29 = v59;
    v30 = v9;
    v31 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v33 = *v32;
    v58 = *((unsigned __int8 *)v32 + 4);
    v31(v60, 0);
    v34 = v54;
    v35 = v28;
    ((void (*)(char *, char *, uint64_t))v53)(v54, v28, v12);
    sub_22ABDF398();
    v36 = v12;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v12);
    if ((v58 & 1) != 0)
    {
      sub_22A9B7B50();
      v44 = swift_allocError();
      *(_QWORD *)v45 = 0xD000000000000010;
      *(_QWORD *)(v45 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v45 + 16) = 0;
      *(_QWORD *)(v45 + 24) = 0;
      *(_BYTE *)(v45 + 32) = 0;
      swift_willThrow(v44);
      sub_22A9CF82C((uint64_t)v52, &qword_255B13AE0);
      return;
    }
    v37 = *v51;
    LODWORD(v60[0]) = v33;
    sub_22AA6A448();
    v9 = v30;
    sub_22ABDEBE8();
    v38 = *(_QWORD *)(v29 + 16);
    if (v38)
    {
      v39 = *(_QWORD *)(v59 + 32);
      v40 = v57 * v39;
      if ((unsigned __int128)(v57 * (__int128)v39) >> 64 != (v57 * v39) >> 63)
        goto LABEL_20;
      v22 = v52;
      v24 = v35;
      if (v38 != 1)
      {
        v41 = *(_QWORD *)(v59 + 40);
        v42 = v37 * v41;
        if ((unsigned __int128)(v37 * (__int128)v41) >> 64 != (v37 * v41) >> 63)
          goto LABEL_21;
        v43 = __OFADD__(v40, v42);
        v40 += v42;
        if (v43)
          goto LABEL_22;
      }
    }
    else
    {
      v40 = 0;
      v22 = v52;
      v24 = v35;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 40))(v49 + *(_QWORD *)(v48 + 72) * v40, v61, v9);
    v12 = v36;
    v25 = v47;
    if ((*((_BYTE *)v22 + v56) & 1) != 0)
      goto LABEL_16;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

void sub_22AA65C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, _QWORD);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  void (*v48)(char *, uint64_t, uint64_t, double);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  uint64_t v56[4];
  uint64_t v57;

  v54 = a4;
  v43 = a1;
  v45 = a9;
  v46 = a6;
  v57 = a7;
  v42 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v55 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A90);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B08);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B10);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = &v17[*(int *)(v15 + 52)];
  v48 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v48(v22, a5, v11, v19);
  *v21 = 0;
  v50 = v12;
  v23 = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v22, v11);
  v24 = (char *)v21 + *(int *)(v18 + 52);
  sub_22AA2545C(&qword_255B13B18, &qword_255B13A90, MEMORY[0x24BDF5F98]);
  v49 = v14;
  sub_22ABDEE58();
  v51 = *(int *)(v18 + 56);
  *((_BYTE *)v21 + v51) = 0;
  v25 = &v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13B20) + 36)];
  v47 = v21;
  v44 = v24;
  while (1)
  {
    v26 = *v23;
    if (__OFADD__(*v23, 1))
      break;
    ++*v23;
    v27 = *(_QWORD *)v25;
    sub_22AA2545C(&qword_255B13B28, &qword_255B13A90, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v27 == v56[0])
    {
      *((_BYTE *)v23 + v51) = 1;
LABEL_16:
      sub_22A9CF82C((uint64_t)v23, &qword_255B13B10);
      return;
    }
    v52 = v26;
    v28 = v54;
    v29 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v53 = *(unsigned __int8 *)(v30 + 8);
    v29(v56, 0);
    v31 = v49;
    ((void (*)(char *, char *, uint64_t))v48)(v49, v24, v11);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v11);
    if ((v53 & 1) != 0)
    {
      sub_22A9B7B50();
      v39 = swift_allocError();
      *(_QWORD *)v40 = 0xD000000000000010;
      *(_QWORD *)(v40 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v40 + 16) = 0;
      *(_QWORD *)(v40 + 24) = 0;
      *(_BYTE *)(v40 + 32) = 0;
      swift_willThrow(v39);
      sub_22A9CF82C((uint64_t)v47, &qword_255B13B10);
      return;
    }
    v32 = *v46;
    sub_22ABDEBDC();
    v33 = *(_QWORD *)(v28 + 16);
    if (v33)
    {
      v34 = *(_QWORD *)(v54 + 32);
      v35 = v52 * v34;
      if ((unsigned __int128)(v52 * (__int128)v34) >> 64 != (v52 * v34) >> 63)
        goto LABEL_20;
      v23 = v47;
      v24 = v44;
      if (v33 != 1)
      {
        v36 = *(_QWORD *)(v54 + 40);
        v37 = v32 * v36;
        if ((unsigned __int128)(v32 * (__int128)v36) >> 64 != (v32 * v36) >> 63)
          goto LABEL_21;
        v38 = __OFADD__(v35, v37);
        v35 += v37;
        if (v38)
          goto LABEL_22;
      }
    }
    else
    {
      v35 = 0;
      v23 = v47;
      v24 = v44;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 40))(v43 + *(_QWORD *)(v42 + 72) * v35, v55, v57);
    if ((*((_BYTE *)v23 + v51) & 1) != 0)
      goto LABEL_16;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

void sub_22AA6608C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, _QWORD);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(char *, uint64_t, uint64_t, double);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54[4];

  v52 = a5;
  v43 = a1;
  v45 = a9;
  v46 = a6;
  v42 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v53 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A88);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B30);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B38);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = &v18[*(int *)(v16 + 52)];
  v47 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v47(v23, v52, v12, v20);
  *v22 = 0;
  v49 = v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v23, v12);
  v24 = (char *)v22 + *(int *)(v19 + 52);
  sub_22AA2545C(&qword_255B13B40, &qword_255B13A88, MEMORY[0x24BDF5F98]);
  v48 = v15;
  sub_22ABDEE58();
  v25 = v24;
  v50 = *(int *)(v19 + 56);
  *((_BYTE *)v22 + v50) = 0;
  v26 = &v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13B48) + 36)];
  v51 = v22;
  v44 = a4;
  while (1)
  {
    v27 = *v22;
    if (__OFADD__(*v22, 1))
      break;
    ++*v22;
    v28 = *(_QWORD *)v26;
    sub_22AA2545C(&qword_255B13B50, &qword_255B13A88, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v28 == v54[0])
    {
      v22 = v51;
      *((_BYTE *)v51 + v50) = 1;
LABEL_16:
      sub_22A9CF82C((uint64_t)v22, &qword_255B13B38);
      return;
    }
    v29 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    LODWORD(v52) = *(unsigned __int8 *)(v30 + 4);
    v29(v54, 0);
    v31 = v48;
    ((void (*)(char *, char *, uint64_t))v47)(v48, v25, v12);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v12);
    if ((v52 & 1) != 0)
    {
      sub_22A9B7B50();
      v39 = swift_allocError();
      *(_QWORD *)v40 = 0xD000000000000010;
      *(_QWORD *)(v40 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v40 + 16) = 0;
      *(_QWORD *)(v40 + 24) = 0;
      *(_BYTE *)(v40 + 32) = 0;
      swift_willThrow(v39);
      sub_22A9CF82C((uint64_t)v51, &qword_255B13B38);
      return;
    }
    v32 = *v46;
    sub_22ABDEA8C();
    v33 = v44[2];
    if (v33)
    {
      v34 = v44[4];
      v35 = v27 * v34;
      if ((unsigned __int128)(v27 * (__int128)v34) >> 64 != (v27 * v34) >> 63)
        goto LABEL_19;
      if (v33 != 1)
      {
        v36 = v44[5];
        v37 = v32 * v36;
        if ((unsigned __int128)(v32 * (__int128)v36) >> 64 != (v32 * v36) >> 63)
          goto LABEL_20;
        v38 = __OFADD__(v35, v37);
        v35 += v37;
        if (v38)
          goto LABEL_21;
      }
    }
    else
    {
      v35 = 0;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 40))(v43 + *(_QWORD *)(v42 + 72) * v35, v53, a7);
    v22 = v51;
    if ((*((_BYTE *)v51 + v50) & 1) != 0)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

void sub_22AA66484(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, _QWORD);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(char *, uint64_t, uint64_t, double);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54[4];

  v52 = a5;
  v43 = a1;
  v45 = a9;
  v46 = a6;
  v42 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v53 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AD8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B58);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B60);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = &v18[*(int *)(v16 + 52)];
  v47 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v47(v23, v52, v12, v20);
  *v22 = 0;
  v49 = v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v23, v12);
  v24 = (char *)v22 + *(int *)(v19 + 52);
  sub_22AA2545C(&qword_255B13B68, &qword_255B10AD8, MEMORY[0x24BDF5F98]);
  v48 = v15;
  sub_22ABDEE58();
  v25 = v24;
  v50 = *(int *)(v19 + 56);
  *((_BYTE *)v22 + v50) = 0;
  v26 = &v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13B70) + 36)];
  v51 = v22;
  v44 = a4;
  while (1)
  {
    v27 = *v22;
    if (__OFADD__(*v22, 1))
      break;
    ++*v22;
    v28 = *(_QWORD *)v26;
    sub_22AA2545C(&qword_255B13B78, &qword_255B10AD8, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v28 == v54[0])
    {
      v22 = v51;
      *((_BYTE *)v51 + v50) = 1;
LABEL_16:
      sub_22A9CF82C((uint64_t)v22, &qword_255B13B60);
      return;
    }
    v29 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    LODWORD(v52) = *(unsigned __int8 *)(v30 + 8);
    v29(v54, 0);
    v31 = v48;
    ((void (*)(char *, char *, uint64_t))v47)(v48, v25, v12);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v12);
    if ((v52 & 1) != 0)
    {
      sub_22A9B7B50();
      v39 = swift_allocError();
      *(_QWORD *)v40 = 0xD000000000000010;
      *(_QWORD *)(v40 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v40 + 16) = 0;
      *(_QWORD *)(v40 + 24) = 0;
      *(_BYTE *)(v40 + 32) = 0;
      swift_willThrow(v39);
      sub_22A9CF82C((uint64_t)v51, &qword_255B13B60);
      return;
    }
    v32 = *v46;
    sub_22ABDEA80();
    v33 = v44[2];
    if (v33)
    {
      v34 = v44[4];
      v35 = v27 * v34;
      if ((unsigned __int128)(v27 * (__int128)v34) >> 64 != (v27 * v34) >> 63)
        goto LABEL_19;
      if (v33 != 1)
      {
        v36 = v44[5];
        v37 = v32 * v36;
        if ((unsigned __int128)(v32 * (__int128)v36) >> 64 != (v32 * v36) >> 63)
          goto LABEL_20;
        v38 = __OFADD__(v35, v37);
        v35 += v37;
        if (v38)
          goto LABEL_21;
      }
    }
    else
    {
      v35 = 0;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 40))(v43 + *(_QWORD *)(v42 + 72) * v35, v53, a7);
    v22 = v51;
    if ((*((_BYTE *)v51 + v50) & 1) != 0)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_22AA6687C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, char *a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v47 = a1;
  v48 = a6;
  v45 = a5;
  v9 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v40 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
  v50 = v16;
  v60 = sub_22ABDF0F8();
  v17 = sub_22ABDD3A0();
  v18 = sub_22AA10448();
  v19 = MEMORY[0x22E2E4D80](MEMORY[0x24BDF5F98], v17);
  v56 = v16;
  v57 = v17;
  v20 = v17;
  v42 = v17;
  v58 = v18;
  v59 = v19;
  v21 = v18;
  v49 = v18;
  v22 = v19;
  v44 = sub_22ABDF7E8();
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v40 - v23;
  v56 = v50;
  v57 = v20;
  v58 = v21;
  v59 = v22;
  v46 = sub_22ABDF7DC();
  v41 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v25 = (char *)&v40 - v24;
  v56 = 0;
  sub_22ABE0178();
  v45 = v25;
  sub_22ABDF7C4();
LABEL_2:
  sub_22ABDF7D0();
  v26 = v57;
  if (v57)
  {
    if (v57 == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v45, v46);
    }
    else
    {
      v27 = v56;
      v56 = 0;
      v55 = v57;
      v28 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v60);
      sub_22ABE0178();
      sub_22AA6A484(v27, v26);
      v51 = v53;
      v52 = v54;
      v56 = v50;
      v57 = v60;
      v58 = v49;
      v59 = v28;
      sub_22ABDF7E8();
      sub_22ABDF7C4();
      while (1)
      {
        v56 = v50;
        v57 = v60;
        v58 = v49;
        v59 = v28;
        sub_22ABDF7DC();
        sub_22ABDF7D0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, TupleTypeMetadata2) == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_2;
        }
        v29 = *(_QWORD *)v15;
        result = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, &v15[*(int *)(TupleTypeMetadata2 + 48)], a7);
        v31 = *v48 + v29;
        if (__OFADD__(*v48, v29))
          break;
        v32 = a4[2];
        if (v32)
        {
          v33 = a4[4];
          v34 = v27 * v33;
          if ((unsigned __int128)(v27 * (__int128)v33) >> 64 != (v27 * v33) >> 63)
            goto LABEL_21;
          if (v32 != 1)
          {
            v35 = a4[5];
            v36 = v31 * v35;
            if ((unsigned __int128)(v31 * (__int128)v35) >> 64 != (v31 * v35) >> 63)
              goto LABEL_22;
            v37 = __OFADD__(v34, v36);
            v34 += v36;
            if (v37)
              goto LABEL_23;
          }
        }
        else
        {
          v34 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v9 + 24))(v47 + *(_QWORD *)(v9 + 72) * v34, v11, a7);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a7);
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
  }
  else
  {
    sub_22A9B7B50();
    v38 = swift_allocError();
    *(_QWORD *)v39 = 0xD000000000000010;
    *(_QWORD *)(v39 + 8) = 0x800000022ABF2360;
    *(_QWORD *)(v39 + 16) = 0;
    *(_QWORD *)(v39 + 24) = 0;
    *(_BYTE *)(v39 + 32) = 0;
    swift_willThrow(v38);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v45, v46);
  }
  return result;
}

void sub_22AA66C94(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(uint64_t *, _QWORD);
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, double);
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62[4];
  char *v63;

  v59 = a1;
  v60 = a9;
  v61 = a6;
  v11 = *(_QWORD *)(a7 - 8);
  v57 = a4;
  v58 = v11;
  MEMORY[0x24BDAC7A8](a1);
  v63 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139F0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B80);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B88);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (uint64_t *)((char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = &v19[*(int *)(v17 + 52)];
  v52 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v52(v24, a5, v13, v21);
  *v23 = 0;
  v54 = v14;
  v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v26 = v23;
  v25(v16, v24, v13);
  v27 = (char *)v23 + *(int *)(v20 + 52);
  sub_22AA2545C(&qword_255B13A28, &qword_255B139F0, MEMORY[0x24BDF5F98]);
  v55 = v27;
  v53 = v16;
  sub_22ABDEE58();
  v28 = *(int *)(v20 + 56);
  v50 = v13;
  v51 = v28;
  *((_BYTE *)v23 + v28) = 0;
  v49 = v23;
  while (1)
  {
    v56 = *v26;
    if (__OFADD__(v56, 1))
      break;
    *v26 = v56 + 1;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139E8);
    v30 = v55;
    v31 = *(_QWORD *)&v55[*(int *)(v29 + 36)];
    sub_22AA2545C(&qword_255B13A30, &qword_255B139F0, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v31 == v62[0])
    {
      *((_BYTE *)v26 + v51) = 1;
LABEL_21:
      sub_22A9CF82C((uint64_t)v26, &qword_255B13B88);
      return;
    }
    v32 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v33 = v30;
    v35 = *v34;
    sub_22ABDEAEC();
    v32(v62, 0);
    v36 = v53;
    ((void (*)(char *, char *, uint64_t))v52)(v53, v33, v13);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v13);
    if (!v35)
    {
      sub_22A9B7B50();
      v46 = swift_allocError();
      *(_QWORD *)v47 = 0xD000000000000010;
      *(_QWORD *)(v47 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v47 + 16) = 0;
      *(_QWORD *)(v47 + 24) = 0;
      *(_BYTE *)(v47 + 32) = 0;
      swift_willThrow(v46);
      sub_22A9CF82C((uint64_t)v26, &qword_255B13B88);
      return;
    }
    v37 = *(_QWORD *)(v35 + 16);
    if (v37)
    {
      v38 = 0;
      v39 = v57[2];
      while (v38 < *(_QWORD *)(v35 + 16))
      {
        v40 = *v61 + v38;
        if (__OFADD__(*v61, v38))
          goto LABEL_25;
        LOBYTE(v62[0]) = *(_BYTE *)(v35 + 32 + v38);
        sub_22AA6A40C();
        sub_22ABDEBE8();
        if (v39)
        {
          v41 = v57[4];
          v42 = v56 * v41;
          if ((unsigned __int128)(v56 * (__int128)v41) >> 64 != (v56 * v41) >> 63)
            goto LABEL_26;
          if (v39 != 1)
          {
            v43 = v57[5];
            v44 = v40 * v43;
            if ((unsigned __int128)((uint64_t)v40 * (__int128)v43) >> 64 != (uint64_t)(v40 * v43) >> 63)
              goto LABEL_27;
            v45 = __OFADD__(v42, v44);
            v42 += v44;
            if (v45)
              goto LABEL_28;
          }
        }
        else
        {
          v42 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v58 + 40))(v59 + *(_QWORD *)(v58 + 72) * v42, v63, a7);
        if (v37 == ++v38)
          goto LABEL_18;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    v26 = v49;
    v13 = v50;
    if ((*((_BYTE *)v49 + v51) & 1) != 0)
      goto LABEL_21;
  }
  __break(1u);
}

void sub_22AA670D8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, double);
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58[4];
  char *v59;

  v55 = a1;
  v56 = a9;
  v57 = a6;
  v11 = *(_QWORD *)(a7 - 8);
  v53 = a4;
  v54 = v11;
  MEMORY[0x24BDAC7A8](a1);
  v59 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139E0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B90);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13B98);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = &v19[*(int *)(v17 + 52)];
  v24 = (uint64_t *)((char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v50(v23, a5, v13, v21);
  *v24 = 0;
  v52 = v14;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v23, v13);
  v25 = (char *)v24 + *(int *)(v20 + 52);
  sub_22AA2545C(&qword_255B13A18, &qword_255B139E0, MEMORY[0x24BDF5F98]);
  v51 = v16;
  sub_22ABDEE58();
  v26 = *(int *)(v20 + 56);
  v48 = v13;
  v49 = v26;
  *((_BYTE *)v24 + v26) = 0;
  v46 = v25;
  v47 = v24;
  while (1)
  {
    v27 = *v24;
    if (__OFADD__(*v24, 1))
      break;
    ++*v24;
    v28 = v25;
    v29 = *(_QWORD *)&v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B139D8) + 36)];
    sub_22AA2545C(&qword_255B13A20, &qword_255B139E0, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v29 == v58[0])
    {
      *((_BYTE *)v24 + v49) = 1;
LABEL_21:
      sub_22A9CF82C((uint64_t)v24, &qword_255B13B98);
      return;
    }
    v30 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v32 = *v31;
    sub_22ABDEAEC();
    v30(v58, 0);
    v33 = v51;
    ((void (*)(char *, char *, uint64_t))v50)(v51, v28, v13);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v13);
    if (!v32)
    {
      sub_22A9B7B50();
      v43 = swift_allocError();
      *(_QWORD *)v44 = 0xD000000000000010;
      *(_QWORD *)(v44 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v44 + 16) = 0;
      *(_QWORD *)(v44 + 24) = 0;
      *(_BYTE *)(v44 + 32) = 0;
      swift_willThrow(v43);
      sub_22A9CF82C((uint64_t)v24, &qword_255B13B98);
      return;
    }
    v34 = *(_QWORD *)(v32 + 16);
    if (v34)
    {
      v35 = 0;
      v36 = v53[2];
      while (v35 < *(_QWORD *)(v32 + 16))
      {
        v37 = *v57 + v35;
        if (__OFADD__(*v57, v35))
          goto LABEL_25;
        sub_22ABDEBDC();
        if (v36)
        {
          v38 = v53[4];
          v39 = v27 * v38;
          if ((unsigned __int128)(v27 * (__int128)v38) >> 64 != (v27 * v38) >> 63)
            goto LABEL_26;
          if (v36 != 1)
          {
            v40 = v53[5];
            v41 = v37 * v40;
            if ((unsigned __int128)((uint64_t)v37 * (__int128)v40) >> 64 != (uint64_t)(v37 * v40) >> 63)
              goto LABEL_27;
            v42 = __OFADD__(v39, v41);
            v39 += v41;
            if (v42)
              goto LABEL_28;
          }
        }
        else
        {
          v39 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v54 + 40))(v55 + *(_QWORD *)(v54 + 72) * v39, v59, a7);
        if (v34 == ++v35)
          goto LABEL_18;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    v24 = v47;
    v13 = v48;
    v25 = v46;
    if ((*((_BYTE *)v47 + v49) & 1) != 0)
      goto LABEL_21;
  }
  __break(1u);
}

void sub_22AA674FC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, double);
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58[4];
  char *v59;

  v55 = a1;
  v56 = a9;
  v57 = a6;
  v11 = *(_QWORD *)(a7 - 8);
  v53 = a4;
  v54 = v11;
  MEMORY[0x24BDAC7A8](a1);
  v59 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139D0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BA0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BA8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = &v19[*(int *)(v17 + 52)];
  v24 = (uint64_t *)((char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v50(v23, a5, v13, v21);
  *v24 = 0;
  v52 = v14;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v23, v13);
  v25 = (char *)v24 + *(int *)(v20 + 52);
  sub_22AA2545C(&qword_255B13A08, &qword_255B139D0, MEMORY[0x24BDF5F98]);
  v51 = v16;
  sub_22ABDEE58();
  v26 = *(int *)(v20 + 56);
  v48 = v13;
  v49 = v26;
  *((_BYTE *)v24 + v26) = 0;
  v46 = v25;
  v47 = v24;
  while (1)
  {
    v27 = *v24;
    if (__OFADD__(*v24, 1))
      break;
    ++*v24;
    v28 = v25;
    v29 = *(_QWORD *)&v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B139C8) + 36)];
    sub_22AA2545C(&qword_255B13A10, &qword_255B139D0, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v29 == v58[0])
    {
      *((_BYTE *)v24 + v49) = 1;
LABEL_21:
      sub_22A9CF82C((uint64_t)v24, &qword_255B13BA8);
      return;
    }
    v30 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v32 = *v31;
    sub_22ABDEAEC();
    v30(v58, 0);
    v33 = v51;
    ((void (*)(char *, char *, uint64_t))v50)(v51, v28, v13);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v13);
    if (!v32)
    {
      sub_22A9B7B50();
      v43 = swift_allocError();
      *(_QWORD *)v44 = 0xD000000000000010;
      *(_QWORD *)(v44 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v44 + 16) = 0;
      *(_QWORD *)(v44 + 24) = 0;
      *(_BYTE *)(v44 + 32) = 0;
      swift_willThrow(v43);
      sub_22A9CF82C((uint64_t)v24, &qword_255B13BA8);
      return;
    }
    v34 = *(_QWORD *)(v32 + 16);
    if (v34)
    {
      v35 = 0;
      v36 = v53[2];
      while (v35 < *(_QWORD *)(v32 + 16))
      {
        v37 = *v57 + v35;
        if (__OFADD__(*v57, v35))
          goto LABEL_25;
        sub_22ABDEA8C();
        if (v36)
        {
          v38 = v53[4];
          v39 = v27 * v38;
          if ((unsigned __int128)(v27 * (__int128)v38) >> 64 != (v27 * v38) >> 63)
            goto LABEL_26;
          if (v36 != 1)
          {
            v40 = v53[5];
            v41 = v37 * v40;
            if ((unsigned __int128)((uint64_t)v37 * (__int128)v40) >> 64 != (uint64_t)(v37 * v40) >> 63)
              goto LABEL_27;
            v42 = __OFADD__(v39, v41);
            v39 += v41;
            if (v42)
              goto LABEL_28;
          }
        }
        else
        {
          v39 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v54 + 40))(v55 + *(_QWORD *)(v54 + 72) * v39, v59, a7);
        if (v34 == ++v35)
          goto LABEL_18;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    v24 = v47;
    v13 = v48;
    v25 = v46;
    if ((*((_BYTE *)v47 + v49) & 1) != 0)
      goto LABEL_21;
  }
  __break(1u);
}

void sub_22AA6791C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, double);
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58[4];
  char *v59;

  v55 = a1;
  v56 = a9;
  v57 = a6;
  v11 = *(_QWORD *)(a7 - 8);
  v53 = a4;
  v54 = v11;
  MEMORY[0x24BDAC7A8](a1);
  v59 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139C0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BB0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BB8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = &v19[*(int *)(v17 + 52)];
  v24 = (uint64_t *)((char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v50(v23, a5, v13, v21);
  *v24 = 0;
  v52 = v14;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v23, v13);
  v25 = (char *)v24 + *(int *)(v20 + 52);
  sub_22AA2545C(&qword_255B139F8, &qword_255B139C0, MEMORY[0x24BDF5F98]);
  v51 = v16;
  sub_22ABDEE58();
  v26 = *(int *)(v20 + 56);
  v48 = v13;
  v49 = v26;
  *((_BYTE *)v24 + v26) = 0;
  v46 = v25;
  v47 = v24;
  while (1)
  {
    v27 = *v24;
    if (__OFADD__(*v24, 1))
      break;
    ++*v24;
    v28 = v25;
    v29 = *(_QWORD *)&v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B139B8) + 36)];
    sub_22AA2545C(&qword_255B13A00, &qword_255B139C0, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v29 == v58[0])
    {
      *((_BYTE *)v24 + v49) = 1;
LABEL_21:
      sub_22A9CF82C((uint64_t)v24, &qword_255B13BB8);
      return;
    }
    v30 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v32 = *v31;
    sub_22ABDEAEC();
    v30(v58, 0);
    v33 = v51;
    ((void (*)(char *, char *, uint64_t))v50)(v51, v28, v13);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v13);
    if (!v32)
    {
      sub_22A9B7B50();
      v43 = swift_allocError();
      *(_QWORD *)v44 = 0xD000000000000010;
      *(_QWORD *)(v44 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v44 + 16) = 0;
      *(_QWORD *)(v44 + 24) = 0;
      *(_BYTE *)(v44 + 32) = 0;
      swift_willThrow(v43);
      sub_22A9CF82C((uint64_t)v24, &qword_255B13BB8);
      return;
    }
    v34 = *(_QWORD *)(v32 + 16);
    if (v34)
    {
      v35 = 0;
      v36 = v53[2];
      while (v35 < *(_QWORD *)(v32 + 16))
      {
        v37 = *v57 + v35;
        if (__OFADD__(*v57, v35))
          goto LABEL_25;
        sub_22ABDEA80();
        if (v36)
        {
          v38 = v53[4];
          v39 = v27 * v38;
          if ((unsigned __int128)(v27 * (__int128)v38) >> 64 != (v27 * v38) >> 63)
            goto LABEL_26;
          if (v36 != 1)
          {
            v40 = v53[5];
            v41 = v37 * v40;
            if ((unsigned __int128)((uint64_t)v37 * (__int128)v40) >> 64 != (uint64_t)(v37 * v40) >> 63)
              goto LABEL_27;
            v42 = __OFADD__(v39, v41);
            v39 += v41;
            if (v42)
              goto LABEL_28;
          }
        }
        else
        {
          v39 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v54 + 40))(v55 + *(_QWORD *)(v54 + 72) * v39, v59, a7);
        if (v34 == ++v35)
          goto LABEL_18;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    v24 = v47;
    v13 = v48;
    v25 = v46;
    if ((*((_BYTE *)v47 + v49) & 1) != 0)
      goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_22AA67D3C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, unint64_t a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;

  v66 = a4;
  v67 = a6;
  v78 = a5;
  v65 = a1;
  v8 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - v13;
  v15 = sub_22ABDE8A0();
  v16 = sub_22ABDF5D8();
  v51 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v55 = (char *)&v50 - v17;
  v18 = *(_QWORD *)(v15 - 8);
  v59 = v15;
  v64 = v18;
  MEMORY[0x24BDAC7A8](v19);
  v63 = (char *)&v50 - v20;
  v56 = v21;
  v58 = swift_getTupleTypeMetadata2();
  v22 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v22);
  v57 = (char *)&v50 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
  v25 = sub_22ABDD3A0();
  v53 = v25;
  v26 = sub_22AA10448();
  v27 = MEMORY[0x22E2E4D80](MEMORY[0x24BDF5F98], v25);
  v74 = v24;
  v75 = v25;
  v68 = v24;
  v76 = v26;
  v77 = v27;
  v28 = v27;
  v54 = (void (*)(char *, char *, uint64_t))v27;
  v62 = sub_22ABDF7E8();
  MEMORY[0x24BDAC7A8](v62);
  v74 = v24;
  v75 = v53;
  v76 = v26;
  v77 = v28;
  v60 = sub_22ABDF7DC();
  v52 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v61 = (char *)&v50 - v29;
  v74 = 0;
  v30 = v59;
  v31 = v57;
  v78 = v26;
  v32 = v58;
  sub_22ABE0178();
  sub_22ABDF7C4();
  sub_22ABDF7D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v61, v60);
  v54 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  while (2)
  {
    v33 = v31;
    v34 = *(_QWORD *)v31;
    v35 = (uint64_t)v55;
    v54(v55, &v33[*(int *)(v32 + 48)], v56);
    if (__swift_getEnumTagSinglePayload(v35, 1, v30) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v63, v35, v30);
      v74 = 0;
      MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v30);
      v62 = sub_22ABDE930();
      v73 = v62;
      v36 = sub_22ABDF0F8();
      v37 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v36);
      v38 = v68;
      sub_22ABE0178();
      swift_bridgeObjectRelease();
      v69 = v71;
      v70 = v72;
      v74 = v38;
      v75 = v36;
      v76 = v78;
      v77 = v37;
      sub_22ABDF7E8();
      sub_22ABDF7C4();
      while (1)
      {
        v74 = v68;
        v75 = v36;
        v76 = v78;
        v77 = v37;
        sub_22ABDF7DC();
        sub_22ABDF7D0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, TupleTypeMetadata2) == 1)
          break;
        v39 = *(_QWORD *)v14;
        result = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, &v14[*(int *)(TupleTypeMetadata2 + 48)], a7);
        v41 = *v67 + v39;
        if (__OFADD__(*v67, v39))
        {
          __break(1u);
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          return result;
        }
        v42 = v66[2];
        if (v42)
        {
          v43 = v66[4];
          v44 = v34 * v43;
          if ((unsigned __int128)(v34 * (__int128)v43) >> 64 != (v34 * v43) >> 63)
            goto LABEL_20;
          if (v42 != 1)
          {
            v45 = v66[5];
            v46 = v41 * v45;
            if ((unsigned __int128)(v41 * (__int128)v45) >> 64 != (v41 * v45) >> 63)
              goto LABEL_21;
            v47 = __OFADD__(v44, v46);
            v44 += v46;
            if (v47)
              goto LABEL_22;
          }
        }
        else
        {
          v44 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v8 + 24))(v65 + *(_QWORD *)(v8 + 72) * v44, v10, a7);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a7);
      }
      swift_bridgeObjectRelease();
      v30 = v59;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v59);
      v31 = v57;
      sub_22ABDF7D0();
      v32 = v58;
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v58) != 1)
        continue;
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v61, v60);
    }
    break;
  }
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v35, v56);
  sub_22A9B7B50();
  v48 = swift_allocError();
  *(_QWORD *)v49 = 0xD000000000000010;
  *(_QWORD *)(v49 + 8) = 0x800000022ABF2360;
  *(_QWORD *)(v49 + 16) = 0;
  *(_QWORD *)(v49 + 24) = 0;
  *(_BYTE *)(v49 + 32) = 0;
  swift_willThrow(v48);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v61, v60);
}

void sub_22AA68370(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  _QWORD *v30;
  _BYTE *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t *, _QWORD);
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[16];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  void (*v64)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80[5];
  _BYTE *v81;

  v74 = a5;
  v75 = a4;
  v78 = a9;
  v79 = a6;
  v76 = *(_QWORD *)(a7 - 8);
  v77 = a1;
  MEMORY[0x24BDAC7A8](a1);
  v81 = &v58[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
  v73 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v72 = &v58[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8580);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v58[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v69 = &v58[-v17];
  MEMORY[0x24BDAC7A8](v18);
  v68 = &v58[-v19];
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BC0);
  MEMORY[0x24BDAC7A8](v67);
  v66 = &v58[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139B0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v71 = &v58[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BC8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = &v58[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BD0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = &v58[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = &v26[*(int *)(v24 + 52)];
  v64 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v22 + 16);
  v64(v31, v74, v21, v28);
  *v30 = 0;
  v65 = v22;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 32))(v71, v31, v21);
  v32 = (char *)v30 + *(int *)(v27 + 52);
  sub_22AA2545C(&qword_255B13A40, &qword_255B139B0, MEMORY[0x24BDF5F98]);
  sub_22ABDEE58();
  v63 = *(int *)(v27 + 56);
  *((_BYTE *)v30 + v63) = 0;
  v61 = v11;
  v70 = v15;
  v62 = v30;
  v60 = v21;
  v59 = v32;
  while (1)
  {
    v74 = *v30;
    if (__OFADD__(v74, 1))
      break;
    *v30 = v74 + 1;
    v33 = v32;
    v34 = *(_QWORD *)&v32[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13A38) + 36)];
    sub_22AA2545C(&qword_255B13A48, &qword_255B139B0, MEMORY[0x24BDF5FA0]);
    sub_22ABDF38C();
    if (v34 == v80[0])
    {
      *((_BYTE *)v30 + v63) = 1;
LABEL_21:
      sub_22A9CF82C((uint64_t)v30, &qword_255B13BD0);
      return;
    }
    v35 = v11;
    v36 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v37 = v69;
    sub_22A9CF800(v38, (uint64_t)v69, &qword_2540E8580);
    v36(v80, 0);
    v39 = v71;
    ((void (*)(_BYTE *, char *, uint64_t))v64)(v71, v33, v21);
    sub_22ABDF398();
    v40 = v39;
    v41 = v35;
    v42 = (uint64_t)v70;
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v40, v21);
    v43 = (uint64_t)v37;
    v44 = v68;
    sub_22AA2550C(v43, (uint64_t)v68, &qword_2540E8580);
    v45 = (uint64_t)v66 + *(int *)(v67 + 48);
    *v66 = v74;
    sub_22AA2550C((uint64_t)v44, v45, &qword_2540E8580);
    sub_22AA2550C(v45, v42, &qword_2540E8580);
    if (__swift_getEnumTagSinglePayload(v42, 1, v41) == 1)
    {
      sub_22A9CF82C(v42, &qword_2540E8580);
      sub_22A9B7B50();
      v56 = swift_allocError();
      *(_QWORD *)v57 = 0xD000000000000010;
      *(_QWORD *)(v57 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v57 + 16) = 0;
      *(_QWORD *)(v57 + 24) = 0;
      *(_BYTE *)(v57 + 32) = 0;
      swift_willThrow(v56);
      sub_22A9CF82C((uint64_t)v62, &qword_255B13BD0);
      return;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v73 + 32))(v72, v42, v41);
    sub_22AA2545C(&qword_255B13BD8, &qword_2540E8578, MEMORY[0x24BDBFCD0]);
    v46 = sub_22ABDE930();
    v47 = *(_QWORD *)(v46 + 16);
    if (v47)
    {
      v48 = 0;
      v49 = v75[2];
      while (v48 < *(_QWORD *)(v46 + 16))
      {
        v50 = *v79 + v48;
        if (__OFADD__(*v79, v48))
          goto LABEL_25;
        LODWORD(v80[0]) = *(_DWORD *)(v46 + 32 + 4 * v48);
        sub_22AA6A448();
        sub_22ABDEBE8();
        if (v49)
        {
          v51 = v75[4];
          v52 = v74 * v51;
          if ((unsigned __int128)(v74 * (__int128)v51) >> 64 != (v74 * v51) >> 63)
            goto LABEL_26;
          if (v49 != 1)
          {
            v53 = v75[5];
            v54 = v50 * v53;
            if ((unsigned __int128)((uint64_t)v50 * (__int128)v53) >> 64 != (uint64_t)(v50 * v53) >> 63)
              goto LABEL_27;
            v55 = __OFADD__(v52, v54);
            v52 += v54;
            if (v55)
              goto LABEL_28;
          }
        }
        else
        {
          v52 = 0;
        }
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v76 + 40))(v77 + *(_QWORD *)(v76 + 72) * v52, v81, a7);
        if (v47 == ++v48)
          goto LABEL_18;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    v11 = v61;
    (*(void (**)(_BYTE *, uint64_t))(v73 + 8))(v72, v61);
    v30 = v62;
    v21 = v60;
    v32 = v59;
    if ((*((_BYTE *)v62 + v63) & 1) != 0)
      goto LABEL_21;
  }
  __break(1u);
}

void sub_22AA689D0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *, _QWORD);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, double);
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81[5];
  char *v82;

  v72 = a5;
  v78 = a1;
  v79 = a9;
  v80 = a6;
  v10 = *(_QWORD *)(a7 - 8);
  v76 = a4;
  v77 = v10;
  MEMORY[0x24BDAC7A8](a1);
  v82 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v74 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  MEMORY[0x24BDAC7A8](v14);
  v70 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v69 = (uint64_t)&v60 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v68 = (uint64_t)&v60 - v19;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BE0);
  MEMORY[0x24BDAC7A8](v67);
  v66 = (uint64_t *)((char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139A0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BE8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BF0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (uint64_t *)((char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = &v27[*(int *)(v25 + 52)];
  v63 = *(void (**)(char *, uint64_t, uint64_t, double))(v22 + 16);
  v63(v32, v72, v21, v29);
  *v31 = 0;
  v65 = v22;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v32, v21);
  v33 = (char *)v31 + *(int *)(v28 + 52);
  sub_22AA2545C(&qword_255B13A58, &qword_255B139A0, MEMORY[0x24BDF5F98]);
  v64 = v24;
  v72 = v21;
  sub_22ABDEE58();
  v34 = v31;
  v62 = *(int *)(v28 + 56);
  *((_BYTE *)v31 + v62) = 0;
  v75 = v12;
  v71 = v31;
  v61 = v33;
  while (1)
  {
    v35 = *v34;
    if (__OFADD__(*v34, 1))
      break;
    ++*v34;
    v36 = *(_QWORD *)&v33[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13A50) + 36)];
    sub_22AA2545C(&qword_255B13A60, &qword_255B139A0, MEMORY[0x24BDF5FA0]);
    v37 = v72;
    sub_22ABDF38C();
    if (v36 == v81[0])
    {
      v34 = v71;
      *((_BYTE *)v71 + v62) = 1;
LABEL_21:
      sub_22A9CF82C((uint64_t)v34, &qword_255B13BF0);
      return;
    }
    v38 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v39 = v69;
    sub_22A9CF800(v40, v69, &qword_2540E8570);
    v38(v81, 0);
    v41 = v64;
    ((void (*)(char *, char *, uint64_t))v63)(v64, v33, v37);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v37);
    v42 = v39;
    v43 = v75;
    v44 = v68;
    sub_22AA2550C(v42, v68, &qword_2540E8570);
    v45 = (uint64_t)v66 + *(int *)(v67 + 48);
    *v66 = v35;
    sub_22AA2550C(v44, v45, &qword_2540E8570);
    v46 = v45;
    v47 = v70;
    sub_22AA2550C(v46, v70, &qword_2540E8570);
    if (__swift_getEnumTagSinglePayload(v47, 1, v43) == 1)
    {
      sub_22A9CF82C(v47, &qword_2540E8570);
      sub_22A9B7B50();
      v58 = swift_allocError();
      *(_QWORD *)v59 = 0xD000000000000010;
      *(_QWORD *)(v59 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v59 + 16) = 0;
      *(_QWORD *)(v59 + 24) = 0;
      *(_BYTE *)(v59 + 32) = 0;
      swift_willThrow(v58);
      sub_22A9CF82C((uint64_t)v71, &qword_255B13BF0);
      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v73, v47, v43);
    sub_22AA2545C((unint64_t *)&qword_255B0DAF8, &qword_2540E8568, MEMORY[0x24BDBFCD0]);
    v48 = sub_22ABDE930();
    v49 = *(_QWORD *)(v48 + 16);
    if (v49)
    {
      v50 = 0;
      v51 = v76[2];
      while (v50 < *(_QWORD *)(v48 + 16))
      {
        v52 = *v80 + v50;
        if (__OFADD__(*v80, v50))
          goto LABEL_25;
        sub_22ABDEA8C();
        if (v51)
        {
          v53 = v76[4];
          v54 = v35 * v53;
          if ((unsigned __int128)(v35 * (__int128)v53) >> 64 != (v35 * v53) >> 63)
            goto LABEL_26;
          if (v51 != 1)
          {
            v55 = v76[5];
            v56 = v52 * v55;
            if ((unsigned __int128)((uint64_t)v52 * (__int128)v55) >> 64 != (uint64_t)(v52 * v55) >> 63)
              goto LABEL_27;
            v57 = __OFADD__(v54, v56);
            v54 += v56;
            if (v57)
              goto LABEL_28;
          }
        }
        else
        {
          v54 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v77 + 40))(v78 + *(_QWORD *)(v77 + 72) * v54, v82, a7);
        if (v49 == ++v50)
          goto LABEL_18;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
    v34 = v71;
    v33 = v61;
    if ((*((_BYTE *)v71 + v62) & 1) != 0)
      goto LABEL_21;
  }
  __break(1u);
}

void sub_22AA68FF8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *, _QWORD);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, double);
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81[5];
  char *v82;

  v72 = a5;
  v78 = a1;
  v79 = a9;
  v80 = a6;
  v10 = *(_QWORD *)(a7 - 8);
  v76 = a4;
  v77 = v10;
  MEMORY[0x24BDAC7A8](a1);
  v82 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v74 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8560);
  MEMORY[0x24BDAC7A8](v14);
  v70 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v69 = (uint64_t)&v60 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v68 = (uint64_t)&v60 - v19;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13BF8);
  MEMORY[0x24BDAC7A8](v67);
  v66 = (uint64_t *)((char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13990);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13C00);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13C08);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (uint64_t *)((char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = &v27[*(int *)(v25 + 52)];
  v63 = *(void (**)(char *, uint64_t, uint64_t, double))(v22 + 16);
  v63(v32, v72, v21, v29);
  *v31 = 0;
  v65 = v22;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v32, v21);
  v33 = (char *)v31 + *(int *)(v28 + 52);
  sub_22AA2545C(&qword_255B13A70, &qword_255B13990, MEMORY[0x24BDF5F98]);
  v64 = v24;
  v72 = v21;
  sub_22ABDEE58();
  v34 = v31;
  v62 = *(int *)(v28 + 56);
  *((_BYTE *)v31 + v62) = 0;
  v75 = v12;
  v71 = v31;
  v61 = v33;
  while (1)
  {
    v35 = *v34;
    if (__OFADD__(*v34, 1))
      break;
    ++*v34;
    v36 = *(_QWORD *)&v33[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B13A68) + 36)];
    sub_22AA2545C(&qword_255B13A78, &qword_255B13990, MEMORY[0x24BDF5FA0]);
    v37 = v72;
    sub_22ABDF38C();
    if (v36 == v81[0])
    {
      v34 = v71;
      *((_BYTE *)v71 + v62) = 1;
LABEL_21:
      sub_22A9CF82C((uint64_t)v34, &qword_255B13C08);
      return;
    }
    v38 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
    v39 = v69;
    sub_22A9CF800(v40, v69, &qword_2540E8560);
    v38(v81, 0);
    v41 = v64;
    ((void (*)(char *, char *, uint64_t))v63)(v64, v33, v37);
    sub_22ABDF398();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v37);
    v42 = v39;
    v43 = v75;
    v44 = v68;
    sub_22AA2550C(v42, v68, &qword_2540E8560);
    v45 = (uint64_t)v66 + *(int *)(v67 + 48);
    *v66 = v35;
    sub_22AA2550C(v44, v45, &qword_2540E8560);
    v46 = v45;
    v47 = v70;
    sub_22AA2550C(v46, v70, &qword_2540E8560);
    if (__swift_getEnumTagSinglePayload(v47, 1, v43) == 1)
    {
      sub_22A9CF82C(v47, &qword_2540E8560);
      sub_22A9B7B50();
      v58 = swift_allocError();
      *(_QWORD *)v59 = 0xD000000000000010;
      *(_QWORD *)(v59 + 8) = 0x800000022ABF2360;
      *(_QWORD *)(v59 + 16) = 0;
      *(_QWORD *)(v59 + 24) = 0;
      *(_BYTE *)(v59 + 32) = 0;
      swift_willThrow(v58);
      sub_22A9CF82C((uint64_t)v71, &qword_255B13C08);
      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v73, v47, v43);
    sub_22AA2545C(&qword_2540E8538, &qword_2540E8550, MEMORY[0x24BDBFCD0]);
    v48 = sub_22ABDE930();
    v49 = *(_QWORD *)(v48 + 16);
    if (v49)
    {
      v50 = 0;
      v51 = v76[2];
      while (v50 < *(_QWORD *)(v48 + 16))
      {
        v52 = *v80 + v50;
        if (__OFADD__(*v80, v50))
          goto LABEL_25;
        sub_22ABDEA80();
        if (v51)
        {
          v53 = v76[4];
          v54 = v35 * v53;
          if ((unsigned __int128)(v35 * (__int128)v53) >> 64 != (v35 * v53) >> 63)
            goto LABEL_26;
          if (v51 != 1)
          {
            v55 = v76[5];
            v56 = v52 * v55;
            if ((unsigned __int128)((uint64_t)v52 * (__int128)v55) >> 64 != (uint64_t)(v52 * v55) >> 63)
              goto LABEL_27;
            v57 = __OFADD__(v54, v56);
            v54 += v56;
            if (v57)
              goto LABEL_28;
          }
        }
        else
        {
          v54 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v77 + 40))(v78 + *(_QWORD *)(v77 + 72) * v54, v82, a7);
        if (v49 == ++v50)
          goto LABEL_18;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
    v34 = v71;
    v33 = v61;
    if ((*((_BYTE *)v71 + v62) & 1) != 0)
      goto LABEL_21;
  }
  __break(1u);
}

void sub_22AA69620(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[16];
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t TupleTypeMetadata2;

  v60 = a4;
  v61 = a6;
  v58 = a5;
  v59 = a1;
  v8 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = &v52[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v52[-v12];
  v14 = sub_22ABDE8A0();
  v54 = *(_QWORD *)(v14 - 8);
  v55 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v53 = &v52[-v15];
  v57 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB10);
  v16 = *(v57 - 1);
  MEMORY[0x24BDAC7A8](v57);
  v56 = &v52[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13C10);
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB18);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = &v52[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = &v20[*(int *)(v18 + 52)];
  v26 = v57;
  (*(void (**)(_BYTE *, uint64_t, _QWORD *, double))(v16 + 16))(v25, v58, v57, v22);
  *(_QWORD *)v24 = 0;
  (*(void (**)(_BYTE *, _BYTE *, _QWORD *))(v16 + 32))(v56, v25, v26);
  sub_22AA2545C(&qword_255B13A80, &qword_255B0DB10, MEMORY[0x24BDF5F98]);
  sub_22ABDEE58();
  v27 = *(int *)(v21 + 56);
  v56 = v24;
  v24[v27] = 0;
LABEL_2:
  v58 = sub_22A9A0244();
  if (v28)
  {
    v29 = v28;
    if (v28 == (_QWORD *)1)
    {
      sub_22A9CF82C((uint64_t)v56, &qword_255B0DB18);
    }
    else
    {
      v62 = 0;
      sub_22AA6A498(v58, v28);
      v57 = v29;
      v30 = v29;
      v31 = v55;
      MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v55);
      v32 = v53;
      sub_22ABDE90C();
      v33 = sub_22ABDE930();
      (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v32, v31);
      v70 = v33;
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11148);
      v35 = sub_22ABDF0F8();
      v36 = sub_22AA10448();
      v37 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v35);
      sub_22ABE0178();
      swift_bridgeObjectRelease();
      v66 = v68;
      v67 = v69;
      v62 = v34;
      v63 = v35;
      v64 = v36;
      v65 = v37;
      sub_22ABDF7E8();
      sub_22ABDF7C4();
      while (1)
      {
        v62 = v34;
        v63 = v35;
        v64 = v36;
        v65 = v37;
        sub_22ABDF7DC();
        sub_22ABDF7D0();
        v38 = TupleTypeMetadata2;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, TupleTypeMetadata2) == 1)
        {
          swift_bridgeObjectRelease();
          v48 = v57;
          v49 = v58;
          sub_22AA6A4A8(v58, v57);
          sub_22AA6A4A8(v49, v48);
          goto LABEL_2;
        }
        v39 = v38;
        v40 = *(_QWORD *)v13;
        (*(void (**)(_BYTE *, char *, uint64_t))(v8 + 32))(v10, &v13[*(int *)(v39 + 48)], a7);
        v41 = *v61 + v40;
        if (__OFADD__(*v61, v40))
          break;
        v42 = v60[2];
        if (v42)
        {
          v43 = v60[4];
          v44 = v58 * v43;
          if ((unsigned __int128)(v58 * (__int128)v43) >> 64 != (v58 * v43) >> 63)
            goto LABEL_21;
          if (v42 != 1)
          {
            v45 = v60[5];
            v46 = v41 * v45;
            if ((unsigned __int128)(v41 * (__int128)v45) >> 64 != (v41 * v45) >> 63)
              goto LABEL_22;
            v47 = __OFADD__(v44, v46);
            v44 += v46;
            if (v47)
              goto LABEL_23;
          }
        }
        else
        {
          v44 = 0;
        }
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 24))(v59 + *(_QWORD *)(v8 + 72) * v44, v10, a7);
        (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, a7);
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
  }
  else
  {
    sub_22A9B7B50();
    v50 = swift_allocError();
    *(_QWORD *)v51 = 0xD000000000000010;
    *(_QWORD *)(v51 + 8) = 0x800000022ABF2360;
    *(_QWORD *)(v51 + 16) = 0;
    *(_QWORD *)(v51 + 24) = 0;
    *(_BYTE *)(v51 + 32) = 0;
    swift_willThrow(v50);
    sub_22A9CF82C((uint64_t)v56, &qword_255B0DB18);
  }
}

uint64_t sub_22AA69B2C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65536E6D756C6F63 && a2 == 0xEF6E6F697463656CLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22AA69BD4()
{
  return 0x65536E6D756C6F63;
}

uint64_t sub_22AA69BF8()
{
  return sub_22A9D94E4();
}

uint64_t sub_22AA69C04()
{
  return sub_22A9EC09C();
}

uint64_t sub_22AA69C14()
{
  return sub_22A9D96F4();
}

uint64_t sub_22AA69C24()
{
  sub_22ABE0244();
  sub_22A9D96F4();
  return sub_22ABE0280();
}

uint64_t sub_22AA69C68()
{
  return sub_22AA69BD4();
}

uint64_t sub_22AA69C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA69B2C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22AA69CAC()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AA69CD0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9D94E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22AA69D04(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2488, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA69D38(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2488, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22AA69D6C()
{
  uint64_t v0;

  ColumnAggregator.applied(to:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ColumnAggregator.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFA34();
  sub_22ABDEDC8();
  return 0;
}

void ColumnAggregator<>.encode(to:)()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = type metadata accessor for ColumnAggregator.CodingKeys(255, v3[2], v3[3], v3[4]);
  MEMORY[0x22E2E4D80](&unk_22ABF2488, v4);
  v10 = *(_QWORD *)(sub_22ABDFD58() - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  v8 = *v0;
  HIDWORD(v9) = *((unsigned __int8 *)v0 + 8);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_22ABE02B0();
  v11 = v8;
  v12 = BYTE4(v9);
  sub_22AA6A0EC();
  sub_22ABDFD4C();
  OUTLINED_FUNCTION_51((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  OUTLINED_FUNCTION_16();
}

void ColumnAggregator<>.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12();
  type metadata accessor for ColumnAggregator.CodingKeys(255, v0, v1, v2);
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA69FC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = sub_22ABDFCB0();
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_22ABE0298();
  if (!v1)
  {
    v4 = *(_QWORD *)(v2 - 72);
    sub_22AA6A128();
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_20_32();
    v5 = *(_BYTE *)(v2 - 88);
    *(_QWORD *)v4 = *(_QWORD *)(v2 - 96);
    *(_BYTE *)(v4 + 8) = v5;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  OUTLINED_FUNCTION_16();
}

void sub_22AA6A0AC()
{
  ColumnAggregator<>.init(from:)();
}

void sub_22AA6A0CC()
{
  ColumnAggregator<>.encode(to:)();
}

uint64_t type metadata accessor for ColumnAggregator.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ColumnAggregator.CodingKeys);
}

unint64_t sub_22AA6A0EC()
{
  unint64_t result;

  result = qword_255B13850;
  if (!qword_255B13850)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for ColumnSelection, &type metadata for ColumnSelection);
    atomic_store(result, (unint64_t *)&qword_255B13850);
  }
  return result;
}

unint64_t sub_22AA6A128()
{
  unint64_t result;

  result = qword_255B13858[0];
  if (!qword_255B13858[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for ColumnSelection, &type metadata for ColumnSelection);
    atomic_store(result, qword_255B13858);
  }
  return result;
}

uint64_t type metadata accessor for ColumnAggregator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ColumnAggregator);
}

uint64_t sub_22AA6A170(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22AA6A1B0 + 4 * byte_22ABF22A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22AA6A1D0 + 4 * byte_22ABF22A5[v4]))();
}

_BYTE *sub_22AA6A1B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22AA6A1D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA6A1D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA6A1E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA6A1E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA6A1F0(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_22AA6A1FC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA6A20C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA6A21C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA6A22C(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_22AA6A23C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22AA6A24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA69620);
}

uint64_t sub_22AA6A268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA68FF8);
}

uint64_t sub_22AA6A284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA689D0);
}

uint64_t sub_22AA6A2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA68370);
}

uint64_t sub_22AA6A2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA67D3C);
}

uint64_t sub_22AA6A2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA6791C);
}

uint64_t sub_22AA6A2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA674FC);
}

uint64_t sub_22AA6A310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA670D8);
}

uint64_t sub_22AA6A32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA66C94);
}

uint64_t sub_22AA6A348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA6687C);
}

uint64_t sub_22AA6A364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA66484);
}

uint64_t sub_22AA6A380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA6608C);
}

uint64_t sub_22AA6A39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA65C74);
}

uint64_t sub_22AA6A3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA6584C);
}

uint64_t sub_22AA6A3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA65424);
}

uint64_t sub_22AA6A3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA405A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA6505C);
}

unint64_t sub_22AA6A40C()
{
  unint64_t result;

  result = qword_255B13AD0;
  if (!qword_255B13AD0)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE4298], MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_255B13AD0);
  }
  return result;
}

unint64_t sub_22AA6A448()
{
  unint64_t result;

  result = qword_255B13B00;
  if (!qword_255B13B00)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE3FC8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_255B13B00);
  }
  return result;
}

uint64_t sub_22AA6A484(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

id sub_22AA6A498(uint64_t a1, void *a2)
{
  id result;

  if (a2 != (void *)1)
    return a2;
  return result;
}

void sub_22AA6A4A8(uint64_t a1, void *a2)
{
  if (a2 != (void *)1)

}

uint64_t OUTLINED_FUNCTION_6_56()
{
  return sub_22AA3EF7C();
}

uint64_t OUTLINED_FUNCTION_8_38()
{
  return swift_dynamicCastMetatype();
}

uint64_t OUTLINED_FUNCTION_10_33()
{
  return sub_22AA3EF7C();
}

unint64_t OUTLINED_FUNCTION_11_44()
{
  return sub_22AA59E94();
}

uint64_t OUTLINED_FUNCTION_13_45(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_18_37()
{
  return sub_22ABDF464();
}

uint64_t OUTLINED_FUNCTION_20_33()
{
  return swift_dynamicCastMetatype();
}

uint64_t OUTLINED_FUNCTION_21_37()
{
  return sub_22ABDD3DC();
}

uint64_t OUTLINED_FUNCTION_22_32()
{
  return sub_22ABDD3DC();
}

uint64_t OUTLINED_FUNCTION_24_28()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_26_25()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_27_25()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 120, 0);
}

void OUTLINED_FUNCTION_28_21(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  sub_22AA2550C(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t OUTLINED_FUNCTION_29_22()
{
  return sub_22ABDF38C();
}

uint64_t OUTLINED_FUNCTION_30_21()
{
  return sub_22ABDF398();
}

uint64_t OUTLINED_FUNCTION_31_18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_33_23()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_34_21()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_35_14()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_37_18(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_22AA2545C(a1, v3, a3);
}

void OUTLINED_FUNCTION_38_21(uint64_t a1@<X8>)
{
  uint64_t v1;

  **(_QWORD **)(v1 - 96) = a1;
}

void OUTLINED_FUNCTION_39_19(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 - 256);
  *(_QWORD *)(a1 - 32) = v2;
  *(_QWORD *)(a1 - 24) = v4;
  *(_QWORD *)(a1 - 16) = *(_QWORD *)(v3 - 96);
}

uint64_t OUTLINED_FUNCTION_41_12()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 552);
}

uint64_t OUTLINED_FUNCTION_42_14()
{
  return sub_22ABDD3DC();
}

uint64_t OUTLINED_FUNCTION_43_13()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 504);
}

uint64_t OUTLINED_FUNCTION_44_16()
{
  return sub_22ABDD3F4();
}

uint64_t OUTLINED_FUNCTION_45_12()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 456);
}

uint64_t OUTLINED_FUNCTION_47_12()
{
  return sub_22ABDEE58();
}

uint64_t OUTLINED_FUNCTION_48_16()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 400);
}

uint64_t OUTLINED_FUNCTION_51_17()
{
  return sub_22ABDD3DC();
}

uint64_t OUTLINED_FUNCTION_53_16()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_56_12@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 16))(v1, v2, v3);
}

void OUTLINED_FUNCTION_57_10(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_22A9CF82C(*(_QWORD *)(a2 - 256), a1);
}

unint64_t OUTLINED_FUNCTION_58_7()
{
  uint64_t v0;

  return sub_22A9B8810(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t OUTLINED_FUNCTION_59_10()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 328);
}

uint64_t OUTLINED_FUNCTION_60_12()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 384);
}

uint64_t OUTLINED_FUNCTION_61_10()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 352);
}

uint64_t OUTLINED_FUNCTION_62_9()
{
  return swift_dynamicCastMetatype();
}

uint64_t OUTLINED_FUNCTION_63_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_66_13()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 264);
}

uint64_t OUTLINED_FUNCTION_67_7()
{
  return sub_22ABDD3DC();
}

uint64_t OUTLINED_FUNCTION_68_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_69_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_75_9(uint64_t result)
{
  return sub_22AA6A23C(result);
}

uint64_t OUTLINED_FUNCTION_77_7()
{
  return swift_dynamicCastMetatype();
}

void OUTLINED_FUNCTION_79_6()
{
  void *v0;

  sub_22AA6A22C(v0);
}

uint64_t OUTLINED_FUNCTION_80_9()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_81_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_82_8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_84_8()
{
  return sub_22ABDD3F4();
}

void OUTLINED_FUNCTION_88_4()
{
  void *v0;

}

void OUTLINED_FUNCTION_89_3()
{
  JUMPOUT(0x22E2E3A9CLL);
}

uint64_t OUTLINED_FUNCTION_90_6()
{
  return sub_22ABDD3DC();
}

uint64_t OUTLINED_FUNCTION_91_4()
{
  return sub_22ABDEFF0();
}

void OUTLINED_FUNCTION_92_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_22A9CF82C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_93_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_94_4(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  sub_22AA2550C(a1, *(_QWORD *)(a3 - 256), a2);
}

void OUTLINED_FUNCTION_95_2(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 - 256);
  *(_QWORD *)(a1 - 32) = v2;
  *(_QWORD *)(a1 - 24) = v4;
  *(_QWORD *)(a1 - 16) = *(_QWORD *)(v3 - 96);
}

uint64_t OUTLINED_FUNCTION_96_1()
{
  return sub_22AA3EF7C();
}

uint64_t OUTLINED_FUNCTION_97_2(uint64_t result)
{
  return sub_22AA6A23C(result);
}

uint64_t OUTLINED_FUNCTION_98_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 255;
}

uint64_t TemporalFeature.init(id:feature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a5 = *(_QWORD *)a1;
  *(_QWORD *)(a5 + 8) = v7;
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a5 + 32) = v8;
  v9 = a5 + *(int *)(type metadata accessor for TemporalFeature(0, a3, a3, a4) + 28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v9, a2, a3);
}

uint64_t type metadata accessor for TemporalFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TemporalFeature);
}

uint64_t TemporalFeature.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 32) = v3;
  return sub_22ABDEAEC();
}

__n128 TemporalFeature.id.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;

  v4 = (__n128)a1[1];
  v5 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  result = v4;
  *(_OWORD *)v1 = v5;
  *(__n128 *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*TemporalFeature.id.modify())()
{
  return nullsub_1;
}

uint64_t TemporalFeature.feature.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t TemporalFeature.feature.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

uint64_t (*TemporalFeature.feature.modify())()
{
  return nullsub_1;
}

uint64_t sub_22AA6AA74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65727574616566 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA6AB48(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65727574616566;
  else
    return 25705;
}

uint64_t sub_22AA6AB74()
{
  char *v0;

  return sub_22AA6AB48(*v0);
}

uint64_t sub_22AA6AB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA6AA74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA6ABAC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2760, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA6ABE0(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2760, a1);
  return sub_22ABE02F8();
}

uint64_t static TemporalFeature<A>.== infix(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;

  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = *a2;
  v8 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v11 = a2[4];
  v12 = *a1 == *a2 && a1[1] == v8;
  if (!v12 && (sub_22ABDFF68() & 1) == 0)
    return 0;
  v13 = v4 == v10 && v6 == v9;
  if (!v13 || v5 != v11)
    return 0;
  type metadata accessor for TemporalFeature(0, a3, v7, v8);
  return sub_22ABDECFC() & 1;
}

uint64_t sub_22AA6ACD0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  return static TemporalFeature<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t TemporalFeature<A>.hash(into:)()
{
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  sub_22ABE0250();
  sub_22ABE0250();
  sub_22ABE0250();
  swift_bridgeObjectRelease();
  return sub_22ABDEC0C();
}

uint64_t TemporalFeature<A>.hashValue.getter()
{
  sub_22ABE0244();
  TemporalFeature<A>.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22AA6ADD8()
{
  return TemporalFeature<A>.hashValue.getter();
}

uint64_t sub_22AA6ADE0()
{
  return TemporalFeature<A>.hash(into:)();
}

uint64_t sub_22AA6ADE8()
{
  sub_22ABE0244();
  TemporalFeature<A>.hash(into:)();
  return sub_22ABE0280();
}

void TemporalFeature<A>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v17 = a3;
  v5 = v4;
  v15[1] = a2;
  v16 = *(_QWORD *)(a2 + 16);
  v7 = type metadata accessor for TemporalFeature.CodingKeys(255, v16, a3, a4);
  MEMORY[0x22E2E4D80](&unk_22ABF2760, v7);
  v8 = sub_22ABDFD58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v15 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v12 = v5[1];
  v13 = v5[4];
  v19 = *v5;
  v20 = v12;
  v21 = *((_OWORD *)v5 + 1);
  v22 = v13;
  v23 = 0;
  sub_22AA6AFA4();
  v14 = v18;
  sub_22ABDFD4C();
  if (!v14)
  {
    LOBYTE(v19) = 1;
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for TemporalFeature.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TemporalFeature.CodingKeys);
}

unint64_t sub_22AA6AFA4()
{
  unint64_t result;

  result = qword_255B13C18;
  if (!qword_255B13C18)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TemporalSegmentIdentifier, &type metadata for TemporalSegmentIdentifier);
    atomic_store(result, (unint64_t *)&qword_255B13C18);
  }
  return result;
}

void sub_22AA6AFE0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  TemporalFeature<A>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), a4);
}

void TemporalFeature<A>.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;

  v32 = a3;
  v28 = a4;
  v27 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TemporalFeature.CodingKeys(255, v7, v8, v9);
  MEMORY[0x22E2E4D80](&unk_22ABF2760, v10);
  v33 = sub_22ABDFCB0();
  v29 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v12 = (char *)&v25 - v11;
  v31 = a2;
  v15 = type metadata accessor for TemporalFeature(0, a2, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v25 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v34 = v12;
  v19 = (uint64_t)v35;
  sub_22ABE0298();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v26 = v16;
    v20 = v31;
    v35 = a1;
    v21 = v30;
    v40 = 0;
    sub_22AA6B264();
    sub_22ABDFC8C();
    v22 = v37;
    v23 = v39;
    *(_QWORD *)v18 = v36;
    *((_QWORD *)v18 + 1) = v22;
    *((_OWORD *)v18 + 1) = v38;
    *((_QWORD *)v18 + 4) = v23;
    LOBYTE(v36) = 1;
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_0_46();
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v18[*(int *)(v15 + 28)], v21, v20);
    v24 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v28, v18, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v15);
  }
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22AA6B264()
{
  unint64_t result;

  result = qword_255B13C20;
  if (!qword_255B13C20)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TemporalSegmentIdentifier, &type metadata for TemporalSegmentIdentifier);
    atomic_store(result, (unint64_t *)&qword_255B13C20);
  }
  return result;
}

unint64_t sub_22AA6B2A4()
{
  unint64_t result;

  result = qword_255B13C28[0];
  if (!qword_255B13C28[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TemporalSegmentIdentifier, &type metadata for TemporalSegmentIdentifier);
    atomic_store(result, qword_255B13C28);
  }
  return result;
}

uint64_t sub_22AA6B2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x22E2E4D80](&protocol conformance descriptor for <A> TemporalFeature<A>, a1, &v4);
}

void sub_22AA6B318(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TemporalFeature<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t dispatch thunk of TemporalSequence.count.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22AA6B358()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22AA6B3D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 40) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_QWORD *)(a1 + 32) = a2[4];
    v11 = (a1 + v6 + 40) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 40) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_22ABDEAEC();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_22AA6B4A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_22AA6B4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 40 + a1) & ~v7;
  v9 = (v7 + 40 + a2) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  sub_22ABDEAEC();
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_22AA6B568(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_22AA6B5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))((*(unsigned __int8 *)(v5 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_22AA6B650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_22AA6B6C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 40) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload((a1 + v8 + 40) & ~v8, v6, v4);
      v16 = *(_QWORD *)(a1 + 8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA6B79C + 4 * byte_22ABF24E0[(v10 - 1)]))();
}

void sub_22AA6B808(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_22AA6BA04(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA6BA50 + 4 * byte_22ABF24F3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA6BA84 + 4 * byte_22ABF24EE[v4]))();
}

uint64_t sub_22AA6BA84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA6BA8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA6BA94);
  return result;
}

uint64_t sub_22AA6BAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA6BAA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA6BAAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA6BAB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AA6BAC0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA6BAD0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA6BAE0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 136), v1);
}

uint64_t LinearRegressorModel.featureCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) - 1;
}

uint64_t LinearRegressorModel.coefficients.getter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *v1;
  v8 = *(_OWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = v8;
  swift_retain();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8658);
  v3 = sub_22A9C8D60((unint64_t *)&qword_2540E8650, &qword_2540E8658, MEMORY[0x24BEE2A60]);
  v5 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA6BBD0, (uint64_t)&v7, v2, v8, MEMORY[0x24BEE4078], v3, MEMORY[0x24BEE40A8], v4);
  swift_release();
  return v5;
}

uint64_t sub_22AA6BBD0()
{
  return sub_22AA6D1F8();
}

__n128 sub_22AA6BBE4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  result = *(__n128 *)(a1 + 56);
  *(__n128 *)(a2 + 56) = result;
  *(_QWORD *)(a2 + 72) = v2;
  *(_BYTE *)(a2 + 80) = v3;
  return result;
}

double LinearRegressorModel.init<A>(coefficients:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v11;
  double result;
  _QWORD v13[8];

  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  v13[6] = a6;
  v11 = sub_22A9C2540((uint64_t)sub_22AA6BD68, (uint64_t)v13, a3, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], a6, MEMORY[0x24BEE40A8], a7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  *(_QWORD *)a8 = v11;
  result = 0.0;
  *(_OWORD *)(a8 + 8) = 0u;
  *(_OWORD *)(a8 + 24) = 0u;
  *(_OWORD *)(a8 + 40) = 0u;
  *(_OWORD *)(a8 + 56) = 0u;
  *(_OWORD *)(a8 + 65) = 0u;
  return result;
}

uint64_t sub_22AA6BCC0(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  sub_22A99CE8C();
  return sub_22ABDEA50();
}

uint64_t sub_22AA6BD68(uint64_t a1)
{
  return sub_22AA6BCC0(a1);
}

uint64_t LinearRegressorModel.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const void *v5;
  _QWORD *v6;
  uint64_t v7;

  v6[17] = a4;
  v6[18] = a5;
  v6[15] = a2;
  v6[16] = a3;
  v6[14] = a1;
  v7 = *(_QWORD *)(a5 + 16);
  v6[19] = v7;
  v6[20] = *(_QWORD *)(v7 - 8);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  memcpy(v6 + 2, v5, 0x51uLL);
  return swift_task_switch();
}

void sub_22AA6BE48()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isStackAllocationSafe;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0[18] + 24);
  sub_22ABDE8A0();
  v2 = *(_QWORD *)(sub_22ABDE84C() + 16);
  swift_bridgeObjectRelease();
  v3 = sub_22ABDE84C();
  v4 = v3;
  if (v2 != 1)
  {
    v18 = 0xD000000000000024;
    v19 = 0x800000022ABE31E0;
LABEL_11:
    sub_22A9B7B50();
    v20 = swift_allocError();
    *(_QWORD *)v21 = v4;
    *(_QWORD *)(v21 + 8) = v18;
    *(_QWORD *)(v21 + 16) = v19;
    *(_QWORD *)(v21 + 24) = 0;
    *(_BYTE *)(v21 + 32) = 6;
    swift_willThrow(v20);
    swift_task_dealloc();
    swift_task_dealloc();
    goto LABEL_12;
  }
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  v5 = *(_QWORD *)(v3 + 32);
  isStackAllocationSafe = swift_bridgeObjectRelease();
  v7 = v0[2];
  v8 = *(_QWORD *)(v7 + 16);
  if (v5 != v8 - 1)
  {
    v4 = OUTLINED_FUNCTION_19_23();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v34 = 0xD00000000000001ELL;
    v35 = 0x800000022ABE3210;
    v0[13] = *(_QWORD *)(v7 + 16) - 1;
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_19_23();
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v18 = v34;
    v19 = v35;
    goto LABEL_11;
  }
  if (v8 >> 60)
    __break(1u);
  if ((uint64_t)(8 * v8) > 1024)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (!(_DWORD)isStackAllocationSafe)
    {
      v27 = v0[18];
      v33 = v0[19];
      v29 = v0[16];
      v28 = v0[17];
      v30 = v0[15];
      v31 = (void *)swift_slowAlloc();
      OUTLINED_FUNCTION_5_42(v31, v8, v30, (uint64_t)(v0 + 2), v29, v28, v33, v32, *(_QWORD *)(v27 + 32));
      if (!v1)
      {
        MEMORY[0x22E2E4E64](v31, -1, -1);
        goto LABEL_17;
      }

      OUTLINED_FUNCTION_2_50();
LABEL_20:
      JUMPOUT(0x22E2E4E64);
    }
  }
  MEMORY[0x24BDAC7A8](isStackAllocationSafe);
  v16 = OUTLINED_FUNCTION_5_42((char *)&v33 - v9, v8, v11, (uint64_t)(v0 + 2), v12, v13, v14, v15, *(_QWORD *)(v10 + 32));
  if (!v1)
  {
    v23 = v0[22];
    v24 = v0[19];
    v25 = v0[14];
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[20] + 32);
    v26(v23, v0[21], v24);
    v26(v25, v23, v24);
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
LABEL_12:
    OUTLINED_FUNCTION_2_50();
    __asm { BR              X0 }
  }
  swift_willThrow(v16);
  OUTLINED_FUNCTION_2_50();

}

uint64_t sub_22AA6C238(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v14 = sub_22ABDE8A0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v14);
  v25 = a9;
  v26 = sub_22ABDE930();
  v23 = a7;
  v24 = a8;
  v15 = sub_22ABDF0F8();
  v16 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v15);
  v18 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA6D22C, (uint64_t)v22, v15, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], v16, MEMORY[0x24BEE40A8], v17);
  swift_bridgeObjectRelease();
  sub_22AAC2630(v18, a1, a2);
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    *((_QWORD *)a1 + a2 - 1) = 0x3FF0000000000000;
    if (a1)
    {
      v20 = *(_QWORD *)a4 + 32;
      v21 = *(_QWORD *)(*(_QWORD *)a4 + 16);
      sub_22AA6D24C(a4);
      dot(_:_:)((uint64_t)a1, a2, 1, v20, v21, 1);
      sub_22AA6D2E4(a4);
      return sub_22ABDEA80();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA6C3D8(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  sub_22A99CE8C();
  return sub_22ABDEA50();
}

void sub_22AA6C480()
{
  uint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_12();
  v1 = v0;
  v3 = v2[3];
  v23 = v2[2];
  v24 = v4;
  v21 = v2[4];
  v22 = v3;
  v5 = type metadata accessor for LinearRegressorModel.Storage(0, v23, v3, v21);
  v25 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v21 - v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - v14;
  v26 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v26 + 16);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8658);
  sub_22A9C8D60(&qword_2540E8648, &qword_2540E8658, MEMORY[0x24BEE2A48]);
  sub_22ABDE864();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_22AA6C67C((uint64_t)v12, v23, v22, v21, v8);
  v17 = *(_QWORD *)(v24 + 24);
  v18 = *(_QWORD *)(v24 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v24, v17);
  v19 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8);
  v20 = MEMORY[0x22E2E4D80](&unk_22ABF2860, v5);
  v19(v8, v5, v20, v17, v18);
  (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA6C67C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v7 = type metadata accessor for LinearRegressorModel.Storage(0, a2, a3, a4);
  *a5 = 0;
  a5[1] = 0;
  v8 = (char *)a5 + *(int *)(v7 + 44);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a1, v9);
}

void sub_22AA6C6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_12();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v51 = v30;
  v52 = v29;
  v31 = type metadata accessor for LinearRegressorModel.Storage(0, v25, v23, v29);
  v50 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v49 - v33;
  v36 = *(_QWORD *)(v28 + 24);
  v35 = *(_QWORD *)(v28 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v28, v36);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8);
  v38 = MEMORY[0x22E2E4D80](&unk_22ABF2888, v31);
  v37(v31, v31, v38, v36, v35);
  if (!v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    sub_22A9C8D60(&qword_2540E8538, &qword_2540E8550, MEMORY[0x24BDBFCD0]);
    v39 = sub_22ABDE930();
    v49 = (uint64_t)&v49;
    a10 = v39;
    MEMORY[0x24BDAC7A8](v39);
    *(&v49 - 4) = v26;
    *(&v49 - 3) = v24;
    v40 = v52;
    *(&v49 - 2) = v52;
    *(&v49 - 1) = v26;
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8);
    v42 = sub_22A9C8D60(qword_255B13DF8, &qword_2540E85C8, MEMORY[0x24BEE12E0]);
    v44 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA6BBD0, (uint64_t)(&v49 - 6), v41, v26, MEMORY[0x24BEE4078], v42, MEMORY[0x24BEE40A8], v43);
    swift_bridgeObjectRelease();
    a10 = v44;
    v45 = sub_22ABDF0F8();
    v46 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v45);
    v48 = LinearRegressorModel.init<A>(coefficients:)((uint64_t)&a10, v26, v45, v24, v40, v46, v47, v51);
    (*(void (**)(char *, uint64_t, double))(v50 + 8))(v34, v31, v48);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA6C8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A99DE80;
  return LinearRegressorModel.applied(to:eventHandler:)(a1, a2, a3, a4, a5);
}

void sub_22AA6C954()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_12();
  v12 = v0;
  v13 = v1;
  v3 = v2;
  v5 = type metadata accessor for LinearRegressorModel.Storage.CodingKeys(255, v4[2], v4[3], v4[4]);
  MEMORY[0x22E2E4D80](&unk_22ABF2988, v5);
  v6 = sub_22ABDFD58();
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_22ABE02B0();
  v11 = v13;
  sub_22ABDFCD4();
  if (!v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    sub_22AA34268(&qword_2540E8540, MEMORY[0x24BEE13D8], MEMORY[0x24BDBFCD8]);
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  OUTLINED_FUNCTION_16();
}

void sub_22AA6CABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_12();
  v35 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v28 = v9;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v27 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LinearRegressorModel.Storage.CodingKeys(255, v6, v4, v2);
  MEMORY[0x22E2E4D80](&unk_22ABF2988, v11);
  v34 = sub_22ABDFCB0();
  v30 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v29 = type metadata accessor for LinearRegressorModel.Storage(0, v6, v4, v2);
  v15 = *(_QWORD *)(v29 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v26 - v17);
  *v18 = 0;
  v18[1] = 0;
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  v33 = v14;
  v19 = v35;
  sub_22ABE0298();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = v15;
    v20 = v29;
    v21 = v31;
    v22 = v32;
    *v18 = sub_22ABDFC14();
    v18[1] = v23;
    sub_22AA34268(&qword_2540E8548, MEMORY[0x24BEE1400], MEMORY[0x24BDBFCE8]);
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_4_42();
    v24 = v20;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v18 + *(int *)(v20 + 44), v21, v22);
    v25 = v35;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v35 + 16))(v28, v18, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    (*(void (**)(uint64_t *, uint64_t))(v25 + 8))(v18, v24);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA6CD0C()
{
  char *v0;

  return sub_22AA33118(*v0);
}

uint64_t sub_22AA6CD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA33034(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA6CD50(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2988, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA6CD84(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2988, a1);
  return sub_22ABE02F8();
}

void sub_22AA6CDB8()
{
  sub_22AA6CABC();
}

void sub_22AA6CDD8()
{
  sub_22AA6C954();
}

uint64_t sub_22AA6CDEC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
}

uint64_t sub_22AA6CDF8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for LinearRegressorModel<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for BaseLinearRegressorModel(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for BaseLinearRegressorModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const void *v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (const void *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  swift_retain();
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    memcpy((void *)(a1 + 8), v5, 0x49uLL);
  }
  return a1;
}

uint64_t assignWithCopy for BaseLinearRegressorModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      swift_retain();
      swift_retain();
      swift_retain();
      return a1;
    }
LABEL_7:
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x49uLL);
    return a1;
  }
  if (!v4)
  {
    sub_22AA33AB8(a1 + 8);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

void *__swift_memcpy81_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t assignWithTake for BaseLinearRegressorModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_5;
  if (!v4)
  {
    sub_22AA33AB8(a1 + 8);
LABEL_5:
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x49uLL);
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for BaseLinearRegressorModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 81))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseLinearRegressorModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for LinearRegressorModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearRegressorModel);
}

uint64_t type metadata accessor for LinearRegressorModel.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearRegressorModel.Storage);
}

uint64_t sub_22AA6D1F8()
{
  return sub_22ABDEA80();
}

uint64_t sub_22AA6D22C(uint64_t a1)
{
  return sub_22AA6C3D8(a1);
}

uint64_t sub_22AA6D24C(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  swift_retain();
  sub_22AA5F3DC(v3);
  return a1;
}

uint64_t sub_22AA6D2E4(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  swift_release();
  sub_22AA6D37C(v3);
  return a1;
}

uint64_t sub_22AA6D37C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_22AA6D3B4()
{
  unint64_t v0;

  sub_22AA3420C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_22AA6D428(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 44);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_22ABDEAEC();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_22AA6D4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_22AA6D504(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 44);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  sub_22ABDEAEC();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *sub_22AA6D568(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 44);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_22AA6D5E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 44);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_22AA6D648(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 44);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_22AA6D6B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA6D6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 44), a2, v9);
  }
}

uint64_t sub_22AA6D748()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA6D754(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LinearRegressorModel.Storage.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearRegressorModel.Storage.CodingKeys);
}

uint64_t sub_22AA6D7D0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA6D81C + 4 * byte_22ABF27B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA6D850 + 4 * byte_22ABF27B0[v4]))();
}

uint64_t sub_22AA6D850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA6D858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA6D860);
  return result;
}

uint64_t sub_22AA6D86C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA6D874);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA6D878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA6D880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AA6D88C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA6D89C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA6D8AC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_4_42()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_5_42(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_22AA6C238(a1, a2, a3, a4, a5, a6, a7, v9, a9);
}

uint64_t Transformer.adaptedAsAnnotatedPredictionTransformer<A>(annotationType:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, a1);
}

void sub_22AA6D978(uint64_t *a1)
{
  type metadata accessor for AnnotatedPredictionTransformerAdaptor(255, *a1, a1[1], a1[2]);
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for AnnotatedPredictionTransformerAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnotatedPredictionTransformerAdaptor);
}

uint64_t sub_22AA6D9B0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22AA6DA1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA6DACC + 4 * byte_22ABF29E0[(v8 - 1)]))();
}

void sub_22AA6DB18(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22AA6DCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5[2] = a1;
  v5[3] = a2;
  v10 = a5[3];
  v5[4] = v10;
  v5[5] = *(_QWORD *)(v10 - 8);
  v5[6] = OUTLINED_FUNCTION_0_0();
  v11 = a5[4];
  v5[7] = v11;
  v12 = a5[2];
  v5[8] = v12;
  v5[9] = swift_getAssociatedTypeWitness();
  v13 = OUTLINED_FUNCTION_0_0();
  v5[10] = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 24)
                                                                                     + *(_QWORD *)(v11 + 24));
  v14 = (_QWORD *)swift_task_alloc();
  v5[11] = v14;
  *v14 = v5;
  v14[1] = sub_22AA6DDB8;
  return v16(v13, a2, a3, a4, v12, v11);
}

uint64_t sub_22AA6DDB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22AA6DE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = type metadata accessor for AnnotatedPrediction(0, AssociatedTypeWitness, v5, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6 + *(int *)(v10 + 36), v5);
  AnnotatedPrediction.init(prediction:annotation:)(v2, v3, v1, v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA6DEDC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA6DF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9B24D4;
  return sub_22AA6DCC0(a1, a2, a3, a4, a5);
}

char *sub_22AA6DF94(char *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  _DWORD *v19;
  uint64_t v22;

  v5 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
    goto LABEL_22;
  if (v5)
  {
    v8 = (uint64_t)result;
    v22 = MEMORY[0x24BEE4AF8];
    result = sub_22AB4D608(0, v5 & ~(v5 >> 63), 0);
    if (a2 < v8 || v5 < 0)
      goto LABEL_23;
    v9 = a4;
    v10 = v22;
    v11 = a5;
    v12 = (int *)(a5 + 16 * v8 + 32);
    v13 = v8;
    while (a2 != v13)
    {
      if (v8 < 0)
        goto LABEL_18;
      if (v13 >= *(_QWORD *)(a3 + 16))
        goto LABEL_19;
      if (v13 >= *(_QWORD *)(v9 + 16))
        goto LABEL_20;
      if (v13 >= *(_QWORD *)(v11 + 16))
        goto LABEL_21;
      v14 = *(_DWORD *)(a3 + 4 * v13 + 32);
      v15 = *(_DWORD *)(a4 + 32 + 4 * v13);
      v16 = *v12;
      v18 = *(_QWORD *)(v22 + 16);
      v17 = *(_QWORD *)(v22 + 24);
      if (v18 >= v17 >> 1)
      {
        result = sub_22AB4D608((char *)(v17 > 1), v18 + 1, 1);
        v11 = a5;
        v9 = a4;
      }
      *(_QWORD *)(v22 + 16) = v18 + 1;
      v19 = (_DWORD *)(v22 + 12 * v18);
      v19[8] = v14;
      v19[9] = v15;
      v19[10] = v16;
      ++v13;
      v12 += 4;
      if (a2 == v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x24BEE4AF8];
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (char *)v10;
}

uint64_t sub_22AA6E144(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v5 < v2)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

unint64_t sub_22AA6E188(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v5 < v2)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

void sub_22AA6E1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  sub_22AB4D538();
  sub_22ABDEAEC();
  if (v4)
  {
    v5 = (uint64_t *)(a1 + 32);
    while (a2 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v7 = *v5++;
      v6 = v7;
      v8 = *(_QWORD *)(v9 + 16);
      if (v8 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_22AB4D538();
      *(_QWORD *)(v9 + 16) = v8 + 1;
      *(float *)(v9 + 4 * v8 + 32) = (float)v6 / (float)a2++;
      if (!--v4)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22AA6E2E4(size_t a1, uint64_t a2)
{
  uint64_t v2;
  size_t v5;
  uint64_t v6;
  size_t v8;

  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v5 = sub_22AABEBA0(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v5;
  sub_22AA71608((uint64_t *)&v8);
  v6 = v8;
  if (v2)
    swift_release();
  return v6;
}

uint64_t sub_22AA6E370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (!*(_QWORD *)(a1 + 16))
    return MEMORY[0x24BEE4AF8];
  v1 = *(_QWORD *)(a1 + 32);
  sub_22AA35C20();
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 16);
  v5 = v4 + 1;
  if (v4 >= *(_QWORD *)(v2 + 24) >> 1)
    goto LABEL_18;
  while (1)
  {
    *(_QWORD *)(v3 + 16) = v5;
    *(_QWORD *)(v3 + 8 * v4 + 32) = v1;
    result = sub_22A99E9B0(1);
    v5 = result;
    v10 = (v9 >> 1) - v8;
    if (v9 >> 1 == v8)
      break;
    if ((uint64_t)(v9 >> 1) <= v8)
    {
      __break(1u);
      return result;
    }
    v11 = v7;
    v4 = v8;
    OUTLINED_FUNCTION_16_23();
    v12 = 0;
    v13 = *(_QWORD *)(v3 + 16);
    v14 = 8 * v13;
    v1 = v11 + 8 * v4;
    while (v13 + v12)
    {
      v15 = *(_QWORD *)(v1 + 8 * v12);
      v16 = *(_QWORD *)(v3 + v14 + 8 * v12 + 24);
      v4 = v16 + v15;
      if (__OFADD__(v16, v15))
        goto LABEL_17;
      if ((unint64_t)(v13 + v12) >= *(_QWORD *)(v3 + 24) >> 1)
      {
        OUTLINED_FUNCTION_30_22();
        v3 = v17;
      }
      *(_QWORD *)(v3 + 16) = v13 + v12 + 1;
      *(_QWORD *)(v3 + v14 + 8 * v12++ + 32) = v4;
      if (v10 == v12)
        goto LABEL_5;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    OUTLINED_FUNCTION_30_22();
    v3 = v18;
  }
  OUTLINED_FUNCTION_16_23();
LABEL_5:
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_22AA6E4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unsigned __int8 *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    goto LABEL_26;
  v4 = MEMORY[0x24BEE4AF8];
  v35 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v36 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    v4 = v36;
    v5 = (unsigned __int8 *)(a2 + 32);
    v6 = *(_QWORD *)(v36 + 16);
    v7 = v2;
    do
    {
      v8 = *v5;
      if (v6 >= *(_QWORD *)(v36 + 24) >> 1)
        sub_22AB4CE30();
      *(_QWORD *)(v36 + 16) = v6 + 1;
      *(_QWORD *)(v36 + 8 * v6 + 32) = v8;
      ++v5;
      ++v6;
      --v7;
    }
    while (v7);
  }
  v9 = sub_22ABDEAEC();
  v10 = sub_22AA6E2E4(v9, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v37 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    v13 = v37;
    v14 = *(_QWORD *)(v37 + 16);
    v15 = (uint64_t *)(v10 + 40);
    do
    {
      v17 = *v15;
      v15 += 2;
      v16 = v17;
      if (v14 >= *(_QWORD *)(v37 + 24) >> 1)
        sub_22AB4CE30();
      *(_QWORD *)(v37 + 16) = v14 + 1;
      *(_QWORD *)(v37 + 8 * v14++ + 32) = v16;
      --v11;
    }
    while (v11);
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  v18 = sub_22AA6E370(v13);
  swift_bridgeObjectRelease();
  v19 = sub_22ABBFDD0(v18);
  if ((v20 & 1) != 0)
  {
    __break(1u);
LABEL_26:
    result = sub_22ABDFADC();
    __break(1u);
    return result;
  }
  v21 = v19;
  v22 = sub_22ABDEAEC();
  sub_22AA6E1E0(v22, 1);
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v21 < 1)
  {
    swift_bridgeObjectRelease();
    v31 = v35;
    sub_22AA0B064(v35, 1.0);
    v28 = v32;
  }
  else
  {
    v25 = *(_QWORD *)(v18 + 16);
    if (v25)
    {
      v26 = (float)v21;
      sub_22AB4D538();
      v27 = 0;
      v28 = v12;
      v29 = *(_QWORD *)(v12 + 16);
      do
      {
        v30 = *(_QWORD *)(v18 + 8 * v27 + 32);
        if (v29 >= *(_QWORD *)(v28 + 24) >> 1)
          sub_22AB4D538();
        ++v27;
        *(_QWORD *)(v28 + 16) = v29 + 1;
        *(float *)(v28 + 4 * v29++ + 32) = (float)v30 / v26;
      }
      while (v25 != v27);
      swift_bridgeObjectRelease();
      v31 = v35;
    }
    else
    {
      swift_bridgeObjectRelease();
      v28 = MEMORY[0x24BEE4AF8];
      v31 = v35;
    }
  }
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v33 = sub_22AA6DF94(0, v31, v24, v28, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v33;
}

uint64_t sub_22AA6E858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(v1 + 8);
  if ((sub_22ABDF380() & 1) == 0)
    __asm { BR              X9 }
  sub_22A9B7B50();
  v4 = OUTLINED_FUNCTION_53();
  *v5 = 0xD00000000000002CLL;
  v5[1] = 0x800000022ABE3C80;
  v5[2] = 0;
  v5[3] = 0;
  OUTLINED_FUNCTION_65_3(v4, (uint64_t)v5, 2);
  return a1;
}

void sub_22AA6E9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 - 88);
  v4 = sub_22ABDEAEC();
  v5 = *(_QWORD *)(v2 - 72);
  sub_22AA6F720(v4, v0, v1);
  if (v5)
  {
    sub_22AA71F94(v3, 2);
    JUMPOUT(0x22AA6E8F8);
  }
  JUMPOUT(0x22AA6E990);
}

void sub_22AA6E9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_22AA6EA18(v2, v0, v3, v6, v4, *(_QWORD *)(v7 - 96), v1, v5);
  JUMPOUT(0x22AA6E998);
}

void sub_22AA6EA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  float v46;
  uint64_t v47;
  float v48;
  uint64_t v49;
  float *v50;
  float v51;
  float v52;
  float v53;
  float v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t *v60;
  char *v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  float v91;
  uint64_t v92;
  _QWORD v93[2];
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  _OWORD v117[3];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  _OWORD v124[3];

  v111 = a8;
  v110 = a7;
  v109 = a6;
  v108 = a5;
  v106 = a2;
  v107 = a1;
  v10 = *(_QWORD *)(a4 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v97 = (uint64_t)v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v112 = (uint64_t)v93 - v14;
  OUTLINED_FUNCTION_14_9();
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v93 - v16;
  v18 = *(_QWORD *)(a4 + 24);
  v118 = sub_22ABDE9E4();
  if ((a3 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_47_3();
    sub_22ABDF734();
    sub_22ABDF2B4();
    a3 = v119;
    v94 = v120;
    v19 = v121;
    v101 = v122;
    v20 = v123;
  }
  else
  {
    v21 = -1 << *(_BYTE *)(a3 + 32);
    v22 = *(_QWORD *)(a3 + 56);
    v94 = a3 + 56;
    v23 = ~v21;
    v24 = -v21;
    if (v24 < 64)
      v25 = ~(-1 << v24);
    else
      v25 = -1;
    v20 = v25 & v22;
    OUTLINED_FUNCTION_47_3();
    v19 = v23;
    v101 = 0;
  }
  v26 = 0;
  v95 = a3 & 0x7FFFFFFFFFFFFFFFLL;
  v93[1] = v19;
  v96 = (unint64_t)(v19 + 64) >> 6;
  v27 = MEMORY[0x24BEE14E8];
  v105 = v10;
  v100 = a3;
  v99 = v11;
  v98 = v17;
  v104 = v18;
  if (a3 < 0)
    goto LABEL_10;
LABEL_8:
  if (v20)
  {
    v28 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v29 = v28 | (v101 << 6);
    goto LABEL_27;
  }
  v30 = v94;
  if (!__OFADD__(v101, 1))
  {
    OUTLINED_FUNCTION_19_29();
    if (v32 == v33)
      goto LABEL_98;
    v34 = *(_QWORD *)(v30 + 8 * v31);
    if (!v34)
    {
      if (v31 + 1 >= v96)
      {
LABEL_98:
        OUTLINED_FUNCTION_73_2((uint64_t)v17, 1);
        sub_22A9C38B4();
        return;
      }
      v34 = *(_QWORD *)(v30 + 8 * (v31 + 1));
      if (v34)
      {
        ++v31;
      }
      else
      {
        OUTLINED_FUNCTION_19_29();
        if (v32 == v33)
          goto LABEL_98;
        v34 = *(_QWORD *)(v30 + 8 * v31);
        if (!v34)
        {
          while (1)
          {
            OUTLINED_FUNCTION_19_29();
            if (v32 == v33)
              goto LABEL_98;
            v34 = *(_QWORD *)(v30 + 8 * v35);
            v36 = v35 + 1;
            if (v34)
            {
              v31 = v36 - 1;
              break;
            }
          }
        }
      }
    }
    v20 = (v34 - 1) & v34;
    v29 = __clz(__rbit64(v34)) + (v31 << 6);
    v101 = v31;
LABEL_27:
    OUTLINED_FUNCTION_49((uint64_t)v17, *(_QWORD *)(a3 + 48) + *(_QWORD *)(v11 + 72) * v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
    while (1)
    {
      OUTLINED_FUNCTION_73_2((uint64_t)v17, 0);
      v37 = v112;
      v38 = OUTLINED_FUNCTION_49(v112, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
      MEMORY[0x24BDAC7A8](v38);
      v39 = v108;
      v93[-8] = v10;
      v93[-7] = v39;
      v93[-6] = v109;
      v93[-5] = v18;
      v40 = v110;
      v41 = v111;
      v93[-4] = v110;
      v93[-3] = v41;
      v93[-2] = v37;
      v42 = v107;
      v44 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA724AC, (uint64_t)&v93[-10], v39, v27, MEMORY[0x24BEE4078], v40, MEMORY[0x24BEE40A8], v43);
      v45 = *(_QWORD *)(v44 + 16);
      if (!v45)
      {
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      v46 = *(float *)(v44 + 32);
      v47 = v45 - 1;
      if (v47)
      {
        v49 = 0;
        v48 = *(float *)(v44 + 32);
        do
        {
          if (*(float *)(v44 + 36 + 4 * v49) < v48)
            v48 = *(float *)(v44 + 36 + 4 * v49);
          ++v49;
        }
        while (v47 != v49);
        v50 = (float *)(v44 + 36);
        do
        {
          v51 = *v50++;
          v52 = v51;
          if (v46 < v51)
            v46 = v52;
          --v47;
        }
        while (v47);
      }
      else
      {
        v48 = *(float *)(v44 + 32);
      }
      v102 = v20;
      v103 = v26;
      swift_bridgeObjectRelease();
      if (v48 <= v46)
        break;
      v53 = v48;
LABEL_88:
      v11 = v99;
      v92 = v112;
      OUTLINED_FUNCTION_49(v97, v112, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 16));
      *(float *)v117 = v53;
      BYTE4(v117[0]) = 0;
      OUTLINED_FUNCTION_14_9();
      v27 = MEMORY[0x24BEE14E8];
      sub_22ABDEB28();
      sub_22ABDEB64();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v92, v10);
      a3 = v100;
      v17 = v98;
      v26 = v103;
      v20 = v102;
      if ((v100 & 0x8000000000000000) == 0)
        goto LABEL_8;
LABEL_10:
      if (!sub_22ABDF740())
        goto LABEL_98;
      sub_22ABDFF44();
      swift_unknownObjectRelease();
    }
    v54 = 0.0;
    v53 = v48;
    while (1)
    {
      v55 = sub_22AB024D0();
      v56 = sub_22AB02520();
      v57 = v56;
      v58 = *(_QWORD *)(v56 + 16);
      v17 = *(char **)(v55 + 16);
      if ((unint64_t)v17 >= v58)
        v59 = *(char **)(v56 + 16);
      else
        v59 = *(char **)(v55 + 16);
      *(_QWORD *)&v117[0] = MEMORY[0x24BEE4AF8];
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_16_23();
      OUTLINED_FUNCTION_16_33();
      OUTLINED_FUNCTION_14_39();
      v116 = v55;
      v115 = (char *)v57;
      v114 = v58;
      if (v59)
      {
        v60 = (uint64_t *)(v55 + 32);
        OUTLINED_FUNCTION_22_21();
        OUTLINED_FUNCTION_16_23();
        v61 = v59;
        v62 = v58;
        v63 = v17;
        while (v62)
        {
          if (!v63)
            goto LABEL_91;
          v64 = *v60;
          *(_QWORD *)&v117[0] = v42;
          v65 = *(_QWORD *)(v42 + 16);
          if (v65 >= *(_QWORD *)(v42 + 24) >> 1)
          {
            OUTLINED_FUNCTION_9_41();
            OUTLINED_FUNCTION_14_39();
          }
          *(_QWORD *)(v42 + 16) = v65 + 1;
          *(_QWORD *)(v42 + 8 * v65 + 32) = v64;
          --v63;
          --v62;
          ++v60;
          if (!--v61)
            goto LABEL_54;
        }
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      OUTLINED_FUNCTION_22_21();
      OUTLINED_FUNCTION_16_23();
LABEL_54:
      v66 = (char *)v114;
      v67 = v116;
      v68 = v115;
      if (v114 > (unint64_t)v17)
      {
        while (v59 < v66)
        {
          if (v17 == v59)
            goto LABEL_61;
          if (v59 >= v17)
            goto LABEL_96;
          v69 = *(_QWORD *)(v67 + 8 * (_QWORD)v59 + 32);
          *(_QWORD *)&v117[0] = v42;
          v70 = *(_QWORD *)(v42 + 16);
          if (v70 >= *(_QWORD *)(v42 + 24) >> 1)
          {
            OUTLINED_FUNCTION_9_41();
            OUTLINED_FUNCTION_14_39();
          }
          ++v59;
          *(_QWORD *)(v42 + 16) = v70 + 1;
          *(_QWORD *)(v42 + 8 * v70 + 32) = v69;
          if (v66 == v59)
            goto LABEL_61;
        }
        goto LABEL_94;
      }
LABEL_61:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22A9DC670(v42);
      v113 = v71;
      v72 = *((_QWORD *)v68 + 2);
      v73 = *(char **)(v67 + 16);
      if ((unint64_t)v73 >= v72)
        v74 = (char *)*((_QWORD *)v68 + 2);
      else
        v74 = *(char **)(v67 + 16);
      *(_QWORD *)&v117[0] = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_16_33();
      OUTLINED_FUNCTION_14_39();
      v114 = v72;
      if (v74)
      {
        v75 = (uint64_t *)(v68 + 32);
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_47_3();
        v76 = v74;
        v17 = v73;
        while (v72)
        {
          if (!v17)
            goto LABEL_93;
          v77 = *v75;
          *(_QWORD *)&v117[0] = v42;
          v78 = *(_QWORD *)(v42 + 16);
          if (v78 >= *(_QWORD *)(v42 + 24) >> 1)
          {
            OUTLINED_FUNCTION_8_39();
            OUTLINED_FUNCTION_14_39();
          }
          *(_QWORD *)(v42 + 16) = v78 + 1;
          *(_QWORD *)(v42 + 8 * v78 + 32) = v77;
          --v17;
          --v72;
          ++v75;
          if (!--v76)
            goto LABEL_73;
        }
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        goto LABEL_95;
      }
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_47_3();
LABEL_73:
      v79 = v114;
      if (v114 > (unint64_t)v73)
        break;
      v81 = v116;
      v17 = v115;
LABEL_83:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22A9DC9BC();
      sub_22A9DF098((uint64_t)v17, v81, (void (*)(_QWORD *__return_ptr, _QWORD *))sub_22AB9BB3C, v84, (uint64_t)v117);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v124[0] = v117[0];
      v124[1] = v117[1];
      v124[2] = v117[2];
      v85 = sub_22A9D5E60();
      sub_22A9D5F04(1);
      v87 = v85 + v86;
      if (__OFADD__(v85, v86))
      {
        __break(1u);
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
      v88 = sub_22A9D5E60();
      sub_22A9D5FB4(1);
      v42 = v89;
      sub_22A9E0728((uint64_t)v124);
      if (__OFADD__(v88, v42))
        goto LABEL_100;
      v90 = v88 + v42;
      v91 = ((double)v85 / (double)v87 * ((double)v88 / (double)v90)
           + (double)v85 / (double)v87 * ((double)v88 / (double)v90))
          / ((double)v85 / (double)v87 + (double)v88 / (double)v90);
      if (v54 < v91)
      {
        v53 = v48;
        v54 = ((double)v85 / (double)v87 * ((double)v88 / (double)v90)
             + (double)v85 / (double)v87 * ((double)v88 / (double)v90))
            / ((double)v85 / (double)v87 + (double)v88 / (double)v90);
      }
      v48 = v48 + 0.1;
      v10 = v105;
      v18 = v104;
      if (v48 > v46)
        goto LABEL_88;
    }
    v17 = v115;
    v80 = v115 + 32;
    v81 = v116;
    while ((unint64_t)v74 < v79)
    {
      if (v73 == v74)
        goto LABEL_83;
      if (v74 >= v73)
        goto LABEL_97;
      v82 = *(_QWORD *)&v80[8 * (_QWORD)v74];
      *(_QWORD *)&v117[0] = v42;
      v83 = *(_QWORD *)(v42 + 16);
      if (v83 >= *(_QWORD *)(v42 + 24) >> 1)
      {
        OUTLINED_FUNCTION_8_39();
        OUTLINED_FUNCTION_14_39();
      }
      ++v74;
      *(_QWORD *)(v42 + 16) = v83 + 1;
      *(_QWORD *)(v42 + 8 * v83 + 32) = v82;
      if ((char *)v79 == v74)
        goto LABEL_83;
    }
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
LABEL_102:
  __break(1u);
}

uint64_t sub_22AA6F388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[11];
  uint64_t v16;

  v16 = a3;
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a7;
  v15[6] = a8;
  v15[7] = a9;
  v15[8] = a1;
  v15[9] = a2;
  v9 = sub_22ABDF2D8();
  OUTLINED_FUNCTION_14_9();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1728], v9);
  v16 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA724C0, (uint64_t)v15, v9, TupleTypeMetadata2, MEMORY[0x24BEE4078], v11, MEMORY[0x24BEE40A8], v12);
  v13 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v13);
  return sub_22ABDEAD4();
}

void sub_22AA6F490(uint64_t *a1@<X0>, _DWORD *a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  float v16;
  float v17;
  uint64_t v18;

  v7 = *a1;
  v8 = sub_22ABDEAEC();
  v9 = sub_22AA60220(v8);
  swift_bridgeObjectRelease();
  v10 = sub_22A9F4F08(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 0x100000000) != 0)
    goto LABEL_18;
  if (a4 < 0.0 || *(float *)&v10 < a4)
    goto LABEL_18;
  v12 = sub_22ABDEAEC();
  v13 = sub_22AA60160(v12);
  swift_bridgeObjectRelease();
  v14 = sub_22A9F4F08(v13);
  swift_bridgeObjectRelease();
  if ((v14 & 0x100000000) != 0)
    goto LABEL_18;
  if (a3 < 0.0 || *(float *)&v14 < a3)
    goto LABEL_18;
  sub_22AA6031C(v7);
  if ((v18 & 0x100000000) != 0)
    goto LABEL_18;
  if (v16 > a3)
  {
    if (v17 >= a4)
      goto LABEL_19;
    goto LABEL_18;
  }
  sub_22AA60570(v7);
  if ((v18 & 0x100000000) != 0)
  {
    if (*(_QWORD *)(v7 + 16) < 2uLL || (sub_22AA60698(v7, a3, a4), (v18 & 0x100000000) != 0))
LABEL_18:
      LODWORD(v18) = 2143289344;
  }
LABEL_19:
  *a2 = v18;
}

void sub_22AA6F5D8(uint64_t *a1@<X0>, _DWORD *a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  float v16;
  float v17;
  uint64_t v18;

  v7 = *a1;
  v8 = sub_22ABDEAEC();
  v9 = sub_22AA60220(v8);
  swift_bridgeObjectRelease();
  v10 = sub_22A9F4F08(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 0x100000000) != 0)
    goto LABEL_18;
  if (a3 < 0.0 || *(float *)&v10 < a3)
    goto LABEL_18;
  v12 = sub_22ABDEAEC();
  v13 = sub_22AA60160(v12);
  swift_bridgeObjectRelease();
  v14 = sub_22A9F4F08(v13);
  swift_bridgeObjectRelease();
  if ((v14 & 0x100000000) != 0)
    goto LABEL_18;
  if (a4 < 0.0 || *(float *)&v14 < a4)
    goto LABEL_18;
  sub_22AA60444(v7);
  if ((v18 & 0x100000000) != 0)
    goto LABEL_18;
  if (v17 > a3)
  {
    if (v16 >= a4)
      goto LABEL_19;
    goto LABEL_18;
  }
  sub_22AA608CC(v7);
  if ((v18 & 0x100000000) != 0)
  {
    if (*(_QWORD *)(v7 + 16) < 2uLL || (sub_22AA609F4(v7, a3, a4), (v18 & 0x100000000) != 0))
LABEL_18:
      LODWORD(v18) = 2143289344;
  }
LABEL_19:
  *a2 = v18;
}

uint64_t sub_22AA6F720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v37 = a2;
  v38 = a3;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v42 = sub_22ABDF5D8();
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - v12;
  v14 = *(_QWORD *)(a1 + 64);
  v33 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v34 = (unint64_t)(v15 + 63) >> 6;
  v32 = v34 - 1;
  v36 = a1;
  result = OUTLINED_FUNCTION_22_21();
  v19 = 0;
  v35 = v7;
  if (!v17)
    goto LABEL_6;
LABEL_4:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v21 = v20 | (v19 << 6);
  while (2)
  {
    v22 = v36;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(v36 + 48) + *(_QWORD *)(v5 + 72) * v21, v4);
    v23 = 0;
    *(_DWORD *)&v10[*(int *)(TupleTypeMetadata2 + 48)] = *(_DWORD *)(*(_QWORD *)(v22 + 56) + 4 * v21);
    v7 = v35;
    while (1)
    {
      while (1)
      {
LABEL_18:
        __swift_storeEnumTagSinglePayload((uint64_t)v10, v23, 1, TupleTypeMetadata2);
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v13, v10, v42);
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, TupleTypeMetadata2) == 1)
          return swift_release();
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
        if ((sub_22ABDF2C0() & 1) == 0)
        {
          v40 = 0;
          v41 = 0xE000000000000000;
          sub_22ABDF7A0();
          sub_22ABDEDC8();
          sub_22ABDFF2C();
          sub_22ABDEDC8();
          v27 = v40;
          v28 = v41;
          sub_22A9B7B50();
          v29 = OUTLINED_FUNCTION_53();
          *v30 = 0xD00000000000002CLL;
          v30[1] = 0x800000022ABE3C80;
          v30[2] = v27;
          v30[3] = v28;
          OUTLINED_FUNCTION_65_3(v29, (uint64_t)v30, 5);
          OUTLINED_FUNCTION_24_29();
          return swift_release();
        }
        result = OUTLINED_FUNCTION_24_29();
        if (v17)
          goto LABEL_4;
LABEL_6:
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v24 < v34)
          break;
LABEL_17:
        v17 = 0;
        v23 = 1;
      }
      v25 = *(_QWORD *)(v33 + 8 * v24);
      if (v25)
        goto LABEL_9;
      v19 += 2;
      if (v24 + 1 < v34)
        break;
      v17 = 0;
      v23 = 1;
      v19 = v24;
    }
    v25 = *(_QWORD *)(v33 + 8 * v19);
    if (v25)
    {
      ++v24;
LABEL_9:
      v17 = (v25 - 1) & v25;
      v21 = __clz(__rbit64(v25)) + (v24 << 6);
      v19 = v24;
      continue;
    }
    break;
  }
  v26 = v24 + 2;
  if (v24 + 2 >= v34)
    goto LABEL_17;
  v25 = *(_QWORD *)(v33 + 8 * v26);
  if (v25)
  {
    v24 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v24 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v24 >= v34)
    {
      v17 = 0;
      v23 = 1;
      v19 = v32;
      goto LABEL_18;
    }
    v25 = *(_QWORD *)(v33 + 8 * v24);
    ++v26;
    if (v25)
      goto LABEL_9;
  }
LABEL_30:
  __break(1u);
  return result;
}

void MultiLabelClassificationMetrics.ThresholdSelectionStrategy.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_22AA6FB10()
{
  sub_22ABE0250();
  sub_22ABE0268();
  return sub_22ABE0268();
}

void static MultiLabelClassificationMetrics.ThresholdSelectionStrategy.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_22AA6FBE4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;

  if (v3)
  {
    sub_22AA71F80(v0, v3);
    sub_22AA71F94(v1, v2);
    sub_22AA71F94(v0, v3);
  }
  else
  {
    sub_22AA71F94(v1, 0);
    sub_22AA71F94(v0, 0);
    if (*(float *)&v1 == *(float *)&v0)
      return *((float *)&v1 + 1) == *((float *)&v0 + 1);
  }
  return 0;
}

uint64_t sub_22AA6FD38(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v8;

  if (a1 == 0xD00000000000001ALL && a2 == 0x800000022ABE3C60 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6F69736963657270 && a2 == 0xE90000000000006ELL;
    if (v5 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6C6C61636572 && a2 == 0xE600000000000000;
      if (v6 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6465786966 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_22AA6FEDC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22AA6FF14 + 4 * byte_22ABF2A5C[a1]))(0xD00000000000001ALL, 0x800000022ABE3C60);
}

uint64_t sub_22AA6FF14()
{
  return 0x6F69736963657270;
}

uint64_t sub_22AA6FF30()
{
  return 0x6C6C61636572;
}

uint64_t sub_22AA6FF44()
{
  return 0x6465786966;
}

uint64_t sub_22AA6FF58(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22AA6FFC4()
{
  return 12383;
}

uint64_t sub_22AA6FFD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x526D756D696E696DLL && a2 == 0xED00006C6C616365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA700C8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x526D756D696E696DLL;
  else
    return 12383;
}

uint64_t sub_22AA70100(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000022ABE3C40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA701D4()
{
  OUTLINED_FUNCTION_27_26();
  sub_22ABE0250();
  return OUTLINED_FUNCTION_7_27();
}

uint64_t sub_22AA7020C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 12383;
}

uint64_t sub_22AA7023C()
{
  return sub_22A9D94EC();
}

uint64_t sub_22AA70248@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9D94C8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22AA70278(uint64_t a1, uint64_t a2)
{
  return sub_22AA704D0(a1, a2, (uint64_t (*)(_QWORD, _QWORD))j__OUTLINED_FUNCTION_19_1);
}

uint64_t sub_22AA70284(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2FF8, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA702B8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2FF8, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22AA702EC()
{
  return sub_22A9B1040();
}

uint64_t sub_22AA702F8()
{
  sub_22ABE0244();
  sub_22A9B0EB4();
  return sub_22ABE0280();
}

uint64_t sub_22AA7033C()
{
  unsigned __int8 *v0;

  return sub_22AA6FEDC(*v0);
}

uint64_t sub_22AA70348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA6FD38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA70374()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AA70394@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9BFA58();
  *a1 = result;
  return result;
}

uint64_t sub_22AA703C0(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2FA8, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA703F4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF2FA8, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22AA70428()
{
  return sub_22A9D94E4();
}

uint64_t sub_22AA70430()
{
  return sub_22A9EC09C();
}

uint64_t sub_22AA7043C()
{
  return sub_22A9D96F4();
}

uint64_t sub_22AA70448()
{
  sub_22ABE0244();
  sub_22A9D96F4();
  return sub_22ABE0280();
}

uint64_t sub_22AA70488()
{
  return sub_22AA6FFC4();
}

uint64_t sub_22AA70494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA6FF58(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22AA704C4(uint64_t a1, uint64_t a2)
{
  return sub_22AA704D0(a1, a2, (uint64_t (*)(_QWORD, _QWORD))OUTLINED_FUNCTION_19_1);
}

uint64_t sub_22AA704D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  return a3(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_22AA704F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9D94E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22AA70520(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF30E8, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA70554(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF30E8, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22AA70588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA70670(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))j___s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0);
}

uint64_t sub_22AA70594()
{
  char *v0;

  return sub_22AA700C8(*v0);
}

uint64_t sub_22AA705A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA6FFD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA705D0(uint64_t a1, uint64_t a2)
{
  return sub_22AA706F8(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))j__OUTLINED_FUNCTION_19_1);
}

uint64_t sub_22AA705DC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF3048, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA70610(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF3048, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22AA70644()
{
  return sub_22AA701D4();
}

uint64_t sub_22AA70664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA70670(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))_s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0);
}

uint64_t sub_22AA70670(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_22ABE0244();
  a4(v8, *v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return OUTLINED_FUNCTION_7_27();
}

uint64_t sub_22AA706BC()
{
  char *v0;

  return sub_22AA7020C(*v0);
}

uint64_t sub_22AA706CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA70100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA706F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_22AA70720(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF3098, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA70754(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF3098, a1);
  return sub_22ABE02F8();
}

uint64_t MultiLabelClassificationMetrics.ThresholdSelectionStrategy.hashValue.getter()
{
  OUTLINED_FUNCTION_27_26();
  MultiLabelClassificationMetrics.ThresholdSelectionStrategy.hash(into:)();
  return OUTLINED_FUNCTION_7_27();
}

uint64_t sub_22AA707DC()
{
  sub_22ABE0244();
  MultiLabelClassificationMetrics.ThresholdSelectionStrategy.hash(into:)();
  return sub_22ABE0280();
}

void sub_22AA7081C(uint64_t a1)
{
  static MultiLabelClassificationMetrics.ThresholdSelectionStrategy.== infix(_:_:)(a1);
}

uint64_t sub_22AA70828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a2;
  v30 = a3;
  v31 = a4;
  v32 = a5;
  v33 = a6;
  v34 = a7;
  v35 = a9;
  v36 = a1;
  v20 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA724AC, (uint64_t)v29, a4, MEMORY[0x24BEE14E8], MEMORY[0x24BEE4078], a7, MEMORY[0x24BEE40A8], a7);
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  v27 = a9;
  v28 = a1;
  v17 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA72528, (uint64_t)v21, a5, MEMORY[0x24BEE1328], MEMORY[0x24BEE4078], a9, MEMORY[0x24BEE40A8], v16);
  v18 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a8, a1, a3);
  result = sub_22AA6E4D4(v20, v17);
  *(_QWORD *)(a8 + v18) = result;
  return result;
}

void sub_22AA7096C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = type metadata accessor for ClassificationDistribution(0, a3, a6, a4);
  ClassificationDistribution.subscript.getter(a2, v7, v8, v9);
}

uint64_t sub_22AA709B4(uint64_t result)
{
  _DWORD *v1;

  if ((result & 0x100000000) != 0)
    __break(1u);
  else
    *v1 = result;
  return result;
}

void MultiLabelClassificationMetrics.ThresholdSelectionStrategy<>.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s26ThresholdSelectionStrategyO15FixedCodingKeysOMa(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA70A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_39();
  *(_QWORD *)(v1 - 200) = v2;
  *(_QWORD *)(v1 - 192) = v0;
  v3 = sub_22ABDFD58();
  *(_QWORD *)(v1 - 152) = v3;
  *(_QWORD *)(v1 - 168) = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_9_33();
  *(_QWORD *)(v1 - 176) = v5;
  v6 = OUTLINED_FUNCTION_6_57();
  _s26ThresholdSelectionStrategyO16RecallCodingKeysOMa(v6, v7, v8, v9);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA70A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_39();
  *(_QWORD *)(v1 - 240) = v2;
  *(_QWORD *)(v1 - 232) = v0;
  v3 = sub_22ABDFD58();
  *(_QWORD *)(v1 - 184) = v3;
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_9_33();
  *(_QWORD *)(v1 - 216) = v5;
  v6 = OUTLINED_FUNCTION_6_57();
  _s26ThresholdSelectionStrategyO19PrecisionCodingKeysOMa(v6, v7, v8, v9);
  OUTLINED_FUNCTION_37_0();
}

#error "22AA70B5C: call analysis failed (funcsize=81)"

uint64_t sub_22AA70C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v0 - 96) = 1;
  v1 = *(_QWORD *)(v0 - 256);
  v3 = *(_QWORD *)(v0 - 144);
  v2 = *(_QWORD *)(v0 - 136);
  sub_22ABDFCC8();
  *(_BYTE *)(v0 - 96) = 0;
  v4 = *(_QWORD *)(v0 - 224);
  v5 = *(_QWORD *)(v0 - 128);
  sub_22ABDFD28();
  if (!v5)
  {
    *(_BYTE *)(v0 - 96) = 1;
    sub_22ABDFD28();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 248) + 8))(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 120) + 8))(v3, v2);
}

void sub_22AA70EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MultiLabelClassificationMetrics.ThresholdSelectionStrategy<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), a4);
}

void MultiLabelClassificationMetrics.ThresholdSelectionStrategy<>.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s26ThresholdSelectionStrategyO15FixedCodingKeysOMa(255, a2, a4, a4);
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA715E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MultiLabelClassificationMetrics.ThresholdSelectionStrategy<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), *(_QWORD *)(a2 + 24));
}

void sub_22AA71608(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB884A8();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_22AA71670(v5);
  *a1 = v2;
}

void sub_22AA71670(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  float v12;
  uint64_t v13;
  float v14;
  float *v15;
  float v16;
  float v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;

  v3 = a1[1];
  v4 = sub_22ABDFD70();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_22AA71C80(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_22AA03608(v3 / 2);
  v90 = a1;
  v91 = v6;
  v95 = v7;
  v93 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v32 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_90:
    if (v32 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v93 >= -1)
      {
        *(_QWORD *)(v91 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v82 = *v90;
    while (1)
    {
      v83 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v82)
        goto LABEL_133;
      v84 = *(_QWORD *)&v10[16 * v83 + 32];
      v85 = *(_QWORD *)&v10[16 * v32 + 24];
      sub_22AA71CF4((char *)(v82 + 16 * v84), (char *)(v82 + 16 * *(_QWORD *)&v10[16 * v32 + 16]), v82 + 16 * v85, v95);
      if (v1)
        goto LABEL_86;
      if (v85 < v84)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_22AA71F6C((uint64_t)v10);
      if (v83 >= *((_QWORD *)v10 + 2))
        goto LABEL_120;
      v86 = &v10[16 * v83 + 32];
      *(_QWORD *)v86 = v84;
      *((_QWORD *)v86 + 1) = v85;
      v87 = *((_QWORD *)v10 + 2);
      if (v32 > v87)
        goto LABEL_121;
      memmove(&v10[16 * v32 + 16], &v10[16 * v32 + 32], 16 * (v87 - v32));
      *((_QWORD *)v10 + 2) = v87 - 1;
      v32 = v87 - 1;
      if (v87 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v88 = *a1 - 16;
  v89 = *a1 + 32;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v92 = v5;
  v94 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(float *)(v9 + 16 * v8);
      v13 = 16 * v11;
      v14 = *(float *)(v9 + 16 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v15 = (float *)(v89 + 16 * v11);
        v16 = v12;
        while (1)
        {
          v17 = v16;
          v16 = *v15;
          if (v14 < v12 == v17 >= *v15)
            break;
          ++v8;
          v15 += 4;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v14 < v12)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v18 = 16 * v8;
          v19 = v8;
          v20 = v11;
          do
          {
            if (v20 != --v19)
            {
              if (!v9)
                goto LABEL_132;
              v21 = v9 + v18;
              v22 = *(_DWORD *)(v9 + v13);
              v23 = *(_QWORD *)(v9 + v13 + 8);
              *(_OWORD *)(v9 + v13) = *(_OWORD *)(v9 + v18 - 16);
              *(_DWORD *)(v21 - 16) = v22;
              *(_QWORD *)(v21 - 8) = v23;
            }
            ++v20;
            v18 -= 16;
            v13 += 16;
          }
          while (v20 < v19);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v24 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_128;
        if (v8 != v24)
        {
          v25 = v88 + 16 * v8;
          do
          {
            v26 = *(float *)(v9 + 16 * v8);
            v27 = v11;
            v28 = v25;
            do
            {
              if (*(float *)v28 >= v26)
                break;
              if (!v9)
                goto LABEL_130;
              v29 = *(_QWORD *)(v28 + 24);
              *(_OWORD *)(v28 + 16) = *(_OWORD *)v28;
              *(float *)v28 = v26;
              *(_QWORD *)(v28 + 8) = v29;
              v28 -= 16;
              ++v27;
            }
            while (v8 != v27);
            ++v8;
            v25 += 16;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_22AA71E78(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v31 = *((_QWORD *)v10 + 2);
    v30 = *((_QWORD *)v10 + 3);
    v32 = v31 + 1;
    v9 = v94;
    if (v31 >= v30 >> 1)
    {
      v81 = sub_22AA71E78((char *)(v30 > 1), v31 + 1, 1, v10);
      v9 = v94;
      v10 = v81;
    }
    *((_QWORD *)v10 + 2) = v32;
    v33 = v10 + 32;
    v34 = &v10[16 * v31 + 32];
    *(_QWORD *)v34 = v11;
    *((_QWORD *)v34 + 1) = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_81:
    v5 = v92;
    v3 = v93;
    if (v8 >= v93)
      goto LABEL_90;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = &v33[16 * v32];
      v41 = *((_QWORD *)v40 - 8);
      v42 = *((_QWORD *)v40 - 7);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_107;
      v45 = *((_QWORD *)v40 - 6);
      v44 = *((_QWORD *)v40 - 5);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_108;
      v47 = v32 - 2;
      v48 = &v33[16 * v32 - 32];
      v50 = *(_QWORD *)v48;
      v49 = *((_QWORD *)v48 + 1);
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_109;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_111;
      if (v52 >= v43)
      {
        v70 = &v33[16 * v35];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_117;
        v63 = v38 < v73;
        goto LABEL_70;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *((_QWORD *)v10 + 4);
        v65 = *((_QWORD *)v10 + 5);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_64;
      }
      v37 = *((_QWORD *)v10 + 4);
      v36 = *((_QWORD *)v10 + 5);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_110;
    v47 = v32 - 2;
    v53 = &v33[16 * v32 - 32];
    v55 = *(_QWORD *)v53;
    v54 = *((_QWORD *)v53 + 1);
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_112;
    v59 = &v33[16 * v35];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_114;
    if (__OFADD__(v57, v62))
      goto LABEL_116;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_70:
      if (v63)
        v35 = v47;
      goto LABEL_72;
    }
LABEL_64:
    if ((v58 & 1) != 0)
      goto LABEL_113;
    v66 = &v33[16 * v35];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_115;
    if (v69 < v57)
      goto LABEL_81;
LABEL_72:
    v74 = v10;
    v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v76 = &v33[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v33[16 * v35];
    v79 = *((_QWORD *)v78 + 1);
    sub_22AA71CF4((char *)(v9 + 16 * *(_QWORD *)v76), (char *)(v9 + 16 * *(_QWORD *)v78), v9 + 16 * v79, v95);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_104;
    if (v35 > *((_QWORD *)v74 + 2))
      goto LABEL_105;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v33[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v74 + 2);
    if (v35 >= v80)
      goto LABEL_106;
    v10 = v74;
    v32 = v80 - 1;
    memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
    *((_QWORD *)v74 + 2) = v80 - 1;
    v9 = v94;
    if (v80 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v93 < -1)
    goto LABEL_125;
  *(_QWORD *)(v91 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_22AA71C80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 16 * a3 - 16;
    while (2)
    {
      v6 = *(float *)(v4 + 16 * a3);
      v7 = result;
      v8 = v5;
      do
      {
        if (*(float *)v8 >= v6)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *(_QWORD *)(v8 + 24);
        *(_OWORD *)(v8 + 16) = *(_OWORD *)v8;
        *(float *)v8 = v6;
        *(_QWORD *)(v8 + 8) = v9;
        v8 -= 16;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_22AA71CF4(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v14;
  BOOL v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_22AA37B38(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_39;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = v6 - 16;
      if (*((float *)v6 - 4) >= *((float *)v12 - 4))
      {
        v22 = v19 != v12 || v18 >= v12;
        v20 = v12 - 16;
        v12 -= 16;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= v6;
        v6 -= 16;
        if (!v21)
          goto LABEL_35;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_35:
      v18 -= 16;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_22AA37B38(a1, (a2 - a1) / 16, a4);
  v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (*(float *)v4 >= *(float *)v6)
    {
      v14 = v4;
      v15 = v7 == v4;
      v4 += 16;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v14 = v6;
    v15 = v7 == v6;
    v6 += 16;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *(_OWORD *)v7 = *(_OWORD *)v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_22AA37B38(v4, (v12 - v4) / 16, v6);
  return 1;
}

char *sub_22AA71E78(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255B142B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22AA71F6C(uint64_t a1)
{
  return sub_22AA71E78(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22AA71F80(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 2)
    return sub_22ABDEAEC();
  return result;
}

uint64_t sub_22AA71F94(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s26ThresholdSelectionStrategyO15FixedCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s26ThresholdSelectionStrategyO15FixedCodingKeysOMn);
}

uint64_t _s26ThresholdSelectionStrategyO16RecallCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s26ThresholdSelectionStrategyO16RecallCodingKeysOMn);
}

uint64_t _s26ThresholdSelectionStrategyO19PrecisionCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s26ThresholdSelectionStrategyO19PrecisionCodingKeysOMn);
}

uint64_t _s26ThresholdSelectionStrategyO36BalancedPrecisionAndRecallCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s26ThresholdSelectionStrategyO36BalancedPrecisionAndRecallCodingKeysOMn);
}

uint64_t _s26ThresholdSelectionStrategyO10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s26ThresholdSelectionStrategyO10CodingKeysOMn);
}

uint64_t type metadata accessor for MultiLabelClassificationMetrics.ThresholdSelectionStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MultiLabelClassificationMetrics.ThresholdSelectionStrategy);
}

void sub_22AA71FF0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA72000(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22AA71F80(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_22AA72044(uint64_t a1)
{
  return sub_22AA71F94(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_22AA72054(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22AA71F80(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_22AA71F94(v5, v6);
  return a1;
}

uint64_t sub_22AA720A4(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_22AA71F94(v4, v5);
  return a1;
}

uint64_t sub_22AA720E0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA72120(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_22AA72164(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_22AA7217C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

uint64_t sub_22AA72194(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22AA721E0 + 4 * byte_22ABF2A6D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22AA72214 + 4 * byte_22ABF2A68[v4]))();
}

uint64_t sub_22AA72214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA7221C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA72224);
  return result;
}

uint64_t sub_22AA72230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA72238);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22AA7223C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA72244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA72254(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA722A0 + 4 * byte_22ABF2A77[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA722D4 + 4 * byte_22ABF2A72[v4]))();
}

uint64_t sub_22AA722D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA722DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA722E4);
  return result;
}

uint64_t sub_22AA722F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA722F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA722FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA72304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA72310(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22AA72350 + 4 * byte_22ABF2A7C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22AA72370 + 4 * byte_22ABF2A81[v4]))();
}

_BYTE *sub_22AA72350(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22AA72370(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA72378(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA72380(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA72388(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA72390(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_22AA7239C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA723AC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA723BC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA723CC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA723DC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA723EC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA723FC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA7240C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA7241C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA7242C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA7243C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA7244C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA7245C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA7246C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA7247C(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  sub_22AA6F5D8(a1, a2, *(float *)(v2 + 16), *(float *)(v2 + 20));
}

void sub_22AA72494(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  sub_22AA6F490(a1, a2, *(float *)(v2 + 16), *(float *)(v2 + 20));
}

void sub_22AA724AC(uint64_t a1)
{
  sub_22AA724F4(a1);
}

uint64_t sub_22AA724C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_22AA70828(a1, v2[9], v2[2], v2[3], v2[4], v2[5], v2[6], a2, v2[7]);
}

void sub_22AA724F4(uint64_t a1)
{
  uint64_t *v1;

  sub_22AA7096C(a1, v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_22AA72528@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22ABDF2C0();
  *a1 = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_51()
{
  return sub_22ABDFC68();
}

uint64_t OUTLINED_FUNCTION_3_55@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 255;
}

uint64_t OUTLINED_FUNCTION_4_43@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_5_43@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_6_57()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_7_53()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_8_39()
{
  sub_22AB4CE30();
}

void OUTLINED_FUNCTION_9_41()
{
  sub_22AB4CE30();
}

uint64_t OUTLINED_FUNCTION_13_46@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 312) = (char *)&a2 - a1;
  return 255;
}

uint64_t OUTLINED_FUNCTION_15_39()
{
  return 0;
}

void OUTLINED_FUNCTION_16_33()
{
  sub_22AB4CE30();
}

uint64_t OUTLINED_FUNCTION_20_34()
{
  return sub_22ABDFBFC();
}

uint64_t OUTLINED_FUNCTION_24_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_26()
{
  return sub_22ABE0244();
}

void OUTLINED_FUNCTION_30_22()
{
  sub_22AA35C20();
}

uint64_t sub_22AA726CC(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(char *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[40];
  uint64_t v50;

  v37 = a5;
  v38 = a8;
  v44 = a1;
  v45 = a2;
  v36 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v46 = v10;
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_6();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v41 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  v40 = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v35 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v32 - v19;
  v42 = v8;
  v21 = a6;
  v22 = sub_22ABDF35C();
  if (!v22)
    return sub_22ABDF068();
  v23 = v22;
  v33 = AssociatedTypeWitness;
  v50 = sub_22ABDE9F0();
  v43 = sub_22ABDF974();
  sub_22ABDF8CC();
  v34 = v20;
  result = sub_22ABDF350();
  if (v23 < 0)
  {
    __break(1u);
  }
  else
  {
    v47 = v21;
    v25 = v41;
    v26 = v34;
    while (1)
    {
      v27 = (void (*)(char *, _QWORD))sub_22ABDF464();
      (*(void (**)(char *))(v11 + 16))(v25);
      v27(v49, 0);
      v28 = v48;
      v44(v25, v46);
      if (v28)
        break;
      v48 = 0;
      OUTLINED_FUNCTION_10_34();
      sub_22ABDF92C();
      sub_22ABDF398();
      if (!--v23)
      {
        v29 = v39;
        v30 = v35;
        v31 = v33;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v26, v33);
        sub_22ABDF74C();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
        return v50;
      }
    }
    OUTLINED_FUNCTION_10_34();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v33);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v38, v46, v37);
  }
  return result;
}

uint64_t ClassificationDistribution.init<A>(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t);
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v24 = a6;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *))(v11 + 16))(v13, a1);
  v29 = a2;
  v30 = a3;
  v31 = a4;
  v32 = a5;
  KeyPath = swift_getKeyPath();
  v26 = a3;
  v27 = a5;
  v28 = KeyPath;
  v16 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA72FD8, (uint64_t)v25, a3, a2, MEMORY[0x24BEE4078], a5, MEMORY[0x24BEE40A8], v15);
  swift_release();
  v33 = v16;
  v17 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v17);
  sub_22ABDF2E4();
  v18 = sub_22ABDF278();
  swift_bridgeObjectRelease();
  v19 = sub_22ABDF35C();
  v20 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  result = v20(v13, a3);
  if (v18 == v19)
  {
    MEMORY[0x24BDAC7A8](result);
    *(&v23 - 4) = a2;
    *(&v23 - 3) = a3;
    *(&v23 - 2) = a4;
    *(&v23 - 1) = a5;
    v22 = sub_22ABDEF24();
    result = v20(a1, a3);
    *v24 = v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void ClassificationDistribution.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for Classification(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_13_47();
  OUTLINED_FUNCTION_8_27();
  OUTLINED_FUNCTION_3_56();
  OUTLINED_FUNCTION_86_4();
}

unint64_t sub_22AA72C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumTagSinglePayload;
  uint64_t v5;

  sub_22ABDEF00();
  swift_bridgeObjectRelease();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v0);
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_19_30(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v5 = 0;
  }
  else
  {
    v5 = *(unsigned int *)(v1 + *(int *)(v0 + 36));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
  }
  *(_BYTE *)(v3 - 72) = EnumTagSinglePayload == 1;
  return v5 | ((unint64_t)(EnumTagSinglePayload == 1) << 32);
}

void sub_22AA72CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_16_34();
  OUTLINED_FUNCTION_7_54(v0, v1, v2, v3);
  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_3_56();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA72D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_12_39((void (*)(char *, uint64_t))sub_22AA731C8, v8, a3, a4, MEMORY[0x24BEE4078], a1, MEMORY[0x24BEE40A8], a8);
  swift_release();
  swift_bridgeObjectRelease();
  v9 = OUTLINED_FUNCTION_8_27();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v9);
  sub_22ABDF2E4();
  OUTLINED_FUNCTION_32_4();
}

uint64_t ClassificationDistribution.mostLikelyLabel.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = type metadata accessor for Classification(255, v5, *(_QWORD *)(a1 + 24), a2);
  v7 = sub_22ABDF5D8();
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_13_47();
  v10 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v10);
  sub_22ABDF404();
  if (__swift_getEnumTagSinglePayload(v3, 1, v6) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v7);
    v11 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v3, v5);
    OUTLINED_FUNCTION_19_30(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8));
    v11 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a3, v11, 1, v5);
}

void ClassificationDistribution.labelsSortedByProbability.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  v1 = *(_QWORD *)(a1 + 24);
  v3 = OUTLINED_FUNCTION_16_34();
  type metadata accessor for Classification(255, v2, v1, v4);
  v5 = OUTLINED_FUNCTION_33_4();
  sub_22ABDEAEC();
  v6 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v5);
  sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA731C8, v3, v5, v2, MEMORY[0x24BEE4078], v6, MEMORY[0x24BEE40A8], v7);
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_4();
}

uint64_t ClassificationDistribution.startIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA72F98(a1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1118], a3, a4);
}

uint64_t ClassificationDistribution.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA72F98(a1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1220], a3, a4);
}

uint64_t sub_22AA72F98(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *v4;
  v6 = type metadata accessor for Classification(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  return a2(v5, v6);
}

void sub_22AA72FD8()
{
  swift_getAtKeyPath();
  OUTLINED_FUNCTION_8_40();
}

BOOL sub_22AA72FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v7 = type metadata accessor for Classification(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 32), a4);
  return *(float *)(a2 + *(int *)(v7 + 36)) < *(float *)(a1 + *(int *)(v7 + 36));
}

void ClassificationDistribution.topLabels(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  OUTLINED_FUNCTION_7_54(a1, a2, a3, a4);
  v4 = sub_22ABDF0F8();
  sub_22ABDEAEC();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v4);
  sub_22ABDF428();
  OUTLINED_FUNCTION_16_34();
  sub_22ABDF6E0();
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA730F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  v9 = OUTLINED_FUNCTION_12_39((void (*)(char *, uint64_t))sub_22AA731C8, v8, a3, a4, MEMORY[0x24BEE4078], a1, MEMORY[0x24BEE40A8], a8);
  swift_release();
  swift_unknownObjectRelease();
  return v9;
}

uint64_t ClassificationDistribution.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0_47(a1, a2, a3, a4);
  return sub_22ABDF140();
}

uint64_t sub_22AA73190()
{
  return sub_22ABDECFC() & 1;
}

void sub_22AA731C8()
{
  OUTLINED_FUNCTION_4_44();
  OUTLINED_FUNCTION_8_40();
}

uint64_t ClassificationDistribution.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22ABDEAEC();
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ClassificationDistribution<A>, a3);
  return sub_22ABE01F0();
}

Swift::Int __swiftcall ClassificationDistribution.index(after:)(Swift::Int after)
{
  uint64_t v1;
  uint64_t v2;

  return sub_22AA73268(after, v1, MEMORY[0x24BEE11D0], v2);
}

Swift::Int __swiftcall ClassificationDistribution.index(before:)(Swift::Int before)
{
  uint64_t v1;
  uint64_t v2;

  return sub_22AA73268(before, v1, MEMORY[0x24BEE11D8], v2);
}

uint64_t sub_22AA73268(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_0_47(a1, a2, (uint64_t)a3, a4);
  return a3(a1, v4, v6);
}

uint64_t ClassificationDistribution.map<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[8];
  uint64_t v23;
  uint64_t v24;

  v24 = *v6;
  v12 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(a3 + 24);
  v22[2] = v12;
  v22[3] = a4;
  v22[4] = v11;
  v22[5] = a5;
  v22[6] = a1;
  v22[7] = a2;
  type metadata accessor for Classification(255, v12, v11, a4);
  v13 = sub_22ABDF0F8();
  v15 = type metadata accessor for Classification(0, a4, a5, v14);
  sub_22ABDEAEC();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  v17 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v13);
  v18 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA734BC, (uint64_t)v22, v13, v15, v16, v17, MEMORY[0x24BEE3F20], (uint64_t)&v23);
  result = swift_bridgeObjectRelease();
  if (!v7)
  {
    v24 = v18;
    v20 = sub_22ABDF0F8();
    v21 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v20);
    return ClassificationDistribution.init<A>(_:)((char *)&v24, a4, v20, a5, v21, a6);
  }
  return result;
}

uint64_t sub_22AA733F0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6966697373616C63 && a2 == 0xEF736E6F69746163)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22AA73498()
{
  return 0x6966697373616C63;
}

uint64_t sub_22AA734BC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v2 + 48))();
  if (v3)
    *a2 = v3;
  return result;
}

uint64_t sub_22AA734EC()
{
  return sub_22AA73498();
}

uint64_t sub_22AA734F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA733F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22AA73528()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AA73548(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF34E0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA7357C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF34E0, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22AA735B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = ClassificationDistribution.startIndex.getter(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_22AA735D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = ClassificationDistribution.endIndex.getter(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

void (*sub_22AA735F8(uint64_t **a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_22AA73654(v6, *a2, a3, v7);
  return sub_22A9B858C;
}

void (*sub_22AA73654(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *a1)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = type metadata accessor for Classification(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  *a1 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  a1[1] = v8;
  a1[2] = (uint64_t)malloc(*(_QWORD *)(v8 + 64));
  ClassificationDistribution.subscript.getter(a2, a3, v9, v10);
  return sub_22A9B8614;
}

uint64_t sub_22AA736CC(uint64_t *a1, uint64_t a2)
{
  return ClassificationDistribution.subscript.getter(*a1, a1[1], a2);
}

Swift::Int sub_22AA73700@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = ClassificationDistribution.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_22AA73728(Swift::Int *a1)
{
  Swift::Int result;

  result = ClassificationDistribution.index(after:)(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_22AA73750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t result;

  v7 = *v5;
  result = ClassificationDistribution.startIndex.getter(a1, a2, a3, a4);
  *a5 = v7;
  a5[1] = result;
  return result;
}

uint64_t sub_22AA73780(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ClassificationDistribution<A>, a1);
  return sub_22ABDF3BC();
}

uint64_t sub_22AA737B4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ClassificationDistribution<A>, a1);
  return sub_22ABDF3EC();
}

void static ClassificationDistribution.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Classification(0, a3, a4, a4);
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA73820()
{
  OUTLINED_FUNCTION_17_31();
  return sub_22ABDF110();
}

void sub_22AA73834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static ClassificationDistribution.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void ClassificationDistribution.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0_47(a1, a2, a3, a4);
  OUTLINED_FUNCTION_3_56();
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA73868()
{
  OUTLINED_FUNCTION_17_31();
  sub_22ABDF104();
  return swift_bridgeObjectRelease();
}

void ClassificationDistribution.hashValue.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[10];

  v5[9] = *v1;
  sub_22ABE0244();
  ClassificationDistribution.hash(into:)((uint64_t)v5, a1, v3, v4);
}

uint64_t sub_22AA738BC()
{
  return sub_22ABE0280();
}

void sub_22AA738DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[72];

  sub_22ABE0244();
  ClassificationDistribution.hash(into:)((uint64_t)v5, a2, v3, v4);
}

uint64_t sub_22AA73904()
{
  return sub_22ABE0280();
}

void ClassificationDistribution<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[4];

  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for ClassificationDistribution.CodingKeys(255, v12, v11, a4);
  MEMORY[0x22E2E4D80](&unk_22ABF34E0, v6);
  sub_22ABDFD58();
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_13_47();
  v8 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v15[3] = v8;
  v10 = type metadata accessor for Classification(255, v12, v11, v9);
  sub_22ABDF0F8();
  v15[0] = a3;
  v15[1] = a4;
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for <> Classification<A>, v10, v15);
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA73A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22ABDFD4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v0);
  OUTLINED_FUNCTION_16();
}

void ClassificationDistribution<>.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for ClassificationDistribution.CodingKeys(255, a2, a5, a4);
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA73AC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 - 112) = sub_22ABDFCB0();
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_22ABE0298();
  if (!v2)
  {
    type metadata accessor for Classification(255, v1, *(_QWORD *)(v3 - 136), v5);
    sub_22ABDF0F8();
    v6 = *(_QWORD *)(v3 - 120);
    *(_QWORD *)(v3 - 96) = *(_QWORD *)(v3 - 128);
    *(_QWORD *)(v3 - 88) = v6;
    OUTLINED_FUNCTION_52_3();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  OUTLINED_FUNCTION_16();
}

void sub_22AA73BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ClassificationDistribution<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16), *(_QWORD *)(a2 + 24));
}

void sub_22AA73C18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  ClassificationDistribution<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16));
}

uint64_t type metadata accessor for ClassificationDistribution.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClassificationDistribution.CodingKeys);
}

void sub_22AA73C40()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA73C50()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA73C60()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for ClassificationDistribution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClassificationDistribution);
}

uint64_t sub_22AA73C7C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22AA73CBC + 4 * byte_22ABF3140[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22AA73CDC + 4 * byte_22ABF3145[v4]))();
}

_BYTE *sub_22AA73CBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22AA73CDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA73CE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA73CEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA73CF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA73CFC(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_22AA73D08()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA73D18()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA73D28()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_47(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for Classification(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t OUTLINED_FUNCTION_3_56()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_4_44()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_7_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for Classification(255, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_9_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_12_39(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  return sub_22AA726CC(a1, a2, v9, v8, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_16_34()
{
  return swift_getKeyPath();
}

uint64_t OUTLINED_FUNCTION_17_31()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_30@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

double ImageScaler.targetSize.getter()
{
  _BYTE *v0;

  if (!v0[16])
    return *(double *)v0;
  if (v0[16] == 1)
    return 0.0;
  return *(double *)v0;
}

void sub_22AA73E1C(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = ImageScaler.targetSize.getter();
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_22AA73E5C(double *a1)
{
  ImageScaler.targetSize.setter(*a1, a1[1]);
}

void ImageScaler.targetSize.setter(double a1, double a2)
{
  uint64_t v2;
  char v3;

  if (a2 == 0.0)
  {
    *(double *)v2 = a1;
    *(_QWORD *)(v2 + 8) = 0;
    *(_BYTE *)(v2 + 16) = 0;
  }
  else
  {
    if (a1 == 0.0)
    {
      *(double *)v2 = a2;
      *(_QWORD *)(v2 + 8) = 0;
      v3 = 1;
    }
    else
    {
      *(double *)v2 = a1;
      *(double *)(v2 + 8) = a2;
      v3 = 2;
    }
    *(_BYTE *)(v2 + 16) = v3;
  }
}

void (*ImageScaler.targetSize.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  a1[2] = v1;
  if (*((_BYTE *)v1 + 16))
  {
    if (*((_BYTE *)v1 + 16) == 1)
    {
      v2 = *v1;
      v3 = 0;
    }
    else
    {
      v2 = v1[1];
      v3 = *v1;
    }
  }
  else
  {
    v3 = *v1;
    v2 = 0;
  }
  *a1 = v3;
  a1[1] = v2;
  return sub_22AA73F0C;
}

void sub_22AA73F0C(uint64_t a1, char a2)
{
  double v2;
  double v3;
  char v4;
  uint64_t v5;

  v2 = *(double *)a1;
  v3 = *(double *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    ImageScaler.targetSize.setter(v2, v3);
  }
  else
  {
    if (v3 == 0.0)
    {
      v4 = 0;
      v5 = *(_QWORD *)(a1 + 16);
      *(double *)v5 = v2;
      *(_QWORD *)(v5 + 8) = 0;
    }
    else
    {
      v5 = *(_QWORD *)(a1 + 16);
      if (v2 == 0.0)
      {
        *(double *)v5 = v3;
        *(_QWORD *)(v5 + 8) = 0;
        v4 = 1;
      }
      else
      {
        *(double *)v5 = v2;
        *(double *)(v5 + 8) = v3;
        v4 = 2;
      }
    }
    *(_BYTE *)(v5 + 16) = v4;
  }
}

uint64_t sub_22AA73F7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746867696568 && a2 == 0xE600000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1702521203 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22AA740A8(char a1)
{
  if (!a1)
    return 0x6874646977;
  if (a1 == 1)
    return 0x746867696568;
  return 1702521203;
}

uint64_t sub_22AA740F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA741CC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746867696568;
  else
    return 0x6874646977;
}

uint64_t sub_22AA741FC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22AA74278()
{
  return 0x65756C6176;
}

uint64_t sub_22AA7428C()
{
  char *v0;

  return sub_22AA740A8(*v0);
}

uint64_t sub_22AA74294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA73F7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA742B8()
{
  sub_22AA754F0();
  return sub_22ABE02EC();
}

uint64_t sub_22AA742E0()
{
  sub_22AA754F0();
  return sub_22ABE02F8();
}

uint64_t sub_22AA7430C()
{
  sub_22AA75568();
  return sub_22ABE02EC();
}

uint64_t sub_22AA74334()
{
  sub_22AA75568();
  return sub_22ABE02F8();
}

uint64_t sub_22AA7435C()
{
  char *v0;

  return sub_22AA741CC(*v0);
}

uint64_t sub_22AA74364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA740F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA74388()
{
  sub_22AA7552C();
  return sub_22ABE02EC();
}

uint64_t sub_22AA743B0()
{
  sub_22AA7552C();
  return sub_22ABE02F8();
}

uint64_t sub_22AA743D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA741FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22AA74400()
{
  sub_22AA755A4();
  return sub_22ABE02EC();
}

uint64_t sub_22AA74428()
{
  sub_22AA755A4();
  return sub_22ABE02F8();
}

uint64_t ImageScaler.init(targetSize:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t result;

  if (a2 <= 0.0 || a3 <= 0.0)
  {
    result = sub_22ABDFADC();
    __break(1u);
  }
  else
  {
    *(double *)a1 = a2;
    *(double *)(a1 + 8) = a3;
    *(_BYTE *)(a1 + 16) = 2;
  }
  return result;
}

void ImageScaler.init(targetWidth:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

void ImageScaler.init(targetHeight:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

id ImageScaler.applied(to:eventHandler:)(void *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  int v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  CGFloat v12;
  SEL v13;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  SEL v18;
  id v19;
  CGAffineTransform v21;

  v3 = *(double *)v1;
  v4 = *(double *)(v1 + 8);
  v5 = *(unsigned __int8 *)(v1 + 16);
  objc_msgSend(a1, sel_extent);
  v8 = v3 / v7;
  v9 = v3 / v6;
  v10 = v4 / v7;
  if (v5 == 1)
    v9 = v8;
  else
    v8 = v10;
  v11 = v3 / v6;
  if (v5)
    v12 = v9;
  else
    v12 = v11;
  if (!v5)
    v8 = v11;
  CGAffineTransformMakeScale(&v21, v12, v8);
  OUTLINED_FUNCTION_16_35();
  v14 = objc_msgSend(a1, v13);
  objc_msgSend(v14, sel_extent);
  v16 = -v15;
  objc_msgSend(v14, sel_extent);
  CGAffineTransformMakeTranslation(&v21, v16, -v17);
  OUTLINED_FUNCTION_16_35();
  v19 = objc_msgSend(v14, v18);

  return v19;
}

uint64_t sub_22AA745F8(id *a1, void **a2)
{
  uint64_t v2;

  *a1 = ImageScaler.applied(to:eventHandler:)(*a2);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t ImageScaler.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  type metadata accessor for CGSize(0);
  sub_22ABDFA34();
  sub_22ABDEDC8();
  return 0;
}

uint64_t sub_22AA74718()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_22AA7476C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746567726174;
  else
    return 0x6953746567726174;
}

void sub_22AA747A8(char *a1, char *a2)
{
  sub_22AA17FD8(*a1, *a2);
}

void sub_22AA747B4()
{
  sub_22ABC4A74();
}

uint64_t sub_22AA747BC()
{
  return sub_22ABC506C();
}

void sub_22AA747C4()
{
  sub_22ABC5104();
}

uint64_t sub_22AA747CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA74718();
  *a1 = result;
  return result;
}

uint64_t sub_22AA747F8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22AA7476C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22AA74820()
{
  char *v0;

  return sub_22AA7476C(*v0);
}

uint64_t sub_22AA74828@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA74768();
  *a1 = result;
  return result;
}

void sub_22AA7484C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_22AA74858()
{
  sub_22AA74A18();
  return sub_22ABE02EC();
}

uint64_t sub_22AA74880()
{
  sub_22AA74A18();
  return sub_22ABE02F8();
}

void ImageScaler.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  __int128 v6;
  char v7;
  __int128 v8;
  char v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B143B8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_26();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA74A18();
  sub_22ABE0298();
  if (!v2)
  {
    LOBYTE(v8) = 1;
    if ((sub_22ABDFCA4() & 1) != 0)
    {
      sub_22AA74A94();
      OUTLINED_FUNCTION_17_32();
      OUTLINED_FUNCTION_2_52();
      v6 = v8;
      v7 = v9;
    }
    else
    {
      type metadata accessor for CGSize(0);
      sub_22AA74A54();
      OUTLINED_FUNCTION_17_32();
      OUTLINED_FUNCTION_2_52();
      v6 = v8;
      v7 = 2;
    }
    *(_OWORD *)a2 = v6;
    *(_BYTE *)(a2 + 16) = v7;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22AA74A18()
{
  unint64_t result;

  result = qword_255B143C0;
  if (!qword_255B143C0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3744, &unk_24F4C2BD0);
    atomic_store(result, (unint64_t *)&qword_255B143C0);
  }
  return result;
}

unint64_t sub_22AA74A54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B143C8;
  if (!qword_255B143C8)
  {
    type metadata accessor for CGSize(255);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BDBD860], v1);
    atomic_store(result, (unint64_t *)&qword_255B143C8);
  }
  return result;
}

unint64_t sub_22AA74A94()
{
  unint64_t result;

  result = qword_255B143D0;
  if (!qword_255B143D0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF371C, &unk_24F4C2B40);
    atomic_store(result, (unint64_t *)&qword_255B143D0);
  }
  return result;
}

void ImageScaler.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B143D8);
  v7 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v6 = v5 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA74A18();
  sub_22ABE02B0();
  sub_22AA74BCC();
  sub_22ABDFD4C();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v2);
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22AA74BCC()
{
  unint64_t result;

  result = qword_255B143E0;
  if (!qword_255B143E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF36F4, &unk_24F4C2B40);
    atomic_store(result, (unint64_t *)&qword_255B143E0);
  }
  return result;
}

uint64_t sub_22AA74C08(_QWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14468);
  v25 = *(_QWORD *)(v30 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_9_43(v8, v24);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14470);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v13 = v12 - v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14478);
  v26 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_6_26();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14480);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_33();
  v20 = v19 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA754F0();
  sub_22ABE02B0();
  if (a4)
  {
    if (a4 == 1)
    {
      sub_22AA75568();
      OUTLINED_FUNCTION_4_45();
      v21 = v28;
      OUTLINED_FUNCTION_3_57();
      v22 = v27;
    }
    else
    {
      sub_22AA7552C();
      v13 = v29;
      OUTLINED_FUNCTION_4_45();
      v21 = v30;
      OUTLINED_FUNCTION_3_57();
      if (!v4)
        OUTLINED_FUNCTION_3_57();
      v22 = v25;
    }
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v13, v21);
  }
  else
  {
    sub_22AA755A4();
    OUTLINED_FUNCTION_4_45();
    sub_22ABDFD1C();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v5, v14);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
}

_QWORD *sub_22AA74E80(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14428);
  v42 = *(_QWORD *)(v40 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_9_43(v4, v38[0]);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14430);
  v41 = *(_QWORD *)(v44 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14438);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14440);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_6_26();
  v14 = a1[3];
  v45 = a1;
  v15 = __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_22AA754F0();
  v16 = v46;
  sub_22ABE0298();
  if (v16)
    goto LABEL_10;
  v38[1] = v8;
  v38[2] = v11;
  v39 = v13;
  v46 = v1;
  v17 = sub_22ABDFC98();
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18
    || (v19 = *(unsigned __int8 *)(v17 + 32),
        sub_22A9DA86C(1, v18, v17, v17 + 32, 0, (2 * v18) | 1),
        v21 = v20,
        v23 = v22,
        swift_bridgeObjectRelease(),
        v21 != v23 >> 1))
  {
    v25 = sub_22ABDF830();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v27 = &unk_24F4C2B40;
    v15 = v46;
    sub_22ABDFC08();
    sub_22ABDF824();
    v28 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow(v28);
    OUTLINED_FUNCTION_1_41();
    (*(void (**)(_QWORD *, uint64_t))(v39 + 8))(v15, v12);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    return v15;
  }
  v24 = v12;
  if (v19)
  {
    if (v19 == 1)
    {
      v48 = 1;
      sub_22AA75568();
      OUTLINED_FUNCTION_6_58();
      OUTLINED_FUNCTION_5_44();
      v32 = v31;
      v33 = OUTLINED_FUNCTION_13_48();
      v34(v33);
      OUTLINED_FUNCTION_1_41();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v7, v12);
    }
    else
    {
      v51 = 2;
      sub_22AA7552C();
      OUTLINED_FUNCTION_6_58();
      v50 = 0;
      OUTLINED_FUNCTION_5_44();
      v32 = v36;
      v49 = 1;
      OUTLINED_FUNCTION_5_44();
      v37 = v39;
      OUTLINED_FUNCTION_12_40(v42);
      OUTLINED_FUNCTION_1_41();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v7, v12);
    }
  }
  else
  {
    v47 = 0;
    sub_22AA755A4();
    v29 = v46;
    sub_22ABDFBFC();
    OUTLINED_FUNCTION_5_44();
    v32 = v35;
    OUTLINED_FUNCTION_10_35();
    OUTLINED_FUNCTION_1_41();
    (*(void (**)(_QWORD *, uint64_t))(v39 + 8))(v29, v24);
  }
  v15 = v32;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return v15;
}

void sub_22AA752FC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ImageScaler.init(from:)(a1, a2);
}

void sub_22AA75310(_QWORD *a1)
{
  ImageScaler.encode(to:)(a1);
}

void type metadata accessor for ImageScaler()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t _s18CreateMLComponents11ImageScalerVwet_0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s18CreateMLComponents11ImageScalerVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22AA753C4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for ImageScaler.Target()
{
  OUTLINED_FUNCTION_24_2();
}

void type metadata accessor for ImageScaler.CodingKeys()
{
  OUTLINED_FUNCTION_24_2();
}

unint64_t sub_22AA753EC()
{
  unint64_t result;

  result = qword_255B14410;
  if (!qword_255B14410)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF36CC, &unk_24F4C2BD0);
    atomic_store(result, (unint64_t *)&qword_255B14410);
  }
  return result;
}

_QWORD *sub_22AA75428@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;

  result = sub_22AA74E80(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_22AA75454(_QWORD *a1)
{
  uint64_t v1;

  return sub_22AA74C08(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

unint64_t sub_22AA75474()
{
  unint64_t result;

  result = qword_255B14418;
  if (!qword_255B14418)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3604, &unk_24F4C2BD0);
    atomic_store(result, (unint64_t *)&qword_255B14418);
  }
  return result;
}

unint64_t sub_22AA754B4()
{
  unint64_t result;

  result = qword_255B14420;
  if (!qword_255B14420)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF362C, &unk_24F4C2BD0);
    atomic_store(result, (unint64_t *)&qword_255B14420);
  }
  return result;
}

unint64_t sub_22AA754F0()
{
  unint64_t result;

  result = qword_255B14448;
  if (!qword_255B14448)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3BA0, &type metadata for ImageScaler.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14448);
  }
  return result;
}

unint64_t sub_22AA7552C()
{
  unint64_t result;

  result = qword_255B14450;
  if (!qword_255B14450)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3B50, &type metadata for ImageScaler.Target.SizeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14450);
  }
  return result;
}

unint64_t sub_22AA75568()
{
  unint64_t result;

  result = qword_255B14458;
  if (!qword_255B14458)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3B00, &type metadata for ImageScaler.Target.HeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14458);
  }
  return result;
}

unint64_t sub_22AA755A4()
{
  unint64_t result;

  result = qword_255B14460;
  if (!qword_255B14460)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3AB0, &type metadata for ImageScaler.Target.WidthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14460);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ImageScaler.Target.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AA7562C + 4 * byte_22ABF3535[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22AA75660 + 4 * byte_22ABF3530[v4]))();
}

uint64_t sub_22AA75660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA75668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA75670);
  return result;
}

uint64_t sub_22AA7567C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA75684);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22AA75688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA75690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageScaler.Target.CodingKeys()
{
  return &type metadata for ImageScaler.Target.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageScaler.Target.WidthCodingKeys()
{
  return &type metadata for ImageScaler.Target.WidthCodingKeys;
}

uint64_t _s18CreateMLComponents11ImageScalerV6TargetO15WidthCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22AA75700 + 4 * byte_22ABF353A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22AA75720 + 4 * byte_22ABF353F[v4]))();
}

_BYTE *sub_22AA75700(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22AA75720(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA75728(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA75730(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA75738(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA75740(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ImageScaler.Target.HeightCodingKeys()
{
  return &type metadata for ImageScaler.Target.HeightCodingKeys;
}

uint64_t _s18CreateMLComponents11ImageScalerV6TargetO14SizeCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA757A8 + 4 * byte_22ABF3549[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA757DC + 4 * byte_22ABF3544[v4]))();
}

uint64_t sub_22AA757DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA757E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA757ECLL);
  return result;
}

uint64_t sub_22AA757F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA75800);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA75804(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA7580C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageScaler.Target.SizeCodingKeys()
{
  return &type metadata for ImageScaler.Target.SizeCodingKeys;
}

unint64_t sub_22AA7582C()
{
  unint64_t result;

  result = qword_255B14488;
  if (!qword_255B14488)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3860, &type metadata for ImageScaler.Target.SizeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14488);
  }
  return result;
}

unint64_t sub_22AA7586C()
{
  unint64_t result;

  result = qword_255B14490;
  if (!qword_255B14490)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3918, &type metadata for ImageScaler.Target.HeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14490);
  }
  return result;
}

unint64_t sub_22AA758AC()
{
  unint64_t result;

  result = qword_255B14498;
  if (!qword_255B14498)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF39D0, &type metadata for ImageScaler.Target.WidthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14498);
  }
  return result;
}

unint64_t sub_22AA758EC()
{
  unint64_t result;

  result = qword_255B144A0;
  if (!qword_255B144A0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3A88, &type metadata for ImageScaler.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144A0);
  }
  return result;
}

unint64_t sub_22AA7592C()
{
  unint64_t result;

  result = qword_255B144A8;
  if (!qword_255B144A8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3940, &type metadata for ImageScaler.Target.WidthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144A8);
  }
  return result;
}

unint64_t sub_22AA7596C()
{
  unint64_t result;

  result = qword_255B144B0;
  if (!qword_255B144B0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3968, &type metadata for ImageScaler.Target.WidthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144B0);
  }
  return result;
}

unint64_t sub_22AA759AC()
{
  unint64_t result;

  result = qword_255B144B8;
  if (!qword_255B144B8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3888, &type metadata for ImageScaler.Target.HeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144B8);
  }
  return result;
}

unint64_t sub_22AA759EC()
{
  unint64_t result;

  result = qword_255B144C0;
  if (!qword_255B144C0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF38B0, &type metadata for ImageScaler.Target.HeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144C0);
  }
  return result;
}

unint64_t sub_22AA75A2C()
{
  unint64_t result;

  result = qword_255B144C8;
  if (!qword_255B144C8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF37D0, &type metadata for ImageScaler.Target.SizeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144C8);
  }
  return result;
}

unint64_t sub_22AA75A6C()
{
  unint64_t result;

  result = qword_255B144D0;
  if (!qword_255B144D0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF37F8, &type metadata for ImageScaler.Target.SizeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144D0);
  }
  return result;
}

unint64_t sub_22AA75AAC()
{
  unint64_t result;

  result = qword_255B144D8;
  if (!qword_255B144D8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF39F8, &type metadata for ImageScaler.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144D8);
  }
  return result;
}

unint64_t sub_22AA75AEC()
{
  unint64_t result;

  result = qword_255B144E0;
  if (!qword_255B144E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3A20, &type metadata for ImageScaler.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B144E0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_52()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_57()
{
  return sub_22ABDFD1C();
}

uint64_t OUTLINED_FUNCTION_4_45()
{
  return sub_22ABDFCC8();
}

uint64_t OUTLINED_FUNCTION_5_44()
{
  return sub_22ABDFC5C();
}

uint64_t OUTLINED_FUNCTION_6_58()
{
  return sub_22ABDFBFC();
}

void OUTLINED_FUNCTION_9_43(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_10_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_13_48()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_17_32()
{
  return sub_22ABDFC8C();
}

void Sequence.mapFeatures<A, B, C>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = OUTLINED_FUNCTION_15_40();
  type metadata accessor for AnnotatedFeature(v0, v2, v3, v1);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  OUTLINED_FUNCTION_14_40((uint64_t)sub_22AA75DC0, v5, v6, v7, v4, v8, MEMORY[0x24BEE3F20], v9, v10);
  OUTLINED_FUNCTION_45_13();
}

uint64_t sub_22AA75C54@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>, _QWORD *a6)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *);
  uint64_t v30;

  v29 = a2;
  v27 = a5;
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AnnotatedFeature(0, v21, v22, v20);
  v26 = a1;
  AnnotatedFeature.feature.getter(v23, (uint64_t)v15);
  v24 = v30;
  v29(v15);
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, a3);
  if (v24)
  {
    *a6 = v24;
  }
  else
  {
    AnnotatedFeature.annotation.getter(v23, (uint64_t)v10);
    return AnnotatedFeature.init(feature:annotation:)((uint64_t)v19, (uint64_t)v10, v28, a4, v27);
  }
  return result;
}

uint64_t sub_22AA75DC0(uint64_t a1, uint64_t a2)
{
  return sub_22A9FDFA0(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_22AA75C54);
}

uint64_t Sequence.mapFeatures<A, B, C>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_24_30(a1, a2, a3, a4, a5, a6, a7);
  v8[11] = OUTLINED_FUNCTION_0_0();
  v8[12] = type metadata accessor for AnnotatedFeature(0, a5, a6, v12);
  v8[13] = OUTLINED_FUNCTION_0_0();
  v8[14] = *(_QWORD *)(v9 - 8);
  v13 = OUTLINED_FUNCTION_0_0();
  v14 = OUTLINED_FUNCTION_13_49(v13);
  v15 = OUTLINED_FUNCTION_50_15(v14);
  v19 = OUTLINED_FUNCTION_25_25(v15, v16, v17, v18);
  v8[19] = v19;
  v8[20] = *(_QWORD *)(v19 - 8);
  v20 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_38_22(v20);
  v8[22] = OUTLINED_FUNCTION_0_0();
  v8[23] = *(_QWORD *)(v7 - 8);
  v8[24] = OUTLINED_FUNCTION_0_0();
  v21 = OUTLINED_FUNCTION_41_13();
  v8[25] = v21;
  v8[26] = *(_QWORD *)(v21 - 8);
  v8[27] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA75EC8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  v1 = OUTLINED_FUNCTION_21_38();
  OUTLINED_FUNCTION_16_36(v1);
  OUTLINED_FUNCTION_32_18();
  OUTLINED_FUNCTION_37_19();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v2)
  {
    OUTLINED_FUNCTION_1_42();
    v8 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    return OUTLINED_FUNCTION_6_59(v8, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_2_53();
    OUTLINED_FUNCTION_46_15();
    v3 = (_QWORD *)OUTLINED_FUNCTION_34_22();
    v4 = OUTLINED_FUNCTION_20_35(v3);
    return OUTLINED_FUNCTION_7_55(v4, v5, v6);
  }
}

uint64_t sub_22AA75F84()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_12_41();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 112));
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA75FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_36();
  v7 = *(_QWORD *)(v1 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v4, v3, v7);
  AnnotatedFeature.annotation.getter(v2, v6);
  OUTLINED_FUNCTION_48_17(v4, v6, v5);
  OUTLINED_FUNCTION_51_18();
  OUTLINED_FUNCTION_39_20();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v7);
  OUTLINED_FUNCTION_33_24(v8, v9, v10, v11, v12, v13, v14, v15, v22, v23, v24, v25, v26);
  OUTLINED_FUNCTION_36_19();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v16)
  {
    OUTLINED_FUNCTION_1_42();
    v27 = *(_QWORD *)(v1 + 16);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    return OUTLINED_FUNCTION_8_41(v27, *(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_2_53();
    OUTLINED_FUNCTION_46_15();
    v17 = (_QWORD *)OUTLINED_FUNCTION_35_15();
    v18 = OUTLINED_FUNCTION_19_31(v17);
    return OUTLINED_FUNCTION_9_44(v18, v19, v20);
  }
}

uint64_t sub_22AA760E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void Sequence.mapAnnotations<A, B, C>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = OUTLINED_FUNCTION_15_40();
  type metadata accessor for AnnotatedFeature(v0, v1, v2, v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  OUTLINED_FUNCTION_14_40((uint64_t)sub_22AA76368, v4, v5, v6, v3, v7, MEMORY[0x24BEE3F20], v8, v9);
  OUTLINED_FUNCTION_45_13();
}

uint64_t sub_22AA761FC@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, _QWORD *a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *);
  uint64_t v31;

  v29 = a3;
  v30 = a2;
  v27 = a6;
  v9 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v12;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for AnnotatedFeature(0, v22, v23, v21);
  AnnotatedFeature.feature.getter(v24, (uint64_t)v20);
  AnnotatedFeature.annotation.getter(v24, (uint64_t)v11);
  v25 = v31;
  v30(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a5);
  if (!v25)
    return AnnotatedFeature.init(feature:annotation:)((uint64_t)v20, (uint64_t)v15, a4, v28, v27);
  result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, a4);
  *a7 = v25;
  return result;
}

uint64_t sub_22AA76368(uint64_t a1, uint64_t a2)
{
  return sub_22A9FDFA0(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_22AA761FC);
}

uint64_t Sequence.mapAnnotations<A, B, C>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_24_30(a1, a2, a3, a4, a5, a6, a7);
  v8[11] = OUTLINED_FUNCTION_0_0();
  v8[12] = type metadata accessor for AnnotatedFeature(0, v9, a6, v12);
  v8[13] = OUTLINED_FUNCTION_0_0();
  v8[14] = *(_QWORD *)(a5 - 8);
  v13 = OUTLINED_FUNCTION_0_0();
  v14 = OUTLINED_FUNCTION_13_49(v13);
  v15 = OUTLINED_FUNCTION_50_15(v14);
  v19 = OUTLINED_FUNCTION_25_25(v15, v16, v17, v18);
  v8[19] = v19;
  v8[20] = *(_QWORD *)(v19 - 8);
  v20 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_38_22(v20);
  v8[22] = OUTLINED_FUNCTION_0_0();
  v8[23] = *(_QWORD *)(v7 - 8);
  v8[24] = OUTLINED_FUNCTION_0_0();
  v21 = OUTLINED_FUNCTION_41_13();
  v8[25] = v21;
  v8[26] = *(_QWORD *)(v21 - 8);
  v8[27] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA76470()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  v1 = OUTLINED_FUNCTION_21_38();
  OUTLINED_FUNCTION_16_36(v1);
  OUTLINED_FUNCTION_32_18();
  OUTLINED_FUNCTION_37_19();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v2)
  {
    OUTLINED_FUNCTION_1_42();
    v8 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    return OUTLINED_FUNCTION_6_59(v8, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_2_53();
    OUTLINED_FUNCTION_47_13();
    v3 = (_QWORD *)OUTLINED_FUNCTION_34_22();
    v4 = OUTLINED_FUNCTION_20_35(v3);
    return OUTLINED_FUNCTION_7_55(v4, v5, v6);
  }
}

uint64_t sub_22AA7652C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_12_41();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 112));
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA7658C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_36();
  v7 = *(_QWORD *)(v1 + 64);
  AnnotatedFeature.feature.getter(v2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v4, v3, v7);
  OUTLINED_FUNCTION_48_17(v6, v4, v5);
  OUTLINED_FUNCTION_51_18();
  OUTLINED_FUNCTION_39_20();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v7);
  OUTLINED_FUNCTION_33_24(v8, v9, v10, v11, v12, v13, v14, v15, v22, v23, v24, v25, v26);
  OUTLINED_FUNCTION_36_19();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v16)
  {
    OUTLINED_FUNCTION_1_42();
    v27 = *(_QWORD *)(v1 + 16);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    return OUTLINED_FUNCTION_8_41(v27, *(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_2_53();
    OUTLINED_FUNCTION_47_13();
    v17 = (_QWORD *)OUTLINED_FUNCTION_35_15();
    v18 = OUTLINED_FUNCTION_19_31(v17);
    return OUTLINED_FUNCTION_9_44(v18, v19, v20);
  }
}

uint64_t LazySequence.mapFeatures<A, B, C>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_18_38();
  v3 = (_QWORD *)OUTLINED_FUNCTION_49_12();
  v4 = OUTLINED_FUNCTION_17_33(v3);
  type metadata accessor for AnnotatedFeature(v4, v1, v0, v5);
  OUTLINED_FUNCTION_53_17();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v2);
  OUTLINED_FUNCTION_23_34();
  return OUTLINED_FUNCTION_11_45();
}

uint64_t sub_22AA76700@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  void (*v26)(char *);
  uint64_t v27;

  v25[1] = a3;
  v26 = a2;
  v27 = a7;
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AnnotatedFeature(0, v21, v22, v20);
  AnnotatedFeature.feature.getter(v23, (uint64_t)v16);
  v26(v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, a4);
  AnnotatedFeature.annotation.getter(v23, (uint64_t)v11);
  return AnnotatedFeature.init(feature:annotation:)((uint64_t)v19, (uint64_t)v11, a5, a6, v27);
}

uint64_t sub_22AA76844()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AA76868(uint64_t a1)
{
  return sub_22AA76A2C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA76700);
}

uint64_t LazySequence.mapAnnotations<A, B, C>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_18_38();
  v3 = (_QWORD *)OUTLINED_FUNCTION_49_12();
  v4 = OUTLINED_FUNCTION_17_33(v3);
  type metadata accessor for AnnotatedFeature(v4, v1, v0, v5);
  OUTLINED_FUNCTION_53_17();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v2);
  OUTLINED_FUNCTION_23_34();
  return OUTLINED_FUNCTION_11_45();
}

uint64_t sub_22AA768E0@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(char *);
  uint64_t v24;

  v23 = a2;
  v24 = a6;
  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AnnotatedFeature(0, v19, v20, v18);
  AnnotatedFeature.feature.getter(v21, (uint64_t)v17);
  AnnotatedFeature.annotation.getter(v21, (uint64_t)v11);
  v23(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a4);
  return AnnotatedFeature.init(feature:annotation:)((uint64_t)v17, (uint64_t)v14, a3, a5, v24);
}

uint64_t sub_22AA76A20(uint64_t a1)
{
  return sub_22AA76A2C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA768E0);
}

uint64_t sub_22AA76A2C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[7], v2[8], v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t OUTLINED_FUNCTION_2_53()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[20] + 32))(v0[21], v0[22], v0[19]);
}

uint64_t OUTLINED_FUNCTION_6_59(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_7_55(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_8_41(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_9_44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_11_45()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_12_41()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 232) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_49(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 120) = a1;
  *(_QWORD *)(v1 + 128) = *(_QWORD *)(v2 - 8);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_14_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return sub_22A9C2540(a1, (uint64_t)&a9, v10, v11, a5, v9, a7, v12 - 40);
}

uint64_t OUTLINED_FUNCTION_15_40()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_16_36(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 16) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v2, v4);
}

uint64_t OUTLINED_FUNCTION_17_33(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *(_QWORD *)(v4 + 24);
  a1[2] = *(_QWORD *)(v4 + 16);
  a1[3] = v3;
  a1[4] = v2;
  a1[5] = v1;
  a1[6] = v7;
  a1[7] = v6;
  a1[8] = v5;
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_31(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 224) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 144);
}

uint64_t OUTLINED_FUNCTION_20_35(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 224) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 144);
}

uint64_t OUTLINED_FUNCTION_21_38()
{
  return sub_22ABDE9F0();
}

uint64_t OUTLINED_FUNCTION_23_34()
{
  return sub_22ABDFBC0();
}

uint64_t OUTLINED_FUNCTION_24_30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[9] = a7;
  v8[10] = v7;
  v8[7] = a5;
  v8[8] = a6;
  v8[5] = a3;
  v8[6] = a4;
  v8[3] = result;
  v8[4] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 144) = a1;
  return type metadata accessor for AnnotatedFeature(0, v6, v4, a4);
}

uint64_t OUTLINED_FUNCTION_32_18()
{
  return sub_22ABDEE58();
}

uint64_t OUTLINED_FUNCTION_33_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a13 + 8))(a11, v13);
}

uint64_t OUTLINED_FUNCTION_34_22()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_35_15()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_36_19()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_37_19()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_38_22(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_39_20()
{
  return sub_22ABDF0C8();
}

uint64_t OUTLINED_FUNCTION_41_13()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_46_15()
{
  uint64_t v0;
  uint64_t v1;

  return AnnotatedFeature.feature.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_47_13()
{
  uint64_t v0;
  uint64_t v1;

  return AnnotatedFeature.annotation.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_48_17@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  return AnnotatedFeature.init(feature:annotation:)(a1, a2, v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_49_12()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_50_15(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_51_18()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_53_17()
{
  return swift_retain();
}

uint64_t TabularTransformer.export(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v7 = type metadata accessor for CoreMLPackage();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_34();
  v9 = MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B125B0);
  if (swift_dynamicCast())
  {
    sub_22A9A1880(v19, (uint64_t)&v21);
    v12 = v23;
    v13 = v24;
    __swift_project_boxed_opaque_existential_1(&v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    if (!v3)
    {
      sub_22AB31614(a1);
      sub_22AA3A8DC(v4);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  }
  else
  {
    v20 = 0;
    memset(v19, 0, sizeof(v19));
    sub_22AA3A89C((uint64_t)v19);
    type metadata accessor for SerializationError();
    sub_22A9D395C();
    OUTLINED_FUNCTION_53();
    v16 = v15;
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_22ABDFF2C();
    v17 = v22;
    *v16 = v21;
    v16[1] = v17;
    v18 = swift_storeEnumTagMultiPayload();
    return swift_willThrow(v18);
  }
}

uint64_t TabularTransformer.export(to:metadata:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__int128 *, _QWORD);
  uint64_t *v22;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[6];
  __int128 v29[2];
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = v3;
  v35 = a1;
  v9 = type metadata accessor for CoreMLPackage();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_34();
  v13 = a2[2];
  v28[0] = *a2;
  v28[1] = v13;
  v14 = a2[4];
  v28[2] = a2[5];
  v28[3] = v14;
  v15 = a2[6];
  v16 = a2[7];
  v17 = a2[8];
  v28[4] = v16;
  v28[5] = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v5, v6, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B125B0);
  if (swift_dynamicCast())
  {
    sub_22A9A1880(v29, (uint64_t)&v31);
    v19 = v33;
    v20 = v34;
    __swift_project_boxed_opaque_existential_1(&v31, v33);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
    if (!v4)
    {
      sub_22ABDEAEC();
      sub_22ABDE354();
      sub_22ABDEAEC();
      sub_22ABDE3C0();
      sub_22ABDEAEC();
      sub_22ABDE390();
      sub_22ABDEAEC();
      sub_22ABDE3A8();
      sub_22ABDEAEC();
      v21 = (void (*)(__int128 *, _QWORD))sub_22ABDE360();
      sub_22A9D11D8(v17, (uint64_t)sub_22A9D147C, 0, v22);
      v21(v29, 0);
      sub_22AB31614(v35);
      sub_22AA3A8DC((uint64_t)v11);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  }
  else
  {
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    sub_22AA3A89C((uint64_t)v29);
    type metadata accessor for SerializationError();
    sub_22A9D395C();
    OUTLINED_FUNCTION_53();
    v25 = v24;
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_22ABDFF2C();
    v26 = v32;
    *v25 = v31;
    v25[1] = v26;
    v27 = swift_storeEnumTagMultiPayload();
    return swift_willThrow(v27);
  }
}

uint64_t Augmenter.init<A>(generator:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, _QWORD *a7@<X8>)
{
  uint64_t result;

  type metadata accessor for RandomNumberGeneratorReference(0, a5, a6, a4);
  result = sub_22AA2F694(a1);
  *a7 = a2;
  a7[1] = a3;
  a7[2] = result;
  return result;
}

void Augmenter.applied<A, B>(to:)(uint64_t a1)
{
  void (**v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_23_1();
  v4 = *v1;
  v6 = (*(uint64_t (**)(uint64_t))(v5 + 16))(v2);
  v4(v6);
  sub_22AA2BA70();
}

void sub_22AA77304()
{
  swift_retain();
  OUTLINED_FUNCTION_3();
}

void Augmenter.applied<A, B>(to:upsampledBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (**v6)(uint64_t);
  uint64_t v7;
  double v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  v13[2] = a5;
  v13[3] = a6;
  v13[1] = a2;
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_23_1();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = *v6;
  v12 = (*(uint64_t (**)(char *, double))(v11 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v10(v12);
  sub_22AA4428C();
}

void sub_22AA773EC()
{
  swift_retain();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA77408()
{
  swift_release();
  return swift_release();
}

_QWORD *sub_22AA77430(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_22AA7746C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22AA774C8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

void type metadata accessor for Augmenter()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t HumanBodyActionCounter.CumulativeSumSequence.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

double HumanBodyActionCounter.CumulativeSumSequence.makeAsyncIterator()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  __int128 v5;
  _BYTE v6[48];
  void (*v7)(__int128 *__return_ptr, uint64_t);

  sub_22AA77594(v1, (uint64_t)v6);
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 0;
  v3 = sub_22AA77594((uint64_t)v6, a1);
  v7(&v5, v3);
  sub_22A9AD754((uint64_t)v6, &qword_255B14578);
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_22AA77594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14578);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA775DC()
{
  return HumanBodyActionCounter.CumulativeSumSequence.count.getter();
}

uint64_t sub_22AA775F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  HumanBodyActionCounter.CumulativeSumSequence.makeAsyncIterator()(a1);
  return sub_22AA77F04(v1);
}

uint64_t HumanBodyActionCounter.CumulativeSumSequence.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_22AA77624()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *);

  v1 = v0[9];
  v2 = *(int **)(v1 + 64);
  v0[10] = *(_QWORD *)(v1 + 72);
  v5 = (uint64_t (*)(_QWORD *))((char *)v2 + *v2);
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_22AA776A4;
  return v5(v0 + 2);
}

uint64_t sub_22AA776A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22AA77708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  float v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_release();
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  if (!v1)
  {
    v15 = *(_OWORD **)(v0 + 64);
    *(_OWORD *)((char *)v15 + 28) = 0u;
    *v15 = 0u;
    v15[1] = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD **)(v0 + 72);
  v7 = v6[11];
  v8 = v6[13];
  v19 = *(_QWORD *)(v0 + 40);
  v20 = v8;
  v18 = v6[10];
  if (!v7 || (v6[10] == v2 ? (v9 = v7 == v1) : (v9 = 0), !v9 && (v10 = sub_22ABDFF68(), v8 = v20, (v10 & 1) == 0)))
  {
    if (*(_QWORD *)(v5 + 16))
    {
      do
        OUTLINED_FUNCTION_1_43();
      while (!v9);
    }
    goto LABEL_23;
  }
  if (v3 >= v8)
  {
    if (*(_QWORD *)(v5 + 16))
    {
      do
        OUTLINED_FUNCTION_1_43();
      while (!v9);
    }
LABEL_23:
    v14 = *(_QWORD *)(v0 + 72);
    goto LABEL_24;
  }
  result = v8 - v3;
  if (__OFSUB__(v8, v3))
  {
    __break(1u);
  }
  else
  {
    result = sub_22AA77950(result, v5);
    if (v13 >> 1 == v12)
    {
LABEL_14:
      v14 = *(_QWORD *)(v0 + 72);
      sub_22ABDEAEC();
      swift_unknownObjectRelease();
LABEL_24:
      v16 = *(float *)(v14 + 128) + 0.0;
      v17 = *(_QWORD *)(v0 + 64);
      *(float *)(v14 + 128) = v16;
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      sub_22AA77920(v18, v7);
      v6[10] = v2;
      v6[11] = v1;
      v6[12] = v3;
      v6[13] = v19;
      v6[14] = v4;
      v6[15] = v5;
      sub_22ABDEAEC();
      sub_22AA77920(v2, v1);
      *(_QWORD *)v17 = v2;
      *(_QWORD *)(v17 + 8) = v1;
      *(_QWORD *)(v17 + 16) = v3;
      *(_QWORD *)(v17 + 24) = v19;
      *(_QWORD *)(v17 + 32) = v4;
      *(float *)(v17 + 40) = v16;
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if ((uint64_t)(v13 >> 1) > v12)
    {
      do
        OUTLINED_FUNCTION_1_43();
      while (!v9);
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA778F4()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA77920(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22AA77950(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return a2;
  }
  __break(1u);
  return result;
}

unint64_t sub_22AA77984(uint64_t a1)
{
  unint64_t result;

  result = sub_22AA779A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22AA779A8()
{
  unint64_t result;

  result = qword_255B145A8;
  if (!qword_255B145A8)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for HumanBodyActionCounter.CumulativeSumSequence, &type metadata for HumanBodyActionCounter.CumulativeSumSequence);
    atomic_store(result, (unint64_t *)&qword_255B145A8);
  }
  return result;
}

unint64_t sub_22AA779E8()
{
  unint64_t result;

  result = qword_255B145B0[0];
  if (!qword_255B145B0[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for HumanBodyActionCounter.CumulativeSumSequence.Iterator, &type metadata for HumanBodyActionCounter.CumulativeSumSequence.Iterator);
    atomic_store(result, qword_255B145B0);
  }
  return result;
}

uint64_t sub_22AA77A24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A9B24D4;
  return HumanBodyActionCounter.CumulativeSumSequence.Iterator.next()(a1);
}

uint64_t sub_22AA77A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_255B161A0 + dword_255B161A0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_22A9AC000;
  return v10(a1, a2, a3);
}

ValueMetadata *type metadata accessor for HumanBodyActionCounter.CumulativeSumSequence()
{
  return &type metadata for HumanBodyActionCounter.CumulativeSumSequence;
}

uint64_t _s21CumulativeSumSequenceV8IteratorVwxx(uint64_t a1)
{
  uint64_t result;

  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  swift_release();
  result = *(_QWORD *)(a1 + 88);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s21CumulativeSumSequenceV8IteratorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  if (v6)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v6;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v7 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v7;
    sub_22ABDEAEC();
    sub_22ABDEAEC();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v8;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  }
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  return a1;
}

uint64_t _s21CumulativeSumSequenceV8IteratorVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_retain();
  swift_release();
  v7 = (_OWORD *)(a1 + 80);
  v8 = (_OWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      sub_22ABDEAEC();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      sub_22ABDEAEC();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_22A9AD754(a1 + 80, &qword_255B145C8);
      v11 = *(_OWORD *)(a2 + 96);
      v10 = *(_OWORD *)(a2 + 112);
      *v7 = *v8;
      *(_OWORD *)(a1 + 96) = v11;
      *(_OWORD *)(a1 + 112) = v10;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
  }
  else
  {
    v12 = *v8;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    *v7 = v12;
  }
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  return a1;
}

void *__swift_memcpy132_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x84uLL);
}

uint64_t _s21CumulativeSumSequenceV8IteratorVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  if (!*(_QWORD *)(a1 + 88))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 88);
  if (!v5)
  {
    sub_22A9AD754(a1 + 80, &qword_255B145C8);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v6 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  return a1;
}

uint64_t _s21CumulativeSumSequenceV8IteratorVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 132))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21CumulativeSumSequenceV8IteratorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 132) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 132) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyActionCounter.CumulativeSumSequence.Iterator()
{
  return &type metadata for HumanBodyActionCounter.CumulativeSumSequence.Iterator;
}

uint64_t sub_22AA77F04(uint64_t a1)
{
  _s21CumulativeSumSequenceVwxx(a1);
  return a1;
}

void sub_22AA77F30(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t DynamicType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[5];
  _QWORD v48[7];

  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
  v39 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_0();
  v38 = v2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_0();
  v40 = v3;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_33();
  v6 = v5 - v4;
  v7 = sub_22ABDD0E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  v12 = sub_22ABDD1E4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  DynamicType = swift_getDynamicType();
  if (DynamicType == v12
    || (v18 = DynamicType, v19 = OUTLINED_FUNCTION_2_20(DynamicType, &qword_2540E8618), v18 == v19))
  {
    OUTLINED_FUNCTION_6_60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85A0);
    OUTLINED_FUNCTION_31_20();
    OUTLINED_FUNCTION_16_2();
    sub_22AA79574();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    return;
  }
  if (v18 == MEMORY[0x24BDCDDE8] || (v20 = OUTLINED_FUNCTION_2_20(v19, &qword_2540E8610), v18 == v20))
  {
    OUTLINED_FUNCTION_6_60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85A0);
    OUTLINED_FUNCTION_16_2();
    sub_22AA79EA4();
    OUTLINED_FUNCTION_42_15();
    sub_22A9D1570(v47[0], v47[1]);
    return;
  }
  if (v18 == v7 || v18 == OUTLINED_FUNCTION_2_20(v20, &qword_2540E8608))
  {
    OUTLINED_FUNCTION_6_60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85A0);
    OUTLINED_FUNCTION_31_20();
    OUTLINED_FUNCTION_16_2();
    sub_22ABDD04C();
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    OUTLINED_FUNCTION_2_20(v24, (unint64_t *)&qword_2540E8638);
    sub_22AA78958();
    return;
  }
  type metadata accessor for Decimal(0);
  if (v18 == v21 || v18 == OUTLINED_FUNCTION_2_20(v21, &qword_2540E8600))
  {
    OUTLINED_FUNCTION_6_60();
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85A0);
    OUTLINED_FUNCTION_2_20(v25, &qword_2540E8600);
    OUTLINED_FUNCTION_16_2();
    return;
  }
  v22 = v48[6];
  if (v18 == v45)
  {
    OUTLINED_FUNCTION_6_60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85A0);
    OUTLINED_FUNCTION_31_20();
    OUTLINED_FUNCTION_16_2();
    sub_22AA796A4();
    OUTLINED_FUNCTION_42_15();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v6, v45);
    return;
  }
  v23 = v44;
  if (v18 == v44)
  {
    OUTLINED_FUNCTION_6_60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85A0);
    OUTLINED_FUNCTION_31_20();
    v26 = v40;
    OUTLINED_FUNCTION_16_2();
    sub_22AA7997C();
    OUTLINED_FUNCTION_42_15();
    v27 = v41;
LABEL_21:
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v23);
    return;
  }
  v23 = v43;
  if (v18 == v43)
  {
    sub_22A9A1A28((uint64_t)a1, (uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85A0);
    OUTLINED_FUNCTION_31_20();
    v26 = v38;
    OUTLINED_FUNCTION_16_2();
    sub_22AA79C10();
    OUTLINED_FUNCTION_42_15();
    v27 = v39;
    goto LABEL_21;
  }
  sub_22A9A1A28((uint64_t)a1, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8488);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    OUTLINED_FUNCTION_6_60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B145D0);
    OUTLINED_FUNCTION_16_2();
    sub_22AA79FB0(v47[0]);
    swift_bridgeObjectRelease();
    return;
  }
  OUTLINED_FUNCTION_45_2();
  v28 = *(_QWORD *)(v46 + 16);
  if (v28 >> 62)
  {
    sub_22ABDEAEC();
    v29 = OUTLINED_FUNCTION_21_39();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v30 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v48[3] = _s19IntermediateEncoderCMa();
  sub_22AA7ACF4(&qword_2540E7F50);
  v48[4] = v31;
  v48[0] = v46;
  swift_retain();
  sub_22ABDEB70();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    OUTLINED_FUNCTION_41_14();
    if (v32)
    {
      OUTLINED_FUNCTION_3_58();
      OUTLINED_FUNCTION_21_39();
      v33 = OUTLINED_FUNCTION_19_32();
    }
    else
    {
      OUTLINED_FUNCTION_30_23();
    }
    if (v29 >= (uint64_t)v30)
      goto LABEL_30;
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_27_27((uint64_t (*)(uint64_t))sub_22AB5D7B4, (void (*)(uint64_t, uint64_t))sub_22AA37AD8);
    if (v34)
    {
      v35 = v34;
      swift_endAccess();

LABEL_30:
      swift_willThrow(v33);
      return;
    }
    __break(1u);
LABEL_41:
    __break(1u);
    return;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  OUTLINED_FUNCTION_41_14();
  if (v36)
  {
    OUTLINED_FUNCTION_3_58();
    OUTLINED_FUNCTION_21_39();
    OUTLINED_FUNCTION_19_32();
  }
  else
  {
    OUTLINED_FUNCTION_30_23();
  }
  if (v29 < (uint64_t)v30)
  {
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_27_27((uint64_t (*)(uint64_t))sub_22AB5D7B4, (void (*)(uint64_t, uint64_t))sub_22AA37AD8);
    if (v37)
    {
      swift_endAccess();
      return;
    }
    goto LABEL_41;
  }
}

void sub_22AA785C0(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  a1(*(_QWORD *)(v3 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
}

void sub_22AA7862C(_QWORD *(*a1)(uint64_t *__return_ptr, _QWORD))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  v4 = v3 + 4;
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_22AA7A9D8(v4, a1, &v6);
  os_unfair_lock_unlock(v5);
}

void sub_22AA786B0()
{
  sub_22AA786C4((uint64_t (*)(uint64_t))sub_22AB5D7B4, (void (*)(uint64_t, uint64_t))sub_22AA37AD8);
}

void sub_22AA786C4(uint64_t (*a1)(uint64_t), void (*a2)(uint64_t, uint64_t))
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;

  if (*v2 >> 62)
  {
    OUTLINED_FUNCTION_24_31();
    sub_22ABDFB60();
    OUTLINED_FUNCTION_49_13();
    if (!v3)
      goto LABEL_9;
  }
  else
  {
    v3 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      goto LABEL_9;
  }
  sub_22AA7A8C8(a1);
  if (!v6)
  {
    if (*v2 >> 62)
      goto LABEL_11;
    v3 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (__OFSUB__(v3, 1))
    {
      __break(1u);
LABEL_11:
      OUTLINED_FUNCTION_24_31();
      sub_22ABDFB60();
      OUTLINED_FUNCTION_49_13();
    }
    sub_22AA7A758(v3 - 1, a1, a2);
  }
LABEL_9:
  OUTLINED_FUNCTION_38();
}

void sub_22AA78768(float a1)
{
  id v2;
  double v3;

  if ((~LODWORD(a1) & 0x7F800000) != 0)
  {
    v2 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    *(float *)&v3 = a1;
    objc_msgSend(v2, sel_initWithFloat_, v3);
  }
  else
  {
    if (a1 == INFINITY)
    {
      sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8638);
      OUTLINED_FUNCTION_25_26();
    }
    else
    {
      sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8638);
      if (a1 == -INFINITY)
        OUTLINED_FUNCTION_26_26();
    }
    sub_22AA78958();
    OUTLINED_FUNCTION_51_19();
  }
}

void sub_22AA7881C(double a1)
{
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0)
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a1);
  }
  else
  {
    if (a1 == INFINITY)
    {
      sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8638);
      OUTLINED_FUNCTION_25_26();
    }
    else
    {
      sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8638);
      if (a1 == -INFINITY)
        OUTLINED_FUNCTION_26_26();
    }
    sub_22AA78958();
    OUTLINED_FUNCTION_51_19();
  }
}

void sub_22AA788D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_22AA77F30(a1);
  if (!v1 && !v2)
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE70]), sel_init);
}

void sub_22AA78914(void *__src, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  memcpy(v3 + 3, __src, 0x58uLL);
  v3[2] = MEMORY[0x24BEE4AF8];
  v3[14] = a2;
  v3[15] = a3;
  OUTLINED_FUNCTION_21();
}

void sub_22AA78958()
{
  id v0;
  void *v1;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_22ABDED2C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_initWithString_, v1);

  OUTLINED_FUNCTION_21();
}

uint64_t sub_22AA789C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v6 = v3 + 2;
  if (((*(uint64_t (**)(void))(*v3 + 200))() & 1) != 0)
  {
    OUTLINED_FUNCTION_5_1();
    sub_22AA46098();
    swift_endAccess();
LABEL_9:
    OUTLINED_FUNCTION_0_16();
    sub_22AB2E93C();
    v14 = _s14KeyedContainerVMa_0(0, a2, a3, v13);
    swift_retain();
    sub_22ABDEAEC();
    MEMORY[0x22E2E4D80](&unk_22ABFB2F8, v14);
    return sub_22ABDFD64();
  }
  OUTLINED_FUNCTION_0_16();
  v7 = *v6;
  if (!((unint64_t)*v6 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_50_9();
    if (v8)
      goto LABEL_5;
LABEL_11:
    OUTLINED_FUNCTION_3_8();
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_50_9();
  v8 = sub_22ABDFB60();
  if (!v8)
    goto LABEL_11;
LABEL_5:
  v9 = __OFSUB__(v8, 1);
  v10 = v8 - 1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  sub_22A9B8810(v10, (v7 & 0xC000000000000001) == 0, v7);
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v11 = (id)MEMORY[0x22E2E3A9C](v10, v7);
    goto LABEL_8;
  }
  v11 = *(id *)(v7 + 8 * v10 + 32);
LABEL_8:
  v12 = v11;
  OUTLINED_FUNCTION_3_8();
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
    goto LABEL_9;

LABEL_15:
  result = OUTLINED_FUNCTION_35_16();
  __break(1u);
  return result;
}

uint64_t sub_22AA78BB4@<X0>(uint64_t **a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t result;

  v2 = v1;
  v4 = v1 + 2;
  if (((*(uint64_t (**)(void))(*v1 + 200))() & 1) != 0)
  {
    OUTLINED_FUNCTION_5_1();
    v5 = (uint64_t)sub_22AA460A4();
    swift_endAccess();
LABEL_9:
    OUTLINED_FUNCTION_0_16();
    v11 = v2[15];
    a1[3] = (uint64_t *)&_s16UnkeyedContainerVN;
    a1[4] = (uint64_t *)sub_22AA5CD98();
    *a1 = v2;
    a1[1] = (uint64_t *)v5;
    a1[2] = (uint64_t *)v11;
    swift_retain();
    return sub_22ABDEAEC();
  }
  OUTLINED_FUNCTION_0_16();
  v6 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    OUTLINED_FUNCTION_30_23();
    OUTLINED_FUNCTION_50_9();
    if (v4)
      goto LABEL_5;
LABEL_11:
    OUTLINED_FUNCTION_3_8();
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_50_9();
  v4 = (uint64_t *)sub_22ABDFB60();
  if (!v4)
    goto LABEL_11;
LABEL_5:
  v7 = __OFSUB__(v4, 1);
  v8 = (unint64_t)v4 - 1;
  if (v7)
  {
    __break(1u);
    goto LABEL_13;
  }
  sub_22A9B8810(v8, (v6 & 0xC000000000000001) == 0, v6);
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v9 = (id)MEMORY[0x22E2E3A9C](v8, v6);
    goto LABEL_8;
  }
  v9 = *(id *)(v6 + 8 * v8 + 32);
LABEL_8:
  v10 = v9;
  OUTLINED_FUNCTION_3_8();
  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (v5)
    goto LABEL_9;

LABEL_15:
  result = OUTLINED_FUNCTION_35_16();
  __break(1u);
  return result;
}

uint64_t sub_22AA78D54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = _s19IntermediateEncoderCMa();
  sub_22AA7ACF4(&qword_2540E7F58);
  a1[4] = v3;
  *a1 = v1;
  return swift_retain();
}

BOOL sub_22AA78D98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_0_16();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62)
  {
    sub_22ABDEAEC();
    v2 = sub_22ABDFB60();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_0_16();
  return v2 == *(_QWORD *)(*(_QWORD *)(v0 + 120) + 16);
}

uint64_t _s19IntermediateEncoderCMa()
{
  return objc_opt_self();
}

uint64_t sub_22AA78E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA789C0(a1, a2, a3);
}

uint64_t sub_22AA78E68@<X0>(uint64_t **a1@<X8>)
{
  return sub_22AA78BB4(a1);
}

uint64_t sub_22AA78E88@<X0>(_QWORD *a1@<X8>)
{
  return sub_22AA78D54(a1);
}

uint64_t sub_22AA78EA8()
{
  uint64_t v0;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
  if ((result & 1) == 0)
  {
    result = sub_22ABDFADC();
    __break(1u);
  }
  return result;
}

void sub_22AA78F1C()
{
  sub_22AA78EA8();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  OUTLINED_FUNCTION_0_48();
  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_4_46();
}

void sub_22AA78F6C()
{
  char v0;

  OUTLINED_FUNCTION_15_41();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v0 & 1);
  OUTLINED_FUNCTION_0_48();
  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_4_46();
}

void sub_22AA78FBC()
{
  char v0;

  OUTLINED_FUNCTION_15_41();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithChar_, v0);
  OUTLINED_FUNCTION_0_48();
  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_4_46();
}

void sub_22AA7900C()
{
  __int16 v0;

  OUTLINED_FUNCTION_15_41();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v0);
  OUTLINED_FUNCTION_0_48();
  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_4_46();
}

void sub_22AA7905C()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_15_41();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedChar_, v0);
  OUTLINED_FUNCTION_0_48();
  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_4_46();
}

void sub_22AA790AC()
{
  unsigned __int16 v0;

  OUTLINED_FUNCTION_15_41();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedShort_, v0);
  OUTLINED_FUNCTION_0_48();
  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_4_46();
}

void sub_22AA790FC(uint64_t a1, SEL *a2)
{
  id v4;

  sub_22AA78EA8();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), *a2, a1);
  OUTLINED_FUNCTION_0_48();
  sub_22AA46118(v4);
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_11_46();
}

uint64_t sub_22AA79160()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v0 = OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_2_20(v0, (unint64_t *)&qword_2540E8638);
  OUTLINED_FUNCTION_47_3();
  sub_22AA78958();
  v2 = v1;
  OUTLINED_FUNCTION_5_1();
  sub_22AA46118(v2);
  return OUTLINED_FUNCTION_7_56();
}

void sub_22AA791EC(float a1)
{
  sub_22AA78EA8();
  sub_22AA78768(a1);
  OUTLINED_FUNCTION_0_48();
  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_11_46();
}

void sub_22AA79240(double a1)
{
  sub_22AA78EA8();
  sub_22AA7881C(a1);
  OUTLINED_FUNCTION_0_48();
  OUTLINED_FUNCTION_12_42();
  OUTLINED_FUNCTION_7_56();
  OUTLINED_FUNCTION_11_46();
}

uint64_t sub_22AA79294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  uint64_t v9[3];
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_54_11();
  v10 = v4;
  v11 = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1, v5, v4);
  OUTLINED_FUNCTION_22_33((uint64_t)v9);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  if (!v3)
  {
    OUTLINED_FUNCTION_0_48();
    OUTLINED_FUNCTION_12_42();
    return OUTLINED_FUNCTION_7_56();
  }
  return result;
}

void sub_22AA7931C()
{
  sub_22AA78F1C();
}

void sub_22AA7933C()
{
  sub_22AA78F6C();
}

uint64_t sub_22AA7935C()
{
  return sub_22AA79160();
}

void sub_22AA7937C(double a1)
{
  sub_22AA79240(a1);
}

void sub_22AA7939C(float a1)
{
  sub_22AA791EC(a1);
}

void sub_22AA793BC(uint64_t a1)
{
  sub_22AA790FC(a1, (SEL *)&selRef_initWithInteger_);
}

void sub_22AA793E4()
{
  sub_22AA78FBC();
}

void sub_22AA79404()
{
  sub_22AA7900C();
}

void sub_22AA79424(uint64_t a1)
{
  sub_22AA790FC(a1, (SEL *)&selRef_initWithInt_);
}

void sub_22AA7944C(uint64_t a1)
{
  sub_22AA790FC(a1, (SEL *)&selRef_initWithLongLong_);
}

uint64_t sub_22AA79474()
{
  return sub_22ABDFFC8();
}

void sub_22AA79488(uint64_t a1)
{
  sub_22AA790FC(a1, (SEL *)&selRef_initWithUnsignedInteger_);
}

void sub_22AA794B0()
{
  sub_22AA7905C();
}

void sub_22AA794D0()
{
  sub_22AA790AC();
}

void sub_22AA794F0(uint64_t a1)
{
  sub_22AA790FC(a1, (SEL *)&selRef_initWithUnsignedInt_);
}

void sub_22AA79518(uint64_t a1)
{
  sub_22AA790FC(a1, (SEL *)&selRef_initWithUnsignedLongLong_);
}

uint64_t sub_22AA79540()
{
  return sub_22ABDFFD4();
}

uint64_t sub_22AA79554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA79294(a1, a2, a3);
}

void sub_22AA79574()
{
  uint64_t v0;

  v0 = sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8638);
  if (qword_255B0D730 != -1)
    v0 = swift_once();
  MEMORY[0x24BDAC7A8](v0);
  sub_22AA7862C((_QWORD *(*)(uint64_t *__return_ptr, _QWORD))sub_22AA7A60C);
  sub_22AA78958();
  OUTLINED_FUNCTION_21();
}

void sub_22AA79624(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)sub_22ABDD1CC();
  v5 = objc_msgSend(a1, sel_stringFromDate_, v4);

  v6 = sub_22ABDED50();
  v8 = v7;

  *a2 = v6;
  a2[1] = v8;
}

void sub_22AA796A4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_36_20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v1 = OUTLINED_FUNCTION_50_16();
  v2 = OUTLINED_FUNCTION_17_34(v1);
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_46_16();
    sub_22A9A0B88(&qword_255B0DAF8, &qword_2540E8568);
    OUTLINED_FUNCTION_23_35();
    v16 = OUTLINED_FUNCTION_45_14();
    OUTLINED_FUNCTION_53_18(&qword_255B145F0);
    v11 = OUTLINED_FUNCTION_8_42(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_18_39(v11);
  }
  else
  {
    OUTLINED_FUNCTION_2_20(v2, (unint64_t *)&qword_2540E8630);
    OUTLINED_FUNCTION_13_50();
  }
  OUTLINED_FUNCTION_29_23();
  OUTLINED_FUNCTION_14_41();
}

uint64_t sub_22AA79778(uint64_t result)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 1;
  v2 = (uint64_t *)(result + 32);
  v3 = 1;
  while (1)
  {
    v4 = *v2++;
    v5 = v3 * v4;
    if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
      break;
    v3 = v5;
    if (!--v1)
      return v5 < 5;
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA797C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD v24[10];

  v22 = a6;
  v11 = sub_22ABDD124();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if (!a1)
    goto LABEL_7;
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v23 = *(unsigned int *)(a5 + 40);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDCDB98], v11);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v16 = MEMORY[0x22E2E13CC](a1, 4 * a2, v14);
  v18 = v17;
  swift_beginAccess();
  sub_22AB5E48C(v16, v18);
  swift_endAccess();
  v24[3] = &type metadata for ShapedArrayReference;
  v24[4] = sub_22AA7ABF8();
  v19 = swift_allocObject();
  v24[0] = v19;
  *(_QWORD *)(v19 + 16) = v23;
  *(_QWORD *)(v19 + 24) = a3;
  *(_QWORD *)(v19 + 32) = a4;
  *(_BYTE *)(v19 + 40) = 0;
  v20 = v24[9];
  v21 = sub_22AA788D0(v24);
  sub_22A9D1570(v16, v18);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (!v20)
    *v22 = v21;
  return result;
}

void sub_22AA7997C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_36_20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v1 = OUTLINED_FUNCTION_50_16();
  v2 = OUTLINED_FUNCTION_17_34(v1);
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_46_16();
    sub_22A9A0B88(&qword_2540E8538, &qword_2540E8550);
    OUTLINED_FUNCTION_23_35();
    v16 = OUTLINED_FUNCTION_45_14();
    OUTLINED_FUNCTION_53_18(&qword_255B145F8);
    v11 = OUTLINED_FUNCTION_8_42(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_18_39(v11);
  }
  else
  {
    OUTLINED_FUNCTION_2_20(v2, (unint64_t *)&qword_2540E8630);
    OUTLINED_FUNCTION_13_50();
  }
  OUTLINED_FUNCTION_29_23();
  OUTLINED_FUNCTION_14_41();
}

uint64_t sub_22AA79A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD v24[10];

  v22 = a6;
  v11 = sub_22ABDD124();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if (!a1)
    goto LABEL_7;
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v23 = *(unsigned int *)(a5 + 40);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDCDB98], v11);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v16 = MEMORY[0x22E2E13CC](a1, 8 * a2, v14);
  v18 = v17;
  swift_beginAccess();
  sub_22AB5E48C(v16, v18);
  swift_endAccess();
  v24[3] = &type metadata for ShapedArrayReference;
  v24[4] = sub_22AA7ABF8();
  v19 = swift_allocObject();
  v24[0] = v19;
  *(_QWORD *)(v19 + 16) = v23;
  *(_QWORD *)(v19 + 24) = a3;
  *(_QWORD *)(v19 + 32) = a4;
  *(_BYTE *)(v19 + 40) = 1;
  v20 = v24[9];
  v21 = sub_22AA788D0(v24);
  sub_22A9D1570(v16, v18);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (!v20)
    *v22 = v21;
  return result;
}

void sub_22AA79C10()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_36_20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
  v1 = OUTLINED_FUNCTION_50_16();
  v2 = OUTLINED_FUNCTION_17_34(v1);
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_46_16();
    sub_22A9A0B88(&qword_255B13BD8, &qword_2540E8578);
    OUTLINED_FUNCTION_23_35();
    v16 = OUTLINED_FUNCTION_45_14();
    OUTLINED_FUNCTION_53_18(&qword_255B14600);
    v11 = OUTLINED_FUNCTION_8_42(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_18_39(v11);
  }
  else
  {
    OUTLINED_FUNCTION_2_20(v2, (unint64_t *)&qword_2540E8630);
    OUTLINED_FUNCTION_13_50();
  }
  OUTLINED_FUNCTION_29_23();
  OUTLINED_FUNCTION_14_41();
}

uint64_t sub_22AA79CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD v24[10];

  v22 = a6;
  v11 = sub_22ABDD124();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if (!a1)
    goto LABEL_7;
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v23 = *(unsigned int *)(a5 + 40);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDCDB98], v11);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v16 = MEMORY[0x22E2E13CC](a1, 4 * a2, v14);
  v18 = v17;
  swift_beginAccess();
  sub_22AB5E48C(v16, v18);
  swift_endAccess();
  v24[3] = &type metadata for ShapedArrayReference;
  v24[4] = sub_22AA7ABF8();
  v19 = swift_allocObject();
  v24[0] = v19;
  *(_QWORD *)(v19 + 16) = v23;
  *(_QWORD *)(v19 + 24) = a3;
  *(_QWORD *)(v19 + 32) = a4;
  *(_BYTE *)(v19 + 40) = 2;
  v20 = v24[9];
  v21 = sub_22AA788D0(v24);
  sub_22A9D1570(v16, v18);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (!v20)
    *v22 = v21;
  return result;
}

uint64_t sub_22AA79EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[3];
  ValueMetadata *v15;
  unint64_t v16;

  if (sub_22ABDD1A8() <= 8)
  {
    v5 = OUTLINED_FUNCTION_34_23();
    sub_22A9D14F0(v5, v6);
    v7 = OUTLINED_FUNCTION_34_23();
    sub_22AA7AA00(v7, v8);
    v10 = v9;
    v11 = OUTLINED_FUNCTION_34_23();
    sub_22A9D1570(v11, v12);
    v15 = &type metadata for InlineData;
    v16 = sub_22AA7AB68();
    v14[0] = v10;
  }
  else
  {
    OUTLINED_FUNCTION_45_2();
    v1 = *(unsigned int *)(v0 + 40);
    OUTLINED_FUNCTION_34_23();
    v2 = sub_22ABDD1A8();
    OUTLINED_FUNCTION_5_1();
    v3 = OUTLINED_FUNCTION_34_23();
    sub_22AB5E48C(v3, v4);
    swift_endAccess();
    v15 = &type metadata for DataReference;
    v16 = sub_22AA7ABA4();
    v14[0] = v1;
    v14[1] = v2;
  }
  OUTLINED_FUNCTION_22_33((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return OUTLINED_FUNCTION_29_23();
}

void sub_22AA79FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  id v43;
  __int128 v44;
  ValueMetadata *v45;
  unint64_t v46;
  __int128 v47;
  _OWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;

  OUTLINED_FUNCTION_45_2();
  v53 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (!(v3 >> 62))
  {
    v39 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_3;
  }
LABEL_56:
  OUTLINED_FUNCTION_3_58();
  v39 = OUTLINED_FUNCTION_21_39();
  swift_bridgeObjectRelease();
LABEL_3:
  v4 = &v50;
  OUTLINED_FUNCTION_5_1();
  v43 = sub_22AA46098();
  OUTLINED_FUNCTION_38_23();
  v40 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (uint64_t *)(v53 + 120);
  v41 = (unint64_t)(v5 + 63) >> 6;
  sub_22ABDEAEC();
  v9 = 0;
  if (v7)
  {
LABEL_6:
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v11 = v10 | (v9 << 6);
LABEL_7:
    v12 = *(_QWORD *)(a1 + 56);
    v13 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v14 = v13[1];
    *(_QWORD *)&v47 = *v13;
    *((_QWORD *)&v47 + 1) = v14;
    sub_22A9A1A28(v12 + 40 * v11, (uint64_t)v48);
    OUTLINED_FUNCTION_50_9();
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_55;
    if (v15 < v41)
    {
      v16 = *(_QWORD *)(v40 + 8 * v15);
      if (v16)
        goto LABEL_11;
      v9 += 2;
      if (v15 + 1 >= v41)
      {
        v9 = v15;
      }
      else
      {
        v16 = *(_QWORD *)(v40 + 8 * v9);
        if (v16)
        {
          ++v15;
LABEL_11:
          v7 = (v16 - 1) & v16;
          v11 = __clz(__rbit64(v16)) + (v15 << 6);
          v9 = v15;
          goto LABEL_7;
        }
        if (v15 + 2 < v41)
        {
          v16 = *(_QWORD *)(v40 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_11;
          }
          v29 = v15 + 3;
          if (v15 + 3 < v41)
          {
            v16 = *(_QWORD *)(v40 + 8 * v29);
            if (!v16)
            {
              while (1)
              {
                v15 = v29 + 1;
                if (__OFADD__(v29, 1))
                  break;
                if (v15 >= v41)
                {
                  v9 = v41 - 1;
                  goto LABEL_16;
                }
                v16 = *(_QWORD *)(v40 + 8 * v15);
                ++v29;
                if (v16)
                  goto LABEL_11;
              }
              __break(1u);
              goto LABEL_60;
            }
            v15 += 3;
            goto LABEL_11;
          }
          v9 = v15 + 2;
        }
      }
    }
LABEL_16:
    v7 = 0;
    v49 = 0;
    memset(v48, 0, sizeof(v48));
    v47 = 0u;
LABEL_17:
    sub_22AA7AC8C((uint64_t)&v47, (uint64_t)&v50);
    v17 = v51;
    if (!v51)
      break;
    v18 = v50;
    sub_22A9A1880(&v52, (uint64_t)&v47);
    OUTLINED_FUNCTION_5_1();
    v19 = *v8;
    OUTLINED_FUNCTION_47_3();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v8 = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_52_15();
      v19 = v30;
      *v8 = v30;
    }
    v21 = *(_QWORD *)(v19 + 16);
    v22 = v21 + 1;
    if (v21 >= *(_QWORD *)(v19 + 24) >> 1)
    {
      OUTLINED_FUNCTION_52_15();
      v19 = v31;
      *v8 = v31;
    }
    v45 = &type metadata for _JSONKey;
    v46 = sub_22A9E7C90();
    OUTLINED_FUNCTION_48_18();
    v23 = swift_allocObject();
    *(_QWORD *)&v44 = v23;
    *(_QWORD *)(v23 + 16) = v18;
    *(_QWORD *)(v23 + 24) = v17;
    *(_QWORD *)(v23 + 32) = 0;
    *(_BYTE *)(v23 + 40) = 1;
    *(_QWORD *)(v19 + 16) = v22;
    sub_22A9A1880(&v44, v19 + 40 * v21 + 32);
    swift_endAccess();
    v24 = OUTLINED_FUNCTION_22_33((uint64_t)&v47);
    if (v2)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_5_1();
      sub_22AA7A4F8((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
      swift_endAccess();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
      swift_release();
      OUTLINED_FUNCTION_41_14();
      if (v35)
      {
        OUTLINED_FUNCTION_3_58();
        OUTLINED_FUNCTION_21_39();
        v36 = OUTLINED_FUNCTION_19_32();
      }
      else
      {
        OUTLINED_FUNCTION_30_23();
      }
      if (v39 < v22)
      {
        OUTLINED_FUNCTION_5_1();
        OUTLINED_FUNCTION_27_27((uint64_t (*)(uint64_t))sub_22AB5D7B4, (void (*)(uint64_t, uint64_t))sub_22AA37AD8);
        if (!v37)
          goto LABEL_61;
        v38 = v37;
        OUTLINED_FUNCTION_38_23();

      }
      swift_willThrow(v36);
      goto LABEL_52;
    }
    v25 = (void *)v24;
    *(_QWORD *)&v44 = v18;
    *((_QWORD *)&v44 + 1) = v17;
    OUTLINED_FUNCTION_47_3();
    objc_msgSend(v43, sel___swift_setObject_forKeyedSubscript_, v25, sub_22ABE0148());
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_5_1();
    v26 = *v8;
    if (!*(_QWORD *)(*v8 + 16))
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v27 = swift_isUniquelyReferenced_nonNull_native();
    *v8 = v26;
    if ((v27 & 1) == 0)
    {
      sub_22AB5D794();
      v26 = v32;
      *v8 = v32;
    }
    v28 = *(_QWORD *)(v26 + 16);
    if (!v28)
      goto LABEL_54;
    v4 = (uint64_t *)(v28 - 1);
    __swift_destroy_boxed_opaque_existential_1(v26 + 40 * (v28 - 1) + 32);
    *(_QWORD *)(v26 + 16) = v4;
    *v8 = v26;
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
    if (v7)
      goto LABEL_6;
  }
  swift_release();
  OUTLINED_FUNCTION_41_14();
  if (v33)
  {
    OUTLINED_FUNCTION_3_58();
    OUTLINED_FUNCTION_21_39();
    OUTLINED_FUNCTION_19_32();
  }
  else
  {
    OUTLINED_FUNCTION_30_23();
  }
  if (v39 >= (uint64_t)v4)
  {
LABEL_52:

    OUTLINED_FUNCTION_29_23();
    return;
  }
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_27_27((uint64_t (*)(uint64_t))sub_22AB5D7B4, (void (*)(uint64_t, uint64_t))sub_22AA37AD8);
  if (v34)
  {
    OUTLINED_FUNCTION_38_23();
    goto LABEL_52;
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
}

void sub_22AA7A4F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    sub_22AA7A7EC((uint64_t)&v5);
    if (v6)
    {
      sub_22A9A1880(&v5, a1);
    }
    else
    {
      sub_22A9CF82C((uint64_t)&v5, &qword_255B14610);
      v3 = OUTLINED_FUNCTION_44_17();
      sub_22AA7A624(v3, v4);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_22AA7A564(_OWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    sub_22AA7A85C(&v5);
    if (v6)
    {
      sub_22A9C38BC(&v5, a1);
    }
    else
    {
      sub_22A9CF82C((uint64_t)&v5, qword_2540E86F8);
      v3 = OUTLINED_FUNCTION_44_17();
      sub_22AA7A6C0(v3, v4);
    }
  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_22AA7A5D0(_QWORD *a1, _QWORD *(*a2)(uint64_t *__return_ptr, _QWORD))
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  result = a2(&v4, *a1);
  if (!v2)
    return (_QWORD *)v4;
  return result;
}

void sub_22AA7A60C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_22AA79624(a1, a2);
}

void sub_22AA7A624(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB5D794();
    v5 = v8;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v5 + 40 * a1;
    sub_22A9A1880((__int128 *)(v7 + 32), a2);
    sub_22AA37CA8((char *)(v7 + 72), v6 - 1 - a1, (char *)(v7 + 32));
    *(_QWORD *)(v5 + 16) = v6 - 1;
    *v2 = v5;
  }
}

void sub_22AA7A6C0(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB5D7A4();
    v5 = v8;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v5 + 32 * a1;
    sub_22A9C38BC((_OWORD *)(v7 + 32), a2);
    sub_22AA37C50((char *)(v7 + 64), v6 - 1 - a1, (char *)(v7 + 32));
    *(_QWORD *)(v5 + 16) = v6 - 1;
    *v2 = v5;
  }
}

void sub_22AA7A758(unint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v7 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v7;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v7 < 0 || (v7 & 0x4000000000000000) != 0)
  {
    v7 = a2(v7);
    *v3 = v7;
  }
  v9 = v7 & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v10 <= a1)
  {
    __break(1u);
  }
  else
  {
    v11 = v10 - 1;
    a3(v9 + 8 * a1 + 40, v10 - 1 - a1);
    *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v11;
    sub_22ABDF014();
    OUTLINED_FUNCTION_38();
  }
}

void sub_22AA7A7EC(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB5D794();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v4 - 1;
    sub_22A9A1880((__int128 *)(v3 + 40 * (v4 - 1) + 32), a1);
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
  else
  {
    __break(1u);
  }
}

void sub_22AA7A85C(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB5D7A4();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v4 - 1;
    sub_22A9C38BC((_OWORD *)(v3 + 32 * (v4 - 1) + 32), a1);
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
  else
  {
    __break(1u);
  }
}

void sub_22AA7A8C8(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = a1(v3);
    *v1 = v3;
  }
  v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v5 - 1;
    sub_22ABDF014();
    OUTLINED_FUNCTION_21();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22AA7A938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6)
{
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  ValueMetadata *v16;
  unint64_t v17;

  v16 = &type metadata for _JSONKey;
  v17 = sub_22A9E7C90();
  OUTLINED_FUNCTION_48_18();
  v12 = swift_allocObject();
  *(_QWORD *)&v15 = v12;
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  *(_QWORD *)(v12 + 32) = a4;
  *(_BYTE *)(v12 + 40) = a5 & 1;
  v13 = *a6;
  *(_QWORD *)(v13 + 16) = a1 + 1;
  return sub_22A9A1880(&v15, v13 + 40 * a1 + 32);
}

_QWORD *sub_22AA7A9D8@<X0>(_QWORD *a1@<X0>, _QWORD *(*a2)(uint64_t *__return_ptr, _QWORD)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;

  result = sub_22AA7A5D0(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

void sub_22AA7AA00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_22ABDD1C0();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_22AA7AA7C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B145E8);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_22A9D14F0(v2, v0);
    v7 = sub_22ABDD148();
    sub_22A9D1570(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x22AA7AB50);
    }
  }
  return v4;
}

unint64_t sub_22AA7AB68()
{
  unint64_t result;

  result = qword_255B145D8;
  if (!qword_255B145D8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABFA8B4, &type metadata for InlineData);
    atomic_store(result, (unint64_t *)&qword_255B145D8);
  }
  return result;
}

unint64_t sub_22AA7ABA4()
{
  unint64_t result;

  result = qword_255B145E0;
  if (!qword_255B145E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABFA88C, &type metadata for DataReference);
    atomic_store(result, (unint64_t *)&qword_255B145E0);
  }
  return result;
}

uint64_t sub_22AA7ABE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;

  return sub_22AA797C0(a1, a2, a3, a4, v5, a5);
}

unint64_t sub_22AA7ABF8()
{
  unint64_t result;

  result = qword_2540E8290;
  if (!qword_2540E8290)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABFBC00, &type metadata for ShapedArrayReference);
    atomic_store(result, (unint64_t *)&qword_2540E8290);
  }
  return result;
}

uint64_t sub_22AA7AC34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_18();
  return swift_deallocObject();
}

uint64_t sub_22AA7AC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;

  return sub_22AA79A50(a1, a2, a3, a4, v5, a5);
}

uint64_t sub_22AA7AC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;

  return sub_22AA79CE4(a1, a2, a3, a4, v5, a5);
}

uint64_t sub_22AA7AC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA7ACD4()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_18();
  return swift_deallocObject();
}

void sub_22AA7ACF4(_QWORD *a1)
{
  if (!*a1)
  {
    _s19IntermediateEncoderCMa();
    OUTLINED_FUNCTION_61();
  }
  OUTLINED_FUNCTION_0_5();
}

uint64_t OUTLINED_FUNCTION_0_48()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_58()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_6_60()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22A9A1A28(v0, v1 - 120);
}

uint64_t OUTLINED_FUNCTION_7_56()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_8_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;

  a14 = a1;
  a10 = v15;
  a11 = v14;
  return sub_22AA788D0(&a10);
}

void OUTLINED_FUNCTION_12_42()
{
  void *v0;

  sub_22AA46118(v0);
}

uint64_t OUTLINED_FUNCTION_13_50()
{
  return sub_22ABDE828();
}

uint64_t OUTLINED_FUNCTION_15_41()
{
  return sub_22AA78EA8();
}

uint64_t OUTLINED_FUNCTION_17_34(uint64_t a1)
{
  sub_22AA79778(a1);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_39(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_19_32()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_39()
{
  return sub_22ABDFB60();
}

uint64_t OUTLINED_FUNCTION_22_33(uint64_t a1)
{
  return sub_22AA788D0(a1);
}

uint64_t OUTLINED_FUNCTION_23_35()
{
  return sub_22ABDE930();
}

uint64_t OUTLINED_FUNCTION_24_31()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_25_26()
{
  return 0x7974696E69666E49;
}

uint64_t OUTLINED_FUNCTION_26_26()
{
  return 0x74696E69666E492DLL;
}

void OUTLINED_FUNCTION_27_27(uint64_t (*a1)(uint64_t), void (*a2)(uint64_t, uint64_t))
{
  sub_22AA786C4(a1, a2);
}

uint64_t OUTLINED_FUNCTION_29_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35_16()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_38_23()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_44_17()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) - 1;
}

uint64_t OUTLINED_FUNCTION_45_14()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_46_16()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_49_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_16()
{
  return sub_22ABDE84C();
}

void OUTLINED_FUNCTION_52_15()
{
  sub_22AA35D20();
}

void OUTLINED_FUNCTION_53_18(_QWORD *a1)
{
  uint64_t *v1;

  sub_22A9A0B88(a1, v1);
}

uint64_t OUTLINED_FUNCTION_54_11()
{
  return sub_22AA78EA8();
}

ValueMetadata *type metadata accessor for XGBoostError()
{
  return &type metadata for XGBoostError;
}

uint64_t sub_22AA7AF68(uint64_t a1)
{
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA7AF98()
{
  uint64_t *v0;

  return sub_22AA7AF68(*v0);
}

uint64_t sub_22AA7AFA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22AA7B028(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  a1[24] = a2[24];
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AA7B150(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy200_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t sub_22AA7B32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA7B428(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 200))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA7B468(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for XGBoostArtifact()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t sub_22AA7B4E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE __dst[152];
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_22AB4CDFC();
    v2 = v12;
    v4 = (char *)(a1 + 32);
    do
    {
      memcpy(__dst, v4, sizeof(__dst));
      sub_22AA82C38((uint64_t)__dst);
      v5 = sub_22AA7EAEC();
      v7 = v6;
      sub_22AA82D1C((uint64_t)__dst);
      v12 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      if (v8 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_22AB4CDFC();
        v2 = v12;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      v9 = v2 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      v4 += 152;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_22AA7B5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD __dst[20];
  uint64_t v20;

  v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v3)
  {
    sub_22AA7C7D8(a3);
    return;
  }
  v20 = MEMORY[0x24BEE4AF8];
  sub_22AB4D164();
  if (a2 >= a1 && (v3 & 0x8000000000000000) == 0)
  {
    v16 = *(_QWORD *)(a3 + 176);
    v17 = *(_QWORD *)(a3 + 184);
    v15 = a3;
    v6 = v20;
    v7 = a1;
    v8 = (char *)(v17 + 152 * a1 + 32);
    while (a2 != v7)
    {
      if (a1 < 0)
        goto LABEL_16;
      if (v7 >= *(_QWORD *)(v17 + 16))
        goto LABEL_17;
      memcpy(__dst, v8, 0x98uLL);
      if (v7 >= *(_QWORD *)(v16 + 16))
        goto LABEL_18;
      v9 = *(_QWORD *)(v16 + 32 + 8 * v7);
      v10 = *(_QWORD *)(__dst[5] + 16);
      sub_22AA82C38((uint64_t)__dst);
      sub_22AA7B950(0, v10, __dst);
      v12 = v11;
      v20 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      if (v13 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_22AB4D164();
        v6 = v20;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      v14 = v6 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v12;
      *(_QWORD *)(v14 + 40) = v9;
      ++v7;
      v8 += 152;
      if (a2 == v7)
      {
        sub_22AA7C7D8(v15);
        return;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_22AA7B79C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_22AB4CDFC();
    v2 = v12;
    v4 = a1 + 32;
    do
    {
      v5 = sub_22ABDF248();
      v11 = v6;
      sub_22AA2FBE8();
      sub_22ABDEAEC();
      if ((sub_22ABDF698() & 1) != 0 || (sub_22ABDF698() & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v9 = sub_22ABDF698();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0)
          sub_22ABDEDC8();
      }
      v7 = *(_QWORD *)(v12 + 16);
      if (v7 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_22AB4CDFC();
      *(_QWORD *)(v12 + 16) = v7 + 1;
      v8 = v12 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v5;
      *(_QWORD *)(v8 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_22AA7B950(int64_t a1, int64_t a2, _QWORD *a3)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v7;
  int64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unsigned int v26;
  unsigned __int8 v27;
  char v28;
  uint64_t v29;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v5 = v3;
  if (!v4)
  {
    sub_22AA82D1C((uint64_t)a3);
    return;
  }
  v29 = MEMORY[0x24BEE4AF8];
  sub_22AB4D730();
  if ((v4 & 0x8000000000000000) == 0)
  {
    v7 = v29;
    v8 = a1;
    while (a2 != v8)
    {
      v22 = v8;
      sub_22AA82994((unint64_t *)&v22, a3, (uint64_t)&v23);
      if (v5)
      {
        swift_release();
        sub_22AA82D1C((uint64_t)a3);
        return;
      }
      v5 = 0;
      v9 = v23;
      v10 = v24;
      v11 = v25;
      v12 = v27;
      v13 = v26;
      v14 = v28;
      v29 = v7;
      v15 = *(_QWORD *)(v7 + 16);
      if (v15 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        v18 = v24;
        v19 = v23;
        v17 = v25;
        sub_22AB4D730();
        v11 = v17;
        v10 = v18;
        v9 = v19;
        v7 = v29;
      }
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = v7 + 56 * v15;
      *(_OWORD *)(v16 + 32) = v9;
      *(_OWORD *)(v16 + 48) = v10;
      *(_OWORD *)(v16 + 64) = v11;
      *(_BYTE *)(v16 + 84) = (v13 | (unint64_t)(v12 << 32)) >> 32;
      *(_DWORD *)(v16 + 80) = v13;
      *(_BYTE *)(v16 + 85) = v14;
      if (a2 < a1)
        goto LABEL_16;
      if (v8 >= a2)
        goto LABEL_17;
      if (a2 == ++v8)
      {
        sub_22AA82D1C((uint64_t)a3);
        return;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_22AA7BAF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_22AB4D538();
    result = v8;
    v4 = a1 + 72;
    do
    {
      v5 = v4 - 40;
      if (!*(_BYTE *)(v4 + 13))
        v5 = v4;
      v6 = *(_DWORD *)(v5 + 4);
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      if (v7 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_22AB4D538();
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_DWORD *)(result + 4 * v7 + 32) = v6;
      v4 += 56;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_22AA7BBC0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD __src[20];
  uint64_t v19;

  v19 = MEMORY[0x24BEE4AF8];
  sub_22AB4D10C(0, 0, 0);
  v6 = v19;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = a1 + 1;
  v9 = __OFADD__(a1, 1);
  result = sub_22ABDEAEC();
  if (v9)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    v11 = v7 + 1;
    v12 = (uint64_t *)(a2 + 40);
    while (--v11)
    {
      v14 = *(v12 - 1);
      v13 = *v12;
      sub_22ABDEAEC();
      a3(__src, a1, v14, v13);
      swift_bridgeObjectRelease();
      v19 = v6;
      v16 = *(_QWORD *)(v6 + 16);
      v15 = *(_QWORD *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_22AB4D10C(v15 > 1, v16 + 1, 1);
        v6 = v19;
      }
      a1 = v8;
      v12 += 2;
      *(_QWORD *)(v6 + 16) = v16 + 1;
      result = (uint64_t)memcpy((void *)(v6 + 152 * v16 + 32), __src, 0x98uLL);
      if (__OFADD__(v8++, 1))
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

void sub_22AA7BD0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _BYTE *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v15[56];
  uint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  sub_22AB4CE30();
  v5 = v16;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = a1 + 1;
  v8 = __OFADD__(a1, 1);
  sub_22ABDEAEC();
  if (v8)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    v9 = a2 + 32;
    v10 = v6 + 1;
    while (--v10)
    {
      sub_22AA82E44(v9, (uint64_t)v15, &qword_255B14650);
      v11 = a3(a1, v15);
      v16 = v5;
      v12 = *(_QWORD *)(v5 + 16);
      if (v12 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_22AB4CE30();
        v5 = v16;
      }
      a1 = v7;
      v9 += 56;
      *(_QWORD *)(v5 + 16) = v12 + 1;
      *(_QWORD *)(v5 + 8 * v12 + 32) = v11;
      if (__OFADD__(v7++, 1))
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
}

void sub_22AA7BE40()
{
  qword_255B47D98 = (uint64_t)&unk_24F4B86C8;
}

uint64_t sub_22AA7BE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v1 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v1 + 16) = xmmword_22ABE9FB0;
  sub_22AA7C070();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_2_1();
  *(_QWORD *)(v1 + 32) = 0x72656E7261656C22;
  *(_QWORD *)(v1 + 40) = 0xEA00000000003A22;
  v2 = *(_QWORD *)(v0 + 192);
  v13 = v2;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v11 = v1;
    v12 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_118_2();
    v4 = v2 + 32;
    do
    {
      v4 += 8;
      v5 = OUTLINED_FUNCTION_14_42();
      v7 = v6;
      v8 = *(_QWORD *)(v12 + 16);
      if (v8 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_22AB4CDFC();
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v9 = v12 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      --v3;
    }
    while (v3);
    sub_22A9E07F0((uint64_t)&v13);
    v1 = v11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  sub_22AA82BF4();
  OUTLINED_FUNCTION_18_40();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_146_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v1 + 48) = 0x6E6F697372657622;
  *(_QWORD *)(v1 + 56) = 0xEB000000005B3A22;
  OUTLINED_FUNCTION_18_40();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  return 123;
}

uint64_t sub_22AA7C070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  __int128 v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v0 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v0 + 16) = xmmword_22ABF3EC0;
  *(_QWORD *)(v0 + 32) = 0x7562697274746122;
  *(_QWORD *)(v0 + 40) = 0xEF7D7B3A22736574;
  OUTLINED_FUNCTION_54_12();
  *(_QWORD *)(v1 + 48) = 0xD000000000000012;
  *(_QWORD *)(v1 + 56) = v2;
  OUTLINED_FUNCTION_54_12();
  *(_QWORD *)(v3 + 64) = 0xD000000000000012;
  *(_QWORD *)(v3 + 72) = v4;
  sub_22ABDF7A0();
  OUTLINED_FUNCTION_111_0();
  OUTLINED_FUNCTION_54_12();
  *(_QWORD *)&v10 = v6;
  *((_QWORD *)&v10 + 1) = v5;
  sub_22AA7CA98();
  OUTLINED_FUNCTION_160_0();
  OUTLINED_FUNCTION_2_1();
  *(_OWORD *)(v0 + 80) = v10;
  OUTLINED_FUNCTION_138_1();
  OUTLINED_FUNCTION_111_0();
  sub_22AA7CBB8();
  OUTLINED_FUNCTION_160_0();
  OUTLINED_FUNCTION_2_1();
  *(_QWORD *)(v0 + 96) = 0xD000000000000016;
  *(_QWORD *)(v0 + 104) = 0x800000022ABE4000;
  strcpy((char *)v9, "\"objective\":");
  BYTE5(v9[1]) = 0;
  HIWORD(v9[1]) = -5120;
  sub_22AA7CDA8();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_63_1();
  v7 = v9[1];
  *(_QWORD *)(v0 + 112) = v9[0];
  *(_QWORD *)(v0 + 120) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  OUTLINED_FUNCTION_80_10();
  OUTLINED_FUNCTION_17_35();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  return 123;
}

uint64_t sub_22AA7C24C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x72656E7261656CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA7C340(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F6973726576;
  else
    return 0x72656E7261656CLL;
}

void sub_22AA7C370()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[25];
  _QWORD v9[26];
  _BYTE v10[192];
  _BYTE v11[192];
  _BYTE v12[200];

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v7 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14618);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_23_1();
  if (qword_255B0D720 != -1)
    swift_once();
  OUTLINED_FUNCTION_89_4(v2, v2[3]);
  sub_22AA7C67C();
  OUTLINED_FUNCTION_60_5();
  sub_22ABE0298();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    OUTLINED_FUNCTION_58_1();
  }
  else
  {
    sub_22AA7C6B8();
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_87_7(v10, v11);
    OUTLINED_FUNCTION_87_7(v12, v11);
    OUTLINED_FUNCTION_126();
    sub_22AA7C6F4((uint64_t)v10);
    OUTLINED_FUNCTION_161_0(&qword_2540E85E8, v5, MEMORY[0x24BEE1798]);
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_52_16();
    v6 = v9[25];
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_87_7(v8, v10);
    v8[24] = v6;
    sub_22AA7C8BC((uint64_t)v8);
    OUTLINED_FUNCTION_3_8();
    sub_22AA7C7D8((uint64_t)v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    OUTLINED_FUNCTION_87_7(v9, v12);
    v9[24] = v6;
    sub_22AA7C9A8((uint64_t)v9);
    memcpy(v7, v8, 0xC8uLL);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA7C59C()
{
  sub_22AA7E670();
}

uint64_t sub_22AA7C5B8()
{
  char *v0;

  return sub_22AA7C340(*v0);
}

uint64_t sub_22AA7C5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7C24C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA7C5E4()
{
  sub_22AA7C67C();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7C60C()
{
  sub_22AA7C67C();
  return sub_22ABE02F8();
}

void sub_22AA7C634(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE __src[200];

  sub_22AA7C370();
  if (!v1)
    memcpy(a1, __src, 0xC8uLL);
}

unint64_t sub_22AA7C67C()
{
  unint64_t result;

  result = qword_255B14620;
  if (!qword_255B14620)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF414C, &type metadata for XGBoostArtifact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14620);
  }
  return result;
}

unint64_t sub_22AA7C6B8()
{
  unint64_t result;

  result = qword_255B14628;
  if (!qword_255B14628)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4124, &unk_24F4C3628);
    atomic_store(result, (unint64_t *)&qword_255B14628);
  }
  return result;
}

uint64_t sub_22AA7C6F4(uint64_t a1)
{
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA7C7D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA7C8BC(uint64_t a1)
{
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA7C9A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA7CA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v0 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v0 + 16) = xmmword_22ABE9FB0;
  sub_22AA7E2BC();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_2_1();
  *(_QWORD *)(v0 + 32) = 0x3A226C65646F6D22;
  *(_QWORD *)(v0 + 40) = 0xE800000000000000;
  OUTLINED_FUNCTION_157_0();
  v3 = v1;
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = 0xE800000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  OUTLINED_FUNCTION_80_10();
  OUTLINED_FUNCTION_17_35();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  return 123;
}

void sub_22AA7CBB8()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v0 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v0 + 16) = xmmword_22ABF3ED0;
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 32) = 0x63735F6573616222;
  *(_QWORD *)(v0 + 40) = 0xEF22203A2265726FLL;
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_147_0();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_133_0();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 48) = 0x63735F6573616222;
  *(_QWORD *)(v0 + 56) = 0xEF22203A2265726FLL;
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_68_10();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 64) = 0x63735F6573616222;
  *(_QWORD *)(v0 + 72) = 0xEF22203A2265726FLL;
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 80) = 0x7261745F6D756E22;
  *(_QWORD *)(v0 + 88) = 0xEF22203A22746567;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  OUTLINED_FUNCTION_80_10();
  OUTLINED_FUNCTION_17_35();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_38_24();
}

uint64_t sub_22AA7CDA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14[16];
  _BYTE v15[16];
  _QWORD v16[2];
  unint64_t v17;
  unint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v1 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v1 + 16) = xmmword_22ABE8E30;
  OUTLINED_FUNCTION_157_0();
  v17 = v2;
  v18 = 0xE800000000000000;
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v1 + 32) = v17;
  *(_QWORD *)(v1 + 40) = 0xE800000000000000;
  OUTLINED_FUNCTION_107_2(v0 + 16, (uint64_t)v15);
  OUTLINED_FUNCTION_107_2((uint64_t)v15, (uint64_t)v16);
  if (v16[1])
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v17 = 0xD00000000000001BLL;
    v18 = 0x800000022ABE4060;
    OUTLINED_FUNCTION_114_1();
    swift_bridgeObjectRelease();
    strcpy(v14, "{\"num_class\":\"");
    v14[15] = -18;
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_19_33();
    sub_22A9AAD68((uint64_t)v15);
    OUTLINED_FUNCTION_135_1();
    OUTLINED_FUNCTION_19_33();
    OUTLINED_FUNCTION_2_1();
    v3 = v17;
    v4 = v18;
    v5 = *(_QWORD *)(v1 + 16);
    if (v5 >= *(_QWORD *)(v1 + 24) >> 1)
    {
      OUTLINED_FUNCTION_121_2();
      v1 = v11;
    }
    *(_QWORD *)(v1 + 16) = v5 + 1;
    v6 = v1 + 16 * v5;
    *(_QWORD *)(v6 + 32) = v3;
    *(_QWORD *)(v6 + 40) = v4;
  }
  OUTLINED_FUNCTION_107_2(v0 + 32, (uint64_t)v14);
  OUTLINED_FUNCTION_107_2((uint64_t)v14, (uint64_t)&v17);
  if (v18)
  {
    OUTLINED_FUNCTION_68_10();
    OUTLINED_FUNCTION_111_0();
    OUTLINED_FUNCTION_54_12();
    v13 = v7;
    sub_22ABDF7A0();
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_37_6();
    OUTLINED_FUNCTION_16_23();
    OUTLINED_FUNCTION_1_35();
    sub_22A9AAD68((uint64_t)v14);
    OUTLINED_FUNCTION_135_1();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_63_1();
    v8 = *(_QWORD *)(v1 + 16);
    if (v8 >= *(_QWORD *)(v1 + 24) >> 1)
    {
      OUTLINED_FUNCTION_121_2();
      v1 = v12;
    }
    *(_QWORD *)(v1 + 16) = v8 + 1;
    v9 = v1 + 16 * v8;
    *(_QWORD *)(v9 + 32) = 0xD000000000000011;
    *(_QWORD *)(v9 + 40) = v13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  OUTLINED_FUNCTION_80_10();
  sub_22ABDEC18();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  return 123;
}

uint64_t sub_22AA7D08C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE4280 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x76697463656A626FLL && a2 == 0xE900000000000065;
    if (v5 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x746E656964617267 && a2 == 0xEF726574736F6F42)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22AA7D204(char a1)
{
  if (!a1)
    return 0xD000000000000011;
  if (a1 == 1)
    return 0x76697463656A626FLL;
  return 0x746E656964617267;
}

void sub_22AA7D270()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[24];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14670);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_89_4(v2, v2[3]);
  sub_22AA84368();
  sub_22ABE0298();
  if (v0)
  {
    OUTLINED_FUNCTION_125_2();
  }
  else
  {
    v28 = v4;
    sub_22AA843A4();
    sub_22ABDFC8C();
    v6 = v35;
    v26 = v32;
    v27 = v34;
    v7 = v37;
    v25 = v36;
    v8 = v38;
    v9 = v39;
    LOBYTE(v31[0]) = 1;
    sub_22AA843E0();
    v29 = v33;
    OUTLINED_FUNCTION_50_9();
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_54_4();
    OUTLINED_FUNCTION_124_1();
    OUTLINED_FUNCTION_102_2();
    sub_22ABDFC8C();
    v21 = v32;
    v19 = v36;
    v20 = v34;
    sub_22AA8441C();
    v22 = v33;
    OUTLINED_FUNCTION_16_13();
    v24 = v35;
    OUTLINED_FUNCTION_50_9();
    v23 = v37;
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_102_2();
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_27_28();
    v30 = v56;
    v17 = v58;
    v18 = v57;
    v15 = v60;
    v16 = v59;
    v13 = v62;
    v14 = v61;
    v11 = v64;
    v12 = v63;
    v10 = v65;
    v31[0] = v26;
    v31[1] = v29;
    v31[2] = v27;
    v31[3] = v6;
    v31[4] = v25;
    v31[5] = v7;
    v31[6] = v8;
    v31[7] = v9;
    v31[8] = v21;
    v31[9] = v22;
    v31[10] = v20;
    v31[11] = v24;
    v31[12] = v19;
    v31[13] = v23;
    v31[14] = v56;
    v31[15] = v57;
    v31[16] = v58;
    v31[17] = v59;
    v31[18] = v60;
    v31[19] = v61;
    v31[20] = v62;
    v31[21] = v63;
    v31[22] = v64;
    v31[23] = v65;
    sub_22AA7C6F4((uint64_t)v31);
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_25_16();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_125_2();
    v32 = v26;
    v33 = v29;
    v34 = v27;
    v35 = v6;
    v36 = v25;
    v37 = v7;
    v38 = v8;
    v39 = v9;
    v40 = v21;
    v41 = v22;
    v42 = v20;
    v43 = v24;
    v44 = v19;
    v45 = v23;
    v46 = v30;
    v47 = v18;
    v48 = v17;
    v49 = v16;
    v50 = v15;
    v51 = v14;
    v52 = v13;
    v53 = v12;
    v54 = v11;
    v55 = v10;
    sub_22AA7C7D8((uint64_t)&v32);
    OUTLINED_FUNCTION_87_7(v28, v31);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA7D608()
{
  char *v0;

  return sub_22AA7D204(*v0);
}

uint64_t sub_22AA7D610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7D08C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA7D634()
{
  sub_22AA84368();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7D65C()
{
  sub_22AA84368();
  return sub_22ABE02F8();
}

void sub_22AA7D684(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE v3[192];

  sub_22AA7D270();
  if (!v1)
    memcpy(a1, v3, 0xC0uLL);
}

uint64_t sub_22AA7D6CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000022ABE42A0 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5073736F4C676572 && a2 == 0xEC0000006D617261)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_22AA7D81C(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 0xD000000000000016;
  return 0x5073736F4C676572;
}

void sub_22AA7D878()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14748);
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_89_4(v2, v2[3]);
  sub_22AA84F10();
  OUTLINED_FUNCTION_149_0();
  if (v0)
  {
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    LOBYTE(v11) = 0;
    v6 = sub_22ABDFC44();
    v8 = v7;
    v9 = sub_22AA84F4C();
    OUTLINED_FUNCTION_60_5();
    OUTLINED_FUNCTION_60_13();
    if (v9)
    {
      OUTLINED_FUNCTION_13_51();
      OUTLINED_FUNCTION_58_1();
    }
    else
    {
      v10 = sub_22AA84F88();
      OUTLINED_FUNCTION_124_1();
      OUTLINED_FUNCTION_60_13();
      if (!v10)
      {
        OUTLINED_FUNCTION_13_51();
        OUTLINED_FUNCTION_50_9();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
        OUTLINED_FUNCTION_3_8();
        OUTLINED_FUNCTION_27_7();
        OUTLINED_FUNCTION_58_1();
        *v4 = v6;
        v4[1] = v8;
        v4[2] = v11;
        v4[3] = v12;
        v4[4] = v11;
        v4[5] = v12;
        goto LABEL_4;
      }
      OUTLINED_FUNCTION_13_51();
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_27_7();
    }
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_58_1();
  }
LABEL_4:
  OUTLINED_FUNCTION_150_0();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA7DA08(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736F50656C616373 && a2 == 0xEE00746867696557)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22AA7DAB0()
{
  return 0x736F50656C616373;
}

uint64_t sub_22AA7DAD4()
{
  char *v0;

  return sub_22AA7D81C(*v0);
}

uint64_t sub_22AA7DADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7D6CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA7DB00()
{
  sub_22AA84F10();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7DB28()
{
  sub_22AA84F10();
  return sub_22ABE02F8();
}

double sub_22AA7DB50@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  sub_22AA7D878();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void sub_22AA7DB90()
{
  sub_22AA7DCD4();
}

uint64_t sub_22AA7DBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7DA08(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22AA7DBD4()
{
  sub_22AA84524();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7DBFC()
{
  sub_22AA84524();
  return sub_22ABE02F8();
}

uint64_t sub_22AA7DC24@<X0>(uint64_t *a1@<X8>)
{
  return sub_22AA7DEE8(a1);
}

uint64_t sub_22AA7DC50(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7373616C436D756ELL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_22AA7DCD4()
{
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22AA7DCF8()
{
  return 0x7373616C436D756ELL;
}

uint64_t sub_22AA7DD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  void (*v4)(void);
  _QWORD *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_12();
  v16 = v1;
  v17 = v2;
  v4 = v3;
  v6 = v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
  v15 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  v4();
  v12 = (uint64_t)v11;
  OUTLINED_FUNCTION_149_0();
  if (!v0)
  {
    v12 = sub_22ABDFC44();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v8);
  }
  OUTLINED_FUNCTION_9_8();
  return v12;
}

void sub_22AA7DE1C()
{
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22AA7DE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7DC50(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22AA7DE6C()
{
  sub_22AA84560();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7DE94()
{
  sub_22AA84560();
  return sub_22ABE02F8();
}

uint64_t sub_22AA7DEBC@<X0>(uint64_t *a1@<X8>)
{
  return sub_22AA7DEE8(a1);
}

uint64_t sub_22AA7DEE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22AA7DD10();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_22AA7DF1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  OUTLINED_FUNCTION_137_0();
  v1 = OUTLINED_FUNCTION_14_42();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_14_42();
  v6 = v5;
  v7 = OUTLINED_FUNCTION_14_42();
  v9 = v8;
  result = sub_22ABDF248();
  *v0 = v1;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v6;
  v0[4] = v7;
  v0[5] = v9;
  v0[6] = result;
  v0[7] = v11;
  return result;
}

uint64_t sub_22AA7DFC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x75746165466D756ELL && a2 == 0xEA00000000006572;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65677261546D756ELL && a2 == 0xE900000000000074;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7373616C436D756ELL && a2 == 0xE800000000000000;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x726F635365736162 && a2 == 0xE900000000000065)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_22AA7E188(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA7E1C0 + 4 * byte_22ABF3EF0[a1]))(0x75746165466D756ELL, 0xEA00000000006572);
}

uint64_t sub_22AA7E1C0()
{
  return 0x65677261546D756ELL;
}

uint64_t sub_22AA7E1E0()
{
  return 0x7373616C436D756ELL;
}

uint64_t sub_22AA7E1F8()
{
  return 0x726F635365736162;
}

uint64_t sub_22AA7E214()
{
  unsigned __int8 *v0;

  return sub_22AA7E188(*v0);
}

uint64_t sub_22AA7E21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7DFC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA7E240()
{
  sub_22AA84ED4();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7E268()
{
  sub_22AA84ED4();
  return sub_22ABE02F8();
}

double sub_22AA7E290@<D0>(_OWORD *a1@<X8>)
{
  return sub_22AA81598(a1);
}

uint64_t sub_22AA7E2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v1 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v1 + 16) = xmmword_22ABEDF90;
  OUTLINED_FUNCTION_131_1();
  swift_bridgeObjectRelease();
  v15[1] = 0x800000022ABE40A0;
  sub_22AA7E958();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_2_1();
  *(_QWORD *)(v1 + 32) = 0xD000000000000015;
  *(_QWORD *)(v1 + 40) = v15[1];
  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v15, "\"tree_info\":[");
  HIWORD(v15[1]) = -4864;
  v2 = *(_QWORD *)(v0 + 48);
  v16 = v2;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v14 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_118_2();
    v4 = v2 + 32;
    do
    {
      v4 += 8;
      v5 = sub_22ABDFD7C();
      v7 = v6;
      v8 = *(_QWORD *)(v14 + 16);
      if (v8 >= *(_QWORD *)(v14 + 24) >> 1)
        sub_22AB4CDFC();
      *(_QWORD *)(v14 + 16) = v8 + 1;
      v9 = v14 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      --v3;
    }
    while (v3);
    sub_22A9E07F0((uint64_t)&v16);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  sub_22AA82BF4();
  OUTLINED_FUNCTION_18_40();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_54();
  v10 = v15[1];
  *(_QWORD *)(v1 + 48) = v15[0];
  *(_QWORD *)(v1 + 56) = v10;
  strcpy((char *)v15, "\"trees\":[");
  WORD1(v15[1]) = 0;
  HIDWORD(v15[1]) = -385875968;
  v11 = OUTLINED_FUNCTION_50_9();
  sub_22AA7B4E4(v11);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_18_40();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_146_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_54();
  v12 = v15[1];
  *(_QWORD *)(v1 + 64) = v15[0];
  *(_QWORD *)(v1 + 72) = v12;
  OUTLINED_FUNCTION_18_40();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  return 123;
}

uint64_t sub_22AA7E59C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_22AA7E670()
{
  OUTLINED_FUNCTION_27_26();
  sub_22ABE0250();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22AA7E6A0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C65646F6DLL;
  else
    return 1701667182;
}

void sub_22AA7E6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_12();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14768);
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_89_4(v4, v4[3]);
  sub_22AA84FC4();
  sub_22ABE0298();
  if (v0)
  {
    OUTLINED_FUNCTION_9_16();
  }
  else
  {
    LOBYTE(v12) = 0;
    v8 = OUTLINED_FUNCTION_70_7();
    v10 = v9;
    v11 = sub_22AA85000();
    OUTLINED_FUNCTION_54_4();
    OUTLINED_FUNCTION_79_3();
    OUTLINED_FUNCTION_66_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    if (v11)
    {
      OUTLINED_FUNCTION_54();
      OUTLINED_FUNCTION_9_16();
      OUTLINED_FUNCTION_54();
    }
    else
    {
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_60_5();
      OUTLINED_FUNCTION_124_1();
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_9_16();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_25_16();
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_54();
      *v6 = v8;
      v6[1] = v10;
      v6[2] = v12;
      v6[3] = v13;
      v6[4] = v14;
      v6[5] = v15;
      v6[6] = v16;
      v6[7] = v17;
      v6[8] = v18;
      v6[9] = v19;
    }
  }
  OUTLINED_FUNCTION_150_0();
  OUTLINED_FUNCTION_16();
}

void sub_22AA7E86C()
{
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22AA7E894()
{
  char *v0;

  return sub_22AA7E6A0(*v0);
}

uint64_t sub_22AA7E89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7E59C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA7E8C0()
{
  sub_22AA84FC4();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7E8E8()
{
  sub_22AA84FC4();
  return sub_22ABE02F8();
}

void sub_22AA7E910(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE v3[80];

  sub_22AA7E6CC();
  if (!v1)
    memcpy(a1, v3, 0x50uLL);
}

void sub_22AA7E958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v0 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v0 + 16) = xmmword_22ABEDF90;
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_138_1();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 32) = v4[0];
  *(_QWORD *)(v0 + 40) = v4[1];
  OUTLINED_FUNCTION_115_1();
  sub_22ABDF7A0();
  OUTLINED_FUNCTION_1_8();
  strcpy((char *)v4, "\"num_trees\":\"");
  HIWORD(v4[1]) = -4864;
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  v1 = v4[1];
  *(_QWORD *)(v0 + 48) = v4[0];
  *(_QWORD *)(v0 + 56) = v1;
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_131_1();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_54_12();
  v4[1] = v2;
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_2_54();
  v3 = v4[1];
  *(_QWORD *)(v0 + 64) = 0xD000000000000014;
  *(_QWORD *)(v0 + 72) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  OUTLINED_FUNCTION_80_10();
  OUTLINED_FUNCTION_17_35();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_38_24();
}

uint64_t sub_22AA7EAEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[2];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v1 = v0;
  OUTLINED_FUNCTION_50_17();
  OUTLINED_FUNCTION_6_30();
  OUTLINED_FUNCTION_54_12();
  v113[0] = 0xD000000000000010;
  v113[1] = v2;
  v3 = OUTLINED_FUNCTION_22_21();
  v4 = sub_22AA7B79C(v3);
  OUTLINED_FUNCTION_23();
  v119 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  sub_22AA82BF4();
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  v5 = v113[1];
  OUTLINED_FUNCTION_61_11();
  v7 = v6;
  v8 = *(_QWORD *)(v6 + 16);
  v9 = *(_QWORD *)(v6 + 24) >> 1;
  v10 = v8 + 1;
  if (v9 <= v8)
  {
    OUTLINED_FUNCTION_61_11();
    v7 = v93;
    v9 = *(_QWORD *)(v93 + 24) >> 1;
  }
  *(_QWORD *)(v7 + 16) = v10;
  v11 = v7 + 16 * v8;
  *(_QWORD *)(v11 + 32) = 0xD000000000000010;
  *(_QWORD *)(v11 + 40) = v5;
  if ((uint64_t)v9 < (uint64_t)(v8 + 2))
  {
    OUTLINED_FUNCTION_16_37();
    v7 = v94;
  }
  *(_QWORD *)(v7 + 16) = v8 + 2;
  v12 = v7 + 16 * v10;
  *(_QWORD *)(v12 + 32) = 0x726F676574616322;
  *(_QWORD *)(v12 + 40) = 0xEF5D5B3A22736569;
  v13 = *(_QWORD *)(v7 + 16);
  v14 = *(_QWORD *)(v7 + 24) >> 1;
  v15 = v13 + 1;
  if (v14 <= v13)
  {
    OUTLINED_FUNCTION_61_11();
    v7 = v95;
    v14 = *(_QWORD *)(v95 + 24) >> 1;
  }
  *(_QWORD *)(v7 + 16) = v15;
  v16 = v7 + 16 * v13;
  *(_QWORD *)(v16 + 32) = 0xD000000000000015;
  *(_QWORD *)(v16 + 40) = 0x800000022ABE40E0;
  v17 = v13 + 2;
  if ((uint64_t)v14 < v17)
  {
    OUTLINED_FUNCTION_16_37();
    v7 = v96;
  }
  *(_QWORD *)(v7 + 16) = v17;
  v18 = v7 + 16 * v15;
  *(_QWORD *)(v18 + 32) = 0xD000000000000018;
  *(_QWORD *)(v18 + 40) = 0x800000022ABE4100;
  v19 = *(_QWORD *)(v7 + 16);
  if (v19 >= *(_QWORD *)(v7 + 24) >> 1)
  {
    OUTLINED_FUNCTION_16_37();
    v7 = v97;
  }
  *(_QWORD *)(v7 + 16) = v19 + 1;
  v109 = v7;
  v20 = v7 + 16 * v19;
  *(_QWORD *)(v20 + 32) = 0xD000000000000015;
  *(_QWORD *)(v20 + 40) = 0x800000022ABE4120;
  OUTLINED_FUNCTION_50_17();
  OUTLINED_FUNCTION_6_30();
  OUTLINED_FUNCTION_54_12();
  v113[0] = 0xD000000000000010;
  v113[1] = v21;
  v22 = v1[3];
  v119 = v22;
  v23 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v22 + 16))
  {
    v118 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_22_34();
    v23 = v118;
    v24 = (uint64_t *)(v22 + 32);
    v1 = (uint64_t *)MEMORY[0x24BEE17D8];
    do
    {
      v25 = *v24++;
      v117 = v25;
      OUTLINED_FUNCTION_71_8();
      OUTLINED_FUNCTION_77_8();
      v118 = v23;
      OUTLINED_FUNCTION_110_4();
      if (v27)
      {
        OUTLINED_FUNCTION_91_5(v26);
        OUTLINED_FUNCTION_36_21();
        v23 = v118;
      }
      OUTLINED_FUNCTION_78_6();
    }
    while (!v28);
    sub_22A9E07F0((uint64_t)&v119);
    OUTLINED_FUNCTION_93_4();
  }
  v118 = v23;
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_21_40();
  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_2_54();
  v29 = v113[0];
  v30 = v113[1];
  v31 = v109;
  v32 = *(_QWORD *)(v109 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_8_43();
    v31 = v98;
  }
  *(_QWORD *)(v31 + 16) = v22;
  v33 = v31 + 16 * v32;
  *(_QWORD *)(v33 + 32) = v29;
  *(_QWORD *)(v33 + 40) = v30;
  v113[0] = 0x3A22646922;
  v113[1] = 0xE500000000000000;
  v118 = *v1;
  sub_22ABDFD7C();
  OUTLINED_FUNCTION_143_0();
  OUTLINED_FUNCTION_23();
  v34 = *(_QWORD *)(v31 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_8_43();
    v31 = v99;
  }
  *(_QWORD *)(v31 + 16) = v22;
  OUTLINED_FUNCTION_30_24(v31 + 16 * v34);
  sub_22ABDF7A0();
  OUTLINED_FUNCTION_6_30();
  OUTLINED_FUNCTION_105_4();
  v35 = v1[1];
  v118 = v35;
  v36 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v35 + 16))
  {
    v117 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_22_34();
    v36 = v117;
    v37 = (uint64_t *)(v35 + 32);
    v1 = (uint64_t *)MEMORY[0x24BEE17D8];
    do
    {
      v38 = *v37++;
      v116 = v38;
      OUTLINED_FUNCTION_71_8();
      OUTLINED_FUNCTION_77_8();
      v117 = v36;
      OUTLINED_FUNCTION_106_2();
      if (v27)
      {
        OUTLINED_FUNCTION_91_5(v39);
        OUTLINED_FUNCTION_36_21();
        v36 = v117;
      }
      OUTLINED_FUNCTION_79_7();
    }
    while (!v28);
    sub_22A9E07F0((uint64_t)&v118);
    OUTLINED_FUNCTION_93_4();
  }
  v117 = v36;
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_21_40();
  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_2_54();
  v40 = v31;
  v41 = *(_QWORD *)(v31 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_73_5();
    v40 = v100;
  }
  *(_QWORD *)(v40 + 16) = v35;
  OUTLINED_FUNCTION_30_24(v40 + 16 * v41);
  OUTLINED_FUNCTION_68_10();
  OUTLINED_FUNCTION_6_30();
  OUTLINED_FUNCTION_54_12();
  v113[0] = 0xD000000000000010;
  v113[1] = v42;
  v43 = OUTLINED_FUNCTION_22_21();
  v44 = OUTLINED_FUNCTION_136_1(v43);
  OUTLINED_FUNCTION_23();
  v117 = v44;
  v45 = OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  v46 = v113[1];
  v47 = *(_QWORD *)(v40 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_73_5();
    v40 = v101;
  }
  *(_QWORD *)(v40 + 16) = v45;
  v110 = v40;
  v48 = v40 + 16 * v47;
  *(_QWORD *)(v48 + 32) = 0xD000000000000010;
  *(_QWORD *)(v48 + 40) = v46;
  strcpy((char *)v113, "\"parents\":[");
  HIDWORD(v113[1]) = -352321536;
  v49 = v1[4];
  v117 = v49;
  v50 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v49 + 16))
  {
    v116 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_22_34();
    v50 = v116;
    v51 = (uint64_t *)(v49 + 32);
    v1 = (uint64_t *)MEMORY[0x24BEE17D8];
    do
    {
      v52 = *v51++;
      v115 = v52;
      OUTLINED_FUNCTION_71_8();
      OUTLINED_FUNCTION_77_8();
      v116 = v50;
      OUTLINED_FUNCTION_110_4();
      if (v27)
      {
        OUTLINED_FUNCTION_91_5(v53);
        OUTLINED_FUNCTION_36_21();
        v50 = v116;
      }
      OUTLINED_FUNCTION_78_6();
    }
    while (!v28);
    sub_22A9E07F0((uint64_t)&v117);
    OUTLINED_FUNCTION_93_4();
  }
  v116 = v50;
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_21_40();
  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_2_54();
  v54 = *(_QWORD *)(v110 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_16_37();
    v55 = v102;
  }
  *(_QWORD *)(v55 + 16) = v49;
  v111 = v55;
  OUTLINED_FUNCTION_30_24(v55 + 16 * v54);
  sub_22ABDF7A0();
  OUTLINED_FUNCTION_6_30();
  OUTLINED_FUNCTION_105_4();
  v56 = v1[2];
  v116 = v56;
  v57 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v56 + 16))
  {
    v115 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_22_34();
    v57 = v115;
    v58 = (uint64_t *)(v56 + 32);
    v1 = (uint64_t *)MEMORY[0x24BEE17D8];
    do
    {
      v59 = *v58++;
      v114 = v59;
      OUTLINED_FUNCTION_71_8();
      OUTLINED_FUNCTION_77_8();
      v115 = v57;
      OUTLINED_FUNCTION_106_2();
      if (v27)
      {
        OUTLINED_FUNCTION_91_5(v60);
        OUTLINED_FUNCTION_36_21();
        v57 = v115;
      }
      OUTLINED_FUNCTION_79_7();
    }
    while (!v28);
    sub_22A9E07F0((uint64_t)&v116);
    OUTLINED_FUNCTION_93_4();
  }
  v115 = v57;
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_21_40();
  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_2_54();
  v61 = v113[0];
  v62 = v113[1];
  v63 = v111;
  v64 = *(_QWORD *)(v111 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_72_8();
    v63 = v103;
  }
  *(_QWORD *)(v63 + 16) = v56;
  v65 = v63 + 16 * v64;
  *(_QWORD *)(v65 + 32) = v61;
  *(_QWORD *)(v65 + 40) = v62;
  OUTLINED_FUNCTION_131_1();
  OUTLINED_FUNCTION_6_30();
  OUTLINED_FUNCTION_54_12();
  v113[0] = v67;
  v113[1] = v66;
  v68 = OUTLINED_FUNCTION_22_21();
  v69 = OUTLINED_FUNCTION_136_1(v68);
  OUTLINED_FUNCTION_23();
  v115 = v69;
  v70 = OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  v71 = v113[0];
  v72 = v113[1];
  v73 = *(_QWORD *)(v63 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_72_8();
    v63 = v104;
  }
  *(_QWORD *)(v63 + 16) = v70;
  v74 = v63 + 16 * v73;
  *(_QWORD *)(v74 + 32) = v71;
  *(_QWORD *)(v74 + 40) = v72;
  v113[0] = 0;
  v113[1] = 0xE000000000000000;
  sub_22ABDF7A0();
  OUTLINED_FUNCTION_6_30();
  OUTLINED_FUNCTION_105_4();
  v75 = v1[7];
  v115 = v75;
  v76 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v75 + 16))
  {
    v114 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_22_34();
    v76 = v114;
    v77 = v75 + 32;
    v1 = (uint64_t *)MEMORY[0x24BEE17D8];
    do
    {
      v77 += 8;
      OUTLINED_FUNCTION_71_8();
      OUTLINED_FUNCTION_77_8();
      v114 = v76;
      OUTLINED_FUNCTION_110_4();
      if (v27)
      {
        OUTLINED_FUNCTION_91_5(v78);
        OUTLINED_FUNCTION_36_21();
        v76 = v114;
      }
      OUTLINED_FUNCTION_78_6();
    }
    while (!v28);
    sub_22A9E07F0((uint64_t)&v115);
    OUTLINED_FUNCTION_93_4();
  }
  v114 = v76;
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_21_40();
  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_2_54();
  v79 = *(_QWORD *)(v63 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_16_37();
    v80 = v105;
  }
  *(_QWORD *)(v80 + 16) = v75;
  v112 = v80;
  OUTLINED_FUNCTION_30_24(v80 + 16 * v79);
  OUTLINED_FUNCTION_147_0();
  OUTLINED_FUNCTION_6_30();
  strcpy((char *)v113, "\"split_type\":[");
  HIBYTE(v113[1]) = -18;
  v81 = v1[8];
  v114 = v81;
  if (*(_QWORD *)(v81 + 16))
  {
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_22_34();
    v82 = v81 + 32;
    v1 = (uint64_t *)MEMORY[0x24BEE17D8];
    do
    {
      v82 += 8;
      OUTLINED_FUNCTION_71_8();
      OUTLINED_FUNCTION_77_8();
      OUTLINED_FUNCTION_106_2();
      if (v27)
      {
        OUTLINED_FUNCTION_91_5(v83);
        OUTLINED_FUNCTION_36_21();
      }
      OUTLINED_FUNCTION_79_7();
    }
    while (!v28);
    sub_22A9E07F0((uint64_t)&v114);
    OUTLINED_FUNCTION_93_4();
  }
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_21_40();
  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_2_54();
  v84 = v113[1];
  v85 = v112;
  v86 = *(_QWORD *)(v112 + 16);
  OUTLINED_FUNCTION_56_13();
  if (v27)
  {
    OUTLINED_FUNCTION_8_43();
    v85 = v106;
  }
  *(_QWORD *)(v85 + 16) = v81;
  OUTLINED_FUNCTION_30_24(v85 + 16 * v86);
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_6_30();
  v113[0] = 0x7365685F6D757322;
  v113[1] = 0xEF5B3A226E616973;
  v87 = v1[10];
  v88 = OUTLINED_FUNCTION_22_21();
  v89 = OUTLINED_FUNCTION_136_1(v88);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_77_8();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_127_2();
  if (v27)
  {
    OUTLINED_FUNCTION_8_43();
    v85 = v107;
  }
  *(_QWORD *)(v85 + 16) = v87;
  v90 = v85 + 16 * v84;
  *(_QWORD *)(v90 + 32) = v113;
  *(_QWORD *)(v90 + 40) = v89;
  strcpy((char *)v113, "\"tree_param\":");
  HIWORD(v113[1]) = -4864;
  sub_22AA80004();
  OUTLINED_FUNCTION_143_0();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_127_2();
  if (v27)
  {
    OUTLINED_FUNCTION_8_43();
    v85 = v108;
  }
  *(_QWORD *)(v85 + 16) = v87;
  v91 = v85 + 16 * v84;
  *(_QWORD *)(v91 + 32) = v1 + 11;
  *(_QWORD *)(v91 + 40) = v89;
  v113[0] = v85;
  OUTLINED_FUNCTION_0_49();
  OUTLINED_FUNCTION_51_1();
  v113[0] = 123;
  v113[1] = 0xE100000000000000;
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  return v113[0];
}

uint64_t sub_22AA7F648(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000010 && a2 == 0x800000022ABE42C0 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6F666E4965657274 && a2 == 0xE800000000000000;
    if (v5 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7365657274 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22AA7F788(char a1)
{
  if (!a1)
    return 0xD000000000000010;
  if (a1 == 1)
    return 0x6F666E4965657274;
  return 0x7365657274;
}

void sub_22AA7F7E0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B147F0);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_89_4(v2, v2[3]);
  sub_22AA85894();
  sub_22ABE0298();
  if (v0)
  {
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    sub_22AA858D0();
    OUTLINED_FUNCTION_79_3();
    OUTLINED_FUNCTION_126();
    v7 = OUTLINED_FUNCTION_161_0(&qword_2540E85E8, v6, MEMORY[0x24BEE1798]);
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_5();
    OUTLINED_FUNCTION_79_3();
    v8 = v7;
    if (v7)
    {
      OUTLINED_FUNCTION_43_14();
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_3_8();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B14808);
      v9 = sub_22AA8590C();
      OUTLINED_FUNCTION_60_5();
      OUTLINED_FUNCTION_39_9();
      if (!v9)
      {
        OUTLINED_FUNCTION_43_14();
        OUTLINED_FUNCTION_54_4();
        OUTLINED_FUNCTION_47_3();
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_50_9();
        OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_51_1();
        OUTLINED_FUNCTION_54();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
        OUTLINED_FUNCTION_3_8();
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_51_1();
        OUTLINED_FUNCTION_54();
        *v4 = v10;
        v4[1] = v11;
        v4[2] = v12;
        v4[3] = v13;
        v4[4] = v14;
        v4[5] = v15;
        v4[6] = v10;
        v4[7] = v10;
        goto LABEL_4;
      }
      OUTLINED_FUNCTION_43_14();
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_58_1();
    }
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_51_1();
    OUTLINED_FUNCTION_3_8();
    if (!v8)
      OUTLINED_FUNCTION_27_7();
  }
LABEL_4:
  OUTLINED_FUNCTION_150_0();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA7FA6C()
{
  char *v0;

  return sub_22AA7F788(*v0);
}

uint64_t sub_22AA7FA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7F648(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA7FA98()
{
  sub_22AA85894();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7FAC0()
{
  sub_22AA85894();
  return sub_22ABE02F8();
}

double sub_22AA7FAE8@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_22AA7F7E0();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    result = *(double *)&v6;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

void sub_22AA7FB28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_137_0();
  v1 = OUTLINED_FUNCTION_14_42();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_14_42();
  v6 = v5;
  v7 = OUTLINED_FUNCTION_14_42();
  *v0 = v1;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v6;
  v0[4] = v7;
  v0[5] = v8;
  OUTLINED_FUNCTION_66();
}

uint64_t sub_22AA7FB94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x73656572546D756ELL && a2 == 0xE800000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C617261506D756ELL && a2 == 0xEF656572546C656CLL;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6661654C657A6973 && a2 == 0xEE00726F74636556)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22AA7FD28(char a1)
{
  if (!a1)
    return 0x73656572546D756ELL;
  if (a1 == 1)
    return 0x6C617261506D756ELL;
  return 0x6661654C657A6973;
}

void sub_22AA7FD98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v5 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14838);
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_89_4(v3, v3[3]);
  sub_22AA85BC4();
  OUTLINED_FUNCTION_149_0();
  if (v0)
  {
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_116_3();
    v12 = v11;
    v24 = v10;
    OUTLINED_FUNCTION_108_2();
    v13 = OUTLINED_FUNCTION_116_3();
    v15 = v14;
    v22 = v13;
    OUTLINED_FUNCTION_50_9();
    v23 = v15;
    v16 = sub_22ABDFC44();
    v18 = v17;
    v19 = v16;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v6);
    OUTLINED_FUNCTION_50_9();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    OUTLINED_FUNCTION_3_8();
    v20 = v23;
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_58_1();
    *v5 = v24;
    v5[1] = v12;
    v5[2] = v22;
    v5[3] = v20;
    v5[4] = v19;
    v5[5] = v18;
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA7FF30()
{
  sub_22AA80C60();
}

uint64_t sub_22AA7FF48()
{
  char *v0;

  return sub_22AA7FD28(*v0);
}

uint64_t sub_22AA7FF50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA7FB94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA7FF74()
{
  sub_22AA85BC4();
  return sub_22ABE02EC();
}

uint64_t sub_22AA7FF9C()
{
  sub_22AA85BC4();
  return sub_22ABE02F8();
}

double sub_22AA7FFC4@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  sub_22AA7FD98();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void sub_22AA80004()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v0 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v0 + 16) = xmmword_22ABF3ED0;
  OUTLINED_FUNCTION_68_10();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 32) = 0xD000000000000010;
  *(_QWORD *)(v0 + 40) = 0x800000022ABE4200;
  OUTLINED_FUNCTION_68_10();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 48) = 0xD000000000000010;
  *(_QWORD *)(v0 + 56) = 0x800000022ABE4080;
  OUTLINED_FUNCTION_147_0();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_133_0();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  OUTLINED_FUNCTION_138_1();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_2_54();
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  OUTLINED_FUNCTION_80_10();
  OUTLINED_FUNCTION_17_35();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_38_24();
}

void sub_22AA801E4(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = OUTLINED_FUNCTION_41_15();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_41_15();
  v7 = v6;
  v8 = OUTLINED_FUNCTION_41_15();
  v10 = v9;
  v11 = OUTLINED_FUNCTION_41_15();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  OUTLINED_FUNCTION_66();
}

uint64_t sub_22AA80274(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7365646F4E6D756ELL && a2 == 0xE800000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x75746165466D756ELL && a2 == 0xEA00000000006572;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x74656C65446D756ELL && a2 == 0xEA00000000006465;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6661654C657A6973 && a2 == 0xEE00726F74636556)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_22AA80454(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA80488 + 4 * byte_22ABF3EF4[a1]))(0x7365646F4E6D756ELL, 0xE800000000000000);
}

uint64_t sub_22AA80488()
{
  return 0x75746165466D756ELL;
}

uint64_t sub_22AA804A8()
{
  return 0x74656C65446D756ELL;
}

uint64_t sub_22AA804C4()
{
  return 0x6661654C657A6973;
}

void sub_22AA804E8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *);
  void (*v3)(_QWORD *);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v5 = v4;
  v28 = v6;
  v29 = __swift_instantiateConcreteTypeFromMangledName(v7);
  v8 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_23_1();
  v9 = OUTLINED_FUNCTION_89_4(v5, v5[3]);
  v3(v9);
  sub_22ABE0298();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    v27 = (uint64_t)v5;
    v10 = v8;
    v11 = OUTLINED_FUNCTION_70_7();
    v13 = v12;
    OUTLINED_FUNCTION_108_2();
    v14 = OUTLINED_FUNCTION_70_7();
    v16 = v15;
    v26 = v14;
    OUTLINED_FUNCTION_54_4();
    v17 = sub_22ABDFC44();
    v19 = v18;
    v25 = v17;
    OUTLINED_FUNCTION_108_2();
    v20 = OUTLINED_FUNCTION_70_7();
    v22 = v21;
    v23 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v24 = v20;
    v23(v1, v29);
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_54_4();
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_51_1();
    OUTLINED_FUNCTION_54();
    __swift_destroy_boxed_opaque_existential_1(v27);
    OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_51_1();
    *v28 = v11;
    v28[1] = v13;
    v28[2] = v26;
    v28[3] = v16;
    v28[4] = v25;
    v28[5] = v19;
    v28[6] = v24;
    v28[7] = v22;
  }
  OUTLINED_FUNCTION_150_0();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA80704(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  char v17;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C6968437466656CLL && a2 == 0xEC0000006E657264;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6968437468676972 && a2 == 0xED00006E6572646CLL;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x4C746C7561666564 && a2 == 0xEB00000000746665;
        if (v8 || (sub_22ABDFF68() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x73746E65726170 && a2 == 0xE700000000000000;
          if (v9 || (sub_22ABDFF68() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6E61684373736F6CLL && a2 == 0xEB00000000736567;
            if (v10 || (sub_22ABDFF68() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6E6F4374696C7073 && a2 == 0xEF736E6F69746964;
              if (v11 || (sub_22ABDFF68() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x646E4974696C7073 && a2 == 0xEC00000073656369;
                if (v12 || (sub_22ABDFF68() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x70795474696C7073 && a2 == 0xE900000000000065;
                  if (v13 || (sub_22ABDFF68() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x6769655765736162 && a2 == 0xEB00000000737468;
                    if (v14 || (sub_22ABDFF68() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x69737365486D7573 && a2 == 0xEA00000000006E61;
                      if (v15 || (sub_22ABDFF68() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else if (a1 == 0x6172615065657274 && a2 == 0xE90000000000006DLL)
                      {
                        swift_bridgeObjectRelease();
                        return 11;
                      }
                      else
                      {
                        v17 = sub_22ABDFF68();
                        swift_bridgeObjectRelease();
                        if ((v17 & 1) != 0)
                          return 11;
                        else
                          return 12;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_22AA80C58()
{
  return 12;
}

void sub_22AA80C60()
{
  OUTLINED_FUNCTION_27_26();
  sub_22ABE0250();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22AA80C90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA80CB8 + 4 * byte_22ABF3EF8[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_22AA80CB8()
{
  return 0x6C6968437466656CLL;
}

uint64_t sub_22AA80CD8()
{
  return 0x6968437468676972;
}

uint64_t sub_22AA80CFC()
{
  return 0x4C746C7561666564;
}

uint64_t sub_22AA80D1C()
{
  return 0x73746E65726170;
}

uint64_t sub_22AA80D34()
{
  return 0x6E61684373736F6CLL;
}

uint64_t sub_22AA80D54()
{
  return 0x6E6F4374696C7073;
}

uint64_t sub_22AA80D78()
{
  return 0x646E4974696C7073;
}

uint64_t sub_22AA80D98()
{
  return 0x70795474696C7073;
}

uint64_t sub_22AA80DB4()
{
  return 0x6769655765736162;
}

uint64_t sub_22AA80DD8()
{
  return 0x69737365486D7573;
}

uint64_t sub_22AA80DF4()
{
  return 0x6172615065657274;
}

void sub_22AA80E14()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD v29[19];
  _QWORD v30[19];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14698);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_89_4(v2, v2[3]);
  sub_22AA84458();
  sub_22ABE0298();
  if (v0)
  {
    v8 = 0;
  }
  else
  {
    v28 = v4;
    LOBYTE(v30[0]) = 0;
    v6 = sub_22ABDFC74();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_161_0(&qword_2540E85E8, v7, MEMORY[0x24BEE1798]);
    OUTLINED_FUNCTION_79_3();
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_4_47();
    v22 = v30[0];
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_4_47();
    v21 = v30[0];
    LOBYTE(v29[0]) = 4;
    v27 = v30[0];
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_4_47();
    v20 = v30[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B100E0);
    LOBYTE(v29[0]) = 5;
    v9 = sub_22AA84494(&qword_255B146A8, &qword_255B100E0, MEMORY[0x24BEE1520]);
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_79_3();
    if (!v9)
    {
      OUTLINED_FUNCTION_16_13();
      OUTLINED_FUNCTION_65_11();
      v26 = v30[0];
      OUTLINED_FUNCTION_16_13();
      OUTLINED_FUNCTION_4_47();
      v25 = v30[0];
      OUTLINED_FUNCTION_16_13();
      OUTLINED_FUNCTION_4_47();
      v19 = v30[0];
      v24 = v30[0];
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_65_11();
      LOBYTE(v29[0]) = 10;
      v23 = v30[0];
      sub_22ABDEAEC();
      sub_22ABDFC8C();
      sub_22AA844E8();
      v18 = v30[0];
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_102_2();
      sub_22ABDFC8C();
      OUTLINED_FUNCTION_3_59();
      v16 = v32;
      v17 = v31;
      v14 = v34;
      v15 = v33;
      v12 = v36;
      v13 = v35;
      v10 = v38;
      v11 = v37;
      v29[0] = v6;
      v29[1] = v22;
      v29[2] = v21;
      v29[3] = v27;
      v29[4] = v20;
      v29[5] = v26;
      v29[6] = v25;
      v29[7] = v19;
      v29[8] = v24;
      v29[9] = v23;
      v29[10] = v18;
      v29[11] = v31;
      v29[12] = v32;
      v29[13] = v33;
      v29[14] = v34;
      v29[15] = v35;
      v29[16] = v36;
      v29[17] = v37;
      v29[18] = v38;
      sub_22AA82C38((uint64_t)v29);
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_25_16();
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_140_1();
      v30[0] = v6;
      v30[1] = v22;
      v30[2] = v21;
      v30[3] = v27;
      v30[4] = v20;
      v30[5] = v26;
      v30[6] = v25;
      v30[7] = v19;
      v30[8] = v24;
      v30[9] = v23;
      v30[10] = v18;
      v30[11] = v17;
      v30[12] = v16;
      v30[13] = v15;
      v30[14] = v14;
      v30[15] = v13;
      v30[16] = v12;
      v30[17] = v11;
      v30[18] = v10;
      sub_22AA82D1C((uint64_t)v30);
      memcpy(v28, v29, 0x98uLL);
      goto LABEL_21;
    }
    OUTLINED_FUNCTION_3_59();
    OUTLINED_FUNCTION_40_15();
    OUTLINED_FUNCTION_46_17();
    OUTLINED_FUNCTION_51_1();
    OUTLINED_FUNCTION_63_9();
    v8 = 30;
  }
  OUTLINED_FUNCTION_140_1();
  if ((v8 & 2) != 0)
  {
    OUTLINED_FUNCTION_40_15();
    if (((v8 >> 2) & 1) == 0)
    {
LABEL_6:
      if (((v8 >> 3) & 1) != 0)
        goto LABEL_7;
      goto LABEL_15;
    }
  }
  else if ((v8 & 4) == 0)
  {
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_46_17();
  if (((v8 >> 3) & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (((v8 >> 4) & 1) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  if (((v8 >> 4) & 1) == 0)
  {
LABEL_8:
    if (((v8 >> 5) & 1) != 0)
      goto LABEL_9;
    goto LABEL_17;
  }
LABEL_16:
  OUTLINED_FUNCTION_63_9();
  if (((v8 >> 5) & 1) != 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if (((v8 >> 6) & 1) == 0)
      goto LABEL_10;
    goto LABEL_18;
  }
LABEL_17:
  if (((v8 >> 6) & 1) == 0)
  {
LABEL_10:
    if (((v8 >> 7) & 1) != 0)
      goto LABEL_11;
    goto LABEL_19;
  }
LABEL_18:
  OUTLINED_FUNCTION_2_1();
  if (((v8 >> 7) & 1) != 0)
  {
LABEL_11:
    OUTLINED_FUNCTION_104_2();
    if (((v8 >> 8) & 1) == 0)
      goto LABEL_21;
    goto LABEL_20;
  }
LABEL_19:
  if (((v8 >> 8) & 1) == 0)
    goto LABEL_21;
LABEL_20:
  OUTLINED_FUNCTION_2_1();
LABEL_21:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA814F0()
{
  unsigned __int8 *v0;

  return sub_22AA80454(*v0);
}

uint64_t sub_22AA814F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA80274(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA8151C()
{
  sub_22AA8503C();
  return sub_22ABE02EC();
}

uint64_t sub_22AA81544()
{
  sub_22AA8503C();
  return sub_22ABE02F8();
}

double sub_22AA8156C@<D0>(_OWORD *a1@<X8>)
{
  return sub_22AA81598(a1);
}

double sub_22AA81598@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_22AA804E8();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    result = *(double *)&v6;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

uint64_t sub_22AA815E4()
{
  unsigned __int8 *v0;

  return sub_22AA80C90(*v0);
}

uint64_t sub_22AA815EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA80704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA81610@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA80C58();
  *a1 = result;
  return result;
}

uint64_t sub_22AA81634()
{
  sub_22AA84458();
  return sub_22ABE02EC();
}

uint64_t sub_22AA8165C()
{
  sub_22AA84458();
  return sub_22ABE02F8();
}

void sub_22AA81684(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE __src[152];

  sub_22AA80E14();
  if (!v1)
    memcpy(a1, __src, 0x98uLL);
}

void sub_22AA816CC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_22AA816D8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[25];
  _BYTE v7[200];

  if (qword_255B0D720 != -1)
    swift_once();
  if (a1[6] <= 1)
  {
    v4 = qword_255B47D98;
    OUTLINED_FUNCTION_16_23();
    sub_22AA81798(a1, (uint64_t)v6);
    v6[24] = v4;
    nullsub_1(v6, v5);
  }
  else
  {
    OUTLINED_FUNCTION_122_3();
    sub_22AA82E04(v6);
  }
  sub_22AA82E44((uint64_t)v6, (uint64_t)v7, &qword_255B14648);
  sub_22AA82E44((uint64_t)v7, a2, &qword_255B14648);
}

__n128 sub_22AA81798@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  _QWORD v32[5];
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_22AA82E0C((uint64_t)a1);
  sub_22AA819B4(a1, (uint64_t)v32);
  v4 = v32[0];
  v5 = v32[1];
  v6 = v32[2];
  v7 = v32[3];
  v8 = v32[4];
  v31 = v33;
  v30 = v34;
  v9 = a1[4];
  sub_22AA7DF1C();
  v28 = v36;
  v29 = v35;
  v10 = v39;
  v26 = v38;
  v27 = v37;
  v11 = v40;
  v24 = v42;
  v25 = v41;
  if (v9 == 2)
  {
    OUTLINED_FUNCTION_112_3();
    v9 = 0;
    v12 = xmmword_22ABF3EE0;
    v13 = 0xE100000000000000;
    v14 = 0xEF6369747369676FLL;
    v15 = 0x6C3A7972616E6962;
  }
  else
  {
    if (v9 == 1)
    {
      OUTLINED_FUNCTION_112_3();
      v9 = 0;
    }
    else
    {
      if (v9)
      {
        v9 = sub_22ABDFD7C();
        v23 = v8;
        v16 = v7;
        v17 = v6;
        v18 = v5;
        v19 = v4;
        v21 = v20;
        OUTLINED_FUNCTION_112_3();
        v13 = 0;
        v12 = v21;
        v4 = v19;
        v5 = v18;
        v6 = v17;
        v7 = v16;
        v8 = v23;
        v14 = 0xEE00626F72707466;
        v15 = 0x6F733A69746C756DLL;
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_112_3();
    }
    v12 = xmmword_22ABF3EE0;
    v14 = 0x800000022ABE25A0;
    v13 = 0xE100000000000000;
    v15 = 0xD000000000000010;
  }
LABEL_9:
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = v28;
  *(_QWORD *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v26;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v11;
  *(_QWORD *)(a2 + 48) = v25;
  *(_QWORD *)(a2 + 56) = v24;
  *(_QWORD *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 72) = v14;
  *(_QWORD *)(a2 + 80) = v9;
  *(_OWORD *)(a2 + 88) = v12;
  *(_QWORD *)(a2 + 104) = v13;
  *(_QWORD *)(a2 + 112) = 0x656572746267;
  *(_QWORD *)(a2 + 120) = 0xE600000000000000;
  *(_QWORD *)(a2 + 128) = v4;
  *(_QWORD *)(a2 + 136) = v5;
  *(_QWORD *)(a2 + 144) = v6;
  *(_QWORD *)(a2 + 152) = v7;
  *(_QWORD *)(a2 + 160) = v8;
  result = v31;
  *(__n128 *)(a2 + 168) = v31;
  *(_QWORD *)(a2 + 184) = v30;
  return result;
}

__n128 sub_22AA819B4@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  sub_22AA7FB28();
  sub_22AA82E0C((uint64_t)a1);
  v5 = sub_22A9D4948(v4);
  OUTLINED_FUNCTION_122_3();
  sub_22AA82E0C((uint64_t)a1);
  v6 = sub_22AA7BBC0(0, v4, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_22AA82E34);
  OUTLINED_FUNCTION_122_3();
  OUTLINED_FUNCTION_122_3();
  result = v9;
  *(_OWORD *)a2 = v8;
  *(__n128 *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v11;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v6;
  return result;
}

void sub_22AA81A84(uint64_t a1@<X8>)
{
  uint64_t *v1;
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  float v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v2 = v1[8] == 0x6C3A7972616E6962 && v1[9] == 0xEF6369747369676FLL;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    v3 = 2;
    goto LABEL_56;
  }
  v5 = v1[4];
  v4 = v1[5];
  v6 = HIBYTE(v4) & 0xF;
  v7 = v5 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v4) & 0xF;
  else
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    v3 = 0;
    goto LABEL_56;
  }
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
    {
      if ((v5 & 0x1000000000000000) != 0)
        v9 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v9 = (unsigned __int8 *)sub_22ABDF860();
      v10 = (uint64_t)sub_22AA82FCC(v9, v7, 10);
      v12 = v11 & 1;
      goto LABEL_53;
    }
    if (v1[4] == 43)
    {
      if (!v6)
        goto LABEL_80;
      if (v6 == 1)
        goto LABEL_38;
      OUTLINED_FUNCTION_164_0();
      if (!v2 & v15)
        goto LABEL_38;
      v10 = v17;
      if (v16 != 2)
      {
        if ((BYTE2(v5) - 48) > 9u)
          goto LABEL_38;
        v10 = 10 * v17 + (BYTE2(v5) - 48);
        if (v16 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_44_18();
            if (!v2 & v15)
              goto LABEL_38;
            OUTLINED_FUNCTION_86_8();
            if (!v2 || __OFADD__(v19, v18))
              goto LABEL_38;
            v12 = 0;
            OUTLINED_FUNCTION_98_5();
            if (v2)
              goto LABEL_53;
          }
        }
      }
    }
    else
    {
      if (v1[4] == 45)
      {
        if (v6)
        {
          if (v6 != 1)
          {
            OUTLINED_FUNCTION_164_0();
            if (!(!v2 & v15))
            {
              if (v13 == 2)
              {
                v12 = 0;
                v10 = -(uint64_t)v14;
                goto LABEL_53;
              }
              if ((BYTE2(v5) - 48) <= 9u)
              {
                v10 = -10 * v14 - (BYTE2(v5) - 48);
                if (v13 == 3)
                  goto LABEL_52;
                while (1)
                {
                  OUTLINED_FUNCTION_44_18();
                  if (!v2 & v15)
                    break;
                  OUTLINED_FUNCTION_86_8();
                  if (!v2 || __OFSUB__(v45, v44))
                    break;
                  v12 = 0;
                  OUTLINED_FUNCTION_98_5();
                  if (v2)
                    goto LABEL_53;
                }
              }
            }
          }
LABEL_38:
          v10 = 0;
          v12 = 1;
          goto LABEL_53;
        }
        __break(1u);
LABEL_80:
        __break(1u);
        return;
      }
      if (!v6 || (v5 - 48) > 9u)
        goto LABEL_38;
      v10 = (v5 - 48);
      if (v6 != 1)
      {
        if ((BYTE1(v5) - 48) > 9u)
          goto LABEL_38;
        v10 = 10 * (v5 - 48) + (BYTE1(v5) - 48);
        if (v6 != 2)
        {
          OUTLINED_FUNCTION_123_1();
          while (1)
          {
            OUTLINED_FUNCTION_44_18();
            if (!v2 & v15)
              goto LABEL_38;
            OUTLINED_FUNCTION_86_8();
            if (!v2 || __OFADD__(v21, v20))
              goto LABEL_38;
            v12 = 0;
            OUTLINED_FUNCTION_98_5();
            if (v2)
              goto LABEL_53;
          }
        }
      }
    }
LABEL_52:
    v12 = 0;
    goto LABEL_53;
  }
  OUTLINED_FUNCTION_16_13();
  sub_22AA82E98(v5, v4, 10);
  v47 = v46;
  v12 = v48;
  OUTLINED_FUNCTION_2_1();
  v10 = v47;
LABEL_53:
  if ((v12 & 1) != 0)
    v3 = 0;
  else
    v3 = v10;
LABEL_56:
  v22 = v1[18];
  v23 = v1[19];
  v24 = *(_QWORD *)(v1[23] + 16);
  sub_22AA7C6F4((uint64_t)v1);
  sub_22AA7B5E4(0, v24, (uint64_t)v1);
  v26 = v25;
  v27 = *v1;
  v28 = v1[1];
  v29 = v1[2];
  v30 = v1[3];
  v32 = v1[6];
  v31 = v1[7];
  OUTLINED_FUNCTION_50_9();
  v33 = sub_22AA81FF4(v32, v31);
  if ((v33 & 0x100000000) != 0)
    v34 = 0.5;
  else
    v34 = *(float *)&v33;
  OUTLINED_FUNCTION_60_5();
  sub_22AA81E2C(v27, v28);
  if ((v36 & 1) != 0)
    v37 = 0;
  else
    v37 = v35;
  OUTLINED_FUNCTION_124_1();
  sub_22AA81E2C(v29, v30);
  if ((v39 & 1) != 0)
    v40 = 1;
  else
    v40 = v38;
  OUTLINED_FUNCTION_47_3();
  sub_22AA81E2C(v22, v23);
  *(_QWORD *)a1 = v26;
  *(float *)(a1 + 8) = v34;
  if ((v42 & 1) != 0)
    v43 = 1;
  else
    v43 = v41;
  *(_QWORD *)(a1 + 16) = v37;
  *(_QWORD *)(a1 + 24) = v40;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v43;
  *(_QWORD *)(a1 + 48) = 1;
}

void sub_22AA81E2C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;

  v3 = HIBYTE(a2) & 0xF;
  v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    goto LABEL_40;
  if ((a2 & 0x1000000000000000) != 0)
  {
    sub_22AA82E98(a1, a2, 10);
LABEL_40:
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_21_1();
    return;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_22ABDF860();
    sub_22AA82FCC(v6, v4, 10);
    goto LABEL_40;
  }
  if (a1 == 43)
  {
    if (v3)
    {
      if (v3 != 1)
      {
        OUTLINED_FUNCTION_148_0();
        if (!(!v9 & v8) && v12 != 2)
        {
          OUTLINED_FUNCTION_123_1();
          do
          {
            OUTLINED_FUNCTION_44_18();
            if (!v9 & v8)
              break;
            OUTLINED_FUNCTION_83_10();
            if (!v9)
              break;
            if (__OFADD__(v14, v13))
              break;
            OUTLINED_FUNCTION_98_5();
          }
          while (!v9);
        }
      }
      goto LABEL_40;
    }
  }
  else
  {
    if (a1 != 45)
    {
      if (v3 && (a1 - 48) <= 9u && v3 != 1)
      {
        do
        {
          OUTLINED_FUNCTION_44_18();
          if (!v9 & v8)
            break;
          OUTLINED_FUNCTION_83_10();
          if (!v9)
            break;
          if (__OFADD__(v16, v15))
            break;
          OUTLINED_FUNCTION_98_5();
        }
        while (!v9);
      }
      goto LABEL_40;
    }
    if (v3)
    {
      if (v3 != 1)
      {
        OUTLINED_FUNCTION_148_0();
        if (!(!v9 & v8) && v7 != 2)
        {
          OUTLINED_FUNCTION_123_1();
          do
          {
            OUTLINED_FUNCTION_44_18();
            if (!v9 & v8)
              break;
            OUTLINED_FUNCTION_83_10();
            if (!v9)
              break;
            if (__OFSUB__(v11, v10))
              break;
            OUTLINED_FUNCTION_98_5();
          }
          while (!v9);
        }
      }
      goto LABEL_40;
    }
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_22AA81FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE *v7;
  char v9;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_22ABDF794();
    swift_bridgeObjectRelease();
    v6 = v9;
  }
  else
  {
    MEMORY[0x24BDAC7A8](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (v7 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v4 = sub_22ABDF860();
      }
      v6 = sub_22AA83708(v4, v5, (void (*)(uint64_t *__return_ptr))sub_22AA837A8);
      swift_bridgeObjectRelease();
    }
  }
  return (unint64_t)((v6 & 1) == 0) << 32;
}

void *sub_22AA82168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  _BYTE __src[152];

  sub_22ABDEAEC();
  sub_22AA821D4(a2, a1, (uint64_t)__src);
  return memcpy(a3, __src, 0x98uLL);
}

uint64_t sub_22AA821D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  float v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD v86[3];
  uint64_t v87;
  uint64_t v88;

  v4 = *(_QWORD *)(a1 + 16);
  v82 = a1;
  if (v4)
  {
    v5 = 0;
    v6 = sub_22ABDEAEC() + 48;
    v7 = MEMORY[0x24BEE4B00];
    v84 = v4;
    do
    {
      if ((*(_BYTE *)(v6 + 37) & 1) == 0)
      {
        v9 = *(_QWORD *)v6;
        v8 = *(_QWORD *)(v6 + 8);
        swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v86[0] = v7;
        v10 = sub_22AA036F0();
        if (__OFADD__(*(_QWORD *)(v7 + 16), (v11 & 1) == 0))
        {
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          result = sub_22ABE0190();
          __break(1u);
          return result;
        }
        v12 = v10;
        v13 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8680);
        if ((sub_22ABDFA64() & 1) != 0)
        {
          v14 = sub_22AA036F0();
          if ((v13 & 1) != (v15 & 1))
            goto LABEL_82;
          v12 = v14;
        }
        v16 = *(_QWORD *)&v86[0];
        if ((v13 & 1) != 0)
        {
          *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v86[0] + 56) + 8 * v12) = v5;
        }
        else
        {
          OUTLINED_FUNCTION_64_7();
          *(_QWORD *)(v17 + 8 * v12) = v9;
          OUTLINED_FUNCTION_142_0();
          if (v19)
            goto LABEL_80;
          *(_QWORD *)(v16 + 16) = v18;
        }
        OUTLINED_FUNCTION_139_1();
        swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v86[0] = v16;
        v20 = sub_22AA036F0();
        v3 = v21;
        if (__OFADD__(*(_QWORD *)(v16 + 16), (v21 & 1) == 0))
          goto LABEL_79;
        v22 = v20;
        v4 = v84;
        if ((sub_22ABDFA64() & 1) != 0)
        {
          v23 = sub_22AA036F0();
          if ((v3 & 1) != (v24 & 1))
            goto LABEL_82;
          v22 = v23;
        }
        v7 = *(_QWORD *)&v86[0];
        if ((v3 & 1) != 0)
        {
          *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v86[0] + 56) + 8 * v22) = v5;
        }
        else
        {
          OUTLINED_FUNCTION_64_7();
          *(_QWORD *)(v25 + 8 * v22) = v8;
          OUTLINED_FUNCTION_142_0();
          if (v19)
            goto LABEL_81;
          *(_QWORD *)(v7 + 16) = v26;
        }
        OUTLINED_FUNCTION_139_1();
      }
      ++v5;
      v6 += 56;
    }
    while (v4 != v5);
    v27 = v82;
    a1 = OUTLINED_FUNCTION_2_1();
    v28 = *(_QWORD *)(v82 + 16);
    v29 = MEMORY[0x24BEE4AF8];
    if (v28)
    {
      *(_QWORD *)&v86[0] = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_16_13();
      OUTLINED_FUNCTION_48_19();
      OUTLINED_FUNCTION_134_1();
      do
      {
        OUTLINED_FUNCTION_132_1();
        if (v31)
        {
          OUTLINED_FUNCTION_34_24();
          v30 = *(_QWORD *)&v86[0];
        }
        *(_QWORD *)(v30 + 16) = v5;
        OUTLINED_FUNCTION_103_2(v30 + 8 * v3);
      }
      while (!v33);
      v85 = v32;
      OUTLINED_FUNCTION_3_8();
      *(_QWORD *)&v86[0] = v29;
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_48_19();
      OUTLINED_FUNCTION_134_1();
      do
      {
        OUTLINED_FUNCTION_132_1();
        if (v31)
        {
          OUTLINED_FUNCTION_34_24();
          v34 = *(_QWORD *)&v86[0];
        }
        *(_QWORD *)(v34 + 16) = v5;
        OUTLINED_FUNCTION_103_2(v34 + 8 * v3);
      }
      while (!v33);
      v77 = v35;
      OUTLINED_FUNCTION_3_8();
      *(_QWORD *)&v86[0] = v29;
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_48_19();
      v36 = v82;
      do
      {
        *(_QWORD *)&v86[0] = v29;
        v37 = *(_QWORD *)(v29 + 16);
        if (v37 >= *(_QWORD *)(v29 + 24) >> 1)
        {
          OUTLINED_FUNCTION_34_24();
          v36 = v82;
          v29 = *(_QWORD *)&v86[0];
        }
        *(_QWORD *)(v29 + 16) = v37 + 1;
        OUTLINED_FUNCTION_103_2(v29 + 8 * v37);
      }
      while (!v33);
      a1 = OUTLINED_FUNCTION_3_8();
      v38 = 0;
      v27 = v36;
    }
    else
    {
      v38 = 1;
      v85 = MEMORY[0x24BEE4AF8];
      v77 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v28 = 0;
    v29 = MEMORY[0x24BEE4AF8];
    v38 = 1;
    v77 = MEMORY[0x24BEE4AF8];
    v85 = MEMORY[0x24BEE4AF8];
    v27 = a1;
  }
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_16_13();
  sub_22AA7BD0C(0, v27, (uint64_t (*)(uint64_t, _BYTE *))sub_22AA82E3C);
  v76 = v39;
  OUTLINED_FUNCTION_2_1();
  v40 = MEMORY[0x24BEE4AF8];
  v41 = MEMORY[0x24BEE4AF8];
  v42 = MEMORY[0x24BEE4AF8];
  v43 = v27;
  if ((v38 & 1) == 0)
  {
    v71 = v38;
    *(_QWORD *)&v86[0] = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_47_14();
    v41 = *(_QWORD *)&v86[0];
    v44 = (_BYTE *)(v82 + 85);
    v45 = v28;
    do
    {
      if ((*v44 & 1) != 0)
        v46 = 0;
      else
        v46 = *(_DWORD *)(v44 - 13);
      *(_QWORD *)&v86[0] = v41;
      v48 = *(_QWORD *)(v41 + 16);
      v47 = *(_QWORD *)(v41 + 24);
      if (v48 >= v47 >> 1)
      {
        OUTLINED_FUNCTION_100_3(v47);
        sub_22AB4D538();
        v41 = *(_QWORD *)&v86[0];
      }
      *(_QWORD *)(v41 + 16) = v48 + 1;
      *(_DWORD *)(v41 + 4 * v48 + 32) = v46;
      v44 += 56;
      --v45;
    }
    while (v45);
    v72 = v29;
    OUTLINED_FUNCTION_3_8();
    *(_QWORD *)&v86[0] = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_47_14();
    v49 = v82;
    v42 = *(_QWORD *)&v86[0];
    v50 = *(_QWORD *)(*(_QWORD *)&v86[0] + 16);
    v74 = v28;
    do
    {
      if (*(_BYTE *)(v49 + v45 + 85))
        v51 = 32;
      else
        v51 = 40;
      v52 = *(_DWORD *)(v49 + v45 + v51);
      *(_QWORD *)&v86[0] = v42;
      if (v50 >= *(_QWORD *)(v42 + 24) >> 1)
      {
        sub_22AB4D538();
        v49 = v82;
        v42 = *(_QWORD *)&v86[0];
      }
      *(_QWORD *)(v42 + 16) = v50 + 1;
      *(_DWORD *)(v42 + 4 * v50 + 32) = v52;
      v45 += 56;
      ++v50;
      --v28;
    }
    while (v28);
    OUTLINED_FUNCTION_3_8();
    *(_QWORD *)&v86[0] = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_50_9();
    v28 = v74;
    sub_22AB4CE30();
    v43 = v82;
    v40 = *(_QWORD *)&v86[0];
    v53 = (_BYTE *)(v82 + 85);
    v54 = v74;
    do
    {
      if ((*v53 & 1) != 0)
        v55 = 0;
      else
        v55 = *(_QWORD *)(v53 - 53);
      *(_QWORD *)&v86[0] = v40;
      v57 = *(_QWORD *)(v40 + 16);
      v56 = *(_QWORD *)(v40 + 24);
      if (v57 >= v56 >> 1)
      {
        OUTLINED_FUNCTION_100_3(v56);
        sub_22AB4CE30();
        v43 = v82;
        v40 = *(_QWORD *)&v86[0];
      }
      *(_QWORD *)(v40 + 16) = v57 + 1;
      *(_QWORD *)(v40 + 8 * v57 + 32) = v55;
      v53 += 56;
      --v54;
    }
    while (v54);
    OUTLINED_FUNCTION_3_8();
    v29 = v72;
    v38 = v71;
  }
  sub_22AA0AE70(0, v28);
  v75 = v58;
  v59 = OUTLINED_FUNCTION_50_9();
  v73 = sub_22AA7BAF0(v59);
  OUTLINED_FUNCTION_3_8();
  if ((v38 & 1) != 0)
  {
    OUTLINED_FUNCTION_3_8();
    v60 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    *(_QWORD *)&v86[0] = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_50_9();
    v61 = v43;
    OUTLINED_FUNCTION_47_14();
    v60 = *(_QWORD *)&v86[0];
    v62 = (_BYTE *)(v61 + 85);
    v63 = v28;
    do
    {
      if ((*v62 & 1) != 0)
      {
        v64 = *(_QWORD *)(v62 - 45);
        v65 = HIDWORD(v64) & 1;
      }
      else
      {
        LODWORD(v64) = *(_DWORD *)(v62 - 5);
        LODWORD(v65) = *(v62 - 1) & 1;
      }
      if ((_DWORD)v65)
        v66 = 0.0;
      else
        v66 = *(float *)&v64;
      *(_QWORD *)&v86[0] = v60;
      v67 = *(_QWORD *)(v60 + 16);
      if (v67 >= *(_QWORD *)(v60 + 24) >> 1)
      {
        sub_22AB4D538();
        v60 = *(_QWORD *)&v86[0];
      }
      *(_QWORD *)(v60 + 16) = v67 + 1;
      *(float *)(v60 + 4 * v67 + 32) = v66;
      v62 += 56;
      --v63;
    }
    while (v63);
    swift_bridgeObjectRelease_n();
  }
  sub_22AA801E4((uint64_t *)v86);
  v83 = v86[0];
  v79 = v86[1];
  v78 = v86[2];
  v68 = v87;
  v69 = v88;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a3 = a2;
  *(_QWORD *)(a3 + 8) = v85;
  *(_QWORD *)(a3 + 16) = v77;
  *(_QWORD *)(a3 + 24) = v29;
  *(_QWORD *)(a3 + 32) = v76;
  *(_QWORD *)(a3 + 40) = v41;
  *(_QWORD *)(a3 + 48) = v42;
  *(_QWORD *)(a3 + 56) = v40;
  *(_QWORD *)(a3 + 64) = v75;
  *(_QWORD *)(a3 + 72) = v73;
  *(_QWORD *)(a3 + 80) = v60;
  *(_OWORD *)(a3 + 88) = v83;
  *(_OWORD *)(a3 + 104) = v79;
  *(_OWORD *)(a3 + 120) = v78;
  *(_QWORD *)(a3 + 136) = v68;
  *(_QWORD *)(a3 + 144) = v69;
  return result;
}

uint64_t sub_22AA82958(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *a3;
  if (*(_QWORD *)(*a3 + 16) && (v4 = sub_22AA036F0(), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  else
    return 0x7FFFFFFFLL;
}

unint64_t *sub_22AA82994@<X0>(unint64_t *result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = a2[1];
  if (v3 >= *(_QWORD *)(v4 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v5 = *(_QWORD *)(v4 + 8 * v3 + 32);
  if (v5 != -1)
    goto LABEL_6;
  v6 = a2[2];
  if (v3 >= *(_QWORD *)(v6 + 16))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (*(_QWORD *)(v6 + 8 * v3 + 32) != -1)
  {
LABEL_6:
    v7 = a2[7];
    if (v3 < *(_QWORD *)(v7 + 16))
    {
      v8 = a2[6];
      if (v3 < *(_QWORD *)(v8 + 16))
      {
        v9 = a2[2];
        if (v3 < *(_QWORD *)(v9 + 16))
        {
          v10 = a2[3];
          if (v3 < *(_QWORD *)(v10 + 16))
          {
            v11 = *(_QWORD *)(v9 + 8 * v3 + 32);
            if (*(_QWORD *)(v10 + 8 * v3 + 32) == 1)
              v12 = v5;
            else
              v12 = v11;
            v13 = a2[5];
            if (v3 < *(_QWORD *)(v13 + 16))
            {
              v14 = a2[9];
              if (v3 < *(_QWORD *)(v14 + 16))
              {
                v15 = a2[10];
                result = *(unint64_t **)(v15 + 16);
                if (v3 < (unint64_t)result)
                {
                  v16 = *(_QWORD *)(v7 + 8 * v3 + 32);
                  v17 = *(unsigned int *)(v8 + 4 * v3 + 32);
                  v18 = *(unsigned int *)(v13 + 4 * v3 + 32);
                  v19 = v14 + 4 * v3;
                  v20 = *(_DWORD *)(v15 + 4 * v3 + 32);
                  v21 = *(unsigned int *)(v19 + 32);
                  *(_QWORD *)a3 = v16;
                  *(_QWORD *)(a3 + 8) = v17;
                  *(_QWORD *)(a3 + 16) = v5;
                  *(_QWORD *)(a3 + 24) = v11;
                  *(_QWORD *)(a3 + 32) = v12;
                  *(_QWORD *)(a3 + 40) = v18 | (v21 << 32);
                  *(_WORD *)(a3 + 52) = 0;
                  *(_DWORD *)(a3 + 48) = v20;
                  return result;
                }
                goto LABEL_29;
              }
LABEL_28:
              __break(1u);
LABEL_29:
              __break(1u);
              goto LABEL_30;
            }
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v22 = a2[6];
  if (v3 >= *(_QWORD *)(v22 + 16))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v23 = a2[9];
  if (v3 >= *(_QWORD *)(v23 + 16))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v24 = a2[10];
  if (v3 < *(_QWORD *)(v24 + 16))
  {
    v25 = *(unsigned int *)(v22 + 4 * v3 + 32);
    v26 = v23 + 4 * v3;
    v27 = *(unsigned int *)(v24 + 4 * v3 + 32);
    *(_QWORD *)a3 = v25 | ((unint64_t)*(unsigned int *)(v26 + 32) << 32);
    *(_QWORD *)(a3 + 8) = v27;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_QWORD *)(a3 + 45) = 0;
    *(_BYTE *)(a3 + 53) = 1;
    return result;
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_22AA82B44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B145E8);
    v4 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_0_5();
}

void sub_22AA82BA0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_22ABDEE1C();
    OUTLINED_FUNCTION_111_3(v4);
  }
  else
  {
    v3 = MEMORY[0x22E2E3088](15, a1 >> 16);
    OUTLINED_FUNCTION_111_3(v3);
  }
  OUTLINED_FUNCTION_0_5();
}

unint64_t sub_22AA82BF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B14630;
  if (!qword_255B14630)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B10000);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_255B14630);
  }
  return result;
}

uint64_t sub_22AA82C38(uint64_t a1)
{
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA82D1C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_22AA82E04(void *a1)
{
  bzero(a1, 0xC8uLL);
}

uint64_t sub_22AA82E0C(uint64_t a1)
{
  sub_22ABDEAEC();
  return a1;
}

void *sub_22AA82E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_22AA82168(a1, a2, a3);
}

uint64_t sub_22AA82E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AA82958(a1, a2, *(uint64_t **)(v2 + 16));
}

void sub_22AA82E44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_0_5();
}

unsigned __int8 *sub_22AA82E84(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA82FCC(a1, a2, a3);
}

void sub_22AA82E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = a1;
  v12 = a2;
  OUTLINED_FUNCTION_108_2();
  v5 = sub_22ABDEE40();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v11 = v5;
    v12 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v11;
    goto LABEL_7;
  }
  v5 = sub_22AA83248();
  v10 = v9;
  OUTLINED_FUNCTION_3_8();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_22ABDF860();
  }
LABEL_7:
  sub_22AA82FCC(v7, v8, a3);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_21_1();
}

_BYTE *sub_22AA82F64@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unsigned __int8 *sub_22AA82FCC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA83248()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_22AA832A4();
  v4 = sub_22AA832D8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22AA832A4()
{
  return sub_22ABDEE4C();
}

uint64_t sub_22AA832D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_22AA8341C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_22AA82B44(v9, 0);
      v12 = v11;
      sub_22AA83508(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      sub_22ABDEAEC();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x24BEE4AF8];
    }
    v15 = MEMORY[0x22E2E3034](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x22E2E3034);
LABEL_9:
      sub_22ABDF860();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x22E2E3034]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_22AA8341C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_22AA82BA0(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_22AA82BA0(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_22ABDEE04();
    return;
  }
  __break(1u);
}

void sub_22AA83508(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_22AA82BA0(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_22ABDEE10();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_22ABDF860();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_22AA82BA0(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_22ABDEDEC();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_22AA83708(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

void sub_22AA8375C(void (*a1)(uint64_t *__return_ptr)@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  a1(&v4);
  if (!v2)
    *a2 = v4;
  OUTLINED_FUNCTION_22_3();
}

_BYTE *sub_22AA83790@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_22AA82F64(a1, a2);
}

void sub_22AA837A8(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  if (!v2)
    *a1 = v4;
  OUTLINED_FUNCTION_22_3();
}

uint64_t sub_22AA837DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22AA83864(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  a1[18] = a2[18];
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AA83978(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA83B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA83C00(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 152))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA83C40(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for XGBoostArtifact.Tree()
{
  OUTLINED_FUNCTION_24_2();
}

void type metadata accessor for XGBoostArtifact.RegLossParam()
{
  OUTLINED_FUNCTION_24_2();
}

void sub_22AA83CC8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AA83D00(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return OUTLINED_FUNCTION_128_2(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return OUTLINED_FUNCTION_128_2(v2);
}

uint64_t sub_22AA83D3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return OUTLINED_FUNCTION_90_7(result, a2);
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      return OUTLINED_FUNCTION_90_7(result, a2);
  }
  return result;
}

void type metadata accessor for XGBoostArtifact.SoftmaxMulticlassParam()
{
  OUTLINED_FUNCTION_24_2();
}

ValueMetadata *type metadata accessor for XGBoostArtifact.CodingKeys()
{
  return &type metadata for XGBoostArtifact.CodingKeys;
}

uint64_t sub_22AA83D94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22AA83E14(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AA83F28(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy192_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t sub_22AA840EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA841E0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 192))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA84220(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for XGBoostArtifact.Learner()
{
  OUTLINED_FUNCTION_24_2();
}

unint64_t sub_22AA842A0()
{
  unint64_t result;

  result = qword_255B14658;
  if (!qword_255B14658)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF404C, &type metadata for XGBoostArtifact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14658);
  }
  return result;
}

uint64_t sub_22AA842DC()
{
  return MEMORY[0x24BEE1778];
}

unint64_t sub_22AA842EC()
{
  unint64_t result;

  result = qword_255B14660;
  if (!qword_255B14660)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3FBC, &type metadata for XGBoostArtifact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14660);
  }
  return result;
}

unint64_t sub_22AA8432C()
{
  unint64_t result;

  result = qword_255B14668;
  if (!qword_255B14668)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF3FE4, &type metadata for XGBoostArtifact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14668);
  }
  return result;
}

unint64_t sub_22AA84368()
{
  unint64_t result;

  result = qword_255B14678;
  if (!qword_255B14678)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4644, &type metadata for XGBoostArtifact.Learner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14678);
  }
  return result;
}

unint64_t sub_22AA843A4()
{
  unint64_t result;

  result = qword_255B14680;
  if (!qword_255B14680)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF461C, &unk_24F4C3A80);
    atomic_store(result, (unint64_t *)&qword_255B14680);
  }
  return result;
}

unint64_t sub_22AA843E0()
{
  unint64_t result;

  result = qword_255B14688;
  if (!qword_255B14688)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF45F4, &unk_24F4C39F8);
    atomic_store(result, (unint64_t *)&qword_255B14688);
  }
  return result;
}

unint64_t sub_22AA8441C()
{
  unint64_t result;

  result = qword_255B14690;
  if (!qword_255B14690)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF45CC, &unk_24F4C3978);
    atomic_store(result, (unint64_t *)&qword_255B14690);
  }
  return result;
}

unint64_t sub_22AA84458()
{
  unint64_t result;

  result = qword_255B146A0;
  if (!qword_255B146A0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF457C, &type metadata for XGBoostArtifact.Tree.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B146A0);
  }
  return result;
}

uint64_t sub_22AA84494(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12D0], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22AA844E8()
{
  unint64_t result;

  result = qword_255B146B0;
  if (!qword_255B146B0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4554, &unk_24F4C38F0);
    atomic_store(result, (unint64_t *)&qword_255B146B0);
  }
  return result;
}

unint64_t sub_22AA84524()
{
  unint64_t result;

  result = qword_255B146C0;
  if (!qword_255B146C0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4504, &type metadata for XGBoostArtifact.RegLossParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B146C0);
  }
  return result;
}

unint64_t sub_22AA84560()
{
  unint64_t result;

  result = qword_255B146D0;
  if (!qword_255B146D0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF44B4, &type metadata for XGBoostArtifact.SoftmaxMulticlassParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B146D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for XGBoostArtifact.SoftmaxMulticlassParam.CodingKeys()
{
  return &type metadata for XGBoostArtifact.SoftmaxMulticlassParam.CodingKeys;
}

uint64_t _s18CreateMLComponents15XGBoostArtifactV22SoftmaxMulticlassParamV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22AA845F0 + 4 * byte_22ABF3F04[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22AA84610 + 4 * byte_22ABF3F09[v4]))();
}

_BYTE *sub_22AA845F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22AA84610(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA84618(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA84620(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AA84628(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AA84630(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for XGBoostArtifact.RegLossParam.CodingKeys()
{
  return &type metadata for XGBoostArtifact.RegLossParam.CodingKeys;
}

uint64_t getEnumTagSinglePayload for XGBoostArtifact.Tree.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for XGBoostArtifact.Tree.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_22AA84720 + 4 * byte_22ABF3F13[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_22AA84754 + 4 * byte_22ABF3F0E[v4]))();
}

uint64_t sub_22AA84754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA8475C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA84764);
  return result;
}

uint64_t sub_22AA84770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA84778);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_22AA8477C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA84784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XGBoostArtifact.Tree.CodingKeys()
{
  return &type metadata for XGBoostArtifact.Tree.CodingKeys;
}

ValueMetadata *type metadata accessor for XGBoostArtifact.Learner.CodingKeys()
{
  return &type metadata for XGBoostArtifact.Learner.CodingKeys;
}

void type metadata accessor for XGBoostArtifact.Tree.Parameters()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t sub_22AA847DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22AA84824(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AA848A8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA84984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA84A08(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA84A48(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for XGBoostArtifact.Booster()
{
  OUTLINED_FUNCTION_24_2();
}

void type metadata accessor for XGBoostArtifact.Objective()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t sub_22AA84ACC()
{
  OUTLINED_FUNCTION_144();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_95_3();
}

void sub_22AA84AF8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_76_10(a1, a2);
  v4 = *(_QWORD *)(v3 + 56);
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v2 + 56) = v4;
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_16_13();
  OUTLINED_FUNCTION_21();
}

void sub_22AA84B30(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_55_12(a1, a2);
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_84_9();
  OUTLINED_FUNCTION_63_1();
  v3[4] = v2[4];
  v3[5] = v2[5];
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_63_1();
  v3[6] = v2[6];
  v3[7] = v2[7];
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_21();
}

void sub_22AA84B94(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_75_10(a1, a2);
  OUTLINED_FUNCTION_120_0();
  OUTLINED_FUNCTION_119_2();
  v4 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v3 + 56) = v4;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_5();
}

void type metadata accessor for XGBoostArtifact.LearnerModelParam()
{
  OUTLINED_FUNCTION_24_2();
}

unint64_t sub_22AA84BD8()
{
  unint64_t result;

  result = qword_255B146D8;
  if (!qword_255B146D8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4264, &type metadata for XGBoostArtifact.Learner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B146D8);
  }
  return result;
}

unint64_t sub_22AA84C18()
{
  unint64_t result;

  result = qword_255B146E0;
  if (!qword_255B146E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF431C, &type metadata for XGBoostArtifact.Tree.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B146E0);
  }
  return result;
}

unint64_t sub_22AA84C58()
{
  unint64_t result;

  result = qword_255B146E8;
  if (!qword_255B146E8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF43D4, &type metadata for XGBoostArtifact.RegLossParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B146E8);
  }
  return result;
}

unint64_t sub_22AA84C98()
{
  unint64_t result;

  result = qword_255B146F0;
  if (!qword_255B146F0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF448C, &type metadata for XGBoostArtifact.SoftmaxMulticlassParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B146F0);
  }
  return result;
}

unint64_t sub_22AA84CD8()
{
  unint64_t result;

  result = qword_255B146F8;
  if (!qword_255B146F8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF43FC, &type metadata for XGBoostArtifact.SoftmaxMulticlassParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B146F8);
  }
  return result;
}

unint64_t sub_22AA84D18()
{
  unint64_t result;

  result = qword_255B14700;
  if (!qword_255B14700)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4424, &type metadata for XGBoostArtifact.SoftmaxMulticlassParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14700);
  }
  return result;
}

unint64_t sub_22AA84D58()
{
  unint64_t result;

  result = qword_255B14708;
  if (!qword_255B14708)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4344, &type metadata for XGBoostArtifact.RegLossParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14708);
  }
  return result;
}

unint64_t sub_22AA84D98()
{
  unint64_t result;

  result = qword_255B14710;
  if (!qword_255B14710)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF436C, &type metadata for XGBoostArtifact.RegLossParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14710);
  }
  return result;
}

unint64_t sub_22AA84DD8()
{
  unint64_t result;

  result = qword_255B14718;
  if (!qword_255B14718)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF428C, &type metadata for XGBoostArtifact.Tree.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14718);
  }
  return result;
}

unint64_t sub_22AA84E18()
{
  unint64_t result;

  result = qword_255B14720;
  if (!qword_255B14720)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF42B4, &type metadata for XGBoostArtifact.Tree.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14720);
  }
  return result;
}

unint64_t sub_22AA84E58()
{
  unint64_t result;

  result = qword_255B14728;
  if (!qword_255B14728)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF41D4, &type metadata for XGBoostArtifact.Learner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14728);
  }
  return result;
}

unint64_t sub_22AA84E98()
{
  unint64_t result;

  result = qword_255B14730;
  if (!qword_255B14730)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF41FC, &type metadata for XGBoostArtifact.Learner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14730);
  }
  return result;
}

unint64_t sub_22AA84ED4()
{
  unint64_t result;

  result = qword_255B14740;
  if (!qword_255B14740)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4A94, &type metadata for XGBoostArtifact.LearnerModelParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14740);
  }
  return result;
}

unint64_t sub_22AA84F10()
{
  unint64_t result;

  result = qword_255B14750;
  if (!qword_255B14750)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4A44, &type metadata for XGBoostArtifact.Objective.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14750);
  }
  return result;
}

unint64_t sub_22AA84F4C()
{
  unint64_t result;

  result = qword_255B14758;
  if (!qword_255B14758)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4074, &unk_24F4C3518);
    atomic_store(result, (unint64_t *)&qword_255B14758);
  }
  return result;
}

unint64_t sub_22AA84F88()
{
  unint64_t result;

  result = qword_255B14760;
  if (!qword_255B14760)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF409C, &unk_24F4C3498);
    atomic_store(result, (unint64_t *)&qword_255B14760);
  }
  return result;
}

unint64_t sub_22AA84FC4()
{
  unint64_t result;

  result = qword_255B14770;
  if (!qword_255B14770)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF49F4, &type metadata for XGBoostArtifact.Booster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14770);
  }
  return result;
}

unint64_t sub_22AA85000()
{
  unint64_t result;

  result = qword_255B14778;
  if (!qword_255B14778)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF49CC, &unk_24F4C3D48);
    atomic_store(result, (unint64_t *)&qword_255B14778);
  }
  return result;
}

unint64_t sub_22AA8503C()
{
  unint64_t result;

  result = qword_255B14788;
  if (!qword_255B14788)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF497C, &type metadata for XGBoostArtifact.Tree.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14788);
  }
  return result;
}

ValueMetadata *type metadata accessor for XGBoostArtifact.Tree.Parameters.CodingKeys()
{
  return &type metadata for XGBoostArtifact.Tree.Parameters.CodingKeys;
}

uint64_t _s18CreateMLComponents15XGBoostArtifactV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_128_2(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_128_2(v8);
}

uint64_t _s18CreateMLComponents15XGBoostArtifactV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA85160 + 4 * byte_22ABF3F1D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_156_0 + 4 * byte_22ABF3F18[v4]))();
}

uint64_t sub_22AA85198(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA851A0);
  return result;
}

uint64_t sub_22AA851A8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA851B0);
  return OUTLINED_FUNCTION_155_0();
}

ValueMetadata *type metadata accessor for XGBoostArtifact.Booster.CodingKeys()
{
  return &type metadata for XGBoostArtifact.Booster.CodingKeys;
}

ValueMetadata *type metadata accessor for XGBoostArtifact.Objective.CodingKeys()
{
  return &type metadata for XGBoostArtifact.Objective.CodingKeys;
}

uint64_t _s18CreateMLComponents15XGBoostArtifactV4TreeV10ParametersV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_128_2(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_128_2(v8);
}

uint64_t _s18CreateMLComponents15XGBoostArtifactV4TreeV10ParametersV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22AA852B0 + 4 * byte_22ABF3F27[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_156_0_0 + 4 * byte_22ABF3F22[v4]))();
}

uint64_t sub_22AA852E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA852F0);
  return result;
}

uint64_t sub_22AA852F8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA85300);
  return OUTLINED_FUNCTION_155_0();
}

ValueMetadata *type metadata accessor for XGBoostArtifact.LearnerModelParam.CodingKeys()
{
  return &type metadata for XGBoostArtifact.LearnerModelParam.CodingKeys;
}

uint64_t sub_22AA85320()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22AA85360(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AA853D4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA85490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA85504(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return OUTLINED_FUNCTION_128_2(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return OUTLINED_FUNCTION_128_2(v2);
}

uint64_t sub_22AA85540(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return OUTLINED_FUNCTION_90_7(result, a2);
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      return OUTLINED_FUNCTION_90_7(result, a2);
  }
  return result;
}

void type metadata accessor for XGBoostArtifact.Model()
{
  OUTLINED_FUNCTION_24_2();
}

unint64_t sub_22AA85598()
{
  unint64_t result;

  result = qword_255B14790;
  if (!qword_255B14790)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF472C, &type metadata for XGBoostArtifact.LearnerModelParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14790);
  }
  return result;
}

unint64_t sub_22AA855D8()
{
  unint64_t result;

  result = qword_255B14798;
  if (!qword_255B14798)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF47E4, &type metadata for XGBoostArtifact.Objective.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14798);
  }
  return result;
}

unint64_t sub_22AA85618()
{
  unint64_t result;

  result = qword_255B147A0;
  if (!qword_255B147A0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF489C, &type metadata for XGBoostArtifact.Booster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147A0);
  }
  return result;
}

unint64_t sub_22AA85658()
{
  unint64_t result;

  result = qword_255B147A8;
  if (!qword_255B147A8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4954, &type metadata for XGBoostArtifact.Tree.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147A8);
  }
  return result;
}

unint64_t sub_22AA85698()
{
  unint64_t result;

  result = qword_255B147B0;
  if (!qword_255B147B0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF48C4, &type metadata for XGBoostArtifact.Tree.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147B0);
  }
  return result;
}

unint64_t sub_22AA856D8()
{
  unint64_t result;

  result = qword_255B147B8;
  if (!qword_255B147B8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF48EC, &type metadata for XGBoostArtifact.Tree.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147B8);
  }
  return result;
}

unint64_t sub_22AA85718()
{
  unint64_t result;

  result = qword_255B147C0;
  if (!qword_255B147C0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF480C, &type metadata for XGBoostArtifact.Booster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147C0);
  }
  return result;
}

unint64_t sub_22AA85758()
{
  unint64_t result;

  result = qword_255B147C8;
  if (!qword_255B147C8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4834, &type metadata for XGBoostArtifact.Booster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147C8);
  }
  return result;
}

unint64_t sub_22AA85798()
{
  unint64_t result;

  result = qword_255B147D0;
  if (!qword_255B147D0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4754, &type metadata for XGBoostArtifact.Objective.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147D0);
  }
  return result;
}

unint64_t sub_22AA857D8()
{
  unint64_t result;

  result = qword_255B147D8;
  if (!qword_255B147D8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF477C, &type metadata for XGBoostArtifact.Objective.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147D8);
  }
  return result;
}

unint64_t sub_22AA85818()
{
  unint64_t result;

  result = qword_255B147E0;
  if (!qword_255B147E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF469C, &type metadata for XGBoostArtifact.LearnerModelParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147E0);
  }
  return result;
}

unint64_t sub_22AA85858()
{
  unint64_t result;

  result = qword_255B147E8;
  if (!qword_255B147E8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF46C4, &type metadata for XGBoostArtifact.LearnerModelParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147E8);
  }
  return result;
}

unint64_t sub_22AA85894()
{
  unint64_t result;

  result = qword_255B147F8;
  if (!qword_255B147F8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4BE4, &type metadata for XGBoostArtifact.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B147F8);
  }
  return result;
}

unint64_t sub_22AA858D0()
{
  unint64_t result;

  result = qword_255B14800;
  if (!qword_255B14800)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4BBC, &unk_24F4C3E60);
    atomic_store(result, (unint64_t *)&qword_255B14800);
  }
  return result;
}

unint64_t sub_22AA8590C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255B14810;
  if (!qword_255B14810)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B14808);
    v2 = sub_22AA85970();
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255B14810);
  }
  return result;
}

unint64_t sub_22AA85970()
{
  unint64_t result;

  result = qword_255B14818;
  if (!qword_255B14818)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF40FC, &unk_24F4C33F0);
    atomic_store(result, (unint64_t *)&qword_255B14818);
  }
  return result;
}

ValueMetadata *type metadata accessor for XGBoostArtifact.Model.CodingKeys()
{
  return &type metadata for XGBoostArtifact.Model.CodingKeys;
}

uint64_t sub_22AA859BC()
{
  OUTLINED_FUNCTION_144();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_95_3();
}

void sub_22AA859E0(_QWORD *a1, _QWORD *a2)
{
  OUTLINED_FUNCTION_76_10(a1, a2);
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_21();
}

void sub_22AA85A0C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_55_12(a1, a2);
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_84_9();
  OUTLINED_FUNCTION_63_1();
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v2 + 40);
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_21();
}

void sub_22AA85A54(_QWORD *a1, _QWORD *a2)
{
  OUTLINED_FUNCTION_75_10(a1, a2);
  OUTLINED_FUNCTION_120_0();
  OUTLINED_FUNCTION_119_2();
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AA85A78(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return OUTLINED_FUNCTION_128_2(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return OUTLINED_FUNCTION_128_2(v2);
}

uint64_t sub_22AA85AB4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return OUTLINED_FUNCTION_90_7(result, a2);
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      return OUTLINED_FUNCTION_90_7(result, a2);
  }
  return result;
}

void type metadata accessor for XGBoostArtifact.GBTreeModelParam()
{
  OUTLINED_FUNCTION_24_2();
}

unint64_t sub_22AA85B08()
{
  unint64_t result;

  result = qword_255B14820;
  if (!qword_255B14820)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4B94, &type metadata for XGBoostArtifact.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14820);
  }
  return result;
}

unint64_t sub_22AA85B48()
{
  unint64_t result;

  result = qword_255B14828;
  if (!qword_255B14828)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4B04, &type metadata for XGBoostArtifact.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14828);
  }
  return result;
}

unint64_t sub_22AA85B88()
{
  unint64_t result;

  result = qword_255B14830;
  if (!qword_255B14830)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4B2C, &type metadata for XGBoostArtifact.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14830);
  }
  return result;
}

unint64_t sub_22AA85BC4()
{
  unint64_t result;

  result = qword_255B14840;
  if (!qword_255B14840)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4CEC, &type metadata for XGBoostArtifact.GBTreeModelParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14840);
  }
  return result;
}

uint64_t _s18CreateMLComponents15XGBoostArtifactV7LearnerV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_128_2(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_128_2((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_128_2(v8);
}

uint64_t _s18CreateMLComponents15XGBoostArtifactV7LearnerV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AA85CD0 + 4 * byte_22ABF3F31[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_156_0_1 + 4 * byte_22ABF3F2C[v4]))();
}

uint64_t sub_22AA85D08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA85D10);
  return result;
}

uint64_t sub_22AA85D18(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA85D20);
  return OUTLINED_FUNCTION_155_0();
}

ValueMetadata *type metadata accessor for XGBoostArtifact.GBTreeModelParam.CodingKeys()
{
  return &type metadata for XGBoostArtifact.GBTreeModelParam.CodingKeys;
}

unint64_t sub_22AA85D44()
{
  unint64_t result;

  result = qword_255B14848;
  if (!qword_255B14848)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4CC4, &type metadata for XGBoostArtifact.GBTreeModelParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14848);
  }
  return result;
}

unint64_t sub_22AA85D84()
{
  unint64_t result;

  result = qword_255B14850;
  if (!qword_255B14850)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4C34, &type metadata for XGBoostArtifact.GBTreeModelParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14850);
  }
  return result;
}

unint64_t sub_22AA85DC4()
{
  unint64_t result;

  result = qword_255B14858;
  if (!qword_255B14858)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4C5C, &type metadata for XGBoostArtifact.GBTreeModelParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14858);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_49()
{
  return sub_22ABDEC18();
}

uint64_t OUTLINED_FUNCTION_2_54()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_3_59()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_4_47()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_7_57()
{
  return sub_22ABDEDC8();
}

void OUTLINED_FUNCTION_8_43()
{
  sub_22AA35C2C();
}

uint64_t OUTLINED_FUNCTION_13_51()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_42()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_15_42()
{
  return sub_22ABDEDC8();
}

void OUTLINED_FUNCTION_16_37()
{
  sub_22AA35C2C();
}

uint64_t OUTLINED_FUNCTION_17_35()
{
  return sub_22ABDEC18();
}

uint64_t OUTLINED_FUNCTION_18_40()
{
  return sub_22ABDEC18();
}

uint64_t OUTLINED_FUNCTION_19_33()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_21_40()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_22_34()
{
  sub_22AB4CDFC();
}

uint64_t OUTLINED_FUNCTION_27_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 8))(v2, v1);
}

void OUTLINED_FUNCTION_30_24(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 32) = v1;
  *(_QWORD *)(a1 + 40) = v2;
}

uint64_t OUTLINED_FUNCTION_31_21()
{
  return sub_22ABDEDC8();
}

void OUTLINED_FUNCTION_34_24()
{
  sub_22AB4CE30();
}

void OUTLINED_FUNCTION_36_21()
{
  sub_22AB4CDFC();
}

uint64_t OUTLINED_FUNCTION_40_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_41_15()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_43_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_46_17()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_47_14()
{
  sub_22AB4D538();
}

void OUTLINED_FUNCTION_48_19()
{
  sub_22AB4CE30();
}

uint64_t OUTLINED_FUNCTION_50_17()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_52_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 8) + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_55_12(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_60_13()
{
  return sub_22ABDFC38();
}

void OUTLINED_FUNCTION_61_11()
{
  sub_22AA35C2C();
}

uint64_t OUTLINED_FUNCTION_63_9()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_64_7()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
}

uint64_t OUTLINED_FUNCTION_65_11()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_67_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_68_10()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_70_7()
{
  return sub_22ABDFC44();
}

uint64_t OUTLINED_FUNCTION_71_8()
{
  return sub_22ABDFD7C();
}

void OUTLINED_FUNCTION_72_8()
{
  sub_22AA35C2C();
}

void OUTLINED_FUNCTION_73_5()
{
  sub_22AA35C2C();
}

uint64_t OUTLINED_FUNCTION_75_10(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_76_10(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = a2[1];
  *a1 = *a2;
  a1[1] = result;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  return result;
}

void OUTLINED_FUNCTION_78_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 16) = v2;
  v5 = v3 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
}

void OUTLINED_FUNCTION_79_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 16) = v3;
  v5 = v4 + 16 * v1;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v2;
}

unint64_t OUTLINED_FUNCTION_80_10()
{
  return sub_22AA82BF4();
}

uint64_t OUTLINED_FUNCTION_84_9()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v0 + 24);
  return sub_22ABDEAEC();
}

void *OUTLINED_FUNCTION_87_7(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

_QWORD *OUTLINED_FUNCTION_89_4(_QWORD *a1, uint64_t a2)
{
  return __swift_project_boxed_opaque_existential_1(a1, a2);
}

uint64_t OUTLINED_FUNCTION_90_7(uint64_t result, int a2)
{
  *(_QWORD *)(result + 8) = (a2 - 1);
  return result;
}

BOOL OUTLINED_FUNCTION_91_5@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_92_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_95_3()
{
  return swift_bridgeObjectRelease();
}

BOOL OUTLINED_FUNCTION_100_3@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_101_4()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_103_2(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 32) = v1;
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_107_2(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_22AA82E44(a1, a2, v2);
}

unint64_t OUTLINED_FUNCTION_111_3(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_112_3()
{
  uint64_t v0;

  return sub_22A9E07F0(v0);
}

uint64_t OUTLINED_FUNCTION_114_1()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  return sub_22ABDFC44();
}

void OUTLINED_FUNCTION_118_2()
{
  sub_22AB4CDFC();
}

uint64_t OUTLINED_FUNCTION_119_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 40) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 24) = v2;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_121_2()
{
  sub_22AA35C2C();
}

uint64_t OUTLINED_FUNCTION_122_3()
{
  uint64_t v0;

  return sub_22A9E07F0(v0);
}

uint64_t OUTLINED_FUNCTION_124_1()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_125_2()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 + 192));
}

uint64_t OUTLINED_FUNCTION_128_2@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_129_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_131_1()
{
  return sub_22ABDF7A0();
}

void OUTLINED_FUNCTION_132_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = v0;
}

uint64_t OUTLINED_FUNCTION_135_1()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_136_1(uint64_t a1)
{
  return sub_22AA7B79C(a1);
}

uint64_t OUTLINED_FUNCTION_138_1()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_139_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_140_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 + 152));
}

void OUTLINED_FUNCTION_142_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v2) = v1;
}

uint64_t OUTLINED_FUNCTION_143_0()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_144()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_145()
{
  return sub_22ABE0244();
}

uint64_t OUTLINED_FUNCTION_146_0()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_147_0()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_149_0()
{
  return sub_22ABE0298();
}

uint64_t OUTLINED_FUNCTION_153(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_154_0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

_BYTE *OUTLINED_FUNCTION_155_0@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_156_0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_160_0()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_161_0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_22AA84494(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_163_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*FullyConnectedNetworkMultiLabelClassifier.configuration.modify())()
{
  return nullsub_1;
}

uint64_t _s18CreateMLComponents41FullyConnectedNetworkMultiLabelClassifierV13configurationAA0cdE13ConfigurationVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_DWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_DWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_DWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 48);
  return sub_22ABDEAEC();
}

void sub_22AA8653C()
{
  type metadata accessor for FullyConnectedNetworkMultiLabelClassifier();
}

double sub_22AA865B8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  ((void (*)(uint64_t *__return_ptr))FullyConnectedNetworkMultiLabelClassifier.configuration.getter)(&v7);
  v1 = v8;
  v2 = v9;
  v3 = v10;
  v4 = v11;
  v5 = v12;
  *(_QWORD *)v0 = v7;
  *(_DWORD *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 16) = v2;
  *(_DWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v5;
  result = *(double *)&v13;
  *(_OWORD *)(v0 + 48) = v13;
  return result;
}

void sub_22AA8660C()
{
  sub_22ABDEAEC();
  type metadata accessor for FullyConnectedNetworkMultiLabelClassifier();
}

uint64_t sub_22AA86688()
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t *))FullyConnectedNetworkMultiLabelClassifier.configuration.setter)(&v1);
}

uint64_t _s18CreateMLComponents41FullyConnectedNetworkMultiLabelClassifierV13configurationAA0cdE13ConfigurationVvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v2 = *a1;
  v3 = *((_DWORD *)a1 + 2);
  v4 = a1[2];
  v5 = *((_DWORD *)a1 + 6);
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v1 = v2;
  *(_DWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_DWORD *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = v6;
  *(_QWORD *)(v1 + 40) = v7;
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v9;
  return result;
}

void (*FullyConnectedNetworkMultiLabelClassifier.networkConfiguration.modify(_QWORD *a1, uint64_t a2))(void **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v5 = malloc(0x50uLL);
  *a1 = v5;
  v5[8] = a2;
  v5[9] = v2;
  v6 = *(_DWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_DWORD *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 32);
  v10 = *(_QWORD *)(v2 + 40);
  *v5 = *(_QWORD *)v2;
  *((_DWORD *)v5 + 2) = v6;
  v5[2] = v7;
  *((_DWORD *)v5 + 6) = v8;
  v5[4] = v9;
  v5[5] = v10;
  *((_OWORD *)v5 + 3) = *(_OWORD *)(v2 + 48);
  sub_22ABDEAEC();
  return sub_22AA867A4;
}

void sub_22AA867A4(void **a1, char a2)
{
  void *v2;
  _BYTE v3[64];

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_38_25();
    sub_22ABDEAEC();
    FullyConnectedNetworkMultiLabelClassifier.configuration.setter(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_38_25();
    FullyConnectedNetworkMultiLabelClassifier.configuration.setter(v3);
  }
  free(v2);
}

uint64_t FullyConnectedNetworkMultiLabelClassifier.labels.getter()
{
  return sub_22ABDEAEC();
}

uint64_t FullyConnectedNetworkMultiLabelClassifier.labels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*FullyConnectedNetworkMultiLabelClassifier.labels.modify())()
{
  return nullsub_1;
}

double static FullyConnectedNetworkMultiLabelClassifier.defaultConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_DWORD *)(a1 + 8) = 981668463;
  *(_QWORD *)(a1 + 16) = 1000;
  *(_DWORD *)(a1 + 24) = 1045220557;
  *(_QWORD *)(a1 + 32) = 16;
  *(_QWORD *)(a1 + 40) = 0x3F847AE147AE147BLL;
  *(_QWORD *)&result = 10;
  *(_OWORD *)(a1 + 48) = xmmword_22ABF4D40;
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  return result;
}

__n128 sub_22AA868B4@<Q0>(unint64_t a1@<X0>, __n128 *a2@<X1>, __n128 *a3@<X8>)
{
  unsigned __int32 v3;
  unint64_t v4;
  unsigned __int32 v5;
  unint64_t v6;
  unint64_t v7;
  __n128 result;

  v3 = a2->n128_u32[2];
  v4 = a2[1].n128_u64[0];
  v5 = a2[1].n128_u32[2];
  v6 = a2[2].n128_u64[0];
  v7 = a2[2].n128_u64[1];
  a3->n128_u64[0] = a2->n128_u64[0];
  a3->n128_u32[2] = v3;
  a3[1].n128_u64[0] = v4;
  a3[1].n128_u32[2] = v5;
  a3[2].n128_u64[0] = v6;
  a3[2].n128_u64[1] = v7;
  result = a2[3];
  a3[3] = result;
  a3[4].n128_u64[0] = a1;
  return result;
}

uint64_t FullyConnectedNetworkMultiLabelClassifier.fitted<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 128) = a4;
  *(_QWORD *)(v8 + 136) = a5;
  *(_QWORD *)(v8 + 112) = a2;
  *(_QWORD *)(v8 + 120) = a3;
  *(_QWORD *)(v8 + 104) = a1;
  *(_QWORD *)(v8 + 160) = *(_QWORD *)(a6 - 8);
  v9 = OUTLINED_FUNCTION_0_0();
  v10 = *v7;
  *(_QWORD *)(v8 + 168) = v9;
  *(_QWORD *)(v8 + 176) = v10;
  *(_DWORD *)(v8 + 264) = *((_DWORD *)v7 + 2);
  v11 = v7[2];
  *(_DWORD *)(v8 + 268) = *((_DWORD *)v7 + 6);
  v12 = v7[4];
  *(_QWORD *)(v8 + 184) = v11;
  *(_QWORD *)(v8 + 192) = v12;
  *(_QWORD *)(v8 + 200) = v7[5];
  *(_OWORD *)(v8 + 208) = *((_OWORD *)v7 + 3);
  *(_QWORD *)(v8 + 224) = v7[8];
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AA86974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v11 = *(_QWORD *)(v10 + 168);
  OUTLINED_FUNCTION_32_19(*(double *)(v10 + 200), *(float *)(v10 + 268), *(float *)(v10 + 264));
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(v10 + 208);
  *(_QWORD *)(v10 + 80) = v12;
  (*(void (**)(uint64_t))(v13 + 16))(v11);
  v14 = sub_22ABDE8A0();
  v15 = sub_22ABDF2D8();
  type metadata accessor for AnnotatedFeature(0, v14, v15, v16);
  v17 = sub_22ABDF11C();
  *(_QWORD *)(v10 + 232) = v17;
  *(_QWORD *)(v10 + 88) = v17;
  v18 = sub_22ABDF068();
  *(_QWORD *)(v10 + 240) = v18;
  *(_QWORD *)(v10 + 96) = v18;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 248) = v19;
  v20 = OUTLINED_FUNCTION_86_6();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v20);
  *v19 = v10;
  v19[1] = sub_22AA86ABC;
  sub_22AA86B54(*(_QWORD *)(v10 + 104), v10 + 88, v10 + 96, *(_QWORD *)(v10 + 120), *(_QWORD *)(v10 + 128), *(_QWORD **)(v10 + 136), v20, v20, a9, a10);
}

uint64_t sub_22AA86ABC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_69(&v4);
  *(_QWORD *)(v2 + 256) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_63_1();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_18_34();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_2_9((uint64_t (*)(void))v1[1]);
  }
}

uint64_t sub_22AA86B28()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AA86B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10[58] = a9;
  v10[59] = a10;
  v10[56] = a7;
  v10[57] = a8;
  v10[54] = a5;
  v10[55] = a6;
  v10[52] = a3;
  v10[53] = a4;
  v10[50] = a1;
  v10[51] = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F248);
  v10[60] = v12;
  v10[61] = *(_QWORD *)(v12 - 8);
  v10[62] = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14958);
  v10[63] = OUTLINED_FUNCTION_0_0();
  v10[64] = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14960);
  v10[65] = OUTLINED_FUNCTION_0_0();
  v13 = sub_22ABDDA0C();
  v10[66] = v13;
  v10[67] = *(_QWORD *)(v13 - 8);
  v10[68] = OUTLINED_FUNCTION_29_8();
  v10[69] = OUTLINED_FUNCTION_29_8();
  v10[70] = OUTLINED_FUNCTION_29_8();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14968);
  v10[71] = v14;
  v10[72] = *(_QWORD *)(v14 - 8);
  v10[73] = OUTLINED_FUNCTION_0_0();
  v15 = sub_22ABDD544();
  v10[74] = v15;
  v10[75] = *(_QWORD *)(v15 - 8);
  v10[76] = OUTLINED_FUNCTION_0_0();
  v16 = a6[2];
  v10[77] = v16;
  v17 = a6[3];
  v10[78] = v17;
  v18 = a6[4];
  v10[79] = v18;
  v19 = a6[5];
  v10[80] = v19;
  v20 = a6[8];
  v10[81] = v20;
  v21 = a6[9];
  v10[82] = v21;
  v22 = a6[10];
  v10[83] = v22;
  v23 = a6[11];
  v10[84] = v23;
  v10[20] = v16;
  v10[21] = v17;
  v10[22] = v18;
  v10[23] = v19;
  v10[24] = v20;
  v10[25] = v21;
  v10[26] = v22;
  v10[27] = v23;
  type metadata accessor for FullyConnectedNetworkMultiLabelClassifierModel();
}

uint64_t sub_22AA86CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 680) = a1;
  *(_QWORD *)(v2 + 688) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 + 696) = OUTLINED_FUNCTION_89_5();
  *(_QWORD *)(v2 + 704) = OUTLINED_FUNCTION_89_5();
  *(_QWORD *)(v2 + 712) = OUTLINED_FUNCTION_89_5();
  v3 = sub_22ABDE8A0();
  *(_QWORD *)(v2 + 720) = v3;
  *(_QWORD *)(v2 + 728) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 736) = OUTLINED_FUNCTION_0_0();
  v4 = sub_22ABDF2D8();
  *(_QWORD *)(v2 + 744) = v4;
  *(_QWORD *)(v2 + 752) = type metadata accessor for AnnotatedFeature(255, v3, v4, v5);
  v6 = sub_22ABDF5D8();
  *(_QWORD *)(v2 + 760) = v6;
  *(_QWORD *)(v2 + 768) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v2 + 776) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v2 + 784) = *(_QWORD *)v1;
  *(_DWORD *)(v2 + 1084) = *(_DWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 792) = *(_QWORD *)(v1 + 16);
  *(_DWORD *)(v2 + 1088) = *(_DWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 800) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 808) = *(_QWORD *)(v1 + 40);
  *(_OWORD *)(v2 + 816) = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(v2 + 832) = *(_QWORD *)(v1 + 64);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_34_25();
}

void sub_22AA86DB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  if ((sub_22ABDF380() & 1) == 0)
  {
    v1 = v0[97];
    v2 = v0[94];
    sub_22ABDF404();
    if (__swift_getEnumTagSinglePayload(v1, 1, v2) != 1)
    {
      v7 = v0[94];
      v8 = v0[92];
      v9 = v0[91];
      v19 = v0[58];
      v18 = v0[56];
      v17 = (_QWORD *)v0[55];
      v10 = v0[51];
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v9 + 16))(v8, v0[97], v0[90]);
      OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8));
      v11 = (_QWORD *)sub_22ABDE84C();
      OUTLINED_FUNCTION_28_4(v8, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
      OUTLINED_FUNCTION_67_9();
      sub_22AA89B10(v10, v11, v17, v18, v19);
      if ((OUTLINED_FUNCTION_65_12() & 1) == 0)
        sub_22AA89B10(v0[52], v11, (_QWORD *)v0[55], v0[57], v0[59]);
      v12 = v0[84];
      v13 = v0[81];
      v14 = v0[78];
      v15 = sub_22ABDEAEC();
      v0[105] = sub_22AB593D0(v15, v14, v13, v12);
      v0[106] = v16;
      OUTLINED_FUNCTION_67_9();
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      swift_getTupleTypeMetadata2();
      sub_22ABDF068();
      sub_22ABDEAC8();
      sub_22AB2821C();
    }
    (*(void (**)(_QWORD, _QWORD))(v0[96] + 8))(v0[97], v0[95]);
  }
  sub_22A9B7B50();
  swift_allocError();
  OUTLINED_FUNCTION_58_8(v3, 0xD000000000000030);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = 2;
  swift_willThrow(v5);
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_34();
  __asm { BR              X0 }
}

uint64_t sub_22AA87AC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_84_10();
  OUTLINED_FUNCTION_69(v3);
  v2[117] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v4 = v2[88];
    v5 = v2[86];
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_3_8();
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    v2[133] = v6;
    OUTLINED_FUNCTION_28_4(v4, v6);
    OUTLINED_FUNCTION_23();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = v2[88];
    v8 = v2[86];
    swift_bridgeObjectRelease();
    v2[118] = v0;
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    v2[119] = v9;
    OUTLINED_FUNCTION_87_4(v7, v9);
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

void sub_22AA87B84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t KeyPath;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = v0[111];
  v1 = v0[110];
  v39 = v0[104];
  v38 = v0[93];
  v40 = v0[84];
  v2 = v0[82];
  v34 = v2;
  v35 = v0[83];
  v3 = v0[81];
  v4 = v0[80];
  v30 = v3;
  v5 = v0[78];
  v37 = v5;
  v28 = v0[77];
  v29 = v0[79];
  v6 = v0[58];
  v33 = v0[59];
  v8 = v0[56];
  v7 = v0[57];
  v0[43] = v0[118];
  v9 = (_QWORD *)OUTLINED_FUNCTION_8_44();
  *v9 = v28;
  v9[1] = v5;
  v9[2] = v8;
  v9[3] = v7;
  v9[4] = v29;
  v9[5] = v4;
  v9[6] = v1;
  v9[7] = v36;
  v9[8] = v3;
  v9[9] = v2;
  v9[10] = v35;
  v9[11] = v40;
  v9[12] = v6;
  v9[13] = v33;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_11_3();
  v11 = (_QWORD *)OUTLINED_FUNCTION_8_44();
  v11[2] = v8;
  v11[3] = v7;
  v11[4] = v4;
  v11[5] = v1;
  v11[6] = v36;
  v11[7] = v3;
  v11[8] = v34;
  v11[9] = v35;
  v11[10] = v6;
  v11[11] = v33;
  v11[12] = KeyPath;
  v13 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA8B7B4, (uint64_t)v11, v8, v38, MEMORY[0x24BEE4078], v6, MEMORY[0x24BEE40A8], v12);
  swift_release();
  OUTLINED_FUNCTION_11_3();
  v0[46] = v13;
  type metadata accessor for ClassificationDistribution(255, v5, v40, v14);
  v15 = sub_22ABDF0F8();
  v0[120] = v15;
  v16 = OUTLINED_FUNCTION_86_6();
  v0[121] = v16;
  v17 = MEMORY[0x24BEE12C8];
  v18 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v15);
  v0[122] = v18;
  v19 = MEMORY[0x22E2E4D80](v17, v16);
  v0[123] = v19;
  static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A, B>(classifications:groundTruth:labels:)((uint64_t)(v0 + 43), (uint64_t)(v0 + 46), v39, v37, v15, v16, v40, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29,
    v4,
    v30,
    v31,
    v32);
}

uint64_t sub_22AA88944()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_84_10();
  OUTLINED_FUNCTION_69(v3);
  v2[128] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v4 = (void (*)(uint64_t, uint64_t))v2[119];
    v5 = v2[87];
    v6 = v2[85];
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_3_8();
    v4(v5, v6);
    OUTLINED_FUNCTION_23();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = (void (*)(uint64_t, uint64_t))v2[119];
    v8 = v2[87];
    v9 = v2[85];
    swift_bridgeObjectRelease();
    v2[129] = v0;
    v7(v8, v9);
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

void sub_22AA88A00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t KeyPath;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = v0[123];
  v33 = v0[121];
  v34 = v0[122];
  v32 = v0[120];
  v27 = v0[110];
  v28 = v0[111];
  v29 = v0[93];
  v30 = v0[104];
  v1 = v0[84];
  v2 = v0[83];
  v3 = v0[82];
  v26 = v2;
  v4 = v0[81];
  v5 = v0[80];
  v6 = v0[78];
  v22 = v0[77];
  v23 = v0[79];
  v7 = v0[57];
  v24 = v0[58];
  v25 = v0[59];
  v0[47] = v0[129];
  v8 = v0[56];
  v9 = (_QWORD *)OUTLINED_FUNCTION_8_44();
  *v9 = v22;
  v9[1] = v6;
  v9[2] = v8;
  v9[3] = v7;
  v9[4] = v23;
  v9[5] = v5;
  v9[6] = v27;
  v9[7] = v28;
  v9[8] = v4;
  v9[9] = v3;
  v9[10] = v2;
  v9[11] = v1;
  v9[12] = v24;
  v9[13] = v25;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_13_3();
  v11 = (_QWORD *)OUTLINED_FUNCTION_8_44();
  v11[2] = v8;
  v11[3] = v7;
  v11[4] = v5;
  v11[5] = v27;
  v11[6] = v28;
  v11[7] = v4;
  v11[8] = v3;
  v11[9] = v26;
  v11[10] = v24;
  v11[11] = v25;
  v11[12] = KeyPath;
  v13 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA8B830, (uint64_t)v11, v7, v29, MEMORY[0x24BEE4078], v25, MEMORY[0x24BEE40A8], v12);
  swift_release();
  OUTLINED_FUNCTION_13_3();
  v0[45] = v13;
  static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A, B>(classifications:groundTruth:labels:)((uint64_t)(v0 + 47), (uint64_t)(v0 + 45), v30, v6, v32, v33, v1, v34, v31, v14, v15, v16, v17, v18, v19, v20, v21, (uint64_t)(v0 + 39), (uint64_t)v0 + 1076,
    (uint64_t)(v0 + 41),
    (uint64_t)(v0 + 11),
    v22,
    v23);
}

uint64_t sub_22AA8946C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_20();
  *(_QWORD *)(v1 + 1048) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA894B0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((sub_22AA2F904() & 1) == 0)
  {
    v1 = FullyConnectedNetworkMultiLabelClassifierModel.debugDescription.getter();
    sub_22AA2F98C(v1, v2);
    OUTLINED_FUNCTION_3_8();
  }
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = *(_QWORD *)(v0 + 680);
  v6 = *(_QWORD *)(v0 + 400);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 576) + 8))(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 568));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA895E8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_20();
  *(_QWORD *)(v1 + 1056) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA8962C()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_53_9();
  v1 = (void (*)(uint64_t, uint64_t))v0[133];
  v2 = v0[89];
  v3 = v0[85];
  v4 = v0[72];
  v5 = v0[67];
  OUTLINED_FUNCTION_80_11();
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_44_19(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v1(v2, v3);
  OUTLINED_FUNCTION_0_50();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_97_3();
  return OUTLINED_FUNCTION_11(v6);
}

uint64_t sub_22AA896C8()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_53_9();
  v2 = (void (*)(uint64_t, uint64_t))v0[124];
  v3 = (void (*)(uint64_t, uint64_t))v0[119];
  v4 = v0[89];
  v5 = v0[85];
  v6 = v0[72];
  v7 = v0[70];
  OUTLINED_FUNCTION_80_11();
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v2(v7, v1);
  v3(v4, v5);
  OUTLINED_FUNCTION_0_50();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_97_3();
  return OUTLINED_FUNCTION_11(v8);
}

uint64_t sub_22AA89768()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_0_50();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_97_3();
  return OUTLINED_FUNCTION_11(v1);
}

uint64_t sub_22AA897D0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_24_32();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_0_50();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_97_3();
  return OUTLINED_FUNCTION_11(v1);
}

uint64_t FullyConnectedNetworkMultiLabelClassifier.fitted<A, B>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v11 + 168) = a9;
  *(_QWORD *)(v11 + 176) = a10;
  *(_QWORD *)(v11 + 152) = a7;
  *(_QWORD *)(v11 + 160) = a8;
  *(_QWORD *)(v11 + 136) = a5;
  *(_QWORD *)(v11 + 144) = a6;
  *(_QWORD *)(v11 + 120) = a3;
  *(_QWORD *)(v11 + 128) = a4;
  *(_QWORD *)(v11 + 104) = a1;
  *(_QWORD *)(v11 + 112) = a2;
  *(_QWORD *)(v11 + 184) = *(_QWORD *)(a8 - 8);
  *(_QWORD *)(v11 + 192) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v11 + 200) = *(_QWORD *)(a7 - 8);
  v13 = OUTLINED_FUNCTION_0_0();
  v14 = *v10;
  *(_QWORD *)(v11 + 208) = v13;
  *(_QWORD *)(v11 + 216) = v14;
  *(_DWORD *)(v11 + 304) = *((_DWORD *)v10 + 2);
  v15 = v10[2];
  *(_DWORD *)(v11 + 308) = *((_DWORD *)v10 + 6);
  v16 = v10[4];
  *(_QWORD *)(v11 + 224) = v15;
  *(_QWORD *)(v11 + 232) = v16;
  *(_QWORD *)(v11 + 240) = v10[5];
  *(_OWORD *)(v11 + 248) = *((_OWORD *)v10 + 3);
  *(_QWORD *)(v11 + 264) = v10[8];
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_34_25();
}

void sub_22AA898D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v11 = *(_QWORD *)(v10 + 208);
  v12 = *(_QWORD *)(v10 + 192);
  v25 = *(_QWORD *)(v10 + 184);
  v13 = *(_QWORD *)(v10 + 160);
  v14 = *(_QWORD *)(v10 + 120);
  OUTLINED_FUNCTION_32_19(*(double *)(v10 + 240), *(float *)(v10 + 308), *(float *)(v10 + 304));
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(v10 + 248);
  *(_QWORD *)(v10 + 80) = v15;
  OUTLINED_FUNCTION_110_3(v11, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
  v18 = sub_22ABDE8A0();
  v19 = sub_22ABDF2D8();
  type metadata accessor for AnnotatedFeature(0, v18, v19, v20);
  v21 = sub_22ABDF11C();
  *(_QWORD *)(v10 + 272) = v21;
  *(_QWORD *)(v10 + 88) = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v12, v14, v13);
  v22 = sub_22ABDF11C();
  *(_QWORD *)(v10 + 280) = v22;
  *(_QWORD *)(v10 + 96) = v22;
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 288) = v23;
  v24 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v24);
  *v23 = v10;
  v23[1] = sub_22AA89A64;
  sub_22AA86B54(*(_QWORD *)(v10 + 104), v10 + 88, v10 + 96, *(_QWORD *)(v10 + 128), *(_QWORD *)(v10 + 136), *(_QWORD **)(v10 + 144), v24, v24, a9, a10);
}

uint64_t sub_22AA89A64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_69(&v4);
  *(_QWORD *)(v2 + 296) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_63_1();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_18_34();
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_28_0();
    return OUTLINED_FUNCTION_2_9((uint64_t (*)(void))v1[1]);
  }
}

uint64_t sub_22AA89ADC()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA89B10(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[10];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v64 = a2;
  v66 = a1;
  v67 = a5;
  v7 = *v5;
  v8 = *((_DWORD *)v5 + 2);
  v9 = *((_DWORD *)v5 + 6);
  v10 = v5[4];
  v11 = v5[5];
  v12 = v5[6];
  v13 = v5[7];
  v14 = v5[8];
  v51 = v5[2];
  v52 = v7;
  v91 = v7;
  v92 = v8;
  v93 = v51;
  v94 = v9;
  v49 = v12;
  v50 = v10;
  v95 = v10;
  v96 = v11;
  v97 = v12;
  v98 = v13;
  v47 = v14;
  v48 = v13;
  v99 = v14;
  v15 = a3[3];
  v78 = a3[2];
  v79 = v15;
  v59 = v15;
  v16 = a3[4];
  v17 = a3[5];
  v61 = v78;
  v62 = v16;
  v80 = a4;
  v81 = v16;
  v18 = a3[6];
  v19 = a3[7];
  v82 = v17;
  v83 = v18;
  v65 = v17;
  v21 = a3[8];
  v20 = a3[9];
  v84 = v19;
  v85 = v21;
  v23 = a3[10];
  v22 = a3[11];
  v86 = v20;
  v87 = v23;
  v58 = v22;
  v88 = v22;
  v89 = a5;
  v69 = a4;
  v70 = v17;
  v55 = v19;
  v56 = v18;
  v71 = v18;
  v72 = v19;
  v53 = v20;
  v54 = v21;
  v73 = v21;
  v74 = v20;
  v24 = v78;
  v57 = v23;
  v75 = v23;
  v76 = a5;
  KeyPath = swift_getKeyPath();
  v25 = sub_22ABDE8A0();
  v60 = v69;
  v27 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA8B75C, (uint64_t)&v68, v69, v25, MEMORY[0x24BEE4078], v67, MEMORY[0x24BEE40A8], v26);
  swift_release();
  v90 = v27;
  v28 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkMultiLabelClassifier<A, B>, a3);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v28);
  v44 = v65;
  v64 = a3;
  sub_22AA3E434();
  result = swift_bridgeObjectRelease();
  if (!v63)
  {
    v91 = v52;
    v92 = v8;
    v93 = v51;
    v94 = v9;
    v95 = v50;
    v96 = v11;
    v97 = v49;
    v98 = v48;
    v99 = v47;
    MEMORY[0x24BDAC7A8](result);
    v43[0] = v24;
    v43[1] = v59;
    v30 = v65;
    v31 = v55;
    v32 = v56;
    v33 = v53;
    v34 = v54;
    v45 = v67;
    v35 = swift_getKeyPath();
    v63 = &v46;
    MEMORY[0x24BDAC7A8](v35);
    v36 = v60;
    v43[2] = v60;
    v43[3] = v30;
    v43[4] = v32;
    v43[5] = v31;
    v43[6] = v34;
    v43[7] = v33;
    v37 = v67;
    v43[8] = v57;
    v43[9] = v67;
    v44 = v38;
    v39 = sub_22ABDF2D8();
    v41 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA8B75C, (uint64_t)v43, v36, v39, MEMORY[0x24BEE4078], v37, MEMORY[0x24BEE40A8], v40);
    swift_release();
    v90 = v41;
    v42 = sub_22ABDF0F8();
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v42);
    sub_22AA8A66C();
    return OUTLINED_FUNCTION_58_1();
  }
  return result;
}

void sub_22AA89EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[5];
  _QWORD v35[10];

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14988);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_55_13();
  v12 = v6[2];
  v19[1] = v6[1];
  v21 = v12;
  v13 = v6[4];
  v22 = v6[3];
  v20 = v4;
  v23 = v13;
  v24 = v6[5];
  v25 = v2;
  v26 = v35;
  v27 = v10;
  v28 = v8;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F248);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA8B7D0, (uint64_t)v19, v4, v14, v15, v2, MEMORY[0x24BEE3F20], (uint64_t)v34);
  if (v0)
  {
    OUTLINED_FUNCTION_16();
  }
  else
  {
    if ((v35[7] & 0x8000000000000000) == 0)
    {
      v16 = sub_22ABDD568();
      v17 = sub_22ABDD55C();
      v34[3] = v16;
      v34[4] = MEMORY[0x24BE6B9E8];
      v34[0] = v17;
      v33 = 0;
      v31 = 0u;
      v32 = 0u;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F250);
      MEMORY[0x22E2E4D80](MEMORY[0x24BEE12D8], v18);
      v29 = MEMORY[0x24BE6C040];
      v30 = MEMORY[0x24BE6C040];
      OUTLINED_FUNCTION_76_6();
    }
    sub_22ABDFAD0();
    __break(1u);
  }
}

uint64_t sub_22AA8A100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = sub_22ABDDA0C();
  MEMORY[0x24BDAC7A8](v1);
  result = sub_22ABDF1DC();
  if (!v0)
    type metadata accessor for FullyConnectedNetworkMultiLabelClassifierModel();
  return result;
}

void sub_22AA8A1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD v68[2];
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[80];

  OUTLINED_FUNCTION_12();
  a19 = v22;
  a20 = v23;
  v67 = v21;
  v24 = v20;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v66 = v35;
  v59[1] = v36;
  v64 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14980);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_0();
  v62 = v39;
  v63 = OUTLINED_FUNCTION_71_9();
  v59[0] = *(_QWORD *)(v63 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)v59 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v61 = (char *)v59 - v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F248);
  v60 = *(_QWORD *)(v45 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_35_17(v47, v59[0]);
  memcpy(v78, v24, 0x48uLL);
  v48 = v30[2];
  v68[1] = v30[1];
  v70 = v48;
  v49 = v30[4];
  v71 = v30[3];
  v69 = v28;
  v72 = v49;
  v73 = v30[5];
  v74 = v26;
  v75 = v78;
  v76 = v34;
  v77 = v32;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  v51 = v67;
  v52 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA8B7D0, (uint64_t)v68, v28, v45, v50, v26, MEMORY[0x24BEE3F20], (uint64_t)&a10);
  if (!v51)
  {
    a10 = v52;
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F250);
    v54 = sub_22A9C8D60((unint64_t *)&qword_255B0F258, &qword_255B0F250, MEMORY[0x24BEE12E0]);
    sub_22AA8B184(v53, v54, v65);
    OUTLINED_FUNCTION_58_1();
    sub_22ABDD4CC();
    type metadata accessor for FullyConnectedNetwork();
    sub_22A9AF2E8();
    v55 = (uint64_t)v61;
    sub_22ABDD7E4();
    OUTLINED_FUNCTION_82_9((uint64_t)v42);
    sub_22ABDD4B4();
    v56 = *MEMORY[0x24BE6B9C8];
    v57 = sub_22ABDD550();
    v58 = v62;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v62, v56, v57);
    __swift_storeEnumTagSinglePayload(v58, 0, 1, v57);
    sub_22ABDD5BC();
    sub_22A9AD754(v58, &qword_255B14980);
    OUTLINED_FUNCTION_82_9((uint64_t)v42);
    OUTLINED_FUNCTION_82_9(v55);
    OUTLINED_FUNCTION_24_18(v65, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA8A524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9B55C4;
  return FullyConnectedNetworkMultiLabelClassifier.fitted<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22AA8A5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;
  uint64_t v19;
  uint64_t v20;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_22A9B24D4;
  return FullyConnectedNetworkMultiLabelClassifier.fitted<A, B>(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, v20, a6, a7, a8, v19);
}

void sub_22AA8A66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedConformanceWitness;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_12();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  AssociatedConformanceWitness = v6;
  v7 = *(_QWORD *)(v4 + 24);
  v8 = sub_22ABDF5D8();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v9);
  v26[3] = (uint64_t)v26 - v10;
  v26[2] = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_35_17(v12, v26[0]);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v1;
  v26[4] = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_55_13();
  v37 = *(_QWORD *)(v5 + 88);
  v38 = v7;
  if (sub_22ABDF278() < 2)
  {
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_58_8(v22, 0xD000000000000030);
    *(_QWORD *)(v24 + 16) = v23 - 9;
    *(_QWORD *)(v24 + 24) = 0x800000022ABE1C50;
    OUTLINED_FUNCTION_27_29(v25, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, AssociatedConformanceWitness, v3);
    sub_22ABDEE58();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_22ABDF650();
    v18 = v39;
    if (v39)
    {
      v31 = *(_QWORD *)(v5 + 16);
      v32 = v3;
      v30 = *(_OWORD *)(v5 + 32);
      v29 = *(_OWORD *)(v5 + 48);
      v28 = *(_OWORD *)(v5 + 64);
      v27 = *(_QWORD *)(v5 + 80);
      v19 = sub_22ABDF2D8();
      v20 = v38;
      v39 = v18;
      MEMORY[0x24BDAC7A8](v19);
      v26[-14] = v31;
      v26[-13] = v20;
      v26[-12] = v32;
      *(_OWORD *)&v26[-11] = v30;
      *(_OWORD *)&v26[-9] = v29;
      *(_OWORD *)&v26[-7] = v28;
      v21 = v37;
      v26[-5] = v27;
      v26[-4] = v21;
      v26[-3] = v36;
      v26[-2] = (uint64_t)&v40;
      OUTLINED_FUNCTION_76_6();
    }
    OUTLINED_FUNCTION_33_25();
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA8AA7C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  _QWORD v31[13];
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_12();
  v31[6] = v0;
  v2 = v1;
  v36 = v3;
  v37 = v4;
  v35 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v31[5] = v7;
  sub_22ABDD4F0();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v31[4] = v9;
  v10 = v2[3];
  v38 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v12);
  v33 = v2[2];
  v34 = v2;
  v31[12] = v2[4];
  v32 = sub_22ABDE8A0();
  v13 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v15 = (char *)v31 - v14;
  v16 = OUTLINED_FUNCTION_71_9();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_87();
  v31[0] = v18;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v31 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v31 - v23;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v31 - v27;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v15, v35, v32, v26);
  sub_22AA5A180((uint64_t)v15, v33, (uint64_t)v21);
  sub_22ABDD904();
  v31[3] = v17;
  v29 = *(void (**)(char *, uint64_t))(v17 + 8);
  v31[2] = v21;
  v29(v21, v16);
  v31[10] = v28;
  sub_22ABDD9E8();
  v31[1] = v24;
  v31[11] = v16;
  v31[9] = v29;
  v29(v24, v16);
  v30 = v34[11];
  v34 = (_QWORD *)v34[8];
  sub_22AB593D4(v36, v37, v10, v34, v30);
}

uint64_t sub_22AA8B184@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FE8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_26();
  v6 = sub_22ABDDA0C();
  v26 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_87();
  v25 = v8;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v24 = (char *)&v23 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v23 - v15;
  sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA8B378, 0, a1, v6, MEMORY[0x24BEE4078], a2, MEMORY[0x24BEE40A8], v17);
  sub_22ABDD4D8();
  OUTLINED_FUNCTION_50_18();
  OUTLINED_FUNCTION_77_9();
  sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA8B394, 0, a1, v6, MEMORY[0x24BEE4078], a2, MEMORY[0x24BEE40A8], v18);
  OUTLINED_FUNCTION_50_18();
  OUTLINED_FUNCTION_77_9();
  v19 = v26;
  v20 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v20(v24, v16, v6);
  v20(v25, v14, v6);
  sub_22ABDD4C0();
  v21 = *(void (**)(char *, uint64_t))(v19 + 8);
  v21(v14, v6);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v6);
}

uint64_t sub_22AA8B378(uint64_t a1, uint64_t a2)
{
  return sub_22AA8B3B0(a1, a2, (void (*)(uint64_t))MEMORY[0x24BE6B808]);
}

uint64_t sub_22AA8B394(uint64_t a1, uint64_t a2)
{
  return sub_22AA8B3B0(a1, a2, (void (*)(uint64_t))MEMORY[0x24BE6B7F8]);
}

uint64_t sub_22AA8B3B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = OUTLINED_FUNCTION_71_9();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_26();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F248);
  a3(v7);
  sub_22ABDD8BC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
}

void sub_22AA8B44C()
{
  type metadata accessor for FullyConnectedNetworkMultiLabelClassifier();
}

void sub_22AA8B4A8()
{
  sub_22AA8AA7C();
}

void sub_22AA8B4EC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA8B4FC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AA8B514()
{
  return 80;
}

void *sub_22AA8B520(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x50uLL);
}

uint64_t sub_22AA8B534()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA8B55C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA8B5B8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA8B64C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA8B6C0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA8B700(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for FullyConnectedNetworkMultiLabelClassifier()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA8B75C()
{
  OUTLINED_FUNCTION_93_5();
  OUTLINED_FUNCTION_8_40();
}

BOOL sub_22AA8B778()
{
  return (sub_22ABDF2C0() & 1) == 0;
}

void sub_22AA8B7B4()
{
  OUTLINED_FUNCTION_94_5();
  OUTLINED_FUNCTION_8_40();
}

void sub_22AA8B7D0()
{
  sub_22AA8B7E4();
}

void sub_22AA8B7E4()
{
  sub_22AA8B44C();
}

void sub_22AA8B830()
{
  sub_22AA8B7B4();
}

uint64_t OUTLINED_FUNCTION_0_50()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_7_58(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  strcpy((char *)&a1[2], "training_loss");
  a1[2].n128_u16[7] = -4864;
  return sub_22A9A9840(v2);
}

uint64_t OUTLINED_FUNCTION_8_44()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_14_43()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_16_38()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 712);
}

double OUTLINED_FUNCTION_23_36@<D0>(unint64_t a1@<X0>, __n128 *a2@<X1>, __n128 *a3@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_22AA868B4(a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_24_32()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[72] + 8))(v0[73], v0[71]);
}

uint64_t OUTLINED_FUNCTION_27_29(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 32) = 5;
  return swift_willThrow(a1);
}

void OUTLINED_FUNCTION_32_19(double a1, float a2, float a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 16) = v5;
  *(float *)(v6 + 24) = a3;
  *(_QWORD *)(v6 + 32) = v4;
  *(float *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = v3;
  *(double *)(v6 + 56) = a1;
}

uint64_t OUTLINED_FUNCTION_33_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 304) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_34_25()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_35_17(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 328) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_44_19@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_46_18@<X0>(uint64_t (**a1)(uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v3 = *a1;
  *(_QWORD *)(v2 - 104) = v1;
  return v3(v2 - 104);
}

uint64_t OUTLINED_FUNCTION_50_18()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_51_20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;

  v2 = *v0;
  v3 = (uint64_t *)(v1 - 8);
  *v3 = *v0;
  result = *(_QWORD *)(v2 + 1040);
  *v3 = *v0;
  return result;
}

void *OUTLINED_FUNCTION_55_13()
{
  const void *v0;
  uint64_t v1;

  return memcpy((void *)(v1 - 160), v0, 0x48uLL);
}

void OUTLINED_FUNCTION_58_8(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_59_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_61_12()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

void OUTLINED_FUNCTION_62_10()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t OUTLINED_FUNCTION_63_10()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_64_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_65_12()
{
  return sub_22ABDF380();
}

void OUTLINED_FUNCTION_67_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  *(_QWORD *)(v2 - 184) = v1;
  *(_DWORD *)(v2 - 176) = v4;
  *(_QWORD *)(v2 - 168) = v0;
  *(_DWORD *)(v2 - 160) = v3;
}

uint64_t OUTLINED_FUNCTION_71_9()
{
  return sub_22ABDDA0C();
}

__n128 OUTLINED_FUNCTION_73_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,__int128 a33)
{
  return (__n128)a33;
}

uint64_t OUTLINED_FUNCTION_77_9()
{
  return sub_22ABDD8D4();
}

uint64_t OUTLINED_FUNCTION_79_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_80_11()
{
  uint64_t v0;

  return sub_22A9ADA48(*(_QWORD *)(v0 + 424));
}

uint64_t OUTLINED_FUNCTION_82_9(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_83_11@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

void OUTLINED_FUNCTION_84_10()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_85_9()
{
  return sub_22ABDD9AC();
}

uint64_t OUTLINED_FUNCTION_89_5()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_90_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_93_5()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_94_5()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_95_4()
{
  return sub_22A9C38B4();
}

uint64_t OUTLINED_FUNCTION_97_3()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

unint64_t OUTLINED_FUNCTION_101_5(float a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
  return sub_22A9ADA0C();
}

uint64_t sub_22AA8BBE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_22ABDDA0C();
  v3 = OUTLINED_FUNCTION_16_39(v2);
  MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_22ABDD4F0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_26();
  OUTLINED_FUNCTION_21_41();
  v7 = sub_22ABDD508();
  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v8(v1, v5);
  OUTLINED_FUNCTION_21_41();
  v15 = sub_22ABDD508();
  v8(v1, v5);
  sub_22ABDD8C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  result = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(result + 16) = xmmword_22ABF3ED0;
  *(_QWORD *)(result + 32) = v7;
  v10 = v0[1];
  v11 = *v0 * v10;
  if ((unsigned __int128)(*v0 * (__int128)v10) >> 64 == v11 >> 63)
  {
    *(_QWORD *)(result + 40) = v11;
    *(_QWORD *)(result + 48) = v15;
    *(_QWORD *)(result + 56) = 1;
    sub_22ABDD4FC();
    OUTLINED_FUNCTION_17_36();
    v8(v1, v5);
    OUTLINED_FUNCTION_1_44();
    OUTLINED_FUNCTION_0_51();
    type metadata accessor for SpatialTemporalGraphConvolutionModel();
    sub_22ABDDAE4();
    OUTLINED_FUNCTION_10_37();
    OUTLINED_FUNCTION_1_44();
    OUTLINED_FUNCTION_0_51();
    v12 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v12 + 16) = xmmword_22ABF3ED0;
    *(_QWORD *)(v12 + 32) = v7;
    *(_OWORD *)(v12 + 40) = *(_OWORD *)v0;
    *(_QWORD *)(v12 + 56) = v15;
    sub_22ABDD4FC();
    OUTLINED_FUNCTION_17_36();
    v8(v1, v5);
    OUTLINED_FUNCTION_1_44();
    OUTLINED_FUNCTION_0_51();
    sub_22ABDD8C8();
    OUTLINED_FUNCTION_1_44();
    OUTLINED_FUNCTION_0_51();
    type metadata accessor for SpatialTemporalGraphConvolution();
    sub_22A9BED8C(&qword_255B14AE0, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolution, (uint64_t)&unk_22ABF5434);
    sub_22ABDF02C();
    OUTLINED_FUNCTION_1_44();
    OUTLINED_FUNCTION_0_51();
    OUTLINED_FUNCTION_10_37();
    OUTLINED_FUNCTION_1_44();
    OUTLINED_FUNCTION_0_51();
    OUTLINED_FUNCTION_19_35();
    OUTLINED_FUNCTION_10_37();
    OUTLINED_FUNCTION_1_44();
    OUTLINED_FUNCTION_0_51();
    v13 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v13 + 16) = xmmword_22ABE9FB0;
    v14 = v0[4];
    *(_QWORD *)(v13 + 32) = v7;
    *(_QWORD *)(v13 + 40) = v14;
    sub_22ABDD4FC();
    OUTLINED_FUNCTION_17_36();
    v8(v1, v5);
    return OUTLINED_FUNCTION_1_44();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22AA8BF38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000022ABE43C0 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x74756C6F766E6F63 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x676E696C6F6F70 && a2 == 0xE700000000000000;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x6E63677473 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_22AA8C174(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA8C1B4 + 4 * byte_22ABF4E50[a1]))(0x72756769666E6F63, 0xED00006E6F697461);
}

unint64_t sub_22AA8C1B4()
{
  return 0xD000000000000012;
}

uint64_t sub_22AA8C1D0()
{
  return 0x74756C6F766E6F63;
}

uint64_t sub_22AA8C1F0()
{
  return 0x676E696C6F6F70;
}

uint64_t sub_22AA8C208()
{
  return 0x6E63677473;
}

void sub_22AA8C21C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 *v9;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  char v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14B28);
  OUTLINED_FUNCTION_18_41();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_20_36();
  OUTLINED_FUNCTION_19_16();
  v6 = *((_QWORD *)v0 + 4);
  v7 = v0[1];
  v12 = *v0;
  v13 = v7;
  *(_QWORD *)&v14 = v6;
  v16 = 0;
  sub_22AA8D984();
  OUTLINED_FUNCTION_5_24();
  if (!v1)
  {
    v8 = type metadata accessor for SpatialTemporalGraphConvolutionModel();
    LOBYTE(v12) = 1;
    sub_22ABDDAE4();
    sub_22A9BED8C(&qword_255B11088, (uint64_t (*)(uint64_t))MEMORY[0x24BE6C190], MEMORY[0x24BE6C1A0]);
    OUTLINED_FUNCTION_5_24();
    LOBYTE(v12) = 2;
    sub_22ABDD8B0();
    sub_22A9BED8C(&qword_255B14B38, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BE58], MEMORY[0x24BE6BE68]);
    OUTLINED_FUNCTION_5_24();
    v9 = (__int128 *)((char *)v0 + *(int *)(v8 + 28));
    v10 = *((_BYTE *)v9 + 48);
    v11 = v9[1];
    v12 = *v9;
    v13 = v11;
    v14 = v9[2];
    v15 = v10;
    v16 = 3;
    sub_22AA8D9C0();
    OUTLINED_FUNCTION_5_24();
    *(_QWORD *)&v12 = *(_QWORD *)((char *)v0 + *(int *)(v8 + 32));
    v16 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B14B10);
    sub_22AA8D9FC(&qword_255B14B48, &qword_255B14B50, (uint64_t)&unk_22ABF53E4, MEMORY[0x24BEE12A0]);
    OUTLINED_FUNCTION_5_24();
  }
  OUTLINED_FUNCTION_35_6((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_25_1();
}

void sub_22AA8C454(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v20 = sub_22ABDD8B0();
  v2 = OUTLINED_FUNCTION_16_39(v20);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_33();
  v5 = v4 - v3;
  v6 = sub_22ABDDAE4();
  v18 = *(_QWORD *)(v6 - 8);
  v19 = v6;
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14AE8);
  v10 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_33();
  v21 = (int *)type metadata accessor for SpatialTemporalGraphConvolutionModel();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_33();
  v13 = v12 - v11;
  OUTLINED_FUNCTION_20_36();
  sub_22ABE0298();
  if (v1)
  {
    OUTLINED_FUNCTION_24_33();
  }
  else
  {
    sub_22AA8D88C();
    OUTLINED_FUNCTION_11_47();
    *(_OWORD *)v13 = v22;
    *(_OWORD *)(v13 + 16) = v23;
    *(_QWORD *)(v13 + 32) = v24;
    sub_22A9BED8C(&qword_255B11070, (uint64_t (*)(uint64_t))MEMORY[0x24BE6C190], MEMORY[0x24BE6C1A8]);
    OUTLINED_FUNCTION_11_47();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v13 + v21[5], v9, v19);
    LOBYTE(v22) = 2;
    sub_22A9BED8C(&qword_255B14B00, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BE58], MEMORY[0x24BE6BE70]);
    OUTLINED_FUNCTION_11_47();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v13 + v21[6], v5, v20);
    sub_22AA8D8C8();
    OUTLINED_FUNCTION_11_47();
    v14 = v13 + v21[7];
    *(_OWORD *)v14 = v22;
    *(_OWORD *)(v14 + 16) = v23;
    *(_OWORD *)(v14 + 32) = v24;
    *(_BYTE *)(v14 + 48) = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B14B10);
    sub_22AA8D9FC(&qword_255B14B18, &qword_255B14B20, (uint64_t)&unk_22ABF540C, MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_11_47();
    OUTLINED_FUNCTION_4_48(v10);
    *(_QWORD *)(v13 + v21[8]) = v22;
    sub_22AA8D904(v13, a1);
    OUTLINED_FUNCTION_24_33();
    sub_22AA8D948(v13);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA8C860()
{
  unsigned __int8 *v0;

  return sub_22AA8C174(*v0);
}

uint64_t sub_22AA8C868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA8BF38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA8C88C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA4A46C();
  *a1 = result;
  return result;
}

uint64_t sub_22AA8C8B0()
{
  sub_22AA8D850();
  return sub_22ABE02EC();
}

uint64_t sub_22AA8C8D8()
{
  sub_22AA8D850();
  return sub_22ABE02F8();
}

void sub_22AA8C904(uint64_t a1@<X8>)
{
  sub_22AA8C454(a1);
}

void sub_22AA8C918()
{
  sub_22AA8C21C();
}

uint64_t sub_22AA8C92C()
{
  sub_22A9BED8C(&qword_255B14B58, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolutionModel, (uint64_t)&unk_22ABF4FFC);
  return sub_22ABDD82C();
}

uint64_t sub_22AA8C97C()
{
  sub_22A9BED8C(&qword_255B14B58, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolutionModel, (uint64_t)&unk_22ABF4FFC);
  return sub_22ABDD844();
}

uint64_t sub_22AA8C9D4(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  char v9;

  if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE2910 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x746E696F7079656BLL && a2 == 0xED0000746E756F43;
    if (v5 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6953776F646E6977 && a2 == 0xEA0000000000657ALL;
      if (v6 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v7 = a1 == 0x7A69536863746162 && a2 == 0xE900000000000065;
        if (v7 || (sub_22ABDFF68() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x756F436C6562616CLL && a2 == 0xEA0000000000746ELL)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_22ABDFF68();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_22AA8CC1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22AA8CC54 + 4 * byte_22ABF4E55[a1]))(0xD000000000000011, 0x800000022ABE2910);
}

uint64_t sub_22AA8CC54()
{
  return 0x746E696F7079656BLL;
}

uint64_t sub_22AA8CC78()
{
  return 0x6953776F646E6977;
}

uint64_t sub_22AA8CC94()
{
  return 0x7A69536863746162;
}

uint64_t sub_22AA8CCB0()
{
  return 0x756F436C6562616CLL;
}

void sub_22AA8CCD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v7[16];

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14B70);
  OUTLINED_FUNCTION_18_41();
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v7[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA8DA80();
  OUTLINED_FUNCTION_19_16();
  v7[15] = 0;
  OUTLINED_FUNCTION_63();
  if (!v1)
  {
    v7[14] = 1;
    OUTLINED_FUNCTION_63();
    v7[13] = 2;
    OUTLINED_FUNCTION_63();
    v7[12] = 3;
    OUTLINED_FUNCTION_63();
    v7[11] = 4;
    OUTLINED_FUNCTION_63();
  }
  OUTLINED_FUNCTION_35_6((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_25_1();
}

void sub_22AA8CDF0(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14B60);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_26();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA8DA80();
  sub_22ABE0298();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_21_35();
    v7 = OUTLINED_FUNCTION_21_35();
    v10 = OUTLINED_FUNCTION_21_35();
    v9 = OUTLINED_FUNCTION_21_35();
    v8 = OUTLINED_FUNCTION_21_35();
    OUTLINED_FUNCTION_0_24();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v10;
    a2[3] = v9;
    a2[4] = v8;
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA8CF54()
{
  unsigned __int8 *v0;

  return sub_22AA8CC1C(*v0);
}

uint64_t sub_22AA8CF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA8C9D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA8CF80()
{
  sub_22AA8DA80();
  return sub_22ABE02EC();
}

uint64_t sub_22AA8CFA8()
{
  sub_22AA8DA80();
  return sub_22ABE02F8();
}

double sub_22AA8CFD0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_22AA8CDF0(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

void sub_22AA8D014(_QWORD *a1)
{
  sub_22AA8CCD0(a1);
}

uint64_t sub_22AA8D028()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SpatialTemporalGraphConvolutionModel.BundleWitness()
{
  return objc_opt_self();
}

_QWORD *sub_22AA8D058(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = a2[4];
    v8 = a3[5];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_22ABDDAE4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_22ABDD8B0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)v4 + v16;
    v19 = (uint64_t)a2 + v16;
    v20 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    *((_OWORD *)v18 + 2) = *(_OWORD *)(v19 + 32);
    v18[48] = *(_BYTE *)(v19 + 48);
    *(_QWORD *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    sub_22ABDEAEC();
  }
  return v4;
}

uint64_t sub_22AA8D154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22ABDDAE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_22ABDD8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AA8D1CC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDAE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_22ABDD8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AA8D29C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22ABDDAE4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_22ABDD8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
  *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
  v15[48] = v16[48];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA8D3B4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDAE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_22ABDD8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  return a1;
}

uint64_t sub_22AA8D480(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDAE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_22ABDD8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AA8D554()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA8D560(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_13_52();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = a3[5];
    return __swift_getEnumTagSinglePayload(v4 + v8, v3, v7);
  }
  v9 = OUTLINED_FUNCTION_19_35();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = a3[6];
    return __swift_getEnumTagSinglePayload(v4 + v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + a3[8]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

